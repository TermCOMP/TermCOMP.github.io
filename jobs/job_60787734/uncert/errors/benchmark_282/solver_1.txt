last 2436 length 10677
CNF 2436 vars 10677 clauses
last 2674 length 12008
CNF 2674 vars 12008 clauses
last 675 length 2844
last 754 length 3236
last 985 length 4330
CNF 675 vars 2844 clauses
CNF 754 vars 3236 clauses
last 860 length 3646
CNF 985 vars 4330 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1444, clauses: 5296
CNF 860 vars 3646 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4977, clauses: 20757
last 1444 length 5296
last 4977 length 20757
CNF 1444 vars 5296 clauses
CNF 4977 vars 20757 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7191
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6228, clauses: 25985
last 1943 length 7191
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1444, clauses: 5296, status: Unsatisfied, time: 0.158663302s
last 6228 length 25985
CNF 6228 vars 25985 clauses
CNF 1943 vars 7191 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2998, clauses: 12454
last 2998 length 12454
CNF 2998 vars 12454 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4977, clauses: 20757, status: Unsatisfied, time: 0.272452097s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7191, status: Unsatisfied, time: 0.137930501s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2373, clauses: 9180
last 2373 length 9180
CNF 2373 vars 9180 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3762, clauses: 15617
last 3762 length 15617
last 3499 length 15588
CNF 3762 vars 15617 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2998, clauses: 12454, status: Unsatisfied, time: 0.230202239s
last 3010 length 13227
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2373, clauses: 9180, status: Unsatisfied, time: 0.177926396s
last 4620 length 21668
CNF 3499 vars 15588 clauses
CNF 3010 vars 13227 clauses
last 5524 length 27610
CNF 4620 vars 21668 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4449, clauses: 17049
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8557, clauses: 37310
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4503, clauses: 16910
CNF 5524 vars 27610 clauses
last 4449 length 17049
last 8557 length 37310
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3762, clauses: 15617, status: Unsatisfied, time: 0.790072655s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5181, clauses: 19565
last 4503 length 16910
CNF 4449 vars 17049 clauses
CNF 8557 vars 37310 clauses
last 5181 length 19565
CNF 4503 vars 16910 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18281, clauses: 77189
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3188, clauses: 12459
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6228, clauses: 25985, status: Unsatisfied, time: 1.291887218s
last 18281 length 77189
CNF 5181 vars 19565 clauses
last 3188 length 12459
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19572, clauses: 82503
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4503, clauses: 16910, status: Unsatisfied, time: 0.919096846s
CNF 18281 vars 77189 clauses
CNF 3188 vars 12459 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5181, clauses: 19565, status: Satisfied, time: 0.863079117s
last 19572 length 82503
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10420, clauses: 45420
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3188, clauses: 12459, status: Satisfied, time: 0.844732865s
last 10420 length 45420
CNF 19572 vars 82503 clauses
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       mirror
SRS with 2 rules on 2 letters       DP
SRS with 5 strict rules and 2 weak rules on 4 letters       weights
SRS with 2 strict rules and 2 weak rules on 4 letters       EDG
SRS with 2 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 4 letters       weights
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [0, 0, 0, 1] {- Input 0 -}
  [1, 0, 0, 1] -> [0, 0, 1, 0] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [1, 0, 0, 0] {- Mirror (Input 0) -}
  [1, 0, 0, 1] -> [0, 1, 0, 0] {- Mirror (Input 1) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 1, 0, 0] {- DP Nontop (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [1#, 0, 0] {- DP (Top 1) (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#] {- DP (Top 3) (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#, 1, 0, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#, 0] {- DP (Top 2) (Mirror (Input 1)) -}
  [0#, 0, 0, 0] |-> [1#, 0, 0, 0] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  (1, 1/1)
  (0, 1/1)
  (1#, 0/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 1, 0, 0] {- DP Nontop (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#, 1, 0, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  [0#, 0, 0, 0] |-> [1#, 0, 0, 0] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 0, 0, 1] |-> [0#, 1, 0, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  [0#, 0, 0, 0] |-> [1#, 0, 0, 0] {- DP (Top 0) (Mirror (Input 0)) -}
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 1, 0, 0] {- DP Nontop (Mirror (Input 1)) -}
reason
  ( 1
  , Wk  / 4A 4A 4A 8A - \
        | 0A 4A 4A 4A - |
        | 0A 0A 0A 4A - |
        | 0A 0A 0A 4A - |
        \ -  -  -  -  - / )
  ( 0
  , Wk  / 0A 4A 4A 4A - \
        | 0A 0A 4A 4A - |
        | 0A 0A 4A 4A - |
        | 0A 0A 0A 0A - |
        \ -  -  -  -  - / )
  ( 1#
  , Wk  / 17A 17A 17A 21A - \
        | 17A 17A 17A 21A - |
        | 17A 17A 17A 21A - |
        | 17A 17A 17A 21A - |
        \ -   -   -   -   - / )
  ( 0#
  , Wk  / 17A 17A 18A 21A - \
        | 17A 17A 18A 21A - |
        | 17A 17A 18A 21A - |
        | 17A 17A 18A 21A - |
        \ -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [1#, 0, 0, 1] |-> [0#, 1, 0, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 1, 0, 0] {- DP Nontop (Mirror (Input 1)) -}
reason
  (1, 0/1)
  (0, 0/1)
  (1#, 1/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 1, 0, 0] {- DP Nontop (Mirror (Input 1)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(2,2)\Deepee(5/2,4)\Weight\EDG(2/2,4)\Matrix{\Arctic}{4}(1/2,4)\Weight(0/2,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.904102071000
  min duration 0.030920458000
  total durat. 1.941752467000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.080043304000
  min duration 0.039795273000
  total durat. 2.054480637000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 120}
    , self = 91
    , parent = Nothing
    , duration = 1.080043304000
    , status = Fail
    , start = 2025-09-03 11:21:28.665490646 UTC
    , finish = 2025-09-03 11:21:29.74553395 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.583440337000
  min duration 0.162395823000
  total durat. 1.282047525000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.614317843000
  min duration 0.317947455000
  total durat. 1.932265298000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 93
    , parent = Nothing
    , duration = 1.614317843000
    , status = Fail
    , start = 2025-09-03 11:21:28.491000041 UTC
    , finish = 2025-09-03 11:21:30.105317884 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.022100657000
  min duration 0.384564715000
  total durat. 1.406665372000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 92
    , parent = Nothing
    , duration = 1.022100657000
    , status = Fail
    , start = 2025-09-03 11:21:28.785502701 UTC
    , finish = 2025-09-03 11:21:29.807603358 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.357691818000
  min duration 1.357691818000
  total durat. 1.357691818000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 120}
    , self = 95
    , parent = Nothing
    , duration = 1.357691818000
    , status = Success
    , start = 2025-09-03 11:21:29.5537814 UTC
    , finish = 2025-09-03 11:21:30.911473218 UTC
    , thread_cap_info = ("ThreadId 145", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.332236919000
  min duration 0.216626056000
  total durat. 1.846557286000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 100}
    , self = 94
    , parent = Nothing
    , duration = 1.332236919000
    , status = Fail
    , start = 2025-09-03 11:21:29.411875371 UTC
    , finish = 2025-09-03 11:21:30.74411229 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.173209643000
  min duration 1.173209643000
  total durat. 1.173209643000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 97
    , parent = Nothing
    , duration = 1.173209643000
    , status = Success
    , start = 2025-09-03 11:21:29.825502147 UTC
    , finish = 2025-09-03 11:21:30.99871179 UTC
    , thread_cap_info = ("ThreadId 149", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.080635788000
  min duration 3.080635788000
  total durat. 3.080635788000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 102
    , parent = Nothing
    , duration = 3.080635788000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:21:28.045494267 UTC
    , finish = 2025-09-03 11:21:31.126130055 UTC
    , thread_cap_info = ("ThreadId 86", 1, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                  = 16} , self = 48 , parent = Nothing , duration = 0.164164430000 , status
F                  = Fail , start = 2025-09-03 11:21:27.915412944 UTC , finish = 2025-09-03
F                  11:21:28.079577374 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                = 16} , self = 46 , parent = Nothing , duration = 0.115920482000 , status
| F                = Fail , start = 2025-09-03 11:21:27.926130606 UTC , finish = 2025-09-03
| F                11:21:28.042051088 UTC , thread_cap_info = ("ThreadId 43", 1, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 4 , total_length = 80} , self = 49 , parent = Nothing
| | F              , duration = 0.162395823000 , status = Fail , start = 2025-09-03 11:21:27.985529959
| | F              UTC , finish = 2025-09-03 11:21:28.147925782 UTC , thread_cap_info = ("ThreadId
| | F              73", 2, False)}
| | F              
| | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F            = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | | F            = 0 , alphabet_size = 4 , total_length = 80} , self = 69 , parent = Nothing
| | | F            , duration = 0.583440337000 , status = Fail , start = 2025-09-03 11:21:28.011208186
| | | F            UTC , finish = 2025-09-03 11:21:28.594648523 UTC , thread_cap_info = ("ThreadId
| | | F            75", 2, False)}
| | | F            
| F | |            
| F | |            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F | |            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F | |            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F | |            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F | |            = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| F | |            = 0 , alphabet_size = 2 , total_length = 16} , self = 51 , parent = Nothing
| F | |            , duration = 0.330429224000 , status = Fail , start = 2025-09-03 11:21:28.042067779
| F | |            UTC , finish = 2025-09-03 11:21:28.372497003 UTC , thread_cap_info = ("ThreadId
| F | |            82", 3, False)}
| F | |            
| | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F          = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | | F          = 0 , alphabet_size = 2 , total_length = 16} , self = 50 , parent = Nothing
| | | | F          , duration = 0.205782141000 , status = Fail , start = 2025-09-03 11:21:28.045487726
| | | | F          UTC , finish = 2025-09-03 11:21:28.251269867 UTC , thread_cap_info = ("ThreadId
| | | | F          84", 3, False)}
| | | | F          
| | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E        = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E        = 16} , self = 102 , parent = Nothing , duration = 3.080635788000 , status
| | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 11:21:28.045494267 UTC ,
| | | | | E        finish = 2025-09-03 11:21:31.126130055 UTC , thread_cap_info = ("ThreadId
| | | | | E        86", 1, False)}
| | | | | E        
F | | | | |        
  | F | | |        
  |   | F |        
  F   |   |        
F     |   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     |   |        = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
F     |   |        = 3 , total_length = 24} , self = 83 , parent = Nothing , duration = 0.216626056000
F     |   |        , status = Fail , start = 2025-09-03 11:21:28.417213071 UTC , finish =
F     |   |        2025-09-03 11:21:28.633839127 UTC , thread_cap_info = ("ThreadId 106",
F     |   |        3, False)}
F     |   |        
| F   |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F   |   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F   |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F   |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| F   |   |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F   |   |        = 3 , total_length = 24} , self = 84 , parent = Nothing , duration = 0.317947455000
| F   |   |        , status = Fail , start = 2025-09-03 11:21:28.431615459 UTC , finish =
| F   |   |        2025-09-03 11:21:28.749562914 UTC , thread_cap_info = ("ThreadId 107",
| F   |   |        3, False)}
| F   |   |        
| | F |   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   |        = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F |   |        = 4 , total_length = 32} , self = 85 , parent = Nothing , duration = 0.297694311000
| | F |   |        , status = Fail , start = 2025-09-03 11:21:28.477050518 UTC , finish =
| | F |   |        2025-09-03 11:21:28.774744829 UTC , thread_cap_info = ("ThreadId 109",
| | F |   |        3, False)}
| | F |   |        
| | | | F |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F |        = 4 , total_length = 32} , self = 93 , parent = Nothing , duration = 1.614317843000
| | | | F |        , status = Fail , start = 2025-09-03 11:21:28.491000041 UTC , finish =
| | | | F |        2025-09-03 11:21:30.105317884 UTC , thread_cap_info = ("ThreadId 111",
| | | | F |        3, False)}
| | | | F |        
| | | F | |        
| | | F | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F | |        = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F | |        = 100} , self = 89 , parent = Nothing , duration = 0.866452637000 , status
| | | F | |        = Fail , start = 2025-09-03 11:21:28.601710895 UTC , finish = 2025-09-03
| | | F | |        11:21:29.468163532 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | | F | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | | F      = 100} , self = 88 , parent = Nothing , duration = 0.786375076000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:21:28.605499755 UTC , finish = 2025-09-03
| | | | | | F      11:21:29.391874831 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | | | | F      
F | | | | | |      
F | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F | | | | | |      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
F | | | | | |      = 120} , self = 90 , parent = Nothing , duration = 0.904102071000 , status
F | | | | | |      = Fail , start = 2025-09-03 11:21:28.645491884 UTC , finish = 2025-09-03
F | | | | | |      11:21:29.549593955 UTC , thread_cap_info = ("ThreadId 127", 2, False)}
F | | | | | |      
| | | | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | F    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | | F    = 3 , total_length = 24} , self = 86 , parent = Nothing , duration = 0.384564715000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:21:28.647428782 UTC , finish =
| | | | | | | F    2025-09-03 11:21:29.031993497 UTC , thread_cap_info = ("ThreadId 131",
| | | | | | | F    3, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | F  = 120} , self = 91 , parent = Nothing , duration = 1.080043304000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 11:21:28.665490646 UTC , finish = 2025-09-03
| | | | | | | | F  11:21:29.74553395 UTC , thread_cap_info = ("ThreadId 128", 2, False)}
| | | | | | | | F  
| F | | | | | | |  
| F | | | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | | |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | | | | | | |  = 3 , total_length = 24} , self = 87 , parent = Nothing , duration = 0.315892405000
| F | | | | | | |  , status = Fail , start = 2025-09-03 11:21:28.749591075 UTC , finish =
| F | | | | | | |  2025-09-03 11:21:29.06548348 UTC , thread_cap_info = ("ThreadId 133", 3,
| F | | | | | | |  False)}
| F | | | | | | |  
| | F | | | | | |  
| | F | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F | | | | | |  = 4 , total_length = 32} , self = 92 , parent = Nothing , duration = 1.022100657000
| | F | | | | | |  , status = Fail , start = 2025-09-03 11:21:28.785502701 UTC , finish =
| | F | | | | | |  2025-09-03 11:21:29.807603358 UTC , thread_cap_info = ("ThreadId 134",
| | F | | | | | |  3, False)}
| | F | | | | | |  
| | | | | | | F |  
| F | | | | |   |  
|   | | | | F   |  
| F | | | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | |     |  = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| F | | | |     |  alphabet_size = 5 , total_length = 100} , self = 94 , parent = Nothing
| F | | | |     |  , duration = 1.332236919000 , status = Fail , start = 2025-09-03 11:21:29.411875371
| F | | | |     |  UTC , finish = 2025-09-03 11:21:30.74411229 UTC , thread_cap_info = ("ThreadId
| F | | | |     |  142", 2, False)}
| F | | | |     |  
| | | F | |     |  
F | |   | |     |  
S | |   | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | |   | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | |   | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | |   | |     |  = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
S | |   | |     |  alphabet_size = 6 , total_length = 120} , self = 95 , parent = Nothing
S | |   | |     |  , duration = 1.357691818000 , status = Success , start = 2025-09-03 11:21:29.5537814
S | |   | |     |  UTC , finish = 2025-09-03 11:21:30.911473218 UTC , thread_cap_info = ("ThreadId
S | |   | |     |  145", 2, False)}
S | |   | |     |  
| | |   | |     F  
| | F   | |        
| | S   | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | |        = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | S   | |        = 4 , total_length = 32} , self = 97 , parent = Nothing , duration = 1.173209643000
| | S   | |        , status = Success , start = 2025-09-03 11:21:29.825502147 UTC , finish
| | S   | |        = 2025-09-03 11:21:30.99871179 UTC , thread_cap_info = ("ThreadId 149",
| | S   | |        3, False)}
| | S   | |        
| | |   F |        
| | | E   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E   |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E   |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | E   |        = 4 , total_length = 32} , self = 99 , parent = Nothing , duration = 0.974644917000
| | | E   |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:21:30.135107988
| | | E   |        UTC , finish = 2025-09-03 11:21:31.109752905 UTC , thread_cap_info = ("ThreadId
| | | E   |        152", 3, False)}
| | | E   |        
| F | |   |        
S   | |   |        
    S |   |        
      E   |        
          E        
