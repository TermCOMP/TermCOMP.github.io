last 4774 length 33306
CNF 4774 vars 33306 clauses
last 7060 length 42191
CNF 7060 vars 42191 clauses
last 10446 length 51347
CNF 10446 vars 51347 clauses
last 7045 length 42161
CNF 7045 vars 42161 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7150, clauses: 32008
last 7150 length 32008
CNF 7150 vars 32008 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4448, clauses: 17304
last 4448 length 17304
CNF 4448 vars 17304 clauses
last 11771 length 66549
CNF 11771 vars 66549 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7150, clauses: 32008, status: Unsatisfied, time: 0.514285409s
last 22030 length 103455
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4448, clauses: 17304, status: Unsatisfied, time: 0.262184469s
CNF 22030 vars 103455 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9747, clauses: 41901
last 9747 length 41901
CNF 9747 vars 41901 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15999, clauses: 67382
last 15999 length 67382
CNF 15999 vars 67382 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12352, clauses: 53615
last 12352 length 53615
CNF 12352 vars 53615 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19282, clauses: 81261
last 19282 length 81261
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 88 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b, a, a, a, a, a] -> [ a , a , a , a , a , a , a , a , b , a , a , a , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, a, a, a, a] -> [ a , a , a , a , a , b , a , a , a , a , b ] {- Dropped 3 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [a, a, a, a, a, b] -> [ b , a , a , a , a , b , a , a , a , a , a ] {- Mirror (Dropped 3 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 88 states

   property Termination
has value Just True
for SRS
  [b, a, a, a, a, a] -> [ a , a , a , a , a , b , a , a , a , a , b ] {- Dropped 3 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a, a, a, b] -> [ b , a , a , a , a , b , a , a , a , a , a ] {- Mirror (Dropped 3 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 88 states

**************************************************
skeleton: (1,2)\Drop{3}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let CNF 19282 vars 81261 clauses
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.121509102000
  min duration 0.546466756000
  total durat. 4.183454268000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 192}
    , self = 88
    , parent = Nothing
    , duration = 1.515478410000
    , status = Fail
    , start = 2025-09-03 12:09:12.08774425 UTC
    , finish = 2025-09-03 12:09:13.60322266 UTC
    , thread_cap_info = ("ThreadId 160", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 20
      , num_top_rules = 20
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 438}
    , self = 92
    , parent = Nothing
    , duration = 2.121509102000
    , status = Fail
    , start = 2025-09-03 12:09:11.908213642 UTC
    , finish = 2025-09-03 12:09:14.029722744 UTC
    , thread_cap_info = ("ThreadId 147", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.900186686000
  min duration 0.279996790000
  total durat. 1.981138846000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 8
  max duration 2.403141453000
  min duration 0.168791454000
  total durat. 5.916528295000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 84
    , parent = Nothing
    , duration = 1.273793177000
    , status = Fail
    , start = 2025-09-03 12:09:11.788611006 UTC
    , finish = 2025-09-03 12:09:13.062404183 UTC
    , thread_cap_info = ("ThreadId 99", 2, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 95
    , parent = Nothing
    , duration = 2.403141453000
    , status = Fail
    , start = 2025-09-03 12:09:12.108878854 UTC
    , finish = 2025-09-03 12:09:14.512020307 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.771704671000
  min duration 0.522314850000
  total durat. 1.294019521000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 3
  max duration 2.520646133000
  min duration 1.459876825000
  total durat. 6.428685799000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 93
    , parent = Nothing
    , duration = 1.459876825000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.648630773 UTC
    , finish = 2025-09-03 12:09:14.108507598 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 99
    , parent = Nothing
    , duration = 2.448162841000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.308614289 UTC
    , finish = 2025-09-03 12:09:14.75677713 UTC
    , thread_cap_info = ("ThreadId 164", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 97
    , parent = Nothing
    , duration = 2.520646133000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.027724855 UTC
    , finish = 2025-09-03 12:09:14.548370988 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 2.140621620000
  min duration 1.144227609000
  total durat. 7.385615158000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 85
    , parent = Nothing
    , duration = 1.144227609000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.367731054 UTC
    , finish = 2025-09-03 12:09:13.511958663 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 90
    , parent = Nothing
    , duration = 1.979660918000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.00874775 UTC
    , finish = 2025-09-03 12:09:13.988408668 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 98
    , parent = Nothing
    , duration = 2.121105011000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.507894604 UTC
    , finish = 2025-09-03 12:09:14.628999615 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 96
    , parent = Nothing
    , duration = 2.140621620000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:12.407730204 UTC
    , finish = 2025-09-03 12:09:14.548351824 UTC
    , thread_cap_info = ("ThreadId 167", 2, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 4
  max duration 2.608874036000
  min duration 0.700123823000
  total durat. 7.460067616000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 86
    , parent = Nothing
    , duration = 1.863408867000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:11.6880969 UTC
    , finish = 2025-09-03 12:09:13.551505767 UTC
    , thread_cap_info = ("ThreadId 80", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 91
    , parent = Nothing
    , duration = 2.287660890000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:11.72010681 UTC
    , finish = 2025-09-03 12:09:14.0077677 UTC
    , thread_cap_info = ("ThreadId 88", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 94
    , parent = Nothing
    , duration = 2.608874036000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:09:11.839672652 UTC
    , finish = 2025-09-03 12:09:14.448546688 UTC
    , thread_cap_info = ("ThreadId 116", 2, False)}
**************************************************
F                                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                                    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F                                    = 0 , alphabet_size = 4 , total_length = 100} , self = 50 , parent = Nothing
F                                    , duration = 0.425938900000 , status = Fail , start = 2025-09-03 12:09:11.462032293
F                                    UTC , finish = 2025-09-03 12:09:11.887971193 UTC , thread_cap_info = ("ThreadId
F                                    62", 1, False)}
F                                    
| F                                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                                  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                                  = 100} , self = 67 , parent = Nothing , duration = 0.546466756000 , status
| F                                  = Fail , start = 2025-09-03 12:09:11.464508932 UTC , finish = 2025-09-03
| F                                  12:09:12.010975688 UTC , thread_cap_info = ("ThreadId 67", 0, False)}
| F                                  
| | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                                = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F                                = 0 , alphabet_size = 4 , total_length = 100} , self = 46 , parent = Nothing
| | F                                , duration = 0.290370828000 , status = Fail , start = 2025-09-03 12:09:11.467730156
| | F                                UTC , finish = 2025-09-03 12:09:11.758100984 UTC , thread_cap_info = ("ThreadId
| | F                                64", 1, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                              = 100} , self = 45 , parent = Nothing , duration = 0.279996790000 , status
| | | F                              = Fail , start = 2025-09-03 12:09:11.469881794 UTC , finish = 2025-09-03
| | | F                              12:09:11.749878584 UTC , thread_cap_info = ("ThreadId 70", 0, False)}
| | | F                              
| | | | E                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | E                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | E                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | E                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | E                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E                            = 21} , self = 86 , parent = Nothing , duration = 1.863408867000 , status
| | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:09:11.6880969 UTC , finish
| | | | E                            = 2025-09-03 12:09:13.551505767 UTC , thread_cap_info = ("ThreadId 80",
| | | | E                            2, False)}
| | | | E                            
| | | | | E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                          = 19} , self = 91 , parent = Nothing , duration = 2.287660890000 , status
| | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:09:11.72010681 UTC ,
| | | | | E                          finish = 2025-09-03 12:09:14.0077677 UTC , thread_cap_info = ("ThreadId
| | | | | E                          88", 2, False)}
| | | | | E                          
| | | F | |                          
| | F   | |                          
| | F   | |                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F   | |                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F   | |                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F   | |                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F   | |                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | F   | |                          = 0 , alphabet_size = 2 , total_length = 21} , self = 84 , parent = Nothing
| | F   | |                          , duration = 1.273793177000 , status = Fail , start = 2025-09-03 12:09:11.788611006
| | F   | |                          UTC , finish = 2025-09-03 12:09:13.062404183 UTC , thread_cap_info = ("ThreadId
| | F   | |                          99", 2, False)}
| | F   | |                          
| | | E | |                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E | |                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E | |                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E | |                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E | |                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | |                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | |                          = 17} , self = 80 , parent = Nothing , duration = 0.700123823000 , status
| | | E | |                          = Except "AsyncCancelled" , start = 2025-09-03 12:09:11.807770556 UTC ,
| | | E | |                          finish = 2025-09-03 12:09:12.507894379 UTC , thread_cap_info = ("ThreadId
| | | E | |                          108", 2, False)}
| | | E | |                          
| | | | | | E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | E                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E                        = 23} , self = 94 , parent = Nothing , duration = 2.608874036000 , status
| | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:09:11.839672652 UTC ,
| | | | | | E                        finish = 2025-09-03 12:09:14.448546688 UTC , thread_cap_info = ("ThreadId
| | | | | | E                        116", 2, False)}
| | | | | | E                        
| | | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                      = 0 , alphabet_size = 2 , total_length = 21} , self = 77 , parent = Nothing
| | | | | | | F                      , duration = 0.407848862000 , status = Fail , start = 2025-09-03 12:09:11.887751733
| | | | | | | F                      UTC , finish = 2025-09-03 12:09:12.295600595 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                      117", 2, False)}
| | | | | | | F                      
F | | | | | | |                      
F | | | | | | |                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | |                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | |                      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
F | | | | | | |                      = 20 , num_top_rules = 20 , num_weak_rules = 4 , alphabet_size = 6 , total_length
F | | | | | | |                      = 438} , self = 92 , parent = Nothing , duration = 2.121509102000 , status
F | | | | | | |                      = Fail , start = 2025-09-03 12:09:11.908213642 UTC , finish = 2025-09-03
F | | | | | | |                      12:09:14.029722744 UTC , thread_cap_info = ("ThreadId 147", 1, False)}
F | | | | | | |                      
| | | | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | F                    = 20 , num_top_rules = 20 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | F                    = 438} , self = 82 , parent = Nothing , duration = 0.800955370000 , status
| | | | | | | | F                    = Fail , start = 2025-09-03 12:09:11.927777062 UTC , finish = 2025-09-03
| | | | | | | | F                    12:09:12.728732432 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | | | | | | | F                    
| | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | F                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | F                  = 0 , alphabet_size = 2 , total_length = 19} , self = 79 , parent = Nothing
| | | | | | | | | F                  , duration = 0.447456406000 , status = Fail , start = 2025-09-03 12:09:11.927821243
| | | | | | | | | F                  UTC , finish = 2025-09-03 12:09:12.375277649 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | F                  121", 0, False)}
| | | | | | | | | F                  
| | | | | | | | | | E                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | E                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | E                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | E                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | E                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | E                = 0 , alphabet_size = 2 , total_length = 17} , self = 76 , parent = Nothing
| | | | | | | | | | E                , duration = 0.309443925000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | E                = 2025-09-03 12:09:11.948078228 UTC , finish = 2025-09-03 12:09:12.257522153
| | | | | | | | | | E                UTC , thread_cap_info = ("ThreadId 125", 0, False)}
| | | | | | | | | | E                
| | | | | | | | | | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E              = 21} , self = 90 , parent = Nothing , duration = 1.979660918000 , status
| | | | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.00874775 UTC ,
| | | | | | | | | | | E              finish = 2025-09-03 12:09:13.988408668 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E              134", 2, False)}
| | | | | | | | | | | E              
| F | | | | | | | | | |              
| E | | | | | | | | | |              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | | | |              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | | | |              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | | | |              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | | | |              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | | | |              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | | | |              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | | | |              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | | | |              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | | | | |              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | | | |              = 21} , self = 97 , parent = Nothing , duration = 2.520646133000 , status
| E | | | | | | | | | |              = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.027724855 UTC ,
| E | | | | | | | | | |              finish = 2025-09-03 12:09:14.548370988 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | | |              135", 2, False)}
| E | | | | | | | | | |              
| | | | | | | | | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | F            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | F            = 0 , alphabet_size = 2 , total_length = 19} , self = 75 , parent = Nothing
| | | | | | | | | | | | F            , duration = 0.168791454000 , status = Fail , start = 2025-09-03 12:09:12.027733534
| | | | | | | | | | | | F            UTC , finish = 2025-09-03 12:09:12.196524988 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | F            154", 0, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | F          = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | | | | | | F          = 192} , self = 88 , parent = Nothing , duration = 1.515478410000 , status
| | | | | | | | | | | | | F          = Fail , start = 2025-09-03 12:09:12.08774425 UTC , finish = 2025-09-03
| | | | | | | | | | | | | F          12:09:13.60322266 UTC , thread_cap_info = ("ThreadId 160", 1, False)}
| | | | | | | | | | | | | F          
| | | | | | | | | | | | | | F        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | F        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | F        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | | F        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | | F        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | | F        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | | F        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | | F        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | F        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | F        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | F        = 23} , self = 78 , parent = Nothing , duration = 0.199779212000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-03 12:09:12.108875429 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | F        12:09:12.308654641 UTC , thread_cap_info = ("ThreadId 150", 2, False)}
| | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | F      = 0 , alphabet_size = 2 , total_length = 23} , self = 95 , parent = Nothing
| | | | | | | | | | | | | | | F      , duration = 2.403141453000 , status = Fail , start = 2025-09-03 12:09:12.108878854
| | | | | | | | | | | | | | | F      UTC , finish = 2025-09-03 12:09:14.512020307 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | F      151", 2, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | F    = 0 , alphabet_size = 2 , total_length = 23} , self = 81 , parent = Nothing
| | | | | | | | | | | | | | | | F    , duration = 0.499187215000 , status = Fail , start = 2025-09-03 12:09:12.128482364
| | | | | | | | | | | | | | | | F    UTC , finish = 2025-09-03 12:09:12.627669579 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | F    153", 2, False)}
| | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | | | | | | | | | | F  = 192} , self = 83 , parent = Nothing , duration = 0.900186686000 , status
| | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-03 12:09:12.148203979 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | | | F  12:09:13.048390665 UTC , thread_cap_info = ("ThreadId 163", 1, False)}
| | | | | | | | | | | | | | | | | F  
| | | | | | | | | | | | F | | | | |  
| | | | | | | | | | E |   | | | | |  
| | | | | | | F | |   |   | | | | |  
| | | | | | | E | |   |   | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | E | |   |   | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | E | |   |   | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | E | |   |   | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | E | |   |   | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | E | |   |   | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | E | |   |   | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | E | |   |   | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | E | |   |   | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E | |   |   | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E | |   |   | | | | |  = 19} , self = 99 , parent = Nothing , duration = 2.448162841000 , status
| | | | | | | E | |   |   | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.308614289 UTC ,
| | | | | | | E | |   |   | | | | |  finish = 2025-09-03 12:09:14.75677713 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |   |   | | | | |  164", 2, False)}
| | | | | | | E | |   |   | | | | |  
| | | | | | | | | |   |   | F | | |  
| | | | | | | | | | E |   |   | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E |   |   | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E |   |   | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E |   |   | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E |   |   | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E |   |   | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E |   |   | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E |   |   | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E |   |   | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E |   |   | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E |   |   | | |  = 17} , self = 85 , parent = Nothing , duration = 1.144227609000 , status
| | | | | | | | | | E |   |   | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.367731054 UTC ,
| | | | | | | | | | E |   |   | | |  finish = 2025-09-03 12:09:13.511958663 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E |   |   | | |  166", 2, False)}
| | | | | | | | | | E |   |   | | |  
| | | | | | | | | F | |   |   | | |  
| | | | | | | | | E | |   |   | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E | |   |   | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E | |   |   | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E | |   |   | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E | |   |   | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E | |   |   | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E | |   |   | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E | |   |   | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E | |   |   | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E | |   |   | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E | |   |   | | |  = 19} , self = 96 , parent = Nothing , duration = 2.140621620000 , status
| | | | | | | | | E | |   |   | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.407730204 UTC ,
| | | | | | | | | E | |   |   | | |  finish = 2025-09-03 12:09:14.548351824 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E | |   |   | | |  167", 2, False)}
| | | | | | | | | E | |   |   | | |  
| | | E | | | | | | | |   |   | | |  
| | | E | | | | | | | |   |   | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E | | | | | | | |   |   | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E | | | | | | | |   |   | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E | | | | | | | |   |   | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E | | | | | | | |   |   | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E | | | | | | | |   |   | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E | | | | | | | |   |   | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E | | | | | | | |   |   | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E | | | | | | | |   |   | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | | | | | | | |   |   | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | | | | | | | |   |   | | |  = 23} , self = 98 , parent = Nothing , duration = 2.121105011000 , status
| | | E | | | | | | | |   |   | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.507894604 UTC ,
| | | E | | | | | | | |   |   | | |  finish = 2025-09-03 12:09:14.628999615 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | | | |   |   | | |  169", 2, False)}
| | | E | | | | | | | |   |   | | |  
| | | | | | | | | | | |   |   | F |  
| | | | | | | | | | | | E |   |   |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E |   |   |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E |   |   |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E |   |   |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E |   |   |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E |   |   |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E |   |   |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E |   |   |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E |   |   |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E |   |   |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E |   |   |  = 17} , self = 93 , parent = Nothing , duration = 1.459876825000 , status
| | | | | | | | | | | | E |   |   |  = Except "AsyncCancelled" , start = 2025-09-03 12:09:12.648630773 UTC ,
| | | | | | | | | | | | E |   |   |  finish = 2025-09-03 12:09:14.108507598 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E |   |   |  171", 2, False)}
| | | | | | | | | | | | E |   |   |  
| | | | | | | | F | | | | |   |   |  
| | | | | | | | F | | | | |   |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F | | | | |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F | | | | |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F | | | | |   |   |  = 24 , num_strict_rules = 20 , num_top_rules = 20 , num_weak_rules = 4
| | | | | | | | F | | | | |   |   |  , alphabet_size = 6 , total_length = 438} , self = 87 , parent = Nothing
| | | | | | | | F | | | | |   |   |  , duration = 0.771704671000 , status = Fail , start = 2025-09-03 12:09:12.828349583
| | | | | | | | F | | | | |   |   |  UTC , finish = 2025-09-03 12:09:13.600054254 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F | | | | |   |   |  175", 1, False)}
| | | | | | | | F | | | | |   |   |  
| | | | | | | | | | | | | |   |   F  
| | F | | | | | | | | | | |   |      
| | F | | | | | | | | | | |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | | | | | | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | | | | | | | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | | | | | | | |   |      = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | F | | | | | | | | | | |   |      alphabet_size = 6 , total_length = 192} , self = 89 , parent = Nothing
| | F | | | | | | | | | | |   |      , duration = 0.522314850000 , status = Fail , start = 2025-09-03 12:09:13.087740322
| | F | | | | | | | | | | |   |      UTC , finish = 2025-09-03 12:09:13.610055172 UTC , thread_cap_info = ("ThreadId
| | F | | | | | | | | | | |   |      179", 1, False)}
| | F | | | | | | | | | | |   |      
| | | | | | | | | | E | | |   |      
| | | | E | | | | |   | | |   |      
| | | |   | | | F |   | | |   |      
| | | |   | | |   |   | | F   |      
| | F |   | | |   |   | |     |      
| |   |   | | |   |   E |     |      
| |   |   E | |   |     |     |      
F |   |     | |   |     |     |      
  |   |     | |   |     E     |      
  |   |     E |   |           |      
  |   |       |   |           F      
  |   |       |   E                  
  E   |       |                      
      E       |                      
              E                      
