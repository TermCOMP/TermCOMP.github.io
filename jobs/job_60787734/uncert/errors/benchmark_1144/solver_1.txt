last 3490 length 15141
last 3550 length 15568
CNF 3550 vars 15568 clauses
CNF 3490 vars 15141 clauses
last 815 length 3331
last 737 length 3169
CNF 815 vars 3331 clauses
CNF 737 vars 3169 clauses
last 737 length 3169
last 815 length 3331
CNF 737 vars 3169 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2651, clauses: 9531
CNF 815 vars 3331 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8930, clauses: 37207
last 2651 length 9531
last 8930 length 37207
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2651, clauses: 9531
CNF 2651 vars 9531 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8930, clauses: 37207
CNF 8930 vars 37207 clauses
last 2651 length 9531
last 8930 length 37207
CNF 2651 vars 9531 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2651, clauses: 9531, status: Unsatisfied, time: 0.146031903s
CNF 8930 vars 37207 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2651, clauses: 9531, status: Unsatisfied, time: 0.128820776s
last 8194 length 35369
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5661, clauses: 22676
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8930, clauses: 37207, status: Unsatisfied, time: 0.462635521s
CNF 8194 vars 35369 clauses
last 8194 length 35369
last 14331 length 65233
last 5661 length 22676
last 14331 length 65233
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5661, clauses: 22676
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4340, clauses: 16387
CNF 8194 vars 35369 clauses
CNF 5661 vars 22676 clauses
CNF 14331 vars 65233 clauses
CNF 14331 vars 65233 clauses
last 5661 length 22676
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8930, clauses: 37207, status: Unsatisfied, time: 0.649096646s
last 4340 length 16387
CNF 5661 vars 22676 clauses
CNF 4340 vars 16387 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4340, clauses: 16387
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5661, clauses: 22676, status: Unsatisfied, time: 0.648584463s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20432, clauses: 80655
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20432, clauses: 80655
last 4340 length 16387
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4340, clauses: 16387, status: Unsatisfied, time: 0.708329882s
last 20432 length 80655
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5661, clauses: 22676, status: Unsatisfied, time: 1.043444727s
last 20432 length 80655
CNF 4340 vars 16387 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16066, clauses: 66683
CNF 20432 vars 80655 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 49476, clauses: 206869
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8123, clauses: 30341
CNF 20432 vars 80655 clauses
last 16066 length 66683
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4340, clauses: 16387, status: Unsatisfied, time: 1.007152199s
last 49476 length 206869
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16066, clauses: 66683
last 8123 length 30341
CNF 16066 vars 66683 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20432, clauses: 80655, status: Satisfied, time: 1.263802507s
last 16066 length 66683
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 49476, clauses: 206869
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20432, clauses: 80655, status: Satisfied, time: 0.924219353s
CNF 8123 vars 30341 clauses
CNF 49476 vars 206869 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8123, clauses: 30341
CNF 16066 vars 66683 clauses
last 8123 length 30341
last 4881 length 22593
last 5737 length 29591
CNF 5737 vars 29591 clauses
CNF 4881 vars 22593 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8123, clauses: 30341, status: Unsatisfied, time: 0.962725415s
CNF 8123 vars 30341 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       mirror
SRS with 36 rules on 9 letters       DP
SRS with 72 strict rules and 36 weak rules on 18 letters       weights
SRS with 65 strict rules and 36 weak rules on 16 letters       EDG
SRS with 65 strict rules and 36 weak rules on 16 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 36 weak rules on 15 letters       weights
SRS with 1 strict rules and 36 weak rules on 10 letters       EDG
SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
SRS with 1 rules on 2 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, a, c, b, a] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, c, c] -> [] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [ [a, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [ [b, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [ [c, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [ [c, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [ [c, b] , [b, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, c], [c, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, c], [c, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, c], [c, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, c], [c, c], [c, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, c], [c, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, c], [c, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, c], [c, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, c], [c, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, c], [c, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [a, a]] -> [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [a, a]] -> [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a]] -> [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a]] -> [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [b, a]] -> [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [c, a]] -> [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [a, b]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [a, b]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [c, b]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [c, b]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [c, b]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [c, c], [a, c]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c], [a, c]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c], [a, c]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [c, c], [b, c]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c], [b, c]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c], [b, c]] -> [ [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [c, c], [c, c]] -> [ [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c], [c, c]] -> [ [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c], [c, c]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [c, c], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8123, clauses: 30341, status: Unsatisfied, time: 0.834940155s

  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, b]#, [c, c], [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 6A 6A 9A - \
        | 6A 6A 9A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]#
  , Wk  / 8A 9A 10A - \
        | 8A 9A 10A - |
        | 8A 9A 10A - |
        \ -  -  -   - / )
  ( [a, c]#
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 9A 9A 9A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 5A 8A 8A - \
        | 5A 8A 8A - |
        | 5A 8A 8A - |
        \ -  -  -  - / )
  ( [b, c]#
  , Wk  / 6A 9A 9A - \
        | 6A 9A 9A - |
        | 6A 9A 9A - |
        \ -  -  -  - / )
  ( [c, a]#
  , Wk  / 1A 3A 4A - \
        | 1A 3A 4A - |
        | 1A 3A 4A - |
        \ -  -  -  - / )
  ( [c, b]#
  , Wk  / 7A 10A 10A - \
        | 7A 10A 10A - |
        | 7A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 3/1)
  ([a, c]#, 1/1)
  ([b, a]#, 2/1)
  ([b, b]#, 0/1)
  ([b, c]#, 0/1)
  ([c, a]#, 3/1)
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}\Mirror(36,9)\Deepee(72/36,18)\Weight\EDG(65/36,16)\Matrix{\Arctic}{3}(6/36,15)\Weight\EDG(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.271839073000
  min duration 0.014573690000
  total durat. 2.960920811000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 86
    , parent = Nothing
    , duration = 1.041832555000
    , status = Fail
    , start = 2025-09-03 11:04:39.74179949 UTC
    , finish = 2025-09-03 11:04:40.783632045 UTC
    , thread_cap_info = ("ThreadId 121", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 88
    , parent = Nothing
    , duration = 1.271839073000
    , status = Fail
    , start = 2025-09-03 11:04:39.609673383 UTC
    , finish = 2025-09-03 11:04:40.881512456 UTC
    , thread_cap_info = ("ThreadId 117", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.892529680000
  min duration 0.009016151000
  total durat. 2.365852855000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.101532032000
  min duration 0.793605391000
  total durat. 1.895137423000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 49}
    , self = 87
    , parent = Nothing
    , duration = 1.101532032000
    , status = Fail
    , start = 2025-09-03 11:04:39.740696879 UTC
    , finish = 2025-09-03 11:04:40.842228911 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.706138975000
  min duration 2.129245059000
  total durat. 4.835384034000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 95
    , parent = Nothing
    , duration = 2.129245059000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:04:40.928457473 UTC
    , finish = 2025-09-03 11:04:43.057702532 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 105
    , parent = Nothing
    , duration = 2.706138975000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:04:40.801497131 UTC
    , finish = 2025-09-03 11:04:43.507636106 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.709331054000
  min duration 1.285849040000
  total durat. 2.995180094000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 49}
    , self = 89
    , parent = Nothing
    , duration = 1.285849040000
    , status = Fail
    , start = 2025-09-03 11:04:40.043233997 UTC
    , finish = 2025-09-03 11:04:41.329083037 UTC
    , thread_cap_info = ("ThreadId 129", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 49}
    , self = 91
    , parent = Nothing
    , duration = 1.709331054000
    , status = Fail
    , start = 2025-09-03 11:04:40.252138269 UTC
    , finish = 2025-09-03 11:04:41.961469323 UTC
    , thread_cap_info = ("ThreadId 130", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.598176114000
  min duration 2.427229726000
  total durat. 5.025405840000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 100
    , parent = Nothing
    , duration = 2.427229726000
    , status = Success
    , start = 2025-09-03 11:04:40.65466176 UTC
    , finish = 2025-09-03 11:04:43.081891486 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 93
    , parent = Nothing
    , duration = 2.598176114000
    , status = Success
    , start = 2025-09-03 11:04:40.45376447 UTC
    , finish = 2025-09-03 11:04:43.051940584 UTC
    , thread_cap_info = ("ThreadId 135", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.690489673000
  min duration 1.485135223000
  total durat. 3.175624896000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 49}
    , self = 90
    , parent = Nothing
    , duration = 1.485135223000
    , status = Fail
    , start = 2025-09-03 11:04:40.396337715 UTC
    , finish = 2025-09-03 11:04:41.881472938 UTC
    , thread_cap_info = ("ThreadId 132", 2, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 49}
    , self = 92
    , parent = Nothing
    , duration = 1.690489673000
    , status = Fail
    , start = 2025-09-03 11:04:40.864364944 UTC
    , finish = 2025-09-03 11:04:42.554854617 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.544092100000
  min duration 1.544092100000
  total durat. 1.544092100000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 49}
    , self = 103
    , parent = Nothing
    , duration = 1.544092100000
    , status = Fail
    , start = 2025-09-03 11:04:41.904560792 UTC
    , finish = 2025-09-03 11:04:43.448652892 UTC
    , thread_cap_info = ("ThreadId 146", 2, False)}
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 180} , self = 45 , parent = Nothing , duration = 0.102913609000 , status
F                = Fail , start = 2025-09-03 11:04:39.241812945 UTC , finish = 2025-09-03
F                11:04:39.344726554 UTC , thread_cap_info = ("ThreadId 51", 1, False)}
F                
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 36 , num_strict_rules = 36 , num_top_rules = 0 , num_weak_rules
| F              = 0 , alphabet_size = 9 , total_length = 180} , self = 65 , parent = Nothing
| F              , duration = 0.322913418000 , status = Fail , start = 2025-09-03 11:04:39.264037741
| F              UTC , finish = 2025-09-03 11:04:39.586951159 UTC , thread_cap_info = ("ThreadId
| F              70", 1, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 3 , total_length = 12} , self = 48 , parent = Nothing
| | F            , duration = 0.172844899000 , status = Fail , start = 2025-09-03 11:04:39.321765912
| | F            UTC , finish = 2025-09-03 11:04:39.494610811 UTC , thread_cap_info = ("ThreadId
| | F            78", 2, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 3 , total_length = 12} , self = 49 , parent = Nothing
| | | F          , duration = 0.222301067000 , status = Fail , start = 2025-09-03 11:04:39.342350581
| | | F          UTC , finish = 2025-09-03 11:04:39.564651648 UTC , thread_cap_info = ("ThreadId
| | | F          80", 2, False)}
| | | F          
F | | |          
  | F |          
  |   F          
F |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F |              = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
F |              = 49} , self = 79 , parent = Nothing , duration = 0.141252217000 , status
F |              = Fail , start = 2025-09-03 11:04:39.579658952 UTC , finish = 2025-09-03
F |              11:04:39.720911169 UTC , thread_cap_info = ("ThreadId 101", 2, False)}
F |              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F            = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | F            = 49} , self = 80 , parent = Nothing , duration = 0.140628725000 , status
| | F            = Fail , start = 2025-09-03 11:04:39.581469146 UTC , finish = 2025-09-03
| | F            11:04:39.722097871 UTC , thread_cap_info = ("ThreadId 102", 2, False)}
| | F            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | | F          alphabet_size = 4 , total_length = 49} , self = 81 , parent = Nothing ,
| | | F          duration = 0.358634269000 , status = Fail , start = 2025-09-03 11:04:39.586805533
| | | F          UTC , finish = 2025-09-03 11:04:39.945439802 UTC , thread_cap_info = ("ThreadId
| | | F          103", 2, False)}
| | | F          
| F | |          
| F | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| F | |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| F | |          = 4 , total_length = 49} , self = 83 , parent = Nothing , duration = 0.793605391000
| F | |          , status = Fail , start = 2025-09-03 11:04:39.588381942 UTC , finish =
| F | |          2025-09-03 11:04:40.381987333 UTC , thread_cap_info = ("ThreadId 104",
| F | |          2, False)}
| F | |          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | F        = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | F        total_length = 556} , self = 88 , parent = Nothing , duration = 1.271839073000
| | | | F        , status = Fail , start = 2025-09-03 11:04:39.609673383 UTC , finish =
| | | | F        2025-09-03 11:04:40.881512456 UTC , thread_cap_info = ("ThreadId 117",
| | | | F        1, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | F      = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | F      total_length = 556} , self = 84 , parent = Nothing , duration = 0.832150259000
| | | | | F      , status = Fail , start = 2025-09-03 11:04:39.621479076 UTC , finish =
| | | | | F      2025-09-03 11:04:40.453629335 UTC , thread_cap_info = ("ThreadId 118",
| | | | | F      1, False)}
| | | | | F      
F | | | | |      
  | F | | |      
F |   | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   | | |      = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
F |   | | |      alphabet_size = 4 , total_length = 49} , self = 82 , parent = Nothing ,
F |   | | |      duration = 0.500882282000 , status = Fail , start = 2025-09-03 11:04:39.722105252
F |   | | |      UTC , finish = 2025-09-03 11:04:40.222987534 UTC , thread_cap_info = ("ThreadId
F |   | | |      123", 2, False)}
F |   | | |      
| | F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | F | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | F | | |      = 4 , total_length = 49} , self = 87 , parent = Nothing , duration = 1.101532032000
| | F | | |      , status = Fail , start = 2025-09-03 11:04:39.740696879 UTC , finish =
| | F | | |      2025-09-03 11:04:40.842228911 UTC , thread_cap_info = ("ThreadId 124",
| | F | | |      2, False)}
| | F | | |      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | | F    = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | | F    total_length = 556} , self = 86 , parent = Nothing , duration = 1.041832555000
| | | | | | F    , status = Fail , start = 2025-09-03 11:04:39.74179949 UTC , finish = 2025-09-03
| | | | | | F    11:04:40.783632045 UTC , thread_cap_info = ("ThreadId 121", 1, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | | | F  = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | | | F  total_length = 556} , self = 85 , parent = Nothing , duration = 0.892529680000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:04:39.762097638 UTC , finish =
| | | | | | | F  2025-09-03 11:04:40.654627318 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | F  1, False)}
| | | | | | | F  
| | | F | | | |  
| | | F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | F | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | | F | | | |  = 4 , total_length = 49} , self = 89 , parent = Nothing , duration = 1.285849040000
| | | F | | | |  , status = Fail , start = 2025-09-03 11:04:40.043233997 UTC , finish =
| | | F | | | |  2025-09-03 11:04:41.329083037 UTC , thread_cap_info = ("ThreadId 129",
| | | F | | | |  2, False)}
| | | F | | | |  
F | | | | | | |  
F | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
F | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
F | | | | | | |  = 4 , total_length = 49} , self = 91 , parent = Nothing , duration = 1.709331054000
F | | | | | | |  , status = Fail , start = 2025-09-03 11:04:40.252138269 UTC , finish =
F | | | | | | |  2025-09-03 11:04:41.961469323 UTC , thread_cap_info = ("ThreadId 130",
F | | | | | | |  2, False)}
F | | | | | | |  
| F | | | | | |  
| F | | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| F | | | | | |  alphabet_size = 4 , total_length = 49} , self = 90 , parent = Nothing ,
| F | | | | | |  duration = 1.485135223000 , status = Fail , start = 2025-09-03 11:04:40.396337715
| F | | | | | |  UTC , finish = 2025-09-03 11:04:41.881472938 UTC , thread_cap_info = ("ThreadId
| F | | | | | |  132", 2, False)}
| F | | | | | |  
| | | | | F | |  
| | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | |  = 101 , num_strict_rules = 65 , num_top_rules = 65 , num_weak_rules = 36
| | | | | S | |  , alphabet_size = 16 , total_length = 556} , self = 93 , parent = Nothing
| | | | | S | |  , duration = 2.598176114000 , status = Success , start = 2025-09-03 11:04:40.45376447
| | | | | S | |  UTC , finish = 2025-09-03 11:04:43.051940584 UTC , thread_cap_info = ("ThreadId
| | | | | S | |  135", 1, False)}
| | | | | S | |  
| | | | | | | F  
| | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S  = 101 , num_strict_rules = 65 , num_top_rules = 65 , num_weak_rules = 36
| | | | | | | S  , alphabet_size = 16 , total_length = 556} , self = 100 , parent = Nothing
| | | | | | | S  , duration = 2.427229726000 , status = Success , start = 2025-09-03 11:04:40.65466176
| | | | | | | S  UTC , finish = 2025-09-03 11:04:43.081891486 UTC , thread_cap_info = ("ThreadId
| | | | | | | S  138", 1, False)}
| | | | | | | S  
| | | | | | F |  
| | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 101
| | | | | | E |  , num_strict_rules = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size
| | | | | | E |  = 16 , total_length = 556} , self = 105 , parent = Nothing , duration =
| | | | | | E |  2.706138975000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |  11:04:40.801497131 UTC , finish = 2025-09-03 11:04:43.507636106 UTC , thread_cap_info
| | | | | | E |  = ("ThreadId 139", 1, False)}
| | | | | | E |  
| | F | | | | |  
| | F | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | F | | | | |  alphabet_size = 4 , total_length = 49} , self = 92 , parent = Nothing ,
| | F | | | | |  duration = 1.690489673000 , status = Fail , start = 2025-09-03 11:04:40.864364944
| | F | | | | |  UTC , finish = 2025-09-03 11:04:42.554854617 UTC , thread_cap_info = ("ThreadId
| | F | | | | |  141", 2, False)}
| | F | | | | |  
| | | | F | | |  
| | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 101
| | | | E | | |  , num_strict_rules = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size
| | | | E | | |  = 16 , total_length = 556} , self = 95 , parent = Nothing , duration =
| | | | E | | |  2.129245059000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | | |  11:04:40.928457473 UTC , finish = 2025-09-03 11:04:43.057702532 UTC , thread_cap_info
| | | | E | | |  = ("ThreadId 143", 1, False)}
| | | | E | | |  
| | | F | | | |  
| F |   | | | |  
| F |   | | | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   | | | |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| F |   | | | |  alphabet_size = 4 , total_length = 49} , self = 103 , parent = Nothing
| F |   | | | |  , duration = 1.544092100000 , status = Fail , start = 2025-09-03 11:04:41.904560792
| F |   | | | |  UTC , finish = 2025-09-03 11:04:43.448652892 UTC , thread_cap_info = ("ThreadId
| F |   | | | |  146", 2, False)}
| F |   | | | |  
F | |   | | | |  
  | F   | | | |  
  |     | S | |  
  |     E   | |  
F |         | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |         | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |         | |  = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
F |         | |  = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size = 10 , total_length
F |         | |  = 207} , self = 102 , parent = Nothing , duration = 0.388509667000 , status
F |         | |  = Fail , start = 2025-09-03 11:04:43.060121754 UTC , finish = 2025-09-03
F |         | |  11:04:43.448631421 UTC , thread_cap_info = ("ThreadId 159", 1, False)}
F |         | |  
| | F       | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F       | |  = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | F       | |  = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size = 10 , total_length
| | F       | |  = 207} , self = 104 , parent = Nothing , duration = 0.405498703000 , status
| | F       | |  = Fail , start = 2025-09-03 11:04:43.061469392 UTC , finish = 2025-09-03
| | F       | |  11:04:43.466968095 UTC , thread_cap_info = ("ThreadId 160", 1, False)}
| | F       | |  
| | |       | S  
F | |       |    
  F |       |    
    F       |    
            E    
