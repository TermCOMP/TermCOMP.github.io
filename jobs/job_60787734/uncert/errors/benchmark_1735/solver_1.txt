last 9572 length 61932
CNF 9572 vars 61932 clauses
last 12952 length 104895
CNF 12952 vars 104895 clauses
last 11852 length 77235
CNF 11852 vars 77235 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4672, clauses: 19039
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4429, clauses: 18259
last 4429 length 18259
last 4672 length 19039
CNF 4429 vars 18259 clauses
CNF 4672 vars 19039 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14326, clauses: 60225
last 14326 length 60225
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14924, clauses: 62803
last 14924 length 62803
CNF 14326 vars 60225 clauses
CNF 14924 vars 62803 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14924, clauses: 62803, status: Satisfied, time: 0.164009345s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4672, clauses: 19039, status: Satisfied, time: 0.461535142s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4429, clauses: 18259, status: Unsatisfied, time: 0.738041648s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8840, clauses: 37967
last 8840 length 37967
CNF 8840 vars 37967 clauses
last 13058 length 76314
CNF 13058 vars 76314 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14326, clauses: 60225, status: Unsatisfied, time: 2.140037698s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4334, clauses: 17214
last 4334 length 17214
CNF 4334 vars 17214 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8840, clauses: 37967, status: Unsatisfied, time: 1.530083096s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7294, clauses: 32045
last 7294 length 32045
CNF 7294 vars 32045 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4334, clauses: 17214, status: Unsatisfied, time: 0.462752391s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7294, clauses: 32045, status: Satisfied, time: 1.500267848s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14539, clauses: 61182
last 14539 length 61182
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8894, clauses: 38400
last 8894 length 38400
CNF 14539 vars 61182 clauses
CNF 8894 vars 38400 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8894, clauses: 38400, status: Unsatisfied, time: 0.465123361s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7192, clauses: 30157
last 7192 length 30157
CNF 7192 vars 30157 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7192, clauses: 30157, status: Satisfied, time: 0.363393639s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 22 strict rules and 4 weak rules on 6 letters       EDG
SRS with 8 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 4 weak rules on 6 letters       EDG
SRS with 6 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 4 weak rules on 6 letters       weights
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a, b, b, a, b, a] -> [ a , b , a , b , b , a , b , b , a , b , b , a ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] -> [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] -> [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] -> [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( [a, b]
  , Wk  / - -   0A \
        | - -2A -  |
        \ - -   0A / )
  ( [b, a]
  , Wk  / -  0A 0A \
        | 1A 2A 2A |
        \ -  -  0A / )
  ( [b, b]
  , Wk  / -   1A 2A \
        | -1A -  -  |
        \ -   -  0A / )
  ( [a, a]#
  , Wk  / - -1A 2A \
        | - -   -  |
        \ - -   0A / )
  ( [a, b]#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A 0A - \
        | -4A -4A 0A 0A - |
        | -4A -4A 0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  4A 4A - \
        | 0A  0A  0A 4A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A 0A  0A  - |
        | -4A -4A -4A 0A  - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 4A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [a, a]#
  , Wk  / 1A 1A 1A 5A - \
        | 1A 1A 1A 5A - |
        | 1A 1A 1A 5A - |
        | 1A 1A 1A 5A - |
        \ -  -  -  -  - / )
  ( [a, b]#
  , Wk  / 1A 5A 5A 5A - \
        | 1A 5A 5A 5A - |
        | 1A 5A 5A 5A - |
        | 1A 5A 5A 5A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}\Mirror(4,4)\Deepee(22/4,6)\EDG(8/4,6)\Matrix{\ArcticBZ}{3}\EDG(6/4,6)\Matrix{\Arctic}{4}(2/4,6)\Weight(0/4,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.843737609000
  min duration 0.864263253000
  total durat. 2.708000862000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 176}
    , self = 82
    , parent = Nothing
    , duration = 1.843737609000
    , status = Fail
    , start = 2025-09-03 12:55:14.301799932 UTC
    , finish = 2025-09-03 12:55:16.145537541 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.119198208000
  min duration 3.032345944000
  total durat. 6.151544152000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 244}
    , self = 69
    , parent = Nothing
    , duration = 3.032345944000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:10.609381182 UTC
    , finish = 2025-09-03 12:55:13.641727126 UTC
    , thread_cap_info = ("ThreadId 114", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 206}
    , self = 72
    , parent = Nothing
    , duration = 3.119198208000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:10.662004124 UTC
    , finish = 2025-09-03 12:55:13.781202332 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.961940230000
  min duration 1.482913004000
  total durat. 4.444853234000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 96}
    , self = 54
    , parent = Nothing
    , duration = 1.482913004000
    , status = Fail
    , start = 2025-09-03 12:55:08.941693026 UTC
    , finish = 2025-09-03 12:55:10.42460603 UTC
    , thread_cap_info = ("ThreadId 58", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 206}
    , self = 71
    , parent = Nothing
    , duration = 2.961940230000
    , status = Fail
    , start = 2025-09-03 12:55:10.681851439 UTC
    , finish = 2025-09-03 12:55:13.643791669 UTC
    , thread_cap_info = ("ThreadId 117", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.082730015000
  min duration 3.019560820000
  total durat. 6.102290835000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 244}
    , self = 70
    , parent = Nothing
    , duration = 3.019560820000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:10.622186855 UTC
    , finish = 2025-09-03 12:55:13.641747675 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 176}
    , self = 86
    , parent = Nothing
    , duration = 3.082730015000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:14.298465163 UTC
    , finish = 2025-09-03 12:55:17.381195178 UTC
    , thread_cap_info = ("ThreadId 136", 3, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.779420811000
  min duration 0.388839718000
  total durat. 2.267679678000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.586331076000
  min duration 2.586331076000
  total durat. 2.586331076000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 244}
    , self = 83
    , parent = Nothing
    , duration = 2.586331076000
    , status = Fail
    , start = 2025-09-03 12:55:13.664372047 UTC
    , finish = 2025-09-03 12:55:16.250703123 UTC
    , thread_cap_info = ("ThreadId 122", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.784261164000
  min duration 2.784261164000
  total durat. 2.784261164000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 176}
    , self = 97
    , parent = Nothing
    , duration = 2.784261164000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:16.941209043 UTC
    , finish = 2025-09-03 12:55:19.725470207 UTC
    , thread_cap_info = ("ThreadId 145", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.965719575000
  min duration 0.705527152000
  total durat. 2.671246727000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 244}
    , self = 84
    , parent = Nothing
    , duration = 1.965719575000
    , status = Fail
    , start = 2025-09-03 12:55:14.622122983 UTC
    , finish = 2025-09-03 12:55:16.587842558 UTC
    , thread_cap_info = ("ThreadId 137", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.619272559000
  min duration 1.619272559000
  total durat. 1.619272559000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 244}
    , self = 89
    , parent = Nothing
    , duration = 1.619272559000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:16.624226393 UTC
    , finish = 2025-09-03 12:55:18.243498952 UTC
    , thread_cap_info = ("ThreadId 143", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.908577981000
  min duration 0.701181975000
  total durat. 1.609759956000
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.833394093000
  min duration 0.751218752000
  total durat. 2.584612845000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 244}
    , self = 87
    , parent = Nothing
    , duration = 1.833394093000
    , status = Success
    , start = 2025-09-03 12:55:16.301250816 UTC
    , finish = 2025-09-03 12:55:18.134644909 UTC
    , thread_cap_info = ("ThreadId 141", 3, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 1.640837294000
  min duration 0.748152208000
  total durat. 2.388989502000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 61
    , parent = Nothing
    , duration = 1.640837294000
    , status = Fail
    , start = 2025-09-03 12:55:08.949190617 UTC
    , finish = 2025-09-03 12:55:10.590027911 UTC
    , thread_cap_info = ("ThreadId 72", 2, False)}
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F            = 22} , self = 50 , parent = Nothing , duration = 0.748152208000 , status
F            = Fail , start = 2025-09-03 12:55:08.931026972 UTC , finish = 2025-09-03
F            12:55:09.67917918 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F            
| F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F          = 96} , self = 51 , parent = Nothing , duration = 0.864263253000 , status
| F          = Fail , start = 2025-09-03 12:55:08.939509758 UTC , finish = 2025-09-03
| F          12:55:09.803773011 UTC , thread_cap_info = ("ThreadId 56", 3, False)}
| F          
| | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F        = 96} , self = 54 , parent = Nothing , duration = 1.482913004000 , status
| | F        = Fail , start = 2025-09-03 12:55:08.941693026 UTC , finish = 2025-09-03
| | F        12:55:10.42460603 UTC , thread_cap_info = ("ThreadId 58", 3, False)}
| | F        
| | | F      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | F      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | F      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | F      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | F      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | F      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F      = 22} , self = 61 , parent = Nothing , duration = 1.640837294000 , status
| | | F      = Fail , start = 2025-09-03 12:55:08.949190617 UTC , finish = 2025-09-03
| | | F      12:55:10.590027911 UTC , thread_cap_info = ("ThreadId 72", 2, False)}
| | | F      
| | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F    = 0 , alphabet_size = 2 , total_length = 22} , self = 46 , parent = Nothing
| | | | F    , duration = 0.388839718000 , status = Fail , start = 2025-09-03 12:55:08.949245064
| | | | F    UTC , finish = 2025-09-03 12:55:09.338084782 UTC , thread_cap_info = ("ThreadId
| | | | F    83", 2, False)}
| | | | F    
| | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F  = 0 , alphabet_size = 2 , total_length = 22} , self = 48 , parent = Nothing
| | | | | F  , duration = 0.570902015000 , status = Fail , start = 2025-09-03 12:55:08.982136611
| | | | | F  UTC , finish = 2025-09-03 12:55:09.553038626 UTC , thread_cap_info = ("ThreadId
| | | | | F  86", 2, False)}
| | | | | F  
| | | | F |  
| | | |   F  
| | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | F    = 0 , alphabet_size = 4 , total_length = 96} , self = 53 , parent = Nothing
| | | | F    , duration = 0.779420811000 , status = Fail , start = 2025-09-03 12:55:09.553047713
| | | | F    UTC , finish = 2025-09-03 12:55:10.332468524 UTC , thread_cap_info = ("ThreadId
| | | | F    93", 2, False)}
| | | | F    
| | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | F  = 0 , alphabet_size = 4 , total_length = 96} , self = 52 , parent = Nothing
| | | | | F  , duration = 0.528517134000 , status = Fail , start = 2025-09-03 12:55:09.561209151
| | | | | F  UTC , finish = 2025-09-03 12:55:10.089726285 UTC , thread_cap_info = ("ThreadId
| | | | | F  95", 2, False)}
| | | | | F  
F | | | | |  
  F | | | |  
    | | | F  
    | | F    
    F |      
      F      
E            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
E            = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E            = 244} , self = 69 , parent = Nothing , duration = 3.032345944000 , status
E            = Except "<<timeout>>" , start = 2025-09-03 12:55:10.609381182 UTC , finish
E            = 2025-09-03 12:55:13.641727126 UTC , thread_cap_info = ("ThreadId 114",
E            3, False)}
E            
| E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| E          = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E          = 244} , self = 70 , parent = Nothing , duration = 3.019560820000 , status
| E          = Except "<<timeout>>" , start = 2025-09-03 12:55:10.622186855 UTC , finish
| E          = 2025-09-03 12:55:13.641747675 UTC , thread_cap_info = ("ThreadId 115",
| E          3, False)}
| E          
| | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | E        = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E        = 206} , self = 72 , parent = Nothing , duration = 3.119198208000 , status
| | E        = Except "<<timeout>>" , start = 2025-09-03 12:55:10.662004124 UTC , finish
| | E        = 2025-09-03 12:55:13.781202332 UTC , thread_cap_info = ("ThreadId 116",
| | E        3, False)}
| | E        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F      = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | F      = 206} , self = 71 , parent = Nothing , duration = 2.961940230000 , status
| | | F      = Fail , start = 2025-09-03 12:55:10.681851439 UTC , finish = 2025-09-03
| | | F      12:55:13.643791669 UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | | F      
E | | |      
  E | |      
    | F      
F   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |        = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
F   |        alphabet_size = 6 , total_length = 244} , self = 81 , parent = Nothing
F   |        , duration = 0.908577981000 , status = Fail , start = 2025-09-03 12:55:13.661225872
F   |        UTC , finish = 2025-09-03 12:55:14.569803853 UTC , thread_cap_info = ("ThreadId
F   |        121", 3, False)}
F   |        
| F |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| F |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| F |        = 6 , total_length = 244} , self = 83 , parent = Nothing , duration = 2.586331076000
| F |        , status = Fail , start = 2025-09-03 12:55:13.664372047 UTC , finish =
| F |        2025-09-03 12:55:16.250703123 UTC , thread_cap_info = ("ThreadId 122",
| F |        3, False)}
| F |        
| | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S      = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| | | S      alphabet_size = 6 , total_length = 206} , self = 73 , parent = Nothing
| | | S      , duration = 0.612521495000 , status = Success , start = 2025-09-03 12:55:13.681209031
| | | S      UTC , finish = 2025-09-03 12:55:14.293730526 UTC , thread_cap_info = ("ThreadId
| | | S      123", 3, False)}
| | | S      
| | E |      
| | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | S |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| | S |      = 6 , total_length = 206} , self = 75 , parent = Nothing , duration = 0.466329507000
| | S |      , status = Success , start = 2025-09-03 12:55:13.831527741 UTC , finish
| | S |      = 2025-09-03 12:55:14.297857248 UTC , thread_cap_info = ("ThreadId 125",
| | S |      3, False)}
| | S |      
| | | S      
| | S        
| | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | E        = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E        = 176} , self = 86 , parent = Nothing , duration = 3.082730015000 , status
| | E        = Except "<<timeout>>" , start = 2025-09-03 12:55:14.298465163 UTC , finish
| | E        = 2025-09-03 12:55:17.381195178 UTC , thread_cap_info = ("ThreadId 136",
| | E        3, False)}
| | E        
| | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | F      = 176} , self = 82 , parent = Nothing , duration = 1.843737609000 , status
| | | F      = Fail , start = 2025-09-03 12:55:14.301799932 UTC , finish = 2025-09-03
| | | F      12:55:16.145537541 UTC , thread_cap_info = ("ThreadId 135", 3, False)}
| | | F      
F | | |      
F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
F | | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
F | | |      = 6 , total_length = 244} , self = 84 , parent = Nothing , duration = 1.965719575000
F | | |      , status = Fail , start = 2025-09-03 12:55:14.622122983 UTC , finish =
F | | |      2025-09-03 12:55:16.587842558 UTC , thread_cap_info = ("ThreadId 137",
F | | |      3, False)}
F | | |      
| | | F      
| | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | F      alphabet_size = 6 , total_length = 176} , self = 85 , parent = Nothing
| | | F      , duration = 0.701181975000 , status = Fail , start = 2025-09-03 12:55:16.168390263
| | | F      UTC , finish = 2025-09-03 12:55:16.869572238 UTC , thread_cap_info = ("ThreadId
| | | F      140", 3, False)}
| | | F      
| F | |      
| S | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| S | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |      = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| S | |      alphabet_size = 6 , total_length = 244} , self = 87 , parent = Nothing
| S | |      , duration = 1.833394093000 , status = Success , start = 2025-09-03 12:55:16.301250816
| S | |      UTC , finish = 2025-09-03 12:55:18.134644909 UTC , thread_cap_info = ("ThreadId
| S | |      141", 3, False)}
| S | |      
F | | |      
E | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
E | | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
E | | |      = 6 , total_length = 244} , self = 89 , parent = Nothing , duration = 1.619272559000
E | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:55:16.624226393
E | | |      UTC , finish = 2025-09-03 12:55:18.243498952 UTC , thread_cap_info = ("ThreadId
E | | |      143", 3, False)}
E | | |      
| | | F      
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | E      = 6 , total_length = 176} , self = 97 , parent = Nothing , duration = 2.784261164000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 12:55:16.941209043
| | | E      UTC , finish = 2025-09-03 12:55:19.725470207 UTC , thread_cap_info = ("ThreadId
| | | E      145", 3, False)}
| | | E      
| | E |      
| | F |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | F |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | F |      = 6 , total_length = 176} , self = 94 , parent = Nothing , duration = 0.705527152000
| | F |      , status = Fail , start = 2025-09-03 12:55:18.042653675 UTC , finish =
| | F |      2025-09-03 12:55:18.748180827 UTC , thread_cap_info = ("ThreadId 147",
| | F |      3, False)}
| | F |      
| S | |      
E   | |      
    F |      
S     |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |      = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
S     |      alphabet_size = 6 , total_length = 176} , self = 95 , parent = Nothing
S     |      , duration = 0.751218752000 , status = Success , start = 2025-09-03 12:55:18.801643314
S     |      UTC , finish = 2025-09-03 12:55:19.552862066 UTC , thread_cap_info = ("ThreadId
S     |      156", 3, False)}
S     |      
S     |      
      E      
