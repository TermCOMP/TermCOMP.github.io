last 3937 length 17941
CNF 3937 vars 17941 clauses
last 4181 length 20207
CNF 4181 vars 20207 clauses
last 699 length 2946
last 925 length 4064
CNF 699 vars 2946 clauses
CNF 925 vars 4064 clauses
last 776 length 3064
last 711 length 2998
CNF 776 vars 3064 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2471, clauses: 8856
CNF 711 vars 2998 clauses
last 2471 length 8856
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2628, clauses: 9614
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8802, clauses: 36707
CNF 2471 vars 8856 clauses
last 2628 length 9614
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8564, clauses: 35679
last 8802 length 36707
last 8564 length 35679
CNF 2628 vars 9614 clauses
CNF 8802 vars 36707 clauses
CNF 8564 vars 35679 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2471, clauses: 8856, status: Unsatisfied, time: 0.199978457s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2628, clauses: 9614, status: Unsatisfied, time: 0.094763925s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5383, clauses: 21713
last 5383 length 21713
CNF 5383 vars 21713 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5459, clauses: 21968
last 5459 length 21968
CNF 5459 vars 21968 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8802, clauses: 36707, status: Unsatisfied, time: 0.494746144s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5383, clauses: 21713, status: Unsatisfied, time: 0.505827949s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8564, clauses: 35679, status: Unsatisfied, time: 0.774398809s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4060, clauses: 15211
last 4060 length 15211
CNF 4060 vars 15211 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5459, clauses: 21968, status: Unsatisfied, time: 0.602062971s
last 12591 length 54742
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4325, clauses: 16789
last 4325 length 16789
CNF 4325 vars 16789 clauses
CNF 12591 vars 54742 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4060, clauses: 15211, status: Unsatisfied, time: 0.284082126s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4325, clauses: 16789, status: Unsatisfied, time: 0.336035786s
last 8563 length 39051
CNF 8563 vars 39051 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7633, clauses: 28331
last 7633 length 28331
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15664, clauses: 65243
last 15664 length 65243
CNF 7633 vars 28331 clauses
[Info] pool sizes (success) 117079 seen 52251 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15085, clauses: 63109
last 15085 length 63109
CNF 15664 vars 65243 clauses
CNF 15085 vars 63109 clauses
last 11883 length 62590
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       looping derivation
from
  [a, b, b, b, b, b, b, b, b]
to
  [b, b, b, a, b, b, b, b, b, b, b, b, a, c, a, c, c]
via 16 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b, b] -> [b, b, b, a, c, a] {- Input 1 -}
  [c, b] -> [] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [a, b, b, b, b, b, b, b, b], via = [(Step   { rule = 1, position = 0}, [b, b, b, a, c, a, b, b, b, b, b, b]), (Step   { rule = 1, position = 5}, [b, b, b, a, c, b, b, b, a, c, a, b, b, b, b]), (Step   { rule = 2, position = 4}, [b, b, b, a, b, b, a, c, a, b, b, b, b]), (Step   { rule = 1, position = 8}, [b, b, b, a, b, b, a, c, b, b, b, a, c, a, b, b]), (Step   { rule = 2, position = 7}, [b, b, b, a, b, b, a, b, b, a, c, a, b, b]), (Step   { rule = 0, position = 9}, [b, b, b, a, b, b, a, b, b, c, a, b, b]), (Step   { rule = 1, position = 10}, [b, b, b, a, b, b, a, b, b, c, b, b, b, a, c, a]), (Step   { rule = 2, position = 9}, [b, b, b, a, b, b, a, b, b, b, b, a, c, a]), (Step   { rule = 0, position = 13}, [b, b, b, a, b, b, a, b, b, b, b, a, c]), (Step   { rule = 0, position = 11}, [b, b, b, a, b, b, a, b, b, b, b, c]), (Step   { rule = 1, position = 6}, [b, b, b, a, b, b, b, b, b, a, c, a, b, b, c]), (Step   { rule = 1, position = 11}, [b, b, b, a, b, b, b, b, b, a, c, b, b, b, a, c, a, c]), (Step   { rule = 2, position = 10}, [b, b, b, a, b, b, b, b, b, a, b, b, a, c, a, c]), (Step   { rule = 0, position = 14}, [b, b, b, a, b, b, b, b, b, a, b, b, a, c, c]), (Step   { rule = 0, position = 12}, [b, b, b, a, b, b, b, b, b, a, b, b, c, c]), (Step   { rule = 1, position = 9}, [b, b, b, a, b, b, b, b, b, b, b, b, a, c, a, c, c])], to = [b, b, b, a, b, b, b, b, b, b, b, b, a, c, a, c, c]}

**************************************************
skeleton: (3,3)\Loop{16}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8074, clauses: 30998
last 8074 length 30998
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.883329279000
  min duration 0.028639305000
  total durat. 1.141408715000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.264177619000
  min duration 0.041725573000
  total durat. 1.562733064000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 406}
    , self = 92
    , parent = Nothing
    , duration = 1.264177619000
    , status = Fail
    , start = 2025-09-03 11:19:54.864354392 UTC
    , finish = 2025-09-03 11:19:56.128532011 UTC
    , thread_cap_info = ("ThreadId 129", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.722786710000
  min duration 0.012769433000
  total durat. 1.171454439000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.851481386000
  min duration 0.668008755000
  total durat. 1.519490141000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.785999632000
  min duration 0.626962779000
  total durat. 1.412962411000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.586996126000
  min duration 0.523264234000
  total durat. 1.110260360000
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.037923542000
  min duration 2.037923542000
  total durat. 2.037923542000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 91
    , parent = Nothing
    , duration = 2.037923542000
    , status = Fail
    , start = 2025-09-03 11:19:54.087994289 UTC
    , finish = 2025-09-03 11:19:56.125917831 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.052607628000
  min duration 2.052607628000
  total durat. 2.052607628000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 93
    , parent = Nothing
    , duration = 2.052607628000
    , status = Success
    , start = 2025-09-03 11:19:54.104358324 UTC
    , finish = 2025-09-03 11:19:56.156965952 UTC
    , thread_cap_info = ("ThreadId 69", 3, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                = 12} , self = 91 , parent = Nothing , duration = 2.037923542000 , status
F                = Fail , start = 2025-09-03 11:19:54.087994289 UTC , finish = 2025-09-03
F                11:19:56.125917831 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                
| F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F              = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F              = 12} , self = 50 , parent = Nothing , duration = 0.284435179000 , status
| F              = Fail , start = 2025-09-03 11:19:54.088015558 UTC , finish = 2025-09-03
| F              11:19:54.372450737 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 9 , total_length = 162} , self = 70 , parent = Nothing
| | F            , duration = 0.722786710000 , status = Fail , start = 2025-09-03 11:19:54.089307564
| | F            UTC , finish = 2025-09-03 11:19:54.812094274 UTC , thread_cap_info = ("ThreadId
| | F            52", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F          = 162} , self = 47 , parent = Nothing , duration = 0.166402429000 , status
| | | F          = Fail , start = 2025-09-03 11:19:54.093889392 UTC , finish = 2025-09-03
| | | F          11:19:54.260291821 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F        = 162} , self = 41 , parent = Nothing , duration = 0.120829096000 , status
| | | | F        = Fail , start = 2025-09-03 11:19:54.10434821 UTC , finish = 2025-09-03
| | | | F        11:19:54.225177306 UTC , thread_cap_info = ("ThreadId 64", 1, False)}
| | | | F        
| | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F      = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | | | F      = 0 , alphabet_size = 9 , total_length = 162} , self = 49 , parent = Nothing
| | | | | F      , duration = 0.247500961000 , status = Fail , start = 2025-09-03 11:19:54.104352842
| | | | | F      UTC , finish = 2025-09-03 11:19:54.351853803 UTC , thread_cap_info = ("ThreadId
| | | | | F      54", 2, False)}
| | | | | F      
| | | | | | S    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | S    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | S    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | S    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | S    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | S    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | S    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | S    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | S    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | | S    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | | S    = 12} , self = 93 , parent = Nothing , duration = 2.052607628000 , status
| | | | | | S    = Success , start = 2025-09-03 11:19:54.104358324 UTC , finish = 2025-09-03
| | | | | | S    11:19:56.156965952 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
| | | | | | S    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F  = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | | | | | F  = 0 , alphabet_size = 3 , total_length = 12} , self = 48 , parent = Nothing
| | | | | | | F  , duration = 0.188397335000 , status = Fail , start = 2025-09-03 11:19:54.157282356
| | | | | | | F  UTC , finish = 2025-09-03 11:19:54.345679691 UTC , thread_cap_info = ("ThreadId
| | | | | | | F  74", 0, False)}
| | | | | | | F  
| | | | F | | |  
| | | F   | | |  
| | |     | | F  
| | |     F |    
| F |       |    
| F |       |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |       |    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F |       |    = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| F |       |    = 45} , self = 67 , parent = Nothing , duration = 0.136000776000 , status
| F |       |    = Fail , start = 2025-09-03 11:19:54.403951264 UTC , finish = 2025-09-03
| F |       |    11:19:54.53995204 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| F |       |    
| | | F     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     |    = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | F     |    = 4 , total_length = 40} , self = 68 , parent = Nothing , duration = 0.304229782000
| | | F     |    , status = Fail , start = 2025-09-03 11:19:54.420282133 UTC , finish =
| | | F     |    2025-09-03 11:19:54.724511915 UTC , thread_cap_info = ("ThreadId 104",
| | | F     |    0, False)}
| | | F     |    
| | | | F   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | F   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | F   |    = 4 , total_length = 40} , self = 84 , parent = Nothing , duration = 0.668008755000
| | | | F   |    , status = Fail , start = 2025-09-03 11:19:54.440373114 UTC , finish =
| | | | F   |    2025-09-03 11:19:55.108381869 UTC , thread_cap_info = ("ThreadId 107",
| | | | F   |    0, False)}
| | | | F   |    
| | | | | F |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F |    = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | | F |    alphabet_size = 4 , total_length = 45} , self = 69 , parent = Nothing ,
| | | | | F |    duration = 0.225428754000 , status = Fail , start = 2025-09-03 11:19:54.499099537
| | | | | F |    UTC , finish = 2025-09-03 11:19:54.724528291 UTC , thread_cap_info = ("ThreadId
| | | | | F |    108", 0, False)}
| | | | | F |    
| F | | | | |    
| F | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| F | | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| F | | | | |    = 4 , total_length = 45} , self = 86 , parent = Nothing , duration = 0.851481386000
| F | | | | |    , status = Fail , start = 2025-09-03 11:19:54.544435842 UTC , finish =
| F | | | | |    2025-09-03 11:19:55.395917228 UTC , thread_cap_info = ("ThreadId 109",
| F | | | | |    0, False)}
| F | | | | |    
| | | F | | |    
| | |   | F |    
| | | F |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | F |   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | F |   |    = 4 , total_length = 40} , self = 87 , parent = Nothing , duration = 0.785999632000
| | | F |   |    , status = Fail , start = 2025-09-03 11:19:54.724552267 UTC , finish =
| | | F |   |    2025-09-03 11:19:55.510551899 UTC , thread_cap_info = ("ThreadId 114",
| | | F |   |    0, False)}
| | | F |   |    
| | | | | F |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | F |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | F |    = 4 , total_length = 45} , self = 85 , parent = Nothing , duration = 0.626962779000
| | | | | F |    , status = Fail , start = 2025-09-03 11:19:54.724563072 UTC , finish =
| | | | | F |    2025-09-03 11:19:55.351525851 UTC , thread_cap_info = ("ThreadId 115",
| | | | | F |    0, False)}
| | | | | F |    
| | F | | | |    
| | F | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | F | | | |    = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | F | | | |    total_length = 406} , self = 89 , parent = Nothing , duration = 0.883329279000
| | F | | | |    , status = Fail , start = 2025-09-03 11:19:54.862067639 UTC , finish =
| | F | | | |    2025-09-03 11:19:55.745396918 UTC , thread_cap_info = ("ThreadId 128",
| | F | | | |    2, False)}
| | F | | | |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | F  = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | F  total_length = 406} , self = 92 , parent = Nothing , duration = 1.264177619000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:19:54.864354392 UTC , finish =
| | | | | | | F  2025-09-03 11:19:56.128532011 UTC , thread_cap_info = ("ThreadId 129",
| | | | | | | F  2, False)}
| | | | | | | F  
| | | | F | | |  
| | | | F | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | F | | |  = 4 , total_length = 40} , self = 88 , parent = Nothing , duration = 0.586996126000
| | | | F | | |  , status = Fail , start = 2025-09-03 11:19:55.12522767 UTC , finish = 2025-09-03
| | | | F | | |  11:19:55.712223796 UTC , thread_cap_info = ("ThreadId 134", 0, False)}
| | | | F | | |  
| | | | | F | |  
| F | | |   | |  
| F | | |   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   | |  = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| F | | |   | |  alphabet_size = 4 , total_length = 45} , self = 90 , parent = Nothing ,
| F | | |   | |  duration = 0.523264234000 , status = Fail , start = 2025-09-03 11:19:55.40565513
| F | | |   | |  UTC , finish = 2025-09-03 11:19:55.928919364 UTC , thread_cap_info = ("ThreadId
| F | | |   | |  135", 0, False)}
| F | | |   | |  
| | | F |   | |  
| | |   F   | |  
| | F       | |  
| F         | |  
F           | |  
            | F  
            S    
