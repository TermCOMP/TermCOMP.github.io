last 9642 length 63816
CNF 9642 vars 63816 clauses
last 10854 length 82424
CNF 10854 vars 82424 clauses
last 25452 length 172373
CNF 25452 vars 172373 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5579, clauses: 23856
last 5579 length 23856
CNF 5579 vars 23856 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5579, clauses: 23856, status: Satisfied, time: 0.21800188s
last 17442 length 117085
CNF 17442 vars 117085 clauses
last 16765 length 110763
CNF 16765 vars 110763 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4795, clauses: 19831
last 4795 length 19831
CNF 4795 vars 19831 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4307, clauses: 17388
last 4307 length 17388
CNF 4307 vars 17388 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4795, clauses: 19831, status: Unsatisfied, time: 0.572280076s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4307, clauses: 17388, status: Unsatisfied, time: 0.508422048s
last 16340 length 166267
CNF 16340 vars 166267 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15114, clauses: 63625
last 15114 length 63625
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9210, clauses: 39635
last 9210 length 39635
CNF 15114 vars 63625 clauses
CNF 9210 vars 39635 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15512, clauses: 65323
last 15512 length 65323
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9564, clauses: 41427
last 9564 length 41427
CNF 15512 vars 65323 clauses
CNF 9564 vars 41427 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9564, clauses: 41427, status: Unsatisfied, time: 0.628088234s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7946, clauses: 34849
last 7946 length 34849
CNF 7946 vars 34849 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7946, clauses: 34849, status: Satisfied, time: 0.84913083s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15114, clauses: 63625, status: Unsatisfied, time: 2.223905673s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9210, clauses: 39635, status: Unsatisfied, time: 2.206216565s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7136, clauses: 30429
last 7136 length 30429
CNF 7136 vars 30429 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 26 strict rules and 4 weak rules on 6 letters       EDG
SRS with 12 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 8 strict rules and 4 weak rules on 6 letters       EDG
SRS with 8 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, a, b, b, a, b, a, b, a] -> [ a , b , a , b , a , b , b , a , b , a , b , b , a ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] -> [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] -> [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 10) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 12) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 10) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 10) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 10) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, a]#
  , Wk  / 21A 22A 23A - \
        | 21A 22A 23A - |
        | 21A 22A 23A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 22A 23A 23A - \
        | 22A 23A 23A - |
        | 22A 23A 23A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 12) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 10) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  0A - \
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  0A  - \
        | -4A 0A  0A  0A  - |
        | -4A -4A 0A  0A  - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  4A - \
        | 0A  0A  0A  0A - |
        | -4A 0A  0A  0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A 4A - \
        | -4A -4A 0A 0A - |
        | -4A -4A 0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [a, a]#
  , Wk  / 8A 8A 11A 12A - \
        | 8A 8A 11A 12A - |
        | 8A 8A 11A 12A - |
        | 8A 8A 11A 12A - |
        \ -  -  -   -   - / )
  ( [a, b]#
  , Wk  / 13A 13A 13A 14A - \
        | 13A 13A 13A 14A - |
        | 13A 13A 13A 14A - |
        | 13A 13A 13A 14A - |
        \ -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}\Mirror(4,4)\Deepee(26/4,6)\EDG(12/4,6)\Matrix{\Arctic}{3}\EDG(8/4,6)\Matrix{\Arctic}{4}(0/4,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.221889032000
  min duration 0.871815411000
  total durat. 3.280904059000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 294}
    , self = 69
    , parent = Nothing
    , duration = 1.187199616000
    , status = Fail
    , start = 2025-09-03 12:53:46.308412381 UTC
    , finish = 2025-09-03 12:53:47.495611997 UTC
    , thread_cap_info = ("ThreadId 108", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 226}
    , self = 77
    , parent = Nothing
    , duration = 1.221889032000
    , status = Fail
    , start = 2025-09-03 12:53:47.890043714 UTC
    , finish = 2025-09-03 12:53:49.111932746 UTC
    , thread_cap_info = ("ThreadId 125", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.006240522000
  min duration 3.006240522000
  total durat. 3.006240522000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 224}
    , self = 79
    , parent = Nothing
    , duration = 3.006240522000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:53:46.408398421 UTC
    , finish = 2025-09-03 12:53:49.414638943 UTC
    , thread_cap_info = ("ThreadId 113", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.763323425000
  min duration 1.340388217000
  total durat. 6.315771923000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 67
    , parent = Nothing
    , duration = 1.340388217000
    , status = Fail
    , start = 2025-09-03 12:53:45.049305352 UTC
    , finish = 2025-09-03 12:53:46.389693569 UTC
    , thread_cap_info = ("ThreadId 74", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 226}
    , self = 82
    , parent = Nothing
    , duration = 2.212060281000
    , status = Fail
    , start = 2025-09-03 12:53:47.908483909 UTC
    , finish = 2025-09-03 12:53:50.12054419 UTC
    , thread_cap_info = ("ThreadId 126", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 224}
    , self = 78
    , parent = Nothing
    , duration = 2.763323425000
    , status = Fail
    , start = 2025-09-03 12:53:46.448401848 UTC
    , finish = 2025-09-03 12:53:49.211725273 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.560004006000
  min duration 1.560004006000
  total durat. 1.560004006000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 294}
    , self = 72
    , parent = Nothing
    , duration = 1.560004006000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:46.328390103 UTC
    , finish = 2025-09-03 12:53:47.888394109 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.558916775000
  min duration 0.196260474000
  total durat. 3.021844193000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 53
    , parent = Nothing
    , duration = 1.017063103000
    , status = Fail
    , start = 2025-09-03 12:53:45.281065056 UTC
    , finish = 2025-09-03 12:53:46.298128159 UTC
    , thread_cap_info = ("ThreadId 92", 2, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 68
    , parent = Nothing
    , duration = 1.558916775000
    , status = Fail
    , start = 2025-09-03 12:53:45.070008966 UTC
    , finish = 2025-09-03 12:53:46.628925741 UTC
    , thread_cap_info = ("ThreadId 78", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.973331506000
  min duration 2.973331506000
  total durat. 2.973331506000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 224}
    , self = 84
    , parent = Nothing
    , duration = 2.973331506000
    , status = Fail
    , start = 2025-09-03 12:53:49.435367625 UTC
    , finish = 2025-09-03 12:53:52.408699131 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.703222247000
  min duration 2.703222247000
  total durat. 2.703222247000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 226}
    , self = 88
    , parent = Nothing
    , duration = 2.703222247000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:49.889088333 UTC
    , finish = 2025-09-03 12:53:52.59231058 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.506258245000
  min duration 0.871679654000
  total durat. 3.377937899000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 224}
    , self = 86
    , parent = Nothing
    , duration = 2.506258245000
    , status = Fail
    , start = 2025-09-03 12:53:49.908394312 UTC
    , finish = 2025-09-03 12:53:52.414652557 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.742637510000
  min duration 0.620091527000
  total durat. 1.362729037000
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.395350638000
  min duration 1.395350638000
  total durat. 1.395350638000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 226}
    , self = 85
    , parent = Nothing
    , duration = 1.395350638000
    , status = Success
    , start = 2025-09-03 12:53:51.017418925 UTC
    , finish = 2025-09-03 12:53:52.412769563 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F              = 24} , self = 45 , parent = Nothing , duration = 0.249495111000 , status
F              = Fail , start = 2025-09-03 12:53:45.031550539 UTC , finish = 2025-09-03
F              12:53:45.28104565 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F              
| F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F            = 24} , self = 51 , parent = Nothing , duration = 0.734792010000 , status
| F            = Fail , start = 2025-09-03 12:53:45.032474854 UTC , finish = 2025-09-03
| F            12:53:45.767266864 UTC , thread_cap_info = ("ThreadId 51", 1, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F          = 104} , self = 52 , parent = Nothing , duration = 0.871815411000 , status
| | F          = Fail , start = 2025-09-03 12:53:45.03856796 UTC , finish = 2025-09-03
| | F          12:53:45.910383371 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F        = 104} , self = 67 , parent = Nothing , duration = 1.340388217000 , status
| | | F        = Fail , start = 2025-09-03 12:53:45.049305352 UTC , finish = 2025-09-03
| | | F        12:53:46.389693569 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
| | | F        
| | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F      = 0 , alphabet_size = 2 , total_length = 24} , self = 68 , parent = Nothing
| | | | F      , duration = 1.558916775000 , status = Fail , start = 2025-09-03 12:53:45.070008966
| | | | F      UTC , finish = 2025-09-03 12:53:46.628925741 UTC , thread_cap_info = ("ThreadId
| | | | F      78", 1, False)}
| | | | F      
| | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F    = 0 , alphabet_size = 2 , total_length = 24} , self = 47 , parent = Nothing
| | | | | F    , duration = 0.196260474000 , status = Fail , start = 2025-09-03 12:53:45.095013744
| | | | | F    UTC , finish = 2025-09-03 12:53:45.291274218 UTC , thread_cap_info = ("ThreadId
| | | | | F    81", 1, False)}
| | | | | F    
F | | | | |    
F | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | | | |    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F | | | | |    = 0 , alphabet_size = 4 , total_length = 104} , self = 53 , parent = Nothing
F | | | | |    , duration = 1.017063103000 , status = Fail , start = 2025-09-03 12:53:45.281065056
F | | | | |    UTC , finish = 2025-09-03 12:53:46.298128159 UTC , thread_cap_info = ("ThreadId
F | | | | |    92", 2, False)}
F | | | | |    
| | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | F  = 0 , alphabet_size = 4 , total_length = 104} , self = 50 , parent = Nothing
| | | | | | F  , duration = 0.249603841000 , status = Fail , start = 2025-09-03 12:53:45.288968409
| | | | | | F  UTC , finish = 2025-09-03 12:53:45.53857225 UTC , thread_cap_info = ("ThreadId
| | | | | | F  94", 2, False)}
| | | | | | F  
| | | | | F |  
| | | | |   F  
| F | | |      
|   F | |      
F     | |      
F     | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F     | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     | |      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F     | |      = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
F     | |      = 294} , self = 69 , parent = Nothing , duration = 1.187199616000 , status
F     | |      = Fail , start = 2025-09-03 12:53:46.308412381 UTC , finish = 2025-09-03
F     | |      12:53:47.495611997 UTC , thread_cap_info = ("ThreadId 108", 2, False)}
F     | |      
| E   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| E   | |      = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   | |      = 294} , self = 72 , parent = Nothing , duration = 1.560004006000 , status
| E   | |      = Except "AsyncCancelled" , start = 2025-09-03 12:53:46.328390103 UTC ,
| E   | |      finish = 2025-09-03 12:53:47.888394109 UTC , thread_cap_info = ("ThreadId
| E   | |      109", 2, False)}
| E   | |      
| |   F |      
| | E   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E   |      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | E   |      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E   |      = 224} , self = 79 , parent = Nothing , duration = 3.006240522000 , status
| | E   |      = Except "<<timeout>>" , start = 2025-09-03 12:53:46.408398421 UTC , finish
| | E   |      = 2025-09-03 12:53:49.414638943 UTC , thread_cap_info = ("ThreadId 113",
| | E   |      2, False)}
| | E   |      
| | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F |      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | F |      = 224} , self = 78 , parent = Nothing , duration = 2.763323425000 , status
| | | F |      = Fail , start = 2025-09-03 12:53:46.448401848 UTC , finish = 2025-09-03
| | | F |      12:53:49.211725273 UTC , thread_cap_info = ("ThreadId 115", 2, False)}
| | | F |      
| | | | F      
F | | |        
S | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |        = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
S | | |        , alphabet_size = 6 , total_length = 294} , self = 70 , parent = Nothing
S | | |        , duration = 0.346554103000 , status = Success , start = 2025-09-03 12:53:47.508414516
S | | |        UTC , finish = 2025-09-03 12:53:47.854968619 UTC , thread_cap_info = ("ThreadId
S | | |        119", 2, False)}
S | | |        
S | | |        
  E | |        
F   | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F   | |        = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
F   | |        = 226} , self = 77 , parent = Nothing , duration = 1.221889032000 , status
F   | |        = Fail , start = 2025-09-03 12:53:47.890043714 UTC , finish = 2025-09-03
F   | |        12:53:49.111932746 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
F   | |        
| F | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F | |        = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F | |        = 226} , self = 82 , parent = Nothing , duration = 2.212060281000 , status
| F | |        = Fail , start = 2025-09-03 12:53:47.908483909 UTC , finish = 2025-09-03
| F | |        12:53:50.12054419 UTC , thread_cap_info = ("ThreadId 126", 2, False)}
| F | |        
F | | |        
F | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |        = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
F | | |        alphabet_size = 6 , total_length = 226} , self = 80 , parent = Nothing
F | | |        , duration = 0.742637510000 , status = Fail , start = 2025-09-03 12:53:49.128433481
F | | |        UTC , finish = 2025-09-03 12:53:49.871070991 UTC , thread_cap_info = ("ThreadId
F | | |        129", 2, False)}
F | | |        
| | | F        
| | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F        = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | F        alphabet_size = 6 , total_length = 224} , self = 81 , parent = Nothing
| | | F        , duration = 0.620091527000 , status = Fail , start = 2025-09-03 12:53:49.268970725
| | | F        UTC , finish = 2025-09-03 12:53:49.889062252 UTC , thread_cap_info = ("ThreadId
| | | F        130", 2, False)}
| | | F        
| | E |        
| | F |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | F |        , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | F |        = 6 , total_length = 224} , self = 84 , parent = Nothing , duration = 2.973331506000
| | F |        , status = Fail , start = 2025-09-03 12:53:49.435367625 UTC , finish =
| | F |        2025-09-03 12:53:52.408699131 UTC , thread_cap_info = ("ThreadId 134",
| | F |        2, False)}
| | F |        
F | | |        
  | | F        
E | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
E | |          , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
E | |          = 6 , total_length = 226} , self = 88 , parent = Nothing , duration = 2.703222247000
E | |          , status = Except "AsyncCancelled" , start = 2025-09-03 12:53:49.889088333
E | |          UTC , finish = 2025-09-03 12:53:52.59231058 UTC , thread_cap_info = ("ThreadId
E | |          135", 2, False)}
E | |          
| | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | F        , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | F        = 6 , total_length = 224} , self = 86 , parent = Nothing , duration = 2.506258245000
| | | F        , status = Fail , start = 2025-09-03 12:53:49.908394312 UTC , finish =
| | | F        2025-09-03 12:53:52.414652557 UTC , thread_cap_info = ("ThreadId 136",
| | | F        2, False)}
| | | F        
| F | |        
| F | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| F | |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| F | |        = 6 , total_length = 226} , self = 83 , parent = Nothing , duration = 0.871679654000
| F | |        , status = Fail , start = 2025-09-03 12:53:50.129569777 UTC , finish =
| F | |        2025-09-03 12:53:51.001249431 UTC , thread_cap_info = ("ThreadId 138",
| F | |        2, False)}
| F | |        
| F | |        
| S | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| S | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |        = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| S | |        alphabet_size = 6 , total_length = 226} , self = 85 , parent = Nothing
| S | |        , duration = 1.395350638000 , status = Success , start = 2025-09-03 12:53:51.017418925
| S | |        UTC , finish = 2025-09-03 12:53:52.412769563 UTC , thread_cap_info = ("ThreadId
| S | |        143", 2, False)}
| S | |        
| | F |        
| S   |        
|     F        
E              
