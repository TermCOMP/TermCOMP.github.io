last 1748 length 7573
CNF 1748 vars 7573 clauses
last 2470 length 10627
CNF 2470 vars 10627 clauses
last 3053 length 13825
CNF 3053 vars 13825 clauses
last 3657 length 16268
last 546 length 2255
last 531 length 2331
CNF 531 vars 2331 clauses
CNF 546 vars 2255 clauses
CNF 3657 vars 16268 clauses
last 652 length 2670
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1435, clauses: 5200
last 3230 length 14297
last 706 length 2874
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4973, clauses: 20705
last 2900 length 14085
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4689, clauses: 18047
last 1435 length 5200
CNF 652 vars 2670 clauses
CNF 706 vars 2874 clauses
last 4973 length 20705
CNF 3230 vars 14297 clauses
last 4689 length 18047
CNF 2900 vars 14085 clauses
CNF 1435 vars 5200 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6795
CNF 4973 vars 20705 clauses
CNF 4689 vars 18047 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5934, clauses: 24715
last 1856 length 6795
last 5934 length 24715
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1435, clauses: 5200, status: Unsatisfied, time: 0.236447698s
CNF 1856 vars 6795 clauses
CNF 5934 vars 24715 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2988, clauses: 12184
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4077, clauses: 15272
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17228, clauses: 72487
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4973, clauses: 20705, status: Unsatisfied, time: 0.439629737s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6795, status: Unsatisfied, time: 0.223663189s
last 2988 length 12184
last 4077 length 15272
last 17228 length 72487
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2369, clauses: 9072
CNF 2988 vars 12184 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3590, clauses: 14787
CNF 4077 vars 15272 clauses
last 2369 length 9072
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15939, clauses: 67099
last 3590 length 14787
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4077, clauses: 15272, status: Satisfied, time: 0.274868337s
last 15939 length 67099
CNF 17228 vars 72487 clauses
CNF 2369 vars 9072 clauses
CNF 3590 vars 14787 clauses
CNF 15939 vars 67099 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5934, clauses: 24715, status: Unsatisfied, time: 0.768906242s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2988, clauses: 12184, status: Unsatisfied, time: 0.562297265s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2369, clauses: 9072, status: Unsatisfied, time: 0.536222814s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3590, clauses: 14787, status: Unsatisfied, time: 0.697333125s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3056, clauses: 11871
last 3056 length 11871
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4439, clauses: 16879
last 4439 length 16879
CNF 4439 vars 16879 clauses
CNF 3056 vars 11871 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8542, clauses: 36158
last 8542 length 36158
CNF 8542 vars 36158 clauses
last 2854 length 12501
CNF 2854 vars 12501 clauses
last 2701 length 12773
CNF 2701 vars 12773 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4689, clauses: 18047, status: Unsatisfied, time: 1.893482525s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10066, clauses: 43350
last 10066 length 43350
CNF 10066 vars 43350 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3768, clauses: 14090
last 3768 length 14090
CNF 3768 vars 14090 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3056, clauses: 11871, status: Unsatisfied, time: 0.902633171s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10500, clauses: 44149
last 10500 length 44149
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5703, clauses: 21931
last 5703 length 21931
CNF 10500 vars 44149 clauses
CNF 5703 vars 21931 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15305, clauses: 64439
last 15305 length 64439
CNF 15305 vars 64439 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15305, clauses: 64439, status: Satisfied, time: 0.537219028s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 2900 length 14085
last 3230 length 14297
CNF 2900 vars 14085 clauses
CNF 3230 vars 14297 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4077, clauses: 15272
last 4077 length 15272
CNF 4077 vars 15272 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4077, clauses: 15272, status: Satisfied, time: 0.129310845s
last 2854 length 12501
CNF 2854 vars 12501 clauses
last 2701 length 12773
CNF 2701 vars 12773 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3768, clauses: 14090
last 3768 length 14090
CNF 3768 vars 14090 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15305, clauses: 64439
last 15305 length 64439
CNF 15305 vars 64439 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15305, clauses: 64439, status: Satisfied, time: 0.298399996s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4439, clauses: 16879, status: Unsatisfied, time: 4.608070606s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 rules on 4 letters       DP
SRS with 36 strict rules and 8 weak rules on 8 letters       weights
SRS with 4 strict rules and 8 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 2 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 8 weak rules on 5 letters       EDG
  SRS with 1 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

  2 SRS with 2 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 8 weak rules on 5 letters       EDG
  SRS with 1 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a] -> [a, b, b, b] {- Input 0 -}
  [b, b, a, b] -> [a, a, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a]] -> [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, a]] -> [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] -> [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] -> [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] -> [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] -> [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ b , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [b, b]# , [b, b] , [ b , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [ b , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [a, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ b , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, b]# , [b, b] , [ b , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [ b , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, a]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, a], [a, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ([a, a], 3/1)
  ([a, b], 2/1)
  ([b, a], 3/1)
  ([b, b], 2/1)
  ([a, a]#, 1/1)
  ([a, b]#, 2/1)
  ([b, a]#, 3/1)
  ([b, b]#, 3/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 11A 11A 11A - \
        | 11A 11A 11A - |
        | 11A 11A 11A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / -   1A 0A \
        | -1A 0A 0A |
        \ -   -  0A / )
  ( [a, b]
  , Wk  / 0A  -  -  \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( [b, a]
  , Wk  / -1A 0A  0A \
        | -2A -1A -  |
        \ -   -   0A / )
  ( [b, b]
  , Wk  / -   2A 0A  \
        | -2A -  -2A |
        \ -   -  0A  / )
  ( [a, a]#
  , Wk  / 1A 1A 1A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]#
  , Wk  / 11A 11A 11A - \
        | 11A 11A 11A - |
        | 11A 11A 11A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / -   1A 0A \
        | -1A 0A 0A |
        \ -   -  0A / )
  ( [a, b]
  , Wk  / 0A  -  -  \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( [b, a]
  , Wk  / -1A 0A  0A \
        | -2A -1A -  |
        \ -   -   0A / )
  ( [b, b]
  , Wk  / -   2A 0A  \
        | -2A -  -2A |
        \ -   -  0A  / )
  ( [b, a]#
  , Wk  / 1A 1A 1A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG

**************************************************
skeleton: (2,2)\TileAllAll{2}(8,4)\Deepee(36/8,8)\Weight(4/8,6)\EDG[(2/8,5)\Matrix{\Arctic}{3}\EDG(1/8,5)\Matrix{\ArcticBZ}{3}(0/8,4)\EDG[],(2/8,5)\Matrix{\Arctic}{3}\EDG(1/8,5)\Matrix{\ArcticBZ}{3}(0/8,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.435070956000
  min duration 0.017171043000
  total durat. 1.709417067000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.483731586000
  min duration 0.010729066000
  total durat. 1.565659249000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.006184165000
  min duration 0.948615206000
  total durat. 2.954799371000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 81}
    , self = 104
    , parent = Nothing
    , duration = 2.006184165000
    , status = Success
    , start = 2025-09-03 13:26:27.89698839 UTC
    , finish = 2025-09-03 13:26:29.903172555 UTC
    , thread_cap_info = ("ThreadId 164", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.900595560000
  min duration 0.668540044000
  total durat. 1.569135604000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.812314884000
  min duration 0.735977778000
  total durat. 1.548292662000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.837255200000
  min duration 0.779972116000
  total durat. 1.617227316000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.775728071000
  min duration 0.637270856000
  total durat. 1.412998927000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.152247781000
  min duration 0.418176159000
  total durat. 6.157391801000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 81}
    , self = 126
    , parent = Nothing
    , duration = 1.058771643000
    , status = Fail
    , start = 2025-09-03 13:26:31.065959256 UTC
    , finish = 2025-09-03 13:26:32.124730899 UTC
    , thread_cap_info = ("ThreadId 190", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 108}
    , self = 102
    , parent = Nothing
    , duration = 2.014477665000
    , status = Fail
    , start = 2025-09-03 13:26:25.93063541 UTC
    , finish = 2025-09-03 13:26:27.945113075 UTC
    , thread_cap_info = ("ThreadId 123", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 81}
    , self = 106
    , parent = Nothing
    , duration = 2.152247781000
    , status = Fail
    , start = 2025-09-03 13:26:27.772045482 UTC
    , finish = 2025-09-03 13:26:29.924293263 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.278721552000
  min duration 0.696985953000
  total durat. 1.975707505000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 28}
    , self = 103
    , parent = Nothing
    , duration = 1.278721552000
    , status = Fail
    , start = 2025-09-03 13:26:27.104480538 UTC
    , finish = 2025-09-03 13:26:28.38320209 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 4.801293634000
  min duration 4.801293634000
  total durat. 4.801293634000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 21}
    , self = 125
    , parent = Nothing
    , duration = 4.801293634000
    , status = Fail
    , start = 2025-09-03 13:26:27.322195062 UTC
    , finish = 2025-09-03 13:26:32.123488696 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 5.732382764000
  min duration 5.732382764000
  total durat. 5.732382764000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 14}
    , self = 122
    , parent = Nothing
    , duration = 5.732382764000
    , status = Fail
    , start = 2025-09-03 13:26:25.745728162 UTC
    , finish = 2025-09-03 13:26:31.478110926 UTC
    , thread_cap_info = ("ThreadId 71", 3, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                    = 14} , self = 74 , parent = Nothing , duration = 0.149717250000 , status
F                    = Fail , start = 2025-09-03 13:26:25.726607491 UTC , finish = 2025-09-03
F                    13:26:25.876324741 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F                  = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                  = 72} , self = 68 , parent = Nothing , duration = 0.108463925000 , status
| F                  = Fail , start = 2025-09-03 13:26:25.740117098 UTC , finish = 2025-09-03
| F                  13:26:25.848581023 UTC , thread_cap_info = ("ThreadId 69", 1, False)}
| F                  
| | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                = 14} , self = 122 , parent = Nothing , duration = 5.732382764000 , status
| | F                = Fail , start = 2025-09-03 13:26:25.745728162 UTC , finish = 2025-09-03
| | F                13:26:31.478110926 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
| | F                
| | | F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F              = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F              = 14} , self = 81 , parent = Nothing , duration = 0.304055125000 , status
| | | F              = Fail , start = 2025-09-03 13:26:25.764650098 UTC , finish = 2025-09-03
| | | F              13:26:26.068705223 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | F            = 108} , self = 80 , parent = Nothing , duration = 0.223067519000 , status
| | | | F            = Fail , start = 2025-09-03 13:26:25.784679986 UTC , finish = 2025-09-03
| | | | F            13:26:26.007747505 UTC , thread_cap_info = ("ThreadId 89", 0, False)}
| | | | F            
| F | | |            
| F | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F | | |            = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| F | | |            = 90} , self = 84 , parent = Nothing , duration = 0.322852139000 , status
| F | | |            = Fail , start = 2025-09-03 13:26:25.86536789 UTC , finish = 2025-09-03
| F | | |            13:26:26.188220029 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| F | | |            
F | | | |            
F | | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F | | | |            = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F | | | |            = 28} , self = 83 , parent = Nothing , duration = 0.272288674000 , status
F | | | |            = Fail , start = 2025-09-03 13:26:25.8843704 UTC , finish = 2025-09-03
F | | | |            13:26:26.156659074 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
F | | | |            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F          = 28} , self = 82 , parent = Nothing , duration = 0.210235187000 , status
| | | | | F          = Fail , start = 2025-09-03 13:26:25.884372671 UTC , finish = 2025-09-03
| | | | | F          13:26:26.094607858 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | F        = 3 , total_length = 21} , self = 86 , parent = Nothing , duration = 0.418176159000
| | | | | | F        , status = Fail , start = 2025-09-03 13:26:25.885288419 UTC , finish =
| | | | | | F        2025-09-03 13:26:26.303464578 UTC , thread_cap_info = ("ThreadId 121",
| | | | | | F        3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | | | F      = 90} , self = 85 , parent = Nothing , duration = 0.350557054000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:26:25.885291424 UTC , finish = 2025-09-03
| | | | | | | F      13:26:26.235848478 UTC , thread_cap_info = ("ThreadId 111", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | F    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | | | F    = 3 , total_length = 21} , self = 87 , parent = Nothing , duration = 0.668540044000
| | | | | | | | F    , status = Fail , start = 2025-09-03 13:26:25.916153212 UTC , finish =
| | | | | | | | F    2025-09-03 13:26:26.584693256 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | | F    3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F  = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | | | | F  alphabet_size = 6 , total_length = 108} , self = 102 , parent = Nothing
| | | | | | | | | F  , duration = 2.014477665000 , status = Fail , start = 2025-09-03 13:26:25.93063541
| | | | | | | | | F  UTC , finish = 2025-09-03 13:26:27.945113075 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | F  123", 0, False)}
| | | | | | | | | F  
| | | | F | | | | |  
| | | F   | | | | |  
| | |     F | | | |  
| | | F     | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     | | | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F     | | | |  = 4 , total_length = 28} , self = 88 , parent = Nothing , duration = 0.513718553000
| | | F     | | | |  , status = Fail , start = 2025-09-03 13:26:26.094637853 UTC , finish =
| | | F     | | | |  2025-09-03 13:26:26.608356406 UTC , thread_cap_info = ("ThreadId 130",
| | | F     | | | |  3, False)}
| | | F     | | | |  
F | | |     | | | |  
F | | |     | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | |     | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | |     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | |     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | |     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | |     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F | | |     | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F | | |     | | | |  = 4 , total_length = 28} , self = 91 , parent = Nothing , duration = 0.900595560000
F | | |     | | | |  , status = Fail , start = 2025-09-03 13:26:26.156813098 UTC , finish =
F | | |     | | | |  2025-09-03 13:26:27.057408658 UTC , thread_cap_info = ("ThreadId 133",
F | | |     | | | |  3, False)}
F | | |     | | | |  
| F | |     | | | |  
| S | |     | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |     | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |     | | | |  = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| S | |     | | | |  alphabet_size = 5 , total_length = 90} , self = 89 , parent = Nothing ,
| S | |     | | | |  duration = 0.637270856000 , status = Success , start = 2025-09-03 13:26:26.228472786
| S | |     | | | |  UTC , finish = 2025-09-03 13:26:26.865743642 UTC , thread_cap_info = ("ThreadId
| S | |     | | | |  134", 0, False)}
| S | |     | | | |  
| | | |     | F | |  
| | | | E   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | E   |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | E   |   | |  = 5 , total_length = 90} , self = 92 , parent = Nothing , duration = 0.812314884000
| | | | E   |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:26:26.272260742
| | | | E   |   | |  UTC , finish = 2025-09-03 13:26:27.084575626 UTC , thread_cap_info = ("ThreadId
| | | | E   |   | |  136", 0, False)}
| | | | E   |   | |  
| | | | |   F   | |  
| | | | | F     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | F     | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | F     | |  = 3 , total_length = 21} , self = 93 , parent = Nothing , duration = 0.779972116000
| | | | | F     | |  , status = Fail , start = 2025-09-03 13:26:26.304680766 UTC , finish =
| | | | | F     | |  2025-09-03 13:26:27.084652882 UTC , thread_cap_info = ("ThreadId 139",
| | | | | F     | |  3, False)}
| | | | | F     | |  
| | | | | |     F |  
| | | | | | F     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F     |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | F     |  = 3 , total_length = 21} , self = 97 , parent = Nothing , duration = 0.696985953000
| | | | | | F     |  , status = Fail , start = 2025-09-03 13:26:26.588715962 UTC , finish =
| | | | | | F     |  2025-09-03 13:26:27.285701915 UTC , thread_cap_info = ("ThreadId 140",
| | | | | | F     |  3, False)}
| | | | | | F     |  
| | | F | | |     |  
| | | F | | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F | | |     |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F | | |     |  = 4 , total_length = 28} , self = 99 , parent = Nothing , duration = 0.837255200000
| | | F | | |     |  , status = Fail , start = 2025-09-03 13:26:26.62286349 UTC , finish = 2025-09-03
| | | F | | |     |  13:26:27.46011869 UTC , thread_cap_info = ("ThreadId 141", 3, False)}
| | | F | | |     |  
| S | | | | |     |  
F   | | | | |     |  
    | | E | |     |  
    | |   F |     |  
F   | |     |     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F   | |     |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | |     |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | |     |     |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F   | |     |     |  = 4 , total_length = 28} , self = 103 , parent = Nothing , duration = 1.278721552000
F   | |     |     |  , status = Fail , start = 2025-09-03 13:26:27.104480538 UTC , finish =
F   | |     |     |  2025-09-03 13:26:28.38320209 UTC , thread_cap_info = ("ThreadId 150", 0,
F   | |     |     |  False)}
F   | |     |     |  
|   | |     F     |  
| F | |           |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F | |           |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |           |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |           |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | |           |  = 3 , total_length = 21} , self = 125 , parent = Nothing , duration = 4.801293634000
| F | |           |  , status = Fail , start = 2025-09-03 13:26:27.322195062 UTC , finish =
| F | |           |  2025-09-03 13:26:32.123488696 UTC , thread_cap_info = ("ThreadId 155",
| F | |           |  3, False)}
| F | |           |  
| | | | F         |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F         |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F         |  = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F         |  = 81} , self = 100 , parent = Nothing , duration = 0.435070956000 , status
| | | | F         |  = Fail , start = 2025-09-03 13:26:27.333839366 UTC , finish = 2025-09-03
| | | | F         |  13:26:27.768910322 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| | | | F         |  
| | | | | F       |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F       |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F       |  = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | F       |  = 81} , self = 101 , parent = Nothing , duration = 0.483731586000 , status
| | | | | F       |  = Fail , start = 2025-09-03 13:26:27.372030888 UTC , finish = 2025-09-03
| | | | | F       |  13:26:27.855762474 UTC , thread_cap_info = ("ThreadId 156", 0, False)}
| | | | | F       |  
| | | F | |       |  
| | |   F |       |  
| | | F   |       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   |       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   |       |  = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | F   |       |  = 5 , total_length = 81} , self = 106 , parent = Nothing , duration = 2.152247781000
| | | F   |       |  , status = Fail , start = 2025-09-03 13:26:27.772045482 UTC , finish =
| | | F   |       |  2025-09-03 13:26:29.924293263 UTC , thread_cap_info = ("ThreadId 163",
| | | F   |       |  0, False)}
| | | F   |       |  
| | | |   F       |  
| | | | S         |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S         |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | S         |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | | S         |  = 5 , total_length = 81} , self = 104 , parent = Nothing , duration = 2.006184165000
| | | | S         |  , status = Success , start = 2025-09-03 13:26:27.89698839 UTC , finish
| | | | S         |  = 2025-09-03 13:26:29.903172555 UTC , thread_cap_info = ("ThreadId 164",
| | | | S         |  0, False)}
| | | | S         |  
| | | | |         F  
F | | | |            
  | | | S            
  | | F              
F | |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |                = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F | |                = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
F | |                = 90} , self = 111 , parent = Nothing , duration = 0.177503570000 , status
F | |                = Fail , start = 2025-09-03 13:26:29.92484462 UTC , finish = 2025-09-03
F | |                13:26:30.10234819 UTC , thread_cap_info = ("ThreadId 177", 3, False)}
F | |                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F              = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F              = 90} , self = 112 , parent = Nothing , duration = 0.184993710000 , status
| | | F              = Fail , start = 2025-09-03 13:26:29.932276796 UTC , finish = 2025-09-03
| | | F              13:26:30.117270506 UTC , thread_cap_info = ("ThreadId 176", 0, False)}
| | | F              
F | | |              
S | | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |              = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
S | | |              alphabet_size = 5 , total_length = 90} , self = 113 , parent = Nothing
S | | |              , duration = 0.775728071000 , status = Success , start = 2025-09-03 13:26:30.10241606
S | | |              UTC , finish = 2025-09-03 13:26:30.878144131 UTC , thread_cap_info = ("ThreadId
S | | |              180", 3, False)}
S | | |              
| | | F              
| | | E              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | E              = 5 , total_length = 90} , self = 115 , parent = Nothing , duration = 0.735977778000
| | | E              , status = Except "AsyncCancelled" , start = 2025-09-03 13:26:30.170954285
| | | E              UTC , finish = 2025-09-03 13:26:30.906932063 UTC , thread_cap_info = ("ThreadId
| | | E              181", 3, False)}
| | | E              
S | | |              
  | | E              
F | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |                = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F | |                = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 5 , total_length
F | |                = 81} , self = 120 , parent = Nothing , duration = 0.145509101000 , status
F | |                = Fail , start = 2025-09-03 13:26:30.913880656 UTC , finish = 2025-09-03
F | |                13:26:31.059389757 UTC , thread_cap_info = ("ThreadId 187", 3, False)}
F | |                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F              = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F              = 81} , self = 121 , parent = Nothing , duration = 0.210663297000 , status
| | | F              = Fail , start = 2025-09-03 13:26:30.92156516 UTC , finish = 2025-09-03
| | | F              13:26:31.132228457 UTC , thread_cap_info = ("ThreadId 188", 0, False)}
| | | F              
F | | |              
F | | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |              = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
F | | |              = 5 , total_length = 81} , self = 126 , parent = Nothing , duration = 1.058771643000
F | | |              , status = Fail , start = 2025-09-03 13:26:31.065959256 UTC , finish =
F | | |              2025-09-03 13:26:32.124730899 UTC , thread_cap_info = ("ThreadId 190",
F | | |              0, False)}
F | | |              
| | | F              
| | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | S              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | S              = 5 , total_length = 81} , self = 123 , parent = Nothing , duration = 0.948615206000
| | | S              , status = Success , start = 2025-09-03 13:26:31.143753399 UTC , finish
| | | S              = 2025-09-03 13:26:32.092368605 UTC , thread_cap_info = ("ThreadId 192",
| | | S              0, False)}
| | | S              
| | F |              
| |   S              
| F                  
F                    
