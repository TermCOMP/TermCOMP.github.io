last 640 length 2768
last 718 length 2897
last 662 length 2612
CNF 640 vars 2768 clauses
CNF 662 vars 2612 clauses
last 550 length 2221
CNF 718 vars 2897 clauses
CNF 550 vars 2221 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2983, clauses: 10927
last 2983 length 10927
CNF 2983 vars 10927 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3085, clauses: 11281
last 3085 length 11281
CNF 3085 vars 11281 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6930, clauses: 28483
last 6930 length 28483
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2983, clauses: 10927, status: Unsatisfied, time: 0.150972348s
CNF 6930 vars 28483 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3085, clauses: 11281, status: Unsatisfied, time: 0.148750365s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6930, clauses: 28483, status: Satisfied, time: 0.089472035s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7224, clauses: 29733
last 7224 length 29733
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4457, clauses: 17530
last 4457 length 17530
last 4344 length 19630
CNF 4457 vars 17530 clauses
CNF 4344 vars 19630 clauses
CNF 7224 vars 29733 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4632, clauses: 18259
last 4994 length 24628
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7224, clauses: 29733, status: Satisfied, time: 0.110347966s
last 672 length 2727
last 4632 length 18259
last 633 length 2747
CNF 4632 vars 18259 clauses
CNF 4994 vars 24628 clauses
CNF 633 vars 2747 clauses
CNF 672 vars 2727 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 10502
last 2877 length 10502
last 615 length 2404
last 566 length 2297
CNF 615 vars 2404 clauses
CNF 2877 vars 10502 clauses
CNF 566 vars 2297 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6884, clauses: 28307
last 6884 length 28307
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 10502, status: Unsatisfied, time: 0.154816109s
CNF 6884 vars 28307 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3096, clauses: 11246
last 3096 length 11246
CNF 3096 vars 11246 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7763, clauses: 32038
last 7763 length 32038
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4382, clauses: 17244
last 4382 length 17244
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3096, clauses: 11246, status: Unsatisfied, time: 0.12098607s
CNF 7763 vars 32038 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6884, clauses: 28307, status: Satisfied, time: 0.202776541s
CNF 4382 vars 17244 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4899, clauses: 19355
last 4899 length 19355
last 391 length 1622
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7763, clauses: 32038, status: Satisfied, time: 0.108923506s
CNF 391 vars 1622 clauses
CNF 4899 vars 19355 clauses
last 465 length 2074
CNF 465 vars 2074 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1941, clauses: 6878
last 1941 length 6878
CNF 1941 vars 6878 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5743, clauses: 23631
last 5743 length 23631
CNF 5743 vars 23631 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1941, clauses: 6878, status: Unsatisfied, time: 0.043254443s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 8 strict rules and 3 weak rules on 6 letters       EDG
SRS with 8 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 7 strict rules and 3 weak rules on 6 letters       EDG
SRS with 7 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 3 weak rules on 6 letters       weights
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 2 strict rules and 3 weak rules on 5 letters       Usable
SRS with 2 rules on 4 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [b, c] {- Input 0 -}
  [b, b] -> [a, c, c, c] {- Input 1 -}
  [c, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, b] {- Mirror (Input 0) -}
  [b, b] -> [c, c, c, a] {- Mirror (Input 1) -}
  [c, c] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A -1A 0A \
        | 2A  -   2A |
        \ -   -   0A / )
  ( b
  , Wk  / 1A -2A 1A \
        | -  -   1A |
        \ -  -   0A / )
  ( c
  , Wk  / 0A 0A -  \
        | -  -  1A |
        \ -  -  0A / )
  ( a#
  , Wk  / -1A -1A 0A \
        | -   -   -  |
        \ -   -   0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
  ( c#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A 2A 2A \
        | -2A -  -  |
        \ -   -  0A / )
  ( b
  , Wk  / -   0A 0A \
        | -2A 1A 1A |
        \ -   -  0A / )
  ( c
  , Wk  / -  0A  1A \
        | 0A -1A -  |
        \ -  -   0A / )
  ( a#
  , Wk  / -2A - 1A \
        | -   - -  |
        \ -   - 0A / )
  ( b#
  , Wk  / - 0A 0A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / -1A -1A 1A \
        | -   -   -  |
        \ -   -   0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  remove un-usable
    SRS
      [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
      [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
      [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee\EDG(8/3,6)\Matrix{\ArcticBZ}{3}\EDG(7/3,6)\Matrix{\ArcticBZ}{3}(6/3,6)\Weight\EDG(2/3,5)\Usable(2,4)\Weight(0,0)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.327988354000
  min duration 0.250863099000
  total durat. 1.211871232000
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 14} , self = 77 , parent = Nothing , duration = 0.500688475000 , status
F                  = Fail , start = 2025-09-03 10:50:25.428327203 UTC , finish = 2025-09-03
F                  10:50:25.929015678 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                = 14} , self = 86 , parent = Nothing , duration = 0.580708024000 , status
| F                = Fail , start = 2025-09-03 10:50:25.428332679 UTC , finish = 2025-09-03
| F                10:50:26.009040703 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 9 , total_length = 180} , self = 87 , parent = Nothing
| | F              , duration = 0.583923748000 , status = Fail , start = 2025-09-03 10:50:25.438000923
| | F              UTC , finish = 2025-09-03 10:50:26.021924671 UTC , thread_cap_info = ("ThreadId
| | F              45", 1, False)}
| | F              
| | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | S            , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 , alphabet_size
| | | S            = 6 , total_length = 46} , self = 67 , parent = Nothing , duration = 0.250863099000
| | | S            , status = Success , start = 2025-09-03 10:50:25.515314509 UTC , finish
| | | S            = 2025-09-03 10:50:25.766177608 UTC , thread_cap_info = ("ThreadId 85",
| | | S            3, False)}
| | | S            
| | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F          = 11 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 ,
| | | | F          alphabet_size = 6 , total_length = 46} , self = 66 , parent = Nothing ,
| | | | F          duration = 0.221001038000 , status = Fail , start = 2025-09-03 10:50:25.516594027
| | | | F          UTC , finish = 2025-09-03 10:50:25.737595065 UTC , thread_cap_info = ("ThreadId
| | | | F          86", 3, False)}
| | | | F          
| | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F        = 11 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 ,
| | | | | F        alphabet_size = 6 , total_length = 46} , self = 62 , parent = Nothing ,
| | | | | F        duration = 0.187252823000 , status = Fail , start = 2025-09-03 10:50:25.519517052
| | | | | F        UTC , finish = 2025-09-03 10:50:25.706769875 UTC , thread_cap_info = ("ThreadId
| | | | | F        84", 3, False)}
| | | | | F        
| | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | S      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 , alphabet_size
| | | | | | S      = 6 , total_length = 46} , self = 75 , parent = Nothing , duration = 0.327988354000
| | | | | | S      , status = Success , start = 2025-09-03 10:50:25.591712402 UTC , finish
| | | | | | S      = 2025-09-03 10:50:25.919700756 UTC , thread_cap_info = ("ThreadId 95",
| | | | | | S      3, False)}
| | | | | | S      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F    = 180} , self = 69 , parent = Nothing , duration = 0.281868511000 , status
| | | | | | | F    = Fail , start = 2025-09-03 10:50:25.599147294 UTC , finish = 2025-09-03
| | | | | | | F    10:50:25.881015805 UTC , thread_cap_info = ("ThreadId 97", 2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | F  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | | F  = 180} , self = 79 , parent = Nothing , duration = 0.333922176000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 10:50:25.618402644 UTC , finish = 2025-09-03
| | | | | | | | F  10:50:25.95232482 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | | | | | F  
| | | | | F | | |  
| | | | F   | | |  
| | | | E   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | E   | | |  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 , alphabet_size
| | | | E   | | |  = 6 , total_length = 46} , self = 70 , parent = Nothing , duration = 0.150858901000
| | | | E   | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:50:25.738404295
| | | | E   | | |  UTC , finish = 2025-09-03 10:50:25.889263196 UTC , thread_cap_info = ("ThreadId
| | | | E   | | |  107", 3, False)}
| | | | E   | | |  
| | | S |   | | |  
| | | E |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | E |   | | |  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 , alphabet_size
| | | E |   | | |  = 6 , total_length = 46} , self = 78 , parent = Nothing , duration = 0.184548553000
| | | E |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:50:25.766205529
| | | E |   | | |  UTC , finish = 2025-09-03 10:50:25.950754082 UTC , thread_cap_info = ("ThreadId
| | | E |   | | |  109", 3, False)}
| | | E |   | | |  
| | | | |   | F |  
| | | | E   |   |  
| | | |     S   |  
F | | |         |  
E | | |         |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | |         |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | |         |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | |         |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | |         |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | |         |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | |         |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | |         |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | |         |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E | | |         |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E | | |         |  = 14} , self = 122 , parent = Nothing , duration = 0.609710573000 , status
E | | |         |  = Except "AsyncCancelled" , start = 2025-09-03 10:50:25.929028805 UTC ,
E | | |         |  finish = 2025-09-03 10:50:26.538739378 UTC , thread_cap_info = ("ThreadId
E | | |         |  124", 0, False)}
E | | |         |  
| | | E         |  
| | |           F  
| | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F            = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| | | F            alphabet_size = 6 , total_length = 43} , self = 100 , parent = Nothing
| | | F            , duration = 0.180088073000 , status = Fail , start = 2025-09-03 10:50:25.954239049
| | | F            UTC , finish = 2025-09-03 10:50:26.134327122 UTC , thread_cap_info = ("ThreadId
| | | F            127", 3, False)}
| | | F            
| | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | S          , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | | | S          = 6 , total_length = 43} , self = 105 , parent = Nothing , duration = 0.327893544000
| | | | S          , status = Success , start = 2025-09-03 10:50:25.975915615 UTC , finish
| | | | S          = 2025-09-03 10:50:26.303809159 UTC , thread_cap_info = ("ThreadId 130",
| | | | S          3, False)}
| | | | S          
| F | | |          
|   F | |          
| F   | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |          = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| F   | |          alphabet_size = 6 , total_length = 43} , self = 104 , parent = Nothing
| F   | |          , duration = 0.208490628000 , status = Fail , start = 2025-09-03 10:50:26.064504218
| F   | |          UTC , finish = 2025-09-03 10:50:26.272994846 UTC , thread_cap_info = ("ThreadId
| F   | |          146", 3, False)}
| F   | |          
| | S | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | S | |          , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | S | |          = 6 , total_length = 43} , self = 112 , parent = Nothing , duration = 0.305126235000
| | S | |          , status = Success , start = 2025-09-03 10:50:26.079147995 UTC , finish
| | S | |          = 2025-09-03 10:50:26.38427423 UTC , thread_cap_info = ("ThreadId 147",
| | S | |          3, False)}
| | S | |          
| | | F |          
| | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E |          , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | | E |          = 6 , total_length = 43} , self = 107 , parent = Nothing , duration = 0.180541777000
| | | E |          , status = Except "AsyncCancelled" , start = 2025-09-03 10:50:26.178407603
| | | E |          UTC , finish = 2025-09-03 10:50:26.35894938 UTC , thread_cap_info = ("ThreadId
| | | E |          154", 3, False)}
| | | E |          
| F | | |          
|   | | S          
| E | |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E | |            , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| E | |            = 6 , total_length = 43} , self = 116 , parent = Nothing , duration = 0.115767830000
| E | |            , status = Except "AsyncCancelled" , start = 2025-09-03 10:50:26.303834067
| E | |            UTC , finish = 2025-09-03 10:50:26.419601897 UTC , thread_cap_info = ("ThreadId
| E | |            161", 3, False)}
| E | |            
| | | E            
| | S              
| | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F              = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F              = 5 , total_length = 24} , self = 121 , parent = Nothing , duration = 0.136753626000
| | F              , status = Fail , start = 2025-09-03 10:50:26.401981101 UTC , finish =
| | F              2025-09-03 10:50:26.538734727 UTC , thread_cap_info = ("ThreadId 172",
| | F              3, False)}
| | F              
| E |              
|   F              
E                  
