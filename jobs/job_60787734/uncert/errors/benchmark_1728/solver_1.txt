last 1617 length 9298
CNF 1617 vars 9298 clauses
last 2545 length 12677
CNF 2545 vars 12677 clauses
last 3068 length 15884
CNF 3068 vars 15884 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3587, clauses: 13446
last 3587 length 13446
CNF 3587 vars 13446 clauses
last 8831 length 42171
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3587, clauses: 13446, status: Unsatisfied, time: 0.276648776s
CNF 8831 vars 42171 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11380, clauses: 47897
last 11380 length 47897
CNF 11380 vars 47897 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6940, clauses: 29641
last 6940 length 29641
CNF 6940 vars 29641 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 62 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, a, b, a, a, b, a] -> [ a , b , a , b , a , a , b , a , b , a , b , a , b , a ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, b, a, b, a] -> [ a , b , a , b , a , a , b , a , b , a , b ] {- Dropped 0 3 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 62 states

   property Termination
has value Just True
for SRS
  [b, a, b, a, b, a] -> [ a , b , a , b , a , a , b , a , b , a , b ] {- Dropped 0 3 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 62 states

**************************************************
skeleton: \Drop{0}{3}(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.942046202000
  min duration 0.098570963000
  total durat. 1.040617165000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 1.147969518000
  min duration 0.187443075000
  total durat. 3.820153130000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 81
    , parent = Nothing
    , duration = 1.037800131000
    , status = Fail
    , start = 2025-09-03 12:51:29.733368646 UTC
    , finish = 2025-09-03 12:51:30.771168777 UTC
    , thread_cap_info = ("ThreadId 99", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 87
    , parent = Nothing
    , duration = 1.147969518000
    , status = Fail
    , start = 2025-09-03 12:51:30.113396057 UTC
    , finish = 2025-09-03 12:51:31.261365575 UTC
    , thread_cap_info = ("ThreadId 145", 3, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 0.759548532000
  min duration 0.279951299000
  total durat. 1.039499831000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.939937520000
  min duration 1.140706906000
  total durat. 5.982943332000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 98
    , parent = Nothing
    , duration = 1.140706906000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:30.653597439 UTC
    , finish = 2025-09-03 12:51:31.794304345 UTC
    , thread_cap_info = ("ThreadId 171", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 95
    , parent = Nothing
    , duration = 1.401669633000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:30.353353413 UTC
    , finish = 2025-09-03 12:51:31.755023046 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 97
    , parent = Nothing
    , duration = 1.500629273000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:30.273345727 UTC
    , finish = 2025-09-03 12:51:31.773975 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 96
    , parent = Nothing
    , duration = 1.939937520000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.834028997 UTC
    , finish = 2025-09-03 12:51:31.773966517 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.715654590000
  min duration 0.840053995000
  total durat. 4.995447359000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 90
    , parent = Nothing
    , duration = 1.139422292000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:30.333942794 UTC
    , finish = 2025-09-03 12:51:31.473365086 UTC
    , thread_cap_info = ("ThreadId 149", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 93
    , parent = Nothing
    , duration = 1.300316482000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:30.253349767 UTC
    , finish = 2025-09-03 12:51:31.553666249 UTC
    , thread_cap_info = ("ThreadId 147", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 92
    , parent = Nothing
    , duration = 1.715654590000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.817707517 UTC
    , finish = 2025-09-03 12:51:31.533362107 UTC
    , thread_cap_info = ("ThreadId 118", 3, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 5
  max duration 2.144991562000
  min duration 1.040039854000
  total durat. 8.012654098000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 83
    , parent = Nothing
    , duration = 1.040039854000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.773372416 UTC
    , finish = 2025-09-03 12:51:30.81341227 UTC
    , thread_cap_info = ("ThreadId 109", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 89
    , parent = Nothing
    , duration = 1.520062880000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.753376831 UTC
    , finish = 2025-09-03 12:51:31.273439711 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 88
    , parent = Nothing
    , duration = 1.607666271000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.653712749 UTC
    , finish = 2025-09-03 12:51:31.26137902 UTC
    , thread_cap_info = ("ThreadId 40", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 91
    , parent = Nothing
    , duration = 1.699893531000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.793470861 UTC
    , finish = 2025-09-03 12:51:31.493364392 UTC
    , thread_cap_info = ("ThreadId 117", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 99
    , parent = Nothing
    , duration = 2.144991562000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:29.652791309 UTC
    , finish = 2025-09-03 12:51:31.797782871 UTC
    , thread_cap_info = ("ThreadId 22", 0, False)}
**************************************************
E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                                    = 23} , self = 99 , parent = Nothing , duration = 2.144991562000 , status
E                                    = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.652791309 UTC ,
E                                    finish = 2025-09-03 12:51:31.797782871 UTC , thread_cap_info = ("ThreadId
E                                    22", 0, False)}
E                                    
| E                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                  = 21} , self = 88 , parent = Nothing , duration = 1.607666271000 , status
| E                                  = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.653712749 UTC ,
| E                                  finish = 2025-09-03 12:51:31.26137902 UTC , thread_cap_info = ("ThreadId
| E                                  40", 3, False)}
| E                                  
| | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                                = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | F                                = 0 , alphabet_size = 3 , total_length = 50} , self = 50 , parent = Nothing
| | F                                , duration = 0.187443075000 , status = Fail , start = 2025-09-03 12:51:29.671170903
| | F                                UTC , finish = 2025-09-03 12:51:29.858613978 UTC , thread_cap_info = ("ThreadId
| | F                                81", 0, False)}
| | F                                
| | | F                              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                              = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | F                              = 0 , alphabet_size = 3 , total_length = 50} , self = 60 , parent = Nothing
| | | F                              , duration = 0.423963069000 , status = Fail , start = 2025-09-03 12:51:29.673678919
| | | F                              UTC , finish = 2025-09-03 12:51:30.097641988 UTC , thread_cap_info = ("ThreadId
| | | F                              83", 0, False)}
| | | F                              
| | | | F                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F                            = 0 , alphabet_size = 2 , total_length = 21} , self = 57 , parent = Nothing
| | | | F                            , duration = 0.331412108000 , status = Fail , start = 2025-09-03 12:51:29.693429482
| | | | F                            UTC , finish = 2025-09-03 12:51:30.02484159 UTC , thread_cap_info = ("ThreadId
| | | | F                            89", 3, False)}
| | | | F                            
| | | | | F                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F                          = 0 , alphabet_size = 2 , total_length = 21} , self = 81 , parent = Nothing
| | | | | F                          , duration = 1.037800131000 , status = Fail , start = 2025-09-03 12:51:29.733368646
| | | | | F                          UTC , finish = 2025-09-03 12:51:30.771168777 UTC , thread_cap_info = ("ThreadId
| | | | | F                          99", 3, False)}
| | | | | F                          
| | | | | | E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | E                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E                        = 19} , self = 89 , parent = Nothing , duration = 1.520062880000 , status
| | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.753376831 UTC ,
| | | | | | E                        finish = 2025-09-03 12:51:31.273439711 UTC , thread_cap_info = ("ThreadId
| | | | | | E                        101", 3, False)}
| | | | | | E                        
| | | | | | | E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | E                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E                      = 17} , self = 83 , parent = Nothing , duration = 1.040039854000 , status
| | | | | | | E                      = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.773372416 UTC ,
| | | | | | | E                      finish = 2025-09-03 12:51:30.81341227 UTC , thread_cap_info = ("ThreadId
| | | | | | | E                      109", 3, False)}
| | | | | | | E                      
| | | | | | | | E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | E                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E                    = 23} , self = 91 , parent = Nothing , duration = 1.699893531000 , status
| | | | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.793470861 UTC ,
| | | | | | | | E                    finish = 2025-09-03 12:51:31.493364392 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E                    117", 3, False)}
| | | | | | | | E                    
| | | | | | | | | E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                  = 21} , self = 92 , parent = Nothing , duration = 1.715654590000 , status
| | | | | | | | | E                  = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.817707517 UTC ,
| | | | | | | | | E                  finish = 2025-09-03 12:51:31.533362107 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                  118", 3, False)}
| | | | | | | | | E                  
| | | | | | | | | | E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                = 21} , self = 96 , parent = Nothing , duration = 1.939937520000 , status
| | | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:51:29.834028997 UTC ,
| | | | | | | | | | E                finish = 2025-09-03 12:51:31.773966517 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                119", 3, False)}
| | | | | | | | | | E                
| | F | | | | | | | |                
| |   | F | | | | | |                
| | S |   | | | | | |                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | S |   | | | | | |                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | S |   | | | | | |                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | S |   | | | | | |                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | S |   | | | | | |                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | S |   | | | | | |                = 0 , alphabet_size = 2 , total_length = 19} , self = 75 , parent = Nothing
| | S |   | | | | | |                , duration = 0.243824959000 , status = Success , start = 2025-09-03 12:51:30.053829442
| | S |   | | | | | |                UTC , finish = 2025-09-03 12:51:30.297654401 UTC , thread_cap_info = ("ThreadId
| | S |   | | | | | |                137", 3, False)}
| | S |   | | | | | |                
| | | | E | | | | | |                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | E | | | | | |                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | E | | | | | |                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | E | | | | | |                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | E | | | | | |                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | E | | | | | |                = 0 , alphabet_size = 2 , total_length = 19} , self = 82 , parent = Nothing
| | | | E | | | | | |                , duration = 0.759548532000 , status = Except "AsyncCancelled" , start
| | | | E | | | | | |                = 2025-09-03 12:51:30.053843595 UTC , finish = 2025-09-03 12:51:30.813392127
| | | | E | | | | | |                UTC , thread_cap_info = ("ThreadId 139", 3, False)}
| | | | E | | | | | |                
| | | | | | | | | | | E              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | E              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | E              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | E              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | E              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | E              = 0 , alphabet_size = 2 , total_length = 17} , self = 78 , parent = Nothing
| | | | | | | | | | | E              , duration = 0.279951299000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | E              = 2025-09-03 12:51:30.093434313 UTC , finish = 2025-09-03 12:51:30.373385612
| | | | | | | | | | | E              UTC , thread_cap_info = ("ThreadId 141", 3, False)}
| | | | | | | | | | | E              
| | | F | | | | | | | |              
| | | F | | | | | | | |              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F | | | | | | | |              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F | | | | | | | |              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F | | | | | | | |              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F | | | | | | | |              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | F | | | | | | | |              = 0 , alphabet_size = 2 , total_length = 23} , self = 87 , parent = Nothing
| | | F | | | | | | | |              , duration = 1.147969518000 , status = Fail , start = 2025-09-03 12:51:30.113396057
| | | F | | | | | | | |              UTC , finish = 2025-09-03 12:51:31.261365575 UTC , thread_cap_info = ("ThreadId
| | | F | | | | | | | |              145", 3, False)}
| | | F | | | | | | | |              
| | | | | | | | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E            = 19} , self = 93 , parent = Nothing , duration = 1.300316482000 , status
| | | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:51:30.253349767 UTC ,
| | | | | | | | | | | | E            finish = 2025-09-03 12:51:31.553666249 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E            147", 3, False)}
| | | | | | | | | | | | E            
| | | | | | | | | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E          = 19} , self = 97 , parent = Nothing , duration = 1.500629273000 , status
| | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:51:30.273345727 UTC ,
| | | | | | | | | | | | | E          finish = 2025-09-03 12:51:31.773975 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E          148", 3, False)}
| | | | | | | | | | | | | E          
| | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | | | | F        = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F        = 137} , self = 86 , parent = Nothing , duration = 0.942046202000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-03 12:51:30.293366671 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | F        12:51:31.235412873 UTC , thread_cap_info = ("ThreadId 168", 0, False)}
| | | | | | | | | | | | | | F        
| | S | | | | | | | | | | | |        
| | E | | | | | | | | | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E | | | | | | | | | | | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | E | | | | | | | | | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E | | | | | | | | | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E | | | | | | | | | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E | | | | | | | | | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E | | | | | | | | | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E | | | | | | | | | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E | | | | | | | | | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E | | | | | | | | | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E | | | | | | | | | | | |        = 17} , self = 90 , parent = Nothing , duration = 1.139422292000 , status
| | E | | | | | | | | | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:51:30.333942794 UTC ,
| | E | | | | | | | | | | | |        finish = 2025-09-03 12:51:31.473365086 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | | | | | |        149", 3, False)}
| | E | | | | | | | | | | | |        
| | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E      = 17} , self = 95 , parent = Nothing , duration = 1.401669633000 , status
| | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:51:30.353353413 UTC ,
| | | | | | | | | | | | | | | E      finish = 2025-09-03 12:51:31.755023046 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E      150", 3, False)}
| | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | | F    = 137} , self = 80 , parent = Nothing , duration = 0.301613613000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-03 12:51:30.353365061 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | | F    12:51:30.654978674 UTC , thread_cap_info = ("ThreadId 169", 0, False)}
| | | | | | | | | | | | | | | | F    
| | | | | | | | | | | E | | | | |    
| | | | | | | | | | | F | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F | | | | |    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F | | | | |    = 0 , alphabet_size = 2 , total_length = 23} , self = 84 , parent = Nothing
| | | | | | | | | | | F | | | | |    , duration = 0.691565229000 , status = Fail , start = 2025-09-03 12:51:30.373411765
| | | | | | | | | | | F | | | | |    UTC , finish = 2025-09-03 12:51:31.064976994 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F | | | | |    164", 3, False)}
| | | | | | | | | | | F | | | | |    
| | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | E  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | E  = 23} , self = 98 , parent = Nothing , duration = 1.140706906000 , status
| | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:51:30.653597439 UTC ,
| | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:51:31.794304345 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E  171", 3, False)}
| | | | | | | | | | | | | | | | | E  
| | | | | | | | | | | | | | | | F |  
| | | | | | | | | | | | | | | | F |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | | | | | | | F |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | | | | | | | F |  = 7 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | | | | | | | | | | | | | F |  = 4 , total_length = 137} , self = 85 , parent = Nothing , duration = 0.369156306000
| | | | | | | | | | | | | | | | F |  , status = Fail , start = 2025-09-03 12:51:30.753379924 UTC , finish =
| | | | | | | | | | | | | | | | F |  2025-09-03 12:51:31.12253623 UTC , thread_cap_info = ("ThreadId 175", 0,
| | | | | | | | | | | | | | | | F |  False)}
| | | | | | | | | | | | | | | | F |  
| | | | | F | | | | | | | | | | | |  
| | | | E   | | | | | | | | | | | |  
| | | |     | E | | | | | | | | | |  
| | | | E   |   | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E   |   | | | | | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E   |   | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E   |   | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E   |   | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E   |   | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E   |   | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E   |   | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E   |   | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E   |   | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E   |   | | | | | | | | | |  = 23} , self = 94 , parent = Nothing , duration = 0.840053995000 , status
| | | | E   |   | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:51:30.854130002 UTC ,
| | | | E   |   | | | | | | | | | |  finish = 2025-09-03 12:51:31.694183997 UTC , thread_cap_info = ("ThreadId
| | | | E   |   | | | | | | | | | |  174", 3, False)}
| | | | E   |   | | | | | | | | | |  
| | | | |   |   | | | F | | | | | |  
| | | | |   |   | | |   | | | | F |  
| | | | |   |   | | |   | | F |   |  
| | | F |   |   | | |   | |   |   |  
| E |   |   |   | | |   | |   |   |  
|   |   |   E   | | |   | |   |   |  
|   E   |       | | |   | |   |   |  
|       |       E | |   | |   |   |  
|       |         E |   | |   |   |  
|       |           |   E |   |   |  
|       E           |     |   |   |  
|                   |     |   E   |  
|                   E     |       |  
|                         E       |  
|                                 E  
E                                    
