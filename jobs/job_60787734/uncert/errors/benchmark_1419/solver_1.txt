last 4258 length 19136
last 5346 length 26174
CNF 5346 vars 26174 clauses
CNF 4258 vars 19136 clauses
last 635 length 2568
CNF 635 vars 2568 clauses
last 852 length 3439
last 581 length 2475
CNF 852 vars 3439 clauses
CNF 581 vars 2475 clauses
last 719 length 2998
CNF 719 vars 2998 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2155, clauses: 7756
last 2155 length 7756
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2472, clauses: 9131
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6165, clauses: 25395
CNF 2155 vars 7756 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6547, clauses: 26997
last 2472 length 9131
last 6165 length 25395
CNF 2472 vars 9131 clauses
last 6547 length 26997
CNF 6165 vars 25395 clauses
CNF 6547 vars 26997 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2155, clauses: 7756, status: Unsatisfied, time: 0.246604637s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2472, clauses: 9131, status: Unsatisfied, time: 0.132435429s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3865, clauses: 15227
last 3865 length 15227
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4179, clauses: 16547
last 4179 length 16547
CNF 4179 vars 16547 clauses
CNF 3865 vars 15227 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3865, clauses: 15227, status: Unsatisfied, time: 0.504341815s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4179, clauses: 16547, status: Unsatisfied, time: 0.526328228s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3509, clauses: 13378
last 3509 length 13378
CNF 3509 vars 13378 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4011, clauses: 15914
last 4011 length 15914
CNF 4011 vars 15914 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6165, clauses: 25395, status: Unsatisfied, time: 0.933314289s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3509, clauses: 13378, status: Unsatisfied, time: 0.389144519s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4011, clauses: 15914, status: Unsatisfied, time: 0.508782685s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10571, clauses: 42848
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6547, clauses: 26997, status: Unsatisfied, time: 1.334522635s
last 10571 length 42848
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6545, clauses: 24664
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11107, clauses: 45249
last 6545 length 24664
CNF 10571 vars 42848 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7462, clauses: 29093
last 11107 length 45249
last 7462 length 29093
CNF 6545 vars 24664 clauses
CNF 11107 vars 45249 clauses
CNF 7462 vars 29093 clauses
last 11017 length 48241
last 10253 length 49638
CNF 11017 vars 48241 clauses
last 11163 length 52474
CNF 10253 vars 49638 clauses
last 15861 length 68445
CNF 11163 vars 52474 clauses
CNF 15861 vars 68445 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7462, clauses: 29093, status: Unsatisfied, time: 2.103459193s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6545, clauses: 24664, status: Unsatisfied, time: 2.184266997s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12875, clauses: 59559
last 12875 length 59559
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18345, clauses: 74657
last 18345 length 74657
CNF 12875 vars 59559 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13323, clauses: 61591
CNF 18345 vars 74657 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16227, clauses: 63515
last 13323 length 61591
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12875, clauses: 59559, status: Satisfied, time: 0.928200923s
last 16227 length 63515
CNF 16227 vars 63515 clauses
CNF 13323 vars 61591 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18345, clauses: 74657, status: Satisfied, time: 1.323247864s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 48014, clauses: 201134
last 537 length 2208
last 589 length 2516
last 48014 length 201134
CNF 537 vars 2208 clauses
CNF 589 vars 2516 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2049, clauses: 7295
last 2049 length 7295
CNF 2049 vars 7295 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2049, clauses: 7295, status: Unsatisfied, time: 0.246470224s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6119, clauses: 25219
last 6119 length 25219
CNF 6119 vars 25219 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 14941
last 3790 length 14941
CNF 3790 vars 14941 clauses
last 6694 length 33081
last 5300 length 23913
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13323, clauses: 61591, status: Satisfied, time: 2.244792689s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 46439, clauses: 194655
last 46439 length 194655
CNF 6694 vars 33081 clauses
CNF 5300 vars 23913 clauses
last 447 length 1773
CNF 447 vars 1773 clauses
last 434 length 1763
CNF 434 vars 1763 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5874
last 1652 length 5874
CNF 1652 vars 5874 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5874, status: Unsatisfied, time: 0.135884805s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21271
last 5160 length 21271
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3194, clauses: 12660
last 3194 length 12660
CNF 3194 vars 12660 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16227, clauses: 63515, status: Satisfied, time: 2.317526264s
CNF 5160 vars 21271 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9940, clauses: 36775
last 9940 length 36775
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3194, clauses: 12660, status: Unsatisfied, time: 0.482752378s
CNF 9940 vars 36775 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21271, status: Unsatisfied, time: 0.584372468s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2701, clauses: 10185
last 2701 length 10185
CNF 2701 vars 10185 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6119, clauses: 25219, status: Unsatisfied, time: 1.661757011s
CNF 46439 vars 194655 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2701, clauses: 10185, status: Unsatisfied, time: 0.326207048s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12568
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 14941, status: Unsatisfied, time: 1.820571243s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8959, clauses: 36596
last 3340 length 12568
last 8959 length 36596
CNF 3340 vars 12568 clauses
CNF 8959 vars 36596 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5045, clauses: 18880
last 5045 length 18880
CNF 5045 vars 18880 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12568, status: Unsatisfied, time: 0.917634707s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9940, clauses: 36775, status: Satisfied, time: 1.643651898s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 38030, clauses: 159754
last 38030 length 159754
CNF 38030 vars 159754 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10474, clauses: 42453
last 10474 length 42453
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5045, clauses: 18880, status: Unsatisfied, time: 1.318546756s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       mirror
SRS with 27 rules on 9 letters       DP
SRS with 61 strict rules and 27 weak rules on 15 letters       EDG
SRS with 55 strict rules and 27 weak rules on 15 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 17 strict rules and 27 weak rules on 15 letters       weights
SRS with 7 strict rules and 27 weak rules on 12 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 6 strict rules and 27 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 27 weak rules on 11 letters       weights
  SRS with 0 strict rules and 27 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [b, c] {- Input 1 -}
  [c, b, b] -> [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, a]] -> [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, b], [b, b], [b, a]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, b], [b, b], [b, b]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, b], [b, b], [b, c]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, b], [b, b], [b, a]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, b], [b, b], [b, b]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, b], [b, b], [b, c]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, b], [b, b], [b, a]] -> [ [c, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, c], [c, b], [b, b], [b, b]] -> [ [c, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, b], [b, b], [b, c]] -> [ [c, a] , [a, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, a]] -> [ [c, a] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [a, a], [a, a]] -> [ [c, b] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [a, a]] -> [ [c, c] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a], [a, a], [b, a]] -> [ [c, a] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b], [a, a], [b, a]] -> [ [c, b] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [b, a]] -> [ [c, c] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, a], [a, a], [c, a]] -> [ [c, a] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[a, b], [a, a], [c, a]] -> [ [c, b] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [c, a]] -> [ [c, c] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [b, b], [c, b], [a, c]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [c, b], [a, c]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [b, b], [c, b], [a, c]] -> [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b], [c, b], [b, c]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b], [c, b], [b, c]] -> [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [b, b], [c, b], [c, c]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [c, b], [c, c]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [b, b], [c, b], [c, c]] -> [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
CNF 10474 vars 42453 clauses
  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6244, clauses: 23302
last 5438 length 24520
last 6971 length 34198
[[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
last 6244 length 23302
  CNF 5438 vars 24520 clauses
CNF 6244 vars 23302 clauses
[[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}CNF 6971 vars 34198 clauses

  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 12A 13A 15A - \
        | 12A 13A 15A - |
        | 12A 13A 15A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 12A 13A 15A - \
        | 12A 13A 15A - |
        | 12A 13A 15A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([a, c]#, 0/1)
  ([b, a]#, 2/1)
  ([b, b]#, 2/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 14A 16A 16A - \
        | 14A 16A 16A - |
        | 14A 16A 16A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 16A 16A 17A - \
        | 16A 16A 17A - |
        | 16A 16A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, c]#, 1/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}\Mirror(27,9)\Deepee(61/27,15)\EDG(55/27,15)\Matrix{\Arctic}{3}(17/27,15)\Weight(7/27,12)\EDG[(1/27,10)\Usable(1,2)\Weight(0,0)\EDG[],(6/27,11)\Matrix{\Arctic}{3}(1/27,11)\Weight(0/27,9)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11046, clauses: 51035
last 11046 length 51035

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.581172206000
  min duration 0.012851354000
  total durat. 4.454892542000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 124
    , parent = Nothing
    , duration = 1.160053835000
    , status = Fail
    , start = 2025-09-03 11:49:20.980324165 UTC
    , finish = 2025-09-03 11:49:22.140378 UTC
    , thread_cap_info = ("ThreadId 174", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 390}
    , self = 89
    , parent = Nothing
    , duration = 1.250713123000
    , status = Fail
    , start = 2025-09-03 11:49:16.525217335 UTC
    , finish = 2025-09-03 11:49:17.775930458 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 94
    , parent = Nothing
    , duration = 1.581172206000
    , status = Fail
    , start = 2025-09-03 11:49:16.540641414 UTC
    , finish = 2025-09-03 11:49:18.12181362 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.525516686000
  min duration 0.024759297000
  total durat. 4.149008797000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 390}
    , self = 90
    , parent = Nothing
    , duration = 1.303791453000
    , status = Fail
    , start = 2025-09-03 11:49:16.547816313 UTC
    , finish = 2025-09-03 11:49:17.851607766 UTC
    , thread_cap_info = ("ThreadId 140", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 93
    , parent = Nothing
    , duration = 1.525516686000
    , status = Fail
    , start = 2025-09-03 11:49:16.559178423 UTC
    , finish = 2025-09-03 11:49:18.084695109 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 2.578898544000
  min duration 0.009370770000
  total durat. 2.826483829000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 75
    , parent = Nothing
    , duration = 2.578898544000
    , status = Fail
    , start = 2025-09-03 11:49:13.928923248 UTC
    , finish = 2025-09-03 11:49:16.507821792 UTC
    , thread_cap_info = ("ThreadId 52", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 2.082122585000
  min duration 0.904419462000
  total durat. 5.631735421000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 71
    , parent = Nothing
    , duration = 1.071970389000
    , status = Fail
    , start = 2025-09-03 11:49:14.180459838 UTC
    , finish = 2025-09-03 11:49:15.252430227 UTC
    , thread_cap_info = ("ThreadId 106", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 74
    , parent = Nothing
    , duration = 1.573222985000
    , status = Fail
    , start = 2025-09-03 11:49:14.221980561 UTC
    , finish = 2025-09-03 11:49:15.795203546 UTC
    , thread_cap_info = ("ThreadId 108", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 130
    , parent = Nothing
    , duration = 2.082122585000
    , status = Fail
    , start = 2025-09-03 11:49:20.919809554 UTC
    , finish = 2025-09-03 11:49:23.001932139 UTC
    , thread_cap_info = ("ThreadId 170", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 5.533674033000
  min duration 2.701956762000
  total durat. 11.034632522000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 104
    , parent = Nothing
    , duration = 2.701956762000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:18.150545484 UTC
    , finish = 2025-09-03 11:49:20.852502246 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 142
    , parent = Nothing
    , duration = 2.799001727000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:22.175215649 UTC
    , finish = 2025-09-03 11:49:24.974217376 UTC
    , thread_cap_info = ("ThreadId 196", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 390}
    , self = 133
    , parent = Nothing
    , duration = 5.533674033000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:17.858114949 UTC
    , finish = 2025-09-03 11:49:23.391788982 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.721008473000
  min duration 2.060531512000
  total durat. 5.781539985000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 95
    , parent = Nothing
    , duration = 2.060531512000
    , status = Success
    , start = 2025-09-03 11:49:18.137537158 UTC
    , finish = 2025-09-03 11:49:20.19806867 UTC
    , thread_cap_info = ("ThreadId 153", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 114
    , parent = Nothing
    , duration = 3.721008473000
    , status = Success
    , start = 2025-09-03 11:49:18.105548999 UTC
    , finish = 2025-09-03 11:49:21.826557472 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 2.108259385000
  min duration 0.569014542000
  total durat. 3.860074539000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 132
    , parent = Nothing
    , duration = 2.108259385000
    , status = Fail
    , start = 2025-09-03 11:49:21.278475224 UTC
    , finish = 2025-09-03 11:49:23.386734609 UTC
    , thread_cap_info = ("ThreadId 177", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 6.287541973000
  min duration 5.309401795000
  total durat. 11.596943768000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 97
    , parent = Nothing
    , duration = 5.309401795000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:15.25526025 UTC
    , finish = 2025-09-03 11:49:20.564662045 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 117
    , parent = Nothing
    , duration = 6.287541973000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:15.648725237 UTC
    , finish = 2025-09-03 11:49:21.93626721 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 4.604672808000
  min duration 2.536618112000
  total durat. 9.877031773000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 139
    , parent = Nothing
    , duration = 2.536618112000
    , status = Success
    , start = 2025-09-03 11:49:21.966143573 UTC
    , finish = 2025-09-03 11:49:24.502761685 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 102
    , parent = Nothing
    , duration = 2.735740853000
    , status = Success
    , start = 2025-09-03 11:49:18.088526742 UTC
    , finish = 2025-09-03 11:49:20.824267595 UTC
    , thread_cap_info = ("ThreadId 151", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 390}
    , self = 126
    , parent = Nothing
    , duration = 4.604672808000
    , status = Success
    , start = 2025-09-03 11:49:17.805256973 UTC
    , finish = 2025-09-03 11:49:22.409929781 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.381599229000
  min duration 0.179041871000
  total durat. 1.075305127000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.256265569000
  min duration 0.435868419000
  total durat. 2.822400755000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 138
    , parent = Nothing
    , duration = 1.256265569000
    , status = Fail
    , start = 2025-09-03 11:49:23.059325682 UTC
    , finish = 2025-09-03 11:49:24.315591251 UTC
    , thread_cap_info = ("ThreadId 204", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.432296622000
  min duration 1.610894140000
  total durat. 6.266642374000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 26}
    , self = 141
    , parent = Nothing
    , duration = 1.610894140000
    , status = Fail
    , start = 2025-09-03 11:49:23.36268481 UTC
    , finish = 2025-09-03 11:49:24.97357895 UTC
    , thread_cap_info = ("ThreadId 205", 3, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 91
    , parent = Nothing
    , duration = 2.223451612000
    , status = Fail
    , start = 2025-09-03 11:49:15.815315745 UTC
    , finish = 2025-09-03 11:49:18.038767357 UTC
    , thread_cap_info = ("ThreadId 124", 3, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 92
    , parent = Nothing
    , duration = 2.432296622000
    , status = Fail
    , start = 2025-09-03 11:49:15.634535562 UTC
    , finish = 2025-09-03 11:49:18.066832184 UTC
    , thread_cap_info = ("ThreadId 122", 3, False)}
**************************************************
F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
F                = 0 , alphabet_size = 9 , total_length = 162} , self = 75 , parent = Nothing
F                , duration = 2.578898544000 , status = Fail , start = 2025-09-03 11:49:13.928923248
F                UTC , finish = 2025-09-03 11:49:16.507821792 UTC , thread_cap_info = ("ThreadId
F                52", 1, False)}
F                
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| F              = 0 , alphabet_size = 9 , total_length = 162} , self = 63 , parent = Nothing
| F              , duration = 0.209622677000 , status = Fail , start = 2025-09-03 11:49:13.92892939
| F              UTC , finish = 2025-09-03 11:49:14.138552067 UTC , thread_cap_info = ("ThreadId
| F              54", 1, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 162} , self = 47 , parent = Nothing , duration = 0.148976419000 , status
| | F            = Fail , start = 2025-09-03 11:49:13.946537292 UTC , finish = 2025-09-03
| | F            11:49:14.095513711 UTC , thread_cap_info = ("ThreadId 64", 0, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F          = 162} , self = 40 , parent = Nothing , duration = 0.119421930000 , status
| | | F          = Fail , start = 2025-09-03 11:49:13.965990208 UTC , finish = 2025-09-03
| | | F          11:49:14.085412138 UTC , thread_cap_info = ("ThreadId 66", 0, False)}
| | | F          
| | | F          
| | F            
| F              
| F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F              = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F              = 5 , total_length = 34} , self = 67 , parent = Nothing , duration = 0.271964734000
| F              , status = Fail , start = 2025-09-03 11:49:14.158569759 UTC , finish =
| F              2025-09-03 11:49:14.430534493 UTC , thread_cap_info = ("ThreadId 101",
| F              3, False)}
| F              
| | F            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | F            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F            = 5 , total_length = 34} , self = 71 , parent = Nothing , duration = 1.071970389000
| | F            , status = Fail , start = 2025-09-03 11:49:14.180459838 UTC , finish =
| | F            2025-09-03 11:49:15.252430227 UTC , thread_cap_info = ("ThreadId 106",
| | F            3, False)}
| | F            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | F          alphabet_size = 5 , total_length = 45} , self = 68 , parent = Nothing ,
| | | F          duration = 0.242699293000 , status = Fail , start = 2025-09-03 11:49:14.205213812
| | | F          UTC , finish = 2025-09-03 11:49:14.447913105 UTC , thread_cap_info = ("ThreadId
| | | F          107", 3, False)}
| | | F          
| | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | F        = 5 , total_length = 45} , self = 74 , parent = Nothing , duration = 1.573222985000
| | | | F        , status = Fail , start = 2025-09-03 11:49:14.221980561 UTC , finish =
| | | | F        2025-09-03 11:49:15.795203546 UTC , thread_cap_info = ("ThreadId 108",
| | | | F        3, False)}
| | | | F        
| F | | |        
| F | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| F | | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F | | |        = 5 , total_length = 34} , self = 69 , parent = Nothing , duration = 0.569014542000
| F | | |        , status = Fail , start = 2025-09-03 11:49:14.430599366 UTC , finish =
| F | | |        2025-09-03 11:49:14.999613908 UTC , thread_cap_info = ("ThreadId 113",
| F | | |        3, False)}
| F | | |        
| | | F |        
| | | F |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | F |        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | F |        = 5 , total_length = 45} , self = 70 , parent = Nothing , duration = 0.570555486000
| | | F |        , status = Fail , start = 2025-09-03 11:49:14.465225025 UTC , finish =
| | | F |        2025-09-03 11:49:15.035780511 UTC , thread_cap_info = ("ThreadId 114",
| | | F |        3, False)}
| | | F |        
| F | | |        
| F | | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F | | |        = 5 , total_length = 34} , self = 72 , parent = Nothing , duration = 0.435868419000
| F | | |        , status = Fail , start = 2025-09-03 11:49:14.999644392 UTC , finish =
| F | | |        2025-09-03 11:49:15.435512811 UTC , thread_cap_info = ("ThreadId 117",
| F | | |        3, False)}
| F | | |        
| | | F |        
| | | F |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |        = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | F |        alphabet_size = 5 , total_length = 45} , self = 73 , parent = Nothing ,
| | | F |        duration = 0.590721065000 , status = Fail , start = 2025-09-03 11:49:15.043799932
| | | F |        UTC , finish = 2025-09-03 11:49:15.634520997 UTC , thread_cap_info = ("ThreadId
| | | F |        118", 3, False)}
| | | F |        
| | F | |        
| | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | E | |        = 5 , total_length = 34} , self = 97 , parent = Nothing , duration = 5.309401795000
| | E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:15.25526025
| | E | |        UTC , finish = 2025-09-03 11:49:20.564662045 UTC , thread_cap_info = ("ThreadId
| | E | |        121", 3, False)}
| | E | |        
| F | | |        
|   | F |        
| F |   |        Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   |        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F |   |        = 5 , total_length = 34} , self = 92 , parent = Nothing , duration = 2.432296622000
| F |   |        , status = Fail , start = 2025-09-03 11:49:15.634535562 UTC , finish =
| F |   |        2025-09-03 11:49:18.066832184 UTC , thread_cap_info = ("ThreadId 122",
| F |   |        3, False)}
| F |   |        
| | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E |        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | E |        = 5 , total_length = 45} , self = 117 , parent = Nothing , duration = 6.287541973000
| | | E |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:15.648725237
| | | E |        UTC , finish = 2025-09-03 11:49:21.93626721 UTC , thread_cap_info = ("ThreadId
| | | E |        123", 3, False)}
| | | E |        
| | | | F        
| | | | F        Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | F        alphabet_size = 5 , total_length = 45} , self = 91 , parent = Nothing ,
| | | | F        duration = 2.223451612000 , status = Fail , start = 2025-09-03 11:49:15.815315745
| | | | F        UTC , finish = 2025-09-03 11:49:18.038767357 UTC , thread_cap_info = ("ThreadId
| | | | F        124", 3, False)}
| | | | F        
F | | | |        
F | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
F | | | |        = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 15 ,
F | | | |        total_length = 390} , self = 89 , parent = Nothing , duration = 1.250713123000
F | | | |        , status = Fail , start = 2025-09-03 11:49:16.525217335 UTC , finish =
F | | | |        2025-09-03 11:49:17.775930458 UTC , thread_cap_info = ("ThreadId 139",
F | | | |        3, False)}
F | | | |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | | F      = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | F      total_length = 510} , self = 94 , parent = Nothing , duration = 1.581172206000
| | | | | F      , status = Fail , start = 2025-09-03 11:49:16.540641414 UTC , finish =
| | | | | F      2025-09-03 11:49:18.12181362 UTC , thread_cap_info = ("ThreadId 143", 1,
| | | | | F      False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | F    = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | F    total_length = 390} , self = 90 , parent = Nothing , duration = 1.303791453000
| | | | | | F    , status = Fail , start = 2025-09-03 11:49:16.547816313 UTC , finish =
| | | | | | F    2025-09-03 11:49:17.851607766 UTC , thread_cap_info = ("ThreadId 140",
| | | | | | F    3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | | | | F  = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | F  total_length = 510} , self = 93 , parent = Nothing , duration = 1.525516686000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:49:16.559178423 UTC , finish =
| | | | | | | F  2025-09-03 11:49:18.084695109 UTC , thread_cap_info = ("ThreadId 144",
| | | | | | | F  1, False)}
| | | | | | | F  
F | | | | | | |  
S | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | |  = 67 , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 27
S | | | | | | |  , alphabet_size = 15 , total_length = 390} , self = 126 , parent = Nothing
S | | | | | | |  , duration = 4.604672808000 , status = Success , start = 2025-09-03 11:49:17.805256973
S | | | | | | |  UTC , finish = 2025-09-03 11:49:22.409929781 UTC , thread_cap_info = ("ThreadId
S | | | | | | |  148", 3, False)}
S | | | | | | |  
| | | | | | F |  
| | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 67
| | | | | | E |  , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size
| | | | | | E |  = 15 , total_length = 390} , self = 133 , parent = Nothing , duration =
| | | | | | E |  5.533674033000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |  11:49:17.858114949 UTC , finish = 2025-09-03 11:49:23.391788982 UTC , thread_cap_info
| | | | | | E |  = ("ThreadId 150", 3, False)}
| | | | | | E |  
| | | | F | | |  
| F | |   | | |  
|   | |   | | F  
| S | |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |   | |    = 82 , num_strict_rules = 55 , num_top_rules = 55 , num_weak_rules = 27
| S | |   | |    , alphabet_size = 15 , total_length = 510} , self = 102 , parent = Nothing
| S | |   | |    , duration = 2.735740853000 , status = Success , start = 2025-09-03 11:49:18.088526742
| S | |   | |    UTC , finish = 2025-09-03 11:49:20.824267595 UTC , thread_cap_info = ("ThreadId
| S | |   | |    151", 1, False)}
| S | |   | |    
| | | | S | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | | | S | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | |    , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | S | |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | S | |    = 5 , total_length = 45} , self = 114 , parent = Nothing , duration = 3.721008473000
| | | | S | |    , status = Success , start = 2025-09-03 11:49:18.105548999 UTC , finish
| | | | S | |    = 2025-09-03 11:49:21.826557472 UTC , thread_cap_info = ("ThreadId 152",
| | | | S | |    3, False)}
| | | | S | |    
| | | | | F |    
| | | | | S |    Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | | | | S |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | S |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S |    , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | S |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | S |    = 5 , total_length = 34} , self = 95 , parent = Nothing , duration = 2.060531512000
| | | | | S |    , status = Success , start = 2025-09-03 11:49:18.137537158 UTC , finish
| | | | | S |    = 2025-09-03 11:49:20.19806867 UTC , thread_cap_info = ("ThreadId 153",
| | | | | S |    3, False)}
| | | | | S |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 82
| | | | | | | E  , num_strict_rules = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size
| | | | | | | E  = 15 , total_length = 510} , self = 104 , parent = Nothing , duration =
| | | | | | | E  2.701956762000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:49:18.150545484 UTC , finish = 2025-09-03 11:49:20.852502246 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 154", 1, False)}
| | | | | | | E  
| | | | | S | |  
| | E | |   | |  
| | F | |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | |   | |  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F | |   | |  = 30} , self = 107 , parent = Nothing , duration = 0.185443391000 , status
| | F | |   | |  = Fail , start = 2025-09-03 11:49:20.695389151 UTC , finish = 2025-09-03
| | F | |   | |  11:49:20.880832542 UTC , thread_cap_info = ("ThreadId 163", 3, False)}
| | F | |   | |  
| | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F | |  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F | |  = 30} , self = 106 , parent = Nothing , duration = 0.154562477000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:49:20.721733972 UTC , finish = 2025-09-03
| | | | | F | |  11:49:20.876296449 UTC , thread_cap_info = ("ThreadId 164", 3, False)}
| | | | | F | |  
| S | | | | | |  
|   | | | | | E  
|   | | | F |    
| F | | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | | |   |    = 5 , total_length = 30} , self = 113 , parent = Nothing , duration = 0.381599229000
| F | | |   |    , status = Fail , start = 2025-09-03 11:49:20.876325153 UTC , finish =
| F | | |   |    2025-09-03 11:49:21.257924382 UTC , thread_cap_info = ("ThreadId 169",
| F | | |   |    3, False)}
| F | | |   |    
| | F | |   |    
| | F | |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F | |   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F | |   |    = 5 , total_length = 30} , self = 130 , parent = Nothing , duration = 2.082122585000
| | F | |   |    , status = Fail , start = 2025-09-03 11:49:20.919809554 UTC , finish =
| | F | |   |    2025-09-03 11:49:23.001932139 UTC , thread_cap_info = ("ThreadId 170",
| | F | |   |    3, False)}
| | F | |   |    
| | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | F |    = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | F |    = 202} , self = 124 , parent = Nothing , duration = 1.160053835000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:49:20.980324165 UTC , finish = 2025-09-03
| | | | | F |    11:49:22.140378 UTC , thread_cap_info = ("ThreadId 174", 1, False)}
| | | | | F |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | | | F  = 202} , self = 116 , parent = Nothing , duration = 0.925162568000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:49:21.002679056 UTC , finish = 2025-09-03
| | | | | | | F  11:49:21.927841624 UTC , thread_cap_info = ("ThreadId 175", 1, False)}
| | | | | | | F  
| F | | | | | |  
| F | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | | | | | |  = 5 , total_length = 30} , self = 132 , parent = Nothing , duration = 2.108259385000
| F | | | | | |  , status = Fail , start = 2025-09-03 11:49:21.278475224 UTC , finish =
| F | | | | | |  2025-09-03 11:49:23.386734609 UTC , thread_cap_info = ("ThreadId 177",
| F | | | | | |  3, False)}
| F | | | | | |  
| | | | S | | |  
| | | |   | | F  
| | | E   | |    
| | | F   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   | |    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F   | |    = 4 , total_length = 26} , self = 125 , parent = Nothing , duration = 0.179041871000
| | | F   | |    , status = Fail , start = 2025-09-03 11:49:21.96144359 UTC , finish = 2025-09-03
| | | F   | |    11:49:22.140485461 UTC , thread_cap_info = ("ThreadId 192", 3, False)}
| | | F   | |    
| | | | S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |    = 33 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 ,
| | | | S | |    alphabet_size = 11 , total_length = 202} , self = 139 , parent = Nothing
| | | | S | |    , duration = 2.536618112000 , status = Success , start = 2025-09-03 11:49:21.966143573
| | | | S | |    UTC , finish = 2025-09-03 11:49:24.502761685 UTC , thread_cap_info = ("ThreadId
| | | | S | |    184", 1, False)}
| | | | S | |    
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | F  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | | F  = 4 , total_length = 26} , self = 129 , parent = Nothing , duration = 0.904419462000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:49:22.0128134 UTC , finish = 2025-09-03
| | | | | | | F  11:49:22.917232862 UTC , thread_cap_info = ("ThreadId 194", 3, False)}
| | | | | | | F  
| | | | | F | |  
| | | F |   | |  
| | | F |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F |   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F |   | |  = 4 , total_length = 26} , self = 128 , parent = Nothing , duration = 0.612245126000
| | | F |   | |  , status = Fail , start = 2025-09-03 11:49:22.175215525 UTC , finish =
| | | F |   | |  2025-09-03 11:49:22.787460651 UTC , thread_cap_info = ("ThreadId 195",
| | | F |   | |  3, False)}
| | | F |   | |  
| | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | | E | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size
| | | | | E | |  = 11 , total_length = 202} , self = 142 , parent = Nothing , duration =
| | | | | E | |  2.799001727000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E | |  11:49:22.175215649 UTC , finish = 2025-09-03 11:49:24.974217376 UTC , thread_cap_info
| | | | | E | |  = ("ThreadId 196", 1, False)}
| | | | | E | |  
S | | | | | | |  
  | | F | | | |  
F | |   | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | | | |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F | |   | | | |  = 4 , total_length = 26} , self = 131 , parent = Nothing , duration = 0.539545702000
F | |   | | | |  , status = Fail , start = 2025-09-03 11:49:22.796211887 UTC , finish =
F | |   | | | |  2025-09-03 11:49:23.335757589 UTC , thread_cap_info = ("ThreadId 201",
F | |   | | | |  3, False)}
F | |   | | | |  
| | |   | | | F  
| | F   | | |    
| | F   | | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | | |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F   | | |    = 5 , total_length = 30} , self = 138 , parent = Nothing , duration = 1.256265569000
| | F   | | |    , status = Fail , start = 2025-09-03 11:49:23.059325682 UTC , finish =
| | F   | | |    2025-09-03 11:49:24.315591251 UTC , thread_cap_info = ("ThreadId 204",
| | F   | | |    3, False)}
| | F   | | |    
F | |   | | |    
F | |   | | |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | |   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | | |    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F | |   | | |    = 4 , total_length = 26} , self = 141 , parent = Nothing , duration = 1.610894140000
F | |   | | |    , status = Fail , start = 2025-09-03 11:49:23.36268481 UTC , finish = 2025-09-03
F | |   | | |    11:49:24.97357895 UTC , thread_cap_info = ("ThreadId 205", 3, False)}
F | |   | | |    
| F |   | | |    
|   |   | | E    
|   F   | |      
|       S |      
F         |      
          E      
