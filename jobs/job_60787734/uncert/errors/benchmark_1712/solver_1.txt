last 14187 length 128864
CNF 14187 vars 128864 clauses
last 15140 length 129933
CNF 15140 vars 129933 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8507, clauses: 38934
last 8507 length 38934
CNF 8507 vars 38934 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8507, clauses: 38934, status: Satisfied, time: 1.143277218s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20312, clauses: 85395
last 20312 length 85395
CNF 20312 vars 85395 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8507, clauses: 38934
last 8507 length 38934
CNF 8507 vars 38934 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20312, clauses: 85395
last 20312 length 85395
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8507, clauses: 38934, status: Satisfied, time: 0.254323049s
CNF 20312 vars 85395 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3640, clauses: 13729
last 3640 length 13729
CNF 3640 vars 13729 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3640, clauses: 13729, status: Satisfied, time: 0.175130024s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3640, clauses: 13729
last 3640 length 13729
CNF 3640 vars 13729 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3640, clauses: 13729, status: Satisfied, time: 0.224541394s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3447, clauses: 12827
last 3447 length 12827
CNF 3447 vars 12827 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3447, clauses: 12827, status: Satisfied, time: 0.370420917s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3240, clauses: 11918
last 3240 length 11918
CNF 3240 vars 11918 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13383, clauses: 56333
last 13383 length 56333
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3240, clauses: 11918, status: Unsatisfied, time: 0.614624512s
CNF 13383 vars 56333 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7970, clauses: 33962
last 7970 length 33962
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13383, clauses: 56333, status: Unsatisfied, time: 0.702752457s
CNF 7970 vars 33962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5421, clauses: 20710
last 5421 length 20710
CNF 5421 vars 20710 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7970, clauses: 33962, status: Satisfied, time: 0.602233195s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 30 strict rules and 4 weak rules on 6 letters       EDG
SRS with 30 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 15 strict rules and 4 weak rules on 6 letters       weights
SRS with 3 strict rules and 4 weak rules on 5 letters       EDG
SRS with 3 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 5 letters       EDG
SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b, a, b, a, b, b, a] -> [ a , b , a , b , a , b , b , a , a , b , a , b , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, a]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 1A 1A 2A - \
        | 1A 1A 2A - |
        | 1A 1A 2A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, a]#
  , Wk  / 13A 13A 14A - \
        | 13A 13A 14A - |
        | 13A 13A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 1 2 0 \
        | 2 0 1 |
        \ 0 0 1 / )
  ( [a, b]
  , Wk  / 1 0 0 \
        | 0 1 1 |
        \ 0 0 1 / )
  ( [b, a]
  , Wk  / 1 0 0 \
        | 0 1 1 |
        \ 0 0 1 / )
  ( [b, b]
  , Wk  / 1 0 0 \
        | 0 0 1 |
        \ 0 0 1 / )
  ( [a, a]#
  , Wk  / 1 1 4 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}\Mirror(4,4)\Deepee\EDG(30/4,6)\Matrix{\Arctic}{3}(15/4,6)\Weight\EDG(3/4,5)\Matrix{\Arctic}{3}\EDG(1/4,5)\Matrix{\Natural}{3}(0/4,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.132011620000
  min duration 2.132011620000
  total durat. 2.132011620000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 51
    , parent = Nothing
    , duration = 2.132011620000
    , status = Fail
    , start = 2025-09-03 12:51:05.34074064 UTC
    , finish = 2025-09-03 12:51:07.47275226 UTC
    , thread_cap_info = ("ThreadId 70", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.039967891000
  min duration 3.002025261000
  total durat. 18.074213085000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 71
    , parent = Nothing
    , duration = 3.002025261000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:16.85150118 UTC
    , finish = 2025-09-03 12:51:19.853526441 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 156}
    , self = 87
    , parent = Nothing
    , duration = 3.004644849000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:21.571761667 UTC
    , finish = 2025-09-03 12:51:24.576406516 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 156}
    , self = 91
    , parent = Nothing
    , duration = 3.004652858000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:21.991325685 UTC
    , finish = 2025-09-03 12:51:24.995978543 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 144}
    , self = 105
    , parent = Nothing
    , duration = 3.005631117000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:25.153387867 UTC
    , finish = 2025-09-03 12:51:28.159018984 UTC
    , thread_cap_info = ("ThreadId 156", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 124}
    , self = 107
    , parent = Nothing
    , duration = 3.017291109000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:25.794043827 UTC
    , finish = 2025-09-03 12:51:28.811334936 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 70
    , parent = Nothing
    , duration = 3.039967891000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:16.671351784 UTC
    , finish = 2025-09-03 12:51:19.711319675 UTC
    , thread_cap_info = ("ThreadId 112", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.260288193000
  min duration 1.260288193000
  total durat. 1.260288193000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 50
    , parent = Nothing
    , duration = 1.260288193000
    , status = Fail
    , start = 2025-09-03 12:51:05.354017566 UTC
    , finish = 2025-09-03 12:51:06.614305759 UTC
    , thread_cap_info = ("ThreadId 72", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.041430935000
  min duration 3.002347019000
  total durat. 18.075871779000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 69
    , parent = Nothing
    , duration = 3.002347019000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:16.691337327 UTC
    , finish = 2025-09-03 12:51:19.693684346 UTC
    , thread_cap_info = ("ThreadId 113", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 156}
    , self = 93
    , parent = Nothing
    , duration = 3.002429757000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:22.031891007 UTC
    , finish = 2025-09-03 12:51:25.034320764 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 156}
    , self = 88
    , parent = Nothing
    , duration = 3.002762182000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:21.591341234 UTC
    , finish = 2025-09-03 12:51:24.594103416 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 124}
    , self = 109
    , parent = Nothing
    , duration = 3.005328378000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:25.811341164 UTC
    , finish = 2025-09-03 12:51:28.816669542 UTC
    , thread_cap_info = ("ThreadId 163", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 72
    , parent = Nothing
    , duration = 3.021573508000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:16.871335475 UTC
    , finish = 2025-09-03 12:51:19.892908983 UTC
    , thread_cap_info = ("ThreadId 116", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 144}
    , self = 106
    , parent = Nothing
    , duration = 3.041430935000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:51:25.171361194 UTC
    , finish = 2025-09-03 12:51:28.212792129 UTC
    , thread_cap_info = ("ThreadId 157", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 12.249821614000
  min duration 10.805221048000
  total durat. 46.206288255000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 52
    , parent = Nothing
    , duration = 10.805221048000
    , status = Fail
    , start = 2025-09-03 12:51:05.651527852 UTC
    , finish = 2025-09-03 12:51:16.4567489 UTC
    , thread_cap_info = ("ThreadId 94", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 53
    , parent = Nothing
    , duration = 10.922509511000
    , status = Fail
    , start = 2025-09-03 12:51:05.633907277 UTC
    , finish = 2025-09-03 12:51:16.556416788 UTC
    , thread_cap_info = ("ThreadId 92", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 67
    , parent = Nothing
    , duration = 12.228736082000
    , status = Fail
    , start = 2025-09-03 12:51:05.378082618 UTC
    , finish = 2025-09-03 12:51:17.6068187 UTC
    , thread_cap_info = ("ThreadId 76", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 68
    , parent = Nothing
    , duration = 12.249821614000
    , status = Fail
    , start = 2025-09-03 12:51:05.391373252 UTC
    , finish = 2025-09-03 12:51:17.641194866 UTC
    , thread_cap_info = ("ThreadId 79", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.346127784000
  min duration 1.346127784000
  total durat. 1.346127784000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 124}
    , self = 117
    , parent = Nothing
    , duration = 1.346127784000
    , status = Fail
    , start = 2025-09-03 12:51:28.872300619 UTC
    , finish = 2025-09-03 12:51:30.218428403 UTC
    , thread_cap_info = ("ThreadId 173", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.962434459000
  min duration 0.398108086000
  total durat. 5.113090124000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 75
    , parent = Nothing
    , duration = 1.691819908000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:19.7913405 UTC
    , finish = 2025-09-03 12:51:21.483160408 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 82
    , parent = Nothing
    , duration = 1.962434459000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:51:19.932095009 UTC
    , finish = 2025-09-03 12:51:21.894529468 UTC
    , thread_cap_info = ("ThreadId 125", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.145485867000
  min duration 1.145485867000
  total durat. 1.145485867000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 124}
    , self = 118
    , parent = Nothing
    , duration = 1.145485867000
    , status = Success
    , start = 2025-09-03 12:51:29.593372083 UTC
    , finish = 2025-09-03 12:51:30.73885795 UTC
    , thread_cap_info = ("ThreadId 181", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.882262442000
  min duration 0.307112314000
  total durat. 4.585833379000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 73
    , parent = Nothing
    , duration = 1.543689795000
    , status = Success
    , start = 2025-09-03 12:51:19.771357444 UTC
    , finish = 2025-09-03 12:51:21.315047239 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 664}
    , self = 80
    , parent = Nothing
    , duration = 1.882262442000
    , status = Success
    , start = 2025-09-03 12:51:19.89293847 UTC
    , finish = 2025-09-03 12:51:21.775200912 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 1.038282392000
  min duration 0.251169640000
  total durat. 1.289452032000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 49
    , parent = Nothing
    , duration = 1.038282392000
    , status = Fail
    , start = 2025-09-03 12:51:05.332436971 UTC
    , finish = 2025-09-03 12:51:06.370719363 UTC
    , thread_cap_info = ("ThreadId 51", 1, False)}
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F              = 24} , self = 43 , parent = Nothing , duration = 0.251169640000 , status
F              = Fail , start = 2025-09-03 12:51:05.331607882 UTC , finish = 2025-09-03
F              12:51:05.582777522 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F              
| F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F            = 24} , self = 49 , parent = Nothing , duration = 1.038282392000 , status
| F            = Fail , start = 2025-09-03 12:51:05.332436971 UTC , finish = 2025-09-03
| F            12:51:06.370719363 UTC , thread_cap_info = ("ThreadId 51", 1, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F          = 104} , self = 51 , parent = Nothing , duration = 2.132011620000 , status
| | F          = Fail , start = 2025-09-03 12:51:05.34074064 UTC , finish = 2025-09-03
| | F          12:51:07.47275226 UTC , thread_cap_info = ("ThreadId 70", 3, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F        = 104} , self = 50 , parent = Nothing , duration = 1.260288193000 , status
| | | F        = Fail , start = 2025-09-03 12:51:05.354017566 UTC , finish = 2025-09-03
| | | F        12:51:06.614305759 UTC , thread_cap_info = ("ThreadId 72", 3, False)}
| | | F        
| | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F      = 0 , alphabet_size = 2 , total_length = 24} , self = 67 , parent = Nothing
| | | | F      , duration = 12.228736082000 , status = Fail , start = 2025-09-03 12:51:05.378082618
| | | | F      UTC , finish = 2025-09-03 12:51:17.6068187 UTC , thread_cap_info = ("ThreadId
| | | | F      76", 1, False)}
| | | | F      
| | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F    = 0 , alphabet_size = 2 , total_length = 24} , self = 68 , parent = Nothing
| | | | | F    , duration = 12.249821614000 , status = Fail , start = 2025-09-03 12:51:05.391373252
| | | | | F    UTC , finish = 2025-09-03 12:51:17.641194866 UTC , thread_cap_info = ("ThreadId
| | | | | F    79", 1, False)}
| | | | | F    
F | | | | |    
F | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | | | |    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F | | | | |    = 0 , alphabet_size = 4 , total_length = 104} , self = 53 , parent = Nothing
F | | | | |    , duration = 10.922509511000 , status = Fail , start = 2025-09-03 12:51:05.633907277
F | | | | |    UTC , finish = 2025-09-03 12:51:16.556416788 UTC , thread_cap_info = ("ThreadId
F | | | | |    92", 0, False)}
F | | | | |    
| | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | F  = 0 , alphabet_size = 4 , total_length = 104} , self = 52 , parent = Nothing
| | | | | | F  , duration = 10.805221048000 , status = Fail , start = 2025-09-03 12:51:05.651527852
| | | | | | F  UTC , finish = 2025-09-03 12:51:16.4567489 UTC , thread_cap_info = ("ThreadId
| | | | | | F  94", 0, False)}
| | | | | | F  
| F | | | | |  
|   | F | | |  
|   F   | | |  
|       | | F  
F       | |    
E       | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E       | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E       | |    = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
E       | |    = 30 , num_top_rules = 30 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E       | |    = 664} , self = 70 , parent = Nothing , duration = 3.039967891000 , status
E       | |    = Except "<<timeout>>" , start = 2025-09-03 12:51:16.671351784 UTC , finish
E       | |    = 2025-09-03 12:51:19.711319675 UTC , thread_cap_info = ("ThreadId 112",
E       | |    2, False)}
E       | |    
| E     | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| E     | |    = 30 , num_top_rules = 30 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E     | |    = 664} , self = 69 , parent = Nothing , duration = 3.002347019000 , status
| E     | |    = Except "<<timeout>>" , start = 2025-09-03 12:51:16.691337327 UTC , finish
| E     | |    = 2025-09-03 12:51:19.693684346 UTC , thread_cap_info = ("ThreadId 113",
| E     | |    2, False)}
| E     | |    
| | E   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | E   | |    = 30 , num_top_rules = 30 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E   | |    = 664} , self = 71 , parent = Nothing , duration = 3.002025261000 , status
| | E   | |    = Except "<<timeout>>" , start = 2025-09-03 12:51:16.85150118 UTC , finish
| | E   | |    = 2025-09-03 12:51:19.853526441 UTC , thread_cap_info = ("ThreadId 115",
| | E   | |    2, False)}
| | E   | |    
| | | E | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | |    = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | E | |    = 30 , num_top_rules = 30 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E | |    = 664} , self = 72 , parent = Nothing , duration = 3.021573508000 , status
| | | E | |    = Except "<<timeout>>" , start = 2025-09-03 12:51:16.871335475 UTC , finish
| | | E | |    = 2025-09-03 12:51:19.892908983 UTC , thread_cap_info = ("ThreadId 116",
| | | E | |    2, False)}
| | | E | |    
| | | | F |    
| | | |   F    
| E | |        
E   | |        
S   | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | |        = 34 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 4
S   | |        , alphabet_size = 6 , total_length = 664} , self = 73 , parent = Nothing
S   | |        , duration = 1.543689795000 , status = Success , start = 2025-09-03 12:51:19.771357444
S   | |        UTC , finish = 2025-09-03 12:51:21.315047239 UTC , thread_cap_info = ("ThreadId
S   | |        120", 2, False)}
S   | |        
| E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| E | |        , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 4 , alphabet_size
| E | |        = 6 , total_length = 664} , self = 75 , parent = Nothing , duration = 1.691819908000
| E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:51:19.7913405
| E | |        UTC , finish = 2025-09-03 12:51:21.483160408 UTC , thread_cap_info = ("ThreadId
| E | |        121", 2, False)}
| E | |        
| | E |        
| |   E        
| | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S          = 34 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 4
| | S          , alphabet_size = 6 , total_length = 664} , self = 80 , parent = Nothing
| | S          , duration = 1.882262442000 , status = Success , start = 2025-09-03 12:51:19.89293847
| | S          UTC , finish = 2025-09-03 12:51:21.775200912 UTC , thread_cap_info = ("ThreadId
| | S          124", 2, False)}
| | S          
| | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | E        , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 4 , alphabet_size
| | | E        = 6 , total_length = 664} , self = 82 , parent = Nothing , duration = 1.962434459000
| | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 12:51:19.932095009
| | | E        UTC , finish = 2025-09-03 12:51:21.894529468 UTC , thread_cap_info = ("ThreadId
| | | E        125", 2, False)}
| | | E        
S | | |        
  E | |        
E   | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E   | |        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
E   | |        = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
E   | |        = 156} , self = 87 , parent = Nothing , duration = 3.004644849000 , status
E   | |        = Except "<<timeout>>" , start = 2025-09-03 12:51:21.571761667 UTC , finish
E   | |        = 2025-09-03 12:51:24.576406516 UTC , thread_cap_info = ("ThreadId 133",
E   | |        2, False)}
E   | |        
| E | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | |        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| E | |        = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| E | |        = 156} , self = 88 , parent = Nothing , duration = 3.002762182000 , status
| E | |        = Except "<<timeout>>" , start = 2025-09-03 12:51:21.591341234 UTC , finish
| E | |        = 2025-09-03 12:51:24.594103416 UTC , thread_cap_info = ("ThreadId 134",
| E | |        2, False)}
| E | |        
| | S |        
| |   E        
| | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | E          = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | E          = 156} , self = 91 , parent = Nothing , duration = 3.004652858000 , status
| | E          = Except "<<timeout>>" , start = 2025-09-03 12:51:21.991325685 UTC , finish
| | E          = 2025-09-03 12:51:24.995978543 UTC , thread_cap_info = ("ThreadId 140",
| | E          2, False)}
| | E          
| | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | E        = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | E        = 156} , self = 93 , parent = Nothing , duration = 3.002429757000 , status
| | | E        = Except "<<timeout>>" , start = 2025-09-03 12:51:22.031891007 UTC , finish
| | | E        = 2025-09-03 12:51:25.034320764 UTC , thread_cap_info = ("ThreadId 141",
| | | E        2, False)}
| | | E        
E | | |        
  E | |        
S   | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | |        = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
S   | |        = 5 , total_length = 156} , self = 89 , parent = Nothing , duration = 0.307458928000
S   | |        , status = Success , start = 2025-09-03 12:51:24.611365514 UTC , finish
S   | |        = 2025-09-03 12:51:24.918824442 UTC , thread_cap_info = ("ThreadId 144",
S   | |        2, False)}
S   | |        
| E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| E | |        = 5 , total_length = 156} , self = 92 , parent = Nothing , duration = 0.398108086000
| E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:51:24.633211761
| E | |        UTC , finish = 2025-09-03 12:51:25.031319847 UTC , thread_cap_info = ("ThreadId
| E | |        145", 2, False)}
| E | |        
S | | |        
  | E |        
  E   |        
S     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |        = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
S     |        = 5 , total_length = 156} , self = 98 , parent = Nothing , duration = 0.307112314000
S     |        , status = Success , start = 2025-09-03 12:51:25.031407122 UTC , finish
S     |        = 2025-09-03 12:51:25.338519436 UTC , thread_cap_info = ("ThreadId 149",
S     |        2, False)}
S     |        
|     E        
| E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| E            = 5 , total_length = 156} , self = 100 , parent = Nothing , duration =
| E            0.460722986000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E            12:51:25.07133869 UTC , finish = 2025-09-03 12:51:25.532061676 UTC , thread_cap_info
| E            = ("ThreadId 152", 2, False)}
| E            
| | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | E          = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | E          = 144} , self = 105 , parent = Nothing , duration = 3.005631117000 , status
| | E          = Except "<<timeout>>" , start = 2025-09-03 12:51:25.153387867 UTC , finish
| | E          = 2025-09-03 12:51:28.159018984 UTC , thread_cap_info = ("ThreadId 156",
| | E          2, False)}
| | E          
| | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | E        = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | E        = 144} , self = 106 , parent = Nothing , duration = 3.041430935000 , status
| | | E        = Except "<<timeout>>" , start = 2025-09-03 12:51:25.171361194 UTC , finish
| | | E        = 2025-09-03 12:51:28.212792129 UTC , thread_cap_info = ("ThreadId 157",
| | | E        2, False)}
| | | E        
S | | |        
  E | |        
E   | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E   | |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
E   | |        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
E   | |        = 124} , self = 107 , parent = Nothing , duration = 3.017291109000 , status
E   | |        = Except "<<timeout>>" , start = 2025-09-03 12:51:25.794043827 UTC , finish
E   | |        = 2025-09-03 12:51:28.811334936 UTC , thread_cap_info = ("ThreadId 162",
E   | |        2, False)}
E   | |        
| E | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| E | |        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| E | |        = 124} , self = 109 , parent = Nothing , duration = 3.005328378000 , status
| E | |        = Except "<<timeout>>" , start = 2025-09-03 12:51:25.811341164 UTC , finish
| E | |        = 2025-09-03 12:51:28.816669542 UTC , thread_cap_info = ("ThreadId 163",
| E | |        2, False)}
| E | |        
| | E |        
| |   E        
| | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S          = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | S          = 5 , total_length = 144} , self = 108 , parent = Nothing , duration =
| | S          0.545309900000 , status = Success , start = 2025-09-03 12:51:28.271341086
| | S          UTC , finish = 2025-09-03 12:51:28.816650986 UTC , thread_cap_info = ("ThreadId
| | S          166", 2, False)}
| | S          
| | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | E        = 5 , total_length = 144} , self = 111 , parent = Nothing , duration =
| | | E        0.600004685000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E        12:51:28.291328858 UTC , finish = 2025-09-03 12:51:28.891333543 UTC , thread_cap_info
| | | E        = ("ThreadId 167", 2, False)}
| | | E        
E | | |        
  | S |        
  E   |        
F     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     |        = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F     |        = 5 , total_length = 124} , self = 116 , parent = Nothing , duration =
F     |        0.678442128000 , status = Fail , start = 2025-09-03 12:51:28.832643762
F     |        UTC , finish = 2025-09-03 12:51:29.51108589 UTC , thread_cap_info = ("ThreadId
F     |        172", 2, False)}
F     |        
| F   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F   |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| F   |        = 5 , total_length = 124} , self = 117 , parent = Nothing , duration =
| F   |        1.346127784000 , status = Fail , start = 2025-09-03 12:51:28.872300619
| F   |        UTC , finish = 2025-09-03 12:51:30.218428403 UTC , thread_cap_info = ("ThreadId
| F   |        173", 2, False)}
| F   |        
| |   E        
F |            
S |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
S |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
S |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
S |            = 5 , total_length = 124} , self = 118 , parent = Nothing , duration =
S |            1.145485867000 , status = Success , start = 2025-09-03 12:51:29.593372083
S |            UTC , finish = 2025-09-03 12:51:30.73885795 UTC , thread_cap_info = ("ThreadId
S |            181", 2, False)}
S |            
| F            
| F            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F            = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| F            = 5 , total_length = 124} , self = 120 , parent = Nothing , duration =
| F            0.627346349000 , status = Fail , start = 2025-09-03 12:51:30.293629147
| F            UTC , finish = 2025-09-03 12:51:30.920975496 UTC , thread_cap_info = ("ThreadId
| F            183", 2, False)}
| F            
S |            
  F            
