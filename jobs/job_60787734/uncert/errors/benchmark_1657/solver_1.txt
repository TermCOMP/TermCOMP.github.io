[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 23 seen 12 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 6616 length 42766
CNF 6616 vars 42766 clauses
[Info] pool sizes (success) 28 seen 17 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 7547 length 41390
CNF 7547 vars 41390 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5674, clauses: 26332
last 5674 length 26332
CNF 5674 vars 26332 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7952, clauses: 34437
last 7952 length 34437
CNF 7952 vars 34437 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16657, clauses: 70136
last 16657 length 70136
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5674, clauses: 26332, status: Satisfied, time: 0.337930756s
CNF 16657 vars 70136 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7952, clauses: 34437, status: Unsatisfied, time: 0.919644589s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20628, clauses: 86847
last 20628 length 86847
CNF 20628 vars 86847 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13315, clauses: 57034
last 13315 length 57034
CNF 13315 vars 57034 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20628, clauses: 86847, status: Satisfied, time: 1.856196633s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13315, clauses: 57034, status: Satisfied, time: 1.752448168s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5115, clauses: 22277
last 5115 length 22277
CNF 5115 vars 22277 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5115, clauses: 22277, status: Unsatisfied, time: 0.414344531s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16472, clauses: 69395
last 16472 length 69395
CNF 16472 vars 69395 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10207, clauses: 44135
last 10207 length 44135
CNF 10207 vars 44135 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6495, clauses: 26462
last 6495 length 26462
CNF 6495 vars 26462 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10207, clauses: 44135, status: Unsatisfied, time: 0.590511982s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18212, clauses: 76591
last 18212 length 76591
CNF 18212 vars 76591 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8460, clauses: 39013
last 8460 length 39013
CNF 8460 vars 39013 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6495, clauses: 26462, status: Unsatisfied, time: 0.702355806s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11520, clauses: 48971
last 11520 length 48971
CNF 11520 vars 48971 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8460, clauses: 39013, status: Satisfied, time: 1.258796478s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18212, clauses: 76591, status: Satisfied, time: 3.18820695s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3279, clauses: 12473
last 3279 length 12473
CNF 3279 vars 12473 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3279, clauses: 12473, status: Unsatisfied, time: 0.38561069s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13099, clauses: 55233
last 13099 length 55233
CNF 13099 vars 55233 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7811, clauses: 33947
last 7811 length 33947
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13099, clauses: 55233, status: Satisfied, time: 0.54159051s
CNF 7811 vars 33947 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7811, clauses: 33947, status: Satisfied, time: 1.438173875s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6166, clauses: 24898
last 6166 length 24898
CNF 6166 vars 24898 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6166, clauses: 24898, status: Unsatisfied, time: 0.586829936s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18120, clauses: 76227
last 18120 length 76227
CNF 18120 vars 76227 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11369, clauses: 48314
last 11369 length 48314
CNF 11369 vars 48314 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3279, clauses: 12473
last 3279 length 12473
CNF 3279 vars 12473 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3279, clauses: 12473, status: Unsatisfied, time: 0.340227199s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13099, clauses: 55233
last 13099 length 55233
CNF 13099 vars 55233 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7811, clauses: 33947
last 7811 length 33947
CNF 7811 vars 33947 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13099, clauses: 55233, status: Satisfied, time: 0.631953208s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7811, clauses: 33947, status: Satisfied, time: 0.311787978s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18120, clauses: 76227, status: Satisfied, time: 4.201765621s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       DP
SRS with 34 strict rules and 4 weak rules on 6 letters       EDG
SRS with 14 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 10 strict rules and 4 weak rules on 6 letters       EDG
SRS with 10 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 4 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b, a, b, a] -> [ a , b , a , b , a , a , b , a , b , a , a , b , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 10) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, b] ] {- DP (Top 12) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 10) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, b] ] {- DP (Top 12) (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 4A 4A 4A - \
        | 4A 4A 4A - |
        | 4A 4A 4A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  0A  - \
        | 0A  0A  0A  0A  - |
        | -4A 0A  0A  0A  - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A  0A 4A - \
        | -4A 0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  4A - \
        | -4A 0A  0A  0A - |
        | -4A -4A 0A  0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A -4A 0A  - |
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( [a, a]#
  , Wk  / 5A 5A 5A 5A - \
        | 5A 5A 5A 5A - |
        | 5A 5A 5A 5A - |
        | 5A 5A 5A 5A - |
        \ -  -  -  -  - / )
  ( [b, a]#
  , Wk  / 6A 6A 9A 10A - \
        | 6A 6A 9A 10A - |
        | 6A 6A 9A 10A - |
        | 6A 6A 9A 10A - |
        \ -  -  -  -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  - -  \
        | -2A - -  |
        \ -   - 0A / )
  ( [a, b]
  , Wk  / 0A -  -  \
        | 1A 2A -  |
        \ -  -  0A / )
  ( [b, a]
  , Wk  / 0A -   -  \
        | -  -1A -  |
        \ -  -   0A / )
  ( [b, b]
  , Wk  / 0A -   -   \
        | -  -3A -1A |
        \ -  -   0A  / )
  ( [a, a]#
  , Wk  / 0A -2A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0 0 0 \
        | 1 1 3 |
        \ 0 0 1 / )
  ( [a, b]
  , Wk  / 0 3 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( [b, a]
  , Wk  / 1 1 0 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( [b, b]
  , Wk  / 1 0 7 \
        | 2 1 5 |
        \ 0 0 1 / )
  ( [b, a]#
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}(4,4)\Deepee(34/4,6)\EDG(14/4,6)\Matrix{\Arctic}{3}\EDG(10/4,6)\Matrix{\Arctic}{4}(2/4,6)\EDG[(1/4,5)\Matrix{\ArcticBZ}{3}(0/4,4)\EDG[],(1/4,5)\Matrix{\Natural}{3}(0/4,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.740053557000
  min duration 3.021358402000
  total durat. 22.061204118000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 660}
    , self = 105
    , parent = Nothing
    , duration = 3.021358402000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:24.245107739 UTC
    , finish = 2025-09-03 12:55:27.266466141 UTC
    , thread_cap_info = ("ThreadId 209", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 464}
    , self = 126
    , parent = Nothing
    , duration = 3.034836695000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:30.804701427 UTC
    , finish = 2025-09-03 12:55:33.839538122 UTC
    , thread_cap_info = ("ThreadId 238", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 310}
    , self = 123
    , parent = Nothing
    , duration = 3.040431228000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:28.745395887 UTC
    , finish = 2025-09-03 12:55:31.785827115 UTC
    , thread_cap_info = ("ThreadId 230", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 404}
    , self = 103
    , parent = Nothing
    , duration = 3.063971820000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:24.202468152 UTC
    , finish = 2025-09-03 12:55:27.266439972 UTC
    , thread_cap_info = ("ThreadId 206", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 144
    , parent = Nothing
    , duration = 3.078262516000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:36.486214502 UTC
    , finish = 2025-09-03 12:55:39.564477018 UTC
    , thread_cap_info = ("ThreadId 262", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 158
    , parent = Nothing
    , duration = 3.082289900000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:42.944501755 UTC
    , finish = 2025-09-03 12:55:46.026791655 UTC
    , thread_cap_info = ("ThreadId 288", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 426}
    , self = 149
    , parent = Nothing
    , duration = 3.740053557000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:38.724483902 UTC
    , finish = 2025-09-03 12:55:42.464537459 UTC
    , thread_cap_info = ("ThreadId 268", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.720052302000
  min duration 3.001985194000
  total durat. 22.060873534000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 660}
    , self = 106
    , parent = Nothing
    , duration = 3.001985194000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:24.264483746 UTC
    , finish = 2025-09-03 12:55:27.26646894 UTC
    , thread_cap_info = ("ThreadId 210", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 464}
    , self = 127
    , parent = Nothing
    , duration = 3.015078455000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:30.82448342 UTC
    , finish = 2025-09-03 12:55:33.839561875 UTC
    , thread_cap_info = ("ThreadId 239", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 310}
    , self = 124
    , parent = Nothing
    , duration = 3.045485536000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:28.778989227 UTC
    , finish = 2025-09-03 12:55:31.824474763 UTC
    , thread_cap_info = ("ThreadId 231", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 404}
    , self = 104
    , parent = Nothing
    , duration = 3.061960128000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:24.204502973 UTC
    , finish = 2025-09-03 12:55:27.266463101 UTC
    , thread_cap_info = ("ThreadId 207", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 159
    , parent = Nothing
    , duration = 3.062259691000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:42.964551893 UTC
    , finish = 2025-09-03 12:55:46.026811584 UTC
    , thread_cap_info = ("ThreadId 289", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 145
    , parent = Nothing
    , duration = 3.154052228000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:36.510707089 UTC
    , finish = 2025-09-03 12:55:39.664759317 UTC
    , thread_cap_info = ("ThreadId 263", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 426}
    , self = 150
    , parent = Nothing
    , duration = 3.720052302000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:38.744495454 UTC
    , finish = 2025-09-03 12:55:42.464547756 UTC
    , thread_cap_info = ("ThreadId 269", 3, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 14
  max duration 1.083937255000
  min duration 0.006774064000
  total durat. 5.600891034000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 100
    , parent = Nothing
    , duration = 1.015241935000
    , status = Fail
    , start = 2025-09-03 12:55:23.912878402 UTC
    , finish = 2025-09-03 12:55:24.928120337 UTC
    , thread_cap_info = ("ThreadId 183", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 112}
    , self = 81
    , parent = Nothing
    , duration = 1.083937255000
    , status = Fail
    , start = 2025-09-03 12:55:23.104481608 UTC
    , finish = 2025-09-03 12:55:24.188418863 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 5.255066552000
  min duration 1.352244089000
  total durat. 15.238194702000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 147
    , parent = Nothing
    , duration = 1.352244089000
    , status = Success
    , start = 2025-09-03 12:55:39.819735322 UTC
    , finish = 2025-09-03 12:55:41.171979411 UTC
    , thread_cap_info = ("ThreadId 273", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 161
    , parent = Nothing
    , duration = 1.605144156000
    , status = Success
    , start = 2025-09-03 12:55:46.107799532 UTC
    , finish = 2025-09-03 12:55:47.712943688 UTC
    , thread_cap_info = ("ThreadId 296", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 660}
    , self = 115
    , parent = Nothing
    , duration = 3.094976549000
    , status = Success
    , start = 2025-09-03 12:55:27.364611108 UTC
    , finish = 2025-09-03 12:55:30.459587657 UTC
    , thread_cap_info = ("ThreadId 220", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 464}
    , self = 137
    , parent = Nothing
    , duration = 3.930763356000
    , status = Success
    , start = 2025-09-03 12:55:33.846461857 UTC
    , finish = 2025-09-03 12:55:37.777225213 UTC
    , thread_cap_info = ("ThreadId 251", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 426}
    , self = 165
    , parent = Nothing
    , duration = 5.255066552000
    , status = Success
    , start = 2025-09-03 12:55:42.524480912 UTC
    , finish = 2025-09-03 12:55:47.779547464 UTC
    , thread_cap_info = ("ThreadId 283", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.361394276000
  min duration 1.283549699000
  total durat. 5.644943975000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 404}
    , self = 110
    , parent = Nothing
    , duration = 1.283549699000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:27.284483183 UTC
    , finish = 2025-09-03 12:55:28.568032882 UTC
    , thread_cap_info = ("ThreadId 218", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 310}
    , self = 132
    , parent = Nothing
    , duration = 4.361394276000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:31.865681771 UTC
    , finish = 2025-09-03 12:55:36.227076047 UTC
    , thread_cap_info = ("ThreadId 243", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 2.106212506000
  min duration 0.952994184000
  total durat. 5.026785896000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 660}
    , self = 117
    , parent = Nothing
    , duration = 1.967579206000
    , status = Success
    , start = 2025-09-03 12:55:28.565397856 UTC
    , finish = 2025-09-03 12:55:30.532977062 UTC
    , thread_cap_info = ("ThreadId 225", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 140}
    , self = 151
    , parent = Nothing
    , duration = 2.106212506000
    , status = Success
    , start = 2025-09-03 12:55:40.38448618 UTC
    , finish = 2025-09-03 12:55:42.490698686 UTC
    , thread_cap_info = ("ThreadId 275", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.656281547000
  min duration 1.656281547000
  total durat. 1.656281547000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 310}
    , self = 128
    , parent = Nothing
    , duration = 1.656281547000
    , status = Fail
    , start = 2025-09-03 12:55:32.604490304 UTC
    , finish = 2025-09-03 12:55:34.260771851 UTC
    , thread_cap_info = ("ThreadId 245", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.341879728000
  min duration 3.342381032000
  total durat. 7.684260760000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 464}
    , self = 139
    , parent = Nothing
    , duration = 3.342381032000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:34.805532854 UTC
    , finish = 2025-09-03 12:55:38.147913886 UTC
    , thread_cap_info = ("ThreadId 256", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 426}
    , self = 169
    , parent = Nothing
    , duration = 4.341879728000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:43.566779401 UTC
    , finish = 2025-09-03 12:55:47.908659129 UTC
    , thread_cap_info = ("ThreadId 290", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.245171893000
  min duration 0.485415718000
  total durat. 4.846450138000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 660}
    , self = 109
    , parent = Nothing
    , duration = 1.245171893000
    , status = Fail
    , start = 2025-09-03 12:55:27.304697491 UTC
    , finish = 2025-09-03 12:55:28.549869384 UTC
    , thread_cap_info = ("ThreadId 219", 3, False)}
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.779379828000
  min duration 1.779379828000
  total durat. 1.779379828000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 310}
    , self = 130
    , parent = Nothing
    , duration = 1.779379828000
    , status = Success
    , start = 2025-09-03 12:55:34.266421387 UTC
    , finish = 2025-09-03 12:55:36.045801215 UTC
    , thread_cap_info = ("ThreadId 253", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 2
  max duration 1.480463761000
  min duration 1.260362368000
  total durat. 2.740826129000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 98
    , parent = Nothing
    , duration = 1.260362368000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:23.604574825 UTC
    , finish = 2025-09-03 12:55:24.864937193 UTC
    , thread_cap_info = ("ThreadId 165", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 99
    , parent = Nothing
    , duration = 1.480463761000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:23.384482458 UTC
    , finish = 2025-09-03 12:55:24.864946219 UTC
    , thread_cap_info = ("ThreadId 144", 0, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 3.042652117000
  min duration 0.811924966000
  total durat. 6.374786877000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 101
    , parent = Nothing
    , duration = 2.520209794000
    , status = Fail
    , start = 2025-09-03 12:55:22.969109656 UTC
    , finish = 2025-09-03 12:55:25.48931945 UTC
    , thread_cap_info = ("ThreadId 55", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 102
    , parent = Nothing
    , duration = 3.042652117000
    , status = Fail
    , start = 2025-09-03 12:55:23.484566456 UTC
    , finish = 2025-09-03 12:55:26.527218573 UTC
    , thread_cap_info = ("ThreadId 157", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 4
  max duration 1.539982008000
  min duration 1.000000700000
  total durat. 5.062176830000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 79
    , parent = Nothing
    , duration = 1.000000700000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:23.084481761 UTC
    , finish = 2025-09-03 12:55:24.084482461 UTC
    , thread_cap_info = ("ThreadId 99", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 97
    , parent = Nothing
    , duration = 1.061748046000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:23.482718138 UTC
    , finish = 2025-09-03 12:55:24.544466184 UTC
    , thread_cap_info = ("ThreadId 149", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 95
    , parent = Nothing
    , duration = 1.460446076000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:23.044469912 UTC
    , finish = 2025-09-03 12:55:24.504915988 UTC
    , thread_cap_info = ("ThreadId 84", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 96
    , parent = Nothing
    , duration = 1.539982008000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:22.984489476 UTC
    , finish = 2025-09-03 12:55:24.524471484 UTC
    , thread_cap_info = ("ThreadId 63", 0, False)}
**************************************************
F                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                = 26} , self = 72 , parent = Nothing , duration = 0.811924966000 , status
F                                = Fail , start = 2025-09-03 12:55:22.968213321 UTC , finish = 2025-09-03
F                                12:55:23.780138287 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                                
| F                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                              = 24} , self = 101 , parent = Nothing , duration = 2.520209794000 , status
| F                              = Fail , start = 2025-09-03 12:55:22.969109656 UTC , finish = 2025-09-03
| F                              12:55:25.48931945 UTC , thread_cap_info = ("ThreadId 55", 0, False)}
| F                              
| | E                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | E                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | E                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | E                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | E                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                            = 20} , self = 96 , parent = Nothing , duration = 1.539982008000 , status
| | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:55:22.984489476 UTC ,
| | E                            finish = 2025-09-03 12:55:24.524471484 UTC , thread_cap_info = ("ThreadId
| | E                            63", 0, False)}
| | E                            
| | | F                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | F                          = 0 , alphabet_size = 2 , total_length = 24} , self = 53 , parent = Nothing
| | | F                          , duration = 0.282266580000 , status = Fail , start = 2025-09-03 12:55:23.024807868
| | | F                          UTC , finish = 2025-09-03 12:55:23.307074448 UTC , thread_cap_info = ("ThreadId
| | | F                          80", 0, False)}
| | | F                          
| | | | F                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F                        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F                        = 0 , alphabet_size = 2 , total_length = 24} , self = 73 , parent = Nothing
| | | | F                        , duration = 0.775379830000 , status = Fail , start = 2025-09-03 12:55:23.024814354
| | | | F                        UTC , finish = 2025-09-03 12:55:23.800194184 UTC , thread_cap_info = ("ThreadId
| | | | F                        82", 0, False)}
| | | | F                        
| | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F                      = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F                      = 112} , self = 75 , parent = Nothing , duration = 0.825475027000 , status
| | | | | F                      = Fail , start = 2025-09-03 12:55:23.039824984 UTC , finish = 2025-09-03
| | | | | F                      12:55:23.865300011 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | | | F                      
| | | | | | E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | E                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E                    = 22} , self = 95 , parent = Nothing , duration = 1.460446076000 , status
| | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 12:55:23.044469912 UTC ,
| | | | | | E                    finish = 2025-09-03 12:55:24.504915988 UTC , thread_cap_info = ("ThreadId
| | | | | | E                    84", 0, False)}
| | | | | | E                    
| | | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F                  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | F                  = 112} , self = 65 , parent = Nothing , duration = 0.661603883000 , status
| | | | | | | F                  = Fail , start = 2025-09-03 12:55:23.044481099 UTC , finish = 2025-09-03
| | | | | | | F                  12:55:23.706084982 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | | | | | | F                  
| | | | | | | | F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | F                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | F                = 0 , alphabet_size = 2 , total_length = 20} , self = 66 , parent = Nothing
| | | | | | | | F                , duration = 0.645503326000 , status = Fail , start = 2025-09-03 12:55:23.06454647
| | | | | | | | F                UTC , finish = 2025-09-03 12:55:23.710049796 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F                97", 0, False)}
| | | | | | | | F                
| | | | | | | | | E              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E              = 18} , self = 79 , parent = Nothing , duration = 1.000000700000 , status
| | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 12:55:23.084481761 UTC ,
| | | | | | | | | E              finish = 2025-09-03 12:55:24.084482461 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E              99", 0, False)}
| | | | | | | | | E              
| | | | | | | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F            = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F            = 0 , alphabet_size = 4 , total_length = 112} , self = 51 , parent = Nothing
| | | | | | | | | | F            , duration = 0.199414497000 , status = Fail , start = 2025-09-03 12:55:23.084483117
| | | | | | | | | | F            UTC , finish = 2025-09-03 12:55:23.283897614 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F            129", 3, False)}
| | | | | | | | | | F            
| | | | | | | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F          = 0 , alphabet_size = 4 , total_length = 112} , self = 81 , parent = Nothing
| | | | | | | | | | | F          , duration = 1.083937255000 , status = Fail , start = 2025-09-03 12:55:23.104481608
| | | | | | | | | | | F          UTC , finish = 2025-09-03 12:55:24.188418863 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F          131", 3, False)}
| | | | | | | | | | | F          
| | | | | | | | | | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | F        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | F        = 0 , alphabet_size = 2 , total_length = 22} , self = 74 , parent = Nothing
| | | | | | | | | | | | F        , duration = 0.655166171000 , status = Fail , start = 2025-09-03 12:55:23.183605922
| | | | | | | | | | | | F        UTC , finish = 2025-09-03 12:55:23.838772093 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | F        123", 0, False)}
| | | | | | | | | | | | F        
| | | | | | | | | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F      = 0 , alphabet_size = 2 , total_length = 20} , self = 57 , parent = Nothing
| | | | | | | | | | | | | F      , duration = 0.251130063000 , status = Fail , start = 2025-09-03 12:55:23.2053474
| | | | | | | | | | | | | F      UTC , finish = 2025-09-03 12:55:23.456477463 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F      127", 0, False)}
| | | | | | | | | | | | | F      
| | | | | | | | | | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | F    = 0 , alphabet_size = 2 , total_length = 18} , self = 58 , parent = Nothing
| | | | | | | | | | | | | | F    , duration = 0.227413843000 , status = Fail , start = 2025-09-03 12:55:23.246179363
| | | | | | | | | | | | | | F    UTC , finish = 2025-09-03 12:55:23.473593206 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | F    135", 0, False)}
| | | | | | | | | | | | | | F    
| | | | | | | | | | F | | | |    
| | | F | | | | | |   | | | |    
| | | S | | | | | |   | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | S | | | | | |   | | | |    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | S | | | | | |   | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | S | | | | | |   | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | S | | | | | |   | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | S | | | | | |   | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | S | | | | | |   | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | S | | | | | |   | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | S | | | | | |   | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | S | | | | | |   | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | S | | | | | |   | | | |    = 22} , self = 62 , parent = Nothing , duration = 0.320041239000 , status
| | | S | | | | | |   | | | |    = Success , start = 2025-09-03 12:55:23.345692439 UTC , finish = 2025-09-03
| | | S | | | | | |   | | | |    12:55:23.665733678 UTC , thread_cap_info = ("ThreadId 143", 0, False)}
| | | S | | | | | |   | | | |    
| | | | | | | | | | E | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E | | | |    = 20} , self = 99 , parent = Nothing , duration = 1.480463761000 , status
| | | | | | | | | | E | | | |    = Except "AsyncCancelled" , start = 2025-09-03 12:55:23.384482458 UTC ,
| | | | | | | | | | E | | | |    finish = 2025-09-03 12:55:24.864946219 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E | | | |    144", 0, False)}
| | | | | | | | | | E | | | |    
| | | | | | | | | | | | | F |    
| | | | | | | | | | | | |   F    
| | | | | | | | | | | | | E      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | E      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | E      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | E      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | E      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E      = 16} , self = 97 , parent = Nothing , duration = 1.061748046000 , status
| | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:55:23.482718138 UTC ,
| | | | | | | | | | | | | E      finish = 2025-09-03 12:55:24.544466184 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E      149", 0, False)}
| | | | | | | | | | | | | E      
| | | | | | | | | | | | | | F    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | F    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | F    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | F    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | F    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | F    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | F    = 26} , self = 102 , parent = Nothing , duration = 3.042652117000 , status
| | | | | | | | | | | | | | F    = Fail , start = 2025-09-03 12:55:23.484566456 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | F    12:55:26.527218573 UTC , thread_cap_info = ("ThreadId 157", 0, False)}
| | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E  = 22} , self = 98 , parent = Nothing , duration = 1.260362368000 , status
| | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:55:23.604574825 UTC ,
| | | | | | | | | | | | | | | E  finish = 2025-09-03 12:55:24.864937193 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E  165", 0, False)}
| | | | | | | | | | | | | | | E  
| | | S | | | | | | | | | | | |  
| | |   | | | F | | | | | | | |  
| | |   | | |   F | | | | | | |  
| | | F | | |     | | | | | | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F | | |     | | | | | | |  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F | | |     | | | | | | |  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F | | |     | | | | | | |  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F | | |     | | | | | | |  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | F | | |     | | | | | | |  = 0 , alphabet_size = 2 , total_length = 26} , self = 80 , parent = Nothing
| | | F | | |     | | | | | | |  , duration = 0.422388987000 , status = Fail , start = 2025-09-03 12:55:23.724827875
| | | F | | |     | | | | | | |  UTC , finish = 2025-09-03 12:55:24.147216862 UTC , thread_cap_info = ("ThreadId
| | | F | | |     | | | | | | |  174", 0, False)}
| | | F | | |     | | | | | | |  
F | | | | | |     | | | | | | |  
  | | | F | |     | | | | | | |  
  | | |   | |     | | | F | | |  
  | | |   F |     | | |   | | |  
F | | |     |     | | |   | | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | |     |     | | |   | | |  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | |     |     | | |   | | |  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | |     |     | | |   | | |  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | |     |     | | |   | | |  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
F | | |     |     | | |   | | |  = 0 , alphabet_size = 2 , total_length = 26} , self = 100 , parent = Nothing
F | | |     |     | | |   | | |  , duration = 1.015241935000 , status = Fail , start = 2025-09-03 12:55:23.912878402
F | | |     |     | | |   | | |  UTC , finish = 2025-09-03 12:55:24.928120337 UTC , thread_cap_info = ("ThreadId
F | | |     |     | | |   | | |  183", 0, False)}
F | | |     |     | | |   | | |  
| | | |     |     E | |   | | |  
| | | F     |       | |   | | |  
| | |       |       | F   | | |  
| | | E     |       |     | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E     |       |     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E     |       |     | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | E     |       |     | | |  = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E     |       |     | | |  = 404} , self = 103 , parent = Nothing , duration = 3.063971820000 , status
| | | E     |       |     | | |  = Except "<<timeout>>" , start = 2025-09-03 12:55:24.202468152 UTC , finish
| | | E     |       |     | | |  = 2025-09-03 12:55:27.266439972 UTC , thread_cap_info = ("ThreadId 206",
| | | E     |       |     | | |  3, False)}
| | | E     |       |     | | |  
| | | | E   |       |     | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E   |       |     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E   |       |     | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | E   |       |     | | |  = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | E   |       |     | | |  = 404} , self = 104 , parent = Nothing , duration = 3.061960128000 , status
| | | | E   |       |     | | |  = Except "<<timeout>>" , start = 2025-09-03 12:55:24.204502973 UTC , finish
| | | | E   |       |     | | |  = 2025-09-03 12:55:27.266463101 UTC , thread_cap_info = ("ThreadId 207",
| | | | E   |       |     | | |  3, False)}
| | | | E   |       |     | | |  
| | | | | E |       |     | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E |       |     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E |       |     | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | E |       |     | | |  = 24 , num_top_rules = 24 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | E |       |     | | |  = 660} , self = 105 , parent = Nothing , duration = 3.021358402000 , status
| | | | | E |       |     | | |  = Except "<<timeout>>" , start = 2025-09-03 12:55:24.245107739 UTC , finish
| | | | | E |       |     | | |  = 2025-09-03 12:55:27.266466141 UTC , thread_cap_info = ("ThreadId 209",
| | | | | E |       |     | | |  3, False)}
| | | | | E |       |     | | |  
| | | | | | | E     |     | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E     |     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E     |     | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | | | E     |     | | |  = 24 , num_top_rules = 24 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | E     |     | | |  = 660} , self = 106 , parent = Nothing , duration = 3.001985194000 , status
| | | | | | | E     |     | | |  = Except "<<timeout>>" , start = 2025-09-03 12:55:24.264483746 UTC , finish
| | | | | | | E     |     | | |  = 2025-09-03 12:55:27.26646894 UTC , thread_cap_info = ("ThreadId 210",
| | | | | | | E     |     | | |  3, False)}
| | | | | | | E     |     | | |  
| | | | | | E |     |     | | |  
| | E | | |   |     |     | | |  
| |   | | |   |     |     E | |  
| |   | | |   |     |       | E  
| |   | | |   |     E       |    
F |   | | |   |             |    
  F   | | |   |             |    
      | | |   |             F    
      E | |   |                  
        E |   |                  
          E   |                  
              E                  
S                                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S                                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S                                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S                                = 18 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4
S                                , alphabet_size = 6 , total_length = 404} , self = 107 , parent = Nothing
S                                , duration = 0.682231086000 , status = Success , start = 2025-09-03 12:55:27.26649991
S                                UTC , finish = 2025-09-03 12:55:27.948730996 UTC , thread_cap_info = ("ThreadId
S                                217", 3, False)}
S                                
| E                              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E                              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E                              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E                              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| E                              , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size
| E                              = 6 , total_length = 404} , self = 110 , parent = Nothing , duration =
| E                              1.283549699000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E                              12:55:27.284483183 UTC , finish = 2025-09-03 12:55:28.568032882 UTC , thread_cap_info
| E                              = ("ThreadId 218", 3, False)}
| E                              
| | F                            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                            = 28 , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 4
| | F                            , alphabet_size = 6 , total_length = 660} , self = 109 , parent = Nothing
| | F                            , duration = 1.245171893000 , status = Fail , start = 2025-09-03 12:55:27.304697491
| | F                            UTC , finish = 2025-09-03 12:55:28.549869384 UTC , thread_cap_info = ("ThreadId
| | F                            219", 3, False)}
| | F                            
| | | S                          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 28
| | | S                          , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 4 , alphabet_size
| | | S                          = 6 , total_length = 660} , self = 115 , parent = Nothing , duration =
| | | S                          3.094976549000 , status = Success , start = 2025-09-03 12:55:27.364611108
| | | S                          UTC , finish = 2025-09-03 12:55:30.459587657 UTC , thread_cap_info = ("ThreadId
| | | S                          220", 3, False)}
| | | S                          
S | | |                          
  | F |                          
S |   |                          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
S |   |                          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |   |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S |   |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 28
S |   |                          , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 4 , alphabet_size
S |   |                          = 6 , total_length = 660} , self = 117 , parent = Nothing , duration =
S |   |                          1.967579206000 , status = Success , start = 2025-09-03 12:55:28.565397856
S |   |                          UTC , finish = 2025-09-03 12:55:30.532977062 UTC , thread_cap_info = ("ThreadId
S |   |                          225", 3, False)}
S |   |                          
| E   |                          
| E   |                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |                          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| E   |                          = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   |                          = 310} , self = 123 , parent = Nothing , duration = 3.040431228000 , status
| E   |                          = Except "<<timeout>>" , start = 2025-09-03 12:55:28.745395887 UTC , finish
| E   |                          = 2025-09-03 12:55:31.785827115 UTC , thread_cap_info = ("ThreadId 230",
| E   |                          3, False)}
| E   |                          
| | E |                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |                          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | E |                          = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E |                          = 310} , self = 124 , parent = Nothing , duration = 3.045485536000 , status
| | E |                          = Except "<<timeout>>" , start = 2025-09-03 12:55:28.778989227 UTC , finish
| | E |                          = 2025-09-03 12:55:31.824474763 UTC , thread_cap_info = ("ThreadId 231",
| | E |                          3, False)}
| | E |                          
| | | S                          
S | |                            
E | |                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | |                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | |                            = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
E | |                            = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E | |                            = 464} , self = 126 , parent = Nothing , duration = 3.034836695000 , status
E | |                            = Except "<<timeout>>" , start = 2025-09-03 12:55:30.804701427 UTC , finish
E | |                            = 2025-09-03 12:55:33.839538122 UTC , thread_cap_info = ("ThreadId 238",
E | |                            3, False)}
E | |                            
| | | E                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                          = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | E                          = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E                          = 464} , self = 127 , parent = Nothing , duration = 3.015078455000 , status
| | | E                          = Except "<<timeout>>" , start = 2025-09-03 12:55:30.82448342 UTC , finish
| | | E                          = 2025-09-03 12:55:33.839561875 UTC , thread_cap_info = ("ThreadId 239",
| | | E                          3, False)}
| | | E                          
| E | |                          
|   E |                          
| F   |                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |                          = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| F   |                          , alphabet_size = 6 , total_length = 310} , self = 125 , parent = Nothing
| F   |                          , duration = 0.666092162000 , status = Fail , start = 2025-09-03 12:55:31.844592994
| F   |                          UTC , finish = 2025-09-03 12:55:32.510685156 UTC , thread_cap_info = ("ThreadId
| F   |                          242", 3, False)}
| F   |                          
| | E |                          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | E |                          , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| | E |                          = 6 , total_length = 310} , self = 132 , parent = Nothing , duration =
| | E |                          4.361394276000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E |                          12:55:31.865681771 UTC , finish = 2025-09-03 12:55:36.227076047 UTC , thread_cap_info
| | E |                          = ("ThreadId 243", 3, False)}
| | E |                          
| F | |                          
| F | |                          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |                          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| F | |                          , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| F | |                          = 6 , total_length = 310} , self = 128 , parent = Nothing , duration =
| F | |                          1.656281547000 , status = Fail , start = 2025-09-03 12:55:32.604490304
| F | |                          UTC , finish = 2025-09-03 12:55:34.260771851 UTC , thread_cap_info = ("ThreadId
| F | |                          245", 3, False)}
| F | |                          
E | | |                          
  | | E                          
F | |                            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |                            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |                            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |                            = 20 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 4
F | |                            , alphabet_size = 6 , total_length = 464} , self = 129 , parent = Nothing
F | |                            , duration = 0.954022791000 , status = Fail , start = 2025-09-03 12:55:33.839582627
F | |                            UTC , finish = 2025-09-03 12:55:34.793605418 UTC , thread_cap_info = ("ThreadId
F | |                            250", 3, False)}
F | |                            
| | | S                          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| | | S                          , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size
| | | S                          = 6 , total_length = 464} , self = 137 , parent = Nothing , duration =
| | | S                          3.930763356000 , status = Success , start = 2025-09-03 12:55:33.846461857
| | | S                          UTC , finish = 2025-09-03 12:55:37.777225213 UTC , thread_cap_info = ("ThreadId
| | | S                          251", 3, False)}
| | | S                          
| F | |                          
| S | |                          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| S | |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |                          = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| S | |                          , alphabet_size = 6 , total_length = 310} , self = 130 , parent = Nothing
| S | |                          , duration = 1.779379828000 , status = Success , start = 2025-09-03 12:55:34.266421387
| S | |                          UTC , finish = 2025-09-03 12:55:36.045801215 UTC , thread_cap_info = ("ThreadId
| S | |                          253", 3, False)}
| S | |                          
F | | |                          
E | | |                          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |                          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
E | | |                          , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size
E | | |                          = 6 , total_length = 464} , self = 139 , parent = Nothing , duration =
E | | |                          3.342381032000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | |                          12:55:34.805532854 UTC , finish = 2025-09-03 12:55:38.147913886 UTC , thread_cap_info
E | | |                          = ("ThreadId 256", 3, False)}
E | | |                          
| S | |                          
|   E |                          
| E   |                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |                          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| E   |                          = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| E   |                          = 140} , self = 144 , parent = Nothing , duration = 3.078262516000 , status
| E   |                          = Except "<<timeout>>" , start = 2025-09-03 12:55:36.486214502 UTC , finish
| E   |                          = 2025-09-03 12:55:39.564477018 UTC , thread_cap_info = ("ThreadId 262",
| E   |                          3, False)}
| E   |                          
| | E |                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |                          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | E |                          = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | E |                          = 140} , self = 145 , parent = Nothing , duration = 3.154052228000 , status
| | E |                          = Except "<<timeout>>" , start = 2025-09-03 12:55:36.510707089 UTC , finish
| | E |                          = 2025-09-03 12:55:39.664759317 UTC , thread_cap_info = ("ThreadId 263",
| | E |                          3, False)}
| | E |                          
| | | S                          
E | |                            
E | |                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | |                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | |                            = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
E | |                            = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E | |                            = 426} , self = 149 , parent = Nothing , duration = 3.740053557000 , status
E | |                            = Except "<<timeout>>" , start = 2025-09-03 12:55:38.724483902 UTC , finish
E | |                            = 2025-09-03 12:55:42.464537459 UTC , thread_cap_info = ("ThreadId 268",
E | |                            3, False)}
E | |                            
| | | E                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | E                          = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E                          = 426} , self = 150 , parent = Nothing , duration = 3.720052302000 , status
| | | E                          = Except "<<timeout>>" , start = 2025-09-03 12:55:38.744495454 UTC , finish
| | | E                          = 2025-09-03 12:55:42.464547756 UTC , thread_cap_info = ("ThreadId 269",
| | | E                          3, False)}
| | | E                          
| E | |                          
|   E |                          
| F   |                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |                          = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| F   |                          = 5 , total_length = 140} , self = 146 , parent = Nothing , duration =
| F   |                          0.485415718000 , status = Fail , start = 2025-09-03 12:55:39.725561168
| F   |                          UTC , finish = 2025-09-03 12:55:40.210976886 UTC , thread_cap_info = ("ThreadId
| F   |                          272", 3, False)}
| F   |                          
| | S |                          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S |                          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | S |                          = 5 , total_length = 140} , self = 147 , parent = Nothing , duration =
| | S |                          1.352244089000 , status = Success , start = 2025-09-03 12:55:39.819735322
| | S |                          UTC , finish = 2025-09-03 12:55:41.171979411 UTC , thread_cap_info = ("ThreadId
| | S |                          273", 3, False)}
| | S |                          
| F | |                          
| S | |                          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S | |                          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S | |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S | |                          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| S | |                          = 5 , total_length = 140} , self = 151 , parent = Nothing , duration =
| S | |                          2.106212506000 , status = Success , start = 2025-09-03 12:55:40.38448618
| S | |                          UTC , finish = 2025-09-03 12:55:42.490698686 UTC , thread_cap_info = ("ThreadId
| S | |                          275", 3, False)}
| S | |                          
| | S |                          
E |   |                          
  |   E                          
  S                              
F                                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                                = 18 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4
F                                , alphabet_size = 6 , total_length = 426} , self = 157 , parent = Nothing
F                                , duration = 0.905401684000 , status = Fail , start = 2025-09-03 12:55:42.504536297
F                                UTC , finish = 2025-09-03 12:55:43.409937981 UTC , thread_cap_info = ("ThreadId
F                                282", 3, False)}
F                                
| S                              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| S                              , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size
| S                              = 6 , total_length = 426} , self = 165 , parent = Nothing , duration =
| S                              5.255066552000 , status = Success , start = 2025-09-03 12:55:42.524480912
| S                              UTC , finish = 2025-09-03 12:55:47.779547464 UTC , thread_cap_info = ("ThreadId
| S                              283", 3, False)}
| S                              
| | E                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | E                            = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | E                            = 140} , self = 158 , parent = Nothing , duration = 3.082289900000 , status
| | E                            = Except "<<timeout>>" , start = 2025-09-03 12:55:42.944501755 UTC , finish
| | E                            = 2025-09-03 12:55:46.026791655 UTC , thread_cap_info = ("ThreadId 288",
| | E                            3, False)}
| | E                            
| | | E                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | E                          = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | E                          = 140} , self = 159 , parent = Nothing , duration = 3.062259691000 , status
| | | E                          = Except "<<timeout>>" , start = 2025-09-03 12:55:42.964551893 UTC , finish
| | | E                          = 2025-09-03 12:55:46.026811584 UTC , thread_cap_info = ("ThreadId 289",
| | | E                          3, False)}
| | | E                          
F | | |                          
E | | |                          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |                          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
E | | |                          , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size
E | | |                          = 6 , total_length = 426} , self = 169 , parent = Nothing , duration =
E | | |                          4.341879728000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | |                          12:55:43.566779401 UTC , finish = 2025-09-03 12:55:47.908659129 UTC , thread_cap_info
E | | |                          = ("ThreadId 290", 3, False)}
E | | |                          
| | E |                          
| |   E                          
| | F                            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                            = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | F                            = 5 , total_length = 140} , self = 160 , parent = Nothing , duration =
| | F                            0.590345890000 , status = Fail , start = 2025-09-03 12:55:46.087869962
| | F                            UTC , finish = 2025-09-03 12:55:46.678215852 UTC , thread_cap_info = ("ThreadId
| | F                            295", 3, False)}
| | F                            
| | | S                          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | S                          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | S                          = 5 , total_length = 140} , self = 161 , parent = Nothing , duration =
| | | S                          1.605144156000 , status = Success , start = 2025-09-03 12:55:46.107799532
| | | S                          UTC , finish = 2025-09-03 12:55:47.712943688 UTC , thread_cap_info = ("ThreadId
| | | S                          296", 3, False)}
| | | S                          
| | F |                          
| | S |                          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S |                          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S |                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S |                          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | S |                          = 5 , total_length = 140} , self = 162 , parent = Nothing , duration =
| | S |                          0.952994184000 , status = Success , start = 2025-09-03 12:55:46.768914945
| | S |                          UTC , finish = 2025-09-03 12:55:47.721909129 UTC , thread_cap_info = ("ThreadId
| | S |                          298", 3, False)}
| | S |                          
| | | S                          
| | S                            
| S                              
E                                
