last 572 length 2345
CNF 572 vars 2345 clauses
last 474 length 1868
last 572 length 2278
last 442 length 1772
CNF 474 vars 1868 clauses
CNF 572 vars 2278 clauses
CNF 442 vars 1772 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2477, clauses: 8916
last 2477 length 8916
CNF 2477 vars 8916 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2069, clauses: 7401
last 2069 length 7401
CNF 2069 vars 7401 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2477, clauses: 8916, status: Satisfied, time: 0.103056472s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2069, clauses: 7401, status: Satisfied, time: 0.083673127s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6674, clauses: 27675
last 404 length 1600
last 412 length 1650
last 495 length 1975
CNF 495 vars 1975 clauses
CNF 412 vars 1650 clauses
last 4535 length 22634
CNF 404 vars 1600 clauses
last 555 length 2278
CNF 555 vars 2278 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6576
last 1856 length 6576
CNF 1856 vars 6576 clauses
CNF 4535 vars 22634 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8407
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6576, status: Unsatisfied, time: 0.044314846s
last 3877 length 17551
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6334, clauses: 26255
last 2359 length 8407
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7045, clauses: 29145
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3888, clauses: 15518
CNF 3877 vars 17551 clauses
last 6334 length 26255
CNF 2359 vars 8407 clauses
last 7045 length 29145
last 3888 length 15518
CNF 6334 vars 26255 clauses
CNF 3888 vars 15518 clauses
CNF 7045 vars 29145 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8407, status: Unsatisfied, time: 0.228296776s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7045, clauses: 29145, status: Satisfied, time: 0.137027037s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6334, clauses: 26255, status: Satisfied, time: 0.20001081s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4383, clauses: 17423
last 4383 length 17423
last 429 length 1723
CNF 429 vars 1723 clauses
last 521 length 2144
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 4 strict rules and 5 weak rules on 5 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [b, b] {- Input 1 -}
  [c, b] -> [a, c, c, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a] -> [] {- Mirror (Input 0) -}
  [c, a] -> [b, b] {- Mirror (Input 1) -}
  [b, c] -> [a, c, c, a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a] {- Mirror (Input 0) -}
  [b, b, a] -> [b] {- Mirror (Input 0) -}
  [c, b, a] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [b, b] {- Mirror (Input 1) -}
  [b, c] -> [a, c, c, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a] {- Input 0 -}
  [a, b, b] -> [b] {- Input 0 -}
  [a, b, c] -> [c] {- Input 0 -}
  [a, c] -> [b, b] {- Input 1 -}
  [c, b] -> [a, c, c, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, b] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c, c, a] {- DP Nontop (Input 2) -}
  [c#, b] |-> [a#] {- DP (Top 3) (Input 2) -}
  [c#, b] |-> [a#, c, c, a] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#, a] {- DP (Top 2) (Input 2) -}
  [c#, b] |-> [c#, c, a] {- DP (Top 1) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, b] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c, c, a] {- DP Nontop (Input 2) -}
  [c#, b] |-> [c#, a] {- DP (Top 2) (Input 2) -}
  [c#, b] |-> [c#, c, a] {- DP (Top 1) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, b] |-> [c#, a] {- DP (Top 2) (Input 2) -}
  [c#, b] |-> [c#, c, a] {- DP (Top 1) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, b] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c, c, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 7A 7A 10A - \
        | 7A 7A 10A - |
        | 7A 7A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [c#, b] |-> [c#, c, a] {- DP (Top 1) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, b] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c, c, a] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, b] |-> [c#, c, a] {- DP (Top 1) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, b] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c, c, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -2A 0A 0A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( b
  , Wk  / -1A 1A  1A  \
        | 0A  -1A -2A |
        \ -   -   0A  / )
  ( c
  , Wk  / 0A -1A 0A \
        | 1A 0A  1A |
        \ -  -   0A / )
  ( c#
  , Wk  / 1A 0A 1A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, b] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c, c, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(4/5,5)\Weight\EDG(2/5,4)\Matrix{\Arctic}{3}\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 521 vars 2144 clauses


**************************************************
F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F              = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
F              = 0 , alphabet_size = 9 , total_length = 162} , self = 80 , parent = Nothing
F              , duration = 0.311758416000 , status = Fail , start = 2025-09-03 11:43:38.539497629
F              UTC , finish = 2025-09-03 11:43:38.851256045 UTC , thread_cap_info = ("ThreadId
F              62", 1, False)}
F              
| S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S            = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| S            = 5 , total_length = 38} , self = 59 , parent = Nothing , duration = 0.187587159000
| S            , status = Success , start = 2025-09-03 11:43:38.5812574 UTC , finish =
| S            2025-09-03 11:43:38.768844559 UTC , thread_cap_info = ("ThreadId 87", 2,
| S            False)}
| S            
| | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | E          = 5 , total_length = 38} , self = 63 , parent = Nothing , duration = 0.163029916000
| | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:38.60670567
| | E          UTC , finish = 2025-09-03 11:43:38.769735586 UTC , thread_cap_info = ("ThreadId
| | E          91", 2, False)}
| | E          
| | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S        = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | S        = 4 , total_length = 31} , self = 60 , parent = Nothing , duration = 0.160710067000
| | | S        , status = Success , start = 2025-09-03 11:43:38.608402566 UTC , finish
| | | S        = 2025-09-03 11:43:38.769112633 UTC , thread_cap_info = ("ThreadId 92",
| | | S        2, False)}
| | | S        
| | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F      = 162} , self = 85 , parent = Nothing , duration = 0.499972071000 , status
| | | | F      = Fail , start = 2025-09-03 11:43:38.609019436 UTC , finish = 2025-09-03
| | | | F      11:43:39.108991507 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F    = 162} , self = 79 , parent = Nothing , duration = 0.241321279000 , status
| | | | | F    = Fail , start = 2025-09-03 11:43:38.609026596 UTC , finish = 2025-09-03
| | | | | F    11:43:38.850347875 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| | | | | F    
| | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | E  = 4 , total_length = 31} , self = 64 , parent = Nothing , duration = 0.144691532000
| | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:38.626010097
| | | | | | E  UTC , finish = 2025-09-03 11:43:38.770701629 UTC , thread_cap_info = ("ThreadId
| | | | | | E  101", 2, False)}
| | | | | | E  
| S | | | | |  
|   | S | | |  
|   E   | | |  
|       | | E  
| F     | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F     | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F     | |    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F     | |    = 4 , total_length = 27} , self = 84 , parent = Nothing , duration = 0.160303964000
| F     | |    , status = Fail , start = 2025-09-03 11:43:38.789926554 UTC , finish =
| F     | |    2025-09-03 11:43:38.950230518 UTC , thread_cap_info = ("ThreadId 122",
| F     | |    2, False)}
| F     | |    
| | S   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | S   | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | S   | |    = 4 , total_length = 27} , self = 88 , parent = Nothing , duration = 0.408593319000
| | S   | |    , status = Success , start = 2025-09-03 11:43:38.801328457 UTC , finish
| | S   | |    = 2025-09-03 11:43:39.209921776 UTC , thread_cap_info = ("ThreadId 123",
| | S   | |    2, False)}
| | S   | |    
| | | F | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |    = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F | |    = 5 , total_length = 34} , self = 86 , parent = Nothing , duration = 0.369465425000
| | | F | |    , status = Fail , start = 2025-09-03 11:43:38.802980771 UTC , finish =
| | | F | |    2025-09-03 11:43:39.172446196 UTC , thread_cap_info = ("ThreadId 124",
| | | F | |    2, False)}
| | | F | |    
| | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | S  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | S  = 5 , total_length = 34} , self = 87 , parent = Nothing , duration = 0.362529279000
| | | | | | S  , status = Success , start = 2025-09-03 11:43:38.84564294 UTC , finish
| | | | | | S  = 2025-09-03 11:43:39.208172219 UTC , thread_cap_info = ("ThreadId 126",
| | | | | | S  2, False)}
| | | | | | S  
| | | | | F |  
F | | | |   |  
  F | | |   |  
E   | | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   | | |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E   | | |   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
E   | | |   |  = 4 , total_length = 27} , self = 92 , parent = Nothing , duration = 0.293442542000
E   | | |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:38.950257152
E   | | |   |  UTC , finish = 2025-09-03 11:43:39.243699694 UTC , thread_cap_info = ("ThreadId
E   | | |   |  129", 2, False)}
E   | | |   |  
|   | | F   |  
|   | F     |  
|   |       S  
|   S          
E              
