Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAA(A(x1))
    6: BAA(b(x1)) -> BAAB(x1)
    7: BAAB(a(x1)) -> BAABA(x1)
    8: BAAB(b(x1)) -> BAAB(B(x1))
    9: BAABA(a(x1)) -> BAABAA(x1)
    10: BAABA(b(x1)) -> BAABA(B(x1))
    11: BAABAA(a(x1)) -> BAABAAA(x1)
    12: BAABAA(b(x1)) -> BAABAA(B(x1))
    13: BAABAAA(a(x1)) -> BAABAAAA(x1)
    14: BAABAAA(b(x1)) -> BAABAAA(B(x1))
    15: BAABAAAA(a(x1)) -> BAABAAAA(A(x1))
    16: BAABAAAA(b(x1)) -> BAABAAAAB(x1)
    17: BAABAAAAB(a(x1)) -> BAABAAAABA(x1)
    18: BAABAAAAB(b(x1)) -> BAABAAAAB(B(x1))
    19: BAABAAAABA(x1) -> a(b(a(a(b(a(x1))))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> ABA(x1)
    23: AB(b(x1)) -> AB(B(x1))
    24: ABA(a(x1)) -> ABAA(x1)
    25: ABA(b(x1)) -> ABA(B(x1))
    26: ABAA(a(x1)) -> ABAA(A(x1))
    27: ABAA(b(x1)) -> ABAAB(x1)
    28: ABAAB(a(x1)) -> ABAABA(x1)
    29: ABAAB(b(x1)) -> ABAAB(B(x1))
    30: ABAABA(x1) -> b(a(a(b(a(a(a(a(b(a(x1))))))))))
Number of strict rules: 30
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #ABAAB(b(x1)) -> #ABAAB(B(x1))
   #4: #ABAAB(b(x1)) -> #B(x1)
   #5: #BAA(b(x1)) -> #BAAB(x1)
   #6: #BAABAAA(a(x1)) -> #BAABAAAA(x1)
   #7: #BAABA(a(x1)) -> #BAABAA(x1)
   #8: #BAABAA(a(x1)) -> #BAABAAA(x1)
   #9: #ABA(a(x1)) -> #ABAA(x1)
   #10: #AB(b(x1)) -> #AB(B(x1))
   #11: #AB(b(x1)) -> #B(x1)
   #12: #BAABAA(b(x1)) -> #BAABAA(B(x1))
   #13: #BAABAA(b(x1)) -> #B(x1)
   #14: #BAABAAA(b(x1)) -> #BAABAAA(B(x1))
   #15: #BAABAAA(b(x1)) -> #B(x1)
   #16: #ABA(b(x1)) -> #ABA(B(x1))
   #17: #ABA(b(x1)) -> #B(x1)
   #18: #A(a(x1)) -> #A(A(x1))
   #19: #A(a(x1)) -> #A(x1)
   #20: #BAAB(a(x1)) -> #BAABA(x1)
   #21: #BAABA(b(x1)) -> #BAABA(B(x1))
   #22: #BAABA(b(x1)) -> #B(x1)
   #23: #BAA(a(x1)) -> #BAA(A(x1))
   #24: #BAA(a(x1)) -> #A(x1)
   #25: #ABAAB(a(x1)) -> #ABAABA(x1)
   #26: #AB(a(x1)) -> #ABA(x1)
   #27: #ABAA(b(x1)) -> #ABAAB(x1)
   #28: #BAABAAAAB(a(x1)) -> #BAABAAAABA(x1)
   #29: #ABAA(a(x1)) -> #ABAA(A(x1))
   #30: #ABAA(a(x1)) -> #A(x1)
   #31: #A(b(x1)) -> #AB(x1)
   #32: #BAABAAAA(b(x1)) -> #BAABAAAAB(x1)
   #33: #BA(a(x1)) -> #BAA(x1)
   #34: #B(a(x1)) -> #BA(x1)
   #35: #BAAB(b(x1)) -> #BAAB(B(x1))
   #36: #BAAB(b(x1)) -> #B(x1)
   #37: #BAABAAAA(a(x1)) -> #BAABAAAA(A(x1))
   #38: #BAABAAAA(a(x1)) -> #A(x1)
   #39: #BA(b(x1)) -> #BA(B(x1))
   #40: #BA(b(x1)) -> #B(x1)
   #41: #BAABAAAAB(b(x1)) -> #BAABAAAAB(B(x1))
   #42: #BAABAAAAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 38, edges: 86
	SCC { #1 #2 #4..24 #26 #27 #29..40 #42 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
#BAABAAAA(x1)	weight: (/ 1 16) + x1_2; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
  BAAB(x1)	weight: 0; x1_2
BAABAAA(x1)	weight: 0; x1_2
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; 0
    AB(x1)	weight: (/ 1 8); x1_2
#ABAAB(x1)	weight: (/ 1 16) + x1_2; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAABAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAB(x1)	weight: (/ 1 16) + x1_2; 0
#BAABA(x1)	weight: (/ 1 16) + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
#BAABAAAABA(x1)	weight: 0; 0
BAABAAAABA(x1)	weight: 0; x1_2
#BAABAAAAB(x1)	weight: x1_1 + x1_2; 0
 ABAAB(x1)	weight: (/ 1 8); x1_2
#BAABAA(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAA(x1)	weight: 0; x1_2
ABAABA(x1)	weight: (/ 1 8); x1_2
#ABAABA(x1)	weight: 0; 0
 BAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAAB(x1)	weight: 0; x1_2
#ABAA(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: 0; x1_2
BAABAA(x1)	weight: 0; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #32 #42
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1 #2 #4..24 #26 #27 #29..31 #33..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
#BAABAAAA(x1)	weight: (/ 1 16) + x1_2; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
  BAAB(x1)	weight: 0; x1_2
BAABAAA(x1)	weight: 0; x1_2
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; 0
    AB(x1)	weight: (/ 1 8); x1_2
#ABAAB(x1)	weight: x1_1 + x1_2; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAABAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAB(x1)	weight: (/ 1 16) + x1_2; 0
#BAABA(x1)	weight: (/ 1 16) + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
#BAABAAAABA(x1)	weight: 0; 0
BAABAAAABA(x1)	weight: 0; x1_2
#BAABAAAAB(x1)	weight: 0; 0
 ABAAB(x1)	weight: (/ 1 8); x1_2
#BAABAA(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAA(x1)	weight: 0; x1_2
ABAABA(x1)	weight: (/ 1 8); x1_2
#ABAABA(x1)	weight: 0; 0
 BAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAAB(x1)	weight: 0; x1_2
#ABAA(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: 0; x1_2
BAABAA(x1)	weight: 0; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #4 #27
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1 #2 #5..24 #26 #30 #31 #33..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
#BAABAAAA(x1)	weight: (/ 1 16) + x1_2; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
  BAAB(x1)	weight: 0; x1_2
BAABAAA(x1)	weight: 0; x1_2
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
    AB(x1)	weight: (/ 1 8); x1_2
#ABAAB(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAABAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAB(x1)	weight: (/ 1 16) + x1_2; 0
#BAABA(x1)	weight: (/ 1 16) + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
#BAABAAAABA(x1)	weight: 0; 0
BAABAAAABA(x1)	weight: 0; x1_2
#BAABAAAAB(x1)	weight: 0; 0
 ABAAB(x1)	weight: (/ 1 8); x1_2
#BAABAA(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAA(x1)	weight: 0; x1_2
ABAABA(x1)	weight: (/ 1 8); x1_2
#ABAABA(x1)	weight: 0; 0
 BAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAAB(x1)	weight: 0; x1_2
#ABAA(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: 0; x1_2
BAABAA(x1)	weight: 0; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #1 #2
Number of SCCs: 1, DPs: 30, edges: 54
	SCC { #5..24 #26 #30 #31 #33..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
#BAABAAAA(x1)	weight: (/ 1 16) + x1_2; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
  BAAB(x1)	weight: 0; x1_2
BAABAAA(x1)	weight: 0; x1_2
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
    AB(x1)	weight: (/ 1 8); x1_2
#ABAAB(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAABAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAB(x1)	weight: (/ 1 16) + x1_2; 0
#BAABA(x1)	weight: (/ 1 16) + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
#BAABAAAABA(x1)	weight: 0; 0
BAABAAAABA(x1)	weight: 0; x1_2
#BAABAAAAB(x1)	weight: 0; 0
 ABAAB(x1)	weight: (/ 1 8); x1_2
#BAABAA(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAA(x1)	weight: 0; x1_2
ABAABA(x1)	weight: (/ 1 8); x1_2
#ABAABA(x1)	weight: 0; 0
 BAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
BAABAAAAB(x1)	weight: 0; x1_2
#ABAA(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: 0; x1_2
BAABAA(x1)	weight: 0; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #10 #11
Number of SCCs: 1, DPs: 28, edges: 50
	SCC { #5..9 #12..24 #26 #30 #31 #33..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
#BAABAAAA(x1)	weight: (/ 1 16) + x1_2; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
  BAAB(x1)	weight: 0; x1_2
BAABAAA(x1)	weight: 0; x1_2
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
    AB(x1)	weight: (/ 1 8); x1_2
#ABAAB(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAABAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
#BAABA(x1)	weight: (/ 1 16) + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
#BAABAAAABA(x1)	weight: 0; 0
BAABAAAABA(x1)	weight: 0; x1_2
#BAABAAAAB(x1)	weight: 0; 0
 ABAAB(x1)	weight: (/ 1 8); x1_2
#BAABAA(x1)	weight: (/ 1 16) + x1_2; 0
BAABAAAA(x1)	weight: 0; x1_2
ABAABA(x1)	weight: (/ 1 8); x1_2
#ABAABA(x1)	weight: 0; 0
 BAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
BAABAAAAB(x1)	weight: 0; x1_2
#ABAA(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: 0; x1_2
BAABAA(x1)	weight: 0; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #35 #36
Number of SCCs: 1, DPs: 26, edges: 46
	SCC { #5..9 #12..24 #26 #30 #31 #33 #34 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
