last 4035 length 16643
last 4077 length 16686
CNF 4035 vars 16643 clauses
last 323 length 1217
CNF 4077 vars 16686 clauses
last 288 length 1090
CNF 323 vars 1217 clauses
CNF 288 vars 1090 clauses
last 309 length 1177
last 4770 length 19202
CNF 309 vars 1177 clauses
last 3167 length 13220
CNF 4770 vars 19202 clauses
last 4629 length 18733
last 3756 length 15211
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1650, clauses: 5813
last 1650 length 5813
CNF 3756 vars 15211 clauses
CNF 4629 vars 18733 clauses
CNF 3167 vars 13220 clauses
last 341 length 1287
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4283, clauses: 17435
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9571, clauses: 35632
CNF 1650 vars 5813 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1952, clauses: 6873
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10550, clauses: 39402
CNF 341 vars 1287 clauses
last 4283 length 17435
last 9571 length 35632
last 1952 length 6873
last 10550 length 39402
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1650, clauses: 5813, status: Unsatisfied, time: 0.605675966s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37329, clauses: 156710
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4656, clauses: 18911
CNF 4283 vars 17435 clauses
CNF 9571 vars 35632 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 36267, clauses: 152327
CNF 1952 vars 6873 clauses
last 37329 length 156710
CNF 10550 vars 39402 clauses
last 4656 length 18911
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2638, clauses: 10225
last 36267 length 152327
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1952, clauses: 6873, status: Satisfied, time: 0.390983341s
last 2638 length 10225
CNF 4656 vars 18911 clauses
CNF 2638 vars 10225 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10550, clauses: 39402, status: Satisfied, time: 0.589739466s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9571, clauses: 35632, status: Satisfied, time: 0.764204522s
CNF 37329 vars 156710 clauses
CNF 36267 vars 152327 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 6 strict rules and 3 weak rules on 6 letters       weights
SRS with 3 strict rules and 3 weak rules on 6 letters       EDG
SRS with 3 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 6 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, b] -> [c, a] {- Input 1 -}
  [c, c, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [b, a] -> [a, c] {- Mirror (Input 1) -}
  [c, c, c] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 1/1)
  (b, 1/2)
  (c, 1/2)
  (a#, 1/2)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 6A 9A 9A  - |
        \ -  -  -   - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 18A 18A 21A - \
        | 18A 18A 21A - |
        | 18A 18A 21A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 11A 12A 14A - \
        | 11A 12A 14A - |
        | 11A 12A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee(6/3,6)\Weight\EDG(3/3,6)\Matrix{\Arctic}{3}(2/3,6)\Weight(0/3,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.723730172000
  min duration 0.038387156000
  total durat. 1.566860110000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.268460380000
  min duration 1.020699247000
  total durat. 3.545253218000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 24}
    , self = 86
    , parent = Nothing
    , duration = 1.020699247000
    , status = Success
    , start = 2025-09-03 11:33:22.713534088 UTC
    , finish = 2025-09-03 11:33:23.734233335 UTC
    , thread_cap_info = ("ThreadId 123", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 216}
    , self = 90
    , parent = Nothing
    , duration = 1.256093591000
    , status = Success
    , start = 2025-09-03 11:33:22.618480595 UTC
    , finish = 2025-09-03 11:33:23.874574186 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 201}
    , self = 92
    , parent = Nothing
    , duration = 1.268460380000
    , status = Success
    , start = 2025-09-03 11:33:22.613886695 UTC
    , finish = 2025-09-03 11:33:23.882347075 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.541934803000
  min duration 1.541934803000
  total durat. 1.541934803000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 95
    , parent = Nothing
    , duration = 1.541934803000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:33:22.39658659 UTC
    , finish = 2025-09-03 11:33:23.938521393 UTC
    , thread_cap_info = ("ThreadId 35", 3, False)}
**************************************************
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4283, clauses: 17435, status: Unsatisfied, time: 0.860217864s
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                  = 12} , self = 95 , parent = Nothing , duration = 1.541934803000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 11:33:22.39658659 UTC ,
E                  finish = 2025-09-03 11:33:23.938521393 UTC , thread_cap_info = ("ThreadId
E                  35", 3, False)}
E                  
| F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F                = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| F                = 201} , self = 63 , parent = Nothing , duration = 0.132311234000 , status
| F                = Fail , start = 2025-09-03 11:33:22.476628855 UTC , finish = 2025-09-03
| F                11:33:22.608940089 UTC , thread_cap_info = ("ThreadId 80", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F              = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | F              = 216} , self = 73 , parent = Nothing , duration = 0.199412356000 , status
| | F              = Fail , start = 2025-09-03 11:33:22.478203038 UTC , finish = 2025-09-03
| | F              11:33:22.677615394 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F            = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | F            = 216} , self = 67 , parent = Nothing , duration = 0.140244700000 , status
| | | F            = Fail , start = 2025-09-03 11:33:22.478205005 UTC , finish = 2025-09-03
| | | F            11:33:22.618449705 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | F          = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | F          = 201} , self = 81 , parent = Nothing , duration = 0.322663055000 , status
| | | | F          = Fail , start = 2025-09-03 11:33:22.493863513 UTC , finish = 2025-09-03
| | | | F          11:33:22.816526568 UTC , thread_cap_info = ("ThreadId 79", 1, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F        = 162} , self = 82 , parent = Nothing , duration = 0.282667371000 , status
| | | | | F        = Fail , start = 2025-09-03 11:33:22.533865966 UTC , finish = 2025-09-03
| | | | | F        11:33:22.816533337 UTC , thread_cap_info = ("ThreadId 92", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F      = 162} , self = 83 , parent = Nothing , duration = 0.365181761000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:33:22.553866764 UTC , finish = 2025-09-03
| | | | | | F      11:33:22.919048525 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | | | | F      
| F | | | | |      
| F | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F | | | | |      = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F | | | | |      = 24} , self = 84 , parent = Nothing , duration = 0.723730172000 , status
| F | | | | |      = Fail , start = 2025-09-03 11:33:22.611002708 UTC , finish = 2025-09-03
| F | | | | |      11:33:23.33473288 UTC , thread_cap_info = ("ThreadId 108", 2, False)}
| F | | | | |      
| | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S    = 33 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 ,
| | | | | | | S    alphabet_size = 11 , total_length = 201} , self = 92 , parent = Nothing
| | | | | | | S    , duration = 1.268460380000 , status = Success , start = 2025-09-03 11:33:22.613886695
| | | | | | | S    UTC , finish = 2025-09-03 11:33:23.882347075 UTC , thread_cap_info = ("ThreadId
| | | | | | | S    110", 1, False)}
| | | | | | | S    
| | | F | | | |    
| | | S | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | |    = 36 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 27 ,
| | | S | | | |    alphabet_size = 12 , total_length = 216} , self = 90 , parent = Nothing
| | | S | | | |    , duration = 1.256093591000 , status = Success , start = 2025-09-03 11:33:22.618480595
| | | S | | | |    UTC , finish = 2025-09-03 11:33:23.874574186 UTC , thread_cap_info = ("ThreadId
| | | S | | | |    111", 0, False)}
| | | S | | | |    
| | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F  = 5 , total_length = 21} , self = 85 , parent = Nothing , duration = 0.895223607000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:33:22.634907251 UTC , finish =
| | | | | | | | F  2025-09-03 11:33:23.530130858 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | | | F  2, False)}
| | | | | | | | F  
| | F | | | | | |  
| | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | S | | | | | |  = 6 , total_length = 24} , self = 86 , parent = Nothing , duration = 1.020699247000
| | S | | | | | |  , status = Success , start = 2025-09-03 11:33:22.713534088 UTC , finish
| | S | | | | | |  = 2025-09-03 11:33:23.734233335 UTC , thread_cap_info = ("ThreadId 123",
| | S | | | | | |  2, False)}
| | S | | | | | |  
| | | | F | | | |  
| | | |   F | | |  
| | | |     F | |  
| F | |       | |  
| E | |       | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |       | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| E | |       | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| E | |       | |  = 6 , total_length = 24} , self = 88 , parent = Nothing , duration = 0.509395519000
| E | |       | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:23.334781721
| E | |       | |  UTC , finish = 2025-09-03 11:33:23.84417724 UTC , thread_cap_info = ("ThreadId
| E | |       | |  133", 2, False)}
| E | |       | |  
| | | |       | F  
| | S |       |    
| E   |       |    
|     S       |    
|             S    
E                  
