Input TRS:
    1: a(x1) -> x1
    2: a(a(x1)) -> a(b(c(b(a(x1)))))
    3: b(c(x1)) -> c(a(x1))
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing b
1: a(x1) -> x1
2: a(a(x1)) -> a(b❆1_c(b(a(x1))))
3: b❆1_c(x1) -> c(a(x1))
4: b(c(_1)) ->= b❆1_c(_1)
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #a(a(x1)) -> #a(b❆1_c(b(a(x1))))
   #2: #a(a(x1)) -> #b❆1_c(b(a(x1)))
   #3: #a(a(x1)) -> #b(a(x1))
   #4: #b❆1_c(x1) -> #a(x1)
   #5: #b(c(_1)) ->? #b❆1_c(_1)
Number of SCCs: 1, DPs: 4, edges: 5
	SCC { #2..5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... succeeded.
     a(x1)	weight: max{0, (/ 3 4) + x1_2}; 0
     b(x1)	weight: (max (- (/ 3 4)) 0); (- (/ 1 2))
     c(x1)	weight: (max (- (/ 1 4)) 0); (- (/ 1 2))
#b❆1_c(x1)	weight: max{0, (/ 1 4) + x1_2}; 0
b❆1_c(x1)	weight: (max (- (/ 1 2)) 0); (- (/ 1 2))
   #a(x1)	weight: max{0, (/ 1 4) + x1_2}; 0
   #b(x1)	weight: (max (/ 1 4) 0); 0
    Usable rules: { 3 4 }
    Removed DPs: #2
Number of SCCs: 1, DPs: 3, edges: 3
	SCC { #3..5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
