last 8550 length 67386
CNF 8550 vars 67386 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 61 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b] -> [ a , a , b , a , a , b , a , b , a , b , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, b, a, b, a, b, a] -> [ a , a , b , a , a , b , a , b , a , b ] {- Dropped 0 2 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 61 states

   property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a] -> [ a , a , b , a , a , b , a , b , a , b ] {- Dropped 0 2 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 61 states

**************************************************
skeleton: \Drop{0}{2}(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.851925826000
  min duration 3.851925826000
  total durat. 3.851925826000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 92}
    , self = 93
    , parent = Nothing
    , duration = 3.851925826000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.384199491 UTC
    , finish = 2025-09-03 12:37:15.236125317 UTC
    , thread_cap_info = ("ThreadId 93", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.940002111000
  min duration 3.940002111000
  total durat. 3.940002111000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 92}
    , self = 95
    , parent = Nothing
    , duration = 3.940002111000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.394119063 UTC
    , finish = 2025-09-03 12:37:15.334121174 UTC
    , thread_cap_info = ("ThreadId 95", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 2.468114152000
  min duration 0.328681136000
  total durat. 8.240922284000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 67
    , parent = Nothing
    , duration = 1.161820689000
    , status = Fail
    , start = 2025-09-03 12:37:11.534234908 UTC
    , finish = 2025-09-03 12:37:12.696055597 UTC
    , thread_cap_info = ("ThreadId 132", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 72
    , parent = Nothing
    , duration = 1.507025306000
    , status = Fail
    , start = 2025-09-03 12:37:11.954207368 UTC
    , finish = 2025-09-03 12:37:13.461232674 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 75
    , parent = Nothing
    , duration = 1.891290825000
    , status = Fail
    , start = 2025-09-03 12:37:11.974120316 UTC
    , finish = 2025-09-03 12:37:13.865411141 UTC
    , thread_cap_info = ("ThreadId 172", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 81
    , parent = Nothing
    , duration = 2.468114152000
    , status = Fail
    , start = 2025-09-03 12:37:11.854141146 UTC
    , finish = 2025-09-03 12:37:14.322255298 UTC
    , thread_cap_info = ("ThreadId 159", 1, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 0.817288127000
  min duration 0.360068613000
  total durat. 1.537861379000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 3.120042129000
  min duration 1.340018209000
  total durat. 11.940991610000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 86
    , parent = Nothing
    , duration = 1.340018209000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:13.334118551 UTC
    , finish = 2025-09-03 12:37:14.67413676 UTC
    , thread_cap_info = ("ThreadId 188", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 15}
    , self = 87
    , parent = Nothing
    , duration = 2.259497647000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.414662883 UTC
    , finish = 2025-09-03 12:37:14.67416053 UTC
    , thread_cap_info = ("ThreadId 180", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 92
    , parent = Nothing
    , duration = 2.560941309000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.574108087 UTC
    , finish = 2025-09-03 12:37:15.135049396 UTC
    , thread_cap_info = ("ThreadId 183", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 83
    , parent = Nothing
    , duration = 2.660492316000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.794476961 UTC
    , finish = 2025-09-03 12:37:14.454969277 UTC
    , thread_cap_info = ("ThreadId 157", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 96
    , parent = Nothing
    , duration = 3.120042129000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.21411173 UTC
    , finish = 2025-09-03 12:37:15.334153859 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 6
  max duration 2.840037992000
  min duration 1.679407326000
  total durat. 13.295608239000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 15}
    , self = 78
    , parent = Nothing
    , duration = 1.679407326000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.394724779 UTC
    , finish = 2025-09-03 12:37:14.074132105 UTC
    , thread_cap_info = ("ThreadId 179", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 77
    , parent = Nothing
    , duration = 1.699886140000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.354648141 UTC
    , finish = 2025-09-03 12:37:14.054534281 UTC
    , thread_cap_info = ("ThreadId 177", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 74
    , parent = Nothing
    , duration = 1.839340266000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.774792808 UTC
    , finish = 2025-09-03 12:37:13.614133074 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 94
    , parent = Nothing
    , duration = 2.479149421000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.814975028 UTC
    , finish = 2025-09-03 12:37:15.294124449 UTC
    , thread_cap_info = ("ThreadId 186", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 82
    , parent = Nothing
    , duration = 2.757787094000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.695058016 UTC
    , finish = 2025-09-03 12:37:14.45284511 UTC
    , thread_cap_info = ("ThreadId 151", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 88
    , parent = Nothing
    , duration = 2.840037992000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:12.194110457 UTC
    , finish = 2025-09-03 12:37:15.034148449 UTC
    , thread_cap_info = ("ThreadId 175", 1, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 7
  max duration 4.158772061000
  min duration 1.257175040000
  total durat. 18.241514181000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 66
    , parent = Nothing
    , duration = 1.257175040000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.357070503 UTC
    , finish = 2025-09-03 12:37:12.614245543 UTC
    , thread_cap_info = ("ThreadId 78", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 70
    , parent = Nothing
    , duration = 1.827864370000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.48630881 UTC
    , finish = 2025-09-03 12:37:13.31417318 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 15}
    , self = 71
    , parent = Nothing
    , duration = 1.859996664000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.494126415 UTC
    , finish = 2025-09-03 12:37:13.354123079 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 76
    , parent = Nothing
    , duration = 2.579956792000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.334183816 UTC
    , finish = 2025-09-03 12:37:13.914140608 UTC
    , thread_cap_info = ("ThreadId 74", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 84
    , parent = Nothing
    , duration = 2.997735693000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.45726513 UTC
    , finish = 2025-09-03 12:37:14.455000823 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 89
    , parent = Nothing
    , duration = 3.560013561000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.494133738 UTC
    , finish = 2025-09-03 12:37:15.054147299 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 97
    , parent = Nothing
    , duration = 4.158772061000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:11.195361299 UTC
    , finish = 2025-09-03 12:37:15.35413336 UTC
    , thread_cap_info = ("ThreadId 22", 1, False)}
**************************************************
E                                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E                                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                                                  = 21} , self = 97 , parent = Nothing , duration = 4.158772061000 , status
E                                                  = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.195361299 UTC ,
E                                                  finish = 2025-09-03 12:37:15.35413336 UTC , thread_cap_info = ("ThreadId
E                                                  22", 1, False)}
E                                                  
| F                                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                                                = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F                                                = 0 , alphabet_size = 4 , total_length = 92} , self = 43 , parent = Nothing
| F                                                , duration = 0.328681136000 , status = Fail , start = 2025-09-03 12:37:11.213656932
| F                                                UTC , finish = 2025-09-03 12:37:11.542338068 UTC , thread_cap_info = ("ThreadId
| F                                                47", 3, False)}
| F                                                
| | E                                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | E                                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | E                                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | E                                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | E                                              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                                              = 19} , self = 76 , parent = Nothing , duration = 2.579956792000 , status
| | E                                              = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.334183816 UTC ,
| | E                                              finish = 2025-09-03 12:37:13.914140608 UTC , thread_cap_info = ("ThreadId
| | E                                              74", 1, False)}
| | E                                              
| | | E                                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E                                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E                                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E                                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E                                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E                                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                                            = 17} , self = 66 , parent = Nothing , duration = 1.257175040000 , status
| | | E                                            = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.357070503 UTC ,
| | | E                                            finish = 2025-09-03 12:37:12.614245543 UTC , thread_cap_info = ("ThreadId
| | | E                                            78", 1, False)}
| | | E                                            
| | | | E                                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E                                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E                                          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | E                                          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | E                                          = 92} , self = 93 , parent = Nothing , duration = 3.851925826000 , status
| | | | E                                          = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.384199491 UTC ,
| | | | E                                          finish = 2025-09-03 12:37:15.236125317 UTC , thread_cap_info = ("ThreadId
| | | | E                                          93", 1, False)}
| | | | E                                          
| | | | | E                                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E                                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E                                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | E                                        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | E                                        = 92} , self = 95 , parent = Nothing , duration = 3.940002111000 , status
| | | | | E                                        = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.394119063 UTC ,
| | | | | E                                        finish = 2025-09-03 12:37:15.334121174 UTC , thread_cap_info = ("ThreadId
| | | | | E                                        95", 1, False)}
| | | | | E                                        
| | | | | | E                                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | E                                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | E                                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | E                                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | E                                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E                                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E                                      = 19} , self = 84 , parent = Nothing , duration = 2.997735693000 , status
| | | | | | E                                      = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.45726513 UTC ,
| | | | | | E                                      finish = 2025-09-03 12:37:14.455000823 UTC , thread_cap_info = ("ThreadId
| | | | | | E                                      106", 1, False)}
| | | | | | E                                      
| | | | | | | E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | E                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E                                    = 17} , self = 70 , parent = Nothing , duration = 1.827864370000 , status
| | | | | | | E                                    = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.48630881 UTC ,
| | | | | | | E                                    finish = 2025-09-03 12:37:13.31417318 UTC , thread_cap_info = ("ThreadId
| | | | | | | E                                    114", 1, False)}
| | | | | | | E                                    
| | | | | | | | E                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | E                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | E                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | E                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | E                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E                                  = 15} , self = 71 , parent = Nothing , duration = 1.859996664000 , status
| | | | | | | | E                                  = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.494126415 UTC ,
| | | | | | | | E                                  finish = 2025-09-03 12:37:13.354123079 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E                                  118", 1, False)}
| | | | | | | | E                                  
| | | | | | | | | E                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                                = 21} , self = 89 , parent = Nothing , duration = 3.560013561000 , status
| | | | | | | | | E                                = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.494133738 UTC ,
| | | | | | | | | E                                finish = 2025-09-03 12:37:15.054147299 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                                126", 1, False)}
| | | | | | | | | E                                
| | | | | | | | | | F                              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | F                              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | F                              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | F                              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | F                              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | F                              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | F                              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | F                              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | F                              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | F                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | F                              = 19} , self = 50 , parent = Nothing , duration = 0.179999719000 , status
| | | | | | | | | | F                              = Fail , start = 2025-09-03 12:37:11.534148834 UTC , finish = 2025-09-03
| | | | | | | | | | F                              12:37:11.714148553 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | | | | | | | | F                              
| | | | | | | | | | | F                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F                            = 0 , alphabet_size = 2 , total_length = 19} , self = 67 , parent = Nothing
| | | | | | | | | | | F                            , duration = 1.161820689000 , status = Fail , start = 2025-09-03 12:37:11.534234908
| | | | | | | | | | | F                            UTC , finish = 2025-09-03 12:37:12.696055597 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F                            132", 1, False)}
| | | | | | | | | | | F                            
| F | | | | | | | | | |                            
| E | | | | | | | | | |                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | | | |                            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | | | |                            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | | | |                            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | | | |                            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | | | |                            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | | | |                            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | | | |                            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | | | |                            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | | | | |                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | | | |                            = 19} , self = 82 , parent = Nothing , duration = 2.757787094000 , status
| E | | | | | | | | | |                            = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.695058016 UTC ,
| E | | | | | | | | | |                            finish = 2025-09-03 12:37:14.45284511 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | | |                            151", 1, False)}
| E | | | | | | | | | |                            
| | | | | | | | | | F |                            
| | | | | | | | | | F |                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F |                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F |                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F |                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F |                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F |                            = 0 , alphabet_size = 2 , total_length = 19} , self = 65 , parent = Nothing
| | | | | | | | | | F |                            , duration = 0.883990176000 , status = Fail , start = 2025-09-03 12:37:11.714158422
| | | | | | | | | | F |                            UTC , finish = 2025-09-03 12:37:12.598148598 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F |                            152", 1, False)}
| | | | | | | | | | F |                            
| | | | | | | | | | | | E                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E                          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E                          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E                          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E                          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E                          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E                          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E                          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E                          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E                          = 17} , self = 74 , parent = Nothing , duration = 1.839340266000 , status
| | | | | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.774792808 UTC ,
| | | | | | | | | | | | E                          finish = 2025-09-03 12:37:13.614133074 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                          156", 1, False)}
| | | | | | | | | | | | E                          
| | | | | | | | | | | | | E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E                        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E                        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E                        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E                        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E                        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E                        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E                        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E                        = 17} , self = 83 , parent = Nothing , duration = 2.660492316000 , status
| | | | | | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:37:11.794476961 UTC ,
| | | | | | | | | | | | | E                        finish = 2025-09-03 12:37:14.454969277 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E                        157", 1, False)}
| | | | | | | | | | | | | E                        
| | | | | | | | | | | | | | E                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | E                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | E                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | E                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | E                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | E                      = 0 , alphabet_size = 2 , total_length = 17} , self = 60 , parent = Nothing
| | | | | | | | | | | | | | E                      , duration = 0.360068613000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | E                      = 2025-09-03 12:37:11.814110049 UTC , finish = 2025-09-03 12:37:12.174178662
| | | | | | | | | | | | | | E                      UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | | | | | | | | | | | | | E                      
| | | | | | | | | | | | | | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | F                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | F                    = 0 , alphabet_size = 2 , total_length = 19} , self = 81 , parent = Nothing
| | | | | | | | | | | | | | | F                    , duration = 2.468114152000 , status = Fail , start = 2025-09-03 12:37:11.854141146
| | | | | | | | | | | | | | | F                    UTC , finish = 2025-09-03 12:37:14.322255298 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | F                    159", 1, False)}
| | | | | | | | | | | | | | | F                    
| | | | | | | | | | | | | | | | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | | | | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | | | | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | | | | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | | | | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | | | | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | F                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | F                  = 17} , self = 61 , parent = Nothing , duration = 0.440437480000 , status
| | | | | | | | | | | | | | | | F                  = Fail , start = 2025-09-03 12:37:11.934122009 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | | F                  12:37:12.374559489 UTC , thread_cap_info = ("ThreadId 161", 1, False)}
| | | | | | | | | | | | | | | | F                  
| | | | | | | | | | | | | | | | | E                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | E                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | E                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | E                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | E                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | E                = 0 , alphabet_size = 2 , total_length = 17} , self = 68 , parent = Nothing
| | | | | | | | | | | | | | | | | E                , duration = 0.817288127000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | | | | E                = 2025-09-03 12:37:11.936962961 UTC , finish = 2025-09-03 12:37:12.754251088
| | | | | | | | | | | | | | | | | E                UTC , thread_cap_info = ("ThreadId 164", 1, False)}
| | | | | | | | | | | | | | | | | E                
| | | | | | | | | | | | | | | | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | F              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | F              = 0 , alphabet_size = 2 , total_length = 21} , self = 72 , parent = Nothing
| | | | | | | | | | | | | | | | | | F              , duration = 1.507025306000 , status = Fail , start = 2025-09-03 12:37:11.954207368
| | | | | | | | | | | | | | | | | | F              UTC , finish = 2025-09-03 12:37:13.461232674 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | F              170", 1, False)}
| | | | | | | | | | | | | | | | | | F              
| | | | | | | | | | | | | | | | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | F            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | F            = 0 , alphabet_size = 2 , total_length = 21} , self = 75 , parent = Nothing
| | | | | | | | | | | | | | | | | | | F            , duration = 1.891290825000 , status = Fail , start = 2025-09-03 12:37:11.974120316
| | | | | | | | | | | | | | | | | | | F            UTC , finish = 2025-09-03 12:37:13.865411141 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | F            172", 1, False)}
| | | | | | | | | | | | | | | | | | | F            
| | | | | | | | | | | | | | E | | | | |            
| | | | | | | | | | | | | | E | | | | |            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E | | | | |            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E | | | | |            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E | | | | |            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E | | | | |            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E | | | | |            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E | | | | |            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E | | | | |            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E | | | | |            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E | | | | |            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E | | | | |            = 19} , self = 88 , parent = Nothing , duration = 2.840037992000 , status
| | | | | | | | | | | | | | E | | | | |            = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.194110457 UTC ,
| | | | | | | | | | | | | | E | | | | |            finish = 2025-09-03 12:37:15.034148449 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E | | | | |            175", 1, False)}
| | | | | | | | | | | | | | E | | | | |            
| | | | | | | | | | | | | | | | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | E          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E          = 19} , self = 96 , parent = Nothing , duration = 3.120042129000 , status
| | | | | | | | | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.21411173 UTC ,
| | | | | | | | | | | | | | | | | | | | E          finish = 2025-09-03 12:37:15.334153859 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E          176", 1, False)}
| | | | | | | | | | | | | | | | | | | | E          
| | | | | | | | | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | E        = 17} , self = 77 , parent = Nothing , duration = 1.699886140000 , status
| | | | | | | | | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.354648141 UTC ,
| | | | | | | | | | | | | | | | | | | | | E        finish = 2025-09-03 12:37:14.054534281 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | E        177", 1, False)}
| | | | | | | | | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | | F | | | | |        
| | | | | | | | | | | | | | | | E | | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E | | | | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E | | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E | | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E | | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E | | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E | | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E | | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E | | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E | | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E | | | | |        = 15} , self = 78 , parent = Nothing , duration = 1.679407326000 , status
| | | | | | | | | | | | | | | | E | | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.394724779 UTC ,
| | | | | | | | | | | | | | | | E | | | | |        finish = 2025-09-03 12:37:14.074132105 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E | | | | |        179", 1, False)}
| | | | | | | | | | | | | | | | E | | | | |        
| | | | | | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | E      = 15} , self = 87 , parent = Nothing , duration = 2.259497647000 , status
| | | | | | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.414662883 UTC ,
| | | | | | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 12:37:14.67416053 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | E      180", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | | | | | | | | E    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | | | E    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | | | E    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | | | E    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | | | E    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | | | E    = 0 , alphabet_size = 2 , total_length = 15} , self = 69 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | | | E    , duration = 0.360504639000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | | | | | | | | | | E    = 2025-09-03 12:37:12.434110797 UTC , finish = 2025-09-03 12:37:12.794615436
| | | | | | | | | | | | | | | | | | | | | | | E    UTC , thread_cap_info = ("ThreadId 166", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | | E  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | | E  = 19} , self = 92 , parent = Nothing , duration = 2.560941309000 , status
| | | | | | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.574108087 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:37:15.135049396 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | E  183", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | | | E  
| | | | | | | | | | F | | | | | | | | | | | | | |  
| | | E | | | | | |   | | | | | | | | | | | | | |  
| | |   | | | | | |   F | | | | | | | | | | | | |  
| | |   | | | | | |     | | | | | E | | | | | | |  
| | |   | | | | | |     | | | | |   | | | | | E |  
| | | E | | | | | |     | | | | |   | | | | |   |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E | | | | | |     | | | | |   | | | | |   |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E | | | | | |     | | | | |   | | | | |   |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E | | | | | |     | | | | |   | | | | |   |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E | | | | | |     | | | | |   | | | | |   |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E | | | | | |     | | | | |   | | | | |   |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E | | | | | |     | | | | |   | | | | |   |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E | | | | | |     | | | | |   | | | | |   |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E | | | | | |     | | | | |   | | | | |   |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | | | | | |     | | | | |   | | | | |   |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | | | | | |     | | | | |   | | | | |   |  = 21} , self = 94 , parent = Nothing , duration = 2.479149421000 , status
| | | E | | | | | |     | | | | |   | | | | |   |  = Except "AsyncCancelled" , start = 2025-09-03 12:37:12.814975028 UTC ,
| | | E | | | | | |     | | | | |   | | | | |   |  finish = 2025-09-03 12:37:15.294124449 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | |     | | | | |   | | | | |   |  186", 1, False)}
| | | E | | | | | |     | | | | |   | | | | |   |  
| | | | | | | E | |     | | | | |   | | | | |   |  
| | | | | | | E | |     | | | | |   | | | | |   |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | E | |     | | | | |   | | | | |   |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | E | |     | | | | |   | | | | |   |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | E | |     | | | | |   | | | | |   |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | E | |     | | | | |   | | | | |   |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | E | |     | | | | |   | | | | |   |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | E | |     | | | | |   | | | | |   |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | E | |     | | | | |   | | | | |   |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | E | |     | | | | |   | | | | |   |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E | |     | | | | |   | | | | |   |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E | |     | | | | |   | | | | |   |  = 17} , self = 86 , parent = Nothing , duration = 1.340018209000 , status
| | | | | | | E | |     | | | | |   | | | | |   |  = Except "AsyncCancelled" , start = 2025-09-03 12:37:13.334118551 UTC ,
| | | | | | | E | |     | | | | |   | | | | |   |  finish = 2025-09-03 12:37:14.67413676 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |     | | | | |   | | | | |   |  188", 1, False)}
| | | | | | | E | |     | | | | |   | | | | |   |  
| | | | | | | | E |     | | | | |   | | | | |   |  
| | | | | | | |   |     | | | | |   F | | | |   |  
| | | | | | | |   |     E | | | |     | | | |   |  
| | | | | | | |   |       | | | |     F | | |   |  
| | E | | | | |   |       | | | |       | | |   |  
| |   | | | | |   |       | | | |       | E |   |  
| |   | | | | |   |       | | | E       |   |   |  
| |   | | | | |   |       | | F         |   |   |  
| E   | | | | |   |       | |           |   |   |  
|     | | | | |   |       E |           |   |   |  
|     | | | E |   |         |           |   |   |  
|     | | |   E   |         |           |   |   |  
|     | | |       |         |           |   E   |  
|     | | |       |         E           |       |  
|     | | |       E                     |       |  
|     | | |                             |       E  
|     | E |                             |          
|     E   |                             |          
|         E                             |          
|                                       E          
E                                                  
