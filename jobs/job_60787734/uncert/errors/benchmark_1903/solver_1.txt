last 1460 length 7560
CNF 1460 vars 7560 clauses
last 1734 length 10922
CNF 1734 vars 10922 clauses
last 1339 length 6208
CNF 1339 vars 6208 clauses
last 1097 length 4866
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2960, clauses: 10554
CNF 1097 vars 4866 clauses
last 19056 length 118026
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2761, clauses: 9967
last 2960 length 10554
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9700, clauses: 40291
last 25840 length 201130
last 2761 length 9967
CNF 19056 vars 118026 clauses
CNF 2960 vars 10554 clauses
last 9700 length 40291
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9360, clauses: 38885
CNF 2761 vars 9967 clauses
CNF 9700 vars 40291 clauses
last 9360 length 38885
CNF 9360 vars 38885 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9700, clauses: 40291, status: Satisfied, time: 0.186548089s
CNF 25840 vars 201130 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 1436 length 7468
CNF 1436 vars 7468 clauses
last 1703 length 10803
CNF 1703 vars 10803 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2761, clauses: 9817
last 2761 length 9817
CNF 2761 vars 9817 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9362, clauses: 38881
last 9362 length 38881
CNF 9362 vars 38881 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2761, clauses: 9967, status: Unsatisfied, time: 2.664714632s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9362, clauses: 38881, status: Satisfied, time: 0.815254877s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5630, clauses: 22753
last 5630 length 22753
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 5630 vars 22753 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 4 letters       DP
SRS with 11 strict rules and 4 weak rules on 7 letters       weights
SRS with 3 strict rules and 4 weak rules on 6 letters       EDG
SRS with 3 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 4 weak rules on 6 letters       EDG
SRS with 2 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 6 letters       weights
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, l] -> [l, a] {- Input 0 -}
  [a, c] -> [c, a] {- Input 1 -}
  [c, a, r] -> [r, a] {- Input 2 -}
  [l, r, a, a] -> [a, a, l, c, c, c, r] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
  [a#, l] |-> [a#] {- DP (Top 1) (Input 0) -}
  [a#, l] |-> [l#, a] {- DP (Top 0) (Input 0) -}
  [a#, c] |-> [a#] {- DP (Top 1) (Input 1) -}
  [a#, c] |-> [c#, a] {- DP (Top 0) (Input 1) -}
  [l#, r, a, a] |-> [a#, a, l, c, c, c, r] {- DP (Top 0) (Input 3) -}
  [l#, r, a, a] |-> [a#, l, c, c, c, r] {- DP (Top 1) (Input 3) -}
  [l#, r, a, a] |-> [l#, c, c, c, r] {- DP (Top 2) (Input 3) -}
  [l#, r, a, a] |-> [c#, r] {- DP (Top 5) (Input 3) -}
  [l#, r, a, a] |-> [c#, c, r] {- DP (Top 4) (Input 3) -}
  [l#, r, a, a] |-> [c#, c, c, r] {- DP (Top 3) (Input 3) -}
  [c#, a, r] |-> [a#] {- DP (Top 1) (Input 2) -}
reason
  (a, 1/1)
  (l, 1/1)
  (r, 2/1)
  (c, 0/1)
  (a#, 2/1)
  (l#, 2/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
  [a#, l] |-> [l#, a] {- DP (Top 0) (Input 0) -}
  [a#, c] |-> [a#] {- DP (Top 1) (Input 1) -}
  [l#, r, a, a] |-> [a#, a, l, c, c, c, r] {- DP (Top 0) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, l] |-> [l#, a] {- DP (Top 0) (Input 0) -}
  [l#, r, a, a] |-> [a#, a, l, c, c, c, r] {- DP (Top 0) (Input 3) -}
  [a#, c] |-> [a#] {- DP (Top 1) (Input 1) -}
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 0A  1A \
        | -  -1A -  |
        \ -  -   0A / )
  ( l
  , Wk  / - 0A 1A \
        | - -  -  |
        \ - -  0A / )
  ( r
  , Wk  / 1A 1A 0A \
        | -  -  -  |
        \ -  -  0A / )
  ( c
  , Wk  / 1A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( a#
  , Wk  / 0A -3A -2A \
        | -  -   -   |
        \ -  -   0A  / )
  ( l#
  , Wk  / - -2A 1A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [a#, l] |-> [l#, a] {- DP (Top 0) (Input 0) -}
  [l#, r, a, a] |-> [a#, a, l, c, c, c, r] {- DP (Top 0) (Input 3) -}
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, l] |-> [l#, a] {- DP (Top 0) (Input 0) -}
  [l#, r, a, a] |-> [a#, a, l, c, c, c, r] {- DP (Top 0) (Input 3) -}
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / - 2A 0A \
        | - 1A -  |
        \ - -  0A / )
  ( l
  , Wk  / - 1A 0A \
        | - 0A -  |
        \ - -  0A / )
  ( r
  , Wk  / - - 0A \
        | - - 1A |
        \ - - 0A / )
  ( c
  , Wk  / - -   0A \
        | - -1A -  |
        \ - -   0A / )
  ( a#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( l#
  , Wk  / -2A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [a#, l] |-> [l#, a] {- DP (Top 0) (Input 0) -}
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
reason
  (a, 0/1)
  (l, 1/1)
  (r, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (l#, 0/1)
   property Termination
has value Just True
for SRS
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, a, r] ->= [r, a] {- DP Nontop (Input 2) -}
  [l, r, a, a] ->= [a, a, l, c, c, c, r] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,4)\Deepee(11/4,7)\Weight\EDG(3/4,6)\Matrix{\ArcticBZ}{3}\EDG(2/4,6)\Matrix{\ArcticBZ}{3}(1/4,6)\Weight(0/4,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.362305604000
  min duration 0.069671405000
  total durat. 2.225935662000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 64
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 512}
    , self = 86
    , parent = Nothing
    , duration = 1.362305604000
    , status = Fail
    , start = 2025-09-03 13:34:01.54990825 UTC
    , finish = 2025-09-03 13:34:02.912213854 UTC
    , thread_cap_info = ("ThreadId 56", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.091007538000
  min duration 3.036625071000
  total durat. 6.127632609000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 64
      , alphabet_size = 18
      , total_length = 592}
    , self = 95
    , parent = Nothing
    , duration = 3.036625071000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:34:02.765202222 UTC
    , finish = 2025-09-03 13:34:05.801827293 UTC
    , thread_cap_info = ("ThreadId 127", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 64
      , alphabet_size = 18
      , total_length = 582}
    , self = 97
    , parent = Nothing
    , duration = 3.091007538000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:34:02.715231737 UTC
    , finish = 2025-09-03 13:34:05.806239275 UTC
    , thread_cap_info = ("ThreadId 123", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.178171281000
  min duration 0.063637733000
  total durat. 1.854494570000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 64
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 512}
    , self = 79
    , parent = Nothing
    , duration = 1.178171281000
    , status = Fail
    , start = 2025-09-03 13:34:01.549916296 UTC
    , finish = 2025-09-03 13:34:02.728087577 UTC
    , thread_cap_info = ("ThreadId 58", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.075794017000
  min duration 3.016711105000
  total durat. 6.092505122000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 64
      , alphabet_size = 18
      , total_length = 592}
    , self = 98
    , parent = Nothing
    , duration = 3.016711105000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:34:02.789618735 UTC
    , finish = 2025-09-03 13:34:05.80632984 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 64
      , alphabet_size = 18
      , total_length = 582}
    , self = 94
    , parent = Nothing
    , duration = 3.075794017000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:34:02.726022435 UTC
    , finish = 2025-09-03 13:34:05.801816452 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.743636237000
  min duration 0.075445098000
  total durat. 1.323685019000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.805060185000
  min duration 0.573684594000
  total durat. 2.378744779000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 39}
    , self = 92
    , parent = Nothing
    , duration = 1.805060185000
    , status = Success
    , start = 2025-09-03 13:34:03.524508789 UTC
    , finish = 2025-09-03 13:34:05.329568974 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.984256163000
  min duration 0.718044374000
  total durat. 6.100402693000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 39}
    , self = 96
    , parent = Nothing
    , duration = 2.398102156000
    , status = Fail
    , start = 2025-09-03 13:34:03.408130631 UTC
    , finish = 2025-09-03 13:34:05.806232787 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 40}
    , self = 91
    , parent = Nothing
    , duration = 2.984256163000
    , status = Fail
    , start = 2025-09-03 13:34:02.057940979 UTC
    , finish = 2025-09-03 13:34:05.042197142 UTC
    , thread_cap_info = ("ThreadId 102", 1, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                = 24} , self = 65 , parent = Nothing , duration = 0.851933312000 , status
F                = Fail , start = 2025-09-03 13:34:01.535011467 UTC , finish = 2025-09-03
F                13:34:02.386944779 UTC , thread_cap_info = ("ThreadId 43", 1, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| F              = 64 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| F              = 512} , self = 86 , parent = Nothing , duration = 1.362305604000 , status
| F              = Fail , start = 2025-09-03 13:34:01.54990825 UTC , finish = 2025-09-03
| F              13:34:02.912213854 UTC , thread_cap_info = ("ThreadId 56", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | F            = 64 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | F            = 512} , self = 79 , parent = Nothing , duration = 1.178171281000 , status
| | F            = Fail , start = 2025-09-03 13:34:01.549916296 UTC , finish = 2025-09-03
| | F            13:34:02.728087577 UTC , thread_cap_info = ("ThreadId 58", 0, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 64 , num_strict_rules = 64 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 16 , total_length = 512} , self = 63 , parent = Nothing
| | | F          , duration = 0.429086093000 , status = Fail , start = 2025-09-03 13:34:01.651463286
| | | F          UTC , finish = 2025-09-03 13:34:02.080549379 UTC , thread_cap_info = ("ThreadId
| | | F          77", 2, False)}
| | | F          
| | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F        = Size { num_rules = 64 , num_strict_rules = 64 , num_top_rules = 0 , num_weak_rules
| | | | F        = 0 , alphabet_size = 16 , total_length = 512} , self = 66 , parent = Nothing
| | | | F        , duration = 0.743636237000 , status = Fail , start = 2025-09-03 13:34:01.664502408
| | | | F        UTC , finish = 2025-09-03 13:34:02.408138645 UTC , thread_cap_info = ("ThreadId
| | | | F        79", 2, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | F      = 42} , self = 62 , parent = Nothing , duration = 0.174644192000 , status
| | | | | F      = Fail , start = 2025-09-03 13:34:01.883279953 UTC , finish = 2025-09-03
| | | | | F      13:34:02.057924145 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | F    = 40} , self = 64 , parent = Nothing , duration = 0.404989777000 , status
| | | | | | F    = Fail , start = 2025-09-03 13:34:01.934194301 UTC , finish = 2025-09-03
| | | | | | F    13:34:02.339184078 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | F    
| | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F  = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | | | | | | F  = 6 , total_length = 42} , self = 80 , parent = Nothing , duration = 0.718044374000
| | | | | | | F  , status = Fail , start = 2025-09-03 13:34:02.025553665 UTC , finish =
| | | | | | | F  2025-09-03 13:34:02.743598039 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | F  1, False)}
| | | | | | | F  
| | | | | F | |  
| | | | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | |  = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | F | |  = 6 , total_length = 40} , self = 91 , parent = Nothing , duration = 2.984256163000
| | | | | F | |  , status = Fail , start = 2025-09-03 13:34:02.057940979 UTC , finish =
| | | | | F | |  2025-09-03 13:34:05.042197142 UTC , thread_cap_info = ("ThreadId 102",
| | | | | F | |  1, False)}
| | | | | F | |  
| | | F | | | |  
| | | S | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | | S | | | |  = 6 , total_length = 42} , self = 74 , parent = Nothing , duration = 0.573684594000
| | | S | | | |  , status = Success , start = 2025-09-03 13:34:02.100917556 UTC , finish
| | | S | | | |  = 2025-09-03 13:34:02.67460215 UTC , thread_cap_info = ("ThreadId 103",
| | | S | | | |  1, False)}
| | | S | | | |  
| | | | | | F |  
F | | | | |   |  
  | | | F |   |  
S | | |   |   |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | | |   |   |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | | |   |   |  = Size { num_rules = 336 , num_strict_rules = 272 , num_top_rules = 272
S | | |   |   |  , num_weak_rules = 64 , alphabet_size = 32 , total_length = 2496} , self
S | | |   |   |  = 77 , parent = Nothing , duration = 0.231287218000 , status = Success
S | | |   |   |  , start = 2025-09-03 13:34:02.472584563 UTC , finish = 2025-09-03 13:34:02.703871781
S | | |   |   |  UTC , thread_cap_info = ("ThreadId 117", 2, False)}
S | | |   |   |  
| | | | S |   |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | S |   |  verbose = False}" , input_size = Size { num_rules = 100 , num_strict_rules
| | | | S |   |  = 36 , num_top_rules = 36 , num_weak_rules = 64 , alphabet_size = 24 ,
| | | | S |   |  total_length = 836} , self = 73 , parent = Nothing , duration = 0.111275267000
| | | | S |   |  , status = Success , start = 2025-09-03 13:34:02.556645625 UTC , finish
| | | | S |   |  = 2025-09-03 13:34:02.667920892 UTC , thread_cap_info = ("ThreadId 110",
| | | | S |   |  2, False)}
| | | | S |   |  
| | | | S |   |  
| | | S   |   |  
S | |     |   |  
E | |     |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | |     |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | |     |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
E | |     |   |  = 7 , num_top_rules = 7 , num_weak_rules = 64 , alphabet_size = 18 , total_length
E | |     |   |  = 582} , self = 97 , parent = Nothing , duration = 3.091007538000 , status
E | |     |   |  = Except "<<timeout>>" , start = 2025-09-03 13:34:02.715231737 UTC , finish
E | |     |   |  = 2025-09-03 13:34:05.806239275 UTC , thread_cap_info = ("ThreadId 123",
E | |     |   |  1, False)}
E | |     |   |  
| | | E   |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E   |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | E   |   |  = 7 , num_top_rules = 7 , num_weak_rules = 64 , alphabet_size = 18 , total_length
| | | E   |   |  = 582} , self = 94 , parent = Nothing , duration = 3.075794017000 , status
| | | E   |   |  = Except "<<timeout>>" , start = 2025-09-03 13:34:02.726022435 UTC , finish
| | | E   |   |  = 2025-09-03 13:34:05.801816452 UTC , thread_cap_info = ("ThreadId 124",
| | | E   |   |  1, False)}
| | | E   |   |  
| | F |   |   |  
| |   |   |   F  
| | E |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | E |   |      = 8 , num_top_rules = 8 , num_weak_rules = 64 , alphabet_size = 18 , total_length
| | E |   |      = 592} , self = 95 , parent = Nothing , duration = 3.036625071000 , status
| | E |   |      = Except "<<timeout>>" , start = 2025-09-03 13:34:02.765202222 UTC , finish
| | E |   |      = 2025-09-03 13:34:05.801827293 UTC , thread_cap_info = ("ThreadId 127",
| | E |   |      2, False)}
| | E |   |      
| | | | E |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E |      = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | E |      = 8 , num_top_rules = 8 , num_weak_rules = 64 , alphabet_size = 18 , total_length
| | | | E |      = 592} , self = 98 , parent = Nothing , duration = 3.016711105000 , status
| | | | E |      = Except "<<timeout>>" , start = 2025-09-03 13:34:02.789618735 UTC , finish
| | | | E |      = 2025-09-03 13:34:05.80632984 UTC , thread_cap_info = ("ThreadId 128",
| | | | E |      2, False)}
| | | | E |      
| F | | | |      
| F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F | | | |      = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F | | | |      = 39} , self = 89 , parent = Nothing , duration = 0.388968876000 , status
| F | | | |      = Fail , start = 2025-09-03 13:34:02.984531856 UTC , finish = 2025-09-03
| F | | | |      13:34:03.373500732 UTC , thread_cap_info = ("ThreadId 133", 1, False)}
| F | | | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | F    = 39} , self = 90 , parent = Nothing , duration = 0.438041364000 , status
| | | | | | F    = Fail , start = 2025-09-03 13:34:03.008982818 UTC , finish = 2025-09-03
| | | | | | F    13:34:03.447024182 UTC , thread_cap_info = ("ThreadId 134", 1, False)}
| | | | | | F    
| F | | | | |    
| F | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | |    = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| F | | | | |    = 6 , total_length = 39} , self = 96 , parent = Nothing , duration = 2.398102156000
| F | | | | |    , status = Fail , start = 2025-09-03 13:34:03.408130631 UTC , finish =
| F | | | | |    2025-09-03 13:34:05.806232787 UTC , thread_cap_info = ("ThreadId 138",
| F | | | | |    1, False)}
| F | | | | |    
| | | | | | F    
| | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | S    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | S    = 6 , total_length = 39} , self = 92 , parent = Nothing , duration = 1.805060185000
| | | | | | S    , status = Success , start = 2025-09-03 13:34:03.524508789 UTC , finish
| | | | | | S    = 2025-09-03 13:34:05.329568974 UTC , thread_cap_info = ("ThreadId 139",
| | | | | | S    1, False)}
| | | | | | S    
| | | | | F |    
| | | | |   S    
| | | E |        
| | E   |        
| F     |        
E       |        
        E        
