last 2450 length 10714
CNF 2450 vars 10714 clauses
last 2856 length 12202
last 1173 length 4994
CNF 2856 vars 12202 clauses
last 954 length 4047
CNF 1173 vars 4994 clauses
CNF 954 vars 4047 clauses
last 1540 length 6496
last 1921 length 8197
CNF 1921 vars 8197 clauses
CNF 1540 vars 6496 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2062, clauses: 7579
last 2062 length 7579
CNF 2062 vars 7579 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7981, clauses: 33505
last 7981 length 33505
CNF 7981 vars 33505 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3121, clauses: 12004
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2062, clauses: 7579, status: Satisfied, time: 0.068842152s
last 3121 length 12004
CNF 3121 vars 12004 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10204, clauses: 42891
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3121, clauses: 12004, status: Satisfied, time: 0.097513332s
last 10204 length 42891
CNF 10204 vars 42891 clauses
last 1210 length 5108
last 1500 length 6466
CNF 1210 vars 5108 clauses
CNF 1500 vars 6466 clauses
last 4628 length 21775
CNF 4628 vars 21775 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2287, clauses: 8662
last 2287 length 8662
last 4122 length 19529
last 4515 length 20884
CNF 2287 vars 8662 clauses
last 4745 length 22373
last 1161 length 4927
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8321, clauses: 34975
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4542, clauses: 17009
last 1021 length 4362
CNF 4122 vars 19529 clauses
CNF 4515 vars 20884 clauses
CNF 4745 vars 22373 clauses
CNF 1161 vars 4927 clauses
last 8321 length 34975
last 4542 length 17009
CNF 1021 vars 4362 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2287, clauses: 8662, status: Unsatisfied, time: 0.188386857s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4431, clauses: 16802
CNF 4542 vars 17009 clauses
CNF 8321 vars 34975 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8044
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18021, clauses: 75969
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18315, clauses: 77239
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5079, clauses: 21214
last 4431 length 16802
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8567, clauses: 36019
last 2185 length 8044
last 18021 length 75969
last 18315 length 77239
last 5079 length 21214
CNF 4431 vars 16802 clauses
last 8567 length 36019
CNF 2185 vars 8044 clauses
CNF 5079 vars 21214 clauses
CNF 18021 vars 75969 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4431, clauses: 16802, status: Satisfied, time: 0.072035669s
CNF 18315 vars 77239 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4542, clauses: 17009, status: Satisfied, time: 0.567976796s
CNF 8567 vars 36019 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8044, status: Unsatisfied, time: 0.12676934s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8567, clauses: 36019, status: Satisfied, time: 0.477513046s
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 13 strict rules and 4 weak rules on 4 letters       weights
SRS with 2 strict rules and 4 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b] -> [b, a, b, a] {- Input 0 -}
  [a, a, b, b] -> [a, a, a, b] {- Input 1 -}
  [a, a, a, b] -> [b, b, a, b] {- Input 2 -}
  [b, b, b, a] -> [b, a, b, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
  [a#, a, a, b] |-> [a#] {- DP (Top 3) (Input 0) -}
  [a#, a, a, b] |-> [a#, b, a] {- DP (Top 1) (Input 0) -}
  [a#, a, a, b] |-> [b#, a] {- DP (Top 2) (Input 0) -}
  [a#, a, a, b] |-> [b#, a, b] {- DP (Top 1) (Input 2) -}
  [a#, a, a, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a, b] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
  [a#, a, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, a, b, b] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [a#, a, b, b] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, a] |-> [a#, b, b] {- DP (Top 1) (Input 3) -}
  [b#, b, b, a] |-> [b#] {- DP (Top 3) (Input 3) -}
  [b#, b, b, a] |-> [b#, a, b, b] {- DP (Top 0) (Input 3) -}
  [b#, b, b, a] |-> [b#, b] {- DP (Top 2) (Input 3) -}
reason
  (a, 2/1)
  (b, 2/1)
  (a#, 2/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
  [a#, a, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [b#, b, b, a] |-> [b#, a, b, b] {- DP (Top 0) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 13A 15A 16A - \
        | 13A 15A 16A - |
        | 13A 15A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, b, b, a] |-> [b#, a, b, b] {- DP (Top 0) (Input 3) -}
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A -2A 1A \
        | 1A -   1A |
        \ -  -   0A / )
  ( b
  , Wk  / - -  0A \
        | - 0A 2A |
        \ - -  0A / )
  ( b#
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee(13/4,4)\Weight(2/4,4)\EDG[(1/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[],(1/4,3)\Matrix{\ArcticBZ}{3}(0/4,2)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 3368 length 14574

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.420207435000
  min duration 0.043376776000
  total durat. 1.266492589000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.382812092000
  min duration 0.035452552000
  total durat. 1.459650601000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.856753031000
  min duration 0.216602100000
  total durat. 2.082493254000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.746331432000
  min duration 0.195820956000
  total durat. 1.710134402000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.524519927000
  min duration 0.507540276000
  total durat. 1.032060203000
**************************************************
CNF 3368 vars 14574 clauses
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = False}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                = 32} , self = 67 , parent = Nothing , duration = 0.265571006000 , status
F                = Fail , start = 2025-09-03 12:17:40.610068254 UTC , finish = 2025-09-03
F                12:17:40.87563926 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                
| F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F              = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F              = 32} , self = 83 , parent = Nothing , duration = 0.388555834000 , status
| F              = Fail , start = 2025-09-03 12:17:40.610127263 UTC , finish = 2025-09-03
| F              12:17:40.998683097 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 9 , num_strict_rules = 9 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 4 , total_length = 90} , self = 68 , parent = Nothing
| | F            , duration = 0.265519002000 , status = Fail , start = 2025-09-03 12:17:40.616605833
| | F            UTC , finish = 2025-09-03 12:17:40.882124835 UTC , thread_cap_info = ("ThreadId
| | F            62", 2, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 9 , num_strict_rules = 9 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 4 , total_length = 90} , self = 63 , parent = Nothing
| | | F          , duration = 0.203291607000 , status = Fail , start = 2025-09-03 12:17:40.616608322
| | | F          UTC , finish = 2025-09-03 12:17:40.819899929 UTC , thread_cap_info = ("ThreadId
| | | F          64", 2, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F        = 9 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F        = 90} , self = 57 , parent = Nothing , duration = 0.114495115000 , status
| | | | F        = Fail , start = 2025-09-03 12:17:40.621243617 UTC , finish = 2025-09-03
| | | | F        12:17:40.735738732 UTC , thread_cap_info = ("ThreadId 72", 3, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F      = 64} , self = 65 , parent = Nothing , duration = 0.136771141000 , status
| | | | | F      = Fail , start = 2025-09-03 12:17:40.695367798 UTC , finish = 2025-09-03
| | | | | F      12:17:40.832138939 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F    = 64} , self = 66 , parent = Nothing , duration = 0.140513328000 , status
| | | | | | F    = Fail , start = 2025-09-03 12:17:40.715357563 UTC , finish = 2025-09-03
| | | | | | F    12:17:40.855870891 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| | | | | | F    
| | | | F | |    
| | | | S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |    = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | S | |    = 3 , total_length = 40} , self = 82 , parent = Nothing , duration = 0.224389442000
| | | | S | |    , status = Success , start = 2025-09-03 12:17:40.760422858 UTC , finish
| | | | S | |    = 2025-09-03 12:17:40.9848123 UTC , thread_cap_info = ("ThreadId 102",
| | | | S | |    1, False)}
| | | | S | |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | E  = 3 , total_length = 40} , self = 94 , parent = Nothing , duration = 0.350603794000
| | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:40.775642372
| | | | | | | E  UTC , finish = 2025-09-03 12:17:41.126246166 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  105", 1, False)}
| | | | | | | E  
| | | F | | | |  
| | |   | F | |  
| | | S |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |   | |  = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | S |   | |  = 4 , total_length = 64} , self = 85 , parent = Nothing , duration = 0.195820956000
| | | S |   | |  , status = Success , start = 2025-09-03 12:17:40.832208542 UTC , finish
| | | S |   | |  = 2025-09-03 12:17:41.028029498 UTC , thread_cap_info = ("ThreadId 109",
| | | S |   | |  1, False)}
| | | S |   | |  
| | | | |   F |  
| | | | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | E   |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | E   |  = 4 , total_length = 64} , self = 87 , parent = Nothing , duration = 0.216602100000
| | | | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:40.863720951
| | | | | E   |  UTC , finish = 2025-09-03 12:17:41.080323051 UTC , thread_cap_info = ("ThreadId
| | | | | E   |  110", 1, False)}
| | | | | E   |  
F | | | | |   |  
  | F | | |   |  
F |   | | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F |   | | |   |  = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
F |   | | |   |  = 110} , self = 96 , parent = Nothing , duration = 0.235709180000 , status
F |   | | |   |  = Fail , start = 2025-09-03 12:17:40.963416013 UTC , finish = 2025-09-03
F |   | | |   |  12:17:41.199125193 UTC , thread_cap_info = ("ThreadId 122", 3, False)}
F |   | | |   |  
| |   | S |   |  
| | F |   |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | F |   |   |  = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
| | F |   |   |  = 110} , self = 100 , parent = Nothing , duration = 0.381030123000 , status
| | F |   |   |  = Fail , start = 2025-09-03 12:17:40.98483158 UTC , finish = 2025-09-03
| | F |   |   |  12:17:41.365861703 UTC , thread_cap_info = ("ThreadId 124", 3, False)}
| | F |   |   |  
| F | |   |   |  
| F | |   |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |   |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| F | |   |   |  = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
| F | |   |   |  = 110} , self = 101 , parent = Nothing , duration = 0.382812092000 , status
| F | |   |   |  = Fail , start = 2025-09-03 12:17:40.998710944 UTC , finish = 2025-09-03
| F | |   |   |  12:17:41.381523036 UTC , thread_cap_info = ("ThreadId 128", 2, False)}
| F | |   |   |  
| | | | F |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F |   |  = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
| | | | F |   |  = 110} , self = 102 , parent = Nothing , duration = 0.420207435000 , status
| | | | F |   |  = Fail , start = 2025-09-03 12:17:41.003372531 UTC , finish = 2025-09-03
| | | | F |   |  12:17:41.423579966 UTC , thread_cap_info = ("ThreadId 126", 0, False)}
| | | | F |   |  
| | | S | |   |  
| | |   | E   |  
| | | F |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |     |  = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | F |     |  = 3 , total_length = 48} , self = 105 , parent = Nothing , duration = 0.524519927000
| | | F |     |  , status = Fail , start = 2025-09-03 12:17:41.118849083 UTC , finish =
| | | F |     |  2025-09-03 12:17:41.64336901 UTC , thread_cap_info = ("ThreadId 140", 1,
| | | F |     |  False)}
| | | F |     |  
| | | | |     E  
F | | | |        
S | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |        = 11 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 ,
S | | | |        alphabet_size = 5 , total_length = 110} , self = 108 , parent = Nothing
S | | | |        , duration = 0.746331432000 , status = Success , start = 2025-09-03 12:17:41.199174296
S | | | |        UTC , finish = 2025-09-03 12:17:41.945505728 UTC , thread_cap_info = ("ThreadId
S | | | |        144", 3, False)}
S | | | |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | F      = 40} , self = 103 , parent = Nothing , duration = 0.240869429000 , status
| | | | | F      = Fail , start = 2025-09-03 12:17:41.224282645 UTC , finish = 2025-09-03
| | | | | F      12:17:41.465152074 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | F    = 40} , self = 104 , parent = Nothing , duration = 0.361483739000 , status
| | | | | | F    = Fail , start = 2025-09-03 12:17:41.238267835 UTC , finish = 2025-09-03
| | | | | | F    12:17:41.599751574 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | | | | | F    
| | F | | | |    
| | E | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | E | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size
| | E | | | |    = 5 , total_length = 110} , self = 111 , parent = Nothing , duration =
| | E | | | |    0.658534329000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | | |    12:17:41.36591335 UTC , finish = 2025-09-03 12:17:42.024447679 UTC , thread_cap_info
| | E | | | |    = ("ThreadId 155", 3, False)}
| | E | | | |    
| F | | | | |    
| S | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | |    = 11 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 ,
| S | | | | |    alphabet_size = 5 , total_length = 110} , self = 106 , parent = Nothing
| S | | | | |    , duration = 0.543592572000 , status = Success , start = 2025-09-03 12:17:41.383690162
| S | | | | |    UTC , finish = 2025-09-03 12:17:41.927282734 UTC , thread_cap_info = ("ThreadId
| S | | | | |    156", 3, False)}
| S | | | | |    
| | | | F | |    
| | | | E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | E | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size
| | | | E | |    = 5 , total_length = 110} , self = 116 , parent = Nothing , duration =
| | | | E | |    0.856753031000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | |    12:17:41.43274605 UTC , finish = 2025-09-03 12:17:42.289499081 UTC , thread_cap_info
| | | | E | |    = ("ThreadId 157", 3, False)}
| | | | E | |    
| | | | | F |    
| | | | | F |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F |    = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | F |    = 3 , total_length = 40} , self = 110 , parent = Nothing , duration = 0.507540276000
| | | | | F |    , status = Fail , start = 2025-09-03 12:17:41.485154947 UTC , finish =
| | | | | F |    2025-09-03 12:17:41.992695223 UTC , thread_cap_info = ("ThreadId 159",
| | | | | F |    1, False)}
| | | | | F |    
| | | | | | F    
| | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | S    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | S    = 3 , total_length = 40} , self = 117 , parent = Nothing , duration = 0.685488683000
| | | | | | S    , status = Success , start = 2025-09-03 12:17:41.609589341 UTC , finish
| | | | | | S    = 2025-09-03 12:17:42.295078024 UTC , thread_cap_info = ("ThreadId 161",
| | | | | | S    1, False)}
| | | | | | S    
| | | F | | |    
| S |   | | |    
S   |   | | |    
    |   | F |    
E   |   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   |   |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   |   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E   |   |   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
E   |   |   |    = 3 , total_length = 40} , self = 120 , parent = Nothing , duration = 0.316864785000
E   |   |   |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:42.015644481
E   |   |   |    UTC , finish = 2025-09-03 12:17:42.332509266 UTC , thread_cap_info = ("ThreadId
E   |   |   |    171", 1, False)}
E   |   |   |    
|   E   |   |    
|       E   |    
|           S    
E                
