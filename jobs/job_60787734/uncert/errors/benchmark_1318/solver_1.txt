last 574 length 2245
CNF 574 vars 2245 clauses
last 666 length 2639
CNF 666 vars 2639 clauses
last 3836 length 17403
last 4331 length 21737
CNF 4331 vars 21737 clauses
CNF 3836 vars 17403 clauses
last 565 length 2326
last 596 length 2371
CNF 565 vars 2326 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8637
CNF 596 vars 2371 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28111
last 2384 length 8637
last 6801 length 28111
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2093, clauses: 7584
CNF 2384 vars 8637 clauses
CNF 6801 vars 28111 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6675, clauses: 27702
last 2093 length 7584
last 6675 length 27702
CNF 2093 vars 7584 clauses
CNF 6675 vars 27702 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2093, clauses: 7584, status: Unsatisfied, time: 0.151671464s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8637, status: Unsatisfied, time: 0.226783136s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4138, clauses: 16660
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4294, clauses: 17181
last 4138 length 16660
last 4294 length 17181
CNF 4138 vars 16660 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28111, status: Unsatisfied, time: 0.70593709s
CNF 4294 vars 17181 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4294, clauses: 17181, status: Satisfied, time: 0.372812233s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6675, clauses: 27702, status: Unsatisfied, time: 0.996201779s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3428, clauses: 13203
last 3428 length 13203
CNF 3428 vars 13203 clauses
last 596 length 2370
last 546 length 2151
CNF 596 vars 2370 clauses
CNF 546 vars 2151 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3428, clauses: 13203, status: Unsatisfied, time: 0.317176759s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8176
last 2278 length 8176
CNF 2278 vars 8176 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27935
last 6755 length 27935
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8176, status: Unsatisfied, time: 0.167290021s
CNF 6755 vars 27935 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16895
last 4219 length 16895
CNF 4219 vars 16895 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11539, clauses: 48202
last 11539 length 48202
CNF 11539 vars 48202 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27935, status: Unsatisfied, time: 0.868143248s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4138, clauses: 16660, status: Unsatisfied, time: 2.043429947s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3709, clauses: 14050
last 3709 length 14050
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16895, status: Satisfied, time: 0.614490978s
CNF 3709 vars 14050 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6408, clauses: 24471
last 6408 length 24471
CNF 6408 vars 24471 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, c, b] -> [b, a, a, c] {- Input 1 -}
  [b, b] -> [] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, c, b] -> [b, a, a, c] {- Input 1 -}
  [a, b, b] -> [a] {- Input 2 -}
  [b, b, b] -> [b] {- Input 2 -}
  [c, b, b] -> [c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [b, c, a] -> [c, a, a, b] {- Mirror (Input 1) -}
  [b, b, a] -> [a] {- Mirror (Input 2) -}
  [b, b, b] -> [b] {- Mirror (Input 2) -}
  [b, b, c] -> [c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1 0 0 \
        | 1 0 2 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 0 2 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 3 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 3 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1 0 1 \
        | 2 0 3 |
        \ 0 0 1 / )
  ( b
  , Wk  / 2 0 0 \
        | 1 0 1 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 0 0 1 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 1 0 2 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 0 1 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee\EDG(4/5,5)\Matrix{\Natural}{3}\EDG(3/5,5)\Matrix{\Natural}{3}(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.149148636000
  min duration 0.929745060000
  total durat. 3.164602888000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 33}
    , self = 73
    , parent = Nothing
    , duration = 1.085709192000
    , status = Fail
    , start = 2025-09-03 11:30:08.222168923 UTC
    , finish = 2025-09-03 11:30:09.307878115 UTC
    , thread_cap_info = ("ThreadId 109", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 35}
    , self = 83
    , parent = Nothing
    , duration = 1.149148636000
    , status = Fail
    , start = 2025-09-03 11:30:09.611911786 UTC
    , finish = 2025-09-03 11:30:10.761060422 UTC
    , thread_cap_info = ("ThreadId 131", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.920000541000
  min duration 0.689463100000
  total durat. 1.609463641000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.328262413000
  min duration 2.328262413000
  total durat. 2.328262413000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 33}
    , self = 84
    , parent = Nothing
    , duration = 2.328262413000
    , status = Fail
    , start = 2025-09-03 11:30:08.450711071 UTC
    , finish = 2025-09-03 11:30:10.778973484 UTC
    , thread_cap_info = ("ThreadId 114", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.025865941000
  min duration 1.025865941000
  total durat. 1.025865941000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 69
    , parent = Nothing
    , duration = 1.025865941000
    , status = Fail
    , start = 2025-09-03 11:30:07.976360225 UTC
    , finish = 2025-09-03 11:30:09.002226166 UTC
    , thread_cap_info = ("ThreadId 38", 1, False)}
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 162} , self = 57 , parent = Nothing , duration = 0.133308043000 , status
F                = Fail , start = 2025-09-03 11:30:07.971010778 UTC , finish = 2025-09-03
F                11:30:08.104318821 UTC , thread_cap_info = ("ThreadId 56", 2, False)}
F                
| F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F              = 12} , self = 69 , parent = Nothing , duration = 1.025865941000 , status
| F              = Fail , start = 2025-09-03 11:30:07.976360225 UTC , finish = 2025-09-03
| F              11:30:09.002226166 UTC , thread_cap_info = ("ThreadId 38", 1, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 162} , self = 59 , parent = Nothing , duration = 0.142065285000 , status
| | F            = Fail , start = 2025-09-03 11:30:07.976368353 UTC , finish = 2025-09-03
| | F            11:30:08.118433638 UTC , thread_cap_info = ("ThreadId 58", 2, False)}
| | F            
| | | F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | F          = 12} , self = 66 , parent = Nothing , duration = 0.285719849000 , status
| | | F          = Fail , start = 2025-09-03 11:30:07.990187895 UTC , finish = 2025-09-03
| | | F          11:30:08.275907744 UTC , thread_cap_info = ("ThreadId 40", 1, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F        = 33} , self = 64 , parent = Nothing , duration = 0.146355384000 , status
| | | | F        = Fail , start = 2025-09-03 11:30:08.05959915 UTC , finish = 2025-09-03
| | | | F        11:30:08.205954534 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| | | | F        
| | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | F      = 5 , total_length = 39} , self = 68 , parent = Nothing , duration = 0.362645632000
| | | | | F      , status = Fail , start = 2025-09-03 11:30:08.074172425 UTC , finish =
| | | | | F      2025-09-03 11:30:08.436818057 UTC , thread_cap_info = ("ThreadId 89", 0,
| | | | | F      False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F    = 33} , self = 65 , parent = Nothing , duration = 0.119005532000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:30:08.093497029 UTC , finish = 2025-09-03
| | | | | | F    11:30:08.212502561 UTC , thread_cap_info = ("ThreadId 87", 0, False)}
| | | | | | F    
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | F  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | F  = 5 , total_length = 39} , self = 70 , parent = Nothing , duration = 0.929745060000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:30:08.100445701 UTC , finish =
| | | | | | | F  2025-09-03 11:30:09.030190761 UTC , thread_cap_info = ("ThreadId 93", 0,
| | | | | | | F  False)}
| | | | | | | F  
F | | | | | | |  
  | F | | | | |  
  |   | F | | |  
F |   |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |   |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   |   | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F |   |   | | |  = 4 , total_length = 33} , self = 67 , parent = Nothing , duration = 0.224544578000
F |   |   | | |  , status = Fail , start = 2025-09-03 11:30:08.205999307 UTC , finish =
F |   |   | | |  2025-09-03 11:30:08.430543885 UTC , thread_cap_info = ("ThreadId 107",
F |   |   | | |  0, False)}
F |   |   | | |  
| |   |   | F |  
| | F |   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F |   |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F |   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F |   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F |   |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F |   |   |  = 4 , total_length = 33} , self = 73 , parent = Nothing , duration = 1.085709192000
| | F |   |   |  , status = Fail , start = 2025-09-03 11:30:08.222168923 UTC , finish =
| | F |   |   |  2025-09-03 11:30:09.307878115 UTC , thread_cap_info = ("ThreadId 109",
| | F |   |   |  0, False)}
| | F |   |   |  
| | | F   |   |  
F | |     |   |  
  | |     F   |  
F | |         |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | |         |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F | |         |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | |         |  = 4 , total_length = 33} , self = 84 , parent = Nothing , duration = 2.328262413000
F | |         |  , status = Fail , start = 2025-09-03 11:30:08.450711071 UTC , finish =
F | |         |  2025-09-03 11:30:10.778973484 UTC , thread_cap_info = ("ThreadId 114",
F | |         |  0, False)}
F | |         |  
| | | S       |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | S       |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | S       |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | S       |  = 5 , total_length = 39} , self = 71 , parent = Nothing , duration = 0.689463100000
| | | S       |  , status = Success , start = 2025-09-03 11:30:08.477712613 UTC , finish
| | | S       |  = 2025-09-03 11:30:09.167175713 UTC , thread_cap_info = ("ThreadId 115",
| | | S       |  0, False)}
| | | S       |  
| F | |       |  
|   | |       F  
| F | |          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |          = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F | |          = 5 , total_length = 39} , self = 74 , parent = Nothing , duration = 0.259844556000
| F | |          , status = Fail , start = 2025-09-03 11:30:09.057815208 UTC , finish =
| F | |          2025-09-03 11:30:09.317659764 UTC , thread_cap_info = ("ThreadId 119",
| F | |          0, False)}
| F | |          
| | | S          
| | F            
| | F            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F            = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F            = 4 , total_length = 33} , self = 81 , parent = Nothing , duration = 0.425903253000
| | F            , status = Fail , start = 2025-09-03 11:30:09.313492745 UTC , finish =
| | F            2025-09-03 11:30:09.739395998 UTC , thread_cap_info = ("ThreadId 121",
| | F            0, False)}
| | F            
| F |            
| F |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F |            = 5 , total_length = 35} , self = 82 , parent = Nothing , duration = 0.357172439000
| F |            , status = Fail , start = 2025-09-03 11:30:09.557223152 UTC , finish =
| F |            2025-09-03 11:30:09.914395591 UTC , thread_cap_info = ("ThreadId 130",
| F |            0, False)}
| F |            
| | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F          = 5 , total_length = 35} , self = 83 , parent = Nothing , duration = 1.149148636000
| | | F          , status = Fail , start = 2025-09-03 11:30:09.611911786 UTC , finish =
| | | F          2025-09-03 11:30:10.761060422 UTC , thread_cap_info = ("ThreadId 131",
| | | F          0, False)}
| | | F          
| | F |          
| F   |          
| S   |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S   |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S   |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| S   |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| S   |          = 5 , total_length = 35} , self = 85 , parent = Nothing , duration = 0.920000541000
| S   |          , status = Success , start = 2025-09-03 11:30:10.014616679 UTC , finish
| S   |          = 2025-09-03 11:30:10.93461722 UTC , thread_cap_info = ("ThreadId 135",
| S   |          0, False)}
| S   |          
| |   F          
| | F            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F            = 5 , total_length = 35} , self = 87 , parent = Nothing , duration = 0.310828606000
| | F            , status = Fail , start = 2025-09-03 11:30:10.771374789 UTC , finish =
| | F            2025-09-03 11:30:11.082203395 UTC , thread_cap_info = ("ThreadId 138",
| | F            0, False)}
| | F            
F | |            
  S |            
    F            
