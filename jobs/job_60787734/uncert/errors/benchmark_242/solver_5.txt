Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BA(A(x1))
    4: BA(b(x1)) -> BAB(x1)
    5: BAB(a(x1)) -> BABA(x1)
    6: BAB(b(x1)) -> BAB(B(x1))
    7: BABA(a(x1)) -> BABAA(x1)
    8: BABA(b(x1)) -> BABA(B(x1))
    9: BABAA(a(x1)) -> BABAAA(x1)
    10: BABAA(b(x1)) -> BABAA(B(x1))
    11: BABAAA(a(x1)) -> BABAAAA(x1)
    12: BABAAA(b(x1)) -> BABAAA(B(x1))
    13: BABAAAA(a(x1)) -> BABAAAAA(x1)
    14: BABAAAA(b(x1)) -> BABAAAA(B(x1))
    15: BABAAAAA(a(x1)) -> BABAAAAA(A(x1))
    16: BABAAAAA(b(x1)) -> BABAAAAAB(x1)
    17: BABAAAAAB(a(x1)) -> BABAAAAABA(x1)
    18: BABAAAAAB(b(x1)) -> BABAAAAAB(B(x1))
    19: BABAAAAABA(x1) -> a(b(a(b(a(x1)))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> ABA(x1)
    23: AB(b(x1)) -> AB(B(x1))
    24: ABA(a(x1)) -> ABA(A(x1))
    25: ABA(b(x1)) -> ABAB(x1)
    26: ABAB(a(x1)) -> ABABA(x1)
    27: ABAB(b(x1)) -> ABAB(B(x1))
    28: ABABA(x1) -> b(a(b(a(a(a(a(a(b(a(x1))))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAB(b(x1)) -> #BAB(B(x1))
   #4: #BAB(b(x1)) -> #B(x1)
   #5: #BABAAAA(a(x1)) -> #BABAAAAA(x1)
   #6: #BABAA(a(x1)) -> #BABAAA(x1)
   #7: #BABAAA(a(x1)) -> #BABAAAA(x1)
   #8: #ABA(a(x1)) -> #ABA(A(x1))
   #9: #ABA(a(x1)) -> #A(x1)
   #10: #AB(b(x1)) -> #AB(B(x1))
   #11: #AB(b(x1)) -> #B(x1)
   #12: #BABAAA(b(x1)) -> #BABAAA(B(x1))
   #13: #BABAAA(b(x1)) -> #B(x1)
   #14: #BABAAAA(b(x1)) -> #BABAAAA(B(x1))
   #15: #BABAAAA(b(x1)) -> #B(x1)
   #16: #ABA(b(x1)) -> #ABAB(x1)
   #17: #A(a(x1)) -> #A(A(x1))
   #18: #A(a(x1)) -> #A(x1)
   #19: #BABA(a(x1)) -> #BABAA(x1)
   #20: #BABAA(b(x1)) -> #BABAA(B(x1))
   #21: #BABAA(b(x1)) -> #B(x1)
   #22: #BAB(a(x1)) -> #BABA(x1)
   #23: #AB(a(x1)) -> #ABA(x1)
   #24: #ABAB(b(x1)) -> #ABAB(B(x1))
   #25: #ABAB(b(x1)) -> #B(x1)
   #26: #BABAAAAAB(a(x1)) -> #BABAAAAABA(x1)
   #27: #ABAB(a(x1)) -> #ABABA(x1)
   #28: #A(b(x1)) -> #AB(x1)
   #29: #BABAAAAA(b(x1)) -> #BABAAAAAB(x1)
   #30: #BA(a(x1)) -> #BA(A(x1))
   #31: #BA(a(x1)) -> #A(x1)
   #32: #B(a(x1)) -> #BA(x1)
   #33: #BABA(b(x1)) -> #BABA(B(x1))
   #34: #BABA(b(x1)) -> #B(x1)
   #35: #BABAAAAA(a(x1)) -> #BABAAAAA(A(x1))
   #36: #BABAAAAA(a(x1)) -> #A(x1)
   #37: #BA(b(x1)) -> #BAB(x1)
   #38: #BABAAAAAB(b(x1)) -> #BABAAAAAB(B(x1))
   #39: #BABAAAAAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..23 #25 #28..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
  #BA(x1)	weight: x1_2; x1_2
BABAAAA(x1)	weight: 0; x1_2
#BABAA(x1)	weight: x1_2; x1_2
  ABAB(x1)	weight: (/ 1 8); x1_2
#BABAAAA(x1)	weight: x1_2; x1_2
#ABABA(x1)	weight: 0; 0
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: x1_1 + x1_2; x1_2
#BABA(x1)	weight: x1_2; x1_2
BABAAAAA(x1)	weight: 0; x1_2
#ABAB(x1)	weight: x1_2; x1_2
    AB(x1)	weight: (/ 1 8); x1_2
#BABAAA(x1)	weight: x1_2; x1_2
BABAAAAABA(x1)	weight: 0; x1_2
#BABAAAAAB(x1)	weight: x1_2; x1_1 + x1_2
 #ABA(x1)	weight: x1_2; x1_2
   BAB(x1)	weight: 0; x1_2
     B(x1)	weight: 0; x1_2
 #BAB(x1)	weight: x1_2; x1_2
#BABAAAAA(x1)	weight: x1_2; x1_2
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: (/ 1 8); x1_2
 BABAA(x1)	weight: 0; x1_2
BABAAAAAB(x1)	weight: 0; x1_2
   #A(x1)	weight: x1_2; x1_2
   ABA(x1)	weight: (/ 1 8); x1_2
 ABABA(x1)	weight: (/ 1 8); x1_2
BABAAA(x1)	weight: 0; x1_2
  BABA(x1)	weight: 0; x1_2
  #AB(x1)	weight: x1_2; x1_2
    BA(x1)	weight: 0; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #1 #2
Number of SCCs: 1, DPs: 33, edges: 59
	SCC { #3..23 #25 #28..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; 0
  #BA(x1)	weight: (/ 1 16) + x1_1; 0
BABAAAA(x1)	weight: x1_1; 0
#BABAA(x1)	weight: (/ 1 16) + x1_1; 0
  ABAB(x1)	weight: x1_1; (/ 1 8)
#BABAAAA(x1)	weight: (/ 1 16) + x1_1; 0
#ABABA(x1)	weight: 0; 0
     b(x1)	weight: x1_1 + x1_2; (/ 1 8)
   #B(x1)	weight: (/ 1 16) + x1_1; 0
#BABA(x1)	weight: (/ 1 16) + x1_1; 0
BABAAAAA(x1)	weight: x1_1; 0
#ABAB(x1)	weight: x1_1 + x1_2; 0
    AB(x1)	weight: x1_1; (/ 1 8)
#BABAAA(x1)	weight: (/ 1 16) + x1_1; 0
BABAAAAABA(x1)	weight: x1_1; 0
#BABAAAAAB(x1)	weight: (/ 1 16) + x1_1; 0
 #ABA(x1)	weight: (/ 1 16) + x1_1; 0
   BAB(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1; (/ 1 16)
 #BAB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
#BABAAAAA(x1)	weight: (/ 1 16) + x1_1; 0
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: x1_1; (/ 1 8)
 BABAA(x1)	weight: x1_1; 0
BABAAAAAB(x1)	weight: x1_1; 0
   #A(x1)	weight: (/ 1 16) + x1_1; 0
   ABA(x1)	weight: x1_1; (/ 1 8)
 ABABA(x1)	weight: x1_1; (/ 1 8)
BABAAA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1; 0
  #AB(x1)	weight: (/ 1 16) + x1_1; 0
    BA(x1)	weight: x1_1; 0
    Usable rules: { 1..28 }
    Removed DPs: #3 #4 #16 #25
Number of SCCs: 1, DPs: 28, edges: 50
	SCC { #5..7 #9..15 #17..23 #28..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; 0
  #BA(x1)	weight: (/ 1 16) + x1_1; 0
BABAAAA(x1)	weight: x1_1; 0
#BABAA(x1)	weight: (/ 1 16) + x1_1; 0
  ABAB(x1)	weight: x1_1; (/ 1 8)
#BABAAAA(x1)	weight: (/ 1 16) + x1_1; 0
#ABABA(x1)	weight: 0; 0
     b(x1)	weight: x1_1 + x1_2; (/ 1 8)
   #B(x1)	weight: (/ 1 16) + x1_1; 0
#BABA(x1)	weight: (/ 1 16) + x1_1; 0
BABAAAAA(x1)	weight: x1_1; 0
#ABAB(x1)	weight: 0; 0
    AB(x1)	weight: x1_1; (/ 1 8)
#BABAAA(x1)	weight: (/ 1 16) + x1_1; 0
BABAAAAABA(x1)	weight: x1_1; 0
#BABAAAAAB(x1)	weight: x1_1 + x1_2; 0
 #ABA(x1)	weight: (/ 1 16) + x1_1; 0
   BAB(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1; (/ 1 16)
 #BAB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
#BABAAAAA(x1)	weight: (/ 1 16) + x1_1; 0
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: x1_1; (/ 1 8)
 BABAA(x1)	weight: x1_1; 0
BABAAAAAB(x1)	weight: x1_1; 0
   #A(x1)	weight: (/ 1 16) + x1_1; 0
   ABA(x1)	weight: x1_1; (/ 1 8)
 ABABA(x1)	weight: x1_1; (/ 1 8)
BABAAA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1; 0
  #AB(x1)	weight: (/ 1 16) + x1_1; 0
    BA(x1)	weight: x1_1; 0
    Usable rules: { 1..28 }
    Removed DPs: #29 #39
Number of SCCs: 1, DPs: 25, edges: 45
	SCC { #5..7 #9..15 #17..23 #28 #30..34 #36 #37 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; x1_1
  #BA(x1)	weight: x1_1; 0
BABAAAA(x1)	weight: x1_1; x1_1
#BABAA(x1)	weight: x1_1; 0
  ABAB(x1)	weight: x1_2; (/ 1 16) + x1_2
#BABAAAA(x1)	weight: x1_1; 0
#ABABA(x1)	weight: 0; 0
     b(x1)	weight: x1_2; (/ 1 16) + x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_1; 0
BABAAAAA(x1)	weight: x1_1; x1_1
#ABAB(x1)	weight: 0; 0
    AB(x1)	weight: x1_2; (/ 1 16) + x1_2
#BABAAA(x1)	weight: x1_1; 0
BABAAAAABA(x1)	weight: x1_1; x1_1
#BABAAAAAB(x1)	weight: 0; 0
 #ABA(x1)	weight: x1_1; 0
   BAB(x1)	weight: x1_2; x1_2
     B(x1)	weight: x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
#BABAAAAA(x1)	weight: x1_1; 0
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: x1_1; (/ 1 16) + x1_1
 BABAA(x1)	weight: x1_1; x1_1
BABAAAAAB(x1)	weight: x1_2; x1_2
   #A(x1)	weight: x1_1; 0
   ABA(x1)	weight: x1_1; (/ 1 16) + x1_1
 ABABA(x1)	weight: x1_1; (/ 1 16) + x1_1
BABAAA(x1)	weight: x1_1; x1_1
  BABA(x1)	weight: x1_1; x1_1
  #AB(x1)	weight: x1_2; 0
    BA(x1)	weight: x1_1; x1_1
    Usable rules: { 1..28 }
    Removed DPs: #10 #11
Number of SCCs: 2, DPs: 19, edges: 30
	SCC { #9 #17 #18 #23 #28 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_1 + x1_2
  #BA(x1)	weight: 0; 0
BABAAAA(x1)	weight: (/ 1 32); (/ 1 16)
#BABAA(x1)	weight: 0; 0
  ABAB(x1)	weight: (/ 1 32); (/ 1 32)
#BABAAAA(x1)	weight: 0; 0
#ABABA(x1)	weight: 0; 0
     b(x1)	weight: x1_1; (/ 1 32)
   #B(x1)	weight: 0; 0
#BABA(x1)	weight: 0; 0
BABAAAAA(x1)	weight: (/ 1 32); (/ 1 16)
#ABAB(x1)	weight: 0; 0
    AB(x1)	weight: (/ 1 32); (/ 1 32)
#BABAAA(x1)	weight: 0; 0
BABAAAAABA(x1)	weight: (/ 1 32); (/ 1 16)
#BABAAAAAB(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 32) + x1_2; 0
   BAB(x1)	weight: (/ 1 32); (/ 1 16)
     B(x1)	weight: (/ 1 32); (/ 1 16)
 #BAB(x1)	weight: 0; 0
#BABAAAAA(x1)	weight: 0; 0
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: x1_2; x1_2
 BABAA(x1)	weight: (/ 1 32); (/ 1 16)
BABAAAAAB(x1)	weight: (/ 1 32); (/ 1 16)
   #A(x1)	weight: x1_1 + x1_2; 0
   ABA(x1)	weight: (/ 1 32); (/ 1 32)
 ABABA(x1)	weight: (/ 1 32); (/ 1 32)
BABAAA(x1)	weight: (/ 1 32); (/ 1 16)
  BABA(x1)	weight: (/ 1 32); (/ 1 16)
  #AB(x1)	weight: (/ 1 32) + x1_1; 0
    BA(x1)	weight: (/ 1 32); (/ 1 16)
    Usable rules: { 1..28 }
    Removed DPs: #9
Number of SCCs: 2, DPs: 15, edges: 22
	SCC { #18 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: (/ 5 8) + x1
  #BA(x1)	weight: 0
BABAAAA(x1)	weight: (/ 1 8)
#BABAA(x1)	weight: 0
  ABAB(x1)	weight: (/ 1 8)
#BABAAAA(x1)	weight: 0
#ABABA(x1)	weight: 0
     b(x1)	weight: (/ 1 8)
   #B(x1)	weight: 0
#BABA(x1)	weight: 0
BABAAAAA(x1)	weight: (/ 1 4) + x1
#ABAB(x1)	weight: 0
    AB(x1)	weight: (/ 1 8)
#BABAAA(x1)	weight: 0
BABAAAAABA(x1)	weight: (/ 5 8) + x1
#BABAAAAAB(x1)	weight: 0
 #ABA(x1)	weight: 0
   BAB(x1)	weight: (/ 5 8)
     B(x1)	weight: (/ 1 4)
 #BAB(x1)	weight: 0
#BABAAAAA(x1)	weight: 0
#BABAAAAABA(x1)	weight: 0
     A(x1)	weight: (/ 3 4)
 BABAA(x1)	weight: (/ 3 2) + x1
BABAAAAAB(x1)	weight: (/ 1 2)
   #A(x1)	weight: x1
   ABA(x1)	weight: (/ 1 8)
 ABABA(x1)	weight: (/ 1 8)
BABAAA(x1)	weight: 0
  BABA(x1)	weight: (/ 3 4) + x1
  #AB(x1)	weight: 0
    BA(x1)	weight: (/ 3 8) + x1
    Usable rules: { }
    Removed DPs: #18
Number of SCCs: 1, DPs: 14, edges: 21
	SCC { #6 #7 #12 #13 #15 #19..22 #30 #32..34 #37 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
