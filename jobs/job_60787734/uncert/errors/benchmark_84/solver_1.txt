last 2795 length 12235
last 2107 length 8496
CNF 2795 vars 12235 clauses
last 2289 length 13162
last 1884 length 9373
CNF 2289 vars 13162 clauses
CNF 2107 vars 8496 clauses
CNF 1884 vars 9373 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7877, clauses: 27717
last 7877 length 27717
CNF 7877 vars 27717 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12729, clauses: 45464
last 12729 length 45464
CNF 12729 vars 45464 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12729, clauses: 45464, status: Satisfied, time: 0.300462152s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26215, clauses: 108181
last 26215 length 108181
CNF 26215 vars 108181 clauses
last 1441 length 5986
last 2297 length 10339
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7877, clauses: 27717, status: Unsatisfied, time: 1.015267775s
CNF 1441 vars 5986 clauses
CNF 2297 vars 10339 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9202, clauses: 32380
last 9202 length 32380
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16222, clauses: 63066
last 16222 length 63066
CNF 9202 vars 32380 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9202, clauses: 32380, status: Satisfied, time: 0.245547111s
CNF 16222 vars 63066 clauses
last 1375 length 5734
CNF 1375 vars 5734 clauses
last 2263 length 10205
CNF 2263 vars 10205 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8991, clauses: 31559
last 8991 length 31559
CNF 8991 vars 31559 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27670, clauses: 114007
last 27670 length 114007
CNF 27670 vars 114007 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16222, clauses: 63066, status: Unsatisfied, time: 2.361823063s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8991, clauses: 31559, status: Unsatisfied, time: 1.611854398s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12777, clauses: 47326
last 12777 length 47326
CNF 12777 vars 47326 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17223, clauses: 66777
last 17223 length 66777
CNF 17223 vars 66777 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17223, clauses: 66777, status: Unsatisfied, time: 3.061768745s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14557, clauses: 54101
last 14557 length 54101
CNF 14557 vars 54101 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 46281, clauses: 183518
last 46281 length 183518
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14557, clauses: 54101, status: Unsatisfied, time: 2.723795374s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12777, clauses: 47326, status: Unsatisfied, time: 7.003786132s
CNF 46281 vars 183518 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23991, clauses: 88504
last 23991 length 88504
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27363, clauses: 101070
last 27363 length 101070
CNF 23991 vars 88504 clauses
CNF 27363 vars 101070 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 47749, clauses: 188836
last 47749 length 188836
CNF 47749 vars 188836 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 57537, clauses: 266983
last 57537 length 266983
[Info] pool sizes (success) 15331 seen 6617 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 22 rules on 14 letters       looping derivation
from
  [ABAB, AB, B, B, BAB, B, B, BAB, a]
to
  [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]
via 49 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [A, a] -> [A, A] {- Input 0 -}
  [A, b] -> [AB] {- Input 1 -}
  [AB, a] -> [ABA] {- Input 2 -}
  [AB, b] -> [AB, B] {- Input 3 -}
  [ABA, a] -> [ABA, A] {- Input 4 -}
  [ABA, b] -> [ABAB] {- Input 5 -}
  [ABAB, a] -> [ABAB, A] {- Input 6 -}
  [ABAB, b] -> [ABABB] {- Input 7 -}
  [ABABB, a] -> [ABABB, A] {- Input 8 -}
  [ABABB, b] -> [ABABBB] {- Input 9 -}
  [ABABBB, a] -> [ABABBB, A] {- Input 10 -}
  [ABABBB, b] -> [ABABBBB] {- Input 11 -}
  [ABABBBB, a] -> [ABABBBBA] {- Input 12 -}
  [ABABBBB, b] -> [ABABBBB, B] {- Input 13 -}
  [ABABBBBA] -> [b, a, b, a] {- Input 14 -}
  [B, a] -> [BA] {- Input 15 -}
  [B, b] -> [B, B] {- Input 16 -}
  [BA, a] -> [BA, A] {- Input 17 -}
  [BA, b] -> [BAB] {- Input 18 -}
  [BAB, a] -> [BABA] {- Input 19 -}
  [BAB, b] -> [BAB, B] {- Input 20 -}
  [BABA] -> [a, b, a, b, b, b, b, a] {- Input 21 -}
reason
  Nontermination
    Derive   { from = [ABAB, AB, B, B, BAB, B, B, BAB, a], via = [(Step   { rule = 19, position = 7}, [ABAB, AB, B, B, BAB, B, B, BABA]), (Step   { rule = 21, position = 7}, [ABAB, AB, B, B, BAB, B, B, a, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 6}, [ABAB, AB, B, B, BAB, B, BA, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 6}, [ABAB, AB, B, B, BAB, B, BAB, a, b, b, b, b, a]), (Step   { rule = 19, position = 6}, [ABAB, AB, B, B, BAB, B, BABA, b, b, b, b, a]), (Step   { rule = 21, position = 6}, [ABAB, AB, B, B, BAB, B, a, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 5}, [ABAB, AB, B, B, BAB, BA, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 5}, [ABAB, AB, B, B, BAB, BAB, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 5}, [ABAB, AB, B, B, BAB, BABA, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 5}, [ABAB, AB, B, B, BAB, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 4}, [ABAB, AB, B, B, BABA, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 4}, [ABAB, AB, B, B, a, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 3}, [ABAB, AB, B, BA, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 3}, [ABAB, AB, B, BAB, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 3}, [ABAB, AB, B, BABA, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 3}, [ABAB, AB, B, a, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 2}, [ABAB, AB, BA, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 2}, [ABAB, AB, BAB, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 2}, [ABAB, AB, BABA, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 2}, [ABAB, AB, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 2, position = 1}, [ABAB, ABA, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 5, position = 1}, [ABAB, ABAB, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 6, position = 1}, [ABAB, ABAB, A, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 1, position = 2}, [ABAB, ABAB, AB, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 3, position = 2}, [ABAB, ABAB, AB, B, b, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 16, position = 3}, [ABAB, ABAB, AB, B, B, b, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 16, position = 4}, [ABAB, ABAB, AB, B, B, B, a, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 5}, [ABAB, ABAB, AB, B, B, BA, b, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 5}, [ABAB, ABAB, AB, B, B, BAB, b, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 20, position = 5}, [ABAB, ABAB, AB, B, B, BAB, B, b, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 16, position = 6}, [ABAB, ABAB, AB, B, B, BAB, B, B, b, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 16, position = 7}, [ABAB, ABAB, AB, B, B, BAB, B, B, B, a, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 8}, [ABAB, ABAB, AB, B, B, BAB, B, B, BA, b, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 8}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, b, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 20, position = 8}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, b, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 16, position = 9}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, B, b, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 16, position = 10}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, B, B, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 11}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, B, BA, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 11}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, B, BAB, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 11}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, B, BABA, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 11}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, B, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 10}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, BA, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 10}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, BAB, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 10}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, BABA, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 10}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, B, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 15, position = 9}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, BA, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 18, position = 9}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, BAB, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 19, position = 9}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, BABA, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]), (Step   { rule = 21, position = 9}, [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a])], to = [ABAB, ABAB, AB, B, B, BAB, B, B, BAB, a, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a, b, b, b, b, a]}

**************************************************
skeleton: (22,14)\Loop{49}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.099866702000
  min duration 3.099866702000
  total durat. 3.099866702000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 333
      , num_strict_rules = 333
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 144
      , total_length = 2127}
    , self = 91
    , parent = Nothing
    , duration = 3.099866702000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:16.309284179 UTC
    , finish = 2025-09-03 10:51:19.409150881 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.099336128000
  min duration 3.099336128000
  total durat. 3.099336128000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 333
      , num_strict_rules = 333
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 144
      , total_length = 2127}
    , self = 92
    , parent = Nothing
    , duration = 3.099336128000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:16.321411028 UTC
    , finish = 2025-09-03 10:51:19.420747156 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 20.252999273000
  min duration 0.160189578000
  total durat. 20.574293444000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 395
      , num_strict_rules = 395
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 155
      , total_length = 2549}
    , self = 99
    , parent = Nothing
    , duration = 20.252999273000
    , status = Fail
    , start = 2025-09-03 10:51:15.785779918 UTC
    , finish = 2025-09-03 10:51:36.038779191 UTC
    , thread_cap_info = ("ThreadId 113", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.048162188000
  min duration 9.046435295000
  total durat. 18.094597483000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 113}
    , self = 94
    , parent = Nothing
    , duration = 9.046435295000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:51:14.661697404 UTC
    , finish = 2025-09-03 10:51:23.708132699 UTC
    , thread_cap_info = ("ThreadId 91", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 22
      , alphabet_size = 20
      , total_length = 120}
    , self = 95
    , parent = Nothing
    , duration = 9.048162188000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:51:17.002909174 UTC
    , finish = 2025-09-03 10:51:26.051071362 UTC
    , thread_cap_info = ("ThreadId 140", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.877965202000
  min duration 0.840009954000
  total durat. 1.717975156000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.994495768000
  min duration 2.944740183000
  total durat. 6.939235951000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 113}
    , self = 89
    , parent = Nothing
    , duration = 2.944740183000
    , status = Fail
    , start = 2025-09-03 10:51:15.822077619 UTC
    , finish = 2025-09-03 10:51:18.766817802 UTC
    , thread_cap_info = ("ThreadId 119", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 22
      , alphabet_size = 20
      , total_length = 120}
    , self = 93
    , parent = Nothing
    , duration = 3.994495768000
    , status = Fail
    , start = 2025-09-03 10:51:18.904931673 UTC
    , finish = 2025-09-03 10:51:22.899427441 UTC
    , thread_cap_info = ("ThreadId 144", 0, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 12.093781608000
  min duration 12.062210834000
  total durat. 24.155992442000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 113}
    , self = 98
    , parent = Nothing
    , duration = 12.062210834000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:51:23.763535758 UTC
    , finish = 2025-09-03 10:51:35.825746592 UTC
    , thread_cap_info = ("ThreadId 153", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 22
      , alphabet_size = 20
      , total_length = 120}
    , self = 101
    , parent = Nothing
    , duration = 12.093781608000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:51:26.065990755 UTC
    , finish = 2025-09-03 10:51:38.159772363 UTC
    , thread_cap_info = ("ThreadId 155", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.878792924000
  min duration 0.649338617000
  total durat. 1.528131541000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.961455959000
  min duration 1.277286496000
  total durat. 3.238742455000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 113}
    , self = 72
    , parent = Nothing
    , duration = 1.277286496000
    , status = Fail
    , start = 2025-09-03 10:51:14.544690399 UTC
    , finish = 2025-09-03 10:51:15.821976895 UTC
    , thread_cap_info = ("ThreadId 89", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 22
      , alphabet_size = 20
      , total_length = 120}
    , self = 90
    , parent = Nothing
    , duration = 1.961455959000
    , status = Fail
    , start = 2025-09-03 10:51:16.889759455 UTC
    , finish = 2025-09-03 10:51:18.851215414 UTC
    , thread_cap_info = ("ThreadId 138", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 7.920421619000
  min duration 3.483806353000
  total durat. 11.404227972000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 22
      , alphabet_size = 20
      , total_length = 120}
    , self = 96
    , parent = Nothing
    , duration = 3.483806353000
    , status = Fail
    , start = 2025-09-03 10:51:22.899481874 UTC
    , finish = 2025-09-03 10:51:26.383288227 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 113}
    , self = 97
    , parent = Nothing
    , duration = 7.920421619000
    , status = Fail
    , start = 2025-09-03 10:51:18.78606118 UTC
    , finish = 2025-09-03 10:51:26.706482799 UTC
    , thread_cap_info = ("ThreadId 143", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 23.480058775000
  min duration 23.480058775000
  total durat. 23.480058775000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 22
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 14
      , total_length = 84}
    , self = 100
    , parent = Nothing
    , duration = 23.480058775000
    , status = Fail
    , start = 2025-09-03 10:51:14.215389722 UTC
    , finish = 2025-09-03 10:51:37.695448497 UTC
    , thread_cap_info = ("ThreadId 41", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 5
  max duration 1.675233754000
  min duration 0.001826689000
  total durat. 2.671004235000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 3528
      , num_strict_rules = 3528
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 196
      , total_length = 20384}
    , self = 76
    , parent = Nothing
    , duration = 1.675233754000
    , status = Success
    , start = 2025-09-03 10:51:14.393706263 UTC
    , finish = 2025-09-03 10:51:16.068940017 UTC
    , thread_cap_info = ("ThreadId 76", 1, False)}
**************************************************
S                Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
S                , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
S                , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
S                = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
S                , cpf = False}" , input_size = Size { num_rules = 22 , num_strict_rules
S                = 22 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
S                = 84} , self = 22 , parent = Nothing , duration = 0.110492574000 , status
S                = Success , start = 2025-09-03 10:51:14.208742769 UTC , finish = 2025-09-03
S                10:51:14.319235343 UTC , thread_cap_info = ("ThreadId 36", 1, False)}
S                
| F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F              = True})" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| F              , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| F              = 84} , self = 100 , parent = Nothing , duration = 23.480058775000 , status
| F              = Fail , start = 2025-09-03 10:51:14.215389722 UTC , finish = 2025-09-03
| F              10:51:37.695448497 UTC , thread_cap_info = ("ThreadId 41", 3, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 22 , num_strict_rules = 22 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 14 , total_length = 84} , self = 25 , parent = Nothing
| | F            , duration = 0.160189578000 , status = Fail , start = 2025-09-03 10:51:14.220700097
| | F            UTC , finish = 2025-09-03 10:51:14.380889675 UTC , thread_cap_info = ("ThreadId
| | F            49", 0, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 22 , num_strict_rules = 22 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 14 , total_length = 84} , self = 26 , parent = Nothing
| | | F          , duration = 0.161104593000 , status = Fail , start = 2025-09-03 10:51:14.220708054
| | | F          UTC , finish = 2025-09-03 10:51:14.381812647 UTC , thread_cap_info = ("ThreadId
| | | F          51", 0, False)}
| | | F          
| | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S        = Size { num_rules = 4312 , num_strict_rules = 4312 , num_top_rules = 0
| | | | S        , num_weak_rules = 0 , alphabet_size = 196 , total_length = 25088} , self
| | | | S        = 57 , parent = Nothing , duration = 0.987836513000 , status = Success
| | | | S        , start = 2025-09-03 10:51:14.298291947 UTC , finish = 2025-09-03 10:51:15.28612846
| | | | S        UTC , thread_cap_info = ("ThreadId 54", 2, False)}
| | | | S        
S | | | |        
  | F | |        
  |   F |        
F |     |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |     |        = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
F |     |        = 28 , num_top_rules = 28 , num_weak_rules = 22 , alphabet_size = 24 ,
F |     |        total_length = 178} , self = 48 , parent = Nothing , duration = 0.156635069000
F |     |        , status = Fail , start = 2025-09-03 10:51:14.387035723 UTC , finish =
F |     |        2025-09-03 10:51:14.543670792 UTC , thread_cap_info = ("ThreadId 75", 0,
F |     |        False)}
F |     |        
| | S   |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S   |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S   |        = Size { num_rules = 3528 , num_strict_rules = 3528 , num_top_rules = 0
| | S   |        , num_weak_rules = 0 , alphabet_size = 196 , total_length = 20384} , self
| | S   |        = 76 , parent = Nothing , duration = 1.675233754000 , status = Success
| | S   |        , start = 2025-09-03 10:51:14.393706263 UTC , finish = 2025-09-03 10:51:16.068940017
| | S   |        UTC , thread_cap_info = ("ThreadId 76", 1, False)}
| | S   |        
| | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | F |        = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | F |        = 113} , self = 49 , parent = Nothing , duration = 0.141121166000 , status
| | | F |        = Fail , start = 2025-09-03 10:51:14.423281082 UTC , finish = 2025-09-03
| | | F |        10:51:14.564402248 UTC , thread_cap_info = ("ThreadId 80", 0, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | F      = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | | F      = 113} , self = 47 , parent = Nothing , duration = 0.118399290000 , status
| | | | | F      = Fail , start = 2025-09-03 10:51:14.423283452 UTC , finish = 2025-09-03
| | | | | F      10:51:14.541682742 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | | | | F      
| | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S    = 50 , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 22
| | | | | | S    , alphabet_size = 24 , total_length = 178} , self = 59 , parent = Nothing
| | | | | | S    , duration = 0.878792924000 , status = Success , start = 2025-09-03 10:51:14.481830613
| | | | | | S    UTC , finish = 2025-09-03 10:51:15.360623537 UTC , thread_cap_info = ("ThreadId
| | | | | | S    87", 0, False)}
| | | | | | S    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | | | F  = 68} , self = 50 , parent = Nothing , duration = 0.123594030000 , status
| | | | | | | F  = Fail , start = 2025-09-03 10:51:14.500688367 UTC , finish = 2025-09-03
| | | | | | | F  10:51:14.624282397 UTC , thread_cap_info = ("ThreadId 88", 1, False)}
| | | | | | | F  
| | | | | F | |  
F | | | |   | |  
F | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | |   | |  = 29 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 ,
F | | | |   | |  alphabet_size = 17 , total_length = 113} , self = 72 , parent = Nothing
F | | | |   | |  , duration = 1.277286496000 , status = Fail , start = 2025-09-03 10:51:14.544690399
F | | | |   | |  UTC , finish = 2025-09-03 10:51:15.821976895 UTC , thread_cap_info = ("ThreadId
F | | | |   | |  89", 0, False)}
F | | | |   | |  
| | | F |   | |  
| | | E |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 50
| | | E |   | |  , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 22 , alphabet_size
| | | E |   | |  = 24 , total_length = 178} , self = 61 , parent = Nothing , duration =
| | | E |   | |  0.877965202000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E |   | |  10:51:14.580717221 UTC , finish = 2025-09-03 10:51:15.458682423 UTC , thread_cap_info
| | | E |   | |  = ("ThreadId 90", 0, False)}
| | | E |   | |  
| | | | |   | F  
| | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
| | | | | E |    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size
| | | | | E |    = 17 , total_length = 113} , self = 94 , parent = Nothing , duration =
| | | | | E |    9.046435295000 , status = Except "<<timeout>>" , start = 2025-09-03 10:51:14.661697404
| | | | | E |    UTC , finish = 2025-09-03 10:51:23.708132699 UTC , thread_cap_info = ("ThreadId
| | | | | E |    91", 0, False)}
| | | | | E |    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | | | F  = 68} , self = 54 , parent = Nothing , duration = 0.151968821000 , status
| | | | | | | F  = Fail , start = 2025-09-03 10:51:14.841916432 UTC , finish = 2025-09-03
| | | | | | | F  10:51:14.993885253 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | | | F  = 68} , self = 56 , parent = Nothing , duration = 0.137601716000 , status
| | | | | | | F  = Fail , start = 2025-09-03 10:51:15.002824369 UTC , finish = 2025-09-03
| | | | | | | F  10:51:15.140426085 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | | | F  = 68} , self = 66 , parent = Nothing , duration = 0.408831023000 , status
| | | | | | | F  = Fail , start = 2025-09-03 10:51:15.145166646 UTC , finish = 2025-09-03
| | | | | | | F  10:51:15.553997669 UTC , thread_cap_info = ("ThreadId 98", 1, False)}
| | | | | | | F  
| | | | S | | |  
| | | |   | S |  
| | | E   |   |  
| | | F   |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | F   |   |  = 12 , num_top_rules = 12 , num_weak_rules = 22 , alphabet_size = 20 ,
| | | F   |   |  total_length = 124} , self = 73 , parent = Nothing , duration = 0.372853067000
| | | F   |   |  , status = Fail , start = 2025-09-03 10:51:15.524149531 UTC , finish =
| | | F   |   |  2025-09-03 10:51:15.897002598 UTC , thread_cap_info = ("ThreadId 105",
| | | F   |   |  0, False)}
| | | F   |   |  
| | | | F |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | F |   |  = 12 , num_top_rules = 12 , num_weak_rules = 22 , alphabet_size = 20 ,
| | | | F |   |  total_length = 124} , self = 74 , parent = Nothing , duration = 0.357708802000
| | | | F |   |  , status = Fail , start = 2025-09-03 10:51:15.547255018 UTC , finish =
| | | | F |   |  2025-09-03 10:51:15.90496382 UTC , thread_cap_info = ("ThreadId 106", 0,
| | | | F |   |  False)}
| | | | F |   |  
| | | | | |   F  
| | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | F    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | F    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | | | F    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | F    = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | F    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | | F    = 68} , self = 75 , parent = Nothing , duration = 0.465281556000 , status
| | | | | | F    = Fail , start = 2025-09-03 10:51:15.561614185 UTC , finish = 2025-09-03
| | | | | | F    10:51:16.026895741 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
| | | | | | F    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F  = Size { num_rules = 395 , num_strict_rules = 395 , num_top_rules = 0 ,
| | | | | | | F  num_weak_rules = 0 , alphabet_size = 155 , total_length = 2549} , self
| | | | | | | F  = 99 , parent = Nothing , duration = 20.252999273000 , status = Fail ,
| | | | | | | F  start = 2025-09-03 10:51:15.785779918 UTC , finish = 2025-09-03 10:51:36.038779191
| | | | | | | F  UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | | | | | | F  
F | | | | | | |  
F | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
F | | | | | | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size
F | | | | | | |  = 17 , total_length = 113} , self = 89 , parent = Nothing , duration =
F | | | | | | |  2.944740183000 , status = Fail , start = 2025-09-03 10:51:15.822077619
F | | | | | | |  UTC , finish = 2025-09-03 10:51:18.766817802 UTC , thread_cap_info = ("ThreadId
F | | | | | | |  119", 0, False)}
F | | | | | | |  
| | | F | | | |  
| | | S | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | |  = 34 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 22
| | | S | | | |  , alphabet_size = 20 , total_length = 124} , self = 80 , parent = Nothing
| | | S | | | |  , duration = 0.649338617000 , status = Success , start = 2025-09-03 10:51:15.900739507
| | | S | | | |  UTC , finish = 2025-09-03 10:51:16.550078124 UTC , thread_cap_info = ("ThreadId
| | | S | | | |  120", 0, False)}
| | | S | | | |  
| | | | F | | |  
| | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | | E | | |  , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 22 , alphabet_size
| | | | E | | |  = 20 , total_length = 124} , self = 82 , parent = Nothing , duration =
| | | | E | | |  0.840009954000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | | |  10:51:15.960695839 UTC , finish = 2025-09-03 10:51:16.800705793 UTC , thread_cap_info
| | | | E | | |  = ("ThreadId 121", 0, False)}
| | | | E | | |  
| | | | | | F |  
| | S | | |   |  
| | F | | |   |  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | F | | |   |  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | F | | |   |  num_rules = 333 , num_strict_rules = 333 , num_top_rules = 0 , num_weak_rules
| | F | | |   |  = 0 , alphabet_size = 144 , total_length = 2127} , self = 77 , parent =
| | F | | |   |  Nothing , duration = 0.226622730000 , status = Fail , start = 2025-09-03
| | F | | |   |  10:51:16.06896588 UTC , finish = 2025-09-03 10:51:16.29558861 UTC , thread_cap_info
| | F | | |   |  = ("ThreadId 122", 1, False)}
| | F | | |   |  
| | F | | |   |  
| | E | | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 333 , num_strict_rules
| | E | | |   |  = 333 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 144 ,
| | E | | |   |  total_length = 2127} , self = 91 , parent = Nothing , duration = 3.099866702000
| | E | | |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:16.309284179
| | E | | |   |  UTC , finish = 2025-09-03 10:51:19.409150881 UTC , thread_cap_info = ("ThreadId
| | E | | |   |  126", 1, False)}
| | E | | |   |  
| | | | | | E |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E |  = False\n , verbose = False}" , input_size = Size { num_rules = 333 , num_strict_rules
| | | | | | E |  = 333 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 144 ,
| | | | | | E |  total_length = 2127} , self = 92 , parent = Nothing , duration = 3.099336128000
| | | | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:16.321411028
| | | | | | E |  UTC , finish = 2025-09-03 10:51:19.420747156 UTC , thread_cap_info = ("ThreadId
| | | | | | E |  128", 1, False)}
| | | | | | E |  
| | | S | | | |  
| | |   E | | |  
| | | F   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | F   | | |  = 11 , num_top_rules = 11 , num_weak_rules = 22 , alphabet_size = 20 ,
| | | F   | | |  total_length = 120} , self = 88 , parent = Nothing , duration = 0.184850349000
| | | F   | | |  , status = Fail , start = 2025-09-03 10:51:16.812223906 UTC , finish =
| | | F   | | |  2025-09-03 10:51:16.997074255 UTC , thread_cap_info = ("ThreadId 136",
| | | F   | | |  0, False)}
| | | F   | | |  
| | | | F | | |  CNF 57537 vars 266983 clauses
Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |  = 33 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 22
| | | | F | | |  , alphabet_size = 20 , total_length = 120} , self = 90 , parent = Nothing
| | | | F | | |  , duration = 1.961455959000 , status = Fail , start = 2025-09-03 10:51:16.889759455
| | | | F | | |  UTC , finish = 2025-09-03 10:51:18.851215414 UTC , thread_cap_info = ("ThreadId
| | | | F | | |  138", 0, False)}
| | | | F | | |  
| | | F | | | |  
| | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | E | | | |  , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 22 , alphabet_size
| | | E | | | |  = 20 , total_length = 120} , self = 95 , parent = Nothing , duration =
| | | E | | | |  9.048162188000 , status = Except "<<timeout>>" , start = 2025-09-03 10:51:17.002909174
| | | E | | | |  UTC , finish = 2025-09-03 10:51:26.051071362 UTC , thread_cap_info = ("ThreadId
| | | E | | | |  140", 0, False)}
| | | E | | | |  
F | | | | | | |  
F | | | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | |  = 29 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 ,
F | | | | | | |  alphabet_size = 17 , total_length = 113} , self = 97 , parent = Nothing
F | | | | | | |  , duration = 7.920421619000 , status = Fail , start = 2025-09-03 10:51:18.78606118
F | | | | | | |  UTC , finish = 2025-09-03 10:51:26.706482799 UTC , thread_cap_info = ("ThreadId
F | | | | | | |  143", 0, False)}
F | | | | | | |  
| | | | F | | |  
| | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | F | | |  , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 22 , alphabet_size
| | | | F | | |  = 20 , total_length = 120} , self = 93 , parent = Nothing , duration =
| | | | F | | |  3.994495768000 , status = Fail , start = 2025-09-03 10:51:18.904931673
| | | | F | | |  UTC , finish = 2025-09-03 10:51:22.899427441 UTC , thread_cap_info = ("ThreadId
| | | | F | | |  144", 0, False)}
| | | | F | | |  
| | E | | | | |  
| |   | | | E |  
| |   | F |   |  
| | F |   |   |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   |   |  = 33 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 22
| | F |   |   |  , alphabet_size = 20 , total_length = 120} , self = 96 , parent = Nothing
| | F |   |   |  , duration = 3.483806353000 , status = Fail , start = 2025-09-03 10:51:22.899481874
| | F |   |   |  UTC , finish = 2025-09-03 10:51:26.383288227 UTC , thread_cap_info = ("ThreadId
| | F |   |   |  150", 0, False)}
| | F |   |   |  
| | | |   E   |  
| | | | E     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E     |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
| | | | E     |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size
| | | | E     |  = 17 , total_length = 113} , self = 98 , parent = Nothing , duration =
| | | | E     |  12.062210834000 , status = Except "<<timeout>>" , start = 2025-09-03 10:51:23.763535758
| | | | E     |  UTC , finish = 2025-09-03 10:51:35.825746592 UTC , thread_cap_info = ("ThreadId
| | | | E     |  153", 0, False)}
| | | | E     |  
| | | E |     |  
| | | E |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |     |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | E |     |  , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 22 , alphabet_size
| | | E |     |  = 20 , total_length = 120} , self = 101 , parent = Nothing , duration =
| | | E |     |  12.093781608000 , status = Except "<<timeout>>" , start = 2025-09-03 10:51:26.065990755
| | | E |     |  UTC , finish = 2025-09-03 10:51:38.159772363 UTC , thread_cap_info = ("ThreadId
| | | E |     |  155", 0, False)}
| | | E |     |  
| | F | |     |  
F |   | |     |  
  |   | E     |  
  |   |       F  
  F   |          
S     |          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S     |          , closure = Forward\n , start_strict_only = True\n , max_closure_length
S     |          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S     |          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S     |          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S     |          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S     |          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S     |          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S     |          = True})" , input_size = Size { num_rules = 22 , num_strict_rules = 22
S     |          , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
S     |          = 84} , self = 102 , parent = Nothing , duration = 0.855156311000 , status
S     |          = Success , start = 2025-09-03 10:51:37.695472307 UTC , finish = 2025-09-03
S     |          10:51:38.550628618 UTC , thread_cap_info = ("ThreadId 164", 3, False)}
S     |          
|     E          
S                
