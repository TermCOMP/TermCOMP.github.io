last 392 length 1595
CNF 392 vars 1595 clauses
last 403 length 1632
CNF 403 vars 1632 clauses
last 332 length 1278
last 377 length 1484
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1454, clauses: 5163
CNF 377 vars 1484 clauses
CNF 332 vars 1278 clauses
last 1454 length 5163
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3954, clauses: 16151
CNF 1454 vars 5163 clauses
last 3954 length 16151
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1454, clauses: 5169
last 1454 length 5169
CNF 3954 vars 16151 clauses
CNF 1454 vars 5169 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1454, clauses: 5163, status: Unsatisfied, time: 0.087775775s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 16157
last 3956 length 16157
CNF 3956 vars 16157 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1454, clauses: 5169, status: Unsatisfied, time: 0.115594023s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2453, clauses: 9672
last 2453 length 9672
CNF 2453 vars 9672 clauses
last 4304 length 19271
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2459, clauses: 9698
last 5224 length 25516
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3954, clauses: 16151, status: Unsatisfied, time: 0.295318262s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 16157, status: Unsatisfied, time: 0.219816094s
CNF 4304 vars 19271 clauses
last 2459 length 9698
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2453, clauses: 9672, status: Unsatisfied, time: 0.246403175s
CNF 5224 vars 25516 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2376, clauses: 8911
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2376, clauses: 8927
CNF 2459 vars 9698 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6679, clauses: 27368
last 2376 length 8911
last 2376 length 8927
last 6679 length 27368
CNF 2376 vars 8911 clauses
CNF 2376 vars 8927 clauses
[Info] pool sizes (success) 93620 seen 23965 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2459, clauses: 9698, status: Unsatisfied, time: 0.816340687s
CNF 6679 vars 27368 clauses
**************************************************last 11111 length 52089

Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2376, clauses: 8927, status: Unsatisfied, time: 0.568219727s
CNF 11111 vars 52089 clauses
last 11241 length 52633
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2376, clauses: 8911, status: Unsatisfied, time: 0.679325281s
summarylast 15804 length 68189

Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6688, clauses: 27413
CNF 11241 vars 52633 clauses
**************************************************last 6688 length 27413

CNF 15804 vars 68189 clauses
SRS with 3 rules on 3 letters       looping derivation
from
  [b, b, a, b, a, b, a, b, c, c]
to
  [b, b, b, a, b, a, b, a, b, c, c, a, a]
via 13 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b, c] -> [c, c, a, a] {- Input 1 -}
  [c, c] -> [b] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [b, b, a, b, a, b, a, b, c, c], via = [(Step   { rule = 1, position = 6}, [b, b, a, b, a, b, c, c, a, a, c]), (Step   { rule = 0, position = 9}, [b, b, a, b, a, b, c, c, a, b, c]), (Step   { rule = 1, position = 4}, [b, b, a, b, c, c, a, a, c, a, b, c]), (Step   { rule = 0, position = 7}, [b, b, a, b, c, c, a, b, c, a, b, c]), (Step   { rule = 1, position = 6}, [b, b, a, b, c, c, c, c, a, a, a, b, c]), (Step   { rule = 2, position = 5}, [b, b, a, b, c, b, c, a, a, a, b, c]), (Step   { rule = 0, position = 8}, [b, b, a, b, c, b, c, a, b, a, b, c]), (Step   { rule = 1, position = 2}, [b, b, c, c, a, a, b, c, a, b, a, b, c]), (Step   { rule = 2, position = 2}, [b, b, b, a, a, b, c, a, b, a, b, c]), (Step   { rule = 1, position = 4}, [b, b, b, a, c, c, a, a, a, b, a, b, c]), (Step   { rule = 2, position = 4}, [b, b, b, a, b, a, a, a, b, a, b, c]), (Step   { rule = 0, position = 6}, [b, b, b, a, b, a, b, a, b, a, b, c]), (Step   { rule = 1, position = 9}, [b, b, b, a, b, a, b, a, b, c, c, a, a])], to = [b, b, b, a, b, a, b, a, b, c, c, a, a]}

**************************************************
skeleton: (3,3)\Loop{13}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 6688 vars 27413 clauses

Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.834578495000
  min duration 0.040798434000
  total durat. 1.399814711000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.608151880000
  min duration 0.563061402000
  total durat. 1.171213282000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.260484768000
  min duration 0.625553050000
  total durat. 1.886037818000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 21}
    , self = 86
    , parent = Nothing
    , duration = 1.260484768000
    , status = Fail
    , start = 2025-09-03 11:25:32.283901219 UTC
    , finish = 2025-09-03 11:25:33.544385987 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.451212377000
  min duration 1.451212377000
  total durat. 1.451212377000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 85
    , parent = Nothing
    , duration = 1.451212377000
    , status = Success
    , start = 2025-09-03 11:25:32.014375222 UTC
    , finish = 2025-09-03 11:25:33.465587599 UTC
    , thread_cap_info = ("ThreadId 39", 3, False)}
**************************************************
S                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
S                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
S                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
S                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
S                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
S                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
S                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S                  = 12} , self = 85 , parent = Nothing , duration = 1.451212377000 , status
S                  = Success , start = 2025-09-03 11:25:32.014375222 UTC , finish = 2025-09-03
S                  11:25:33.465587599 UTC , thread_cap_info = ("ThreadId 39", 3, False)}
S                  
| F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| F                = 4 , total_length = 21} , self = 55 , parent = Nothing , duration = 0.125620377000
| F                , status = Fail , start = 2025-09-03 11:25:32.086735393 UTC , finish =
| F                2025-09-03 11:25:32.21235577 UTC , thread_cap_info = ("ThreadId 82", 1,
| F                False)}
| F                
| | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | F              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F              = 4 , total_length = 21} , self = 66 , parent = Nothing , duration = 0.563061402000
| | F              , status = Fail , start = 2025-09-03 11:25:32.100096733 UTC , finish =
| | F              2025-09-03 11:25:32.663158135 UTC , thread_cap_info = ("ThreadId 93", 1,
| | F              False)}
| | F              
| | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F            = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | F            = 0 , alphabet_size = 9 , total_length = 162} , self = 70 , parent = Nothing
| | | F            , duration = 0.834578495000 , status = Fail , start = 2025-09-03 11:25:32.103536066
| | | F            UTC , finish = 2025-09-03 11:25:32.938114561 UTC , thread_cap_info = ("ThreadId
| | | F            94", 0, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F          = 162} , self = 68 , parent = Nothing , duration = 0.775292803000 , status
| | | | F          = Fail , start = 2025-09-03 11:25:32.103538962 UTC , finish = 2025-09-03
| | | | F          11:25:32.878831765 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F        = 162} , self = 77 , parent = Nothing , duration = 0.821837789000 , status
| | | | | F        = Fail , start = 2025-09-03 11:25:32.123270121 UTC , finish = 2025-09-03
| | | | | F        11:25:32.94510791 UTC , thread_cap_info = ("ThreadId 89", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F      = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | | | | F      = 0 , alphabet_size = 9 , total_length = 162} , self = 65 , parent = Nothing
| | | | | | F      , duration = 0.468969086000 , status = Fail , start = 2025-09-03 11:25:32.123273582
| | | | | | F      UTC , finish = 2025-09-03 11:25:32.592242668 UTC , thread_cap_info = ("ThreadId
| | | | | | F      96", 0, False)}
| | | | | | F      
| | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F    = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | F    = 4 , total_length = 21} , self = 58 , parent = Nothing , duration = 0.135123963000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:25:32.14217392 UTC , finish = 2025-09-03
| | | | | | | F    11:25:32.277297883 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F  = 4 , total_length = 21} , self = 67 , parent = Nothing , duration = 0.608151880000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:25:32.155006681 UTC , finish =
| | | | | | | | F  2025-09-03 11:25:32.763158561 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | F  1, False)}
| | | | | | | | F  
| F | | | | | | |  
| F | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| F | | | | | | |  = 4 , total_length = 21} , self = 69 , parent = Nothing , duration = 0.625553050000
| F | | | | | | |  , status = Fail , start = 2025-09-03 11:25:32.258082963 UTC , finish =
| F | | | | | | |  2025-09-03 11:25:32.883636013 UTC , thread_cap_info = ("ThreadId 104",
| F | | | | | | |  1, False)}
| F | | | | | | |  
| | | | | | | F |  
| | | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | F |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | F |  = 4 , total_length = 21} , self = 86 , parent = Nothing , duration = 1.260484768000
| | | | | | | F |  , status = Fail , start = 2025-09-03 11:25:32.283901219 UTC , finish =
| | | | | | | F |  2025-09-03 11:25:33.544385987 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | F |  1, False)}
| | | | | | | F |  
| | | | | | F | |  
| | F | | |   | |  
| |   | | |   | F  
| |   | F |   |    
| F   |   |   |    
|     F   |   |    
|         F   |    
S             |    
              F    
