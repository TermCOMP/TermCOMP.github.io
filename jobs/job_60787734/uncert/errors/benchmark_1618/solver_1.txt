last 6934 length 45254
CNF 6934 vars 45254 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3292, clauses: 12541
last 3292 length 12541
CNF 3292 vars 12541 clauses
last 8772 length 89815
CNF 8772 vars 89815 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 174 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a, a, b, a, b, a, a, b] -> [ a , b , a , a , b , a , b , a , a , a , b , a , b , a ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, a, a, b, a, b, a, a, b] -> [ a , a , b , a , b , a , a , a , b , a , b , a ] {- Dropped 2 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [b, a, a, b, a, b, a, a, a] -> [ a , b , a , b , a , a , a , b , a , b , a , a ] {- Mirror (Dropped 2 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 174 states

   property Termination
has value Just True
for SRS
  [a, a, a, b, a, b, a, a, b] -> [ a , a , b , a , b , a , a , a , b , a , b , a ] {- Dropped 2 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a, b, a, b, a, a, a] -> [ a , b , a , b , a , a , a , b , a , b , a , a ] {- Mirror (Dropped 2 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 174 states

**************************************************
skeleton: (1,2)\Drop{2}{0}\Mirror(1,2)\Rfcmatchbound{2}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.392402584000
  min duration 2.392402584000
  total durat. 2.392402584000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 54}
    , self = 102
    , parent = Nothing
    , duration = 2.392402584000
    , status = Fail
    , start = 2025-09-03 12:28:48.252935398 UTC
    , finish = 2025-09-03 12:28:50.645337982 UTC
    , thread_cap_info = ("ThreadId 64", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.420699690000
  min duration 1.420699690000
  total durat. 1.420699690000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 130}
    , self = 95
    , parent = Nothing
    , duration = 1.420699690000
    , status = Fail
    , start = 2025-09-03 12:28:48.643903763 UTC
    , finish = 2025-09-03 12:28:50.064603453 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 7
  max duration 0.594066137000
  min duration 0.145904274000
  total durat. 2.736975017000
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 0.960386998000
  min duration 0.724060733000
  total durat. 1.684447731000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.662809205000
  min duration 0.902472557000
  total durat. 5.347771381000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 104
    , parent = Nothing
    , duration = 1.382485207000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:49.363892039 UTC
    , finish = 2025-09-03 12:28:50.746377246 UTC
    , thread_cap_info = ("ThreadId 182", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 97
    , parent = Nothing
    , duration = 1.400004412000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:49.083898383 UTC
    , finish = 2025-09-03 12:28:50.483902795 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 100
    , parent = Nothing
    , duration = 1.662809205000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:48.92389354 UTC
    , finish = 2025-09-03 12:28:50.586702745 UTC
    , thread_cap_info = ("ThreadId 146", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 1.399475841000
  min duration 0.834643951000
  total durat. 5.522772653000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 99
    , parent = Nothing
    , duration = 1.159978362000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:49.343924583 UTC
    , finish = 2025-09-03 12:28:50.503902945 UTC
    , thread_cap_info = ("ThreadId 181", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 98
    , parent = Nothing
    , duration = 1.179081250000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:49.304829213 UTC
    , finish = 2025-09-03 12:28:50.483910463 UTC
    , thread_cap_info = ("ThreadId 180", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 92
    , parent = Nothing
    , duration = 1.399475841000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:48.604744842 UTC
    , finish = 2025-09-03 12:28:50.004220683 UTC
    , thread_cap_info = ("ThreadId 103", 2, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 0.817986186000
  min duration 0.644507883000
  total durat. 2.215961087000
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 1.439963062000
  min duration 1.181243657000
  total durat. 3.841185229000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 93
    , parent = Nothing
    , duration = 1.181243657000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:48.842651664 UTC
    , finish = 2025-09-03 12:28:50.023895321 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 94
    , parent = Nothing
    , duration = 1.219978510000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:48.843926004 UTC
    , finish = 2025-09-03 12:28:50.063904514 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 25}
    , self = 96
    , parent = Nothing
    , duration = 1.439963062000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:48.843932429 UTC
    , finish = 2025-09-03 12:28:50.283895491 UTC
    , thread_cap_info = ("ThreadId 145", 2, False)}
**************************************************
F                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                  = 25} , self = 70 , parent = Nothing , duration = 0.644507883000 , status
F                                  = Fail , start = 2025-09-03 12:28:48.250359122 UTC , finish = 2025-09-03
F                                  12:28:48.894867005 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                                  
| F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                                = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| F                                = 0 , alphabet_size = 3 , total_length = 54} , self = 44 , parent = Nothing
| F                                , duration = 0.291004951000 , status = Fail , start = 2025-09-03 12:28:48.251547707
| F                                UTC , finish = 2025-09-03 12:28:48.542552658 UTC , thread_cap_info = ("ThreadId
| F                                54", 1, False)}
| F                                
| | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | F                              = 2 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                              = 54} , self = 102 , parent = Nothing , duration = 2.392402584000 , status
| | F                              = Fail , start = 2025-09-03 12:28:48.252935398 UTC , finish = 2025-09-03
| | F                              12:28:50.645337982 UTC , thread_cap_info = ("ThreadId 64", 0, False)}
| | F                              
| | | F                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                            = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | F                            = 0 , alphabet_size = 3 , total_length = 54} , self = 46 , parent = Nothing
| | | F                            , duration = 0.359786363000 , status = Fail , start = 2025-09-03 12:28:48.263901942
| | | F                            UTC , finish = 2025-09-03 12:28:48.623688305 UTC , thread_cap_info = ("ThreadId
| | | F                            56", 1, False)}
| | | F                            
| | | | F                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | F                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | F                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | F                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | F                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | F                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | F                          = 23} , self = 83 , parent = Nothing , duration = 0.817986186000 , status
| | | | F                          = Fail , start = 2025-09-03 12:28:48.404589838 UTC , finish = 2025-09-03
| | | | F                          12:28:49.222576024 UTC , thread_cap_info = ("ThreadId 77", 2, False)}
| | | | F                          
| | | | | F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | F                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | F                        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | F                        = 23} , self = 52 , parent = Nothing , duration = 0.147781865000 , status
| | | | | F                        = Fail , start = 2025-09-03 12:28:48.476142939 UTC , finish = 2025-09-03
| | | | | F                        12:28:48.623924804 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
| | | | | F                        
| | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                      = 0 , alphabet_size = 2 , total_length = 23} , self = 71 , parent = Nothing
| | | | | | F                      , duration = 0.473083467000 , status = Fail , start = 2025-09-03 12:28:48.476148157
| | | | | | F                      UTC , finish = 2025-09-03 12:28:48.949231624 UTC , thread_cap_info = ("ThreadId
| | | | | | F                      89", 2, False)}
| | | | | | F                      
| | | | | | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                    = 0 , alphabet_size = 2 , total_length = 23} , self = 65 , parent = Nothing
| | | | | | | F                    , duration = 0.338405047000 , status = Fail , start = 2025-09-03 12:28:48.484080275
| | | | | | | F                    UTC , finish = 2025-09-03 12:28:48.822485322 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                    91", 2, False)}
| | | | | | | F                    
| | | | | | | | F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | F                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | F                  = 21} , self = 84 , parent = Nothing , duration = 0.753467018000 , status
| | | | | | | | F                  = Fail , start = 2025-09-03 12:28:48.503904373 UTC , finish = 2025-09-03
| | | | | | | | F                  12:28:49.257371391 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | | | | | | F                  
| F | | | | | | |                  
| E | | | | | | |                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | |                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | |                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | |                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | |                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | |                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | |                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | |                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | |                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | |                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | |                  = 23} , self = 92 , parent = Nothing , duration = 1.399475841000 , status
| E | | | | | | |                  = Except "AsyncCancelled" , start = 2025-09-03 12:28:48.604744842 UTC ,
| E | | | | | | |                  finish = 2025-09-03 12:28:50.004220683 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |                  103", 2, False)}
| E | | | | | | |                  
| | | F | | | | |                  
| | |   | F | | |                  
| | | F |   | | |                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |   | | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |   | | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F |   | | |                  = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F |   | | |                  = 130} , self = 95 , parent = Nothing , duration = 1.420699690000 , status
| | | F |   | | |                  = Fail , start = 2025-09-03 12:28:48.643903763 UTC , finish = 2025-09-03
| | | F |   | | |                  12:28:50.064603453 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | | F |   | | |                  
| | | | | F | | |                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F | | |                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F | | |                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F | | |                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F | | |                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F | | |                  = 0 , alphabet_size = 2 , total_length = 21} , self = 66 , parent = Nothing
| | | | | F | | |                  , duration = 0.145904274000 , status = Fail , start = 2025-09-03 12:28:48.684012565
| | | | | F | | |                  UTC , finish = 2025-09-03 12:28:48.829916839 UTC , thread_cap_info = ("ThreadId
| | | | | F | | |                  107", 2, False)}
| | | | | F | | |                  
| | | | | | | F |                  
| | | | | F |   |                  
| | | | | E |   |                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E |   |                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E |   |                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E |   |                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E |   |                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E |   |                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E |   |                  = 19} , self = 93 , parent = Nothing , duration = 1.181243657000 , status
| | | | | E |   |                  = Except "AsyncCancelled" , start = 2025-09-03 12:28:48.842651664 UTC ,
| | | | | E |   |                  finish = 2025-09-03 12:28:50.023895321 UTC , thread_cap_info = ("ThreadId
| | | | | E |   |                  134", 2, False)}
| | | | | E |   |                  
| | | | | | | E |                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | E |                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | E |                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | E |                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | E |                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E |                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E |                  = 17} , self = 94 , parent = Nothing , duration = 1.219978510000 , status
| | | | | | | E |                  = Except "AsyncCancelled" , start = 2025-09-03 12:28:48.843926004 UTC ,
| | | | | | | E |                  finish = 2025-09-03 12:28:50.063904514 UTC , thread_cap_info = ("ThreadId
| | | | | | | E |                  137", 2, False)}
| | | | | | | E |                  
| | | | | | | | | E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                = 25} , self = 96 , parent = Nothing , duration = 1.439963062000 , status
| | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:28:48.843932429 UTC ,
| | | | | | | | | E                finish = 2025-09-03 12:28:50.283895491 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                145", 2, False)}
| | | | | | | | | E                
F | | | | | | | | |                
E | | | | | | | | |                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | | | | | |                , closure = Backward\n , start_strict_only = True\n , max_closure_length
E | | | | | | | | |                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | | | | | |                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | | | | | |                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | | | | | |                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | | | | | |                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | | | | | |                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | | | | | |                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E | | | | | | | | |                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | | | | | | | |                = 23} , self = 100 , parent = Nothing , duration = 1.662809205000 , status
E | | | | | | | | |                = Except "AsyncCancelled" , start = 2025-09-03 12:28:48.92389354 UTC ,
E | | | | | | | | |                finish = 2025-09-03 12:28:50.586702745 UTC , thread_cap_info = ("ThreadId
E | | | | | | | | |                146", 2, False)}
E | | | | | | | | |                
| | | | | | F | | |                
| | | | | | E | | |                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E | | |                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | E | | |                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E | | |                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E | | |                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E | | |                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E | | |                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E | | |                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E | | |                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E | | |                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E | | |                = 21} , self = 88 , parent = Nothing , duration = 0.834643951000 , status
| | | | | | E | | |                = Except "AsyncCancelled" , start = 2025-09-03 12:28:48.949249099 UTC ,
| | | | | | E | | |                finish = 2025-09-03 12:28:49.78389305 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | |                147", 2, False)}
| | | | | | E | | |                
| | | | | | | | | | E              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | E              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | E              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | E              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | E              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | E              = 0 , alphabet_size = 2 , total_length = 17} , self = 90 , parent = Nothing
| | | | | | | | | | E              , duration = 0.960386998000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | E              = 2025-09-03 12:28:48.963982736 UTC , finish = 2025-09-03 12:28:49.924369734
| | | | | | | | | | E              UTC , thread_cap_info = ("ThreadId 156", 2, False)}
| | | | | | | | | | E              
| | | | | | | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E            = 21} , self = 97 , parent = Nothing , duration = 1.400004412000 , status
| | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:28:49.083898383 UTC ,
| | | | | | | | | | | E            finish = 2025-09-03 12:28:50.483902795 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E            166", 2, False)}
| | | | | | | | | | | E            
| | | | | | | | | | | | F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | F          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | F          = 19} , self = 85 , parent = Nothing , duration = 0.184068703000 , status
| | | | | | | | | | | | F          = Fail , start = 2025-09-03 12:28:49.139852507 UTC , finish = 2025-09-03
| | | | | | | | | | | | F          12:28:49.32392121 UTC , thread_cap_info = ("ThreadId 168", 2, False)}
| | | | | | | | | | | | F          
| | | | | | | | | | | | | E        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | E        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | E        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | E        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | E        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | E        = 0 , alphabet_size = 2 , total_length = 19} , self = 89 , parent = Nothing
| | | | | | | | | | | | | E        , duration = 0.724060733000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | E        = 2025-09-03 12:28:49.139862387 UTC , finish = 2025-09-03 12:28:49.86392312
| | | | | | | | | | | | | E        UTC , thread_cap_info = ("ThreadId 169", 2, False)}
| | | | | | | | | | | | | E        
| | | | | | | | | | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | F      = 0 , alphabet_size = 2 , total_length = 25} , self = 87 , parent = Nothing
| | | | | | | | | | | | | | F      , duration = 0.534724778000 , status = Fail , start = 2025-09-03 12:28:49.184876301
| | | | | | | | | | | | | | F      UTC , finish = 2025-09-03 12:28:49.719601079 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | F      177", 2, False)}
| | | | | | | | | | | | | | F      
| | | | F | | | | | | | | | |      
| | | |   | | | F | | | | | |      
| | | | E | | |   | | | | | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E | | |   | | | | | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E | | |   | | | | | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E | | |   | | | | | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E | | |   | | | | | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E | | |   | | | | | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E | | |   | | | | | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E | | |   | | | | | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E | | |   | | | | | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E | | |   | | | | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E | | |   | | | | | |      = 19} , self = 98 , parent = Nothing , duration = 1.179081250000 , status
| | | | E | | |   | | | | | |      = Except "AsyncCancelled" , start = 2025-09-03 12:28:49.304829213 UTC ,
| | | | E | | |   | | | | | |      finish = 2025-09-03 12:28:50.483910463 UTC , thread_cap_info = ("ThreadId
| | | | E | | |   | | | | | |      180", 2, False)}
| | | | E | | |   | | | | | |      
| | | | | | | |   | | | F | |      
| | | | | | | | E | | |   | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | E | | |   | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | E | | |   | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | E | | |   | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | E | | |   | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | E | | |   | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | E | | |   | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | E | | |   | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | E | | |   | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E | | |   | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E | | |   | |      = 17} , self = 99 , parent = Nothing , duration = 1.159978362000 , status
| | | | | | | | E | | |   | |      = Except "AsyncCancelled" , start = 2025-09-03 12:28:49.343924583 UTC ,
| | | | | | | | E | | |   | |      finish = 2025-09-03 12:28:50.503902945 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | | |   | |      181", 2, False)}
| | | | | | | | E | | |   | |      
| | | | | | | | | | | | E | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E | |      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E | |      = 17} , self = 104 , parent = Nothing , duration = 1.382485207000 , status
| | | | | | | | | | | | E | |      = Except "AsyncCancelled" , start = 2025-09-03 12:28:49.363892039 UTC ,
| | | | | | | | | | | | E | |      finish = 2025-09-03 12:28:50.746377246 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E | |      182", 2, False)}
| | | | | | | | | | | | E | |      
| | | | | | | | | | | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | F    = 0 , alphabet_size = 2 , total_length = 25} , self = 91 , parent = Nothing
| | | | | | | | | | | | | | | F    , duration = 0.594066137000 , status = Fail , start = 2025-09-03 12:28:49.403954812
| | | | | | | | | | | | | | | F    UTC , finish = 2025-09-03 12:28:49.998020949 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | F    183", 2, False)}
| | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E  = 25} , self = 101 , parent = Nothing , duration = 0.949593249000 , status
| | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:28:49.67517271 UTC ,
| | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:28:50.624765959 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E  187", 2, False)}
| | | | | | | | | | | | | | | | E  
| | | | | | | | | | | | | | F | |  
| | | | | | E | | | | | | |   | |  
| | | | | | E | | | | | | |   | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E | | | | | | |   | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | E | | | | | | |   | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E | | | | | | |   | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E | | | | | | |   | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E | | | | | | |   | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E | | | | | | |   | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E | | | | | | |   | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E | | | | | | |   | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E | | | | | | |   | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E | | | | | | |   | |  = 19} , self = 103 , parent = Nothing , duration = 0.902472557000 , status
| | | | | | E | | | | | | |   | |  = Except "AsyncCancelled" , start = 2025-09-03 12:28:49.843898079 UTC ,
| | | | | | E | | | | | | |   | |  finish = 2025-09-03 12:28:50.746370636 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | | | | | |   | |  190", 2, False)}
| | | | | | E | | | | | | |   | |  
| | | | | | | | | | | | | E   | |  
| | | | | | | | | | E | |     | |  
| | | | | | | | | |   | |     F |  
| E | | | | | | | |   | |       |  
|   | | | E | | | |   | |       |  
|   | | |   | E | |   | |       |  
|   | F |   |   | |   | |       |  
|   |   |   |   | E   | |       |  
|   |   |   |   |     E |       |  
|   |   E   |   |       |       |  
|   |       |   E       |       |  
E   |       |           |       |  
    |       |           |       E  
    F       |           |          
            E           |          
                        E          
