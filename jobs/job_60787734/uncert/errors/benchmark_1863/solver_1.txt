last 1089 length 4479
CNF 1089 vars 4479 clauses
last 1124 length 4504
CNF 1124 vars 4504 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4346, clauses: 15540
last 4346 length 15540
last 1174 length 4780
CNF 4346 vars 15540 clauses
CNF 1174 vars 4780 clauses
last 1180 length 4926
CNF 1180 vars 4926 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4337, clauses: 15567
last 4337 length 15567
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15723, clauses: 65485
CNF 4337 vars 15567 clauses
last 15723 length 65485
CNF 15723 vars 65485 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15721, clauses: 65489
last 15721 length 65489
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15723, clauses: 65485, status: Satisfied, time: 0.403112159s
CNF 15721 vars 65489 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 1080 length 4330
last 1031 length 4247
CNF 1080 vars 4330 clauses
CNF 1031 vars 4247 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15721, clauses: 65489, status: Satisfied, time: 0.140356041s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4040, clauses: 14403
last 4040 length 14403
CNF 4040 vars 14403 clauses
last 1090 length 4410
CNF 1090 vars 4410 clauses
last 1099 length 4582
CNF 1099 vars 4582 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4040, clauses: 14403, status: Satisfied, time: 0.206881748s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4031, clauses: 14394
last 4031 length 14394
CNF 4031 vars 14394 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4031, clauses: 14394, status: Satisfied, time: 0.045713984s
**************************************************
summary
**************************************************
SRS with 9 rules on 6 letters       mirror
SRS with 9 rules on 6 letters       context
SRS with 14 rules on 6 letters       mirror
SRS with 14 rules on 6 letters       DP
SRS with 18 strict rules and 14 weak rules on 10 letters       weights
SRS with 4 strict rules and 14 weak rules on 9 letters       EDG
3 sub-proofs
  1 SRS with 1 strict rules and 14 weak rules on 7 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 2 strict rules and 14 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 14 weak rules on 7 letters       EDG
  SRS with 1 strict rules and 14 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 14 weak rules on 6 letters       EDG

  3 SRS with 1 strict rules and 14 weak rules on 7 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [r1, a] -> [a, a, a, r1] {- Input 0 -}
  [r2, a] -> [a, a, a, r2] {- Input 1 -}
  [a, l1] -> [l1, a, a, a] {- Input 2 -}
  [a, a, l2] -> [l2, a, a] {- Input 3 -}
  [r1, b] -> [l1, b] {- Input 4 -}
  [r2, b] -> [l2, a, b] {- Input 5 -}
  [b, l1] -> [b, r2] {- Input 6 -}
  [b, l2] -> [b, r1] {- Input 7 -}
  [a, a] -> [] {- Input 8 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, r1] -> [r1, a, a, a] {- Mirror (Input 0) -}
  [a, r2] -> [r2, a, a, a] {- Mirror (Input 1) -}
  [l1, a] -> [a, a, a, l1] {- Mirror (Input 2) -}
  [l2, a, a] -> [a, a, l2] {- Mirror (Input 3) -}
  [b, r1] -> [b, l1] {- Mirror (Input 4) -}
  [b, r2] -> [b, a, l2] {- Mirror (Input 5) -}
  [l1, b] -> [r2, b] {- Mirror (Input 6) -}
  [l2, b] -> [r1, b] {- Mirror (Input 7) -}
  [a, a] -> [] {- Mirror (Input 8) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, r1] -> [r1, a, a, a] {- Mirror (Input 0) -}
  [a, r2] -> [r2, a, a, a] {- Mirror (Input 1) -}
  [l1, a] -> [a, a, a, l1] {- Mirror (Input 2) -}
  [l2, a, a] -> [a, a, l2] {- Mirror (Input 3) -}
  [b, r1] -> [b, l1] {- Mirror (Input 4) -}
  [b, r2] -> [b, a, l2] {- Mirror (Input 5) -}
  [l1, b] -> [r2, b] {- Mirror (Input 6) -}
  [l2, b] -> [r1, b] {- Mirror (Input 7) -}
  [r1, a, a] -> [r1] {- Mirror (Input 8) -}
  [l1, a, a] -> [l1] {- Mirror (Input 8) -}
  [l2, a, a] -> [l2] {- Mirror (Input 8) -}
  [a, a, a] -> [a] {- Mirror (Input 8) -}
  [b, a, a] -> [b] {- Mirror (Input 8) -}
  [r2, a, a] -> [r2] {- Mirror (Input 8) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [r1, a] -> [a, a, a, r1] {- Input 0 -}
  [r2, a] -> [a, a, a, r2] {- Input 1 -}
  [a, l1] -> [l1, a, a, a] {- Input 2 -}
  [a, a, l2] -> [l2, a, a] {- Input 3 -}
  [r1, b] -> [l1, b] {- Input 4 -}
  [r2, b] -> [l2, a, b] {- Input 5 -}
  [b, l1] -> [b, r2] {- Input 6 -}
  [b, l2] -> [b, r1] {- Input 7 -}
  [a, a, r1] -> [r1] {- Input 8 -}
  [a, a, l1] -> [l1] {- Input 8 -}
  [a, a, l2] -> [l2] {- Input 8 -}
  [a, a, a] -> [a] {- Input 8 -}
  [a, a, b] -> [b] {- Input 8 -}
  [a, a, r2] -> [r2] {- Input 8 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
  [r1#, a] |-> [r1#] {- DP (Top 3) (Input 0) -}
  [r1#, a] |-> [a#, r1] {- DP (Top 2) (Input 0) -}
  [r1#, a] |-> [a#, a, r1] {- DP (Top 1) (Input 0) -}
  [r1#, a] |-> [a#, a, a, r1] {- DP (Top 0) (Input 0) -}
  [a#, l1] |-> [a#] {- DP (Top 3) (Input 2) -}
  [a#, l1] |-> [a#, a] {- DP (Top 2) (Input 2) -}
  [a#, l1] |-> [a#, a, a] {- DP (Top 1) (Input 2) -}
  [a#, a, l2] |-> [a#] {- DP (Top 2) (Input 3) -}
  [a#, a, l2] |-> [a#, a] {- DP (Top 1) (Input 3) -}
  [b#, l1] |-> [b#, r2] {- DP (Top 0) (Input 6) -}
  [b#, l1] |-> [r2#] {- DP (Top 1) (Input 6) -}
  [b#, l2] |-> [r1#] {- DP (Top 1) (Input 7) -}
  [b#, l2] |-> [b#, r1] {- DP (Top 0) (Input 7) -}
  [r2#, a] |-> [a#, a, a, r2] {- DP (Top 0) (Input 1) -}
  [r2#, a] |-> [a#, a, r2] {- DP (Top 1) (Input 1) -}
  [r2#, a] |-> [a#, r2] {- DP (Top 2) (Input 1) -}
  [r2#, a] |-> [r2#] {- DP (Top 3) (Input 1) -}
  [r2#, b] |-> [a#, b] {- DP (Top 1) (Input 5) -}
reason
  (r1, 1/1)
  (l1, 1/1)
  (l2, 1/1)
  (a, 0/1)
  (b, 0/1)
  (r2, 1/1)
  (r1#, 2/1)
  (a#, 0/1)
  (b#, 2/1)
  (r2#, 2/1)
   property Termination
has value Just True
for SRS
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
  [r1#, a] |-> [r1#] {- DP (Top 3) (Input 0) -}
  [b#, l1] |-> [b#, r2] {- DP (Top 0) (Input 6) -}
  [b#, l2] |-> [b#, r1] {- DP (Top 0) (Input 7) -}
  [r2#, a] |-> [r2#] {- DP (Top 3) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [r1#, a] |-> [r1#] {- DP (Top 3) (Input 0) -}
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
      [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
      [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
      [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
      [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
      [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
      [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
      [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
      [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
      [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
      [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
      [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
      [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
      [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
   property Termination
has value Just True
for SRS
  [r1#, a] |-> [r1#] {- DP (Top 3) (Input 0) -}
reason
  (a, 1/1)
  (r1#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, l1] |-> [b#, r2] {- DP (Top 0) (Input 6) -}
  [b#, l2] |-> [b#, r1] {- DP (Top 0) (Input 7) -}
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
reason
  ( r1
  , Wk  / -1A 1A  0A \
        | -1A -1A -  |
        \ -   -   0A / )
  ( l1
  , Wk  / -1A 1A  0A  \
        | -1A -1A -1A |
        \ -   -   0A  / )
  ( l2
  , Wk  / 0A 2A  1A  \
        | -  -1A -2A |
        \ -  -   0A  / )
  ( a
  , Wk  / -1A 1A 0A  \
        | -1A -  -2A |
        \ -   -  0A  / )
  ( b
  , Wk  / -   -  0A \
        | -1A 0A 0A |
        \ -   -  0A / )
  ( r2
  , Wk  / -1A 1A  0A  \
        | -1A -1A -1A |
        \ -   -   0A  / )
  ( b#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [b#, l1] |-> [b#, r2] {- DP (Top 0) (Input 6) -}
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, l1] |-> [b#, r2] {- DP (Top 0) (Input 6) -}
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
reason
  ( r1
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
  ( l1
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
  ( l2
  , Wk  / 21A 21A 21A - \
        | 18A 18A 21A - |
        | 18A 18A 18A - |
        \ -   -   -   - / )
  ( a
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( r2
  , Wk  / 21A 21A 21A - \
        | 18A 21A 21A - |
        | 18A 18A 18A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 1A 2A 3A - \
        | 1A 2A 3A - |
        | 1A 2A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [r2#, a] |-> [r2#] {- DP (Top 3) (Input 1) -}
  [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
  [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
  [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
  [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
  [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
  [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
  [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
  [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
  [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
  [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
  [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
  [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [r1, a] ->= [a, a, a, r1] {- DP Nontop (Input 0) -}
      [r2, a] ->= [a, a, a, r2] {- DP Nontop (Input 1) -}
      [a, l1] ->= [l1, a, a, a] {- DP Nontop (Input 2) -}
      [a, a, l2] ->= [l2, a, a] {- DP Nontop (Input 3) -}
      [r1, b] ->= [l1, b] {- DP Nontop (Input 4) -}
      [r2, b] ->= [l2, a, b] {- DP Nontop (Input 5) -}
      [b, l1] ->= [b, r2] {- DP Nontop (Input 6) -}
      [b, l2] ->= [b, r1] {- DP Nontop (Input 7) -}
      [a, a, r1] ->= [r1] {- DP Nontop (Input 8) -}
      [a, a, l1] ->= [l1] {- DP Nontop (Input 8) -}
      [a, a, l2] ->= [l2] {- DP Nontop (Input 8) -}
      [a, a, a] ->= [a] {- DP Nontop (Input 8) -}
      [a, a, b] ->= [b] {- DP Nontop (Input 8) -}
      [a, a, r2] ->= [r2] {- DP Nontop (Input 8) -}
   property Termination
has value Just True
for SRS
  [r2#, a] |-> [r2#] {- DP (Top 3) (Input 1) -}
reason
  (a, 1/1)
  (r2#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(9,6)\Context\Mirror(14,6)\Deepee(18/14,10)\Weight(4/14,9)\EDG[(1/14,7)\Usable(1,2)\Weight(0,0)\EDG[],(2/14,7)\Matrix{\ArcticBZ}{3}\EDG(1/14,7)\Matrix{\Arctic}{3}(0/14,6)\EDG[],(1/14,7)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.722548056000
  min duration 0.576574922000
  total durat. 1.299122978000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.824618403000
  min duration 0.714581312000
  total durat. 1.539199715000
**************************************************
F          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F          = False}" , input_size = Size { num_rules = 9 , num_strict_rules = 9 ,
F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
F          = 43} , self = 49 , parent = Nothing , duration = 0.337180743000 , status
F          = Fail , start = 2025-09-03 13:26:49.553172515 UTC , finish = 2025-09-03
F          13:26:49.890353258 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F          
| F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F        = Size { num_rules = 9 , num_strict_rules = 9 , num_top_rules = 0 , num_weak_rules
| F        = 0 , alphabet_size = 6 , total_length = 43} , self = 38 , parent = Nothing
| F        , duration = 0.182914128000 , status = Fail , start = 2025-09-03 13:26:49.623309537
| F        UTC , finish = 2025-09-03 13:26:49.806223665 UTC , thread_cap_info = ("ThreadId
| F        65", 0, False)}
| F        
| F        
F          
F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F          = 16 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 14 ,
F          alphabet_size = 7 , total_length = 73} , self = 72 , parent = Nothing ,
F          duration = 0.824618403000 , status = Fail , start = 2025-09-03 13:26:49.93471172
F          UTC , finish = 2025-09-03 13:26:50.759330123 UTC , thread_cap_info = ("ThreadId
F          95", 0, False)}
F          
| S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| S        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size
| S        = 7 , total_length = 73} , self = 70 , parent = Nothing , duration = 0.722548056000
| S        , status = Success , start = 2025-09-03 13:26:49.962105883 UTC , finish
| S        = 2025-09-03 13:26:50.684653939 UTC , thread_cap_info = ("ThreadId 99",
| S        0, False)}
| S        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F      = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 7 , total_length
| | F      = 74} , self = 65 , parent = Nothing , duration = 0.178089778000 , status
| | F      = Fail , start = 2025-09-03 13:26:49.964545599 UTC , finish = 2025-09-03
| | F      13:26:50.142635377 UTC , thread_cap_info = ("ThreadId 100", 0, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F    = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 7 , total_length
| | | F    = 74} , self = 66 , parent = Nothing , duration = 0.242340953000 , status
| | | F    = Fail , start = 2025-09-03 13:26:49.975360482 UTC , finish = 2025-09-03
| | | F    13:26:50.217701435 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
| | | F    
| | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | F  = False}" , input_size = Size { num_rules = 9 , num_strict_rules = 9 ,
| | | | F  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| | | | F  = 43} , self = 67 , parent = Nothing , duration = 0.183599760000 , status
| | | | F  = Fail , start = 2025-09-03 13:26:50.097768732 UTC , finish = 2025-09-03
| | | | F  13:26:50.281368492 UTC , thread_cap_info = ("ThreadId 104", 2, False)}
| | | | F  
| | F | |  
| | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |  = 16 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 14 ,
| | F | |  alphabet_size = 7 , total_length = 74} , self = 81 , parent = Nothing ,
| | F | |  duration = 0.714581312000 , status = Fail , start = 2025-09-03 13:26:50.162818501
| | F | |  UTC , finish = 2025-09-03 13:26:50.877399813 UTC , thread_cap_info = ("ThreadId
| | F | |  106", 0, False)}
| | F | |  
| | | F |  
| | | S |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | S |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size
| | | S |  = 7 , total_length = 74} , self = 78 , parent = Nothing , duration = 0.576574922000
| | | S |  , status = Success , start = 2025-09-03 13:26:50.222561988 UTC , finish
| | | S |  = 2025-09-03 13:26:50.79913691 UTC , thread_cap_info = ("ThreadId 107",
| | | S |  0, False)}
| | | S |  
| | | | F  
| | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | F  = False}" , input_size = Size { num_rules = 9 , num_strict_rules = 9 ,
| | | | F  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| | | | F  = 43} , self = 69 , parent = Nothing , duration = 0.289697030000 , status
| | | | F  = Fail , start = 2025-09-03 13:26:50.324200921 UTC , finish = 2025-09-03
| | | | F  13:26:50.613897951 UTC , thread_cap_info = ("ThreadId 109", 2, False)}
| | | | F  
| | | | F  
| S | |    
F   | |    
    | S    
S   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   |      = 15 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 14 ,
S   |      alphabet_size = 7 , total_length = 69} , self = 87 , parent = Nothing ,
S   |      duration = 0.377121612000 , status = Success , start = 2025-09-03 13:26:50.79939485
S   |      UTC , finish = 2025-09-03 13:26:51.176516462 UTC , thread_cap_info = ("ThreadId
S   |      121", 0, False)}
S   |      
| E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| E |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 14 , alphabet_size
| E |      = 7 , total_length = 69} , self = 90 , parent = Nothing , duration = 0.452441248000
| E |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:26:50.802230845
| E |      UTC , finish = 2025-09-03 13:26:51.254672093 UTC , thread_cap_info = ("ThreadId
| E |      122", 0, False)}
| E |      
| | F      
| | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F      = 1 , num_top_rules = 1 , num_weak_rules = 14 , alphabet_size = 7 , total_length
| | F      = 69} , self = 89 , parent = Nothing , duration = 0.237901193000 , status
| | F      = Fail , start = 2025-09-03 13:26:50.988177429 UTC , finish = 2025-09-03
| | F      13:26:51.226078622 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | F      
S | |      
S | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | |      = 15 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 14 ,
S | |      alphabet_size = 7 , total_length = 69} , self = 92 , parent = Nothing ,
S | |      duration = 0.128498380000 , status = Success , start = 2025-09-03 13:26:51.176541178
S | |      UTC , finish = 2025-09-03 13:26:51.305039558 UTC , thread_cap_info = ("ThreadId
S | |      131", 0, False)}
S | |      
| | F      
| E        
S          
