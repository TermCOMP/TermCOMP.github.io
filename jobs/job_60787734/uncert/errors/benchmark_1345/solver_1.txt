last 522 length 2018
last 517 length 2090
CNF 522 vars 2018 clauses
CNF 517 vars 2090 clauses
last 491 length 1901
last 501 length 2032
CNF 501 vars 2032 clauses
CNF 491 vars 1901 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8490
last 2372 length 8490
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065
CNF 2372 vars 8490 clauses
last 2266 length 8065
last 3921 length 20114
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28083
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907
last 4265 length 18963
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8490, status: Unsatisfied, time: 0.250751246s
last 5531 length 21584
CNF 2266 vars 8065 clauses
last 6801 length 28083
last 5228 length 20663
last 6755 length 27907
last 8867 length 35594
CNF 3921 vars 20114 clauses
last 8971 length 36671
CNF 4265 vars 18963 clauses
CNF 5531 vars 21584 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4294, clauses: 17019
CNF 6801 vars 28083 clauses
CNF 5228 vars 20663 clauses
CNF 6755 vars 27907 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065, status: Unsatisfied, time: 0.416404517s
CNF 8971 vars 36671 clauses
CNF 8867 vars 35594 clauses
last 4294 length 17019
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28083, status: Satisfied, time: 0.233418227s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907, status: Satisfied, time: 0.302248796s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16733
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16245, clauses: 63602
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16464, clauses: 64439
last 16245 length 63602
last 16464 length 64439
last 443 length 1715
last 492 length 1997
last 474 length 1832
last 508 length 2055
CNF 443 vars 1715 clauses
CNF 16245 vars 63602 clauses
CNF 492 vars 1997 clauses
CNF 16464 vars 64439 clauses
CNF 474 vars 1832 clauses
CNF 508 vars 2055 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42058, clauses: 176024
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7640
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42472, clauses: 177740
last 42058 length 176024
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27731
last 2160 length 7640
last 42472 length 177740
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065
last 6709 length 27731
CNF 2160 vars 7640 clauses
last 6755 length 27907
last 2266 length 8065
CNF 42058 vars 176024 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7640, status: Unsatisfied, time: 0.270487655s
CNF 6709 vars 27731 clauses
CNF 6755 vars 27907 clauses
CNF 42472 vars 177740 clauses
CNF 2266 vars 8065 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4144, clauses: 16447
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27731, status: Satisfied, time: 0.404995551s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907, status: Satisfied, time: 0.48037394s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065, status: Unsatisfied, time: 0.456700592s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, c, c] {- Input 0 -}
  [c, a] -> [] {- Input 1 -}
  [c, b] -> [a, a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, c, c] {- Input 0 -}
  [a, c, a] -> [a] {- Input 1 -}
  [b, c, a] -> [b] {- Input 1 -}
  [c, c, a] -> [c] {- Input 1 -}
  [c, b] -> [a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, c, b, a] {- Mirror (Input 0) -}
  [a, c, a] -> [a] {- Mirror (Input 1) -}
  [a, c, b] -> [b] {- Mirror (Input 1) -}
  [a, c, c] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [a, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A 1A 0A \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( b
  , Wk  / 1A 0A  1A \
        | 1A -1A 0A |
        \ -  -   0A / )
  ( c
  , Wk  / -1A 1A 1A \
        | -1A -  0A |
        \ -   -  0A / )
  ( a#
  , Wk  / -1A 1A 1A \
        | -   -  -  |
        \ -   -  0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -   0A 0A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( b
  , Wk  / 0A - -1A \
        | 1A - -1A |
        \ -  - 0A  / )
  ( c
  , Wk  / -1A 1A 1A  \
        | 0A  -  -2A |
        \ -   -  0A  / )
  ( a#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee\EDG(3/5,5)\Matrix{\ArcticBZ}{3}\EDG(2/5,5)\Matrix{\ArcticBZ}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.705726686000
  min duration 0.010720492000
  total durat. 3.103932211000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.616956738000
  min duration 0.010293583000
  total durat. 2.621632619000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.925654907000
  min duration 0.773564381000
  total durat. 2.615504980000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.519384716000
  min duration 0.286974103000
  total durat. 1.147598293000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.618011990000
  min duration 0.499220979000
  total durat. 1.632916577000
**************************************************
F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                    = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
F                    = 0 , alphabet_size = 9 , total_length = 162} , self = 59 , parent = Nothing
F                    , duration = 0.158324576000 , status = Fail , start = 2025-09-03 11:40:02.236153939
F                    UTC , finish = 2025-09-03 11:40:02.394478515 UTC , thread_cap_info = ("ThreadId
F                    54", 3, False)}
F                    
| F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F                  = 5 , total_length = 36} , self = 79 , parent = Nothing , duration = 0.499220979000
| F                  , status = Fail , start = 2025-09-03 11:40:02.298406187 UTC , finish =
| F                  2025-09-03 11:40:02.797627166 UTC , thread_cap_info = ("ThreadId 92", 2,
| F                  False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 162} , self = 81 , parent = Nothing , duration = 0.556910065000 , status
| | F                = Fail , start = 2025-09-03 11:40:02.31657112 UTC , finish = 2025-09-03
| | F                11:40:02.873481185 UTC , thread_cap_info = ("ThreadId 90", 0, False)}
| | F                
| | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | S              , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | S              = 5 , total_length = 36} , self = 87 , parent = Nothing , duration = 0.916285692000
| | | S              , status = Success , start = 2025-09-03 11:40:02.316573841 UTC , finish
| | | S              = 2025-09-03 11:40:03.232859533 UTC , thread_cap_info = ("ThreadId 94",
| | | S              2, False)}
| | | S              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 162} , self = 80 , parent = Nothing , duration = 0.508633669000 , status
| | | | F            = Fail , start = 2025-09-03 11:40:02.330875535 UTC , finish = 2025-09-03
| | | | F            11:40:02.839509204 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | F          = 5 , total_length = 33} , self = 84 , parent = Nothing , duration = 0.618011990000
| | | | | F          , status = Fail , start = 2025-09-03 11:40:02.352865651 UTC , finish =
| | | | | F          2025-09-03 11:40:02.970877641 UTC , thread_cap_info = ("ThreadId 100",
| | | | | F          2, False)}
| | | | | F          
| | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | S        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | S        = 5 , total_length = 33} , self = 89 , parent = Nothing , duration = 0.925654907000
| | | | | | S        , status = Success , start = 2025-09-03 11:40:02.366740087 UTC , finish
| | | | | | S        = 2025-09-03 11:40:03.292394994 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | S        2, False)}
| | | | | | S        
F | | | | | |        
F | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
F | | | | | |        = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 15 ,
F | | | | | |        total_length = 409} , self = 86 , parent = Nothing , duration = 0.705726686000
F | | | | | |        , status = Fail , start = 2025-09-03 11:40:02.41028099 UTC , finish = 2025-09-03
F | | | | | |        11:40:03.116007676 UTC , thread_cap_info = ("ThreadId 115", 3, False)}
F | | | | | |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | F      = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | F      total_length = 409} , self = 82 , parent = Nothing , duration = 0.473756802000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:40:02.41180274 UTC , finish = 2025-09-03
| | | | | | | F      11:40:02.885559542 UTC , thread_cap_info = ("ThreadId 116", 3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | | | | F    = 46 , num_top_rules = 46 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | F    total_length = 400} , self = 85 , parent = Nothing , duration = 0.623121857000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:40:02.450882326 UTC , finish =
| | | | | | | | F    2025-09-03 11:40:03.074004183 UTC , thread_cap_info = ("ThreadId 117",
| | | | | | | | F    3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | | | | | F  = 46 , num_top_rules = 46 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | F  total_length = 400} , self = 83 , parent = Nothing , duration = 0.402942668000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:40:02.501423484 UTC , finish =
| | | | | | | | | F  2025-09-03 11:40:02.904366152 UTC , thread_cap_info = ("ThreadId 118",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| F | | | | | | | |  
| E | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E | | | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| E | | | | | | | |  = 5 , total_length = 36} , self = 91 , parent = Nothing , duration = 0.519384716000
| E | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:02.797665257
| E | | | | | | | |  UTC , finish = 2025-09-03 11:40:03.317049973 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | |  125", 0, False)}
| E | | | | | | | |  
| | | | F | | | | |  
| | F |   | | | | |  
| |   |   | | F | |  
| |   |   | |   | F  
| |   |   F |   |    
| | E |     |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |     |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |     |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |     |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E |     |   |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | E |     |   |    = 5 , total_length = 33} , self = 92 , parent = Nothing , duration = 0.341239474000
| | E |     |   |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:02.990920913
| | E |     |   |    UTC , finish = 2025-09-03 11:40:03.332160387 UTC , thread_cap_info = ("ThreadId
| | E |     |   |    136", 2, False)}
| | E |     |   |    
| | | |     |   F    
F | | |     |        
  | | S     |        
  | |       S        
  E |                
    E                
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F                    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
F                    = 30} , self = 101 , parent = Nothing , duration = 0.544264050000 , status
F                    = Fail , start = 2025-09-03 11:40:03.430922215 UTC , finish = 2025-09-03
F                    11:40:03.975186265 UTC , thread_cap_info = ("ThreadId 147", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F                  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F                  = 30} , self = 102 , parent = Nothing , duration = 0.569321728000 , status
| F                  = Fail , start = 2025-09-03 11:40:03.43477792 UTC , finish = 2025-09-03
| F                  11:40:04.004099648 UTC , thread_cap_info = ("ThreadId 148", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F                = 33} , self = 103 , parent = Nothing , duration = 0.607688255000 , status
| | F                = Fail , start = 2025-09-03 11:40:03.440490562 UTC , finish = 2025-09-03
| | F                11:40:04.048178817 UTC , thread_cap_info = ("ThreadId 150", 2, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F              = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F              = 33} , self = 104 , parent = Nothing , duration = 0.616956738000 , status
| | | F              = Fail , start = 2025-09-03 11:40:03.445991371 UTC , finish = 2025-09-03
| | | F              11:40:04.062948109 UTC , thread_cap_info = ("ThreadId 151", 2, False)}
| | | F              
F | | |              
F | | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |              = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | |              = 5 , total_length = 30} , self = 105 , parent = Nothing , duration = 0.515683608000
F | | |              , status = Fail , start = 2025-09-03 11:40:03.975228817 UTC , finish =
F | | |              2025-09-03 11:40:04.490912425 UTC , thread_cap_info = ("ThreadId 158",
F | | |              2, False)}
F | | |              
| F | |              
| S | |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S | |              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| S | |              = 5 , total_length = 30} , self = 106 , parent = Nothing , duration = 0.773564381000
| S | |              , status = Success , start = 2025-09-03 11:40:04.004131262 UTC , finish
| S | |              = 2025-09-03 11:40:04.777695643 UTC , thread_cap_info = ("ThreadId 159",
| S | |              2, False)}
| S | |              
| | F |              
| |   F              
F |                  
E |                  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E |                  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
E |                  = 5 , total_length = 30} , self = 108 , parent = Nothing , duration = 0.286974103000
E |                  , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:04.49094705
E |                  UTC , finish = 2025-09-03 11:40:04.777921153 UTC , thread_cap_info = ("ThreadId
E |                  168", 2, False)}
E |                  
| S                  
E                    
