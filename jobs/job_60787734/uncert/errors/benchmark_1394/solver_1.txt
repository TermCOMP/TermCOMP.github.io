last 424 length 1648
last 3879 length 17692
CNF 424 vars 1648 clauses
last 433 length 1715
CNF 433 vars 1715 clauses
last 4531 length 22547
CNF 4531 vars 22547 clauses
CNF 3879 vars 17692 clauses
last 655 length 2632
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1967, clauses: 6972
last 1967 length 6972
CNF 1967 vars 6972 clauses
CNF 655 vars 2632 clauses
last 615 length 2660
CNF 615 vars 2660 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1967, clauses: 6972, status: Unsatisfied, time: 0.025016719s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2594, clauses: 9417
last 2594 length 9417
CNF 2594 vars 9417 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2594, clauses: 9417, status: Satisfied, time: 0.027047092s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3961, clauses: 15746
last 3961 length 15746
last 482 length 1862
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6380, clauses: 26419
last 6380 length 26419
last 480 length 1903
CNF 3961 vars 15746 clauses
CNF 482 vars 1862 clauses
CNF 480 vars 1903 clauses
CNF 6380 vars 26419 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2383, clauses: 8506
last 2383 length 8506
CNF 2383 vars 8506 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7048, clauses: 29154
last 7048 length 29154
CNF 7048 vars 29154 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2383, clauses: 8506, status: Unsatisfied, time: 0.111253033s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7048, clauses: 29154, status: Satisfied, time: 0.090259554s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3961, clauses: 15746, status: Unsatisfied, time: 0.322346374s
last 451 length 1745
last 464 length 1845
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6380, clauses: 26419, status: Unsatisfied, time: 0.372887346s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3212, clauses: 12067
CNF 451 vars 1745 clauses
CNF 464 vars 1845 clauses
last 10346 length 48106
last 10429 length 49698
last 3212 length 12067
last 13787 length 58872
last 13767 length 59242
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2277, clauses: 8081
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11179, clauses: 45944
CNF 3212 vars 12067 clauses
CNF 10429 vars 49698 clauses
CNF 10346 vars 48106 clauses
CNF 13787 vars 58872 clauses
last 2277 length 8081
CNF 13767 vars 59242 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7002, clauses: 28978
last 11179 length 45944
CNF 2277 vars 8081 clauses
last 7002 length 28978
CNF 11179 vars 45944 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3212, clauses: 12067, status: Unsatisfied, time: 0.316390406s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2277, clauses: 8081, status: Unsatisfied, time: 0.184951241s
CNF 7002 vars 28978 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6013, clauses: 22441
last 6013 length 22441
CNF 6013 vars 22441 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4317, clauses: 17184
last 4317 length 17184
CNF 4317 vars 17184 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6013, clauses: 22441, status: Unsatisfied, time: 0.447483406s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7002, clauses: 28978, status: Unsatisfied, time: 1.160755763s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4317, clauses: 17184, status: Unsatisfied, time: 0.828452048s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22540, clauses: 89731
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13792, clauses: 64115
last 22540 length 89731
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3724, clauses: 14056
last 13792 length 64115
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23059, clauses: 91603
last 3724 length 14056
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11902, clauses: 48944
CNF 22540 vars 89731 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 54846, clauses: 229804
last 23059 length 91603
CNF 13792 vars 64115 clauses
last 11902 length 48944
CNF 3724 vars 14056 clauses
last 54846 length 229804
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22540, clauses: 89731, status: Satisfied, time: 1.160740318s
CNF 23059 vars 91603 clauses
CNF 11902 vars 48944 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3724, clauses: 14056, status: Unsatisfied, time: 0.977555992s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13792, clauses: 64115, status: Satisfied, time: 1.243468717s
last 4235 length 19146
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23059, clauses: 91603, status: Satisfied, time: 1.299095524s
CNF 4235 vars 19146 clauses
last 4943 length 24177
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 57180, clauses: 239758
last 57180 length 239758
CNF 4943 vars 24177 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6969, clauses: 26172
last 378 length 1478
last 426 length 1694
last 6969 length 26172
CNF 378 vars 1478 clauses
CNF 6969 vars 26172 clauses
CNF 426 vars 1694 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1859, clauses: 6543
last 1859 length 6543
CNF 1859 vars 6543 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9315, clauses: 33956
last 9315 length 33956
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1859, clauses: 6543, status: Unsatisfied, time: 0.071143634s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6332, clauses: 26239
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3884, clauses: 15456
last 6332 length 26239
last 3884 length 15456
CNF 3884 vars 15456 clauses
CNF 6332 vars 26239 clauses
CNF 9315 vars 33956 clauses
last 5463 length 27399
last 4683 length 21364
CNF 4683 vars 21364 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3884, clauses: 15456, status: Unsatisfied, time: 0.582393475s
CNF 5463 vars 27399 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9315, clauses: 33956, status: Satisfied, time: 0.96078996s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3041, clauses: 11301
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6969, clauses: 26172, status: Unsatisfied, time: 1.256505636s
last 3041 length 11301
CNF 3041 vars 11301 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6332, clauses: 26239, status: Unsatisfied, time: 1.086140849s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3041, clauses: 11301, status: Unsatisfied, time: 0.20809284s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10017, clauses: 36749
last 10017 length 36749
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       DP
SRS with 78 strict rules and 27 weak rules on 18 letters       weights
SRS with 75 strict rules and 27 weak rules on 17 letters       EDG
SRS with 75 strict rules and 27 weak rules on 17 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 19 strict rules and 27 weak rules on 16 letters       weights
SRS with 5 strict rules and 27 weak rules on 12 letters       EDG
3 sub-proofs
  1 SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 3 strict rules and 27 weak rules on 10 letters       CNF 10017 vars 36749 clauses
Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 27 weak rules on 9 letters       EDG

  3 SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [b, c] -> [a, a] {- Input 1 -}
  [c, a] -> [b, b, c, c] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, b], [b, c], [c, a]] -> [ [a, a] , [a, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, c], [c, b]] -> [ [a, a] , [a, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, c], [c, c]] -> [ [a, a] , [a, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, c], [c, a]] -> [ [b, a] , [a, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, c], [c, b]] -> [ [b, a] , [a, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, c], [c, c]] -> [ [b, a] , [a, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, b], [b, c], [c, a]] -> [ [c, a] , [a, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b], [b, c], [c, b]] -> [ [c, a] , [a, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, b], [b, c], [c, c]] -> [ [c, a] , [a, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, a], [a, a]] -> [ [a, b] , [b, b] , [b, c] , [c, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, a], [a, b]] -> [ [a, b] , [b, b] , [b, c] , [c, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, a], [a, c]] -> [ [a, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, a], [a, a]] -> [ [b, b] , [b, b] , [b, c] , [c, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, a], [a, b]] -> [ [b, b] , [b, b] , [b, c] , [c, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, a], [a, c]] -> [ [b, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, a], [a, a]] -> [ [c, b] , [b, b] , [b, c] , [c, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, c], [c, a], [a, b]] -> [ [c, b] , [b, b] , [b, c] , [c, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, a], [a, c]] -> [ [c, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [a, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a]#, [a, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [c, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 0/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [a, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a]#, [a, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [c, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [a, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [c, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 2))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [c, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [a, b]# , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 6A 6A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, a]#
  , Wk  / 4A 5A 5A - \
        | 4A 5A 5A - |
        | 4A 5A 5A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 1A 3A 3A - \
        | 1A 3A 3A - |
        | 1A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 3A 5A 5A - \
        | 3A 5A 5A - |
        | 3A 5A 5A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 1A 2A 3A - \
        | 1A 2A 3A - |
        | 1A 2A 3A - |
        \ -  -  -  - / )
  ( [b, c]#
  , Wk  / 2A 5A 5A - \
        | 2A 5A 5A - |
        | 2A 5A 5A - |
        \ -  -  -  - / )
  ( [c, a]#
  , Wk  / 4A 4A 4A - \
        | 4A 4A 4A - |
        | 4A 4A 4A - |
        \ -  -  -  - / )
  ( [c, b]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [c, c]#
  , Wk  / 5A 6A 8A - \
        | 5A 6A 8A - |
        | 5A 6A 8A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, b]#, [b, c], [c, a]] |-> [ [c, a]# , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[c, b]#, [b, c], [c, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, b]# , [b, c] , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, c]#, 2/1)
  ([b, b]#, 0/1)
  ([b, c]#, 1/1)
  ([c, a]#, 0/1)
  ([c, b]#, 2/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
      [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
      [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
      [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
      [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
      [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
      [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
      [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5710, clauses: 21135
      Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10017, clauses: 36749, status: Satisfied, time: 0.434075853s
[[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}last 5710 length 21135

      [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
      [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([a, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [c, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c]#, [c, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c]#, [c, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, c]#
  , Wk  / 7A 8A 8A - \
        | 7A 8A 8A - |
        | 7A 8A 8A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14499, clauses: 67387
last 14499 length 67387

  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[b, a], [a, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
      [[b, a], [a, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
      [[c, a], [a, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
      [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
      [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
      [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
      [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
      [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, c], [c, a], [a, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
      [[a, c], [c, a], [a, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, c], [c, a], [a, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, c], [c, a], [a, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, c], [c, a], [a, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, c], [c, a], [a, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
      [[c, c], [c, a], [a, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, c], [c, a], [a, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Deepee(78/27,18)\Weight\EDG(75/27,17)\Matrix{\Arctic}{3}(19/27,16)\Weight(5/27,12)\EDG[(1/27,10)\Usable(1,3)\Weight(0,0)\EDG[],(3/27,10)\Matrix{\Arctic}{3}(0/27,9)\EDG[],(1/27,10)\Usable(1,3)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 5710 vars 21135 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 14499 vars 67387 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.861707430000
  min duration 0.023084517000
  total durat. 3.496026498000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.887935633000
  min duration 0.031169479000
  total durat. 3.910716607000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.640192946000
  min duration 0.839042668000
  total durat. 3.812346505000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 26}
    , self = 153
    , Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 45545
parent =last 11080 length 45545
 Nothing
    , duration = 1.333110891000
    , status = Fail
    , start = 2025-09-03 11:45:52.543176864 UTC
    , finish = 2025-09-03 11:45:53.876287755 UTC
    , thread_cap_info = ("ThreadId 208", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 31}
    , self = 111
    , parent = Nothing
    , duration = 1.640192946000
    , status = Fail
    , start = 2025-09-03 11:45:48.608853839 UTC
    , finish = 2025-09-03 11:45:50.249046785 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 3.633650361000
  min duration 0.066951079000
  total durat. 8.003300528000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 27
      , alphabet_size = 10
      , total_length = 180}
    , self = 147
    , parent = Nothing
    , duration = 1.257523110000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:45:52.410712078 UTC
    , finish = 2025-09-03 11:45:53.668235188 UTC
    , thread_cap_info = ("ThreadId 200", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 573}
    , self = 115
    , parent = Nothing
    , duration = 3.045175978000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:45:48.809088172 UTC
    , finish = 2025-09-03 11:45:51.85426415 UTC
    , thread_cap_info = ("ThreadId 166", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 579}
    , self = 134
    , parent = Nothing
    , duration = 3.633650361000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:45:48.818261337 UTC
    , finish = 2025-09-03 11:45:52.451911698 UTC
    , thread_cap_info = ("ThreadId 165", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.458135453000
  min duration 2.458135453000
  total durat. 2.458135453000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 123
    , parent = Nothing
    , duration = 2.458135453000
    , status = Success
    , start = 2025-09-03 11:45:49.5353467 UTC
    , finish = 2025-09-03 11:45:51.993482153 UTC
    , thread_cap_info = ("ThreadId 172", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.359983303000
  min duration 0.365152347000
  total durat. 2.463762041000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 31}
    , self = 112
    , parent = Nothing
    , duration = 1.359983303000
    , status = Fail
    , start = 2025-09-03 11:45:48.88908573 UTC
    , finish = 2025-09-03 11:45:50.249069033 UTC
    , thread_cap_info = ("ThreadId 169", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.685692694000
  min duration 3.685692694000
  total durat. 3.685692694000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 125
    , parent = Nothing
    , duration = 3.685692694000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:45:48.509306729 UTC
    , finish = 2025-09-03 11:45:52.194999423 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.405653948000
  min duration 0.051551933000
  total durat. 7.714665189000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 27
      , alphabet_size = 10
      , total_length = 180}
    , self = 145
    , parent = Nothing
    , duration = 1.284657280000
    , status = Success
    , start = 2025-09-03 11:45:52.26250918 UTC
    , finish = 2025-09-03 11:45:53.54716646 UTC
    , thread_cap_info = ("ThreadId 194", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 573}
    , self = 113
    , parent = Nothing
    , duration = 2.972802028000
    , status = Success
    , start = 2025-09-03 11:45:48.769559546 UTC
    , finish = 2025-09-03 11:45:51.742361574 UTC
    , thread_cap_info = ("ThreadId 162", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 579}
    , self = 126
    , parent = Nothing
    , duration = 3.405653948000
    , status = Success
    , start = 2025-09-03 11:45:48.809100552 UTC
    , finish = 2025-09-03 11:45:52.2147545 UTC
    , thread_cap_info = ("ThreadId 164", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.639406874000
  min duration 0.475072527000
  total durat. 2.859844628000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 31}
    , self = 116
    , parent = Nothing
    , duration = 1.639406874000
    , status = Fail
    , start = 2025-09-03 11:45:50.249110437 UTC
    , finish = 2025-09-03 11:45:51.888517311 UTC
    , thread_cap_info = ("ThreadId 173", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.760012045000
  min duration 0.666359658000
  total durat. 2.426371703000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 31}
    , self = 148
    , parent = Nothing
    , duration = 1.760012045000
    , status = Fail
    , start = 2025-09-03 11:45:51.908278553 UTC
    , finish = 2025-09-03 11:45:53.668290598 UTC
    , thread_cap_info = ("ThreadId 183", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.129110975000
  min duration 1.129110975000
  total durat. 1.129110975000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 101
    , parent = Nothing
    , duration = 1.129110975000
    , status = Fail
    , start = 2025-09-03 11:45:47.394672116 UTC
    , finish = 2025-09-03 11:45:48.523783091 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 12} , self = 101 , parent = Nothing , duration = 1.129110975000 , status
F                  = Fail , start = 2025-09-03 11:45:47.394672116 UTC , finish = 2025-09-03
F                  11:45:48.523783091 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| F                = 0 , alphabet_size = 9 , total_length = 162} , self = 72 , parent = Nothing
| F                , duration = 0.332559278000 , status = Fail , start = 2025-09-03 11:45:47.401122891
| F                UTC , finish = 2025-09-03 11:45:47.733682169 UTC , thread_cap_info = ("ThreadId
| F                53", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 63 , parent = Nothing , duration = 0.119250864000 , status
| | F              = Fail , start = 2025-09-03 11:45:47.488283483 UTC , finish = 2025-09-03
| | F              11:45:47.607534347 UTC , thread_cap_info = ("ThreadId 86", 2, False)}
| | F              
| | F              
| | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F              = 4 , total_length = 29} , self = 100 , parent = Nothing , duration = 0.839042668000
| | F              , status = Fail , start = 2025-09-03 11:45:47.649185364 UTC , finish =
| | F              2025-09-03 11:45:48.488228032 UTC , thread_cap_info = ("ThreadId 108",
| | F              3, False)}
| | F              
| | | F            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F            = 4 , total_length = 29} , self = 98 , parent = Nothing , duration = 0.365152347000
| | | F            , status = Fail , start = 2025-09-03 11:45:47.724066584 UTC , finish =
| | | F            2025-09-03 11:45:48.089218931 UTC , thread_cap_info = ("ThreadId 111",
| | | F            3, False)}
| | | F            
| F | |            
| F | |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F | |            = 5 , total_length = 34} , self = 91 , parent = Nothing , duration = 0.160045148000
| F | |            , status = Fail , start = 2025-09-03 11:45:47.797368859 UTC , finish =
| F | |            2025-09-03 11:45:47.957414007 UTC , thread_cap_info = ("ThreadId 129",
| F | |            3, False)}
| F | |            
| | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | S          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | S          = 5 , total_length = 34} , self = 92 , parent = Nothing , duration = 0.189277585000
| | | | S          , status = Success , start = 2025-09-03 11:45:47.808261766 UTC , finish
| | | | S          = 2025-09-03 11:45:47.997539351 UTC , thread_cap_info = ("ThreadId 130",
| | | | S          2, False)}
| | | | S          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | F        = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | F        total_length = 579} , self = 106 , parent = Nothing , duration = 0.861707430000
| | | | | F        , status = Fail , start = 2025-09-03 11:45:47.928086821 UTC , finish =
| | | | | F        2025-09-03 11:45:48.789794251 UTC , thread_cap_info = ("ThreadId 138",
| | | | | F        1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | F      = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | F      total_length = 579} , self = 105 , parent = Nothing , duration = 0.842971046000
| | | | | | F      , status = Fail , start = 2025-09-03 11:45:47.9317093 UTC , finish = 2025-09-03
| | | | | | F      11:45:48.774680346 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | | | F      
| F | | | | |      
| E | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E | | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| E | | | | |      = 5 , total_length = 34} , self = 94 , parent = Nothing , duration = 0.109715374000
| E | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:45:47.976579667
| E | | | | |      UTC , finish = 2025-09-03 11:45:48.086295041 UTC , thread_cap_info = ("ThreadId
| E | | | | |      142", 2, False)}
| E | | | | |      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | | F    = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | F    total_length = 573} , self = 107 , parent = Nothing , duration = 0.823260090000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:45:47.979820713 UTC , finish =
| | | | | | | F    2025-09-03 11:45:48.803080803 UTC , thread_cap_info = ("ThreadId 140",
| | | | | | | F    1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | | | F  = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | F  total_length = 573} , self = 104 , parent = Nothing , duration = 0.761726350000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:45:47.988295253 UTC , finish =
| | | | | | | | F  2025-09-03 11:45:48.750021603 UTC , thread_cap_info = ("ThreadId 141",
| | | | | | | | F  1, False)}
| | | | | | | | F  
| | | | S | | | |  
| E | |   | | | |  
|   | F   | | | |  
| F |     | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F |     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |     | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |     | | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F |     | | | |  = 4 , total_length = 29} , self = 108 , parent = Nothing , duration = 0.745365227000
| F |     | | | |  , status = Fail , start = 2025-09-03 11:45:48.089245739 UTC , finish =
| F |     | | | |  2025-09-03 11:45:48.834610966 UTC , thread_cap_info = ("ThreadId 147",
| F |     | | | |  3, False)}
| F |     | | | |  
| | | F   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F   | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F   | | | |  = 31} , self = 102 , parent = Nothing , duration = 0.429308328000 , status
| | | F   | | | |  = Fail , start = 2025-09-03 11:45:48.12183625 UTC , finish = 2025-09-03
| | | F   | | | |  11:45:48.551144578 UTC , thread_cap_info = ("ThreadId 148", 3, False)}
| | | F   | | | |  
| | | | F | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F | | | |  = 31} , self = 103 , parent = Nothing , duration = 0.483755107000 , status
| | | | F | | | |  = Fail , start = 2025-09-03 11:45:48.125075099 UTC , finish = 2025-09-03
| | | | F | | | |  11:45:48.608830206 UTC , thread_cap_info = ("ThreadId 149", 3, False)}
| | | | F | | | |  
| | F | | | | | |  
| | E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | E | | | | | |  = 4 , total_length = 29} , self = 125 , parent = Nothing , duration = 3.685692694000
| | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:45:48.509306729
| | E | | | | | |  UTC , finish = 2025-09-03 11:45:52.194999423 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |  152", 3, False)}
| | E | | | | | |  
F | | | | | | | |  
  | | F | | | | |  
F | |   | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | | | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | |   | | | | |  = 5 , total_length = 31} , self = 109 , parent = Nothing , duration = 0.300725814000
F | |   | | | | |  , status = Fail , start = 2025-09-03 11:45:48.569219212 UTC , finish =
F | |   | | | | |  2025-09-03 11:45:48.869945026 UTC , thread_cap_info = ("ThreadId 154",
F | |   | | | | |  3, False)}
F | |   | | | | |  
| | |   F | | | |  
| | | F   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F   | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F   | | | |  = 5 , total_length = 31} , self = 111 , parent = Nothing , duration = 1.640192946000
| | | F   | | | |  , status = Fail , start = 2025-09-03 11:45:48.608853839 UTC , finish =
| | | F   | | | |  2025-09-03 11:45:50.249046785 UTC , thread_cap_info = ("ThreadId 155",
| | | F   | | | |  3, False)}
| | | F   | | | |  
| | | |   | | | F  
| | | | S | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | |    = 102 , num_strict_rules = 75 , num_top_rules = 75 , num_weak_rules = 27
| | | | S | | |    , alphabet_size = 17 , total_length = 573} , self = 113 , parent = Nothing
| | | | S | | |    , duration = 2.972802028000 , status = Success , start = 2025-09-03 11:45:48.769559546
| | | | S | | |    UTC , finish = 2025-09-03 11:45:51.742361574 UTC , thread_cap_info = ("ThreadId
| | | | S | | |    162", 1, False)}
| | | | S | | |    
| | | | | | F |    
| | | | | F   |    
| | | | |     F    
| | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 102
| | | | | E        , num_strict_rules = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size
| | | | | E        = 17 , total_length = 573} , self = 115 , parent = Nothing , duration =
| | | | | E        3.045175978000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E        11:45:48.809088172 UTC , finish = 2025-09-03 11:45:51.85426415 UTC , thread_cap_info
| | | | | E        = ("ThreadId 166", 1, False)}
| | | | | E        
| | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S      = 102 , num_strict_rules = 75 , num_top_rules = 75 , num_weak_rules = 27
| | | | | | S      , alphabet_size = 17 , total_length = 579} , self = 126 , parent = Nothing
| | | | | | S      , duration = 3.405653948000 , status = Success , start = 2025-09-03 11:45:48.809100552
| | | | | | S      UTC , finish = 2025-09-03 11:45:52.2147545 UTC , thread_cap_info = ("ThreadId
| | | | | | S      164", 2, False)}
| | | | | | S      
| | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 102
| | | | | | | E    , num_strict_rules = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size
| | | | | | | E    = 17 , total_length = 579} , self = 134 , parent = Nothing , duration =
| | | | | | | E    3.633650361000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E    11:45:48.818261337 UTC , finish = 2025-09-03 11:45:52.451911698 UTC , thread_cap_info
| | | | | | | E    = ("ThreadId 165", 2, False)}
| | | | | | | E    
| F | | | | | |    
| F | | | | | |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | | | | | |    = 4 , total_length = 29} , self = 110 , parent = Nothing , duration = 0.666359658000
| F | | | | | |    , status = Fail , start = 2025-09-03 11:45:48.848112668 UTC , finish =
| F | | | | | |    2025-09-03 11:45:49.514472326 UTC , thread_cap_info = ("ThreadId 168",
| F | | | | | |    3, False)}
| F | | | | | |    
F | | | | | | |    
F | | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F | | | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | | | | | |    = 5 , total_length = 31} , self = 112 , parent = Nothing , duration = 1.359983303000
F | | | | | | |    , status = Fail , start = 2025-09-03 11:45:48.88908573 UTC , finish = 2025-09-03
F | | | | | | |    11:45:50.249069033 UTC , thread_cap_info = ("ThreadId 169", 3, False)}
F | | | | | | |    
| F | | | | | |    
| S | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| S | | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | | |    , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S | | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| S | | | | | |    = 4 , total_length = 29} , self = 123 , parent = Nothing , duration = 2.458135453000
| S | | | | | |    , status = Success , start = 2025-09-03 11:45:49.5353467 UTC , finish =
| S | | | | | |    2025-09-03 11:45:51.993482153 UTC , thread_cap_info = ("ThreadId 172",
| S | | | | | |    3, False)}
| S | | | | | |    
| | | F | | | |    
F | |   | | | |    
F | |   | | | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | |   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | | | |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | |   | | | |    = 5 , total_length = 31} , self = 116 , parent = Nothing , duration = 1.639406874000
F | |   | | | |    , status = Fail , start = 2025-09-03 11:45:50.249110437 UTC , finish =
F | |   | | | |    2025-09-03 11:45:51.888517311 UTC , thread_cap_info = ("ThreadId 173",
F | |   | | | |    3, False)}
F | |   | | | |    
| | |   S | | |    
| | |     E | |    
F | |       | |    
F | |       | |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | |       | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |       | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |       | |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | |       | |    = 5 , total_length = 31} , self = 148 , parent = Nothing , duration = 1.760012045000
F | |       | |    , status = Fail , start = 2025-09-03 11:45:51.908278553 UTC , finish =
F | |       | |    2025-09-03 11:45:53.668290598 UTC , thread_cap_info = ("ThreadId 183",
F | |       | |    3, False)}
F | |       | |    
| | | F     | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | F     | |    = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | F     | |    = 180} , self = 128 , parent = Nothing , duration = 0.340327269000 , status
| | | F     | |    = Fail , start = 2025-09-03 11:45:51.91400086 UTC , finish = 2025-09-03
| | | F     | |    11:45:52.254328129 UTC , thread_cap_info = ("ThreadId 187", 1, False)}
| | | F     | |    
| | | | F   | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | F   | |    = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | F   | |    = 180} , self = 133 , parent = Nothing , duration = 0.466430045000 , status
| | | | F   | |    = Fail , start = 2025-09-03 11:45:51.928228954 UTC , finish = 2025-09-03
| | | | F   | |    11:45:52.394658999 UTC , thread_cap_info = ("ThreadId 188", 1, False)}
| | | | F   | |    
| S | | |   | |    
|   E | |   | |    
|     | |   S |    
|     F |     |    
| S     |     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S     |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S     |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S     |     |    = 30 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 27 ,
| S     |     |    alphabet_size = 10 , total_length = 180} , self = 145 , parent = Nothing
| S     |     |    , duration = 1.284657280000 , status = Success , start = 2025-09-03 11:45:52.26250918
| S     |     |    UTC , finish = 2025-09-03 11:45:53.54716646 UTC , thread_cap_info = ("ThreadId
| S     |     |    194", 1, False)}
| S     |     |    
| | F   |     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F   |     |    = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F   |     |    = 26} , self = 135 , parent = Nothing , duration = 0.157653350000 , status
| | F   |     |    = Fail , start = 2025-09-03 11:45:52.307480034 UTC , finish = 2025-09-03
| | F   |     |    11:45:52.465133384 UTC , thread_cap_info = ("ThreadId 198", 3, False)}
| | F   |     |    
| | | F |     |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F |     |    = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F |     |    = 26} , self = 137 , parent = Nothing , duration = 0.210994299000 , status
| | | F |     |    = Fail , start = 2025-09-03 11:45:52.317311555 UTC , finish = 2025-09-03
| | | F |     |    11:45:52.528305854 UTC , thread_cap_info = ("ThreadId 199", 3, False)}
| | | F |     |    
| | | | F     |    
| | | | E     |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E     |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 30
| | | | E     |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size
| | | | E     |    = 10 , total_length = 180} , self = 147 , parent = Nothing , duration =
| | | | E     |    1.257523110000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E     |    11:45:52.410712078 UTC , finish = 2025-09-03 11:45:53.668235188 UTC , thread_cap_info
| | | | E     |    = ("ThreadId 200", 1, False)}
| | | | E     |    
| | | | |     E    
| | F | |          
| | F | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |          = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F | |          = 4 , total_length = 26} , self = 141 , parent = Nothing , duration = 0.129909928000
| | F | |          , status = Fail , start = 2025-09-03 11:45:52.470947163 UTC , finish =
| | F | |          2025-09-03 11:45:52.600857091 UTC , thread_cap_info = ("ThreadId 204",
| | F | |          3, False)}
| | F | |          
| | | F |          
| | | F |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F |          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F |          = 4 , total_length = 26} , self = 153 , parent = Nothing , duration = 1.333110891000
| | | F |          , status = Fail , start = 2025-09-03 11:45:52.543176864 UTC , finish =
| | | F |          2025-09-03 11:45:53.876287755 UTC , thread_cap_info = ("ThreadId 208",
| | | F |          3, False)}
| | | F |          
| | F | |          
| | F | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F | |          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F | |          = 4 , total_length = 26} , self = 143 , parent = Nothing , duration = 0.738626391000
| | F | |          , status = Fail , start = 2025-09-03 11:45:52.609733289 UTC , finish =
| | F | |          2025-09-03 11:45:53.34835968 UTC , thread_cap_info = ("ThreadId 213", 3,
| | F | |          False)}
| | F | |          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | F        = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | F        = 196} , self = 142 , parent = Nothing , duration = 0.680257782000 , status
| | | | | F        = Fail , start = 2025-09-03 11:45:52.629060278 UTC , finish = 2025-09-03
| | | | | F        11:45:53.30931806 UTC , thread_cap_info = ("ThreadId 211", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | | F      = 196} , self = 144 , parent = Nothing , duration = 0.887935633000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:45:52.650917051 UTC , finish = 2025-09-03
| | | | | | F      11:45:53.538852684 UTC , thread_cap_info = ("ThreadId 212", 1, False)}
| | | | | | F      
| | | | | F |      
| | F | |   |      
| | F | |   |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |   |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F | |   |      = 4 , total_length = 26} , self = 154 , parent = Nothing , duration = 0.475072527000
| | F | |   |      , status = Fail , start = 2025-09-03 11:45:53.408240315 UTC , finish =
| | F | |   |      2025-09-03 11:45:53.883312842 UTC , thread_cap_info = ("ThreadId 219",
| | F | |   |      3, False)}
| | F | |   |      
| | | | |   F      
| S | | |          
|   | | E          
F   | |            
    | F            
    F              
