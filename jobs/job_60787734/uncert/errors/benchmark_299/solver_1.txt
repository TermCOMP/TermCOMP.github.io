last 1518 length 6361
CNF 1518 vars 6361 clauses
last 2554 length 10841
CNF 2554 vars 10841 clauses
last 1026 length 4340
last 1018 length 4322
last 894 length 3890
last 902 length 3908
CNF 1026 vars 4340 clauses
CNF 894 vars 3890 clauses
CNF 1018 vars 4322 clauses
CNF 902 vars 3908 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1841, clauses: 6885
last 1841 length 6885
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1853, clauses: 6948
last 1853 length 6948
CNF 1853 vars 6948 clauses
CNF 1841 vars 6885 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5934, clauses: 24715
last 5934 length 24715
CNF 5934 vars 24715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1853, clauses: 6948, status: Unsatisfied, time: 0.075687657s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1841, clauses: 6885, status: Unsatisfied, time: 0.079120473s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3588, clauses: 14793
last 3588 length 14793
CNF 3588 vars 14793 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5932, clauses: 24709
last 5932 length 24709
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3582, clauses: 14757
last 3582 length 14757
CNF 5932 vars 24709 clauses
CNF 3582 vars 14757 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5934, clauses: 24715, status: Unsatisfied, time: 0.315398275s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3588, clauses: 14793, status: Unsatisfied, time: 0.280932345s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3582, clauses: 14757, status: Unsatisfied, time: 0.316037317s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3052, clauses: 12147
last 3052 length 12147
CNF 3052 vars 12147 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5932, clauses: 24709, status: Unsatisfied, time: 0.42824283s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3032, clauses: 12015
last 3032 length 12015
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10063, clauses: 43362
last 10063 length 43362
CNF 3032 vars 12015 clauses
CNF 10063 vars 43362 clauses
last 4052 length 20532
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3052, clauses: 12147, status: Unsatisfied, time: 0.345189415s
CNF 4052 vars 20532 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3032, clauses: 12015, status: Unsatisfied, time: 0.243564421s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5698, clauses: 22366
last 5698 length 22366
last 4846 length 21624
CNF 5698 vars 22366 clauses
last 3946 length 16765
CNF 4846 vars 21624 clauses
last 2998 length 13175
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10054, clauses: 43296
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4572, clauses: 17585
CNF 3946 vars 16765 clauses
last 10054 length 43296
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5668, clauses: 22141
CNF 2998 vars 13175 clauses
last 4572 length 17585
last 5668 length 22141
CNF 10054 vars 43296 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4626, clauses: 18146
CNF 4572 vars 17585 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5698, clauses: 22366, status: Satisfied, time: 0.672184832s
CNF 5668 vars 22141 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16644, clauses: 69959
last 4626 length 18146
CNF 4626 vars 18146 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16362, clauses: 68875
**************************************************
last 16362 length 68875
summary
**************************************************
SRS with 2 rules on 2 letters       DP
SRS with 8 strict rules and 2 weak rules on 4 letters       weights
SRS with 2 strict rules and 2 weak rules on 4 letters       EDG
SRS with 2 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 4 letters       weights
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [1, 0, 1, 1] {- Input 0 -}
  [1, 0, 0, 1] -> [0, 0, 0, 0] {- Input 1 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
  [1#, 0, 0, 1] |-> [0#] {- DP (Top 3) (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0] {- DP (Top 2) (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0, 0] {- DP (Top 1) (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0, 0, 0] {- DP (Top 0) (Input 1) -}
  [0#, 0, 0, 0] |-> [1#] {- DP (Top 3) (Input 0) -}
  [0#, 0, 0, 0] |-> [1#, 1] {- DP (Top 2) (Input 0) -}
  [0#, 0, 0, 0] |-> [1#, 0, 1, 1] {- DP (Top 0) (Input 0) -}
  [0#, 0, 0, 0] |-> [0#, 1, 1] {- DP (Top 1) (Input 0) -}
reason
  (1, 1/1)
  (0, 1/1)
  (1#, 0/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0, 0, 0] {- DP (Top 0) (Input 1) -}
  [0#, 0, 0, 0] |-> [1#, 0, 1, 1] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 0, 0, 1] |-> [0#, 0, 0, 0] {- DP (Top 0) (Input 1) -}
  [0#, 0, 0, 0] |-> [1#, 0, 1, 1] {- DP (Top 0) (Input 0) -}
  [0, 0, 0, 0] ->= [1, 0, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
reason
  ( 1
  , Wk  / 5A 10A 10A 10A 10A - \
        | 5A 10A 10A 10A 10A - |
        | 5A 10A 10A 10A 10A - |
        | 5A 10A 10A 10A 10A - |
        | 5A 10A 10A 10A 10A - |
        \ -  -   -   -   -   - / )
  ( 0
  , Wk  / 10A 10A 10A 10A 15A - \
        | 10A 10A 10A 10A 10A - |
        | 5A  10A 10A 10A 10A - |
        | 5A  5A  10A 10A 10A - |
        | 5A  5A  5A  10A 10A - |
        \ -   -   -   -   -   - / )
  ( 1#
  , Wk  / 36A 41A 41A 41A 41A - \
        | 36A 41A 41A 41A 41A - |
        | 36A 41A 41A 41A 41A - |
        | 36A 41A 41A 41A 41A - |
        | 36A 41A 41A 41A 41A - |
        \ -   -   -   -   -   - / )
  ( 0#
  , Wk  / 36A 36A 36A 36A 41A - \
        | 36A 36A 36A 36A 41A - |
        | 36A 36A 36A 36A 41A - |
        | 36A 36A 36A 36A 41A - |
        | 36A 36A 36A 36A 41A - |
        \ -   -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [0#, 0, 0, 0] |-> [1#, 0, 1, 1] {- DP (Top 0) (Input 0) -}
  [0, 0, 0, 0] ->= [1, 0, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
reason
  (1, 0/1)
  (0, 0/1)
  (1#, 0/1)
  (0#, 1/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
reason
  EDG

**************************************************
skeleton: (2,2)\Deepee(8/2,4)\Weight\EDG(2/2,4)\Matrix{\Arctic}{5}(1/2,4)\Weight(0/2,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply last 16644 length 69959
cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.674444380000
  min duration 0.013840625000
  total durat. 1.352256174000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.768335450000
  min duration 0.037449498000
  total durat. 1.209185991000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.856699008000
  min duration 0.099410680000
  total durat. 1.777806664000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.659252361000
  min duration 0.417024486000
  total durat. 1.076276847000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.494365882000
  min duration 1.494365882000
  total durat. 1.494365882000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 97
    , parent = Nothing
    , duration = 1.494365882000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:23:39.498594783 UTC
    , finish = 2025-09-03 11:23:40.992960665 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
Success : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.003225475000
  min duration 1.003225475000
  total durat. 1.003225475000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 95
    , parent = Nothing
    , duration = 1.003225475000
    , status = Success
    , start = 2025-09-03 11:23:39.938722561 UTC
    , finish = 2025-09-03 11:23:40.941948036 UTC
    , thread_cap_info = ("ThreadId 143", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.099385534000
  min duration 2.099385534000
  total durat. 2.099385534000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 101
    , parent = Nothing
    , duration = 2.099385534000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:23:38.918409691 UTC
    , finish = 2025-09-03 11:23:41.017795225 UTC
    , thread_cap_info = ("ThreadId 82", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.175644832000
  min duration 2.175644832000
  total durat. 2.175644832000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 100
    , parent = Nothing
    , duration = 2.175644832000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:23:38.838407688 UTC
    , finish = 2025-09-03 11:23:41.01405252 UTC
    , thread_cap_info = ("ThreadId 76", 1, False)}
**************************************************
F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                  = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
F                  = 0 , alphabet_size = 2 , total_length = 16} , self = 49 , parent = Nothing
F                  , duration = 0.133722776000 , status = Fail , start = 2025-09-03 11:23:38.804133006
F                  UTC , finish = 2025-09-03 11:23:38.937855782 UTC , thread_cap_info = ("ThreadId
F                  47", 2, False)}
F                  
| F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                = 16} , self = 69 , parent = Nothing , duration = 0.558324687000 , status
| F                = Fail , start = 2025-09-03 11:23:38.804143125 UTC , finish = 2025-09-03
| F                11:23:39.362467812 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 4 , total_length = 80} , self = 74 , parent = Nothing
| | F              , duration = 0.856699008000 , status = Fail , start = 2025-09-03 11:23:38.804861736
| | F              UTC , finish = 2025-09-03 11:23:39.661560744 UTC , thread_cap_info = ("ThreadId
| | F              59", 3, False)}
| | F              
| | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F            = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | | F            = 0 , alphabet_size = 4 , total_length = 80} , self = 72 , parent = Nothing
| | | F            , duration = 0.687974200000 , status = Fail , start = 2025-09-03 11:23:38.81873684
| | | F            UTC , finish = 2025-09-03 11:23:39.50671104 UTC , thread_cap_info = ("ThreadId
| | | F            73", 3, False)}
| | | F            
| | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E          = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E          = 16} , self = 100 , parent = Nothing , duration = 2.175644832000 , status
| | | | E          = Except "AsyncCancelled" , start = 2025-09-03 11:23:38.838407688 UTC ,
| | | | E          finish = 2025-09-03 11:23:41.01405252 UTC , thread_cap_info = ("ThreadId
| | | | E          76", 1, False)}
| | | | E          
| | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E        = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E        = 16} , self = 101 , parent = Nothing , duration = 2.099385534000 , status
| | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 11:23:38.918409691 UTC ,
| | | | | E        finish = 2025-09-03 11:23:41.017795225 UTC , thread_cap_info = ("ThreadId
| | | | | E        82", 1, False)}
| | | | | E        
F | | | | |        
F | | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |        = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F | | | | |        = 4 , total_length = 32} , self = 67 , parent = Nothing , duration = 0.127149524000
F | | | | |        , status = Fail , start = 2025-09-03 11:23:38.974751951 UTC , finish =
F | | | | |        2025-09-03 11:23:39.101901475 UTC , thread_cap_info = ("ThreadId 107",
F | | | | |        0, False)}
F | | | | |        
| | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | F      = 4 , total_length = 32} , self = 70 , parent = Nothing , duration = 0.417024486000
| | | | | | F      , status = Fail , start = 2025-09-03 11:23:38.978088578 UTC , finish =
| | | | | | F      2025-09-03 11:23:39.395113064 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | F      0, False)}
| | | | | | F      
| | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F    = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | F    = 4 , total_length = 32} , self = 68 , parent = Nothing , duration = 0.123534672000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:23:38.978424863 UTC , finish =
| | | | | | | F    2025-09-03 11:23:39.101959535 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | | F    2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | | F  = 4 , total_length = 32} , self = 86 , parent = Nothing , duration = 0.659252361000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:23:39.026200924 UTC , finish =
| | | | | | | | F  2025-09-03 11:23:39.685453285 UTC , thread_cap_info = ("ThreadId 111",
| | | | | | | | F  2, False)}
| | | | | | | | F  
F | | | | | | | |  
  | | | | | | F |  
F | | | | | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | | | |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F | | | | | |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F | | | | | |   |  = 4 , total_length = 32} , self = 71 , parent = Nothing , duration = 0.340813592000
F | | | | | |   |  , status = Fail , start = 2025-09-03 11:23:39.108923551 UTC , finish =
F | | | | | |   |  2025-09-03 11:23:39.449737143 UTC , thread_cap_info = ("ThreadId 114",
F | | | | | |   |  0, False)}
F | | | | | |   |  
| | | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | F |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | F |  = 4 , total_length = 32} , self = 73 , parent = Nothing , duration = 0.455822761000
| | | | | | | F |  , status = Fail , start = 2025-09-03 11:23:39.122712704 UTC , finish =
| | | | | | | F |  2025-09-03 11:23:39.578535465 UTC , thread_cap_info = ("ThreadId 115",
| | | | | | | F |  2, False)}
| | | | | | | F |  
| F | | | | | | |  
|   | | | | F | |  
| F | | | |   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | |   | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| F | | | |   | |  = 4 , total_length = 32} , self = 89 , parent = Nothing , duration = 0.537458661000
| F | | | |   | |  , status = Fail , start = 2025-09-03 11:23:39.398431202 UTC , finish =
| F | | | |   | |  2025-09-03 11:23:39.935889863 UTC , thread_cap_info = ("ThreadId 119",
| F | | | |   | |  0, False)}
| F | | | |   | |  
F | | | | |   | |  
E | | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | | |   | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E | | | | |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
E | | | | |   | |  = 4 , total_length = 32} , self = 97 , parent = Nothing , duration = 1.494365882000
E | | | | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:23:39.498594783
E | | | | |   | |  UTC , finish = 2025-09-03 11:23:40.992960665 UTC , thread_cap_info = ("ThreadId
E | | | | |   | |  120", 0, False)}
E | | | | |   | |  
| | | F | |   | |  
| | |   | |   F |  
| | | F | |     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |     |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F | |     |  = 4 , total_length = 32} , self = 90 , parent = Nothing , duration = 0.340230348000
| | | F | |     |  , status = Fail , start = 2025-09-03 11:23:39.598604716 UTC , finish =
| | | F | |     |  2025-09-03 11:23:39.938835064 UTC , thread_cap_info = ("ThreadId 122",
| | | F | |     |  2, False)}
| | | F | |     |  
| | F | | |     |  
| | F | | |     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | | |     |  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F | | |     |  = 120} , self = 92 , parent = Nothing , duration = 0.534759186000 , status
| | F | | |     |  = Fail , start = 2025-09-03 11:23:39.68317073 UTC , finish = 2025-09-03
| | F | | |     |  11:23:40.217929916 UTC , thread_cap_info = ("ThreadId 134", 3, False)}
| | F | | |     |  
| | | | | |     F  
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | F      = 120} , self = 91 , parent = Nothing , duration = 0.279911914000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:23:39.699979709 UTC , finish = 2025-09-03
| | | | | | F      11:23:39.979891623 UTC , thread_cap_info = ("ThreadId 135", 3, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | F    = 120} , self = 93 , parent = Nothing , duration = 0.674444380000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:23:39.809144836 UTC , finish = 2025-09-03
| | | | | | | F    11:23:40.483589216 UTC , thread_cap_info = ("ThreadId 140", 3, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | F  = 120} , self = 94 , parent = Nothing , duration = 0.768335450000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 11:23:39.834021822 UTC , finish = 2025-09-03
| | | | | | | | F  11:23:40.602357272 UTC , thread_cap_info = ("ThreadId 141", 3, False)}
| | | | | | | | F  
| F | | | | | | |  
| S | | | | | | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| S | | | | | | |  = 4 , total_length = 32} , self = 95 , parent = Nothing , duration = 1.003225475000
| S | | | | | | |  , status = Success , start = 2025-09-03 11:23:39.938722561 UTC , finish
| S | | | | | | |  = 2025-09-03 11:23:40.941948036 UTC , thread_cap_info = ("ThreadId 143",
| S | | | | | | |  0, False)}
| S | | | | | | |  
| | | F | | | | |  
| | |   | | F | |  
| | F   | |   | |  
| |     | |   F |  
| |     | |     F  
| S     | |        
E       | |        
        E |        
          E        
