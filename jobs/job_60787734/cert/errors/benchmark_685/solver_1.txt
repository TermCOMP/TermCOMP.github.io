Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5019, clauses: 21302
last 5019 length 21302
CNF 5019 vars 21302 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8574, clauses: 39536
last 8574 length 39536
CNF 8574 vars 39536 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5019, clauses: 21302, status: Satisfied, time: 0.848076036s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8574, clauses: 39536, status: Unsatisfied, time: 0.764261518s
**************************************************
summary
**************************************************
SRS with 17 rules on 3 letters       mirror
SRS with 17 rules on 3 letters       DP
SRS with 21 strict rules and 17 weak rules on 4 letters       EDG
SRS with 3 strict rules and 17 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 17 weak rules on 4 letters       EDG
SRS with 1 strict rules and 17 weak rules on 4 letters       Usable
SRS with 1 rules on 4 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- Input 0 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 1 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 2 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 3 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 4 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 5 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 6 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 7 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 8 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 9 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 10 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 11 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 12 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 13 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 14 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 15 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 16 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [1, 2, 1, 0] -> [2, 1, 0, 2, 1, 0, 1, 1, 2, 1] {- Mirror (Input 0) -}
  [1, 2, 1, 0] -> [2, 1, 0, 2, 1, 0, 2, 1, 0, 1, 1, 2, 1] {- Mirror (Input 1) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 2) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 3) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 4) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 5) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 6) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 7) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 8) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 9) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 10) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 11) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 12) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 13) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 14) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 15) -}
  [1, 2, 1, 0] -> [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Mirror (Input 16) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 3)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 4)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 5)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 6)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 7)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 8)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 9)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 10)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 11)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 12)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 13)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 14)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 15)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 16)) -}
  [1#, 2, 1, 0] |-> [1#] {- Many [ DP (Top 57) (Mirror (Input 16)) , DP (Top 54) (Mirror (Input 15)) , DP (Top 51) (Mirror (Input 14)) , DP (Top 48) (Mirror (Input 13)) , DP (Top 45) (Mirror (Input 12)) , DP (Top 42) (Mirror (Input 11)) , DP (Top 39) (Mirror (Input 10)) , DP (Top 36) (Mirror (Input 9)) , DP (Top 33) (Mirror (Input 8)) , DP (Top 30) (Mirror (Input 7)) , DP (Top 27) (Mirror (Input 6)) , DP (Top 24) (Mirror (Input 5)) , DP (Top 21) (Mirror (Input 4)) , DP (Top 18) (Mirror (Input 3)) , DP (Top 15) (Mirror (Input 2)) , DP (Top 12) (Mirror (Input 1)) , DP (Top 9) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [1#, 1, 2, 1] {- Many [ DP (Top 54) (Mirror (Input 16)) , DP (Top 51) (Mirror (Input 15)) , DP (Top 48) (Mirror (Input 14)) , DP (Top 45) (Mirror (Input 13)) , DP (Top 42) (Mirror (Input 12)) , DP (Top 39) (Mirror (Input 11)) , DP (Top 36) (Mirror (Input 10)) , DP (Top 33) (Mirror (Input 9)) , DP (Top 30) (Mirror (Input 8)) , DP (Top 27) (Mirror (Input 7)) , DP (Top 24) (Mirror (Input 6)) , DP (Top 21) (Mirror (Input 5)) , DP (Top 18) (Mirror (Input 4)) , DP (Top 15) (Mirror (Input 3)) , DP (Top 12) (Mirror (Input 2)) , DP (Top 9) (Mirror (Input 1)) , DP (Top 6) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [1#, 2, 1] {- Many [ DP (Top 55) (Mirror (Input 16)) , DP (Top 52) (Mirror (Input 15)) , DP (Top 49) (Mirror (Input 14)) , DP (Top 46) (Mirror (Input 13)) , DP (Top 43) (Mirror (Input 12)) , DP (Top 40) (Mirror (Input 11)) , DP (Top 37) (Mirror (Input 10)) , DP (Top 34) (Mirror (Input 9)) , DP (Top 31) (Mirror (Input 8)) , DP (Top 28) (Mirror (Input 7)) , DP (Top 25) (Mirror (Input 6)) , DP (Top 22) (Mirror (Input 5)) , DP (Top 19) (Mirror (Input 4)) , DP (Top 16) (Mirror (Input 3)) , DP (Top 13) (Mirror (Input 2)) , DP (Top 10) (Mirror (Input 1)) , DP (Top 7) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [1#, 0, 1, 1, 2, 1] {- Many [ DP (Top 52) (Mirror (Input 16)) , DP (Top 49) (Mirror (Input 15)) , DP (Top 46) (Mirror (Input 14)) , DP (Top 43) (Mirror (Input 13)) , DP (Top 40) (Mirror (Input 12)) , DP (Top 37) (Mirror (Input 11)) , DP (Top 34) (Mirror (Input 10)) , DP (Top 31) (Mirror (Input 9)) , DP (Top 28) (Mirror (Input 8)) , DP (Top 25) (Mirror (Input 7)) , DP (Top 22) (Mirror (Input 6)) , DP (Top 19) (Mirror (Input 5)) , DP (Top 16) (Mirror (Input 4)) , DP (Top 13) (Mirror (Input 3)) , DP (Top 10) (Mirror (Input 2)) , DP (Top 7) (Mirror (Input 1)) , DP (Top 4) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 49) (Mirror (Input 16)) , DP (Top 46) (Mirror (Input 15)) , DP (Top 43) (Mirror (Input 14)) , DP (Top 40) (Mirror (Input 13)) , DP (Top 37) (Mirror (Input 12)) , DP (Top 34) (Mirror (Input 11)) , DP (Top 31) (Mirror (Input 10)) , DP (Top 28) (Mirror (Input 9)) , DP (Top 25) (Mirror (Input 8)) , DP (Top 22) (Mirror (Input 7)) , DP (Top 19) (Mirror (Input 6)) , DP (Top 16) (Mirror (Input 5)) , DP (Top 13) (Mirror (Input 4)) , DP (Top 10) (Mirror (Input 3)) , DP (Top 7) (Mirror (Input 2)) , DP (Top 4) (Mirror (Input 1)) , DP (Top 1) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 46) (Mirror (Input 16)) , DP (Top 43) (Mirror (Input 15)) , DP (Top 40) (Mirror (Input 14)) , DP (Top 37) (Mirror (Input 13)) , DP (Top 34) (Mirror (Input 12)) , DP (Top 31) (Mirror (Input 11)) , DP (Top 28) (Mirror (Input 10)) , DP (Top 25) (Mirror (Input 9)) , DP (Top 22) (Mirror (Input 8)) , DP (Top 19) (Mirror (Input 7)) , DP (Top 16) (Mirror (Input 6)) , DP (Top 13) (Mirror (Input 5)) , DP (Top 10) (Mirror (Input 4)) , DP (Top 7) (Mirror (Input 3)) , DP (Top 4) (Mirror (Input 2)) , DP (Top 1) (Mirror (Input 1)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 43) (Mirror (Input 16)) , DP (Top 40) (Mirror (Input 15)) , DP (Top 37) (Mirror (Input 14)) , DP (Top 34) (Mirror (Input 13)) , DP (Top 31) (Mirror (Input 12)) , DP (Top 28) (Mirror (Input 11)) , DP (Top 25) (Mirror (Input 10)) , DP (Top 22) (Mirror (Input 9)) , DP (Top 19) (Mirror (Input 8)) , DP (Top 16) (Mirror (Input 7)) , DP (Top 13) (Mirror (Input 6)) , DP (Top 10) (Mirror (Input 5)) , DP (Top 7) (Mirror (Input 4)) , DP (Top 4) (Mirror (Input 3)) , DP (Top 1) (Mirror (Input 2)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 40) (Mirror (Input 16)) , DP (Top 37) (Mirror (Input 15)) , DP (Top 34) (Mirror (Input 14)) , DP (Top 31) (Mirror (Input 13)) , DP (Top 28) (Mirror (Input 12)) , DP (Top 25) (Mirror (Input 11)) , DP (Top 22) (Mirror (Input 10)) , DP (Top 19) (Mirror (Input 9)) , DP (Top 16) (Mirror (Input 8)) , DP (Top 13) (Mirror (Input 7)) , DP (Top 10) (Mirror (Input 6)) , DP (Top 7) (Mirror (Input 5)) , DP (Top 4) (Mirror (Input 4)) , DP (Top 1) (Mirror (Input 3)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 37) (Mirror (Input 16)) , DP (Top 34) (Mirror (Input 15)) , DP (Top 31) (Mirror (Input 14)) , DP (Top 28) (Mirror (Input 13)) , DP (Top 25) (Mirror (Input 12)) , DP (Top 22) (Mirror (Input 11)) , DP (Top 19) (Mirror (Input 10)) , DP (Top 16) (Mirror (Input 9)) , DP (Top 13) (Mirror (Input 8)) , DP (Top 10) (Mirror (Input 7)) , DP (Top 7) (Mirror (Input 6)) , DP (Top 4) (Mirror (Input 5)) , DP (Top 1) (Mirror (Input 4)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 34) (Mirror (Input 16)) , DP (Top 31) (Mirror (Input 15)) , DP (Top 28) (Mirror (Input 14)) , DP (Top 25) (Mirror (Input 13)) , DP (Top 22) (Mirror (Input 12)) , DP (Top 19) (Mirror (Input 11)) , DP (Top 16) (Mirror (Input 10)) , DP (Top 13) (Mirror (Input 9)) , DP (Top 10) (Mirror (Input 8)) , DP (Top 7) (Mirror (Input 7)) , DP (Top 4) (Mirror (Input 6)) , DP (Top 1) (Mirror (Input 5)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 31) (Mirror (Input 16)) , DP (Top 28) (Mirror (Input 15)) , DP (Top 25) (Mirror (Input 14)) , DP (Top 22) (Mirror (Input 13)) , DP (Top 19) (Mirror (Input 12)) , DP (Top 16) (Mirror (Input 11)) , DP (Top 13) (Mirror (Input 10)) , DP (Top 10) (Mirror (Input 9)) , DP (Top 7) (Mirror (Input 8)) , DP (Top 4) (Mirror (Input 7)) , DP (Top 1) (Mirror (Input 6)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 28) (Mirror (Input 16)) , DP (Top 25) (Mirror (Input 15)) , DP (Top 22) (Mirror (Input 14)) , DP (Top 19) (Mirror (Input 13)) , DP (Top 16) (Mirror (Input 12)) , DP (Top 13) (Mirror (Input 11)) , DP (Top 10) (Mirror (Input 10)) , DP (Top 7) (Mirror (Input 9)) , DP (Top 4) (Mirror (Input 8)) , DP (Top 1) (Mirror (Input 7)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 25) (Mirror (Input 16)) , DP (Top 22) (Mirror (Input 15)) , DP (Top 19) (Mirror (Input 14)) , DP (Top 16) (Mirror (Input 13)) , DP (Top 13) (Mirror (Input 12)) , DP (Top 10) (Mirror (Input 11)) , DP (Top 7) (Mirror (Input 10)) , DP (Top 4) (Mirror (Input 9)) , DP (Top 1) (Mirror (Input 8)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 22) (Mirror (Input 16)) , DP (Top 19) (Mirror (Input 15)) , DP (Top 16) (Mirror (Input 14)) , DP (Top 13) (Mirror (Input 13)) , DP (Top 10) (Mirror (Input 12)) , DP (Top 7) (Mirror (Input 11)) , DP (Top 4) (Mirror (Input 10)) , DP (Top 1) (Mirror (Input 9)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 19) (Mirror (Input 16)) , DP (Top 16) (Mirror (Input 15)) , DP (Top 13) (Mirror (Input 14)) , DP (Top 10) (Mirror (Input 13)) , DP (Top 7) (Mirror (Input 12)) , DP (Top 4) (Mirror (Input 11)) , DP (Top 1) (Mirror (Input 10)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 16) (Mirror (Input 16)) , DP (Top 13) (Mirror (Input 15)) , DP (Top 10) (Mirror (Input 14)) , DP (Top 7) (Mirror (Input 13)) , DP (Top 4) (Mirror (Input 12)) , DP (Top 1) (Mirror (Input 11)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 13) (Mirror (Input 16)) , DP (Top 10) (Mirror (Input 15)) , DP (Top 7) (Mirror (Input 14)) , DP (Top 4) (Mirror (Input 13)) , DP (Top 1) (Mirror (Input 12)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 10) (Mirror (Input 16)) , DP (Top 7) (Mirror (Input 15)) , DP (Top 4) (Mirror (Input 14)) , DP (Top 1) (Mirror (Input 13)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 7) (Mirror (Input 16)) , DP (Top 4) (Mirror (Input 15)) , DP (Top 1) (Mirror (Input 14)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- Many [ DP (Top 4) (Mirror (Input 16)) , DP (Top 1) (Mirror (Input 15)) ] -}
  [1#, 2, 1, 0] |-> [ 1# , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP (Top 1) (Mirror (Input 16)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 2, 1, 0] |-> [1#] {- Many [ DP (Top 57) (Mirror (Input 16)) , DP (Top 54) (Mirror (Input 15)) , DP (Top 51) (Mirror (Input 14)) , DP (Top 48) (Mirror (Input 13)) , DP (Top 45) (Mirror (Input 12)) , DP (Top 42) (Mirror (Input 11)) , DP (Top 39) (Mirror (Input 10)) , DP (Top 36) (Mirror (Input 9)) , DP (Top 33) (Mirror (Input 8)) , DP (Top 30) (Mirror (Input 7)) , DP (Top 27) (Mirror (Input 6)) , DP (Top 24) (Mirror (Input 5)) , DP (Top 21) (Mirror (Input 4)) , DP (Top 18) (Mirror (Input 3)) , DP (Top 15) (Mirror (Input 2)) , DP (Top 12) (Mirror (Input 1)) , DP (Top 9) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [1#, 1, 2, 1] {- Many [ DP (Top 54) (Mirror (Input 16)) , DP (Top 51) (Mirror (Input 15)) , DP (Top 48) (Mirror (Input 14)) , DP (Top 45) (Mirror (Input 13)) , DP (Top 42) (Mirror (Input 12)) , DP (Top 39) (Mirror (Input 11)) , DP (Top 36) (Mirror (Input 10)) , DP (Top 33) (Mirror (Input 9)) , DP (Top 30) (Mirror (Input 8)) , DP (Top 27) (Mirror (Input 7)) , DP (Top 24) (Mirror (Input 6)) , DP (Top 21) (Mirror (Input 5)) , DP (Top 18) (Mirror (Input 4)) , DP (Top 15) (Mirror (Input 3)) , DP (Top 12) (Mirror (Input 2)) , DP (Top 9) (Mirror (Input 1)) , DP (Top 6) (Mirror (Input 0)) ] -}
  [1#, 2, 1, 0] |-> [1#, 2, 1] {- Many [ DP (Top 55) (Mirror (Input 16)) , DP (Top 52) (Mirror (Input 15)) , DP (Top 49) (Mirror (Input 14)) , DP (Top 46) (Mirror (Input 13)) , DP (Top 43) (Mirror (Input 12)) , DP (Top 40) (Mirror (Input 11)) , DP (Top 37) (Mirror (Input 10)) , DP (Top 34) (Mirror (Input 9)) , DP (Top 31) (Mirror (Input 8)) , DP (Top 28) (Mirror (Input 7)) , DP (Top 25) (Mirror (Input 6)) , DP (Top 22) (Mirror (Input 5)) , DP (Top 19) (Mirror (Input 4)) , DP (Top 16) (Mirror (Input 3)) , DP (Top 13) (Mirror (Input 2)) , DP (Top 10) (Mirror (Input 1)) , DP (Top 7) (Mirror (Input 0)) ] -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 3)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 4)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 5)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 6)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 7)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 8)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 9)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 10)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 11)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 12)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 13)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 14)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 15)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 16)) -}
reason
  ( 1
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 2
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( 1#
  , Wk  / 7A 10A 10A - \
        | 7A 10A 10A - |
        | 7A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [1#, 2, 1, 0] |-> [1#] {- Many [ DP (Top 57) (Mirror (Input 16)) , DP (Top 54) (Mirror (Input 15)) , DP (Top 51) (Mirror (Input 14)) , DP (Top 48) (Mirror (Input 13)) , DP (Top 45) (Mirror (Input 12)) , DP (Top 42) (Mirror (Input 11)) , DP (Top 39) (Mirror (Input 10)) , DP (Top 36) (Mirror (Input 9)) , DP (Top 33) (Mirror (Input 8)) , DP (Top 30) (Mirror (Input 7)) , DP (Top 27) (Mirror (Input 6)) , DP (Top 24) (Mirror (Input 5)) , DP (Top 21) (Mirror (Input 4)) , DP (Top 18) (Mirror (Input 3)) , DP (Top 15) (Mirror (Input 2)) , DP (Top 12) (Mirror (Input 1)) , DP (Top 9) (Mirror (Input 0)) ] -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 3)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 4)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 5)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 6)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 7)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 8)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 9)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 10)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 11)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 12)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 13)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 14)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 15)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 16)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 2, 1, 0] |-> [1#] {- Many [ DP (Top 57) (Mirror (Input 16)) , DP (Top 54) (Mirror (Input 15)) , DP (Top 51) (Mirror (Input 14)) , DP (Top 48) (Mirror (Input 13)) , DP (Top 45) (Mirror (Input 12)) , DP (Top 42) (Mirror (Input 11)) , DP (Top 39) (Mirror (Input 10)) , DP (Top 36) (Mirror (Input 9)) , DP (Top 33) (Mirror (Input 8)) , DP (Top 30) (Mirror (Input 7)) , DP (Top 27) (Mirror (Input 6)) , DP (Top 24) (Mirror (Input 5)) , DP (Top 21) (Mirror (Input 4)) , DP (Top 18) (Mirror (Input 3)) , DP (Top 15) (Mirror (Input 2)) , DP (Top 12) (Mirror (Input 1)) , DP (Top 9) (Mirror (Input 0)) ] -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 3)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 4)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 5)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 6)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 7)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 8)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 9)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 10)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 11)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 12)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 13)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 14)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 15)) -}
  [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 16)) -}
reason
  remove un-usable
    SRS
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 0)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 3)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 4)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 5)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 6)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 7)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 8)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 9)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 10)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 11)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 12)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 13)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 14)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 15)) -}
      [1, 2, 1, 0] ->= [ 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 2 , 1 , 0 , 1 , 1 , 2 , 1 ] {- DP Nontop (Mirror (Input 16)) -}
   property Termination
has value Just True
for SRS
  [1#, 2, 1, 0] |-> [1#] {- Many [ DP (Top 57) (Mirror (Input 16)) , DP (Top 54) (Mirror (Input 15)) , DP (Top 51) (Mirror (Input 14)) , DP (Top 48) (Mirror (Input 13)) , DP (Top 45) (Mirror (Input 12)) , DP (Top 42) (Mirror (Input 11)) , DP (Top 39) (Mirror (Input 10)) , DP (Top 36) (Mirror (Input 9)) , DP (Top 33) (Mirror (Input 8)) , DP (Top 30) (Mirror (Input 7)) , DP (Top 27) (Mirror (Input 6)) , DP (Top 24) (Mirror (Input 5)) , DP (Top 21) (Mirror (Input 4)) , DP (Top 18) (Mirror (Input 3)) , DP (Top 15) (Mirror (Input 2)) , DP (Top 12) (Mirror (Input 1)) , DP (Top 9) (Mirror (Input 0)) ] -}
reason
  (1, 1/1)
  (2, 1/1)
  (0, 1/1)
  (1#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(17,3)\Deepee(21/17,4)\EDG(3/17,4)\Matrix{\Arctic}{3}\EDG(1/17,4)\Usable(1,4)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24330, clauses: 103279
last 24330 length 103279
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.220863492000
  min duration 3.060815126000
  total durat. 9.363729473000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 666}
    , self = 56
    , parent = Nothing
    , duration = 3.060815126000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:36:15.590047662 UTC
    , finish = 2025-09-03 12:36:18.650862788 UTC
    , thread_cap_info = ("ThreadId 91", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 119
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 102
      , alphabet_size = 10
      , total_length = 4222}
    , self = 59
    , parent = Nothing
    , duration = 3.082050855000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:36:15.6500794 UTC
    , finish = 2025-09-03 12:36:18.732130255 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 35
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 1231}
    , self = 53
    , parent = Nothing
    , duration = 3.220863492000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:36:15.350066837 UTC
    , finish = 2025-09-03 12:36:18.570930329 UTC
    , thread_cap_info = ("ThreadId 86", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.360100470000
  min duration 3.360100470000
  total durat. 3.360100470000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 102
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 4080}
    , self = 55
    , parent = Nothing
    , duration = 3.360100470000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:36:15.290032422 UTC
    , finish = 2025-09-03 12:36:18.650132892 UTC
    , thread_cap_info = ("ThreadId 78", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.197880705000
  min duration 3.040839608000
  total durat. 9.299729719000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 666}
    , self = 57
    , parent = Nothing
    , duration = 3.040839608000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:36:15.6100416 UTC
    , finish = 2025-09-03 12:36:18.650881208 UTC
    , thread_cap_info = ("ThreadId 92", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 119
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 102
      , alphabet_size = 10
      , total_length = 4222}
    , self = 60
    , parent = Nothing
    , duration = 3.061009406000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:36:15.671136027 UTC
    , finish = 2025-09-03 12:36:18.732145433 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 35
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 1231}
    , self = 54
    , parent = Nothing
    , duration = 3.197880705000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:36:15.376138384 UTC
    , finish = 2025-09-03 12:36:18.574019089 UTC
    , thread_cap_info = ("ThreadId 87", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.378880081000
  min duration 3.378880081000
  total durat. 3.378880081000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 102
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 4080}
    , self = 58
    , parent = Nothing
    , duration = 3.378880081000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:36:15.311180248 UTC
    , finish = 2025-09-03 12:36:18.690060329 UTC
    , thread_cap_info = ("ThreadId 80", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.268262836000
  min duration 2.268262836000
  total durat. 2.268262836000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 666}
    , self = 63
    , parent = Nothing
    , duration = 2.268262836000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:36:18.772572842 UTC
    , finish = 2025-09-03 12:36:21.040835678 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.093339226000
  min duration 2.093339226000
  total durat. 2.093339226000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 666}
    , self = 61
    , parent = Nothing
    , duration = 2.093339226000
    , status = Success
    , start = 2025-09-03 12:36:18.761381069 UTC
    , finish = 2025-09-03 12:36:20.854720295 UTC
    , thread_cap_info = ("ThreadId 110", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.458670569000
  min duration 2.458670569000
  total durat. 2.458670569000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 35
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 17
      , alphabet_size = 4
      , total_length = 1231}
    , self = 64
    , parent = Nothing
    , duration = 2.458670569000
    , status = Fail
    , start = 2025-09-03 12:36:18.631556924 UTC
    , finish = 2025-09-03 12:36:21.090227493 UTC
    , thread_cap_info = ("ThreadId 105", 3, False)}
**************************************************
E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
E                = 102 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
E                = 4080} , self = 55 , parent = Nothing , duration = 3.360100470000 , status
E                = Except "AsyncCancelled" , start = 2025-09-03 12:36:15.290032422 UTC ,
E                finish = 2025-09-03 12:36:18.650132892 UTC , thread_cap_info = ("ThreadId
E                78", 0, False)}
E                
| S              Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| S              verbose = False}" , input_size = Size { num_rules = 231 , num_strict_rules
| S              = 129 , num_top_rules = 129 , num_weak_rules = 102 , alphabet_size = 10
| S              , total_length = 8304} , self = 49 , parent = Nothing , duration = 0.319574724000
| S              , status = Success , start = 2025-09-03 12:36:15.290036705 UTC , finish
| S              = 2025-09-03 12:36:15.609611429 UTC , thread_cap_info = ("ThreadId 58",
| S              2, False)}
| S              
| | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E            = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | E            = 102 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | E            = 4080} , self = 58 , parent = Nothing , duration = 3.378880081000 , status
| | E            = Except "AsyncCancelled" , start = 2025-09-03 12:36:15.311180248 UTC ,
| | E            finish = 2025-09-03 12:36:18.690060329 UTC , thread_cap_info = ("ThreadId
| | E            80", 0, False)}
| | E            
| | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 35 , num_strict_rules
| | | E          = 18 , num_top_rules = 18 , num_weak_rules = 17 , alphabet_size = 4 , total_length
| | | E          = 1231} , self = 53 , parent = Nothing , duration = 3.220863492000 , status
| | | E          = Except "<<timeout>>" , start = 2025-09-03 12:36:15.350066837 UTC , finish
| | | E          = 2025-09-03 12:36:18.570930329 UTC , thread_cap_info = ("ThreadId 86",
| | | E          3, False)}
| | | E          
| | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 35 , num_strict_rules
| | | | E        = 18 , num_top_rules = 18 , num_weak_rules = 17 , alphabet_size = 4 , total_length
| | | | E        = 1231} , self = 54 , parent = Nothing , duration = 3.197880705000 , status
| | | | E        = Except "<<timeout>>" , start = 2025-09-03 12:36:15.376138384 UTC , finish
| | | | E        = 2025-09-03 12:36:18.574019089 UTC , thread_cap_info = ("ThreadId 87",
| | | | E        3, False)}
| | | | E        
| | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | E      = 3 , num_top_rules = 3 , num_weak_rules = 17 , alphabet_size = 4 , total_length
| | | | | E      = 666} , self = 56 , parent = Nothing , duration = 3.060815126000 , status
| | | | | E      = Except "<<timeout>>" , start = 2025-09-03 12:36:15.590047662 UTC , finish
| | | | | E      = 2025-09-03 12:36:18.650862788 UTC , thread_cap_info = ("ThreadId 91",
| | | | | E      3, False)}
| | | | | E      
| S | | | |      
| E | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| E | | | |      = 3 , num_top_rules = 3 , num_weak_rules = 17 , alphabet_size = 4 , total_length
| E | | | |      = 666} , self = 57 , parent = Nothing , duration = 3.040839608000 , status
| E | | | |      = Except "<<timeout>>" , start = 2025-09-03 12:36:15.6100416 UTC , finish
| E | | | |      = 2025-09-03 12:36:18.650881208 UTC , thread_cap_info = ("ThreadId 92",
| E | | | |      3, False)}
| E | | | |      
| | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 119 , num_strict_rules
| | | | | | E    = 17 , num_top_rules = 17 , num_weak_rules = 102 , alphabet_size = 10 ,
| | | | | | E    total_length = 4222} , self = 59 , parent = Nothing , duration = 3.082050855000
| | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-03 12:36:15.6500794 UTC
| | | | | | E    , finish = 2025-09-03 12:36:18.732130255 UTC , thread_cap_info = ("ThreadId
| | | | | | E    97", 2, False)}
| | | | | | E    
| | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 119 , num_strict_rules
| | | | | | | E  = 17 , num_top_rules = 17 , num_weak_rules = 102 , alphabet_size = 10 ,
| | | | | | | E  total_length = 4222} , self = 60 , parent = Nothing , duration = 3.061009406000
| | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 12:36:15.671136027
| | | | | | | E  UTC , finish = 2025-09-03 12:36:18.732145433 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  98", 2, False)}
| | | | | | | E  
| | | E | | | |  
| | |   E | | |  
| | | F   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   | | |  = 35 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 17
| | | F   | | |  , alphabet_size = 4 , total_length = 1231} , self = 64 , parent = Nothing
| | | F   | | |  , duration = 2.458670569000 , status = Fail , start = 2025-09-03 12:36:18.631556924
| | | F   | | |  UTC , finish = 2025-09-03 12:36:21.090227493 UTC , thread_cap_info = ("ThreadId
| | | F   | | |  105", 3, False)}
| | | F   | | |  
E | | |   | | |  
  | | |   E | |  
  E | |     | |  
    E |     | |  
      |     E |  
      |       E  
S     |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |          = 20 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 17 ,
S     |          alphabet_size = 4 , total_length = 666} , self = 61 , parent = Nothing
S     |          , duration = 2.093339226000 , status = Success , start = 2025-09-03 12:36:18.761381069
S     |          UTC , finish = 2025-09-03 12:36:20.854720295 UTC , thread_cap_info = ("ThreadId
S     |          110", 3, False)}
S     |          
| E   |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| E   |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 17 , alphabet_size
| E   |          = 4 , total_length = 666} , self = 63 , parent = Nothing , duration = 2.268262836000
| E   |          , status = Except "AsyncCancelled" , start = 2025-09-03 12:36:18.772572842
| E   |          UTC , finish = 2025-09-03 12:36:21.040835678 UTC , thread_cap_info = ("ThreadId
| E   |          111", 3, False)}
| E   |          
S |   |          
  E   |          
      F          
