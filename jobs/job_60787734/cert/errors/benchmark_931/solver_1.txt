last 809 length 3216
last 770 length 2974
last 858 length 3448
CNF 770 vars 2974 clauses
last 623 length 2439
CNF 809 vars 3216 clauses
CNF 858 vars 3448 clauses
CNF 623 vars 2439 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3325, clauses: 12166
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2951, clauses: 10818
last 3325 length 12166
last 2951 length 10818
last 5577 length 23169
last 5196 length 21597
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7765, clauses: 32070
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8432, clauses: 34869
CNF 3325 vars 12166 clauses
CNF 5577 vars 23169 clauses
CNF 5196 vars 21597 clauses
CNF 2951 vars 10818 clauses
last 22602 length 93594
last 7765 length 32070
last 16800 length 70535
last 8432 length 34869
last 14428 length 60974
last 18676 length 77641
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3325, clauses: 12166, status: Satisfied, time: 0.870375595s
CNF 7765 vars 32070 clauses
CNF 8432 vars 34869 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2951, clauses: 10818, status: Satisfied, time: 0.878028736s
CNF 22602 vars 93594 clauses
CNF 14428 vars 60974 clauses
CNF 16800 vars 70535 clauses
CNF 18676 vars 77641 clauses
last 435 length 1791
last 516 length 2080
CNF 435 vars 1791 clauses
CNF 516 vars 2080 clauses
last 521 length 2099
last 442 length 1802
CNF 521 vars 2099 clauses
CNF 442 vars 1802 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1793, clauses: 6357
last 1793 length 6357
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1898, clauses: 6708
last 1898 length 6708
CNF 1793 vars 6357 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6286, clauses: 26065
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6870, clauses: 28533
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1793, clauses: 6357, status: Satisfied, time: 0.430099246s
CNF 1898 vars 6708 clauses
last 6286 length 26065
last 6870 length 28533
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1898, clauses: 6708, status: Unsatisfied, time: 0.841625727s
CNF 6870 vars 28533 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       mirror
SRS with 4 rules on 3 letters       DP
SRS with 8 strict rules and 4 weak rules on 6 letters       EDG
SRS with 8 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 4 weak rules on 6 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       EDG
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, c] -> [a, b] {- Input 0 -}
  [b] -> [a, a] {- Input 1 -}
  [b, b, b] -> [a, c, b] {- Input 2 -}
  [a, c, a] -> [a, c, c] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, c] -> [b, a] {- Mirror (Input 0) -}
  [b] -> [a, a] {- Mirror (Input 1) -}
  [b, b, b] -> [b, c, a] {- Mirror (Input 2) -}
  [a, c, a] -> [c, c, a] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26972, clauses: 108339
  last 26972 length 108339
[c, c] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [b, c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 3)) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#] |-> [a#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#] |-> [a#, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Mirror (Input 2)) -}
  [b#, b, b] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, b] |-> [c#, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 0)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 0)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#] |-> [a#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#] |-> [a#, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Mirror (Input 2)) -}
  [b#, b, b] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, b] |-> [c#, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [b, c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 10A 12A 13A - \
        | 10A 12A 13A - |
        | 10A 12A 13A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 14A 15A 15A - \
        | 14A 15A 15A - |
        | 14A 15A 15A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, b] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [b, c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 2/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [b, c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [b, c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b#
  , Wk  / 13A 13A 16A - \
        | 13A 13A 16A - |
        | 13A 13A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [b, c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(4,3)\Deepee\EDG(8/4,6)\Matrix{\Arctic}{3}(3/4,6)\Weight\EDG(1/4,4)\Matrix{\Arctic}{3}(0/4,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.038049574000
  min duration 0.026418464000
  total durat. 3.235915423000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 114
      , num_strict_rules = 78
      , num_top_rules = 78
      , num_weak_rules = 36
      , alphabet_size = 18
      , total_length = 687}
    , self = 82
    , parent = Nothing
    , duration = 1.038049574000
    , status = Fail
    , start = 2025-09-03 13:33:26.895689698 UTC
    , finish = 2025-09-03 13:33:27.933739272 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.019582454000
  min duration 0.020621038000
  total durat. 3.130214060000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 144
      , num_strict_rules = 108
      , num_top_rules = 108
      , num_weak_rules = 36
      , alphabet_size = 18
      , total_length = 855}
    , self = 81
    , parent = Nothing
    , duration = 1.019582454000
    , status = Fail
    , start = 2025-09-03 13:33:26.87619959 UTC
    , finish = 2025-09-03 13:33:27.895782044 UTC
    , thread_cap_info = ("ThreadId 106", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.092437870000
  min duration 0.953795321000
  total durat. 3.071151355000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 25}
    , self = 85
    , parent = Nothing
    , duration = 1.024918164000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:27.856786962 UTC
    , finish = 2025-09-03 13:33:28.881705126 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 45}
    , self = 70
    , parent = Nothing
    , duration = 1.092437870000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:26.735683816 UTC
    , finish = 2025-09-03 13:33:27.828121686 UTC
    , thread_cap_info = ("ThreadId 92", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.020459324000
  min duration 0.947195226000
  total durat. 2.985474756000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 52}
    , self = 61
    , parent = Nothing
    , duration = 1.017820206000
    , status = Success
    , start = 2025-09-03 13:33:26.659285818 UTC
    , finish = 2025-09-03 13:33:27.677106024 UTC
    , thread_cap_info = ("ThreadId 84", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 45}
    , self = 64
    , parent = Nothing
    , duration = 1.020459324000
    , status = Success
    , start = 2025-09-03 13:33:26.695699774 UTC
    , finish = 2025-09-03 13:33:27.716159098 UTC
    , thread_cap_info = ("ThreadId 89", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.143099521000
  min duration 1.143099521000
  total durat. 1.143099521000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 25}
    , self = 88
    , parent = Nothing
    , duration = 1.143099521000
    , status = Fail
    , start = 2025-09-03 13:33:27.915680642 UTC
    , finish = 2025-09-03 13:33:29.058780163 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.439978542000
  min duration 2.439978542000
  total durat. 2.439978542000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 19}
    , self = 90
    , parent = Nothing
    , duration = 2.439978542000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:26.655856702 UTC
    , finish = 2025-09-03 13:33:29.095835244 UTC
    , thread_cap_info = ("ThreadId 78", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.470722930000
  min duration 2.470722930000
  total durat. 2.470722930000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 19}
    , self = 89
    , parent = Nothing
    , duration = 2.470722930000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:26.625089501 UTC
    , finish = 2025-09-03 13:33:29.095812431 UTC
    , thread_cap_info = ("ThreadId 26", 3, False)}
**************************************************
E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                        = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                        = 19} , self = 89 , parent = Nothing , duration = 2.470722930000 , status
E                        = Except "AsyncCancelled" , start = 2025-09-03 13:33:26.625089501 UTC ,
E                        finish = 2025-09-03 13:33:29.095812431 UTC , thread_cap_info = ("ThreadId
E                        26", 3, False)}
E                        
| F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                      = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F                      = 52} , self = 45 , parent = Nothing , duration = 0.108060161000 , status
| F                      = Fail , start = 2025-09-03 13:33:26.631876427 UTC , finish = 2025-09-03
| F                      13:33:26.739936588 UTC , thread_cap_info = ("ThreadId 58", 2, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F                    = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                    = 243} , self = 60 , parent = Nothing , duration = 0.992963932000 , status
| | F                    = Fail , start = 2025-09-03 13:33:26.632890117 UTC , finish = 2025-09-03
| | F                    13:33:27.625854049 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                  = 243} , self = 59 , parent = Nothing , duration = 0.991147634000 , status
| | | F                  = Fail , start = 2025-09-03 13:33:26.632892623 UTC , finish = 2025-09-03
| | | F                  13:33:27.624040257 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | F                  
| | | | E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | E                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | E                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | E                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | E                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | E                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | E                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E                = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | E                = 19} , self = 90 , parent = Nothing , duration = 2.439978542000 , status
| | | | E                = Except "AsyncCancelled" , start = 2025-09-03 13:33:26.655856702 UTC ,
| | | | E                finish = 2025-09-03 13:33:29.095835244 UTC , thread_cap_info = ("ThreadId
| | | | E                78", 3, False)}
| | | | E                
| | | | | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S              = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| | | | | S              alphabet_size = 6 , total_length = 52} , self = 61 , parent = Nothing ,
| | | | | S              duration = 1.017820206000 , status = Success , start = 2025-09-03 13:33:26.659285818
| | | | | S              UTC , finish = 2025-09-03 13:33:27.677106024 UTC , thread_cap_info = ("ThreadId
| | | | | S              84", 2, False)}
| | | | | S              
| | | | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S            = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | | | | S            alphabet_size = 6 , total_length = 45} , self = 64 , parent = Nothing ,
| | | | | | S            duration = 1.020459324000 , status = Success , start = 2025-09-03 13:33:26.695699774
| | | | | | S            UTC , finish = 2025-09-03 13:33:27.716159098 UTC , thread_cap_info = ("ThreadId
| | | | | | S            89", 2, False)}
| | | | | | S            
| | | | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | E          , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | | | | | E          = 6 , total_length = 45} , self = 70 , parent = Nothing , duration = 1.092437870000
| | | | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:26.735683816
| | | | | | | E          UTC , finish = 2025-09-03 13:33:27.828121686 UTC , thread_cap_info = ("ThreadId
| | | | | | | E          92", 2, False)}
| | | | | | | E          
| F | | | | | |          
| E | | | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | | | | | |          , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| E | | | | | |          = 6 , total_length = 52} , self = 63 , parent = Nothing , duration = 0.953795321000
| E | | | | | |          , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:26.756317725
| E | | | | | |          UTC , finish = 2025-09-03 13:33:27.710113046 UTC , thread_cap_info = ("ThreadId
| E | | | | | |          93", 2, False)}
| E | | | | | |          
| | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 144 , num_strict_rules
| | | | | | | | F        = 108 , num_top_rules = 108 , num_weak_rules = 36 , alphabet_size = 18
| | | | | | | | F        , total_length = 855} , self = 77 , parent = Nothing , duration = 0.989556129000
| | | | | | | | F        , status = Fail , start = 2025-09-03 13:33:26.867418813 UTC , finish =
| | | | | | | | F        2025-09-03 13:33:27.856974942 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | F        0, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 144 , num_strict_rules
| | | | | | | | | F      = 108 , num_top_rules = 108 , num_weak_rules = 36 , alphabet_size = 18
| | | | | | | | | F      , total_length = 855} , self = 81 , parent = Nothing , duration = 1.019582454000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 13:33:26.87619959 UTC , finish = 2025-09-03
| | | | | | | | | F      13:33:27.895782044 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 114 , num_strict_rules
| | | | | | | | | | F    = 78 , num_top_rules = 78 , num_weak_rules = 36 , alphabet_size = 18 ,
| | | | | | | | | | F    total_length = 687} , self = 82 , parent = Nothing , duration = 1.038049574000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 13:33:26.895689698 UTC , finish =
| | | | | | | | | | F    2025-09-03 13:33:27.933739272 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | | | | F    2, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 114 , num_strict_rules
| | | | | | | | | | | F  = 78 , num_top_rules = 78 , num_weak_rules = 36 , alphabet_size = 18 ,
| | | | | | | | | | | F  total_length = 687} , self = 78 , parent = Nothing , duration = 0.944454025000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 13:33:26.916396363 UTC , finish =
| | | | | | | | | | | F  2025-09-03 13:33:27.860850388 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | | | F  2, False)}
| | | | | | | | | | | F  
| | | F | | | | | | | |  
| | F   | | | | | | | |  
| |     | S | | | | | |  
| E     |   | | | | | |  
| F     |   | | | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| F     |   | | | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| F     |   | | | | | |  = Size { num_rules = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules
| F     |   | | | | | |  = 4 , alphabet_size = 4 , total_length = 25} , self = 66 , parent = Nothing
| F     |   | | | | | |  , duration = 0.101868033000 , status = Fail , start = 2025-09-03 13:33:27.713882608
| F     |   | | | | | |  UTC , finish = 2025-09-03 13:33:27.815750641 UTC , thread_cap_info = ("ThreadId
| F     |   | | | | | |  122", 2, False)}
| F     |   | | | | | |  
| |     |   S | | | | |  
| F     |     | | | | |  
|       |     E | | | |  
| S     |       | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S     |       | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S     |       | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S     |       | | | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| S     |       | | | |  = 4 , total_length = 25} , self = 83 , parent = Nothing , duration = 0.947195226000
| S     |       | | | |  , status = Success , start = 2025-09-03 13:33:27.849786934 UTC , finish
| S     |       | | | |  = 2025-09-03 13:33:28.79698216 UTC , thread_cap_info = ("ThreadId 135",
| S     |       | | | |  2, False)}
| S     |       | | | |  
| | E   |       | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E   |       | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |       | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |       | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |       | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |       | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E   |       | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | E   |       | | | |  = 4 , total_length = 25} , self = 85 , parent = Nothing , duration = 1.024918164000
| | E   |       | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:27.856786962
| | E   |       | | | |  UTC , finish = 2025-09-03 13:33:28.881705126 UTC , thread_cap_info = ("ThreadId
| | E   |       | | | |  136", 2, False)}
| | E   |       | | | |  
| | |   |       F | | |  
| | |   |         | | F  
| | |   |         F |    
| | | F |           |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |           |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |           |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |           |    = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | F |           |    = 4 , total_length = 25} , self = 88 , parent = Nothing , duration = 1.143099521000
| | | F |           |    , status = Fail , start = 2025-09-03 13:33:27.915680642 UTC , finish =
| | | F |           |    2025-09-03 13:33:29.058780163 UTC , thread_cap_info = ("ThreadId 141",
| | | F |           |    2, False)}
| | | F |           |    
| | | | |           F    
| S | | |                
|   E | |                
|     F |                
E       |                
        E                
