last 483 length 1957
last 516 length 2035
CNF 483 vars 1957 clauses
CNF 516 vars 2035 clauses
last 372 length 1453
last 384 length 1483
CNF 372 vars 1453 clauses
last 3072 length 14194
CNF 384 vars 1483 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2407, clauses: 8563
last 3477 length 18467
last 3641 length 19127
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6581, clauses: 27093
last 3184 length 14642
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1997, clauses: 7044
CNF 3072 vars 14194 clauses
last 3602 length 14888
last 2407 length 8563
CNF 3477 vars 18467 clauses
CNF 3641 vars 19127 clauses
last 6581 length 27093
last 4587 length 19463
CNF 3184 vars 14642 clauses
last 1997 length 7044
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6454, clauses: 26671
CNF 2407 vars 8563 clauses
CNF 4587 vars 19463 clauses
last 6454 length 26671
CNF 3602 vars 14888 clauses
CNF 1997 vars 7044 clauses
CNF 6581 vars 27093 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2407, clauses: 8563, status: Unsatisfied, time: 0.232920367s
CNF 6454 vars 26671 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6920, clauses: 24948
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1997, clauses: 7044, status: Unsatisfied, time: 0.232448625s
**************************************************last 6920 length 24948

summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       weights
SRS with 20 rules on 9 letters       mirror
SRS with 20 rules on 9 letters       DP
SRS with 38 strict rules and 20 weak rules on 14 letters       weights
SRS with 16 strict rules and 20 weak rules on 12 letters       EDG
SRS with 16 strict rules and 20 weak rules on 12 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 20 weak rules on 12 letters       weights
SRS with 0 strict rules and 20 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [a, b] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, b] -> [b, a, c, c] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, a]] -> [ [a, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, a] , [a, c] , [c, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, a] , [a, c] , [c, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, c] , [c, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, a] , [a, c] , [c, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, a] , [a, c] , [c, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, c] , [c, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, b], [b, a]] -> [ [c, b] , [b, a] , [a, c] , [c, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, b], [b, b]] -> [ [c, b] , [b, a] , [a, c] , [c, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, c] , [c, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([b, c], 1/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, a] , [a, c] , [c, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, a] , [a, c] , [c, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, c] , [c, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, a] , [a, c] , [c, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, a] , [a, c] , [c, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, c] , [c, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, b], [b, a]] -> [ [c, b] , [b, a] , [a, c] , [c, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, b], [b, b]] -> [ [c, b] , [b, a] , [a, c] , [c, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, c] , [c, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [a, a], [a, a]] -> [ [b, b] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [a, a]] -> [ [b, c] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b], [a, a], [b, a]] -> [ [b, b] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [b, a]] -> [ [b, c] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, b], [a, a], [c, a]] -> [ [b, b] , [a, b] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [c, a]] -> [ [b, c] , [a, b] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, a], [c, b], [a, c]] -> [ [c, a] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[b, b], [c, b], [a, c]] -> [ [c, b] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[b, c], [c, b], [a, c]] -> [ [c, c] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[b, a], [c, b], [b, c]] -> [ [c, a] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[b, b], [c, b], [b, c]] -> [ [c, b] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[b, c], [c, b], [b, c]] -> [ [c, c] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[b, a], [c, b], [c, c]] -> [ [c, a] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[b, b], [c, b], [c, c]] -> [ [c, b] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[b, c], [c, b], [c, c]] -> [ [c, c] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [b, b] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [c, a]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [c, a]] |-> [ [b, b]# , [a, b] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 3/1)
  ([a, b], 3/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 3/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 3/1)
  ([c, c], 0/1)
  ([a, b]#, 3/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 2/1)
  ([b, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [b, b] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [b, b] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [a, b]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [a, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [b, a]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [b, b]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [b, c]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [c, a]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [c, b]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [c, c]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [a, c]#
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [b, a]#
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [b, c]#
  , Ek 2  / 2 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [b, b] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, c]#, 0/1)
  ([b, a]#, 1/1)
  ([b, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [b, b] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}(36,9)\Weight\Mirror(20,9)\Deepee(38/20,14)\Weight\EDG(16/20,12)\Matrix{\Natural}{2}(6/20,12)\Weight(0/20,9)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 6920 vars 24948 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6454, clauses: 26671, status: Satisfied, time: 0.330585978s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.362226059000
  min duration 0.018643868000
  total durat. 1.149332257000
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                  = 57 , parent = Nothing , duration = 0.215073287000 , status = Fail , start
F                  = 2025-09-03 11:42:30.213651725 UTC , finish = 2025-09-03 11:42:30.428725012
F                  UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F                = 20 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                = 123} , self = 59 , parent = Nothing , duration = 0.317814224000 , status
| F                = Fail , start = 2025-09-03 11:42:30.225390466 UTC , finish = 2025-09-03
| F                11:42:30.54320469 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F              = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | F              = 32} , self = 56 , parent = Nothing , duration = 0.160625255000 , status
| | F              = Fail , start = 2025-09-03 11:42:30.244019741 UTC , finish = 2025-09-03
| | F              11:42:30.404644996 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F            = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | F            = 32} , self = 58 , parent = Nothing , duration = 0.191603100000 , status
| | | F            = Fail , start = 2025-09-03 11:42:30.245490321 UTC , finish = 2025-09-03
| | | F            11:42:30.437093421 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | F          = 1 , num_top_rules = 1 , num_weak_rules = 20 , alphabet_size = 10 , total_length
| | | | F          = 129} , self = 62 , parent = Nothing , duration = 0.322475135000 , status
| | | | F          = Fail , start = 2025-09-03 11:42:30.245503677 UTC , finish = 2025-09-03
| | | | F          11:42:30.567978812 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | F        = 20 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F        = 123} , self = 61 , parent = Nothing , duration = 0.316503282000 , status
| | | | | F        = Fail , start = 2025-09-03 11:42:30.245508477 UTC , finish = 2025-09-03
| | | | | F        11:42:30.562011759 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 20 , alphabet_size = 10 , total_length
| | | | | | F      = 129} , self = 60 , parent = Nothing , duration = 0.291333793000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:42:30.268070313 UTC , finish = 2025-09-03
| | | | | | F      11:42:30.559404106 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | | F      
| | | | | | | S    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | S    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | S    = 16 , num_top_rules = 16 , num_weak_rules = 20 , alphabet_size = 12 ,
| | | | | | | S    total_length = 210} , self = 63 , parent = Nothing , duration = 0.359024969000
| | | | | | | S    , status = Success , start = 2025-09-03 11:42:30.372769104 UTC , finish
| | | | | | | S    = 2025-09-03 11:42:30.731794073 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | S    2, False)}
| | | | | | | S    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | F  = 16 , num_top_rules = 16 , num_weak_rules = 20 , alphabet_size = 12 ,
| | | | | | | | F  total_length = 210} , self = 65 , parent = Nothing , duration = 0.362226059000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:42:30.385313528 UTC , finish =
| | | | | | | | F  2025-09-03 11:42:30.747539587 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | F  3, False)}
| | | | | | | | F  
| | F | | | | | |  
F |   | | | | | |  
  |   F | | | | |  
  F     | | | | |  
        | | F | |  
        | F   | |  
        F     | |  
              S |  
                F  
