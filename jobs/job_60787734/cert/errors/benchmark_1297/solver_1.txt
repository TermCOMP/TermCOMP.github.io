last 589 length 2403
CNF 589 vars 2403 clauses
last 596 length 2445
CNF 596 vars 2445 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1982, clauses: 7131
last 1982 length 7131
last 771 length 3132
CNF 1982 vars 7131 clauses
last 839 length 3792
CNF 839 vars 3792 clauses
CNF 771 vars 3132 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1982, clauses: 7131, status: Unsatisfied, time: 0.099188148s
last 4141 length 20729
last 3885 length 17309
CNF 4141 vars 20729 clauses
CNF 3885 vars 17309 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6382, clauses: 26473
last 6382 length 26473
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2402, clauses: 8778
CNF 6382 vars 26473 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3965, clauses: 16032
last 2402 length 8778
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6802, clauses: 28128
last 3965 length 16032
CNF 2402 vars 8778 clauses
last 6802 length 28128
CNF 3965 vars 16032 clauses
CNF 6802 vars 28128 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2402, clauses: 8778, status: Unsatisfied, time: 0.147265018s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4297, clauses: 17286
last 4297 length 17286
CNF 4297 vars 17286 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3965, clauses: 16032, status: Unsatisfied, time: 0.33684801s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6382, clauses: 26473, status: Unsatisfied, time: 0.522497101s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12251
last 3252 length 12251
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4297, clauses: 17286, status: Unsatisfied, time: 0.516707946s
CNF 3252 vars 12251 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6802, clauses: 28128, status: Unsatisfied, time: 0.798023216s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12251, status: Unsatisfied, time: 0.255232864s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3934, clauses: 15188
last 3934 length 15188
last 7054 length 27997
CNF 3934 vars 15188 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11185, clauses: 47204
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6073, clauses: 22656
CNF 7054 vars 27997 clauses
last 20861 length 96104
last 11812 length 49647
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11745, clauses: 49377
last 14392 length 77395
last 11185 length 47204
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3934, clauses: 15188, status: Unsatisfied, time: 0.634903322s
last 6073 length 22656
CNF 11812 vars 49647 clauses
CNF 20861 vars 96104 clauses
last 11745 length 49377
CNF 11185 vars 47204 clauses
CNF 14392 vars 77395 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16074, clauses: 63851
CNF 6073 vars 22656 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7301, clauses: 27861
CNF 11745 vars 49377 clauses
last 16074 length 63851
last 7301 length 27861
CNF 7301 vars 27861 clauses
CNF 16074 vars 63851 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6073, clauses: 22656, status: Unsatisfied, time: 1.420709327s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7301, clauses: 27861, status: Unsatisfied, time: 1.390723407s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13792, clauses: 64115
last 13792 length 64115
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22261, clauses: 91189
last 22261 length 91189
CNF 13792 vars 64115 clauses
CNF 22261 vars 91189 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14275, clauses: 66203
last 14275 length 66203
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 44538, clauses: 186368
last 44538 length 186368
CNF 14275 vars 66203 clauses
CNF 44538 vars 186368 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14275, clauses: 66203, status: Satisfied, time: 1.922663016s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Usable
SRS with 1 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [b, b, c] -> [c, a, c, b, b] {- Input 1 -}
  [c, c] -> [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [c, b, b] -> [b, b, c, a, c] {- Mirror (Input 1) -}
  [c, c] -> [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [c, b, b] -> [b, b, c, a, c] {- Mirror (Input 1) -}
  [a, c, c] -> [a] {- Mirror (Input 2) -}
  [b, c, c] -> [b] {- Mirror (Input 2) -}
  [c, c, c] -> [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [b, b, c] -> [c, a, c, b, b] {- Input 1 -}
  [c, c, a] -> [a] {- Input 2 -}
  [c, c, b] -> [b] {- Input 2 -}
  [c, c, c] -> [c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
  [a#] |-> [b#] {- DP (Top 0) (Input 0) -}
  [b#, b, c] |-> [a#, c, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
  [b#, b, c] |-> [b#, b] {- DP (Top 3) (Input 1) -}
  [b#, b, c] |-> [c#, a, c, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, c] |-> [c#, b, b] {- DP (Top 2) (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
  [a#] |-> [b#] {- DP (Top 0) (Input 0) -}
  [b#, b, c] |-> [a#, c, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
  [b#, b, c] |-> [b#, b] {- DP (Top 3) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 0) (Input 0) -}
  [b#, b, c] |-> [a#, c, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
  [b#, b, c] |-> [b#, b] {- DP (Top 3) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -  -  0A 0A 0A \
        | -  -  -  -  -  |
        | 0A -  -  -  -  |
        | -  0A -  0A -  |
        \ -  -  -  -  0A / )
  ( b
  , Wk  / -  -  0A 0A 0A \
        | -  -  -  -  -  |
        | 0A -  -  -  -  |
        | -  0A -  -  -  |
        \ -  -  -  -  0A / )
  ( c
  , Wk  / 1A 1A 0A -  1A \
        | -  0A -  0A -  |
        | 0A -  -  -  -  |
        | -  2A -  1A -  |
        \ -  -  -  -  0A / )
  ( a#
  , Wk  / 1A - 2A - 1A \
        | -  - -  - -  |
        | -  - -  - -  |
        | -  - -  - -  |
        \ -  - -  - 0A / )
  ( b#
  , Wk  / 0A - 1A - -  \
        | -  - -  - -  |
        | -  - -  - -  |
        | -  - -  - -  |
        \ -  - -  - 0A / )
   property Termination
has value Just True
for SRS
  [b#, b, c] |-> [a#, c, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  remove un-usable
    SRS
      [a] ->= [b] {- DP Nontop (Input 0) -}
      [b, b, c] ->= [c, a, c, b, b] {- DP Nontop (Input 1) -}
      [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
      [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
      [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
   property Termination
has value Just True
for SRS
  [b#, b, c] |-> [b#] {- DP (Top 4) (Input 1) -}
reason
  (b, 1/1)
  (c, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(4/5,5)\Matrix{\Arctic}{5}(2/5,5)\Weight\EDG(1/5,4)\Usable(1,3)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.187280774000
  min duration 0.020370680000
  total durat. 4.386247569000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 43
      , num_top_rules = 43
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 415}
    , self = 71
    , parent = Nothing
    , duration = 1.879548117000
    , status = Fail
    , start = 2025-09-03 11:29:16.89631986 UTC
    , finish = 2025-09-03 11:29:18.775867977 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 624}
    , self = 72
    , parent = Nothing
    , duration = 2.187280774000
    , status = Fail
    , start = 2025-09-03 11:29:16.649007135 UTC
    , finish = 2025-09-03 11:29:18.836287909 UTC
    , thread_cap_info = ("ThreadId 111", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.392508098000
  min duration 0.039620945000
  total durat. 4.123515198000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 43
      , num_top_rules = 43
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 415}
    , self = 69
    , parent = Nothing
    , duration = 1.419059233000
    , status = Fail
    , start = 2025-09-03 11:29:16.920048058 UTC
    , finish = 2025-09-03 11:29:18.339107291 UTC
    , thread_cap_info = ("ThreadId 121", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 624}
    , self = 73
    , parent = Nothing
    , duration = 2.392508098000
    , status = Fail
    , start = 2025-09-03 11:29:16.655031518 UTC
    , finish = 2025-09-03 11:29:19.047539616 UTC
    , thread_cap_info = ("ThreadId 112", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.956424123000
  min duration 0.619113463000
  total durat. 1.575537586000
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.254340787000
  min duration 4.254340787000
  total durat. 4.254340787000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 40}
    , self = 76
    , parent = Nothing
    , duration = 4.254340787000
    , status = Success
    , start = 2025-09-03 11:29:20.573493811 UTC
    , finish = 2025-09-03 11:29:24.827834598 UTC
    , thread_cap_info = ("ThreadId 145", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.623899253000
  min duration 0.491455156000
  total durat. 1.115354409000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 7.338938594000
  min duration 7.338938594000
  total durat. 7.338938594000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 40}
    , self = 78
    , parent = Nothing
    , duration = 7.338938594000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:29:17.613495815 UTC
    , finish = 2025-09-03 11:29:24.952434409 UTC
    , thread_cap_info = ("ThreadId 126", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.027549780000
  min duration 0.462704774000
  total durat. 1.490254554000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 40}
    , self = 70
    , parent = Nothing
    , duration = 1.027549780000
    , status = Fail
    , start = 2025-09-03 11:29:17.507591276 UTC
    , finish = 2025-09-03 11:29:18.535141056 UTC
    , thread_cap_info = ("ThreadId 125", 0, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.009268314000
  min duration 1.960873551000
  total durat. 3.970141865000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 40}
    , self = 75
    , parent = Nothing
    , duration = 1.960873551000
    , status = Fail
    , start = 2025-09-03 11:29:18.55367983 UTC
    , finish = 2025-09-03 11:29:20.514553381 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 32}
    , self = 74
    , parent = Nothing
    , duration = 2.009268314000
    , status = Fail
    , start = 2025-09-03 11:29:17.733765422 UTC
    , finish = 2025-09-03 11:29:19.743033736 UTC
    , thread_cap_info = ("ThreadId 128", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.309872005000
  min duration 1.309872005000
  total durat. 1.309872005000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 68
    , parent = Nothing
    , duration = 1.309872005000
    , status = Fail
    , start = 2025-09-03 11:29:16.262919122 UTC
    , finish = 2025-09-03 11:29:17.572791127 UTC
    , thread_cap_info = ("ThreadId 26", 1, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 12} , self = 68 , parent = Nothing , duration = 1.309872005000 , status
F                  = Fail , start = 2025-09-03 11:29:16.262919122 UTC , finish = 2025-09-03
F                  11:29:17.572791127 UTC , thread_cap_info = ("ThreadId 26", 1, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                = 162} , self = 47 , parent = Nothing , duration = 0.198405159000 , status
| F                = Fail , start = 2025-09-03 11:29:16.264587094 UTC , finish = 2025-09-03
| F                11:29:16.462992253 UTC , thread_cap_info = ("ThreadId 63", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 46 , parent = Nothing , duration = 0.190480309000 , status
| | F              = Fail , start = 2025-09-03 11:29:16.264595624 UTC , finish = 2025-09-03
| | F              11:29:16.455075933 UTC , thread_cap_info = ("ThreadId 65", 2, False)}
| | F              
| | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F            = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F            = 4 , total_length = 32} , self = 44 , parent = Nothing , duration = 0.130548457000
| | | F            , status = Fail , start = 2025-09-03 11:29:16.297681519 UTC , finish =
| | | F            2025-09-03 11:29:16.428229976 UTC , thread_cap_info = ("ThreadId 76", 0,
| | | F            False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F          = 40} , self = 43 , parent = Nothing , duration = 0.100642839000 , status
| | | | F          = Fail , start = 2025-09-03 11:29:16.324591774 UTC , finish = 2025-09-03
| | | | F          11:29:16.425234613 UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| | | | F          
| | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | F        = 4 , total_length = 32} , self = 64 , parent = Nothing , duration = 0.619113463000
| | | | | F        , status = Fail , start = 2025-09-03 11:29:16.373488875 UTC , finish =
| | | | | F        2025-09-03 11:29:16.992602338 UTC , thread_cap_info = ("ThreadId 85", 0,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | F      = 5 , total_length = 40} , self = 59 , parent = Nothing , duration = 0.277427733000
| | | | | | F      , status = Fail , start = 2025-09-03 11:29:16.423715057 UTC , finish =
| | | | | | F      2025-09-03 11:29:16.70114279 UTC , thread_cap_info = ("ThreadId 88", 0,
| | | | | | F      False)}
| | | | | | F      
| | | | F | |      
| | | F   | |      
| | F     | |      
| F       | |      
| F       | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F       | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F       | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 54245, clauses: 226965
| F       | |      last 54245 length 226965
, dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F       | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F       | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| F       | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F       | |      = 5 , total_length = 40} , self = 66 , parent = Nothing , duration = 0.956424123000
| F       | |      , status = Fail , start = 2025-09-03 11:29:16.465514183 UTC , finish =
| F       | |      2025-09-03 11:29:17.421938306 UTC , thread_cap_info = ("ThreadId 95", 0,
| F       | |      False)}
| F       | |      
| | F     | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F     | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F     | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F     | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F     | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F     | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F     | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F     | |      = 4 , total_length = 32} , self = 63 , parent = Nothing , duration = 0.491455156000
| | F     | |      , status = Fail , start = 2025-09-03 11:29:16.470315826 UTC , finish =
| | F     | |      2025-09-03 11:29:16.961770982 UTC , thread_cap_info = ("ThreadId 96", 0,
| | F     | |      False)}
| | F     | |      
| | | S   | |      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | S   | |      verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | S   | |      = 43 , num_top_rules = 43 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | S   | |      total_length = 415} , self = 60 , parent = Nothing , duration = 0.152494568000
| | | S   | |      , status = Success , start = 2025-09-03 11:29:16.606113675 UTC , finish
| | | S   | |      = 2025-09-03 11:29:16.758608243 UTC , thread_cap_info = ("ThreadId 105",
| | | S   | |      1, False)}
| | | S   | |      
| | | | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | F | |      = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | F | |      total_length = 624} , self = 72 , parent = Nothing , duration = 2.187280774000
| | | | F | |      , status = Fail , start = 2025-09-03 11:29:16.649007135 UTC , finish =
| | | | F | |      2025-09-03 11:29:18.836287909 UTC , thread_cap_info = ("ThreadId 111",
| | | | F | |      1, False)}
| | | | F | |      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | | F    = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | F    total_length = 624} , self = 73 , parent = Nothing , duration = 2.392508098000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:29:16.655031518 UTC , finish =
| | | | | | | F    2025-09-03 11:29:19.047539616 UTC , thread_cap_info = ("ThreadId 112",
| | | | | | | F    1, False)}
| | | | | | | F    
| | | | | | F |    
| | | | | | F |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | F |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | F |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | F |    = 5 , total_length = 40} , self = 65 , parent = Nothing , duration = 0.623899253000
| | | | | | F |    , status = Fail , start = 2025-09-03 11:29:16.71277744 UTC , finish = 2025-09-03
| | | | | | F |    11:29:17.336676693 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | | | | | F |    
| | | S | | | |    
| | | F | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | F | | | |    = 43 , num_top_rules = 43 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | F | | | |    total_length = 415} , self = 71 , parent = Nothing , duration = 1.879548117000
| | | F | | | |    , status = Fail , start = 2025-09-03 11:29:16.89631986 UTC , finish = 2025-09-03
| | | F | | | |    11:29:18.775867977 UTC , thread_cap_info = ("ThreadId 120", 0, False)}
| | | F | | | |    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | | | | | | F  = 43 , num_top_rules = 43 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | F  total_length = 415} , self = 69 , parent = Nothing , duration = 1.419059233000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:29:16.920048058 UTC , finish =
| | | | | | | | F  2025-09-03 11:29:18.339107291 UTC , thread_cap_info = ("ThreadId 121",
| | | | | | | | F  0, False)}
| | | | | | | | F  
| | F | | | | | |  
| |   | | F | | |  
| | F | |   | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |   | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F | |   | | |  = 4 , total_length = 32} , self = 67 , parent = Nothing , duration = 0.462704774000
| | F | |   | | |  , status = Fail , start = 2025-09-03 11:29:17.093996366 UTC , finish =
| | F | |   | | |  2025-09-03 11:29:17.55670114 UTC , thread_cap_info = ("ThreadId 122", 0,
| | F | |   | | |  False)}
| | F | |   | | |  
| | | | |   F | |  
| F | | |     | |  
| F | | |     | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |     | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F | | |     | |  = 5 , total_length = 40} , self = 70 , parent = Nothing , duration = 1.027549780000
| F | | |     | |  , status = Fail , start = 2025-09-03 11:29:17.507591276 UTC , finish =
| F | | |     | |  2025-09-03 11:29:18.535141056 UTC , thread_cap_info = ("ThreadId 125",
| F | | |     | |  0, False)}
| F | | |     | |  
| | F | |     | |  
F |   | |     | |  
E |   | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |   | |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |   | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |   | |     | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E |   | |     | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
E |   | |     | |  = 5 , total_length = 40} , self = 78 , parent = Nothing , duration = 7.338938594000
E |   | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:29:17.613495815
E |   | |     | |  UTC , finish = 2025-09-03 11:29:24.952434409 UTC , thread_cap_info = ("ThreadId
E |   | |     | |  126", 0, False)}
E |   | |     | |  
| | F | |     | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |     | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F | |     | |  = 4 , total_length = 32} , self = 74 , parent = Nothing , duration = 2.009268314000
| | F | |     | |  , status = Fail , start = 2025-09-03 11:29:17.733765422 UTC , finish =
| | F | |     | |  2025-09-03 11:29:19.743033736 UTC , thread_cap_info = ("ThreadId 128",
| | F | |     | |  0, False)}
| | F | |     | |  
| | | | |     | F  
| F | | |     |    
| F | | |     |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F | | |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |     |    = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F | | |     |    = 5 , total_length = 40} , self = 75 , parent = Nothing , duration = 1.960873551000
| F | | |     |    , status = Fail , start = 2025-09-03 11:29:18.55367983 UTC , finish = 2025-09-03
| F | | |     |    11:29:20.514553381 UTC , thread_cap_info = ("ThreadId 136", 0, False)}
| F | | |     |    
| | | F |     |    
| | |   F     |    
| | |         F    
| | F              
| F                
| S                Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| S                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| S                , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| S                = 5 , total_length = 40} , self = 76 , parent = Nothing , duration = 4.254340787000
| S                , status = Success , start = 2025-09-03 11:29:20.573493811 UTC , finish
| S                = 2025-09-03 11:29:24.827834598 UTC , thread_cap_info = ("ThreadId 145",
| S                0, False)}
| S                
| S                
E                  
