last 643 length 2628
CNF 643 vars 2628 clauses
last 652 length 2681
CNF 652 vars 2681 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2396, clauses: 8541
last 2396 length 8541
CNF 2396 vars 8541 clauses
last 1377 length 6968
last 771 length 3266
CNF 771 vars 3266 clauses
CNF 1377 vars 6968 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2396, clauses: 8541, status: Unsatisfied, time: 0.101368687s
last 6872 length 32978
CNF 6872 vars 32978 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2615, clauses: 9480
last 2615 length 9480
last 13714 length 72459
CNF 2615 vars 9480 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8222, clauses: 34251
last 8222 length 34251
CNF 13714 vars 72459 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5127, clauses: 20678
CNF 8222 vars 34251 clauses
last 11500 length 83889
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2615, clauses: 9480, status: Unsatisfied, time: 0.158388178s
last 5127 length 20678
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9100, clauses: 37985
last 8891 length 63994
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8222, clauses: 34251, status: Satisfied, time: 0.364357823s
CNF 11500 vars 83889 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16367, clauses: 64635
last 14438 length 155182
last 10705 length 116058
CNF 5127 vars 20678 clauses
last 9100 length 37985
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5641, clauses: 22820
CNF 8891 vars 63994 clauses
last 597 length 2458
last 645 length 2660
last 16367 length 64635
CNF 14438 vars 155182 clauses
CNF 9100 vars 37985 clauses
CNF 10705 vars 116058 clauses
last 5641 length 22820
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8811, clauses: 32147
CNF 597 vars 2458 clauses
CNF 645 vars 2660 clauses
CNF 16367 vars 64635 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41869, clauses: 175228
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9100, clauses: 37985, status: Satisfied, time: 0.705603645s
last 8811 length 32147
CNF 5641 vars 22820 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2288, clauses: 8112
last 41869 length 175228
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8174, clauses: 34071
CNF 8811 vars 32147 clauses
last 2288 length 8112
**************************************************last 8174 length 34071

CNF 2288 vars 8112 clauses
CNF 8174 vars 34071 clauses
CNF 41869 vars 175228 clauses
summaryMatrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2288, clauses: 8112, status: Unsatisfied, time: 0.216028396s

**************************************************
SRS with 3 rules on 3 letters       context
SRS with 7 rules on 3 letters       mirror
SRS with 7 rules on 3 letters       DP
SRS with 4 strict rules and 7 weak rules on 5 letters       weights
SRS with 2 strict rules and 7 weak rules on 4 letters       EDG
SRS with 2 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [b, b, c, c, a, a] {- Input 1 -}
  [b, c] -> [] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b] -> [a] {- Input 0 -}
  [b, a, b] -> [b] {- Input 0 -}
  [c, a, b] -> [c] {- Input 0 -}
  [a, c] -> [b, b, c, c, a, a] {- Input 1 -}
  [a, b, c] -> [a] {- Input 2 -}
  [b, b, c] -> [b] {- Input 2 -}
  [c, b, c] -> [c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b] -> [b] {- Mirror (Input 0) -}
  [b, a, c] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [a, a, c, c, b, b] {- Mirror (Input 1) -}
  [c, b, a] -> [a] {- Mirror (Input 2) -}
  [c, b, b] -> [b] {- Mirror (Input 2) -}
  [c, b, c] -> [c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, a, c, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [c#, a] |-> [b#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, b, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, a, c, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [c#, b, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, b, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, a, c, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / - -  1A \
        | - 1A 0A |
        \ - -  0A / )
  ( b
  , Wk  / - 0A  2A \
        | - -1A -  |
        \ - -   0A / )
  ( c
  , Wk  / - 2A 2A  \
        | - 1A -2A |
        \ - -  0A  / )
  ( c#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, a, c, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(7,3)\Deepee(4/7,5)\Weight\EDG(2/7,4)\Matrix{\ArcticBZ}{3}(0/7,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.423736619000
  min duration 0.033556971000
  total durat. 4.037559080000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 200}
    , self = 71
    , parent = Nothing
    , duration = 1.155600213000
    , status = Fail
    , start = 2025-09-03 11:48:29.338085239 UTC
    , finish = 2025-09-03 11:48:30.493685452 UTC
    , thread_cap_info = ("ThreadId 74", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 72
    , parent = Nothing
    , duration = 1.423736619000
    , status = Fail
    , start = 2025-09-03 11:48:29.436141346 UTC
    , finish = 2025-09-03 11:48:30.859877965 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.713078004000
  min duration 0.033208765000
  total durat. 4.578340229000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 75
    , parent = Nothing
    , duration = 1.644383018000
    , status = Fail
    , start = 2025-09-03 11:48:29.456143474 UTC
    , finish = 2025-09-03 11:48:31.100526492 UTC
    , thread_cap_info = ("ThreadId 99", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 200}
    , self = 73
    , parent = Nothing
    , duration = 1.713078004000
    , status = Fail
    , start = 2025-09-03 11:48:29.328665228 UTC
    , finish = 2025-09-03 11:48:31.041743232 UTC
    , thread_cap_info = ("ThreadId 75", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.643621075000
  min duration 1.005949730000
  total durat. 2.649570805000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 64
    , parent = Nothing
    , duration = 1.005949730000
    , status = Success
    , start = 2025-09-03 11:48:29.431448515 UTC
    , finish = 2025-09-03 11:48:30.437398245 UTC
    , thread_cap_info = ("ThreadId 94", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 77
    , parent = Nothing
    , duration = 1.643621075000
    , status = Success
    , start = 2025-09-03 11:48:29.636149236 UTC
    , finish = 2025-09-03 11:48:31.279770311 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.086269201000
  min duration 0.861412957000
  total durat. 1.947682158000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 79
    , parent = Nothing
    , duration = 1.086269201000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:48:30.276693345 UTC
    , finish = 2025-09-03 11:48:31.362962546 UTC
    , thread_cap_info = ("ThreadId 119", 1, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
F                    = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
F                    = 200} , self = 73 , parent = Nothing , duration = 1.713078004000 , status
F                    = Fail , start = 2025-09-03 11:48:29.328665228 UTC , finish = 2025-09-03
F                    11:48:31.041743232 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| F                  = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 14 ,
| F                  total_length = 448} , self = 58 , parent = Nothing , duration = 0.351729955000
| F                  , status = Fail , start = 2025-09-03 11:48:29.328682732 UTC , finish =
| F                  2025-09-03 11:48:29.680412687 UTC , thread_cap_info = ("ThreadId 73", 3,
| F                  False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | F                = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 14 ,
| | F                total_length = 448} , self = 61 , parent = Nothing , duration = 0.604073737000
| | F                , status = Fail , start = 2025-09-03 11:48:29.338084498 UTC , finish =
| | F                2025-09-03 11:48:29.942158235 UTC , thread_cap_info = ("ThreadId 72", 3,
| | F                False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | F              = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | F              = 200} , self = 71 , parent = Nothing , duration = 1.155600213000 , status
| | | F              = Fail , start = 2025-09-03 11:48:29.338085239 UTC , finish = 2025-09-03
| | | F              11:48:30.493685452 UTC , thread_cap_info = ("ThreadId 74", 0, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | F            = 43} , self = 57 , parent = Nothing , duration = 0.165031414000 , status
| | | | F            = Fail , start = 2025-09-03 11:48:29.376155263 UTC , finish = 2025-09-03
| | | | F            11:48:29.541186677 UTC , thread_cap_info = ("ThreadId 88", 1, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | F          = 4 , total_length = 39} , self = 55 , parent = Nothing , duration = 0.126434722000
| | | | | F          , status = Fail , start = 2025-09-03 11:48:29.376198636 UTC , finish =
| | | | | F          2025-09-03 11:48:29.502633358 UTC , thread_cap_info = ("ThreadId 89", 1,
| | | | | F          False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | F        = 43} , self = 56 , parent = Nothing , duration = 0.145023283000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:48:29.396150401 UTC , finish = 2025-09-03
| | | | | | F        11:48:29.541173684 UTC , thread_cap_info = ("ThreadId 91", 1, False)}
| | | | | | F        
| | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | S      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | S      = 4 , total_length = 39} , self = 64 , parent = Nothing , duration = 1.005949730000
| | | | | | | S      , status = Success , start = 2025-09-03 11:48:29.431448515 UTC , finish
| | | | | | | S      = 2025-09-03 11:48:30.437398245 UTC , thread_cap_info = ("ThreadId 94",
| | | | | | | S      1, False)}
| | | | | | | S      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | F    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | | F    = 162} , self = 72 , parent = Nothing , duration = 1.423736619000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 11:48:29.436141346 UTC , finish = 2025-09-03
| | | | | | | | F    11:48:30.859877965 UTC , thread_cap_info = ("ThreadId 97", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | F  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | | | F  = 162} , self = 75 , parent = Nothing , duration = 1.644383018000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 11:48:29.456143474 UTC , finish = 2025-09-03
| | | | | | | | | F  11:48:31.100526492 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | | | | | | F  
| | | | | F | | | |  
| | | | |   F | | |  
| | | | F     | | |  
| | | | E     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E     | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | E     | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | E     | | |  = 4 , total_length = 39} , self = 66 , parent = Nothing , duration = 0.861412957000
| | | | E     | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:29.57617247
| | | | E     | | |  UTC , finish = 2025-09-03 11:48:30.437585427 UTC , thread_cap_info = ("ThreadId
| | | | E     | | |  103", 1, False)}
| | | | E     | | |  
| | | | | F   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   | | |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | F   | | |  = 4 , total_length = 43} , self = 63 , parent = Nothing , duration = 0.660435631000
| | | | | F   | | |  , status = Fail , start = 2025-09-03 11:48:29.616154065 UTC , finish =
| | | | | F   | | |  2025-09-03 11:48:30.276589696 UTC , thread_cap_info = ("ThreadId 105",
| | | | | F   | | |  1, False)}
| | | | | F   | | |  
| | | | | | S | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | S | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | S | | |  = 4 , total_length = 43} , self = 77 , parent = Nothing , duration = 1.643621075000
| | | | | | S | | |  , status = Success , start = 2025-09-03 11:48:29.636149236 UTC , finish
| | | | | | S | | |  = 2025-09-03 11:48:31.279770311 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | S | | |  1, False)}
| | | | | | S | | |  
| F | | | | | | | |  
|   F | | | | | | |  
|     | | F | | | |  
| E   | |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   | |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E   | |   | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| E   | |   | | | |  = 4 , total_length = 43} , self = 79 , parent = Nothing , duration = 1.086269201000
| E   | |   | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:30.276693345
| E   | |   | | | |  UTC , finish = 2025-09-03 11:48:31.362962546 UTC , thread_cap_info = ("ThreadId
| E   | |   | | | |  119", 1, False)}
| E   | |   | | | |  
| |   | |   | S | |  
| |   | E   |   | |  
| | F |     |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F |     |   | |  = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F |     |   | |  = 36} , self = 74 , parent = Nothing , duration = 0.655560126000 , status
| | F |     |   | |  = Fail , start = 2025-09-03 11:48:30.437704938 UTC , finish = 2025-09-03
| | F |     |   | |  11:48:31.093265064 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| | F |     |   | |  
| | | | F   |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F   |   | |  = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | F   |   | |  = 36} , self = 76 , parent = Nothing , duration = 0.690917204000 , status
| | | | F   |   | |  = Fail , start = 2025-09-03 11:48:30.445254251 UTC , finish = 2025-09-03
| | | | F   |   | |  11:48:31.136171455 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | | F   |   | |  
| | | F |   |   | |  
| | |   |   |   F |  
F | |   |   |     |  
  | F   |   |     |  
  |     |   |     F  
  |     F   |        
  |         S        
  E                  
