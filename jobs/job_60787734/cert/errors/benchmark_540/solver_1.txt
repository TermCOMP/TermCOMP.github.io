last 17037 length 75465
CNF 17037 vars 75465 clauses
last 18452 length 83768
last 12595 length 56548
CNF 12595 vars 56548 clauses
CNF 18452 vars 83768 clauses
last 15646 length 72020
CNF 15646 vars 72020 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26412, clauses: 101123
last 26412 length 101123
CNF 26412 vars 101123 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21245, clauses: 78711
last 21245 length 78711
CNF 21245 vars 78711 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26412, clauses: 101123, status: Satisfied, time: 0.691555072s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21245, clauses: 78711, status: Satisfied, time: 0.492674291s
last 16633 length 74247
last 18512 length 85325
CNF 16633 vars 74247 clauses
CNF 18512 vars 85325 clauses
last 12599 length 56234
CNF 12599 vars 56234 clauses
last 15285 length 71072
CNF 15285 vars 71072 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26063, clauses: 99825
last 26063 length 99825
CNF 26063 vars 99825 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26063, clauses: 99825, status: Satisfied, time: 0.514541115s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20546, clauses: 76182
last 20546 length 76182
CNF 20546 vars 76182 clauses
last 16241 length 72403
CNF 16241 vars 72403 clauses
last 18009 length 82485
CNF 18009 vars 82485 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20546, clauses: 76182, status: Satisfied, time: 1.212085003s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25759, clauses: 98476
last 25759 length 98476
CNF 25759 vars 98476 clauses
last 13224 length 59412
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25759, clauses: 98476, status: Satisfied, time: 0.555623484s
CNF 13224 vars 59412 clauses
last 16252 length 74781
CNF 16252 vars 74781 clauses
last 14697 length 65857
CNF 14697 vars 65857 clauses
last 17999 length 82044
CNF 17999 vars 82044 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22458, clauses: 83435
last 22458 length 83435
CNF 22458 vars 83435 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24342, clauses: 91379
last 24342 length 91379
CNF 24342 vars 91379 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24342, clauses: 91379, status: Satisfied, time: 0.490057399s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22458, clauses: 83435, status: Satisfied, time: 1.189388023s
last 14335 length 64150
CNF 14335 vars 64150 clauses
last 17643 length 80258
CNF 17643 vars 80258 clauses
last 13038 length 58634
CNF 13038 vars 58634 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24038, clauses: 90102
last 24038 length 90102
CNF 24038 vars 90102 clauses
last 16190 length 74543
CNF 16190 vars 74543 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24038, clauses: 90102, status: Satisfied, time: 0.689540457s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22157, clauses: 82254
last 22157 length 82254
last 14394 length 64510
CNF 22157 vars 82254 clauses
CNF 14394 vars 64510 clauses
last 17041 length 79023
CNF 17041 vars 79023 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22157, clauses: 82254, status: Satisfied, time: 0.544064256s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23023, clauses: 86275
last 23023 length 86275
CNF 23023 vars 86275 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23023, clauses: 86275, status: Satisfied, time: 0.365101312s
last 12632 length 56812
CNF 12632 vars 56812 clauses
last 15638 length 71585
last 12794 length 57675
CNF 12794 vars 57675 clauses
CNF 15638 vars 71585 clauses
last 14572 length 67084
CNF 14572 vars 67084 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20861, clauses: 77529
last 20861 length 77529
CNF 20861 vars 77529 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21739, clauses: 80500
last 21739 length 80500
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20861, clauses: 77529, status: Satisfied, time: 0.514025169s
CNF 21739 vars 80500 clauses
last 12710 length 57274
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21739, clauses: 80500, status: Satisfied, time: 0.770414619s
CNF 12710 vars 57274 clauses
last 15072 length 70156
CNF 15072 vars 70156 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20648, clauses: 76644
last 20648 length 76644
CNF 20648 vars 76644 clauses
last 12533 length 56329
CNF 12533 vars 56329 clauses
last 15363 length 70214
CNF 15363 vars 70214 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20648, clauses: 76644, status: Satisfied, time: 2.015355605s
**************************************************
summary
**************************************************
SRS with 48 rules on 6 letters       DP
SRS with 132 strict rules and 48 weak rules on 10 letters       weights
SRS with 87 strict rules and 48 weak rules on 10 letters       EDG
SRS with 19 strict rules and 48 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 18 strict rules and 48 weak rules on 9 letters       EDG
SRS with 18 strict rules and 48 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 17 strict rules and 48 weak rules on 9 letters       EDG
SRS with 17 strict rules and 48 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 10 strict rules and 48 weak rules on 9 letters       EDG
SRS with 10 strict rules and 48 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 9 strict rules and 48 weak rules on 9 letters       EDG
SRS with 9 strict rules and 48 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 8 strict rules and 48 weak rules on 9 letters       EDG
SRS with 8 strict rules and 48 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 48 weak rules on 9 letters       weights
SRS with 3 strict rules and 48 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 2 strict rules and 48 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 48 weak rules on 6 letters       EDG

  2 SRS with 1 strict rules and 48 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 48 weak rules on 6 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0] -> [0, 0, 1, 0, 1] {- Input 0 -}
  [0, 2, 0] -> [0, 0, 2, 1, 1] {- Input 1 -}
  [0, 3, 2] -> [2, 1, 3, 0] {- Input 2 -}
  [0, 4, 2] -> [4, 1, 1, 1, 0, 2] {- Input 3 -}
  [3, 0, 4] -> [0, 1, 3, 4, 1] {- Input 4 -}
  [3, 2, 0] -> [0, 2, 1, 3] {- Input 5 -}
  [3, 2, 0] -> [3, 0, 2, 1] {- Input 6 -}
  [3, 2, 0] -> [0, 1, 2, 1, 3] {- Input 7 -}
  [3, 2, 0] -> [3, 0, 1, 2, 1, 4] {- Input 8 -}
  [3, 2, 4] -> [1, 2, 1, 3, 3, 4] {- Input 9 -}
  [3, 2, 4] -> [4, 1, 2, 1, 1, 3] {- Input 10 -}
  [3, 2, 5] -> [1, 3, 5, 2] {- Input 11 -}
  [3, 2, 5] -> [3, 1, 4, 5, 2] {- Input 12 -}
  [3, 2, 5] -> [1, 1, 3, 3, 5, 2] {- Input 13 -}
  [3, 2, 5] -> [1, 3, 4, 5, 4, 2] {- Input 14 -}
  [3, 5, 0] -> [3, 1, 0, 5, 1, 1] {- Input 15 -}
  [5, 0, 2] -> [1, 1, 0, 2, 5] {- Input 16 -}
  [5, 0, 4] -> [0, 5, 4, 1, 1] {- Input 17 -}
  [5, 2, 4] -> [5, 2, 1, 1, 3, 4] {- Input 18 -}
  [5, 3, 2] -> [1, 1, 3, 5, 1, 2] {- Input 19 -}
  [5, 5, 0] -> [5, 1, 1, 5, 0] {- Input 20 -}
  [0, 0, 2, 4] -> [0, 4, 0, 2, 1, 1] {- Input 21 -}
  [0, 3, 1, 2] -> [1, 1, 3, 0, 2] {- Input 22 -}
  [0, 3, 2, 4] -> [2, 1, 3, 0, 4, 4] {- Input 23 -}
  [0, 4, 3, 2] -> [2, 3, 4, 0, 1] {- Input 24 -}
  [3, 0, 2, 4] -> [3, 0, 4, 2, 1, 1] {- Input 25 -}
  [3, 0, 5, 4] -> [3, 4, 0, 5, 1, 3] {- Input 26 -}
  [3, 1, 0, 0] -> [0, 1, 1, 3, 0, 1] {- Input 27 -}
  [3, 2, 4, 0] -> [3, 1, 0, 4, 2] {- Input 28 -}
  [3, 2, 4, 5] -> [3, 1, 4, 2, 1, 5] {- Input 29 -}
  [3, 2, 5, 4] -> [3, 4, 3, 5, 2] {- Input 30 -}
  [3, 5, 3, 2] -> [3, 3, 0, 2, 5] {- Input 31 -}
  [4, 0, 4, 2] -> [4, 4, 2, 1, 3, 0] {- Input 32 -}
  [4, 3, 2, 0] -> [0, 2, 1, 3, 4] {- Input 33 -}
  [5, 4, 1, 0] -> [5, 1, 1, 4, 0, 1] {- Input 34 -}
  [5, 5, 0, 0] -> [1, 1, 0, 5, 5, 0] {- Input 35 -}
  [5, 5, 2, 2] -> [5, 5, 1, 1, 2, 2] {- Input 36 -}
  [0, 0, 1, 2, 4] -> [0, 0, 2, 1, 1, 4] {- Input 37 -}
  [0, 5, 3, 1, 2] -> [5, 2, 1, 3, 1, 0] {- Input 38 -}
  [0, 5, 5, 1, 0] -> [5, 0, 0, 5, 1, 1] {- Input 39 -}
  [3, 0, 1, 4, 5] -> [3, 4, 0, 5, 1, 1] {- Input 40 -}
  [3, 0, 3, 1, 2] -> [0, 2, 1, 1, 3, 3] {- Input 41 -}
  [3, 2, 2, 0, 4] -> [3, 2, 2, 0, 1, 4] {- Input 42 -}
  [3, 5, 1, 4, 0] -> [1, 3, 3, 4, 5, 0] {- Input 43 -}
  [3, 5, 3, 0, 4] -> [3, 0, 1, 5, 3, 4] {- Input 44 -}
  [5, 1, 0, 2, 4] -> [2, 1, 5, 4, 0, 3] {- Input 45 -}
  [5, 1, 3, 2, 0] -> [2, 3, 5, 0, 1, 1] {- Input 46 -}
  [5, 4, 2, 0, 2] -> [5, 0, 4, 2, 1, 2] {- Input 47 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
  [4#, 0, 4, 2] |-> [4#, 4, 2, 1, 3, 0] {- DP (Top 0) (Input 32) -}
  [4#, 0, 4, 2] |-> [4#, 2, 1, 3, 0] {- DP (Top 1) (Input 32) -}
  [4#, 0, 4, 2] |-> [0#] {- DP (Top 5) (Input 32) -}
  [4#, 0, 4, 2] |-> [3#, 0] {- DP (Top 4) (Input 32) -}
  [4#, 3, 2, 0] |-> [4#] {- DP (Top 4) (Input 33) -}
  [4#, 3, 2, 0] |-> [0#, 2, 1, 3, 4] {- DP (Top 0) (Input 33) -}
  [4#, 3, 2, 0] |-> [3#, 4] {- DP (Top 3) (Input 33) -}
  [0#, 4, 2] |-> [4#, 1, 1, 1, 0, 2] {- DP (Top 0) (Input 3) -}
  [0#, 4, 2] |-> [0#, 2] {- DP (Top 4) (Input 3) -}
  [0#, 4, 3, 2] |-> [4#, 0, 1] {- DP (Top 2) (Input 24) -}
  [0#, 4, 3, 2] |-> [0#, 1] {- DP (Top 3) (Input 24) -}
  [0#, 4, 3, 2] |-> [3#, 4, 0, 1] {- DP (Top 1) (Input 24) -}
  [0#, 2, 0] |-> [0#, 2, 1, 1] {- DP (Top 1) (Input 1) -}
  [0#, 2, 0] |-> [0#, 0, 2, 1, 1] {- DP (Top 0) (Input 1) -}
  [0#, 0, 1, 2, 4] |-> [0#, 2, 1, 1, 4] {- DP (Top 1) (Input 37) -}
  [0#, 0, 1, 2, 4] |-> [0#, 0, 2, 1, 1, 4] {- DP (Top 0) (Input 37) -}
  [0#, 0, 2, 4] |-> [4#, 0, 2, 1, 1] {- DP (Top 1) (Input 21) -}
  [0#, 0, 2, 4] |-> [0#, 4, 0, 2, 1, 1] {- DP (Top 0) (Input 21) -}
  [0#, 0, 2, 4] |-> [0#, 2, 1, 1] {- DP (Top 2) (Input 21) -}
  [0#, 0, 0] |-> [0#, 1] {- DP (Top 3) (Input 0) -}
  [0#, 0, 0] |-> [0#, 1, 0, 1] {- DP (Top 1) (Input 0) -}
  [0#, 0, 0] |-> [0#, 0, 1, 0, 1] {- DP (Top 0) (Input 0) -}
  [0#, 5, 5, 1, 0] |-> [0#, 0, 5, 1, 1] {- DP (Top 1) (Input 39) -}
  [0#, 5, 5, 1, 0] |-> [0#, 5, 1, 1] {- DP (Top 2) (Input 39) -}
  [0#, 5, 5, 1, 0] |-> [5#, 1, 1] {- DP (Top 3) (Input 39) -}
  [0#, 5, 5, 1, 0] |-> [5#, 0, 0, 5, 1, 1] {- DP (Top 0) (Input 39) -}
  [0#, 5, 3, 1, 2] |-> [0#] {- DP (Top 5) (Input 38) -}
  [0#, 5, 3, 1, 2] |-> [5#, 2, 1, 3, 1, 0] {- DP (Top 0) (Input 38) -}
  [0#, 5, 3, 1, 2] |-> [3#, 1, 0] {- DP (Top 3) (Input 38) -}
  [0#, 3, 1, 2] |-> [0#, 2] {- DP (Top 3) (Input 22) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [0#, 3, 2] |-> [0#] {- DP (Top 3) (Input 2) -}
  [0#, 3, 2] |-> [3#, 0] {- DP (Top 2) (Input 2) -}
  [0#, 3, 2, 4] |-> [4#, 4] {- DP (Top 4) (Input 23) -}
  [0#, 3, 2, 4] |-> [0#, 4, 4] {- DP (Top 3) (Input 23) -}
  [0#, 3, 2, 4] |-> [3#, 0, 4, 4] {- DP (Top 2) (Input 23) -}
  [5#, 1, 0, 2, 4] |-> [4#, 0, 3] {- DP (Top 3) (Input 45) -}
  [5#, 1, 0, 2, 4] |-> [0#, 3] {- DP (Top 4) (Input 45) -}
  [5#, 1, 0, 2, 4] |-> [5#, 4, 0, 3] {- DP (Top 2) (Input 45) -}
  [5#, 1, 0, 2, 4] |-> [3#] {- DP (Top 5) (Input 45) -}
  [5#, 1, 3, 2, 0] |-> [0#, 1, 1] {- DP (Top 3) (Input 46) -}
  [5#, 1, 3, 2, 0] |-> [5#, 0, 1, 1] {- DP (Top 2) (Input 46) -}
  [5#, 1, 3, 2, 0] |-> [3#, 5, 0, 1, 1] {- DP (Top 1) (Input 46) -}
  [5#, 4, 1, 0] |-> [4#, 0, 1] {- DP (Top 3) (Input 34) -}
  [5#, 4, 1, 0] |-> [0#, 1] {- DP (Top 4) (Input 34) -}
  [5#, 4, 1, 0] |-> [5#, 1, 1, 4, 0, 1] {- DP (Top 0) (Input 34) -}
  [5#, 4, 2, 0, 2] |-> [4#, 2, 1, 2] {- DP (Top 2) (Input 47) -}
  [5#, 4, 2, 0, 2] |-> [0#, 4, 2, 1, 2] {- DP (Top 1) (Input 47) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 2, 4] |-> [5#, 2, 1, 1, 3, 4] {- DP (Top 0) (Input 18) -}
  [5#, 2, 4] |-> [3#, 4] {- DP (Top 4) (Input 18) -}
  [5#, 0, 4] |-> [4#, 1, 1] {- DP (Top 2) (Input 17) -}
  [5#, 0, 4] |-> [0#, 5, 4, 1, 1] {- DP (Top 0) (Input 17) -}
  [5#, 0, 4] |-> [5#, 4, 1, 1] {- DP (Top 1) (Input 17) -}
  [5#, 0, 2] |-> [0#, 2, 5] {- DP (Top 2) (Input 16) -}
  [5#, 0, 2] |-> [5#] {- DP (Top 4) (Input 16) -}
  [5#, 5, 2, 2] |-> [5#, 1, 1, 2, 2] {- DP (Top 1) (Input 36) -}
  [5#, 5, 2, 2] |-> [5#, 5, 1, 1, 2, 2] {- DP (Top 0) (Input 36) -}
  [5#, 5, 0] |-> [5#, 1, 1, 5, 0] {- DP (Top 0) (Input 20) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 0] {- DP (Top 4) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [5#, 3, 2] |-> [5#, 1, 2] {- DP (Top 3) (Input 19) -}
  [5#, 3, 2] |-> [3#, 5, 1, 2] {- DP (Top 2) (Input 19) -}
  [3#, 1, 0, 0] |-> [0#, 1] {- DP (Top 4) (Input 27) -}
  [3#, 1, 0, 0] |-> [0#, 1, 1, 3, 0, 1] {- DP (Top 0) (Input 27) -}
  [3#, 1, 0, 0] |-> [3#, 0, 1] {- DP (Top 3) (Input 27) -}
  [3#, 2, 4] |-> [4#, 1, 2, 1, 1, 3] {- DP (Top 0) (Input 10) -}
  [3#, 2, 4] |-> [3#] {- DP (Top 5) (Input 10) -}
  [3#, 2, 4] |-> [3#, 4] {- DP (Top 4) (Input 9) -}
  [3#, 2, 4] |-> [3#, 3, 4] {- DP (Top 3) (Input 9) -}
  [3#, 2, 4, 0] |-> [4#, 2] {- DP (Top 3) (Input 28) -}
  [3#, 2, 4, 0] |-> [0#, 4, 2] {- DP (Top 2) (Input 28) -}
  [3#, 2, 4, 0] |-> [3#, 1, 0, 4, 2] {- DP (Top 0) (Input 28) -}
  [3#, 2, 4, 5] |-> [4#, 2, 1, 5] {- DP (Top 2) (Input 29) -}
  [3#, 2, 4, 5] |-> [3#, 1, 4, 2, 1, 5] {- DP (Top 0) (Input 29) -}
  [3#, 2, 2, 0, 4] |-> [0#, 1, 4] {- DP (Top 3) (Input 42) -}
  [3#, 2, 2, 0, 4] |-> [3#, 2, 2, 0, 1, 4] {- DP (Top 0) (Input 42) -}
  [3#, 2, 0] |-> [4#] {- DP (Top 5) (Input 8) -}
  [3#, 2, 0] |-> [0#, 1, 2, 1, 4] {- DP (Top 1) (Input 8) -}
  [3#, 2, 0] |-> [0#, 1, 2, 1, 3] {- DP (Top 0) (Input 7) -}
  [3#, 2, 0] |-> [0#, 2, 1] {- DP (Top 1) (Input 6) -}
  [3#, 2, 0] |-> [0#, 2, 1, 3] {- DP (Top 0) (Input 5) -}
  [3#, 2, 0] |-> [3#] {- Many [DP (Top 4) (Input 7), DP (Top 3) (Input 5)] -}
  [3#, 2, 0] |-> [3#, 0, 1, 2, 1, 4] {- DP (Top 0) (Input 8) -}
  [3#, 2, 0] |-> [3#, 0, 2, 1] {- DP (Top 0) (Input 6) -}
  [3#, 2, 5] |-> [4#, 2] {- DP (Top 4) (Input 14) -}
  [3#, 2, 5] |-> [4#, 5, 4, 2] {- DP (Top 2) (Input 14) -}
  [3#, 2, 5] |-> [4#, 5, 2] {- DP (Top 2) (Input 12) -}
  [3#, 2, 5] |-> [5#, 4, 2] {- DP (Top 3) (Input 14) -}
  [3#, 2, 5] |-> [5#, 2] {- Many [ DP (Top 4) (Input 13) , DP (Top 3) (Input 12) , DP (Top 2) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 1, 4, 5, 2] {- DP (Top 0) (Input 12) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [4#, 3, 5, 2] {- DP (Top 1) (Input 30) -}
  [3#, 2, 5, 4] |-> [5#, 2] {- DP (Top 3) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 1, 4, 5] |-> [4#, 0, 5, 1, 1] {- DP (Top 1) (Input 40) -}
  [3#, 0, 1, 4, 5] |-> [0#, 5, 1, 1] {- DP (Top 2) (Input 40) -}
  [3#, 0, 1, 4, 5] |-> [5#, 1, 1] {- DP (Top 3) (Input 40) -}
  [3#, 0, 1, 4, 5] |-> [3#, 4, 0, 5, 1, 1] {- DP (Top 0) (Input 40) -}
  [3#, 0, 4] |-> [4#, 1] {- DP (Top 3) (Input 4) -}
  [3#, 0, 4] |-> [0#, 1, 3, 4, 1] {- DP (Top 0) (Input 4) -}
  [3#, 0, 4] |-> [3#, 4, 1] {- DP (Top 2) (Input 4) -}
  [3#, 0, 2, 4] |-> [4#, 2, 1, 1] {- DP (Top 2) (Input 25) -}
  [3#, 0, 2, 4] |-> [0#, 4, 2, 1, 1] {- DP (Top 1) (Input 25) -}
  [3#, 0, 2, 4] |-> [3#, 0, 4, 2, 1, 1] {- DP (Top 0) (Input 25) -}
  [3#, 0, 5, 4] |-> [4#, 0, 5, 1, 3] {- DP (Top 1) (Input 26) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [3#, 0, 5, 4] |-> [5#, 1, 3] {- DP (Top 3) (Input 26) -}
  [3#, 0, 5, 4] |-> [3#] {- DP (Top 5) (Input 26) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 0, 3, 1, 2] |-> [0#, 2, 1, 1, 3, 3] {- DP (Top 0) (Input 41) -}
  [3#, 0, 3, 1, 2] |-> [3#] {- DP (Top 5) (Input 41) -}
  [3#, 0, 3, 1, 2] |-> [3#, 3] {- DP (Top 4) (Input 41) -}
  [3#, 5, 1, 4, 0] |-> [4#, 5, 0] {- DP (Top 3) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 0] |-> [0#, 5, 1, 1] {- DP (Top 2) (Input 15) -}
  [3#, 5, 0] |-> [5#, 1, 1] {- DP (Top 3) (Input 15) -}
  [3#, 5, 0] |-> [3#, 1, 0, 5, 1, 1] {- DP (Top 0) (Input 15) -}
  [3#, 5, 3, 2] |-> [0#, 2, 5] {- DP (Top 2) (Input 31) -}
  [3#, 5, 3, 2] |-> [5#] {- DP (Top 4) (Input 31) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [0#, 1, 5, 3, 4] {- DP (Top 1) (Input 44) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [3#, 5, 3, 0, 4] |-> [3#, 4] {- DP (Top 4) (Input 44) -}
  [3#, 5, 3, 0, 4] |-> [3#, 0, 1, 5, 3, 4] {- DP (Top 0) (Input 44) -}
reason
  (1, 0/1)
  (4, 0/1)
  (2, 1/1)
  (0, 0/1)
  (5, 1/1)
  (3, 0/1)
  (4#, 0/1)
  (0#, 0/1)
  (5#, 1/1)
  (3#, 0/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
  [4#, 0, 4, 2] |-> [4#, 4, 2, 1, 3, 0] {- DP (Top 0) (Input 32) -}
  [4#, 0, 4, 2] |-> [4#, 2, 1, 3, 0] {- DP (Top 1) (Input 32) -}
  [4#, 3, 2, 0] |-> [0#, 2, 1, 3, 4] {- DP (Top 0) (Input 33) -}
  [0#, 4, 2] |-> [4#, 1, 1, 1, 0, 2] {- DP (Top 0) (Input 3) -}
  [0#, 4, 2] |-> [0#, 2] {- DP (Top 4) (Input 3) -}
  [0#, 2, 0] |-> [0#, 2, 1, 1] {- DP (Top 1) (Input 1) -}
  [0#, 2, 0] |-> [0#, 0, 2, 1, 1] {- DP (Top 0) (Input 1) -}
  [0#, 0, 1, 2, 4] |-> [0#, 2, 1, 1, 4] {- DP (Top 1) (Input 37) -}
  [0#, 0, 1, 2, 4] |-> [0#, 0, 2, 1, 1, 4] {- DP (Top 0) (Input 37) -}
  [0#, 0, 2, 4] |-> [4#, 0, 2, 1, 1] {- DP (Top 1) (Input 21) -}
  [0#, 0, 2, 4] |-> [0#, 4, 0, 2, 1, 1] {- DP (Top 0) (Input 21) -}
  [0#, 0, 2, 4] |-> [0#, 2, 1, 1] {- DP (Top 2) (Input 21) -}
  [0#, 0, 0] |-> [0#, 1] {- DP (Top 3) (Input 0) -}
  [0#, 0, 0] |-> [0#, 1, 0, 1] {- DP (Top 1) (Input 0) -}
  [0#, 0, 0] |-> [0#, 0, 1, 0, 1] {- DP (Top 0) (Input 0) -}
  [0#, 5, 5, 1, 0] |-> [5#, 0, 0, 5, 1, 1] {- DP (Top 0) (Input 39) -}
  [0#, 5, 3, 1, 2] |-> [5#, 2, 1, 3, 1, 0] {- DP (Top 0) (Input 38) -}
  [0#, 3, 1, 2] |-> [0#, 2] {- DP (Top 3) (Input 22) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [5#, 4, 1, 0] |-> [5#, 1, 1, 4, 0, 1] {- DP (Top 0) (Input 34) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 2, 4] |-> [5#, 2, 1, 1, 3, 4] {- DP (Top 0) (Input 18) -}
  [5#, 0, 4] |-> [0#, 5, 4, 1, 1] {- DP (Top 0) (Input 17) -}
  [5#, 0, 4] |-> [5#, 4, 1, 1] {- DP (Top 1) (Input 17) -}
  [5#, 0, 2] |-> [0#, 2, 5] {- DP (Top 2) (Input 16) -}
  [5#, 5, 2, 2] |-> [5#, 5, 1, 1, 2, 2] {- DP (Top 0) (Input 36) -}
  [5#, 5, 0] |-> [5#, 1, 1, 5, 0] {- DP (Top 0) (Input 20) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [5#, 3, 2] |-> [5#, 1, 2] {- DP (Top 3) (Input 19) -}
  [5#, 3, 2] |-> [3#, 5, 1, 2] {- DP (Top 2) (Input 19) -}
  [3#, 1, 0, 0] |-> [0#, 1] {- DP (Top 4) (Input 27) -}
  [3#, 1, 0, 0] |-> [0#, 1, 1, 3, 0, 1] {- DP (Top 0) (Input 27) -}
  [3#, 1, 0, 0] |-> [3#, 0, 1] {- DP (Top 3) (Input 27) -}
  [3#, 2, 4] |-> [4#, 1, 2, 1, 1, 3] {- DP (Top 0) (Input 10) -}
  [3#, 2, 4, 0] |-> [4#, 2] {- DP (Top 3) (Input 28) -}
  [3#, 2, 4, 0] |-> [0#, 4, 2] {- DP (Top 2) (Input 28) -}
  [3#, 2, 4, 0] |-> [3#, 1, 0, 4, 2] {- DP (Top 0) (Input 28) -}
  [3#, 2, 4, 5] |-> [4#, 2, 1, 5] {- DP (Top 2) (Input 29) -}
  [3#, 2, 4, 5] |-> [3#, 1, 4, 2, 1, 5] {- DP (Top 0) (Input 29) -}
  [3#, 2, 2, 0, 4] |-> [3#, 2, 2, 0, 1, 4] {- DP (Top 0) (Input 42) -}
  [3#, 2, 0] |-> [0#, 1, 2, 1, 4] {- DP (Top 1) (Input 8) -}
  [3#, 2, 0] |-> [0#, 1, 2, 1, 3] {- DP (Top 0) (Input 7) -}
  [3#, 2, 0] |-> [0#, 2, 1] {- DP (Top 1) (Input 6) -}
  [3#, 2, 0] |-> [0#, 2, 1, 3] {- DP (Top 0) (Input 5) -}
  [3#, 2, 0] |-> [3#, 0, 1, 2, 1, 4] {- DP (Top 0) (Input 8) -}
  [3#, 2, 0] |-> [3#, 0, 2, 1] {- DP (Top 0) (Input 6) -}
  [3#, 2, 5] |-> [4#, 5, 4, 2] {- DP (Top 2) (Input 14) -}
  [3#, 2, 5] |-> [4#, 5, 2] {- DP (Top 2) (Input 12) -}
  [3#, 2, 5] |-> [5#, 4, 2] {- DP (Top 3) (Input 14) -}
  [3#, 2, 5] |-> [5#, 2] {- Many [ DP (Top 4) (Input 13) , DP (Top 3) (Input 12) , DP (Top 2) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 1, 4, 5, 2] {- DP (Top 0) (Input 12) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [4#, 3, 5, 2] {- DP (Top 1) (Input 30) -}
  [3#, 2, 5, 4] |-> [5#, 2] {- DP (Top 3) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 1, 4, 5] |-> [4#, 0, 5, 1, 1] {- DP (Top 1) (Input 40) -}
  [3#, 0, 1, 4, 5] |-> [0#, 5, 1, 1] {- DP (Top 2) (Input 40) -}
  [3#, 0, 1, 4, 5] |-> [5#, 1, 1] {- DP (Top 3) (Input 40) -}
  [3#, 0, 1, 4, 5] |-> [3#, 4, 0, 5, 1, 1] {- DP (Top 0) (Input 40) -}
  [3#, 0, 4] |-> [4#, 1] {- DP (Top 3) (Input 4) -}
  [3#, 0, 4] |-> [0#, 1, 3, 4, 1] {- DP (Top 0) (Input 4) -}
  [3#, 0, 4] |-> [3#, 4, 1] {- DP (Top 2) (Input 4) -}
  [3#, 0, 2, 4] |-> [4#, 2, 1, 1] {- DP (Top 2) (Input 25) -}
  [3#, 0, 2, 4] |-> [0#, 4, 2, 1, 1] {- DP (Top 1) (Input 25) -}
  [3#, 0, 2, 4] |-> [3#, 0, 4, 2, 1, 1] {- DP (Top 0) (Input 25) -}
  [3#, 0, 5, 4] |-> [4#, 0, 5, 1, 3] {- DP (Top 1) (Input 26) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [3#, 0, 5, 4] |-> [5#, 1, 3] {- DP (Top 3) (Input 26) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 0, 3, 1, 2] |-> [0#, 2, 1, 1, 3, 3] {- DP (Top 0) (Input 41) -}
  [3#, 5, 1, 4, 0] |-> [4#, 5, 0] {- DP (Top 3) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 0] |-> [0#, 5, 1, 1] {- DP (Top 2) (Input 15) -}
  [3#, 5, 0] |-> [5#, 1, 1] {- DP (Top 3) (Input 15) -}
  [3#, 5, 0] |-> [3#, 1, 0, 5, 1, 1] {- DP (Top 0) (Input 15) -}
  [3#, 5, 3, 2] |-> [0#, 2, 5] {- DP (Top 2) (Input 31) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [0#, 1, 5, 3, 4] {- DP (Top 1) (Input 44) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [3#, 5, 3, 0, 4] |-> [3#, 0, 1, 5, 3, 4] {- DP (Top 0) (Input 44) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [3#, 2, 5] |-> [5#, 4, 2] {- DP (Top 3) (Input 14) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 2, 4] |-> [3#, 0, 4, 2, 1, 1] {- DP (Top 0) (Input 25) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 4
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 2
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 0
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( 3
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 0#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
  ( 5#
  , Wk  / 7A 7A 10A - \
        | 7A 7A 10A - |
        | 7A 7A 10A - |
        \ -  -  -   - / )
  ( 3#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 2, 4] |-> [3#, 0, 4, 2, 1, 1] {- DP (Top 0) (Input 25) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 2, 4] |-> [3#, 0, 4, 2, 1, 1] {- DP (Top 0) (Input 25) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 4
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( 2
  , Wk  / 9A 12A 12A - \
        | 6A 9A  9A  - |
        | 6A 9A  9A  - |
        \ -  -   -   - / )
  ( 0
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 3
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0#
  , Wk  / 3A 3A 4A - \
        | 3A 3A 4A - |
        | 3A 3A 4A - |
        \ -  -  -  - / )
  ( 5#
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( 3#
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 5, 3, 2] |-> [3#, 3, 0, 2, 5] {- DP (Top 0) (Input 31) -}
  [3#, 2, 5] |-> [3#, 4, 5, 4, 2] {- DP (Top 1) (Input 14) -}
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5] |-> [3#, 3, 5, 2] {- DP (Top 2) (Input 13) -}
  [3#, 2, 5, 4] |-> [3#, 4, 3, 5, 2] {- DP (Top 0) (Input 30) -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 0, 5, 4] |-> [3#, 4, 0, 5, 1, 3] {- DP (Top 0) (Input 26) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 1, 4, 0] |-> [3#, 4, 5, 0] {- DP (Top 2) (Input 43) -}
  [3#, 5, 1, 4, 0] |-> [3#, 3, 4, 5, 0] {- DP (Top 1) (Input 43) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 4
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 2
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 0
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( 3
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0#
  , Wk  / 3A 4A 4A - \
        | 3A 4A 4A - |
        | 3A 4A 4A - |
        \ -  -  -  - / )
  ( 5#
  , Wk  / 4A 6A 7A - \
        | 4A 6A 7A - |
        | 4A 6A 7A - |
        \ -  -  -  - / )
  ( 3#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [3#, 5, 3, 0, 4] |-> [5#, 3, 4] {- DP (Top 3) (Input 44) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 4
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 2
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 0
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 3
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 0#
  , Wk  / 2A 2A 5A - \
        | 2A 2A 5A - |
        | 2A 2A 5A - |
        \ -  -  -  - / )
  ( 5#
  , Wk  / 1A 2A 2A - \
        | 1A 2A 2A - |
        | 1A 2A 2A - |
        \ -  -  -  - / )
  ( 3#
  , Wk  / 2A 2A 4A - \
        | 2A 2A 4A - |
        | 2A 2A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 4, 2, 0, 2] |-> [5#, 0, 4, 2, 1, 2] {- DP (Top 0) (Input 47) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 4
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 2
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( 0
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( 3
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( 5#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
  ( 3#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [3#, 0, 5, 4] |-> [0#, 5, 1, 3] {- DP (Top 2) (Input 26) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 5, 0, 0] |-> [0#, 5, 5, 0] {- DP (Top 2) (Input 35) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [3#, 5, 3, 2] |-> [3#, 0, 2, 5] {- DP (Top 1) (Input 31) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 4
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 2
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( 0
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 5
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( 3
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 0#
  , Wk  / 11A 11A 12A - \
        | 11A 11A 12A - |
        | 11A 11A 12A - |
        \ -   -   -   - / )
  ( 5#
  , Wk  / 15A 15A 15A - \
        | 15A 15A 15A - |
        | 15A 15A 15A - |
        \ -   -   -   - / )
  ( 3#
  , Wk  / 12A 14A 15A - \
        | 12A 14A 15A - |
        | 12A 14A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [0#, 3, 1, 2] |-> [3#, 0, 2] {- DP (Top 2) (Input 22) -}
  [3#, 5, 1, 4, 0] |-> [5#, 0] {- DP (Top 4) (Input 43) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  (1, 0/1)
  (4, 0/1)
  (2, 0/1)
  (0, 0/1)
  (5, 1/1)
  (3, 0/1)
  (0#, 1/1)
  (5#, 0/1)
  (3#, 0/1)
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [3#, 2, 5] |-> [3#, 5, 2] {- Many [ DP (Top 3) (Input 13) , DP (Top 1) (Input 11) ] -}
  [3#, 2, 5, 4] |-> [3#, 5, 2] {- DP (Top 2) (Input 30) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 4
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 2
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 0
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( 3
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 3#
  , Wk  / 9A 10A 10A - \
        | 9A 10A 10A - |
        | 9A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG

Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21438, clauses: 79319
last 21438 length 79319
property Termination
has value Just True
for SRS
  [5#, 5, 0, 0] |-> [5#, 5, 0] {- DP (Top 3) (Input 35) -}
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  ( 1
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 4
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 2
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( 0
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( 5
  , Wk  / 6A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( 3
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 5#
  , Wk  / 12A 13A 13A - \
        | 12A 13A 13A - |
        | 12A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [0, 0, 0] ->= [0, 0, 1, 0, 1] {- DP Nontop (Input 0) -}
  [0, 2, 0] ->= [0, 0, 2, 1, 1] {- DP Nontop (Input 1) -}
  [0, 3, 2] ->= [2, 1, 3, 0] {- DP Nontop (Input 2) -}
  [0, 4, 2] ->= [4, 1, 1, 1, 0, 2] {- DP Nontop (Input 3) -}
  [3, 0, 4] ->= [0, 1, 3, 4, 1] {- DP Nontop (Input 4) -}
  [3, 2, 0] ->= [0, 2, 1, 3] {- DP Nontop (Input 5) -}
  [3, 2, 0] ->= [3, 0, 2, 1] {- DP Nontop (Input 6) -}
  [3, 2, 0] ->= [0, 1, 2, 1, 3] {- DP Nontop (Input 7) -}
  [3, 2, 0] ->= [3, 0, 1, 2, 1, 4] {- DP Nontop (Input 8) -}
  [3, 2, 4] ->= [1, 2, 1, 3, 3, 4] {- DP Nontop (Input 9) -}
  [3, 2, 4] ->= [4, 1, 2, 1, 1, 3] {- DP Nontop (Input 10) -}
  [3, 2, 5] ->= [1, 3, 5, 2] {- DP Nontop (Input 11) -}
  [3, 2, 5] ->= [3, 1, 4, 5, 2] {- DP Nontop (Input 12) -}
  [3, 2, 5] ->= [1, 1, 3, 3, 5, 2] {- DP Nontop (Input 13) -}
  [3, 2, 5] ->= [1, 3, 4, 5, 4, 2] {- DP Nontop (Input 14) -}
  [3, 5, 0] ->= [3, 1, 0, 5, 1, 1] {- DP Nontop (Input 15) -}
  [5, 0, 2] ->= [1, 1, 0, 2, 5] {- DP Nontop (Input 16) -}
  [5, 0, 4] ->= [0, 5, 4, 1, 1] {- DP Nontop (Input 17) -}
  [5, 2, 4] ->= [5, 2, 1, 1, 3, 4] {- DP Nontop (Input 18) -}
  [5, 3, 2] ->= [1, 1, 3, 5, 1, 2] {- DP Nontop (Input 19) -}
  [5, 5, 0] ->= [5, 1, 1, 5, 0] {- DP Nontop (Input 20) -}
  [0, 0, 2, 4] ->= [0, 4, 0, 2, 1, 1] {- DP Nontop (Input 21) -}
  [0, 3, 1, 2] ->= [1, 1, 3, 0, 2] {- DP Nontop (Input 22) -}
  [0, 3, 2, 4] ->= [2, 1, 3, 0, 4, 4] {- DP Nontop (Input 23) -}
  [0, 4, 3, 2] ->= [2, 3, 4, 0, 1] {- DP Nontop (Input 24) -}
  [3, 0, 2, 4] ->= [3, 0, 4, 2, 1, 1] {- DP Nontop (Input 25) -}
  [3, 0, 5, 4] ->= [3, 4, 0, 5, 1, 3] {- DP Nontop (Input 26) -}
  [3, 1, 0, 0] ->= [0, 1, 1, 3, 0, 1] {- DP Nontop (Input 27) -}
  [3, 2, 4, 0] ->= [3, 1, 0, 4, 2] {- DP Nontop (Input 28) -}
  [3, 2, 4, 5] ->= [3, 1, 4, 2, 1, 5] {- DP Nontop (Input 29) -}
  [3, 2, 5, 4] ->= [3, 4, 3, 5, 2] {- DP Nontop (Input 30) -}
  [3, 5, 3, 2] ->= [3, 3, 0, 2, 5] {- DP Nontop (Input 31) -}
  [4, 0, 4, 2] ->= [4, 4, 2, 1, 3, 0] {- DP Nontop (Input 32) -}
  [4, 3, 2, 0] ->= [0, 2, 1, 3, 4] {- DP Nontop (Input 33) -}
  [5, 4, 1, 0] ->= [5, 1, 1, 4, 0, 1] {- DP Nontop (Input 34) -}
  [5, 5, 0, 0] ->= [1, 1, 0, 5, 5, 0] {- DP Nontop (Input 35) -}
  [5, 5, 2, 2] ->= [5, 5, 1, 1, 2, 2] {- DP Nontop (Input 36) -}
  [0, 0, 1, 2, 4] ->= [0, 0, 2, 1, 1, 4] {- DP Nontop (Input 37) -}
  [0, 5, 3, 1, 2] ->= [5, 2, 1, 3, 1, 0] {- DP Nontop (Input 38) -}
  [0, 5, 5, 1, 0] ->= [5, 0, 0, 5, 1, 1] {- DP Nontop (Input 39) -}
  [3, 0, 1, 4, 5] ->= [3, 4, 0, 5, 1, 1] {- DP Nontop (Input 40) -}
  [3, 0, 3, 1, 2] ->= [0, 2, 1, 1, 3, 3] {- DP Nontop (Input 41) -}
  [3, 2, 2, 0, 4] ->= [3, 2, 2, 0, 1, 4] {- DP Nontop (Input 42) -}
  [3, 5, 1, 4, 0] ->= [1, 3, 3, 4, 5, 0] {- DP Nontop (Input 43) -}
  [3, 5, 3, 0, 4] ->= [3, 0, 1, 5, 3, 4] {- DP Nontop (Input 44) -}
  [5, 1, 0, 2, 4] ->= [2, 1, 5, 4, 0, 3] {- DP Nontop (Input 45) -}
  [5, 1, 3, 2, 0] ->= [2, 3, 5, 0, 1, 1] {- DP Nontop (Input 46) -}
  [5, 4, 2, 0, 2] ->= [5, 0, 4, 2, 1, 2] {- DP Nontop (Input 47) -}
reason
  EDG

**************************************************
skeleton: (48,6)\Deepee(132/48,10)\Weight(87/48,10)\EDG(19/48,9)\Matrix{\Arctic}{3}\EDG(18/48,9)\Matrix{\Arctic}{3}\EDG(17/48,9)\Matrix{\Arctic}{3}\EDG(10/48,9)\Matrix{\Arctic}{3}\EDG(9/48,9)\Matrix{\Arctic}{3}\EDG(8/48,9)\Matrix{\Arctic}{3}(5/48,9)\Weight(3/48,8)\EDG[(2/48,7)\Matrix{\Arctic}{3}(0/48,6)\EDG[],(1/48,7)\Matrix{\Arctic}{3}(0/48,6)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 21438 vars 79319 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 14
  max duration 1.471251575000
  min duration 0.523370742000
  total durat. 12.238460573000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 482}
    , self = 118
    , parent = Nothing
    , duration = 1.023477096000
    , status = Fail
    , start = 2025-09-03 12:06:37.833949253 UTC
    , finish = 2025-09-03 12:06:38.857426349 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 471}
    , self = 143
    , parent = Nothing
    , duration = 1.080001082000
    , status = Fail
    , start = 2025-09-03 12:06:40.815275078 UTC
    , finish = 2025-09-03 12:06:41.89527616 UTC
    , thread_cap_info = ("ThreadId 195", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 489}
    , self = 98
    , parent = Nothing
    , duration = 1.110157623000
    , status = Fail
    , start = 2025-09-03 12:06:34.133392107 UTC
    , finish = 2025-09-03 12:06:35.24354973 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 466}
    , self = 163
    , parent = Nothing
    , duration = 1.471251575000
    , status = Fail
    , start = 2025-09-03 12:06:44.136327616 UTC
    , finish = 2025-09-03 12:06:45.607579191 UTC
    , thread_cap_info = ("ThreadId 227", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 14
  max duration 1.865108919000
  min duration 0.599846528000
  total durat. 15.087299068000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 525}
    , self = 101
    , parent = Nothing
    , duration = 1.002543962000
    , status = Fail
    , start = 2025-09-03 12:06:35.054534048 UTC
    , finish = 2025-09-03 12:06:36.05707801 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 455}
    , self = 162
    , parent = Nothing
    , duration = 1.032965558000
    , status = Fail
    , start = 2025-09-03 12:06:43.273798811 UTC
    , finish = 2025-09-03 12:06:44.306764369 UTC
    , thread_cap_info = ("ThreadId 219", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 587}
    , self = 81
    , parent = Nothing
    , duration = 1.099231308000
    , status = Fail
    , start = 2025-09-03 12:06:32.55475501 UTC
    , finish = 2025-09-03 12:06:33.653986318 UTC
    , thread_cap_info = ("ThreadId 129", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 454}
    , self = 72
    , parent = Nothing
    , duration = 1.162583007000
    , status = Fail
    , start = 2025-09-03 12:06:30.615874683 UTC
    , finish = 2025-09-03 12:06:31.77845769 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 471}
    , self = 145
    , parent = Nothing
    , duration = 1.343502800000
    , status = Fail
    , start = 2025-09-03 12:06:40.834160393 UTC
    , finish = 2025-09-03 12:06:42.177663193 UTC
    , thread_cap_info = ("ThreadId 196", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 489}
    , self = 99
    , parent = Nothing
    , duration = 1.363691748000
    , status = Fail
    , start = 2025-09-03 12:06:34.174299376 UTC
    , finish = 2025-09-03 12:06:35.537991124 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 482}
    , self = 119
    , parent = Nothing
    , duration = 1.385543032000
    , status = Fail
    , start = 2025-09-03 12:06:37.875016174 UTC
    , finish = 2025-09-03 12:06:39.260559206 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 466}
    , self = 164
    , parent = Nothing
    , duration = 1.865108919000
    , status = Fail
    , start = 2025-09-03 12:06:44.175909257 UTC
    , finish = 2025-09-03 12:06:46.041018176 UTC
    , thread_cap_info = ("ThreadId 228", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 13
  max duration 2.755664562000
  min duration 1.059417514000
  total durat. 20.289289700000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 461}
    , self = 149
    , parent = Nothing
    , duration = 1.059417514000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:42.213974474 UTC
    , finish = 2025-09-03 12:06:43.273391988 UTC
    , thread_cap_info = ("ThreadId 211", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 525}
    , self = 104
    , parent = Nothing
    , duration = 1.087142423000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:36.073403124 UTC
    , finish = 2025-09-03 12:06:37.160545547 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 506}
    , self = 138
    , parent = Nothing
    , duration = 1.131074043000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:40.442438378 UTC
    , finish = 2025-09-03 12:06:41.573512421 UTC
    , thread_cap_info = ("ThreadId 190", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 464}
    , self = 63
    , parent = Nothing
    , duration = 1.181083362000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:29.313392814 UTC
    , finish = 2025-09-03 12:06:30.494476176 UTC
    , thread_cap_info = ("ThreadId 100", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 517}
    , self = 122
    , parent = Nothing
    , duration = 1.320839723000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:38.174445355 UTC
    , finish = 2025-09-03 12:06:39.495285078 UTC
    , thread_cap_info = ("ThreadId 174", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 597}
    , self = 75
    , parent = Nothing
    , duration = 1.340747982000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:31.193405253 UTC
    , finish = 2025-09-03 12:06:32.534153235 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 587}
    , self = 93
    , parent = Nothing
    , duration = 1.379332063000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:33.674275675 UTC
    , finish = 2025-09-03 12:06:35.053607738 UTC
    , thread_cap_info = ("ThreadId 134", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 482}
    , self = 131
    , parent = Nothing
    , duration = 1.400153837000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:39.315444559 UTC
    , finish = 2025-09-03 12:06:40.715598396 UTC
    , thread_cap_info = ("ThreadId 179", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 19
      , num_top_rules = 19
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 603}
    , self = 56
    , parent = Nothing
    , duration = 1.500011322000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:28.853403148 UTC
    , finish = 2025-09-03 12:06:30.35341447 UTC
    , thread_cap_info = ("ThreadId 97", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 471}
    , self = 156
    , parent = Nothing
    , duration = 1.812159727000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:42.233386621 UTC
    , finish = 2025-09-03 12:06:44.045546348 UTC
    , thread_cap_info = ("ThreadId 210", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 489}
    , self = 111
    , parent = Nothing
    , duration = 2.139305931000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:35.594083455 UTC
    , finish = 2025-09-03 12:06:37.733389386 UTC
    , thread_cap_info = ("ThreadId 152", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 454}
    , self = 84
    , parent = Nothing
    , duration = 2.182357211000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:31.834279804 UTC
    , finish = 2025-09-03 12:06:34.016637015 UTC
    , thread_cap_info = ("ThreadId 122", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 455}
    , self = 167
    , parent = Nothing
    , duration = 2.755664562000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:44.317738087 UTC
    , finish = 2025-09-03 12:06:47.073402649 UTC
    , thread_cap_info = ("ThreadId 229", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 13
  max duration 3.000710147000
  min duration 1.130834511000
  total durat. 22.476026150000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 461}
    , self = 147
    , parent = Nothing
    , duration = 1.130834511000
    , status = Success
    , start = 2025-09-03 12:06:42.107417952 UTC
    , finish = 2025-09-03 12:06:43.238252463 UTC
    , thread_cap_info = ("ThreadId 209", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 525}
    , self = 102
    , parent = Nothing
    , duration = 1.290001275000
    , status = Success
    , start = 2025-09-03 12:06:35.8297563 UTC
    , finish = 2025-09-03 12:06:37.119757575 UTC
    , thread_cap_info = ("ThreadId 155", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 506}
    , self = 136
    , parent = Nothing
    , duration = 1.295001490000
    , status = Success
    , start = 2025-09-03 12:06:40.25436489 UTC
    , finish = 2025-09-03 12:06:41.54936638 UTC
    , thread_cap_info = ("ThreadId 189", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 597}
    , self = 73
    , parent = Nothing
    , duration = 1.390647423000
    , status = Success
    , start = 2025-09-03 12:06:31.114107601 UTC
    , finish = 2025-09-03 12:06:32.504755024 UTC
    , thread_cap_info = ("ThreadId 117", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 464}
    , self = 61
    , parent = Nothing
    , duration = 1.417013022000
    , status = Success
    , start = 2025-09-03 12:06:28.993417606 UTC
    , finish = 2025-09-03 12:06:30.410430628 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 517}
    , self = 120
    , parent = Nothing
    , duration = 1.449464849000
    , status = Success
    , start = 2025-09-03 12:06:38.016358309 UTC
    , finish = 2025-09-03 12:06:39.465823158 UTC
    , thread_cap_info = ("ThreadId 173", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 19
      , num_top_rules = 19
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 603}
    , self = 54
    , parent = Nothing
    , duration = 1.523672930000
    , status = Success
    , start = 2025-09-03 12:06:28.809188866 UTC
    , finish = 2025-09-03 12:06:30.332861796 UTC
    , thread_cap_info = ("ThreadId 96", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 48
      , alphabet_size = 9
      , total_length = 587}
    , self = 91
    , parent = Nothing
    , duration = 1.556430098000
    , status = Success
    , start = 2025-09-03 12:06:33.47341502 UTC
    , finish = 2025-09-03 12:06:35.029845118 UTC
    , thread_cap_info = ("ThreadId 133", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 482}
    , self = 129
    , parent = Nothing
    , duration = 1.744818501000
    , status = Success
    , start = 2025-09-03 12:06:38.876062134 UTC
    , finish = 2025-09-03 12:06:40.620880635 UTC
    , thread_cap_info = ("ThreadId 177", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 471}
    , self = 154
    , parent = Nothing
    , duration = 2.023097805000
    , status = Success
    , start = 2025-09-03 12:06:41.914018534 UTC
    , finish = 2025-09-03 12:06:43.937116339 UTC
    , thread_cap_info = ("ThreadId 206", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 454}
    , self = 82
    , parent = Nothing
    , duration = 2.261748146000
    , status = Success
    , start = 2025-09-03 12:06:31.634742383 UTC
    , finish = 2025-09-03 12:06:33.896490529 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 489}
    , self = 109
    , parent = Nothing
    , duration = 2.392585953000
    , status = Success
    , start = 2025-09-03 12:06:35.243634951 UTC
    , finish = 2025-09-03 12:06:37.636220904 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 48
      , alphabet_size = 7
      , total_length = 455}
    , self = 165
    , parent = Nothing
    , duration = 3.000710147000
    , status = Success
    , start = 2025-09-03 12:06:44.049939189 UTC
    , finish = 2025-09-03 12:06:47.050649336 UTC
    , thread_cap_info = ("ThreadId 222", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 18.905138055000
  min duration 18.905138055000
  total durat. 18.905138055000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 48
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 6
      , total_length = 448}
    , self = 170
    , parent = Nothing
    , duration = 18.905138055000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:06:28.228886382 UTC
    , finish = 2025-09-03 12:06:47.134024437 UTC
    , thread_cap_info = ("ThreadId 65", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 6
  max duration 2.962058768000
  min duration 0.000069252000
  total durat. 4.985963280000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 7152
      , num_strict_rules = 5424
      , num_top_rules = 5424
      , num_weak_rules = 1728
      , alphabet_size = 60
      , total_length = 68124}
    , self = 53
    , parent = Nothing
    , duration = 1.978410314000
    , status = Success
    , start = 2025-09-03 12:06:28.273641837 UTC
    , finish = 2025-09-03 12:06:30.252052151 UTC
    , thread_cap_info = ("ThreadId 82", 0, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 7608
      , num_strict_rules = 5880
      , num_top_rules = 5880
      , num_weak_rules = 1728
      , alphabet_size = 60
      , total_length = 72432}
    , self = 70
    , parent = Nothing
    , duration = 2.962058768000
    , status = Success
    , start = 2025-09-03 12:06:28.272858403 UTC
    , finish = 2025-09-03 12:06:31.234917171 UTC
    , thread_cap_info = ("ThreadId 79", 0, False)}
**************************************************
F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F              = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
F              = 19 , num_top_rules = 19 , num_weak_rules = 48 , alphabet_size = 9 , total_length
F              = 603} , self = 50 , parent = Nothing , duration = 0.611340802000 , status
F              = Fail , start = 2025-09-03 12:06:28.222307709 UTC , finish = 2025-09-03
F              12:06:28.833648511 UTC , thread_cap_info = ("ThreadId 61", 1, False)}
F              
| E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E            = True})" , input_size = Size { num_rules = 48 , num_strict_rules = 48
| E            , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| E            = 448} , self = 170 , parent = Nothing , duration = 18.905138055000 , status
| E            = Except "AsyncCancelled" , start = 2025-09-03 12:06:28.228886382 UTC ,
| E            finish = 2025-09-03 12:06:47.134024437 UTC , thread_cap_info = ("ThreadId
| E            65", 3, False)}
| E            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | F          = 19 , num_top_rules = 19 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | F          = 603} , self = 49 , parent = Nothing , duration = 0.575772337000 , status
| | F          = Fail , start = 2025-09-03 12:06:28.233386346 UTC , finish = 2025-09-03
| | F          12:06:28.809158683 UTC , thread_cap_info = ("ThreadId 60", 1, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | F        = 2 , num_top_rules = 2 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | F        = 464} , self = 51 , parent = Nothing , duration = 0.722656222000 , status
| | | F        = Fail , start = 2025-09-03 12:06:28.25338753 UTC , finish = 2025-09-03
| | | F        12:06:28.976043752 UTC , thread_cap_info = ("ThreadId 68", 2, False)}
| | | F        
| | | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S      = Size { num_rules = 7608 , num_strict_rules = 5880 , num_top_rules = 5880
| | | | S      , num_weak_rules = 1728 , alphabet_size = 60 , total_length = 72432} ,
| | | | S      self = 70 , parent = Nothing , duration = 2.962058768000 , status = Success
| | | | S      , start = 2025-09-03 12:06:28.272858403 UTC , finish = 2025-09-03 12:06:31.234917171
| | | | S      UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| | | | S      
| | | | | S    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | S    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | S    = Size { num_rules = 7152 , num_strict_rules = 5424 , num_top_rules = 5424
| | | | | S    , num_weak_rules = 1728 , alphabet_size = 60 , total_length = 68124} ,
| | | | | S    self = 53 , parent = Nothing , duration = 1.978410314000 , status = Success
| | | | | S    , start = 2025-09-03 12:06:28.273641837 UTC , finish = 2025-09-03 12:06:30.252052151
| | | | | S    UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | | | S    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | | | | F  = 464} , self = 52 , parent = Nothing , duration = 0.938676891000 , status
| | | | | | F  = Fail , start = 2025-09-03 12:06:28.31791982 UTC , finish = 2025-09-03
| | | | | | F  12:06:29.256596711 UTC , thread_cap_info = ("ThreadId 80", 2, False)}
| | | | | | F  
| | F | | | |  
| | S | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |  = 67 , num_strict_rules = 19 , num_top_rules = 19 , num_weak_rules = 48
| | S | | | |  , alphabet_size = 9 , total_length = 603} , self = 54 , parent = Nothing
| | S | | | |  , duration = 1.523672930000 , status = Success , start = 2025-09-03 12:06:28.809188866
| | S | | | |  UTC , finish = 2025-09-03 12:06:30.332861796 UTC , thread_cap_info = ("ThreadId
| | S | | | |  96", 1, False)}
| | S | | | |  
F | | | | | |  
E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 67
E | | | | | |  , num_strict_rules = 19 , num_top_rules = 19 , num_weak_rules = 48 , alphabet_size
E | | | | | |  = 9 , total_length = 603} , self = 56 , parent = Nothing , duration = 1.500011322000
E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:06:28.853403148
E | | | | | |  UTC , finish = 2025-09-03 12:06:30.35341447 UTC , thread_cap_info = ("ThreadId
E | | | | | |  97", 1, False)}
E | | | | | |  
| | | F | | |  
| | | S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | |  = 50 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 48 ,
| | | S | | |  alphabet_size = 7 , total_length = 464} , self = 61 , parent = Nothing
| | | S | | |  , duration = 1.417013022000 , status = Success , start = 2025-09-03 12:06:28.993417606
| | | S | | |  UTC , finish = 2025-09-03 12:06:30.410430628 UTC , thread_cap_info = ("ThreadId
| | | S | | |  98", 2, False)}
| | | S | | |  
| | | | | | F  
| | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 50
| | | | | | E  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 48 , alphabet_size
| | | | | | E  = 7 , total_length = 464} , self = 63 , parent = Nothing , duration = 1.181083362000
| | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 12:06:29.313392814
| | | | | | E  UTC , finish = 2025-09-03 12:06:30.494476176 UTC , thread_cap_info = ("ThreadId
| | | | | | E  100", 2, False)}
| | | | | | E  
| | | | | S |  
| | S | |   |  
E |   | |   |  
F |   | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
F |   | |   |  = 18 , num_top_rules = 18 , num_weak_rules = 48 , alphabet_size = 9 , total_length
F |   | |   |  = 597} , self = 68 , parent = Nothing , duration = 0.736573991000 , status
F |   | |   |  = Fail , start = 2025-09-03 12:06:30.360116476 UTC , finish = 2025-09-03
F |   | |   |  12:06:31.096690467 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
F |   | |   |  
| | F | |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | F | |   |  = 18 , num_top_rules = 18 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | F | |   |  = 597} , self = 69 , parent = Nothing , duration = 0.784361541000 , status
| | F | |   |  = Fail , start = 2025-09-03 12:06:30.393407199 UTC , finish = 2025-09-03
| | F | |   |  12:06:31.17776874 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | F | |   |  
| | | S |   |  
| | |   |   E  
| | | F |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | F |      = 1 , num_top_rules = 1 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | F |      = 454} , self = 71 , parent = Nothing , duration = 0.981669263000 , status
| | | F |      = Fail , start = 2025-09-03 12:06:30.595919932 UTC , finish = 2025-09-03
| | | F |      12:06:31.577589195 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | | F |      
| | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | | | F    = 454} , self = 72 , parent = Nothing , duration = 1.162583007000 , status
| | | | | F    = Fail , start = 2025-09-03 12:06:30.615874683 UTC , finish = 2025-09-03
| | | | | F    12:06:31.77845769 UTC , thread_cap_info = ("ThreadId 114", 2, False)}
| | | | | F    
F | | | | |    
S | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | |    = 66 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 48
S | | | | |    , alphabet_size = 9 , total_length = 597} , self = 73 , parent = Nothing
S | | | | |    , duration = 1.390647423000 , status = Success , start = 2025-09-03 12:06:31.114107601
S | | | | |    UTC , finish = 2025-09-03 12:06:32.504755024 UTC , thread_cap_info = ("ThreadId
S | | | | |    117", 1, False)}
S | | | | |    
| | F | | |    
| | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 66
| | E | | |    , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 48 , alphabet_size
| | E | | |    = 9 , total_length = 597} , self = 75 , parent = Nothing , duration = 1.340747982000
| | E | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:06:31.193405253
| | E | | |    UTC , finish = 2025-09-03 12:06:32.534153235 UTC , thread_cap_info = ("ThreadId
| | E | | |    118", 1, False)}
| | E | | |    
| | | | S |    
| | | F   |    
| | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   |    = 49 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 48 ,
| | | S   |    alphabet_size = 7 , total_length = 454} , self = 82 , parent = Nothing
| | | S   |    , duration = 2.261748146000 , status = Success , start = 2025-09-03 12:06:31.634742383
| | | S   |    UTC , finish = 2025-09-03 12:06:33.896490529 UTC , thread_cap_info = ("ThreadId
| | | S   |    121", 2, False)}
| | | S   |    
| | | |   F    
| | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 49
| | | | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 48 , alphabet_size
| | | | E      = 7 , total_length = 454} , self = 84 , parent = Nothing , duration = 2.182357211000
| | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 12:06:31.834279804
| | | | E      UTC , finish = 2025-09-03 12:06:34.016637015 UTC , thread_cap_info = ("ThreadId
| | | | E      122", 2, False)}
| | | | E      
S | | | |      
  | E | |      
F |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
F |   | |      = 17 , num_top_rules = 17 , num_weak_rules = 48 , alphabet_size = 9 , total_length
F |   | |      = 587} , self = 80 , parent = Nothing , duration = 0.930810093000 , status
F |   | |      = Fail , start = 2025-09-03 12:06:32.535790572 UTC , finish = 2025-09-03
F |   | |      12:06:33.466600665 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | F | |      = 17 , num_top_rules = 17 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | F | |      = 587} , self = 81 , parent = Nothing , duration = 1.099231308000 , status
| | F | |      = Fail , start = 2025-09-03 12:06:32.55475501 UTC , finish = 2025-09-03
| | F | |      12:06:33.653986318 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | F | |      
F | | | |      
S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |      = 65 , num_strict_rules = 17 , num_top_rules = 17 , num_weak_rules = 48
S | | | |      , alphabet_size = 9 , total_length = 587} , self = 91 , parent = Nothing
S | | | |      , duration = 1.556430098000 , status = Success , start = 2025-09-03 12:06:33.47341502
S | | | |      UTC , finish = 2025-09-03 12:06:35.029845118 UTC , thread_cap_info = ("ThreadId
S | | | |      133", 1, False)}
S | | | |      
| | F | |      
| | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 65
| | E | |      , num_strict_rules = 17 , num_top_rules = 17 , num_weak_rules = 48 , alphabet_size
| | E | |      = 9 , total_length = 587} , self = 93 , parent = Nothing , duration = 1.379332063000
| | E | |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:06:33.674275675
| | E | |      UTC , finish = 2025-09-03 12:06:35.053607738 UTC , thread_cap_info = ("ThreadId
| | E | |      134", 1, False)}
| | E | |      
| | | S |      
| | |   E      
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | F        = 6 , num_top_rules = 6 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | F        = 489} , self = 98 , parent = Nothing , duration = 1.110157623000 , status
| | | F        = Fail , start = 2025-09-03 12:06:34.133392107 UTC , finish = 2025-09-03
| | | F        12:06:35.24354973 UTC , thread_cap_info = ("ThreadId 140", 2, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | | F      = 489} , self = 99 , parent = Nothing , duration = 1.363691748000 , status
| | | | F      = Fail , start = 2025-09-03 12:06:34.174299376 UTC , finish = 2025-09-03
| | | | F      12:06:35.537991124 UTC , thread_cap_info = ("ThreadId 141", 2, False)}
| | | | F      
S | | | |      
  | E | |      
F |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
F |   | |      = 10 , num_top_rules = 10 , num_weak_rules = 48 , alphabet_size = 9 , total_length
F |   | |      = 525} , self = 100 , parent = Nothing , duration = 0.764973095000 , status
F |   | |      = Fail , start = 2025-09-03 12:06:35.054532752 UTC , finish = 2025-09-03
F |   | |      12:06:35.819505847 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
| | F | |      = 10 , num_top_rules = 10 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | F | |      = 525} , self = 101 , parent = Nothing , duration = 1.002543962000 , status
| | F | |      = Fail , start = 2025-09-03 12:06:35.054534048 UTC , finish = 2025-09-03
| | F | |      12:06:36.05707801 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | F | |      
| | | F |      
| | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |      = 54 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 48 ,
| | | S |      alphabet_size = 7 , total_length = 489} , self = 109 , parent = Nothing
| | | S |      , duration = 2.392585953000 , status = Success , start = 2025-09-03 12:06:35.243634951
| | | S |      UTC , finish = 2025-09-03 12:06:37.636220904 UTC , thread_cap_info = ("ThreadId
| | | S |      151", 2, False)}
| | | S |      
| | | | F      
| | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 54
| | | | E      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 48 , alphabet_size
| | | | E      = 7 , total_length = 489} , self = 111 , parent = Nothing , duration =
| | | | E      2.139305931000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E      12:06:35.594083455 UTC , finish = 2025-09-03 12:06:37.733389386 UTC , thread_cap_info
| | | | E      = ("ThreadId 152", 2, False)}
| | | | E      
F | | | |      
S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |      = 58 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 48
S | | | |      , alphabet_size = 9 , total_length = 525} , self = 102 , parent = Nothing
S | | | |      , duration = 1.290001275000 , status = Success , start = 2025-09-03 12:06:35.8297563
S | | | |      UTC , finish = 2025-09-03 12:06:37.119757575 UTC , thread_cap_info = ("ThreadId
S | | | |      155", 1, False)}
S | | | |      
| | F | |      
| | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 58
| | E | |      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 48 , alphabet_size
| | E | |      = 9 , total_length = 525} , self = 104 , parent = Nothing , duration =
| | E | |      1.087142423000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |      12:06:36.073403124 UTC , finish = 2025-09-03 12:06:37.160545547 UTC , thread_cap_info
| | E | |      = ("ThreadId 156", 1, False)}
| | E | |      
S | | | |      
  | E | |      
F |   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
F |   | |      = 9 , num_top_rules = 9 , num_weak_rules = 48 , alphabet_size = 9 , total_length
F |   | |      = 517} , self = 117 , parent = Nothing , duration = 0.996462503000 , status
F |   | |      = Fail , start = 2025-09-03 12:06:37.161508463 UTC , finish = 2025-09-03
F |   | |      12:06:38.157970966 UTC , thread_cap_info = ("ThreadId 164", 1, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | F | |      = 9 , num_top_rules = 9 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | F | |      = 517} , self = 116 , parent = Nothing , duration = 0.820748015000 , status
| | F | |      = Fail , start = 2025-09-03 12:06:37.179497365 UTC , finish = 2025-09-03
| | F | |      12:06:38.00024538 UTC , thread_cap_info = ("ThreadId 163", 1, False)}
| | F | |      
| | | S |      
| | |   E      
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | | F        = 5 , num_top_rules = 5 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | F        = 482} , self = 118 , parent = Nothing , duration = 1.023477096000 , status
| | | F        = Fail , start = 2025-09-03 12:06:37.833949253 UTC , finish = 2025-09-03
| | | F        12:06:38.857426349 UTC , thread_cap_info = ("ThreadId 169", 2, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | | F      = 482} , self = 119 , parent = Nothing , duration = 1.385543032000 , status
| | | | F      = Fail , start = 2025-09-03 12:06:37.875016174 UTC , finish = 2025-09-03
| | | | F      12:06:39.260559206 UTC , thread_cap_info = ("ThreadId 171", 2, False)}
| | | | F      
| | F | |      
| | S | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |      = 57 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 48 ,
| | S | |      alphabet_size = 9 , total_length = 517} , self = 120 , parent = Nothing
| | S | |      , duration = 1.449464849000 , status = Success , start = 2025-09-03 12:06:38.016358309
| | S | |      UTC , finish = 2025-09-03 12:06:39.465823158 UTC , thread_cap_info = ("ThreadId
| | S | |      173", 1, False)}
| | S | |      
F | | | |      
E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 57
E | | | |      , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 48 , alphabet_size
E | | | |      = 9 , total_length = 517} , self = 122 , parent = Nothing , duration =
E | | | |      1.320839723000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | |      12:06:38.174445355 UTC , finish = 2025-09-03 12:06:39.495285078 UTC , thread_cap_info
E | | | |      = ("ThreadId 174", 1, False)}
E | | | |      
| | | F |      
| | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |      = 53 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 48 ,
| | | S |      alphabet_size = 7 , total_length = 482} , self = 129 , parent = Nothing
| | | S |      , duration = 1.744818501000 , status = Success , start = 2025-09-03 12:06:38.876062134
| | | S |      UTC , finish = 2025-09-03 12:06:40.620880635 UTC , thread_cap_info = ("ThreadId
| | | S |      177", 2, False)}
| | | S |      
| | | | F      
| | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 53
| | | | E      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 48 , alphabet_size
| | | | E      = 7 , total_length = 482} , self = 131 , parent = Nothing , duration =
| | | | E      1.400153837000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E      12:06:39.315444559 UTC , finish = 2025-09-03 12:06:40.715598396 UTC , thread_cap_info
| | | | E      = ("ThreadId 179", 2, False)}
| | | | E      
| | S | |      
E |   | |      
F |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
F |   | |      = 8 , num_top_rules = 8 , num_weak_rules = 48 , alphabet_size = 9 , total_length
F |   | |      = 506} , self = 127 , parent = Nothing , duration = 0.740496749000 , status
F |   | |      = Fail , start = 2025-09-03 12:06:39.496115069 UTC , finish = 2025-09-03
F |   | |      12:06:40.236611818 UTC , thread_cap_info = ("ThreadId 184", 1, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | F | |      = 8 , num_top_rules = 8 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | F | |      = 506} , self = 128 , parent = Nothing , duration = 0.901440469000 , status
| | F | |      = Fail , start = 2025-09-03 12:06:39.516415807 UTC , finish = 2025-09-03
| | F | |      12:06:40.417856276 UTC , thread_cap_info = ("ThreadId 185", 1, False)}
| | F | |      
F | | | |      
S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |      = 56 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 48 ,
S | | | |      alphabet_size = 9 , total_length = 506} , self = 136 , parent = Nothing
S | | | |      , duration = 1.295001490000 , status = Success , start = 2025-09-03 12:06:40.25436489
S | | | |      UTC , finish = 2025-09-03 12:06:41.54936638 UTC , thread_cap_info = ("ThreadId
S | | | |      189", 1, False)}
S | | | |      
| | F | |      
| | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 56
| | E | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 48 , alphabet_size
| | E | |      = 9 , total_length = 506} , self = 138 , parent = Nothing , duration =
| | E | |      1.131074043000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |      12:06:40.442438378 UTC , finish = 2025-09-03 12:06:41.573512421 UTC , thread_cap_info
| | E | |      = ("ThreadId 190", 1, False)}
| | E | |      
| | | S |      
| | |   E      
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | F        = 4 , num_top_rules = 4 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | F        = 471} , self = 143 , parent = Nothing , duration = 1.080001082000 , status
| | | F        = Fail , start = 2025-09-03 12:06:40.815275078 UTC , finish = 2025-09-03
| | | F        12:06:41.89527616 UTC , thread_cap_info = ("ThreadId 195", 2, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | | F      = 471} , self = 145 , parent = Nothing , duration = 1.343502800000 , status
| | | | F      = Fail , start = 2025-09-03 12:06:40.834160393 UTC , finish = 2025-09-03
| | | | F      12:06:42.177663193 UTC , thread_cap_info = ("ThreadId 196", 2, False)}
| | | | F      
S | | | |      
  | E | |      
F |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
F |   | |      = 2 , num_top_rules = 2 , num_weak_rules = 48 , alphabet_size = 7 , total_length
F |   | |      = 461} , self = 144 , parent = Nothing , duration = 0.523370742000 , status
F |   | |      = Fail , start = 2025-09-03 12:06:41.574021031 UTC , finish = 2025-09-03
F |   | |      12:06:42.097391773 UTC , thread_cap_info = ("ThreadId 202", 1, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | F | |      = 2 , num_top_rules = 2 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | F | |      = 461} , self = 146 , parent = Nothing , duration = 0.599846528000 , status
| | F | |      = Fail , start = 2025-09-03 12:06:41.593698897 UTC , finish = 2025-09-03
| | F | |      12:06:42.193545425 UTC , thread_cap_info = ("ThreadId 203", 1, False)}
| | F | |      
| | | F |      
| | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |      = 52 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 48 ,
| | | S |      alphabet_size = 7 , total_length = 471} , self = 154 , parent = Nothing
| | | S |      , duration = 2.023097805000 , status = Success , start = 2025-09-03 12:06:41.914018534
| | | S |      UTC , finish = 2025-09-03 12:06:43.937116339 UTC , thread_cap_info = ("ThreadId
| | | S |      206", 2, False)}
| | | S |      
F | | | |      
S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |      = 50 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 48 ,
S | | | |      alphabet_size = 7 , total_length = 461} , self = 147 , parent = Nothing
S | | | |      , duration = 1.130834511000 , status = Success , start = 2025-09-03 12:06:42.107417952
S | | | |      UTC , finish = 2025-09-03 12:06:43.238252463 UTC , thread_cap_info = ("ThreadId
S | | | |      209", 1, False)}
S | | | |      
| | | | F      
| | F |        
| | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 50
| | E |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 48 , alphabet_size
| | E |        = 7 , total_length = 461} , self = 149 , parent = Nothing , duration =
| | E |        1.059417514000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E |        12:06:42.213974474 UTC , finish = 2025-09-03 12:06:43.273391988 UTC , thread_cap_info
| | E |        = ("ThreadId 211", 1, False)}
| | E |        
| | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 52
| | | | E      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 48 , alphabet_size
| | | | E      = 7 , total_length = 471} , self = 156 , parent = Nothing , duration =
| | | | E      1.812159727000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E      12:06:42.233386621 UTC , finish = 2025-09-03 12:06:44.045546348 UTC , thread_cap_info
| | | | E      = ("ThreadId 210", 2, False)}
| | | | E      
S | | | |      
  | E | |      
F |   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
F |   | |      = 1 , num_top_rules = 1 , num_weak_rules = 48 , alphabet_size = 7 , total_length
F |   | |      = 455} , self = 162 , parent = Nothing , duration = 1.032965558000 , status
F |   | |      = Fail , start = 2025-09-03 12:06:43.273798811 UTC , finish = 2025-09-03
F |   | |      12:06:44.306764369 UTC , thread_cap_info = ("ThreadId 219", 1, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | F | |      = 1 , num_top_rules = 1 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | F | |      = 455} , self = 157 , parent = Nothing , duration = 0.756502690000 , status
| | F | |      = Fail , start = 2025-09-03 12:06:43.293390811 UTC , finish = 2025-09-03
| | F | |      12:06:44.049893501 UTC , thread_cap_info = ("ThreadId 218", 1, False)}
| | F | |      
| | | S |      
| | |   E      
| | F          
| | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S          = 49 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 48 ,
| | S          alphabet_size = 7 , total_length = 455} , self = 165 , parent = Nothing
| | S          , duration = 3.000710147000 , status = Success , start = 2025-09-03 12:06:44.049939189
| | S          UTC , finish = 2025-09-03 12:06:47.050649336 UTC , thread_cap_info = ("ThreadId
| | S          222", 1, False)}
| | S          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | F        = 3 , num_top_rules = 3 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | F        = 466} , self = 163 , parent = Nothing , duration = 1.471251575000 , status
| | | F        = Fail , start = 2025-09-03 12:06:44.136327616 UTC , finish = 2025-09-03
| | | F        12:06:45.607579191 UTC , thread_cap_info = ("ThreadId 227", 2, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 48 , alphabet_size = 7 , total_length
| | | | F      = 466} , self = 164 , parent = Nothing , duration = 1.865108919000 , status
| | | | F      = Fail , start = 2025-09-03 12:06:44.175909257 UTC , finish = 2025-09-03
| | | | F      12:06:46.041018176 UTC , thread_cap_info = ("ThreadId 228", 2, False)}
| | | | F      
F | | | |      
E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 49
E | | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 48 , alphabet_size
E | | | |      = 7 , total_length = 455} , self = 167 , parent = Nothing , duration =
E | | | |      2.755664562000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | |      12:06:44.317738087 UTC , finish = 2025-09-03 12:06:47.073402649 UTC , thread_cap_info
E | | | |      = ("ThreadId 229", 1, False)}
E | | | |      
| | | F |      
| | |   F      
| | S          
E |            
  E            
