last 399 length 1574
last 401 length 1609
last 401 length 1609
CNF 401 vars 1609 clauses
CNF 399 vars 1574 clauses
CNF 401 vars 1609 clauses
last 399 length 1574
CNF 399 vars 1574 clauses
last 1633 length 6987
CNF 1633 vars 6987 clauses
last 1937 length 8307
last 2361 length 10770
last 1943 length 8894
CNF 1937 vars 8307 clauses
CNF 1943 vars 8894 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1903, clauses: 6778
CNF 2361 vars 10770 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1903, clauses: 6778
last 1937 length 8307
last 2361 length 10770
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21198
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21198
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4690, clauses: 17245
last 1903 length 6778
last 1903 length 6778
CNF 2361 vars 10770 clauses
last 5164 length 21198
last 5164 length 21198
last 4690 length 17245
CNF 1937 vars 8307 clauses
CNF 1903 vars 6778 clauses
CNF 5164 vars 21198 clauses
CNF 5164 vars 21198 clauses
CNF 4690 vars 17245 clauses
CNF 1903 vars 6778 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21198, status: Satisfied, time: 0.067535621s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1903, clauses: 6778, status: Satisfied, time: 0.051607713s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21198, status: Satisfied, time: 0.086486299s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1903, clauses: 6778, status: Satisfied, time: 0.093801302s
last 259 length 1037
last 323 length 1313
CNF 259 vars 1037 clauses
CNF 323 vars 1313 clauses
last 259 length 1037
CNF 259 vars 1037 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1388, clauses: 4851
last 1388 length 4851
last 323 length 1313
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4690, clauses: 17245, status: Satisfied, time: 0.122004241s
CNF 1388 vars 4851 clauses
CNF 323 vars 1313 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1388, clauses: 4851
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 18289
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4690, clauses: 17245
last 2160 length 9859
last 1779 length 7611
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1388, clauses: 4851, status: Unsatisfied, time: 0.163882471s
last 1388 length 4851
last 4450 length 18289
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 18289
last 4690 length 17245
CNF 2160 vars 9859 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19000, clauses: 79857
CNF 1779 vars 7611 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2656, clauses: 10534
CNF 1388 vars 4851 clauses
last 4450 length 18289
CNF 4690 vars 17245 clauses
CNF 4450 vars 18289 clauses
last 19000 length 79857
last 2656 length 10534
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1388, clauses: 4851, status: Unsatisfied, time: 0.194238376s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4384, clauses: 15982
CNF 4450 vars 18289 clauses
last 4384 length 15982
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 18289, status: Satisfied, time: 0.183648328s
CNF 2656 vars 10534 clauses
CNF 19000 vars 79857 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2656, clauses: 10534
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 18289, status: Satisfied, time: 0.165429033s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4690, clauses: 17245, status: Satisfied, time: 0.262092352s
CNF 4384 vars 15982 clauses
last 2656 length 10534
**************************************************
summary
**************************************************
SRS with 2 rules on 3 letters       DP
SRS with 4 strict rules and 2 weak rules on 5 letters       EDG
SRS with 3 strict rules and 2 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 2 weak rules on 5 letters       weights
SRS with 1 strict rules and 2 weak rules on 4 letters       EDG
SRS with 1 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, a] {- Input 0 -}
  [b, a, b] -> [a, c, a] {- Input 1 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Input 1) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [b#, a, b] |-> [a#] {- DP (Top 2) (Input 1) -}
  [b#, a, b] |-> [a#, c, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [b#, a, b] |-> [a#] {- DP (Top 2) (Input 1) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 1A -1A 0A \
        | -  -   -  |
        \ -  -   0A / )
  ( b
  , Wk  / 0A -1A 0A \
        | -  2A  -  |
        \ -  -   0A / )
  ( c
  , Wk  / - -3A 0A \
        | - -3A 2A |
        \ - -   0A / )
  ( a#
  , Wk  / 1A -3A -2A \
        | -  -   -   |
        \ -  -   0A  / )
  ( b#
  , Wk  / 1A -2A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 0) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 0) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / -   - 2A \
        | -1A - 0A |
        \ -   - 0A / )
  ( b
  , Wk  / 0A -   2A \
        | -  -1A -  |
        \ -  -   0A / )
  ( c
  , Wk  / -2A 0A  1A  \
        | -   -3A -3A |
        \ -   -   0A  / )
  ( a#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Input 1) -}
reason
  EDG

**************************************************
skeleton: (2,3)\Deepee(4/2,5)\EDG(3/2,5)\Matrix{\ArcticBZ}{3}(2/2,5)\Weight\EDG(1/2,4)\Matrix{\ArcticBZ}{3}(0/2,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.240601821000
  min duration 0.006989526000
  total durat. 1.006642501000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.513616842000
  min duration 0.241781163000
  total durat. 1.396438619000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.631647223000
  min duration 0.282041899000
  total durat. 1.489948599000
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F                  = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
F                  = 85} , self = 62 , parent = Nothing , duration = 0.127526300000 , status
F                  = Fail , start = 2025-09-03 13:31:05.43633087 UTC , finish = 2025-09-03
F                  13:31:05.56385717 UTC , thread_cap_info = ("ThreadId 88", 1, False)}
F                  
| S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S                = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| S                = 5 , total_length = 24} , self = 71 , parent = Nothing , duration = 0.292083952000
| S                , status = Success , start = 2025-09-03 13:31:05.442119599 UTC , finish
| S                = 2025-09-03 13:31:05.734203551 UTC , thread_cap_info = ("ThreadId 91",
| S                2, False)}
| S                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F              = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | F              = 85} , self = 63 , parent = Nothing , duration = 0.198302875000 , status
| | F              = Fail , start = 2025-09-03 13:31:05.447167197 UTC , finish = 2025-09-03
| | F              13:31:05.645470072 UTC , thread_cap_info = ("ThreadId 89", 1, False)}
| | F              
| | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S            = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | S            = 5 , total_length = 24} , self = 68 , parent = Nothing , duration = 0.284175525000
| | | S            , status = Success , start = 2025-09-03 13:31:05.447176741 UTC , finish
| | | S            = 2025-09-03 13:31:05.731352266 UTC , thread_cap_info = ("ThreadId 93",
| | | S            2, False)}
| | | S            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F          = 10 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | | F          = 71} , self = 64 , parent = Nothing , duration = 0.181613120000 , status
| | | | F          = Fail , start = 2025-09-03 13:31:05.466648275 UTC , finish = 2025-09-03
| | | | F          13:31:05.648261395 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
| | | | F          
| | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | S        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | S        = 5 , total_length = 24} , self = 67 , parent = Nothing , duration = 0.264267745000
| | | | | S        , status = Success , start = 2025-09-03 13:31:05.466667124 UTC , finish
| | | | | S        = 2025-09-03 13:31:05.730934869 UTC , thread_cap_info = ("ThreadId 94",
| | | | | S        2, False)}
| | | | | S        
| | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | S      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | | S      = 5 , total_length = 24} , self = 69 , parent = Nothing , duration = 0.241781163000
| | | | | | S      , status = Success , start = 2025-09-03 13:31:05.490058835 UTC , finish
| | | | | | S      = 2025-09-03 13:31:05.731839998 UTC , thread_cap_info = ("ThreadId 95",
| | | | | | S      2, False)}
| | | | | | S      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | | | F    = 85} , self = 66 , parent = Nothing , duration = 0.193490221000 , status
| | | | | | | F    = Fail , start = 2025-09-03 13:31:05.493164934 UTC , finish = 2025-09-03
| | | | | | | F    13:31:05.686655155 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | | | | F  = 85} , self = 65 , parent = Nothing , duration = 0.175370380000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 13:31:05.493170332 UTC , finish = 2025-09-03
| | | | | | | | F  13:31:05.668540712 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | | | | | | | F  
F | | | | | | | |  
S | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | | |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
S | | | | | | | |  alphabet_size = 6 , total_length = 85} , self = 86 , parent = Nothing ,
S | | | | | | | |  duration = 0.282041899000 , status = Success , start = 2025-09-03 13:31:05.56390039
S | | | | | | | |  UTC , finish = 2025-09-03 13:31:05.845942289 UTC , thread_cap_info = ("ThreadId
S | | | | | | | |  115", 1, False)}
S | | | | | | | |  
| | F | | | | | |  
| | E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | E | | | | | |  = 6 , total_length = 85} , self = 88 , parent = Nothing , duration = 0.201086839000
| | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:31:05.645502634
| | E | | | | | |  UTC , finish = 2025-09-03 13:31:05.846589473 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |  120", 1, False)}
| | E | | | | | |  
| | | | F | | | |  
| | | |   | | | F  
| | | |   | | F    
| | | | S | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |      = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | | | S | |      alphabet_size = 6 , total_length = 85} , self = 102 , parent = Nothing
| | | | S | |      , duration = 0.631647223000 , status = Success , start = 2025-09-03 13:31:05.688134534
| | | | S | |      UTC , finish = 2025-09-03 13:31:06.319781757 UTC , thread_cap_info = ("ThreadId
| | | | S | |      125", 1, False)}
| | | | S | |      
| | | | | S |      
| | | S |   |      
| | |   |   S      
| S |   |          
| F |   |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   |          = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F |   |          = 4 , total_length = 16} , self = 94 , parent = Nothing , duration = 0.302151255000
| F |   |          , status = Fail , start = 2025-09-03 13:31:05.744516662 UTC , finish =
| F |   |          2025-09-03 13:31:06.046667917 UTC , thread_cap_info = ("ThreadId 145",
| F |   |          2, False)}
| F |   |          
| | | S |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | S |          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | S |          = 4 , total_length = 16} , self = 98 , parent = Nothing , duration = 0.513616842000
| | | S |          , status = Success , start = 2025-09-03 13:31:05.754456288 UTC , finish
| | | S |          = 2025-09-03 13:31:06.26807313 UTC , thread_cap_info = ("ThreadId 146",
| | | S |          2, False)}
| | | S |          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F        = 16} , self = 93 , parent = Nothing , duration = 0.174420908000 , status
| | | | | F        = Fail , start = 2025-09-03 13:31:05.762186746 UTC , finish = 2025-09-03
| | | | | F        13:31:05.936607654 UTC , thread_cap_info = ("ThreadId 143", 2, False)}
| | | | | F        
| | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F      = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | F      = 4 , total_length = 16} , self = 97 , parent = Nothing , duration = 0.356905857000
| | | | | | F      , status = Fail , start = 2025-09-03 13:31:05.811408363 UTC , finish =
| | | | | | F      2025-09-03 13:31:06.16831422 UTC , thread_cap_info = ("ThreadId 148", 2,
| | | | | | F      False)}
| | | | | | F      
S | | | | | |      
  | E | | | |      
F |   | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F |   | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
F |   | | | |      = 78} , self = 95 , parent = Nothing , duration = 0.240601821000 , status
F |   | | | |      = Fail , start = 2025-09-03 13:31:05.851841566 UTC , finish = 2025-09-03
F |   | | | |      13:31:06.092443387 UTC , thread_cap_info = ("ThreadId 155", 1, False)}
F |   | | | |      
| | F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | F | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | F | | | |      = 78} , self = 96 , parent = Nothing , duration = 0.239504299000 , status
| | F | | | |      = Fail , start = 2025-09-03 13:31:05.867092236 UTC , finish = 2025-09-03
| | F | | | |      13:31:06.106596535 UTC , thread_cap_info = ("ThreadId 154", 1, False)}
| | F | | | |      
| | | | | F |      
| | | | | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | S |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | S |      = 4 , total_length = 16} , self = 101 , parent = Nothing , duration = 0.376772869000
| | | | | S |      , status = Success , start = 2025-09-03 13:31:05.936645142 UTC , finish
| | | | | S |      = 2025-09-03 13:31:06.313418011 UTC , thread_cap_info = ("ThreadId 156",
| | | | | S |      2, False)}
| | | | | S |      
| F | | | | |      
| E | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E | | | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| E | | | | |      = 4 , total_length = 16} , self = 100 , parent = Nothing , duration = 0.242585880000
| E | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:31:06.049874543
| E | | | | |      UTC , finish = 2025-09-03 13:31:06.292460423 UTC , thread_cap_info = ("ThreadId
| E | | | | |      158", 2, False)}
| E | | | | |      
F | | | | | |      
  | F | | | |      
  |   | | | F      
E |   | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |   | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |   | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |   | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
E |   | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
E |   | | |        = 4 , total_length = 16} , self = 107 , parent = Nothing , duration = 0.151685846000
E |   | | |        , status = Except "AsyncCancelled" , start = 2025-09-03 13:31:06.168393271
E |   | | |        UTC , finish = 2025-09-03 13:31:06.320079117 UTC , thread_cap_info = ("ThreadId
E |   | | |        168", 2, False)}
E |   | | |        
| |   S | |        
| E     | |        
|       | S        
|       S          
E                  
