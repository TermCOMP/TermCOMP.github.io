last 5536 length 29830
CNF 5536 vars 29830 clauses
last 6730 length 45679
CNF 6730 vars 45679 clauses
last 675 length 2776
last 710 length 2901
last 742 length 2985
last 761 length 3143
CNF 710 vars 2901 clauses
CNF 742 vars 2985 clauses
CNF 675 vars 2776 clauses
CNF 761 vars 3143 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2651, clauses: 9459
last 2651 length 9459
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2744, clauses: 9837
last 2744 length 9837
CNF 2651 vars 9459 clauses
last 12690 length 74331
last 13212 length 64031
CNF 12690 vars 74331 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2651, clauses: 9459, status: Unsatisfied, time: 0.108312589s
CNF 2744 vars 9837 clauses
CNF 13212 vars 64031 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8930, clauses: 37197
last 8930 length 37197
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2744, clauses: 9837, status: Unsatisfied, time: 0.367384875s
last 16344 length 79342
CNF 8930 vars 37197 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5661, clauses: 22620
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9512, clauses: 39689
last 12022 length 71458
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5995, clauses: 24078
CNF 16344 vars 79342 clauses
last 9512 length 39689
last 5661 length 22620
CNF 12022 vars 71458 clauses
last 5995 length 24078
CNF 5661 vars 22620 clauses
CNF 9512 vars 39689 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20327, clauses: 80634
CNF 5995 vars 24078 clauses
[Info] pool sizes (success) 77173 seen 26782 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8930, clauses: 37197, status: Unsatisfied, time: 0.552746014s
[Info] pool sizes (success) 91004 seen 23627 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 20327 length 80634
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18863, clauses: 73893
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       looping derivation
from
  [a, c, a, b, a, a, b, c, c]
to
  [b, b, a, c, a, b, a, a, b, c, c, c]
via 13 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, b, a, c, a] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, b, c] -> [] {- Input 3 -}
reason
  Nontermination
    Derive   { from = [a, c, a, b, a, a, b, c, c], via = [(Step   { rule = 1, position = 2}, [a, c, b, b, a, c, a, a, a, b, c, c]), (Step   { rule = 0, position = 4}, [a, c, b, b, c, a, a, a, b, c, c]), (Step   { rule = 2, position = 2}, [a, c, b, c, a, a, a, b, c, c]), (Step   { rule = 3, position = 1}, [a, a, a, a, b, c, c]), (Step   { rule = 1, position = 3}, [a, a, a, b, b, a, c, a, c, c]), (Step   { rule = 0, position = 7}, [a, a, a, b, b, a, c, c, c]), (Step   { rule = 0, position = 5}, [a, a, a, b, b, c, c, c]), (Step   { rule = 1, position = 2}, [a, a, b, b, a, c, a, b, c, c, c]), (Step   { rule = 0, position = 4}, [a, a, b, b, c, a, b, c, c, c]), (Step   { rule = 1, position = 1}, [a, b, b, a, c, a, b, c, a, b, c, c, c]), (Step   { rule = 0, position = 5}, [a, b, b, a, c, b, c, a, b, c, c, c]), (Step   { rule = 3, position = 4}, [a, b, b, a, a, b, c, c, c]), (Step   { rule = 1, position = 0}, [b, b, a, c, a, b, a, a, b, c, c, c])], to = [b, b, a, c, a, b, a, a, b, c, c, c]}

**************************************************
skeleton: (4,3)\Loop{13}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))last 18863 length 73893
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.411052357000
  min duration 0.161945535000
  total durat. 2.813064133000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 556}
    , self = 65
    , parent = Nothing
    , duration = 1.411052357000
    , status = Fail
    , start = 2025-09-03 11:10:03.891548939 UTC
    , finish = 2025-09-03 11:10:05.302601296 UTC
    , thread_cap_info = ("ThreadId 71", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.261299024000
  min duration 0.241686933000
  total durat. 2.772116738000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 92
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 484}
    , self = 66
    , parent = Nothing
    , duration = 1.261299024000
    , status = Fail
    , start = 2025-09-03 11:10:04.112193151 UTC
    , finish = 2025-09-03 11:10:05.373492175 UTC
    , thread_cap_info = ("ThreadId 84", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.104925481000
  min duration 1.104925481000
  total durat. 1.104925481000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 47}
    , self = 69
    , parent = Nothing
    , duration = 1.104925481000
    , status = Fail
    , start = 2025-09-03 11:10:04.451969735 UTC
    , finish = 2025-09-03 11:10:05.556895216 UTC
    , thread_cap_info = ("ThreadId 111", 1, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.677371548000
  min duration 1.677371548000
  total durat. 1.677371548000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 68
    , parent = Nothing
    , duration = 1.677371548000
    , status = Success
    , start = 2025-09-03 11:10:03.859078028 UTC
    , finish = 2025-09-03 11:10:05.536449576 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.663897418000
  min duration 1.663897418000
  total durat. 1.663897418000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 67
    , parent = Nothing
    , duration = 1.663897418000
    , status = Success
    , start = 2025-09-03 11:10:03.872522923 UTC
    , finish = 2025-09-03 11:10:05.536420341 UTC
    , thread_cap_info = ("ThreadId 66", 3, False)}
**************************************************
S                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
S                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
S                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
S                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
S                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
S                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
S                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
S                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S                      = 12} , self = 68 , parent = Nothing , duration = 1.677371548000 , status
S                      = Success , start = 2025-09-03 11:10:03.859078028 UTC , finish = 2025-09-03
S                      11:10:05.536449576 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
S                      
| F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                    = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
| F                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
| F                    = 40 , parent = Nothing , duration = 0.229434048000 , status = Fail , start
| F                    = 2025-09-03 11:10:03.859091813 UTC , finish = 2025-09-03 11:10:04.088525861
| F                    UTC , thread_cap_info = ("ThreadId 22", 3, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                  = 180} , self = 43 , parent = Nothing , duration = 0.244852206000 , status
| | F                  = Fail , start = 2025-09-03 11:10:03.86071507 UTC , finish = 2025-09-03
| | F                  11:10:04.105567276 UTC , thread_cap_info = ("ThreadId 61", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 180} , self = 56 , parent = Nothing , duration = 0.306175532000 , status
| | | F                = Fail , start = 2025-09-03 11:10:03.860721433 UTC , finish = 2025-09-03
| | | F                11:10:04.166896965 UTC , thread_cap_info = ("ThreadId 63", 1, False)}
| | | F                
| | | | S              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | S              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | S              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | S              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | S              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | S              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | S              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | S              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | S              = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | | S              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | S              = 12} , self = 67 , parent = Nothing , duration = 1.663897418000 , status
| | | | S              = Success , start = 2025-09-03 11:10:03.872522923 UTC , finish = 2025-09-03
| | | | S              11:10:05.536420341 UTC , thread_cap_info = ("ThreadId 66", 3, False)}
| | | | S              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | F            = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | F            total_length = 556} , self = 65 , parent = Nothing , duration = 1.411052357000
| | | | | F            , status = Fail , start = 2025-09-03 11:10:03.891548939 UTC , finish =
| | | | | F            2025-09-03 11:10:05.302601296 UTC , thread_cap_info = ("ThreadId 71", 2,
| | | | | F            False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | | F          = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | | F          total_length = 556} , self = 61 , parent = Nothing , duration = 0.667960590000
| | | | | | F          , status = Fail , start = 2025-09-03 11:10:03.91562887 UTC , finish = 2025-09-03
| | | | | | F          11:10:04.58358946 UTC , thread_cap_info = ("ThreadId 72", 2, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 92 , num_strict_rules
| | | | | | | F        = 56 , num_top_rules = 56 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | | | F        total_length = 484} , self = 63 , parent = Nothing , duration = 0.782177681000
| | | | | | | F        , status = Fail , start = 2025-09-03 11:10:04.051737534 UTC , finish =
| | | | | | | F        2025-09-03 11:10:04.833915215 UTC , thread_cap_info = ("ThreadId 80", 2,
| | | | | | | F        False)}
| | | | | | | F        
| F | | | | | |        
|   F | | | | |        
| F   | | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 92 , num_strict_rules
| F   | | | | |        = 56 , num_top_rules = 56 , num_weak_rules = 36 , alphabet_size = 16 ,
| F   | | | | |        total_length = 484} , self = 66 , parent = Nothing , duration = 1.261299024000
| F   | | | | |        , status = Fail , start = 2025-09-03 11:10:04.112193151 UTC , finish =
| F   | | | | |        2025-09-03 11:10:05.373492175 UTC , thread_cap_info = ("ThreadId 84", 2,
| F   | | | | |        False)}
| F   | | | | |        
| | F | | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | | | | |        = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | F | | | | |        = 47} , self = 59 , parent = Nothing , duration = 0.241686933000 , status
| | F | | | | |        = Fail , start = 2025-09-03 11:10:04.152126329 UTC , finish = 2025-09-03
| | F | | | | |        11:10:04.393813262 UTC , thread_cap_info = ("ThreadId 100", 1, False)}
| | F | | | | |        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | | | | | | F      = 48} , self = 57 , parent = Nothing , duration = 0.161945535000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 11:10:04.152339996 UTC , finish = 2025-09-03
| | | | | | | | F      11:10:04.314285531 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | | | | | | | F    = 47} , self = 58 , parent = Nothing , duration = 0.213036354000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 11:10:04.159057905 UTC , finish = 2025-09-03
| | | | | | | | | F    11:10:04.372094259 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | | | | | | | | F  = 48} , self = 60 , parent = Nothing , duration = 0.294994659000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 11:10:04.159711538 UTC , finish = 2025-09-03
| | | | | | | | | | F  11:10:04.454706197 UTC , thread_cap_info = ("ThreadId 102", 3, False)}
| | | | | | | | | | F  
| | | F | | | | | | |  
| | |   | | | | F | |  
| | |   | | | |   F |  
| | | F | | | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | |     |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | | F | | | |     |  alphabet_size = 4 , total_length = 48} , self = 64 , parent = Nothing ,
| | | F | | | |     |  duration = 0.521379090000 , status = Fail , start = 2025-09-03 11:10:04.391564349
| | | F | | | |     |  UTC , finish = 2025-09-03 11:10:04.912943439 UTC , thread_cap_info = ("ThreadId
| | | F | | | |     |  109", 3, False)}
| | | F | | | |     |  
| | | | | | | | F   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F   |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | | | | | | | F   |  alphabet_size = 4 , total_length = 47} , self = 62 , parent = Nothing ,
| | | | | | | | F   |  duration = 0.294337872000 , status = Fail , start = 2025-09-03 11:10:04.391566939
| | | | | | | | F   |  UTC , finish = 2025-09-03 11:10:04.685904811 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F   |  110", 1, False)}
| | | | | | | | F   |  
| | F | | | | | |   |  
| | F | | | | | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | | | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | F | | | | | |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | F | | | | | |   |  = 4 , total_length = 47} , self = 69 , parent = Nothing , duration = 1.104925481000
| | F | | | | | |   |  , status = Fail , start = 2025-09-03 11:10:04.451969735 UTC , finish =
| | F | | | | | |   |  2025-09-03 11:10:05.556895216 UTC , thread_cap_info = ("ThreadId 111",
| | F | | | | | |   |  1, False)}
| | F | | | | | |   |  
| | | | | | | | |   F  
| | | | | | F | |      
| | | | | |   | F      
| | | | | |   F        
| | | F | |            
| | |   | F            
| F |   |              
|   |   S              
S   |                  
    F                  
