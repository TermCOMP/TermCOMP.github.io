last 11154 length 71452
CNF 11154 vars 71452 clauses
last 4480 length 25949
CNF 4480 vars 25949 clauses
last 1713 length 7726
last 4500 length 24492
CNF 1713 vars 7726 clauses
last 2338 length 10534
CNF 4500 vars 24492 clauses
CNF 2338 vars 10534 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2256, clauses: 8699
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2061, clauses: 8219
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7434, clauses: 31109
last 2256 length 8699
last 2061 length 8219
last 14603 length 109323
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6266, clauses: 26093
last 10082 length 59305
last 7434 length 31109
CNF 2256 vars 8699 clauses
CNF 2061 vars 8219 clauses
last 6266 length 26093
CNF 10082 vars 59305 clauses
CNF 7434 vars 31109 clauses
CNF 14603 vars 109323 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2256, clauses: 8699, status: Satisfied, time: 0.802568113s
CNF 6266 vars 26093 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2061, clauses: 8219, status: Satisfied, time: 0.90213549s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5877, clauses: 22559
last 5877 length 22559
CNF 5877 vars 22559 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 3 letters       DP
SRS with 6 strict rules and 1 weak rules on 4 letters       EDG
SRS with 3 strict rules and 1 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, c, a, b, c, a, a, a] -> [ a , a , a , a , b , c , a , b , c , a , b , c ] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, c, a, b, c, a, a, a] ->= [ a , a , a , a , b , c , a , b , c , a , b , c ] {- DP Nontop (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [ a# , a , a , a , b , c , a , b , c , a , b , c ] {- DP (Top 0) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [ a# , a , a , b , c , a , b , c , a , b , c ] {- DP (Top 1) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [ a# , a , b , c , a , b , c , a , b , c ] {- DP (Top 2) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [a#, b, c] {- DP (Top 9) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [a#, b, c, a, b, c] {- DP (Top 6) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [ a# , b , c , a , b , c , a , b , c ] {- DP (Top 3) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c, a, b, c, a, a, a] |-> [ a# , b , c , a , b , c , a , b , c ] {- DP (Top 3) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [a#, b, c] {- DP (Top 9) (Input 0) -}
  [a#, b, c, a, b, c, a, a, a] |-> [a#, b, c, a, b, c] {- DP (Top 6) (Input 0) -}
  [a, b, c, a, b, c, a, a, a] ->= [ a , a , a , a , b , c , a , b , c , a , b , c ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 13A 13A 14A - \
        | 13A 13A 14A - |
        | 13A 13A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, b, c, a, b, c, a, a, a] ->= [ a , a , a , a , b , c , a , b , c , a , b , c ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,3)\Deepee(6/1,4)\EDG(3/1,4)\Matrix{\Arctic}{3}(0/1,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5877, clauses: 22559, status: Satisfied, time: 0.101497707s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.922344252000
  min duration 0.521787560000
  total durat. 1.987294173000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.523629329000
  min duration 0.246068755000
  total durat. 5.486393943000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 6
      , alphabet_size = 8
      , total_length = 250}
    , self = 62
    , parent = Nothing
    , duration = 2.302084671000
    , status = Fail
    , start = 2025-09-03 10:46:44.459331512 UTC
    , finish = 2025-09-03 10:46:46.761416183 UTC
    , thread_cap_info = ("ThreadId 79", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 6
      , total_length = 138}
    , self = 69
    , parent = Nothing
    , duration = 2.523629329000
    , status = Fail
    , start = 2025-09-03 10:46:44.436091432 UTC
    , finish = 2025-09-03 10:46:46.959720761 UTC
    , thread_cap_info = ("ThreadId 68", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.404274112000
  min duration 1.263597553000
  total durat. 2.667871665000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 57}
    , self = 70
    , parent = Nothing
    , duration = 1.263597553000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:45.696127938 UTC
    , finish = 2025-09-03 10:46:46.959725491 UTC
    , thread_cap_info = ("ThreadId 111", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 66}
    , self = 67
    , parent = Nothing
    , duration = 1.404274112000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:45.516136199 UTC
    , finish = 2025-09-03 10:46:46.920410311 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.425736930000
  min duration 1.410073603000
  total durat. 2.835810533000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 66}
    , self = 63
    , parent = Nothing
    , duration = 1.410073603000
    , status = Success
    , start = 2025-09-03 10:46:45.408153562 UTC
    , finish = 2025-09-03 10:46:46.818227165 UTC
    , thread_cap_info = ("ThreadId 107", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 57}
    , self = 65
    , parent = Nothing
    , duration = 1.425736930000
    , status = Success
    , start = 2025-09-03 10:46:45.456099276 UTC
    , finish = 2025-09-03 10:46:46.881836206 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F              = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 21} , self
F              = 52 , parent = Nothing , duration = 0.526388935000 , status = Fail , start
F              = 2025-09-03 10:46:44.420607439 UTC , finish = 2025-09-03 10:46:44.946996374
F              UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F              
| F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F            = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| F            = 138} , self = 57 , parent = Nothing , duration = 0.922344252000 , status
| F            = Fail , start = 2025-09-03 10:46:44.422250948 UTC , finish = 2025-09-03
| F            10:46:45.3445952 UTC , thread_cap_info = ("ThreadId 66", 0, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F          = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| | F          = 138} , self = 69 , parent = Nothing , duration = 2.523629329000 , status
| | F          = Fail , start = 2025-09-03 10:46:44.436091432 UTC , finish = 2025-09-03
| | F          10:46:46.959720761 UTC , thread_cap_info = ("ThreadId 68", 0, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F        = 8 , num_top_rules = 8 , num_weak_rules = 6 , alphabet_size = 8 , total_length
| | | F        = 250} , self = 62 , parent = Nothing , duration = 2.302084671000 , status
| | | F        = Fail , start = 2025-09-03 10:46:44.459331512 UTC , finish = 2025-09-03
| | | F        10:46:46.761416183 UTC , thread_cap_info = ("ThreadId 79", 3, False)}
| | | F        
F | | |        
F | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F | | |        = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
F | | |        = 66} , self = 60 , parent = Nothing , duration = 0.543162361000 , status
F | | |        = Fail , start = 2025-09-03 10:46:44.956190719 UTC , finish = 2025-09-03
F | | |        10:46:45.49935308 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
F | | |        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | F      = 66} , self = 58 , parent = Nothing , duration = 0.414611188000 , status
| | | | F      = Fail , start = 2025-09-03 10:46:44.976095868 UTC , finish = 2025-09-03
| | | | F      10:46:45.390707056 UTC , thread_cap_info = ("ThreadId 98", 1, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | F    = 57} , self = 61 , parent = Nothing , duration = 0.521787560000 , status
| | | | | F    = Fail , start = 2025-09-03 10:46:45.156095689 UTC , finish = 2025-09-03
| | | | | F    10:46:45.677883249 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | | | | F    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | F  = 57} , self = 59 , parent = Nothing , duration = 0.246068755000 , status
| | | | | | F  = Fail , start = 2025-09-03 10:46:45.176662888 UTC , finish = 2025-09-03
| | | | | | F  10:46:45.422731643 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | | | F  
| F | | | | |  
|   | | F | |  
| S | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |   | |  = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| S | |   | |  = 4 , total_length = 66} , self = 63 , parent = Nothing , duration = 1.410073603000
| S | |   | |  , status = Success , start = 2025-09-03 10:46:45.408153562 UTC , finish
| S | |   | |  = 2025-09-03 10:46:46.818227165 UTC , thread_cap_info = ("ThreadId 107",
| S | |   | |  1, False)}
| S | |   | |  
| | | |   | F  
| | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | S |    = 4 , total_length = 57} , self = 65 , parent = Nothing , duration = 1.425736930000
| | | | S |    , status = Success , start = 2025-09-03 10:46:45.456099276 UTC , finish
| | | | S |    = 2025-09-03 10:46:46.881836206 UTC , thread_cap_info = ("ThreadId 109",
| | | | S |    1, False)}
| | | | S |    
F | | | | |    
E | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E | | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
E | | | | |    = 4 , total_length = 66} , self = 67 , parent = Nothing , duration = 1.404274112000
E | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:45.516136199
E | | | | |    UTC , finish = 2025-09-03 10:46:46.920410311 UTC , thread_cap_info = ("ThreadId
E | | | | |    110", 1, False)}
E | | | | |    
| | | | | F    
| | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | E    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | E    = 4 , total_length = 57} , self = 70 , parent = Nothing , duration = 1.263597553000
| | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:45.696127938
| | | | | E    UTC , finish = 2025-09-03 10:46:46.959725491 UTC , thread_cap_info = ("ThreadId
| | | | | E    111", 1, False)}
| | | | | E    
| | | F | |    
| S |   | |    
|   |   S |    
E   |     |    
    F     |    
          E    
