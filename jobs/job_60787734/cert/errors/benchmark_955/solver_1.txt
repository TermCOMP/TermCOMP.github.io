last 6339 length 48640
CNF 6339 vars 48640 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4672, clauses: 17059
last 4672 length 17059
CNF 4672 vars 17059 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4672, clauses: 17059, status: Unsatisfied, time: 0.243433366s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18972, clauses: 79945
last 18972 length 79945
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5868, clauses: 22217
last 5868 length 22217
CNF 5868 vars 22217 clauses
CNF 18972 vars 79945 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11480, clauses: 48776
last 11480 length 48776
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5868, clauses: 22217, status: Satisfied, time: 0.570448957s
CNF 11480 vars 48776 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18972, clauses: 79945, status: Unsatisfied, time: 0.847307842s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11480, clauses: 48776, status: Unsatisfied, time: 0.755446462s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7833, clauses: 29703
last 7833 length 29703
CNF 7833 vars 29703 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7833, clauses: 29703, status: Unsatisfied, time: 1.070594117s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14662, clauses: 55182
last 14662 length 55182
CNF 14662 vars 55182 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5549, clauses: 20838
last 5549 length 20838
CNF 5549 vars 20838 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5549, clauses: 20838, status: Satisfied, time: 1.157268038s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34060, clauses: 153278
last 34060 length 153278
CNF 34060 vars 153278 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 56879, clauses: 232761
last 56879 length 232761
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 45728, clauses: 175770
last 45728 length 175770
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5536, clauses: 20365
last 5536 length 20365
CNF 5536 vars 20365 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5536, clauses: 20365, status: Satisfied, time: 0.497513182s
CNF 56879 vars 232761 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 45728 vars 175770 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14662, clauses: 55182, status: Unsatisfied, time: 9.375419584s
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5008, clauses: 18187
last 5008 length 18187
CNF 5008 vars 18187 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5008, clauses: 18187, status: Unsatisfied, time: 0.986848643s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20439, clauses: 86216
last 20439 length 86216
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12349, clauses: 52613
last 12349 length 52613
CNF 20439 vars 86216 clauses
CNF 12349 vars 52613 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20439, clauses: 86216, status: Satisfied, time: 0.89759841s
**************************************************
summary
**************************************************
SRS with 11 rules on 6 letters       weights
SRS with 6 rules on 5 letters       context
SRS with 10 rules on 5 letters       mirror
SRS with 10 rules on 5 letters       DP
SRS with 36 strict rules and 10 weak rules on 7 letters       weights
SRS with 11 strict rules and 10 weak rules on 7 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 3 strict rules and 10 weak rules on 6 letters       EDG
  SRS with 3 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 10 weak rules on 6 letters       EDG
  SRS with 2 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 10 weak rules on 6 letters       EDG
  SRS with 1 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 10 weak rules on 5 letters       EDG

  2 SRS with 1 strict rules and 10 weak rules on 6 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [thrice, 0] -> [p, s, p, p, p, s, s, s, 0, p, s, p, s] {- Input 0 -}
  [thrice, s] -> [ p , p , s , s , half , p , p , s , s , p , s , sixtimes , p , s , p , p , s , s ] {- Input 1 -}
  [half, 0] -> [p, p, s, s, p, s, 0, p, s, s, s, s] {- Input 2 -}
  [half, s] -> [ p , s , p , p , s , s , p , p , s , s , half , p , p , s , s , p , s ] {- Input 3 -}
  [half, s, s] -> [ p , s , p , s , s , p , p , s , s , half , p , p , s , s , p , s ] {- Input 4 -}
  [sixtimes, 0] -> [p, s, p, s, 0, s, s, s, s, s, p, s, p, s] {- Input 5 -}
  [sixtimes, s] -> [ p , p , s , s , s , s , s , s , s , p , p , s , p , s , s , s , sixtimes , p , s , p , p , p , s , s , s ] {- Input 6 -}
  [p, p, s] -> [p] {- Input 7 -}
  [p, s] -> [] {- Input 8 -}
  [p, 0] -> [0, s, s, s, s] {- Input 9 -}
  [0] -> [] {- Input 10 -}
reason
  (s, 0/1)
  (p, 0/1)
  (sixtimes, 1/1)
  (thrice, 3/1)
  (0, 3/1)
  (half, 1/1)
   property Termination
has value Just True
for SRS
  [half, s] -> [ p , s , p , p , s , s , p , p , s , s , half , p , p , s , s , p , s ] {- Input 3 -}
  [half, s, s] -> [ p , s , p , s , s , p , p , s , s , half , p , p , s , s , p , s ] {- Input 4 -}
  [sixtimes, s] -> [ p , p , s , s , s , s , s , s , s , p , p , s , p , s , s , s , sixtimes , p , s , p , p , p , s , s , s ] {- Input 6 -}
  [p, p, s] -> [p] {- Input 7 -}
  [p, s] -> [] {- Input 8 -}
  [p, 0] -> [0, s, s, s, s] {- Input 9 -}
reason
  context
   property Termination
has value Just True
for SRS
  [half, s] -> [ p , s , p , p , s , s , p , p , s , s , half , p , p , s , s , p , s ] {- Input 3 -}
  [half, s, s] -> [ p , s , p , s , s , p , p , s , s , half , p , p , s , s , p , s ] {- Input 4 -}
  [sixtimes, s] -> [ p , p , s , s , s , s , s , s , s , p , p , s , p , s , s , s , sixtimes , p , s , p , p , p , s , s , s ] {- Input 6 -}
  [p, p, s] -> [p] {- Input 7 -}
  [s, p, s] -> [s] {- Input 8 -}
  [p, p, s] -> [p] {- Input 8 -}
  [sixtimes, p, s] -> [sixtimes] {- Input 8 -}
  [0, p, s] -> [0] {- Input 8 -}
  [half, p, s] -> [half] {- Input 8 -}
  [p, 0] -> [0, s, s, s, s] {- Input 9 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [s, half] -> [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- Mirror (Input 3) -}
  [s, s, half] -> [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- Mirror (Input 4) -}
  [s, sixtimes] -> [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- Mirror (Input 6) -}
  [s, p, p] -> [p] {- Mirror (Input 7) -}
  [s, p, s] -> [s] {- Mirror (Input 8) -}
  [s, p, p] -> [p] {- Mirror (Input 8) -}
  [s, p, sixtimes] -> [sixtimes] {- Mirror (Input 8) -}
  [s, p, 0] -> [0] {- Mirror (Input 8) -}
  [s, p, half] -> [half] {- Mirror (Input 8) -}
  [0, p] -> [s, s, s, s, 0] {- Mirror (Input 9) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
  [s#, s, half] |-> [s#, s, p, s, p] {- DP (Top 11) (Mirror (Input 4)) -}
  [s#, s, half] |-> [ s# , s , p , p , s , s , p , s , p ] {- DP (Top 7) (Mirror (Input 4)) -}
  [s#, s, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 2) (Mirror (Input 4)) -}
  [s#, s, half] |-> [s#, p] {- DP (Top 14) (Mirror (Input 4)) -}
  [s#, s, half] |-> [ s# , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 0) (Mirror (Input 4)) -}
  [s#, s, half] |-> [s#, p, s, p] {- DP (Top 12) (Mirror (Input 4)) -}
  [s#, s, half] |-> [s#, p, p, s, s, p, s, p] {- DP (Top 8) (Mirror (Input 4)) -}
  [s#, s, half] |-> [ s# , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 3) (Mirror (Input 4)) -}
  [s#, sixtimes] |-> [ s# , s , s , s , s , s , s , p , p ] {- DP (Top 16) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , s , s , s , s , p , p ] {- DP (Top 17) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [s#, s, s, s, s, p, p] {- DP (Top 18) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [s#, s, s, s, p, p] {- DP (Top 19) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 9) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [s#, s, s, p, p] {- DP (Top 20) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 10) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [s#, s, p, p] {- DP (Top 21) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 1) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 11) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [s#, p, p] {- DP (Top 22) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 13) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 2) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 6) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , s , s , p , p , s , p ] {- DP (Top 7) (Mirror (Input 3)) -}
  [s#, half] |-> [s#, s, p, p, s, p] {- DP (Top 11) (Mirror (Input 3)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s#, half] |-> [s#, p] {- DP (Top 15) (Mirror (Input 3)) -}
  [s#, half] |-> [ s# , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 0) (Mirror (Input 3)) -}
  [s#, half] |-> [s#, p, p, s, s, p, p, s, p] {- DP (Top 8) (Mirror (Input 3)) -}
  [s#, half] |-> [s#, p, p, s, p] {- DP (Top 12) (Mirror (Input 3)) -}
  [s#, half] |-> [ s# , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 3) (Mirror (Input 3)) -}
  [0#, p] |-> [s#, s, s, s, 0] {- DP (Top 0) (Mirror (Input 9)) -}
  [0#, p] |-> [s#, s, s, 0] {- DP (Top 1) (Mirror (Input 9)) -}
  [0#, p] |-> [s#, s, 0] {- DP (Top 2) (Mirror (Input 9)) -}
  [0#, p] |-> [s#, 0] {- DP (Top 3) (Mirror (Input 9)) -}
  [0#, p] |-> [0#] {- DP (Top 4) (Mirror (Input 9)) -}
reason
  (s, 0/1)
  (p, 0/1)
  (sixtimes, 1/1)
  (0, 0/1)
  (half, 1/1)
  (s#, 0/1)
  (0#, 1/1)
   property Termination
has value Just True
for SRS
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
  [s#, s, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 2) (Mirror (Input 4)) -}
  [s#, s, half] |-> [ s# , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 0) (Mirror (Input 4)) -}
  [s#, s, half] |-> [ s# , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 3) (Mirror (Input 4)) -}
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 1) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 2) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 6) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s#, half] |-> [ s# , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 0) (Mirror (Input 3)) -}
  [s#, half] |-> [ s# , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 3) (Mirror (Input 3)) -}
  [0#, p] |-> [0#] {- DP (Top 4) (Mirror (Input 9)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, s, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP (Top 2) (Mirror (Input 4)) -}
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 1) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  ( s
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( sixtimes
  , Wk  / 18A 18A 18A - \
        | 18A 18A 18A - |
        | 18A 18A 18A - |
        \ -   -   -   - / )
  ( 0
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
  ( half
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( s#
  , Wk  / 4A 4A 6A - \
        | 4A 4A 6A - |
        | 4A 4A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 1) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, sixtimes] |-> [ s# , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 1) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  ( s
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( sixtimes
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( 0
  , Wk  / 15A 15A 15A - \
        | 15A 15A 15A - |
        | 15A 15A 15A - |
        \ -   -   -   - / )
  ( half
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( s#
  , Wk  / 3A 4A 6A - \
        | 3A 4A 6A - |
        | 3A 4A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s#, half] |-> [ s# , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  ( s
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( sixtimes
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
  ( 0
  , Wk  / 18A 18A 18A - \
        | 18A 18A 18A - |
        | 18A 18A 18A - |
        \ -   -   -   - / )
  ( half
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 9A 9A 9A - |
        \ -  -  -  - / )
  ( s#
  , Wk  / 10A 10A 13A - \
        | 10A 10A 13A - |
        | 10A 10A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, sixtimes] |-> [ s# , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP (Top 0) (Mirror (Input 6)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  ( s
  , Wk  / 0A -  -  \
        | -  1A -  |
        \ -  -  0A / )
  ( p
  , Wk  / 0A -   -2A \
        | -  -1A -   |
        \ -  -   0A  / )
  ( sixtimes
  , Wk  / 0A - -1A \
        | 1A - 0A  |
        \ -  - 0A  / )
  ( 0
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( half
  , Wk  / -1A - 2A \
        | -   - 0A |
        \ -   - 0A / )
  ( s#
  , Wk  / 1A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 4) (Mirror (Input 9)) -}
  [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
  [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
  [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
  [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
  [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
reason
  remove un-usable
    SRS
      [s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , p , s , p ] {- DP Nontop (Mirror (Input 3)) -}
      [s, s, half] ->= [ s , p , s , s , p , p , half , s , s , p , p , s , s , p , s , p ] {- DP Nontop (Mirror (Input 4)) -}
      [s, sixtimes] ->= [ s , s , s , p , p , p , s , p , sixtimes , s , s , s , p , s , p , p , s , s , s , s , s , s , s , p , p ] {- DP Nontop (Mirror (Input 6)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
      [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 8)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 8)) -}
      [s, p, sixtimes] ->= [sixtimes] {- DP Nontop (Mirror (Input 8)) -}
      [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 8)) -}
      [s, p, half] ->= [half] {- DP Nontop (Mirror (Input 8)) -}
      [0, p] ->= [s, s, s, s, 0] {- DP Nontop (Mirror (Input 9)) -}
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 4) (Mirror (Input 9)) -}
reason
  (p, 1/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (11,6)\Weight(6,5)\Context\Mirror(10,5)\Deepee(36/10,7)\Weight(11/10,7)\EDG[(4/10,6)\Matrix{\Arctic}{3}\EDG(3/10,6)\Matrix{\Arctic}{3}\EDG(2/10,6)\Matrix{\Arctic}{3}\EDG(1/10,6)\Matrix{\ArcticBZ}{3}(0/10,5)\EDG[],(1/10,6)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42708, clauses: 201323
last 42708 length 201323
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 10
  max duration 1.064131610000
  min duration 0.000003317000
  total durat. 1.971456001000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 381
      , num_strict_rules = 258
      , num_top_rules = 258
      , num_weak_rules = 123
      , alphabet_size = 37
      , total_length = 6390}
    , self = 54
    , parent = Nothing
    , duration = 1.064131610000
    , status = Success
    , start = 2025-09-03 13:36:54.784254839 UTC
    , finish = 2025-09-03 13:36:55.848386449 UTC
    , thread_cap_info = ("ThreadId 89", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.091107451000
  min duration 3.031077893000
  total durat. 18.355433051000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 166}
    , self = 80
    , parent = Nothing
    , duration = 3.031077893000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:58.864264023 UTC
    , finish = 2025-09-03 13:37:01.895341916 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 150
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 99
      , alphabet_size = 21
      , total_length = 2780}
    , self = 76
    , parent = Nothing
    , duration = 3.044191713000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:56.264254942 UTC
    , finish = 2025-09-03 13:36:59.308446655 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 216
      , num_strict_rules = 116
      , num_top_rules = 116
      , num_weak_rules = 100
      , alphabet_size = 25
      , total_length = 3464}
    , self = 74
    , parent = Nothing
    , duration = 3.045449255000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:56.025219622 UTC
    , finish = 2025-09-03 13:36:59.070668877 UTC
    , thread_cap_info = ("ThreadId 101", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 123}
    , self = 103
    , parent = Nothing
    , duration = 3.067883020000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:08.453491645 UTC
    , finish = 2025-09-03 13:37:11.521374665 UTC
    , thread_cap_info = ("ThreadId 167", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 140}
    , self = 89
    , parent = Nothing
    , duration = 3.075723719000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:03.885695079 UTC
    , finish = 2025-09-03 13:37:06.961418798 UTC
    , thread_cap_info = ("ThreadId 148", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 183}
    , self = 61
    , parent = Nothing
    , duration = 3.091107451000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:54.43317114 UTC
    , finish = 2025-09-03 13:36:57.524278591 UTC
    , thread_cap_info = ("ThreadId 57", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.157516991000
  min duration 3.157516991000
  total durat. 3.157516991000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 123
      , num_strict_rules = 123
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 22
      , total_length = 2027}
    , self = 63
    , parent = Nothing
    , duration = 3.157516991000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:54.486747491 UTC
    , finish = 2025-09-03 13:36:57.644264482 UTC
    , thread_cap_info = ("ThreadId 74", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.093341973000
  min duration 3.045007629000
  total durat. 21.455617603000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 150
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 99
      , alphabet_size = 21
      , total_length = 2780}
    , self = 77
    , parent = Nothing
    , duration = 3.045007629000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:56.286145455 UTC
    , finish = 2025-09-03 13:36:59.331153084 UTC
    , thread_cap_info = ("ThreadId 106", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 140}
    , self = 90
    , parent = Nothing
    , duration = 3.048636421000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:03.924273846 UTC
    , finish = 2025-09-03 13:37:06.972910267 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 166}
    , self = 81
    , parent = Nothing
    , duration = 3.053361963000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:58.892446523 UTC
    , finish = 2025-09-03 13:37:01.945808486 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 216
      , num_strict_rules = 116
      , num_top_rules = 116
      , num_weak_rules = 100
      , alphabet_size = 25
      , total_length = 3464}
    , self = 75
    , parent = Nothing
    , duration = 3.056304888000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:56.048194615 UTC
    , finish = 2025-09-03 13:36:59.104499503 UTC
    , thread_cap_info = ("ThreadId 102", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 183}
    , self = 62
    , parent = Nothing
    , duration = 3.071735756000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:54.452556489 UTC
    , finish = 2025-09-03 13:36:57.524292245 UTC
    , thread_cap_info = ("ThreadId 58", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 64
    , parent = Nothing
    , duration = 3.087228973000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:54.577043597 UTC
    , finish = 2025-09-03 13:36:57.66427257 UTC
    , thread_cap_info = ("ThreadId 84", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 123}
    , self = 102
    , parent = Nothing
    , duration = 3.093341973000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:08.428008481 UTC
    , finish = 2025-09-03 13:37:11.521350454 UTC
    , thread_cap_info = ("ThreadId 168", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.177549630000
  min duration 3.177549630000
  total durat. 3.177549630000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 123
      , num_strict_rules = 123
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 22
      , total_length = 2027}
    , self = 65
    , parent = Nothing
    , duration = 3.177549630000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:54.486754695 UTC
    , finish = 2025-09-03 13:36:57.664304325 UTC
    , thread_cap_info = ("ThreadId 76", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.463265070000
  min duration 4.463265070000
  total durat. 4.463265070000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 123}
    , self = 107
    , parent = Nothing
    , duration = 4.463265070000
    , status = Success
    , start = 2025-09-03 13:37:11.608703214 UTC
    , finish = 2025-09-03 13:37:16.071968284 UTC
    , thread_cap_info = ("ThreadId 177", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.509974033000
  min duration 2.509974033000
  total durat. 2.509974033000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 70
    , parent = Nothing
    , duration = 2.509974033000
    , status = Fail
    , start = 2025-09-03 13:36:56.264271448 UTC
    , finish = 2025-09-03 13:36:58.774245481 UTC
    , thread_cap_info = ("ThreadId 107", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.058211836000
  min duration 9.032698989000
  total durat. 18.090910825000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 150
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 99
      , alphabet_size = 21
      , total_length = 2780}
    , self = 93
    , parent = Nothing
    , duration = 9.032698989000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:59.373547016 UTC
    , finish = 2025-09-03 13:37:08.406246005 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 216
      , num_strict_rules = 116
      , num_top_rules = 116
      , num_weak_rules = 100
      , alphabet_size = 25
      , total_length = 3464}
    , self = 91
    , parent = Nothing
    , duration = 9.058211836000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:59.176352058 UTC
    , finish = 2025-09-03 13:37:08.234563894 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.760618680000
  min duration 1.040367006000
  total durat. 4.210894106000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 183}
    , self = 68
    , parent = Nothing
    , duration = 1.040367006000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:57.644378363 UTC
    , finish = 2025-09-03 13:36:58.684745369 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 140}
    , self = 95
    , parent = Nothing
    , duration = 1.409908420000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:07.017779064 UTC
    , finish = 2025-09-03 13:37:08.427687484 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 166}
    , self = 84
    , parent = Nothing
    , duration = 1.760618680000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:02.027186548 UTC
    , finish = 2025-09-03 13:37:03.787805228 UTC
    , thread_cap_info = ("ThreadId 142", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.506447761000
  min duration 1.506447761000
  total durat. 1.506447761000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 78
    , parent = Nothing
    , duration = 1.506447761000
    , status = Fail
    , start = 2025-09-03 13:36:57.824791586 UTC
    , finish = 2025-09-03 13:36:59.331239347 UTC
    , thread_cap_info = ("ThreadId 116", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.847018153000
  min duration 2.847018153000
  total durat. 2.847018153000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 123}
    , self = 109
    , parent = Nothing
    , duration = 2.847018153000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:13.4042714 UTC
    , finish = 2025-09-03 13:37:16.251289553 UTC
    , thread_cap_info = ("ThreadId 180", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 12.134465670000
  min duration 12.134465670000
  total durat. 12.134465670000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 104
    , parent = Nothing
    , duration = 12.134465670000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:59.38711839 UTC
    , finish = 2025-09-03 13:37:11.52158406 UTC
    , thread_cap_info = ("ThreadId 136", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.739755355000
  min duration 0.956002380000
  total durat. 4.117665684000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 140}
    , self = 92
    , parent = Nothing
    , duration = 1.421907949000
    , status = Success
    , start = 2025-09-03 13:37:06.972965052 UTC
    , finish = 2025-09-03 13:37:08.394873001 UTC
    , thread_cap_info = ("ThreadId 153", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 166}
    , self = 82
    , parent = Nothing
    , duration = 1.739755355000
    , status = Success
    , start = 2025-09-03 13:37:01.966651084 UTC
    , finish = 2025-09-03 13:37:03.706406439 UTC
    , thread_cap_info = ("ThreadId 140", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 12.245391621000
  min duration 0.580570080000
  total durat. 24.570433040000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 123}
    , self = 106
    , parent = Nothing
    , duration = 1.729763763000
    , status = Fail
    , start = 2025-09-03 13:37:11.587139109 UTC
    , finish = 2025-09-03 13:37:13.316902872 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 216
      , num_strict_rules = 116
      , num_top_rules = 116
      , num_weak_rules = 100
      , alphabet_size = 25
      , total_length = 3464}
    , self = 100
    , parent = Nothing
    , duration = 10.014707576000
    , status = Fail
    , start = 2025-09-03 13:36:59.082468102 UTC
    , finish = 2025-09-03 13:37:09.097175678 UTC
    , thread_cap_info = ("ThreadId 129", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 150
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 99
      , alphabet_size = 21
      , total_length = 2780}
    , self = 105
    , parent = Nothing
    , duration = 12.245391621000
    , status = Fail
    , start = 2025-09-03 13:36:59.351037268 UTC
    , finish = 2025-09-03 13:37:11.596428889 UTC
    , thread_cap_info = ("ThreadId 133", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.631714641000
  min duration 1.631714641000
  total durat. 1.631714641000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 79
    , parent = Nothing
    , duration = 1.631714641000
    , status = Fail
    , start = 2025-09-03 13:36:58.785955662 UTC
    , finish = 2025-09-03 13:37:00.417670303 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 10.839992203000
  min duration 10.839992203000
  total durat. 10.839992203000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 101
    , parent = Nothing
    , duration = 10.839992203000
    , status = Fail
    , start = 2025-09-03 13:37:00.504262931 UTC
    , finish = 2025-09-03 13:37:11.344255134 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
**************************************************
E                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
E                    = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size = 6 , total_length
E                    = 183} , self = 61 , parent = Nothing , duration = 3.091107451000 , status
E                    = Except "<<timeout>>" , start = 2025-09-03 13:36:54.43317114 UTC , finish
E                    = 2025-09-03 13:36:57.524278591 UTC , thread_cap_info = ("ThreadId 57",
E                    1, False)}
E                    
| E                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| E                  = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| E                  = 183} , self = 62 , parent = Nothing , duration = 3.071735756000 , status
| E                  = Except "<<timeout>>" , start = 2025-09-03 13:36:54.452556489 UTC , finish
| E                  = 2025-09-03 13:36:57.524292245 UTC , thread_cap_info = ("ThreadId 58",
| E                  1, False)}
| E                  
| | E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                = False\n , verbose = False}" , input_size = Size { num_rules = 123 , num_strict_rules
| | E                = 123 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 22 , total_length
| | E                = 2027} , self = 63 , parent = Nothing , duration = 3.157516991000 , status
| | E                = Except "AsyncCancelled" , start = 2025-09-03 13:36:54.486747491 UTC ,
| | E                finish = 2025-09-03 13:36:57.644264482 UTC , thread_cap_info = ("ThreadId
| | E                74", 3, False)}
| | E                
| | | E              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 123 , num_strict_rules
| | | E              = 123 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 22 , total_length
| | | E              = 2027} , self = 65 , parent = Nothing , duration = 3.177549630000 , status
| | | E              = Except "AsyncCancelled" , start = 2025-09-03 13:36:54.486754695 UTC ,
| | | E              finish = 2025-09-03 13:36:57.664304325 UTC , thread_cap_info = ("ThreadId
| | | E              76", 3, False)}
| | | E              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F            = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | F            = 107} , self = 53 , parent = Nothing , duration = 0.943139684000 , status
| | | | F            = Fail , start = 2025-09-03 13:36:54.544398988 UTC , finish = 2025-09-03
| | | | F            13:36:55.487538672 UTC , thread_cap_info = ("ThreadId 83", 1, False)}
| | | | F            
| | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | E          = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | E          = 107} , self = 64 , parent = Nothing , duration = 3.087228973000 , status
| | | | | E          = Except "<<timeout>>" , start = 2025-09-03 13:36:54.577043597 UTC , finish
| | | | | E          = 2025-09-03 13:36:57.66427257 UTC , thread_cap_info = ("ThreadId 84",
| | | | | E          1, False)}
| | | | | E          
| | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S        = Size { num_rules = 850 , num_strict_rules = 727 , num_top_rules = 727
| | | | | | S        , num_weak_rules = 123 , alphabet_size = 37 , total_length = 12275} , self
| | | | | | S        = 51 , parent = Nothing , duration = 0.153256782000 , status = Success
| | | | | | S        , start = 2025-09-03 13:36:54.604246901 UTC , finish = 2025-09-03 13:36:54.757503683
| | | | | | S        UTC , thread_cap_info = ("ThreadId 93", 0, False)}
| | | | | | S        
| | | | | | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | S      = Size { num_rules = 928 , num_strict_rules = 805 , num_top_rules = 805
| | | | | | | S      , num_weak_rules = 123 , alphabet_size = 28 , total_length = 13957} , self
| | | | | | | S      = 52 , parent = Nothing , duration = 0.508749474000 , status = Success
| | | | | | | S      , start = 2025-09-03 13:36:54.644249105 UTC , finish = 2025-09-03 13:36:55.152998579
| | | | | | | S      UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | | | | | S      
| | | | | | S |      
| | | | | | S |      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S |      verbose = False}" , input_size = Size { num_rules = 381 , num_strict_rules
| | | | | | S |      = 258 , num_top_rules = 258 , num_weak_rules = 123 , alphabet_size = 37
| | | | | | S |      , total_length = 6390} , self = 54 , parent = Nothing , duration = 1.064131610000
| | | | | | S |      , status = Success , start = 2025-09-03 13:36:54.784254839 UTC , finish
| | | | | | S |      = 2025-09-03 13:36:55.848386449 UTC , thread_cap_info = ("ThreadId 89",
| | | | | | S |      0, False)}
| | | | | | S |      
| | | | | | | S      
| | | | | | | S      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | S      verbose = False}" , input_size = Size { num_rules = 274 , num_strict_rules
| | | | | | | S      = 151 , num_top_rules = 151 , num_weak_rules = 123 , alphabet_size = 28
| | | | | | | S      , total_length = 5348} , self = 57 , parent = Nothing , duration = 0.884869669000
| | | | | | | S      , status = Success , start = 2025-09-03 13:36:55.18425799 UTC , finish
| | | | | | | S      = 2025-09-03 13:36:56.069127659 UTC , thread_cap_info = ("ThreadId 91",
| | | | | | | S      0, False)}
| | | | | | | S      
| | | | F | | |      
| | | | F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |      = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
| | | | F | | |      alphabet_size = 6 , total_length = 107} , self = 59 , parent = Nothing
| | | | F | | |      , duration = 0.580570080000 , status = Fail , start = 2025-09-03 13:36:55.589891213
| | | | F | | |      UTC , finish = 2025-09-03 13:36:56.170461293 UTC , thread_cap_info = ("ThreadId
| | | | F | | |      97", 1, False)}
| | | | F | | |      
| | | | | | S |      
| | | | | | E |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E |      = False\n , verbose = False}" , input_size = Size { num_rules = 216 , num_strict_rules
| | | | | | E |      = 116 , num_top_rules = 116 , num_weak_rules = 100 , alphabet_size = 25
| | | | | | E |      , total_length = 3464} , self = 74 , parent = Nothing , duration = 3.045449255000
| | | | | | E |      , status = Except "<<timeout>>" , start = 2025-09-03 13:36:56.025219622
| | | | | | E |      UTC , finish = 2025-09-03 13:36:59.070668877 UTC , thread_cap_info = ("ThreadId
| | | | | | E |      101", 0, False)}
| | | | | | E |      
| | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 216 , num_strict_rules
| | | | | | | | E    = 116 , num_top_rules = 116 , num_weak_rules = 100 , alphabet_size = 25
| | | | | | | | E    , total_length = 3464} , self = 75 , parent = Nothing , duration = 3.056304888000
| | | | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-03 13:36:56.048194615
| | | | | | | | E    UTC , finish = 2025-09-03 13:36:59.104499503 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E    102", 0, False)}
| | | | | | | | E    
| | | | | | | S |    
| | | | F | |   |    
| | | | E | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 150 , num_strict_rules
| | | | E | |   |    = 51 , num_top_rules = 51 , num_weak_rules = 99 , alphabet_size = 21 ,
| | | | E | |   |    total_length = 2780} , self = 76 , parent = Nothing , duration = 3.044191713000
| | | | E | |   |    , status = Except "<<timeout>>" , start = 2025-09-03 13:36:56.264254942
| | | | E | |   |    UTC , finish = 2025-09-03 13:36:59.308446655 UTC , thread_cap_info = ("ThreadId
| | | | E | |   |    105", 0, False)}
| | | | E | |   |    
| | | | | | | F |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | F |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
| | | | | | | F |    = 6 , total_length = 107} , self = 70 , parent = Nothing , duration = 2.509974033000
| | | | | | | F |    , status = Fail , start = 2025-09-03 13:36:56.264271448 UTC , finish =
| | | | | | | F |    2025-09-03 13:36:58.774245481 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | F |    1, False)}
| | | | | | | F |    
| | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 150 , num_strict_rules
| | | | | | | | | E  = 51 , num_top_rules = 51 , num_weak_rules = 99 , alphabet_size = 21 ,
| | | | | | | | | E  total_length = 2780} , self = 77 , parent = Nothing , duration = 3.045007629000
| | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 13:36:56.286145455
| | | | | | | | | E  UTC , finish = 2025-09-03 13:36:59.331153084 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  106", 0, False)}
| | | | | | | | | E  
E | | | | | | | | |  
  E | | | | | | | |  
S   | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | | | | | | |  = 14 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 10 ,
S   | | | | | | | |  alphabet_size = 6 , total_length = 183} , self = 66 , parent = Nothing
S   | | | | | | | |  , duration = 0.956002380000 , status = Success , start = 2025-09-03 13:36:57.626487806
S   | | | | | | | |  UTC , finish = 2025-09-03 13:36:58.582490186 UTC , thread_cap_info = ("ThreadId
S   | | | | | | | |  112", 1, False)}
S   | | | | | | | |  
|   E | | | | | | |  
| E   | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| E   | | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size
| E   | | | | | | |  = 6 , total_length = 183} , self = 68 , parent = Nothing , duration = 1.040367006000
| E   | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:36:57.644378363
| E   | | | | | | |  UTC , finish = 2025-09-03 13:36:58.684745369 UTC , thread_cap_info = ("ThreadId
| E   | | | | | | |  113", 1, False)}
| E   | | | | | | |  
| |   | | E | | | |  
| |   E |   | | | |  
| | F   |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F   |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F   |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F   |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F   |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F   |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | F   |   | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
| | F   |   | | | |  = 6 , total_length = 107} , self = 78 , parent = Nothing , duration = 1.506447761000
| | F   |   | | | |  , status = Fail , start = 2025-09-03 13:36:57.824791586 UTC , finish =
| | F   |   | | | |  2025-09-03 13:36:59.331239347 UTC , thread_cap_info = ("ThreadId 116",
| | F   |   | | | |  1, False)}
| | F   |   | | | |  
S | |   |   | | | |  
  E |   |   | | | |  
    |   |   | F | |  
F   |   |   |   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F   |   |   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |   |   |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |   |   |   | |  = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
F   |   |   |   | |  alphabet_size = 6 , total_length = 107} , self = 79 , parent = Nothing
F   |   |   |   | |  , duration = 1.631714641000 , status = Fail , start = 2025-09-03 13:36:58.785955662
F   |   |   |   | |  UTC , finish = 2025-09-03 13:37:00.417670303 UTC , thread_cap_info = ("ThreadId
F   |   |   |   | |  122", 1, False)}
F   |   |   |   | |  
| E |   |   |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E |   |   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E |   |   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| E |   |   |   | |  = 3 , num_top_rules = 3 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| E |   |   |   | |  = 166} , self = 80 , parent = Nothing , duration = 3.031077893000 , status
| E |   |   |   | |  = Except "<<timeout>>" , start = 2025-09-03 13:36:58.864264023 UTC , finish
| E |   |   |   | |  = 2025-09-03 13:37:01.895341916 UTC , thread_cap_info = ("ThreadId 125",
| E |   |   |   | |  1, False)}
| E |   |   |   | |  
| | | E |   |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E |   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E |   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | E |   |   | |  = 3 , num_top_rules = 3 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | E |   |   | |  = 166} , self = 81 , parent = Nothing , duration = 3.053361963000 , status
| | | E |   |   | |  = Except "<<timeout>>" , start = 2025-09-03 13:36:58.892446523 UTC , finish
| | | E |   |   | |  = 2025-09-03 13:37:01.945808486 UTC , thread_cap_info = ("ThreadId 126",
| | | E |   |   | |  1, False)}
| | | E |   |   | |  
| | | | |   E   | |  
| | | | | F     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F     | |  = 216 , num_strict_rules = 116 , num_top_rules = 116 , num_weak_rules =
| | | | | F     | |  100 , alphabet_size = 25 , total_length = 3464} , self = 100 , parent =
| | | | | F     | |  Nothing , duration = 10.014707576000 , status = Fail , start = 2025-09-03
| | | | | F     | |  13:36:59.082468102 UTC , finish = 2025-09-03 13:37:09.097175678 UTC , thread_cap_info
| | | | | F     | |  = ("ThreadId 129", 0, False)}
| | | | | F     | |  
| | | | | |     E |  
| | | | | | E     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 216
| | | | | | E     |  , num_strict_rules = 116 , num_top_rules = 116 , num_weak_rules = 100 ,
| | | | | | E     |  alphabet_size = 25 , total_length = 3464} , self = 91 , parent = Nothing
| | | | | | E     |  , duration = 9.058211836000 , status = Except "<<timeout>>" , start = 2025-09-03
| | | | | | E     |  13:36:59.176352058 UTC , finish = 2025-09-03 13:37:08.234563894 UTC , thread_cap_info
| | | | | | E     |  = ("ThreadId 130", 0, False)}
| | | | | | E     |  
| | | | E | |     |  
| | | |   | |     E  
| | F |   | |        
| | F |   | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   | |        = 150 , num_strict_rules = 51 , num_top_rules = 51 , num_weak_rules = 99
| | F |   | |        , alphabet_size = 21 , total_length = 2780} , self = 105 , parent = Nothing
| | F |   | |        , duration = 12.245391621000 , status = Fail , start = 2025-09-03 13:36:59.351037268
| | F |   | |        UTC , finish = 2025-09-03 13:37:11.596428889 UTC , thread_cap_info = ("ThreadId
| | F |   | |        133", 0, False)}
| | F |   | |        
| | | | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 150
| | | | E | |        , num_strict_rules = 51 , num_top_rules = 51 , num_weak_rules = 99 , alphabet_size
| | | | E | |        = 21 , total_length = 2780} , self = 93 , parent = Nothing , duration =
| | | | E | |        9.032698989000 , status = Except "<<timeout>>" , start = 2025-09-03 13:36:59.373547016
| | | | E | |        UTC , finish = 2025-09-03 13:37:08.406246005 UTC , thread_cap_info = ("ThreadId
| | | | E | |        134", 0, False)}
| | | | E | |        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
| | | | | | | E      = 6 , total_length = 107} , self = 104 , parent = Nothing , duration =
| | | | | | | E      12.134465670000 , status = Except "<<timeout>>" , start = 2025-09-03 13:36:59.38711839
| | | | | | | E      UTC , finish = 2025-09-03 13:37:11.52158406 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      136", 1, False)}
| | | | | | | E      
F | | | | | | |      
F | | | | | | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | |      = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
F | | | | | | |      alphabet_size = 6 , total_length = 107} , self = 101 , parent = Nothing
F | | | | | | |      , duration = 10.839992203000 , status = Fail , start = 2025-09-03 13:37:00.504262931
F | | | | | | |      UTC , finish = 2025-09-03 13:37:11.344255134 UTC , thread_cap_info = ("ThreadId
F | | | | | | |      137", 1, False)}
F | | | | | | |      
| E | | | | | |      
|   | E | | | |      
| S |   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | |      = 13 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 10 ,
| S |   | | | |      alphabet_size = 6 , total_length = 166} , self = 82 , parent = Nothing
| S |   | | | |      , duration = 1.739755355000 , status = Success , start = 2025-09-03 13:37:01.966651084
| S |   | | | |      UTC , finish = 2025-09-03 13:37:03.706406439 UTC , thread_cap_info = ("ThreadId
| S |   | | | |      140", 1, False)}
| S |   | | | |      
| | | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | E | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 10 , alphabet_size
| | | E | | | |      = 6 , total_length = 166} , self = 84 , parent = Nothing , duration = 1.760618680000
| | | E | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:02.027186548
| | | E | | | |      UTC , finish = 2025-09-03 13:37:03.787805228 UTC , thread_cap_info = ("ThreadId
| | | E | | | |      142", 1, False)}
| | | E | | | |      
| S | | | | | |      
|   | E | | | |      
| E |   | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E |   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| E |   | | | |      = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| E |   | | | |      = 140} , self = 89 , parent = Nothing , duration = 3.075723719000 , status
| E |   | | | |      = Except "<<timeout>>" , start = 2025-09-03 13:37:03.885695079 UTC , finish
| E |   | | | |      = 2025-09-03 13:37:06.961418798 UTC , thread_cap_info = ("ThreadId 148",
| E |   | | | |      1, False)}
| E |   | | | |      
| | | E | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | E | | | |      = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | E | | | |      = 140} , self = 90 , parent = Nothing , duration = 3.048636421000 , status
| | | E | | | |      = Except "<<timeout>>" , start = 2025-09-03 13:37:03.924273846 UTC , finish
| | | E | | | |      = 2025-09-03 13:37:06.972910267 UTC , thread_cap_info = ("ThreadId 149",
| | | E | | | |      1, False)}
| | | E | | | |      
| E | | | | | |      
|   | E | | | |      
| S |   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | |      = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| S |   | | | |      alphabet_size = 6 , total_length = 140} , self = 92 , parent = Nothing
| S |   | | | |      , duration = 1.421907949000 , status = Success , start = 2025-09-03 13:37:06.972965052
| S |   | | | |      UTC , finish = 2025-09-03 13:37:08.394873001 UTC , thread_cap_info = ("ThreadId
| S |   | | | |      153", 1, False)}
| S |   | | | |      
| | | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | | E | | | |      = 6 , total_length = 140} , self = 95 , parent = Nothing , duration = 1.409908420000
| | | E | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:07.017779064
| | | E | | | |      UTC , finish = 2025-09-03 13:37:08.427687484 UTC , thread_cap_info = ("ThreadId
| | | E | | | |      154", 1, False)}
| | | E | | | |      
| | | | | | E |      
| S | | | |   |      
|   | | E |   |      
|   | E   |   |      
| E |     |   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E |     |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E |     |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| E |     |   |      = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| E |     |   |      = 123} , self = 102 , parent = Nothing , duration = 3.093341973000 , status
| E |     |   |      = Except "<<timeout>>" , start = 2025-09-03 13:37:08.428008481 UTC , finish
| E |     |   |      = 2025-09-03 13:37:11.521350454 UTC , thread_cap_info = ("ThreadId 168",
| E |     |   |      1, False)}
| E |     |   |      
| | | E   |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E   |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E   |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | E   |   |      = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | E   |   |      = 123} , self = 103 , parent = Nothing , duration = 3.067883020000 , status
| | | E   |   |      = Except "<<timeout>>" , start = 2025-09-03 13:37:08.453491645 UTC , finish
| | | E   |   |      = 2025-09-03 13:37:11.521374665 UTC , thread_cap_info = ("ThreadId 167",
| | | E   |   |      1, False)}
| | | E   |   |      
| | | |   F   |      
F | | |       |      
  E | |       |      
    | E       |      
    |         E      
F   |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |                = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
F   |                alphabet_size = 6 , total_length = 123} , self = 106 , parent = Nothing
F   |                , duration = 1.729763763000 , status = Fail , start = 2025-09-03 13:37:11.587139109
F   |                UTC , finish = 2025-09-03 13:37:13.316902872 UTC , thread_cap_info = ("ThreadId
F   |                176", 1, False)}
F   |                
|   F                
| S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| S                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
| S                  = 6 , total_length = 123} , self = 107 , parent = Nothing , duration =
| S                  4.463265070000 , status = Success , start = 2025-09-03 13:37:11.608703214
| S                  UTC , finish = 2025-09-03 13:37:16.071968284 UTC , thread_cap_info = ("ThreadId
| S                  177", 1, False)}
| S                  
F |                  
E |                  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
E |                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
E |                  = 6 , total_length = 123} , self = 109 , parent = Nothing , duration =
E |                  2.847018153000 , status = Except "AsyncCancelled" , start = 2025-09-03
E |                  13:37:13.4042714 UTC , finish = 2025-09-03 13:37:16.251289553 UTC , thread_cap_info
E |                  = ("ThreadId 180", 1, False)}
E |                  
| S                  
E                    
