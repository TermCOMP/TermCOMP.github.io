last 4280 length 18298
last 1255 length 5400
CNF 1255 vars 5400 clauses
last 992 length 4074
CNF 992 vars 4074 clauses
last 1586 length 6977
CNF 1586 vars 6977 clauses
last 3951 length 16828
last 1244 length 5190
CNF 3951 vars 16828 clauses
last 5237 length 22463
CNF 5237 vars 22463 clauses
CNF 4280 vars 18298 clauses
CNF 1244 vars 5190 clauses
last 6226 length 27161
last 4973 length 21222
last 6563 length 28165
CNF 4973 vars 21222 clauses
CNF 6226 vars 27161 clauses
CNF 6563 vars 28165 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2188, clauses: 8347
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2287, clauses: 8653
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6454, clauses: 24934
last 2188 length 8347
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7447, clauses: 31299
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6827, clauses: 26826
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8321, clauses: 34955
last 2287 length 8653
last 6454 length 24934
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25398, clauses: 107632
last 7447 length 31299
CNF 2188 vars 8347 clauses
last 6827 length 26826
last 8321 length 34955
CNF 2287 vars 8653 clauses
last 25398 length 107632
CNF 6454 vars 24934 clauses
CNF 7447 vars 31299 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2188, clauses: 8347, status: Satisfied, time: 0.371115199s
CNF 6827 vars 26826 clauses
CNF 8321 vars 34955 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26332, clauses: 111572
last 26332 length 111572
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2287, clauses: 8653, status: Unsatisfied, time: 0.265149353s
CNF 25398 vars 107632 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8321, clauses: 34955, status: Satisfied, time: 0.216503096s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6454, clauses: 24934, status: Satisfied, time: 0.281582065s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6827, clauses: 26826, status: Satisfied, time: 0.404396733s
CNF 26332 vars 111572 clauses
last 1128 length 4787
last 1340 length 5779
last 1263 length 5519
last 1137 length 4805
CNF 1128 vars 4787 clauses
CNF 1340 vars 5779 clauses
CNF 1263 vars 5519 clauses
last 5849 length 25620
last 4482 length 19588
CNF 1137 vars 4805 clauses
last 6198 length 26601
last 4770 length 20359
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1969, clauses: 7336
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2062, clauses: 7642
CNF 5849 vars 25620 clauses
CNF 4482 vars 19588 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7397, clauses: 31037
CNF 4770 vars 20359 clauses
CNF 6198 vars 26601 clauses
last 1969 length 7336
last 2062 length 7642
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7979, clauses: 33519
last 7397 length 31037
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6024, clauses: 22811
CNF 1969 vars 7336 clauses
last 7979 length 33519
CNF 2062 vars 7642 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6607, clauses: 25744
CNF 7397 vars 31037 clauses
last 6024 length 22811
CNF 7979 vars 33519 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1969, clauses: 7336, status: Unsatisfied, time: 0.382880321s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2062, clauses: 7642, status: Unsatisfied, time: 0.413883784s
last 6607 length 25744
CNF 6024 vars 22811 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7979, clauses: 33519, status: Satisfied, time: 0.524163375s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25593, clauses: 108419
CNF 6607 vars 25744 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25993, clauses: 110133
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4492, clauses: 18654
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7397, clauses: 31037, status: Unsatisfied, time: 0.850950533s
last 25593 length 108419
last 25993 length 110133
last 4492 length 18654
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 12 strict rules and 4 weak rules on 4 letters       weights
SRS with 2 strict rules and 4 weak rules on 3 letters       EDG
SRS with 2 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 3 letters       EDG
SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a] -> [a, b, b, a] {- Input 0 -}
  [a, b, a, b] -> [a, b, b, a] {- Input 1 -}
  [b, b, a, a] -> [a, b, a, a] {- Input 2 -}
  [b, b, b, b] -> [a, a, a, a] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [a, b, b, a] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [a, b, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 3) -}
  [a#, b, a, a] |-> [a#, b, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a, a] |-> [b#, a] {- DP (Top 2) (Input 0) -}
  [a#, b, a, a] |-> [b#, b, a] {- DP (Top 1) (Input 0) -}
  [a#, b, a, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, b, a, b] |-> [a#, b, b, a] {- DP (Top 0) (Input 1) -}
  [a#, b, a, b] |-> [b#, a] {- DP (Top 2) (Input 1) -}
  [a#, b, a, b] |-> [b#, b, a] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [a#, b, a, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 0) (Input 3) -}
reason
  (a, 2/1)
  (b, 2/1)
  (a#, 1/1)
  (b#, 2/1)
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [a, b, b, a] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [a, b, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 3) -}
  [a#, b, a, a] |-> [a#, b, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a, b] |-> [a#, b, b, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [a#, b, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a, b] |-> [a#, b, b, a] {- DP (Top 0) (Input 1) -}
  [a, b, a, a] ->= [a, b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [a, b, b, a] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [a, b, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 0A -   \
        | -  -  -2A |
        \ -  -  0A  / )
  ( b
  , Wk  / -1A 0A 0A \
        | 1A  -  1A |
        \ -   -  0A / )
  ( a#
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [a#, b, b, a] {- DP (Top 0) (Input 0) -}
  [a, b, a, a] ->= [a, b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [a, b, b, a] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [a, b, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [a#, b, b, a] {- DP (Top 0) (Input 0) -}
  [a, b, a, a] ->= [a, b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [a, b, b, a] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [a, b, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A  1A  1A  \
        | -2A -1A -2A |
        \ -   -   0A  / )
  ( b
  , Wk  / -  1A  0A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( a#
  , Wk  / - 1A 1A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [a, b, b, a] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [a, b, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee(12/4,4)\Weight\EDG(2/4,3)\Matrix{\ArcticBZ}{3}\EDG(1/4,3)\Matrix{\ArcticBZ}{3}(0/4,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 4492 vars 18654 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.481212124000
  min duration 0.025657697000
  total durat. 2.542333265000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.463579562000
  min duration 0.040888415000
  total durat. 2.259749290000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.955905150000
  min duration 0.700732558000
  total durat. 1.656637708000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.893822165000
  min duration 0.842644610000
  total durat. 2.623444541000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.901478479000
  min duration 0.765488938000
  total durat. 2.495336062000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.876709319000
  min duration 0.745248488000
  total durat. 2.457009668000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.619698565000
  min duration 2.619698565000
  total durat. 2.619698565000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 32}
    , self = 111
    , parent = Nothing
    , duration = 2.619698565000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:17:16.921530742 UTC
    , finish = 2025-09-03 12:17:19.541229307 UTC
    , thread_cap_info = ("ThreadId 62", 0, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 32} , self
F                  = 46 , parent = Nothing , duration = 0.128549024000 , status = Fail , start
F                  = 2025-09-03 12:17:16.914745246 UTC , finish = 2025-09-03 12:17:17.04329427
F                  UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                = 32} , self = 54 , parent = Nothing , duration = 0.154953673000 , status
| F                = Fail , start = 2025-09-03 12:17:16.914753643 UTC , finish = 2025-09-03
| F                12:17:17.069707316 UTC , thread_cap_info = ("ThreadId 36", 3, False)}
| F                
| | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E              = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E              = 32} , self = 111 , parent = Nothing , duration = 2.619698565000 , status
| | E              = Except "AsyncCancelled" , start = 2025-09-03 12:17:16.921530742 UTC ,
| | E              finish = 2025-09-03 12:17:19.541229307 UTC , thread_cap_info = ("ThreadId
| | E              62", 0, False)}
| | E              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | F            = 3 , num_top_rules = 3 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | F            = 190} , self = 65 , parent = Nothing , duration = 0.369299786000 , status
| | | F            = Fail , start = 2025-09-03 12:17:16.930715268 UTC , finish = 2025-09-03
| | | F            12:17:17.300015054 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | F          = 3 , num_top_rules = 3 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | F          = 190} , self = 63 , parent = Nothing , duration = 0.241013611000 , status
| | | | F          = Fail , start = 2025-09-03 12:17:16.946750822 UTC , finish = 2025-09-03
| | | | F          12:17:17.187764433 UTC , thread_cap_info = ("ThreadId 69", 1, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F        = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F        = 160} , self = 61 , parent = Nothing , duration = 0.225680725000 , status
| | | | | F        = Fail , start = 2025-09-03 12:17:16.946770187 UTC , finish = 2025-09-03
| | | | | F        12:17:17.172450912 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F      = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | F      = 160} , self = 59 , parent = Nothing , duration = 0.162824756000 , status
| | | | | | F      = Fail , start = 2025-09-03 12:17:16.966266933 UTC , finish = 2025-09-03
| | | | | | F      12:17:17.129091689 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
| | | | | | F      
F | | | | | |      
F | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
F | | | | | |      = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size = 5 , total_length
F | | | | | |      = 200} , self = 66 , parent = Nothing , duration = 0.298660591000 , status
F | | | | | |      = Fail , start = 2025-09-03 12:17:17.047432157 UTC , finish = 2025-09-03
F | | | | | |      12:17:17.346092748 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
F | | | | | |      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | | | | F    = 200} , self = 64 , parent = Nothing , duration = 0.242893616000 , status
| | | | | | | F    = Fail , start = 2025-09-03 12:17:17.047433898 UTC , finish = 2025-09-03
| | | | | | | F    12:17:17.290327514 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| | | | | | | F    
| F | | | | | |    
| S | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |    = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| S | | | | | |    = 3 , total_length = 48} , self = 67 , parent = Nothing , duration = 0.765488938000
| S | | | | | |    , status = Success , start = 2025-09-03 12:17:17.111872029 UTC , finish
| S | | | | | |    = 2025-09-03 12:17:17.877360967 UTC , thread_cap_info = ("ThreadId 103",
| S | | | | | |    3, False)}
| S | | | | | |    
| | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | E  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | | | E  = 3 , total_length = 48} , self = 70 , parent = Nothing , duration = 0.842644610000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:17.113812816
| | | | | | | | E  UTC , finish = 2025-09-03 12:17:17.956457426 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  104", 3, False)}
| | | | | | | | E  
| | | | | | F | |  
| | | | | F   | |  
| | | | | F   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   | |  = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | F   | |  = 3 , total_length = 48} , self = 69 , parent = Nothing , duration = 0.745248488000
| | | | | F   | |  , status = Fail , start = 2025-09-03 12:17:17.185963285 UTC , finish =
| | | | | F   | |  2025-09-03 12:17:17.931211773 UTC , thread_cap_info = ("ThreadId 112",
| | | | | F   | |  3, False)}
| | | | | F   | |  
| | | | F |   | |  
| | | | S |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |   | |  = 19 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 16 ,
| | | | S |   | |  alphabet_size = 5 , total_length = 190} , self = 76 , parent = Nothing
| | | | S |   | |  , duration = 0.828368645000 , status = Success , start = 2025-09-03 12:17:17.206431707
| | | | S |   | |  UTC , finish = 2025-09-03 12:17:18.034800352 UTC , thread_cap_info = ("ThreadId
| | | | S |   | |  114", 1, False)}
| | | | S |   | |  
| | | | | |   F |  
| | | F | |     |  
| | | S | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |     |  = 20 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 16 ,
| | | S | |     |  alphabet_size = 5 , total_length = 200} , self = 85 , parent = Nothing
| | | S | |     |  , duration = 0.901478479000 , status = Success , start = 2025-09-03 12:17:17.300055717
| | | S | |     |  UTC , finish = 2025-09-03 12:17:18.201534196 UTC , thread_cap_info = ("ThreadId
| | | S | |     |  120", 1, False)}
| | | S | |     |  
| | | | | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| | | | | | E   |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 16 , alphabet_size
| | | | | | E   |  = 5 , total_length = 190} , self = 84 , parent = Nothing , duration = 0.886977766000
| | | | | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:17.306551826
| | | | | | E   |  UTC , finish = 2025-09-03 12:17:18.193529592 UTC , thread_cap_info = ("ThreadId
| | | | | | E   |  121", 1, False)}
| | | | | | E   |  
| | | | | | | S |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | S |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | | S |  = 3 , total_length = 48} , self = 72 , parent = Nothing , duration = 0.700732558000
| | | | | | | S |  , status = Success , start = 2025-09-03 12:17:17.306660469 UTC , finish
| | | | | | | S |  = 2025-09-03 12:17:18.007393027 UTC , thread_cap_info = ("ThreadId 119",
| | | | | | | S |  3, False)}
| | | | | | | S |  
F | | | | | | | |  
E | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
E | | | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size
E | | | | | | | |  = 5 , total_length = 200} , self = 91 , parent = Nothing , duration = 0.893822165000
E | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:17.365874937
E | | | | | | | |  UTC , finish = 2025-09-03 12:17:18.259697102 UTC , thread_cap_info = ("ThreadId
E | | | | | | | |  122", 1, False)}
E | | | | | | | |  
| S | | | | | | |  
|   | | | F | | |  
|   | | |   | | E  
|   | | |   | S    
|   | | S   |      
| F | |     |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |     |      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F | |     |      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| F | |     |      = 40} , self = 98 , parent = Nothing , duration = 0.407665011000 , status
| F | |     |      = Fail , start = 2025-09-03 12:17:18.047395868 UTC , finish = 2025-09-03
| F | |     |      12:17:18.455060879 UTC , thread_cap_info = ("ThreadId 138", 3, False)}
| F | |     |      
| | | | F   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F   |      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | F   |      = 40} , self = 96 , parent = Nothing , duration = 0.294649531000 , status
| | | | F   |      = Fail , start = 2025-09-03 12:17:18.156123381 UTC , finish = 2025-09-03
| | | | F   |      12:17:18.450772912 UTC , thread_cap_info = ("ThreadId 139", 3, False)}
| | | | F   |      
| | | | | F |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F |      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | F |      = 40} , self = 97 , parent = Nothing , duration = 0.278134168000 , status
| | | | | F |      = Fail , start = 2025-09-03 12:17:18.174289396 UTC , finish = 2025-09-03
| | | | | F |      12:17:18.452423564 UTC , thread_cap_info = ("ThreadId 143", 0, False)}
| | | | | F |      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | F    = 40} , self = 99 , parent = Nothing , duration = 0.371937554000 , status
| | | | | | | F    = Fail , start = 2025-09-03 12:17:18.177533007 UTC , finish = 2025-09-03
| | | | | | | F    12:17:18.549470561 UTC , thread_cap_info = ("ThreadId 144", 3, False)}
| | | | | | | F    
| | | | | | E |    
| | | S | |   |    
| | | F | |   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | F | |   |    = 1 , num_top_rules = 1 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | F | |   |    = 170} , self = 101 , parent = Nothing , duration = 0.463579562000 , status
| | | F | |   |    = Fail , start = 2025-09-03 12:17:18.202299112 UTC , finish = 2025-09-03
| | | F | |   |    12:17:18.665878674 UTC , thread_cap_info = ("ThreadId 150", 1, False)}
| | | F | |   |    
| | | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | F |    = 1 , num_top_rules = 1 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | | | F |    = 170} , self = 100 , parent = Nothing , duration = 0.410607608000 , status
| | | | | | F |    = Fail , start = 2025-09-03 12:17:18.206521004 UTC , finish = 2025-09-03
| | | | | | F |    12:17:18.617128612 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | | | | | F |    
E | | | | | | |    
F | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
F | | | | | | |    = 3 , num_top_rules = 3 , num_weak_rules = 16 , alphabet_size = 5 , total_length
F | | | | | | |    = 190} , self = 103 , parent = Nothing , duration = 0.481212124000 , status
F | | | | | | |    = Fail , start = 2025-09-03 12:17:18.326469831 UTC , finish = 2025-09-03
F | | | | | | |    12:17:18.807681955 UTC , thread_cap_info = ("ThreadId 157", 1, False)}
F | | | | | | |    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | | | | | F  = 190} , self = 102 , parent = Nothing , duration = 0.351189010000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 12:17:18.335712718 UTC , finish = 2025-09-03
| | | | | | | | F  12:17:18.686901728 UTC , thread_cap_info = ("ThreadId 158", 1, False)}
| | | | | | | | F  
| | | | F | | | |  
| | | | F | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | F | | | |  = 3 , total_length = 40} , self = 104 , parent = Nothing , duration = 0.835051861000
| | | | F | | | |  , status = Fail , start = 2025-09-03 12:17:18.450803375 UTC , finish =
| | | | F | | | |  2025-09-03 12:17:19.285855236 UTC , thread_cap_info = ("ThreadId 160",
| | | | F | | | |  3, False)}
| | | | F | | | |  
| | | | | F | | |  
| | | | | F | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | F | | |  = 3 , total_length = 40} , self = 105 , parent = Nothing , duration = 0.876709319000
| | | | | F | | |  , status = Fail , start = 2025-09-03 12:17:18.45247701 UTC , finish = 2025-09-03
| | | | | F | | |  12:17:19.329186329 UTC , thread_cap_info = ("ThreadId 161", 3, False)}
| | | | | F | | |  
| F | | | | | | |  
|   | | | | | F |  
| S | | | | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S | | | | |   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| S | | | | |   |  = 3 , total_length = 40} , self = 106 , parent = Nothing , duration = 0.955905150000
| S | | | | |   |  , status = Success , start = 2025-09-03 12:17:18.552090649 UTC , finish
| S | | | | |   |  = 2025-09-03 12:17:19.507995799 UTC , thread_cap_info = ("ThreadId 167",
| S | | | | |   |  3, False)}
| S | | | | |   |  
| | | | | | F   |  
| | | F | |     |  
| | |   | |     F  
F | |   | |        
  | |   F |        
  | |     F        
E | |              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | |              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
E | |              = 3 , total_length = 40} , self = 108 , parent = Nothing , duration = 0.153883987000
E | |              , status = Except "AsyncCancelled" , start = 2025-09-03 12:17:19.371970306
E | |              UTC , finish = 2025-09-03 12:17:19.525854293 UTC , thread_cap_info = ("ThreadId
E | |              179", 3, False)}
E | |              
| S |              
E   |              
    E              
