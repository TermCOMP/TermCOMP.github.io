last 474 length 1852
last 555 length 2317
CNF 474 vars 1852 clauses
last 579 length 2312
last 757 length 3331
CNF 555 vars 2317 clauses
CNF 579 vars 2312 clauses
CNF 757 vars 3331 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1877, clauses: 6735
last 2148 length 9452
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1982, clauses: 7095
last 2710 length 12765
last 1877 length 6735
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5798, clauses: 23975
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6382, clauses: 26463
last 1982 length 7095
CNF 2148 vars 9452 clauses
CNF 1877 vars 6735 clauses
CNF 2710 vars 12765 clauses
last 5798 length 23975
last 6382 length 26463
CNF 1982 vars 7095 clauses
CNF 6382 vars 26463 clauses
CNF 5798 vars 23975 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1877, clauses: 6735, status: Unsatisfied, time: 0.191969125s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1982, clauses: 7095, status: Unsatisfied, time: 0.179902544s
last 3939 length 16793
CNF 3939 vars 16793 clauses
last 3371 length 15213
CNF 3371 vars 15213 clauses
last 3514 length 15771
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5798, clauses: 23975, status: Unsatisfied, time: 0.349490074s
CNF 3514 vars 15771 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3965, clauses: 15976
last 3965 length 15976
CNF 3965 vars 15976 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3625, clauses: 14548
last 3625 length 14548
CNF 3625 vars 14548 clauses
last 3861 length 16436
CNF 3861 vars 16436 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6382, clauses: 26463, status: Unsatisfied, time: 0.591105779s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3080, clauses: 11623
last 3080 length 11623
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7285, clauses: 27280
last 7285 length 27280
CNF 3080 vars 11623 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3625, clauses: 14548, status: Unsatisfied, time: 0.450152546s
CNF 7285 vars 27280 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12203
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7173, clauses: 26957
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3965, clauses: 15976, status: Unsatisfied, time: 0.601462103s
last 3252 length 12203
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24285, clauses: 101255
[Info] pool sizes (success) 11597 seen 4758 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 7173 length 26957
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23895, clauses: 99756
last 24285 length 101255

last 23895 length 99756
summary
CNF 3252 vars 12203 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3080, clauses: 11623, status: Unsatisfied, time: 0.696842197s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10132, clauses: 42413
CNF 7173 vars 26957 clauses
CNF 24285 vars 101255 clauses
CNF 23895 vars 99756 clauses
**************************************************last 10132 length 42413

Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11185, clauses: 47024
last 11185 length 47024
SRS with 3 rules on 3 letters       looping derivation
from
  [b, b, b, a, a, b, a, b, c, c]
to
  [b, b, b, b, b, a, a, b, a, b, c, c, b, a, a, b, b, b]
via 18 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b, c] -> [c, c, b, a, a] {- Input 1 -}
  [c, c] -> [] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [b, b, b, a, a, b, a, b, c, c], via = [(Step   { rule = 1, position = 6}, [b, b, b, a, a, b, c, c, b, a, a, c]), (Step   { rule = 0, position = 10}, [b, b, b, a, a, b, c, c, b, a, b, c]), (Step   { rule = 1, position = 4}, [b, b, b, a, c, c, b, a, a, c, b, a, b, c]), (Step   { rule = 2, position = 4}, [b, b, b, a, b, a, a, c, b, a, b, c]), (Step   { rule = 0, position = 6}, [b, b, b, a, b, a, b, c, b, a, b, c]), (Step   { rule = 1, position = 5}, [b, b, b, a, b, c, c, b, a, a, b, a, b, c]), (Step   { rule = 1, position = 3}, [b, b, b, c, c, b, a, a, c, b, a, a, b, a, b, c]), (Step   { rule = 2, position = 3}, [b, b, b, b, a, a, c, b, a, a, b, a, b, c]), (Step   { rule = 0, position = 5}, [b, b, b, b, a, b, c, b, a, a, b, a, b, c]), (Step   { rule = 1, position = 4}, [b, b, b, b, c, c, b, a, a, b, a, a, b, a, b, c]), (Step   { rule = 2, position = 4}, [b, b, b, b, b, a, a, b, a, a, b, a, b, c]), (Step   { rule = 1, position = 11}, [b, b, b, b, b, a, a, b, a, a, b, c, c, b, a, a]), (Step   { rule = 0, position = 15}, [b, b, b, b, b, a, a, b, a, a, b, c, c, b, a, b]), (Step   { rule = 0, position = 14}, [b, b, b, b, b, a, a, b, a, a, b, c, c, b, b, b]), (Step   { rule = 1, position = 9}, [b, b, b, b, b, a, a, b, a, c, c, b, a, a, c, b, b, b]), (Step   { rule = 2, position = 9}, [b, b, b, b, b, a, a, b, a, b, a, a, c, b, b, b]), (Step   { rule = 0, position = 11}, [b, b, b, b, b, a, a, b, a, b, a, b, c, b, b, b]), (Step   { rule = 1, position = 10}, [b, b, b, b, b, a, a, b, a, b, c, c, b, a, a, b, b, b])], to = [b, b, b, b, b, a, a, b, a, b, c, c, b, a, a, b, b, b]}

**************************************************
skeleton: (3,3)\Loop{18}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 10132 vars 42413 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.544681448000
  min duration 0.062800311000
  total durat. 1.108074160000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"CNF 11185 vars 47024 clauses

  total number 2
  max duration 0.672559799000
  min duration 0.436985934000
  total durat. 1.109545733000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.065212769000
  min duration 0.938397153000
  total durat. 2.003609922000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 76
    , parent = Nothing
    , duration = 1.065212769000
    , status = Fail
    , start = 2025-09-03 11:25:02.32604978 UTC
    , finish = 2025-09-03 11:25:03.391262549 UTC
    , thread_cap_info = ("ThreadId 121", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.303785632000
  min duration 1.303785632000
  total durat. 1.303785632000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 74
    , parent = Nothing
    , duration = 1.303785632000
    , status = Fail
    , start = 2025-09-03 11:25:01.912406789 UTC
    , finish = 2025-09-03 11:25:03.216192421 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                    = 12} , self = 74 , parent = Nothing , duration = 1.303785632000 , status
F                    = Fail , start = 2025-09-03 11:25:01.912406789 UTC , finish = 2025-09-03
F                    11:25:03.216192421 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F                  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F                  = 31} , self = 44 , parent = Nothing , duration = 0.108488004000 , status
| F                  = Fail , start = 2025-09-03 11:25:01.913436161 UTC , finish = 2025-09-03
| F                  11:25:02.021924165 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| F                  
| | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                = 12} , self = 67 , parent = Nothing , duration = 0.420202870000 , status
| | F                = Fail , start = 2025-09-03 11:25:01.92540914 UTC , finish = 2025-09-03
| | F                11:25:02.34561201 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F              = 4 , total_length = 31} , self = 65 , parent = Nothing , duration = 0.296343376000
| | | F              , status = Fail , start = 2025-09-03 11:25:01.940196838 UTC , finish =
| | | F              2025-09-03 11:25:02.236540214 UTC , thread_cap_info = ("ThreadId 75", 3,
| | | F              False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | F            = 17 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 92} , self = 51 , parent = Nothing , duration = 0.160503262000 , status
| | | | F            = Fail , start = 2025-09-03 11:25:01.95065843 UTC , finish = 2025-09-03
| | | | F            11:25:02.111161692 UTC , thread_cap_info = ("ThreadId 82", 1, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | F          = 17 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F          = 92} , self = 54 , parent = Nothing , duration = 0.152605880000 , status
| | | | | F          = Fail , start = 2025-09-03 11:25:01.964385053 UTC , finish = 2025-09-03
| | | | | F          11:25:02.116990933 UTC , thread_cap_info = ("ThreadId 84", 1, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | F        = 4 , total_length = 31} , self = 66 , parent = Nothing , duration = 0.314369504000
| | | | | | F        , status = Fail , start = 2025-09-03 11:25:01.992678985 UTC , finish =
| | | | | | F        2025-09-03 11:25:02.307048489 UTC , thread_cap_info = ("ThreadId 86", 1,
| | | | | | F        False)}
| | | | | | F        
| | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | F      = 4 , total_length = 31} , self = 69 , parent = Nothing , duration = 0.436985934000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:25:02.00919402 UTC , finish = 2025-09-03
| | | | | | | F      11:25:02.446179954 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | | | | | F      
| F | | | | | |      
| F | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F | | | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | | | | | |      = 4 , total_length = 31} , self = 72 , parent = Nothing , duration = 0.672559799000
| F | | | | | |      , status = Fail , start = 2025-09-03 11:25:02.021958341 UTC , finish =
| F | | | | | |      2025-09-03 11:25:02.69451814 UTC , thread_cap_info = ("ThreadId 89", 1,
| F | | | | | |      False)}
| F | | | | | |      
| | | | F | | |      
| | | |   F | |      
| | | | F   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | F   | |      = 9 , num_top_rules = 9 , num_weak_rules = 17 , alphabet_size = 11 , total_length
| | | | F   | |      = 147} , self = 71 , parent = Nothing , duration = 0.315761582000 , status
| | | | F   | |      = Fail , start = 2025-09-03 11:25:02.153643205 UTC , finish = 2025-09-03
| | | | F   | |      11:25:02.469404787 UTC , thread_cap_info = ("ThreadId 112", 3, False)}
| | | | F   | |      
| | | | | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | F | |      = 9 , num_top_rules = 9 , num_weak_rules = 17 , alphabet_size = 11 , total_length
| | | | | F | |      = 147} , self = 68 , parent = Nothing , duration = 0.256327504000 , status
| | | | | F | |      = Fail , start = 2025-09-03 11:25:02.15365092 UTC , finish = 2025-09-03
| | | | | F | |      11:25:02.409978424 UTC , thread_cap_info = ("ThreadId 111", 1, False)}
| | | | | F | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | | | | | F    = 9 , num_top_rules = 9 , num_weak_rules = 16 , alphabet_size = 10 , total_length
| | | | | | | | F    = 144} , self = 70 , parent = Nothing , duration = 0.289059257000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 11:25:02.157136231 UTC , finish = 2025-09-03
| | | | | | | | F    11:25:02.446195488 UTC , thread_cap_info = ("ThreadId 118", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 16 , alphabet_size = 10 , total_length
| | | | | | | | | F  = 144} , self = 73 , parent = Nothing , duration = 0.544681448000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 11:25:02.183391728 UTC , finish = 2025-09-03
| | | | | | | | | F  11:25:02.728073176 UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | | | | | | | | F  
| | | F | | | | | |  
| | |   | | F | | |  
| | | F | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F | |   | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F | |   | | |  = 4 , total_length = 31} , self = 75 , parent = Nothing , duration = 0.938397153000
| | | F | |   | | |  , status = Fail , start = 2025-09-03 11:25:02.307072646 UTC , finish =
| | | F | |   | | |  2025-09-03 11:25:03.245469799 UTC , thread_cap_info = ("ThreadId 119",
| | | F | |   | | |  3, False)}
| | | F | |   | | |  
| | | | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | F | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | F | | |  = 4 , total_length = 31} , self = 76 , parent = Nothing , duration = 1.065212769000
| | | | | | F | | |  , status = Fail , start = 2025-09-03 11:25:02.32604978 UTC , finish = 2025-09-03
| | | | | | F | | |  11:25:03.391262549 UTC , thread_cap_info = ("ThreadId 121", 1, False)}
| | | | | | F | | |  
| | F | | | | | | |  
| |   | | F | | | |  
| |   | |   | F | |  
| |   | |   |   F |  
| |   | F   |     |  
| F   |     |     |  
|     |     |     F  
F     |     |        
S     |     |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S     |     |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
S     |     |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S     |     |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S     |     |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S     |     |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S     |     |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S     |     |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S     |     |        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
S     |     |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S     |     |        = 12} , self = 77 , parent = Nothing , duration = 0.211415353000 , status
S     |     |        = Success , start = 2025-09-03 11:25:03.216217722 UTC , finish = 2025-09-03
S     |     |        11:25:03.427633075 UTC , thread_cap_info = ("ThreadId 136", 0, False)}
S     |     |        
|     F     |        
|           F        
S                    
