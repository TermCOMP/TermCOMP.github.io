last 2827 length 11714
last 3449 length 24780
CNF 2827 vars 11714 clauses
CNF 3449 vars 24780 clauses
last 4552 length 22387
CNF 4552 vars 22387 clauses
last 7046 length 52925
CNF 7046 vars 52925 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10094, clauses: 36150
last 10094 length 36150
CNF 10094 vars 36150 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16413, clauses: 58685
last 16413 length 58685
CNF 16413 vars 58685 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10094, clauses: 36150, status: Unsatisfied, time: 1.447896901s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 33516, clauses: 138539
last 33516 length 138539
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16413, clauses: 58685, status: Satisfied, time: 1.843376704s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42700, clauses: 176049
last 42700 length 176049
CNF 33516 vars 138539 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20805, clauses: 81128
last 20805 length 81128
CNF 42700 vars 176049 clauses
CNF 20805 vars 81128 clauses
last 2761 length 11462
CNF 2761 vars 11462 clauses
last 4518 length 22253
CNF 4518 vars 22253 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16202, clauses: 57864
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 33516, clauses: 138539, status: Satisfied, time: 2.241652284s
last 16202 length 57864
CNF 16202 vars 57864 clauses
last 2024 length 9464
CNF 2024 vars 9464 clauses
last 4307 length 23420
CNF 4307 vars 23420 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16202, clauses: 57864, status: Satisfied, time: 0.873233204s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9563, clauses: 33885
last 9563 length 33885
CNF 9563 vars 33885 clauses
last 2695 length 11210
CNF 2695 vars 11210 clauses
last 4484 length 22119
CNF 4484 vars 22119 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15991, clauses: 57043
last 15991 length 57043
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9563, clauses: 33885, status: Unsatisfied, time: 1.488448762s
CNF 15991 vars 57043 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 32797, clauses: 135552
last 32797 length 135552
CNF 32797 vars 135552 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20247, clauses: 78991
last 20247 length 78991
CNF 20247 vars 78991 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15991, clauses: 57043, status: Unsatisfied, time: 2.895950454s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42024, clauses: 173217
last 42024 length 173217
CNF 42024 vars 173217 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20247, clauses: 78991, status: Unsatisfied, time: 2.652280262s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26850, clauses: 104130
last 26850 length 104130
CNF 26850 vars 104130 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15533, clauses: 57881
last 15533 length 57881
CNF 15533 vars 57881 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26850, clauses: 104130, status: Unsatisfied, time: 4.045564929s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25821, clauses: 98503
last 25821 length 98503
CNF 25821 vars 98503 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 58068, clauses: 231151
last 58068 length 231151
CNF 58068 vars 231151 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 69670, clauses: 275492
last 69670 length 275492
CNF 69670 vars 275492 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25821, clauses: 98503, status: Satisfied, time: 6.430388721s
last 2645 length 11026
CNF 2645 vars 11026 clauses
last 4420 length 21881
CNF 4420 vars 21881 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29214, clauses: 108272
last 29214 length 108272
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15502, clauses: 55294
last 15502 length 55294
CNF 15502 vars 55294 clauses
CNF 29214 vars 108272 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15502, clauses: 55294, status: Satisfied, time: 0.931188869s
last 2579 length 10774
CNF 2579 vars 10774 clauses
last 4386 length 21747
CNF 4386 vars 21747 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15291, clauses: 54473
last 15291 length 54473
CNF 15291 vars 54473 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15291, clauses: 54473, status: Unsatisfied, time: 2.706174133s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 40975, clauses: 168915
last 40975 length 168915
CNF 40975 vars 168915 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26106, clauses: 101257
last 26106 length 101257
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 72288, clauses: 335839
last 72288 length 335839
CNF 26106 vars 101257 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 40975, clauses: 168915, status: Satisfied, time: 3.496615626s
CNF 72288 vars 335839 clauses
last 2533 length 10604
CNF 2533 vars 10604 clauses
last 4379 length 21726
CNF 4379 vars 21726 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15185, clauses: 54048
last 15185 length 54048
CNF 15185 vars 54048 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15185, clauses: 54048, status: Unsatisfied, time: 1.773384582s
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 40929, clauses: 168739
last 40929 length 168739
CNF 40929 vars 168739 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26031, clauses: 100971
last 26031 length 100971
CNF 26031 vars 100971 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 64116, clauses: 258583
last 64116 length 258583
CNF 64116 vars 258583 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26031, clauses: 100971, status: Unsatisfied, time: 4.772448806s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 6, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 40839, clauses: 158049
last 40839 length 158049
CNF 40839 vars 158049 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24529, clauses: 93250
last 24529 length 93250
CNF 24529 vars 93250 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 68217, clauses: 269765
last 68217 length 269765
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 68217 vars 269765 clauses
[Info] pool sizes (success) 174674 seen 79662 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 28 rules on 17 letters       looping derivation
from
  [ABAABA, ABA, B, B, BABA, B, B, BABA, a]
to
  [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]
via 60 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [A, a] -> [A, A] {- Input 0 -}
  [A, b] -> [AB] {- Input 1 -}
  [AB, a] -> [ABA] {- Input 2 -}
  [AB, b] -> [AB, B] {- Input 3 -}
  [ABA, a] -> [ABAA] {- Input 4 -}
  [ABA, b] -> [ABA, B] {- Input 5 -}
  [ABAA, a] -> [ABAA, A] {- Input 6 -}
  [ABAA, b] -> [ABAAB] {- Input 7 -}
  [ABAAB, a] -> [ABAABA] {- Input 8 -}
  [ABAAB, b] -> [ABAAB, B] {- Input 9 -}
  [ABAABA, a] -> [ABAABA, A] {- Input 10 -}
  [ABAABA, b] -> [ABAABAB] {- Input 11 -}
  [ABAABAB, a] -> [ABAABAB, A] {- Input 12 -}
  [ABAABAB, b] -> [ABAABABB] {- Input 13 -}
  [ABAABABB, a] -> [ABAABABB, A] {- Input 14 -}
  [ABAABABB, b] -> [ABAABABBB] {- Input 15 -}
  [ABAABABBB, a] -> [ABAABABBBA] {- Input 16 -}
  [ABAABABBB, b] -> [ABAABABBB, B] {- Input 17 -}
  [ABAABABBBA] -> [b, a, b, a, a] {- Input 18 -}
  [B, a] -> [BA] {- Input 19 -}
  [B, b] -> [B, B] {- Input 20 -}
  [BA, a] -> [BA, A] {- Input 21 -}
  [BA, b] -> [BAB] {- Input 22 -}
  [BAB, a] -> [BABA] {- Input 23 -}
  [BAB, b] -> [BAB, B] {- Input 24 -}
  [BABA, a] -> [BABAA] {- Input 25 -}
  [BABA, b] -> [BABA, B] {- Input 26 -}
  [BABAA] -> [a, b, a, a, b, a, b, b, b, a] {- Input 27 -}
reason
  Nontermination
    Derive   { from = [ABAABA, ABA, B, B, BABA, B, B, BABA, a], via = [(Step   { rule = 25, position = 7}, [ABAABA, ABA, B, B, BABA, B, B, BABAA]), (Step   { rule = 27, position = 7}, [ABAABA, ABA, B, B, BABA, B, B, a, b, a, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 6}, [ABAABA, ABA, B, B, BABA, B, BA, b, a, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 6}, [ABAABA, ABA, B, B, BABA, B, BAB, a, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 6}, [ABAABA, ABA, B, B, BABA, B, BABA, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 6}, [ABAABA, ABA, B, B, BABA, B, BABAA, b, a, b, b, b, a]), (Step   { rule = 27, position = 6}, [ABAABA, ABA, B, B, BABA, B, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 5}, [ABAABA, ABA, B, B, BABA, BA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 5}, [ABAABA, ABA, B, B, BABA, BAB, a, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 5}, [ABAABA, ABA, B, B, BABA, BABA, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 5}, [ABAABA, ABA, B, B, BABA, BABAA, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 5}, [ABAABA, ABA, B, B, BABA, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 4}, [ABAABA, ABA, B, B, BABAA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 4}, [ABAABA, ABA, B, B, a, b, a, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 3}, [ABAABA, ABA, B, BA, b, a, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 3}, [ABAABA, ABA, B, BAB, a, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 3}, [ABAABA, ABA, B, BABA, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 3}, [ABAABA, ABA, B, BABAA, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 3}, [ABAABA, ABA, B, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 2}, [ABAABA, ABA, BA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 2}, [ABAABA, ABA, BAB, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 2}, [ABAABA, ABA, BABA, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 2}, [ABAABA, ABA, BABAA, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 2}, [ABAABA, ABA, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 4, position = 1}, [ABAABA, ABAA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 7, position = 1}, [ABAABA, ABAAB, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 8, position = 1}, [ABAABA, ABAABA, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 10, position = 1}, [ABAABA, ABAABA, A, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 1, position = 2}, [ABAABA, ABAABA, AB, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 2, position = 2}, [ABAABA, ABAABA, ABA, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 5, position = 2}, [ABAABA, ABAABA, ABA, B, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 20, position = 3}, [ABAABA, ABAABA, ABA, B, B, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 20, position = 4}, [ABAABA, ABAABA, ABA, B, B, B, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 5}, [ABAABA, ABAABA, ABA, B, B, BA, b, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 5}, [ABAABA, ABAABA, ABA, B, B, BAB, a, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 5}, [ABAABA, ABAABA, ABA, B, B, BABA, b, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 26, position = 5}, [ABAABA, ABAABA, ABA, B, B, BABA, B, b, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 20, position = 6}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, b, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 20, position = 7}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, B, a, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 8}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BA, b, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 8}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BAB, a, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 8}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, b, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 26, position = 8}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, b, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 20, position = 9}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, b, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 20, position = 10}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, B, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 11}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, BA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 11}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, BAB, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 11}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, BABA, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 11}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, BABAA, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 11}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, B, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 10}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, BA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 10}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, BAB, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 10}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, BABA, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 10}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, BABAA, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 10}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, B, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 19, position = 9}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, BA, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 22, position = 9}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, BAB, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 23, position = 9}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, BABA, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 25, position = 9}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, BABAA, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]), (Step   { rule = 27, position = 9}, [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a])], to = [ABAABA, ABAABA, ABA, B, B, BABA, B, B, BABA, a, b, a, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a, b, a, b, b, b, a]}

**************************************************
skeleton: (28,17)\Loop{60}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
expecting one of [/>, >], but found: ''
