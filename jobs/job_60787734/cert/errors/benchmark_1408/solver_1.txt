last 555 length 2202
CNF 555 vars 2202 clauses
last 544 length 2223
CNF 544 vars 2223 clauses
last 448 length 1758
last 576 length 2251
CNF 448 vars 1758 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2606, clauses: 9336
CNF 576 vars 2251 clauses
last 4256 length 21551
last 3770 length 17057
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7211, clauses: 29747
last 2606 length 9336
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2513, clauses: 9030
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6629, clauses: 27285
CNF 4256 vars 21551 clauses
CNF 3770 vars 17057 clauses
last 7211 length 29747
last 9615 length 43666
last 5792 length 22915
last 9262 length 38331
CNF 2606 vars 9336 clauses
last 2513 length 9030
last 6629 length 27285
last 13149 length 55703
CNF 5792 vars 22915 clauses
CNF 7211 vars 29747 clauses
CNF 9615 vars 43666 clauses
CNF 2513 vars 9030 clauses
CNF 9262 vars 38331 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2606, clauses: 9336, status: Unsatisfied, time: 0.401125596s
CNF 6629 vars 27285 clauses
CNF 13149 vars 55703 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2513, clauses: 9030, status: Unsatisfied, time: 0.25446812s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7211, clauses: 29747, status: Satisfied, time: 0.359269391s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4642, clauses: 18073
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6629, clauses: 27285, status: Satisfied, time: 0.407849938s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4308, clauses: 16779
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18661, clauses: 72241
last 528 length 2165
last 524 length 2085
last 18661 length 72241
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24219, clauses: 95270
CNF 528 vars 2165 clauses
last 376 length 1488
CNF 524 vars 2085 clauses
last 434 length 1717
last 24219 length 95270
CNF 376 vars 1488 clauses
CNF 434 vars 1717 clauses
CNF 24219 vars 95270 clauses
CNF 18661 vars 72241 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2500, clauses: 8911
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1904, clauses: 6768
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7165, clauses: 29571
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5870, clauses: 24213
last 2500 length 8911
last 1904 length 6768
last 7165 length 29571
last 5870 length 24213
CNF 2500 vars 8911 clauses
CNF 1904 vars 6768 clauses
CNF 7165 vars 29571 clauses
CNF 5870 vars 24213 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1904, clauses: 6768, status: Unsatisfied, time: 0.105714875s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2500, clauses: 8911, status: Unsatisfied, time: 0.211225751s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7165, clauses: 29571, status: Satisfied, time: 0.223561019s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5870, clauses: 24213, status: Satisfied, time: 0.235544236s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18661, clauses: 72241, status: Satisfied, time: 0.700075931s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24219, clauses: 95270, status: Satisfied, time: 0.684733414s
last 454 length 1817
last 498 length 2043
CNF 498 vars 2043 clauses
CNF 454 vars 1817 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       mirror
SRS with 4 rules on 3 letters       context
SRS with 8 rules on 3 letters       mirror
SRS with 8 rules on 3 letters       DP
SRS with 6 strict rules and 8 weak rules on 6 letters       weights
SRS with 4 strict rules and 8 weak rules on 5 letters       EDG
SRS with 4 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 8 weak rules on 5 letters       weights
SRS with 2 strict rules and 8 weak rules on 5 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 8 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 3 letters       EDG

  2 SRS with 1 strict rules and 8 weak rules on 4 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [b, a, b, c] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, b] -> [a, c] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [] {- Mirror (Input 0) -}
  [a, a] -> [c, b, a, b] {- Mirror (Input 1) -}
  [b] -> [] {- Mirror (Input 2) -}
  [b, c] -> [c, a] {- Mirror (Input 3) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [b, a] -> [b] {- Mirror (Input 0) -}
  [c, a] -> [c] {- Mirror (Input 0) -}
  [a, a] -> [c, b, a, b] {- Mirror (Input 1) -}
  [a, b] -> [a] {- Mirror (Input 2) -}
  [b, b] -> [b] {- Mirror (Input 2) -}
  [c, b] -> [c] {- Mirror (Input 2) -}
  [b, c] -> [c, a] {- Mirror (Input 3) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, c] -> [c] {- Input 0 -}
  [a, a] -> [b, a, b, c] {- Input 1 -}
  [b, a] -> [a] {- Input 2 -}
  [b, b] -> [b] {- Input 2 -}
  [b, c] -> [c] {- Input 2 -}
  [c, b] -> [a, c] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Input 1) -}
  [a#, a] |-> [b#, a, b, c] {- DP (Top 0) (Input 1) -}
  [a#, a] |-> [b#, c] {- DP (Top 2) (Input 1) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 3) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Input 1) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 3) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Input 1) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 3) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 1A -  \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / 1A -  1A \
        | -  0A -  |
        \ -  -  0A / )
  ( c
  , Wk  / 0A - 0A \
        | 0A - -  |
        \ -  - 0A / )
  ( a#
  , Wk  / 1A 1A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( c#
  , Wk  / 1A 1A 1A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 3) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Input 1) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 1A 1A 1A \
        | 1A -  -  |
        \ -  -  0A / )
  ( b
  , Wk  / 0A  0A 0A \
        | -2A 1A 1A |
        \ -   -  0A / )
  ( c
  , Wk  / - 0A 0A \
        | - 0A -  |
        \ - -  0A / )
  ( a#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
  [b, a] ->= [a] {- DP Nontop (Input 2) -}
  [b, b] ->= [b] {- DP Nontop (Input 2) -}
  [b, c] ->= [c] {- DP Nontop (Input 2) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
reason
  remove un-usable
    SRS
      [a, a] ->= [a] {- DP Nontop (Input 0) -}
      [a, b] ->= [b] {- DP Nontop (Input 0) -}
      [a, c] ->= [c] {- DP Nontop (Input 0) -}
      [a, a] ->= [b, a, b, c] {- DP Nontop (Input 1) -}
      [b, a] ->= [a] {- DP Nontop (Input 2) -}
      [b, b] ->= [b] {- DP Nontop (Input 2) -}
      [b, c] ->= [c] {- DP Nontop (Input 2) -}
      [c, b] ->= [a, c] {- DP Nontop (Input 3) -}
   property Termination
has value Just True
for SRS
  [c#, b] |-> [c#] {- DP (Top 1) (Input 3) -}
reason
  (b, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(4,3)\Context\Mirror(8,3)\Deepee(6/8,6)\Weight\EDG(4/8,5)\Matrix{\ArcticBZ}{3}(3/8,5)\Weight(2/8,5)\EDG[(1/8,4)\Matrix{\ArcticBZ}{3}(0/8,3)\EDG[],(1/8,4)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.815933751000
  min duration 0.013822089000
  total durat. 2.492249646000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.591710922000
  min duration 0.009453708000
  total durat. 1.978076728000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.077279838000
  min duration 0.437848675000
  total durat. 3.070767301000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 43}
    , self = 74
    , parent = Nothing
    , duration = 1.077279838000
    , status = Success
    , start = 2025-09-03 11:54:16.843648745 UTC
    , finish = 2025-09-03 11:54:17.920928583 UTC
    , thread_cap_info = ("ThreadId 106", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.391589236000
  min duration 1.191110089000
  total durat. 2.582699325000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 116
      , num_strict_rules = 80
      , num_top_rules = 80
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 594}
    , self = 108
    , parent = Nothing
    , duration = 1.191110089000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:54:17.619385841 UTC
    , finish = 2025-09-03 11:54:18.81049593 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 89
      , num_strict_rules = 53
      , num_top_rules = 53
      , num_weak_rules = 36
      , alphabet_size = 15
      , total_length = 444}
    , self = 107
    , parent = Nothing
    , duration = 1.391589236000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:54:17.418886965 UTC
    , finish = 2025-09-03 11:54:18.810476201 UTC
    , thread_cap_info = ("ThreadId 123", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.473536221000
  min duration 1.439344617000
  total durat. 2.912880838000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 116
      , num_strict_rules = 80
      , num_top_rules = 80
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 594}
    , self = 100
    , parent = Nothing
    , duration = 1.439344617000
    , status = Success
    , start = 2025-09-03 11:54:17.351492001 UTC
    , finish = 2025-09-03 11:54:18.790836618 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 89
      , num_strict_rules = 53
      , num_top_rules = 53
      , num_weak_rules = 36
      , alphabet_size = 15
      , total_length = 444}
    , self = 99
    , parent = Nothing
    , duration = 1.473536221000
    , status = Success
    , start = 2025-09-03 11:54:17.305948193 UTC
    , finish = 2025-09-03 11:54:18.779484414 UTC
    , thread_cap_info = ("ThreadId 121", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.785014209000
  min duration 0.290154256000
  total durat. 2.394150643000
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
F                    = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 180} , self = 60 , parent = Nothing , duration = 0.458612222000 , status
F                    = Fail , start = 2025-09-03 11:54:16.710276395 UTC , finish = 2025-09-03
F                    11:54:17.168888617 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 180} , self = 59 , parent = Nothing , duration = 0.442514699000 , status
| F                  = Fail , start = 2025-09-03 11:54:16.718552871 UTC , finish = 2025-09-03
| F                  11:54:17.16106757 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | F                = 43} , self = 57 , parent = Nothing , duration = 0.118089724000 , status
| | F                = Fail , start = 2025-09-03 11:54:16.725536705 UTC , finish = 2025-09-03
| | F                11:54:16.843626429 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | F              alphabet_size = 5 , total_length = 43} , self = 64 , parent = Nothing ,
| | | F              duration = 0.683115941000 , status = Fail , start = 2025-09-03 11:54:16.735757215
| | | F              UTC , finish = 2025-09-03 11:54:17.418873156 UTC , thread_cap_info = ("ThreadId
| | | F              95", 2, False)}
| | | F              
| | | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | S            , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | S            = 5 , total_length = 43} , self = 67 , parent = Nothing , duration = 0.959931190000
| | | | S            , status = Success , start = 2025-09-03 11:54:16.739501055 UTC , finish
| | | | S            = 2025-09-03 11:54:17.699432245 UTC , thread_cap_info = ("ThreadId 96",
| | | | S            2, False)}
| | | | S            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 116 , num_strict_rules
| | | | | F          = 80 , num_top_rules = 80 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | F          total_length = 594} , self = 65 , parent = Nothing , duration = 0.815933751000
| | | | | F          , status = Fail , start = 2025-09-03 11:54:16.743344485 UTC , finish =
| | | | | F          2025-09-03 11:54:17.559278236 UTC , thread_cap_info = ("ThreadId 100",
| | | | | F          1, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 116 , num_strict_rules
| | | | | | F        = 80 , num_top_rules = 80 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | F        total_length = 594} , self = 62 , parent = Nothing , duration = 0.591710922000
| | | | | | F        , status = Fail , start = 2025-09-03 11:54:16.75856224 UTC , finish = 2025-09-03
| | | | | | F        11:54:17.350273162 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | | F      alphabet_size = 5 , total_length = 43} , self = 66 , parent = Nothing ,
| | | | | | | F      duration = 0.785014209000 , status = Fail , start = 2025-09-03 11:54:16.813546424
| | | | | | | F      UTC , finish = 2025-09-03 11:54:17.598560633 UTC , thread_cap_info = ("ThreadId
| | | | | | | F      104", 2, False)}
| | | | | | | F      
| | F | | | | |      
| | S | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | S | | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | S | | | | |      = 5 , total_length = 43} , self = 74 , parent = Nothing , duration = 1.077279838000
| | S | | | | |      , status = Success , start = 2025-09-03 11:54:16.843648745 UTC , finish
| | S | | | | |      = 2025-09-03 11:54:17.920928583 UTC , thread_cap_info = ("ThreadId 106",
| | S | | | | |      2, False)}
| | S | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
| | | | | | | | F    = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | | | | | F    total_length = 444} , self = 63 , parent = Nothing , duration = 0.506016585000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:54:16.898575356 UTC , finish =
| | | | | | | | F    2025-09-03 11:54:17.404591941 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | | F    1, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
| | | | | | | | | F  = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | | | | | | F  total_length = 444} , self = 61 , parent = Nothing , duration = 0.319031240000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:54:16.919678789 UTC , finish =
| | | | | | | | | F  2025-09-03 11:54:17.238710029 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | F  2, False)}
| | | | | | | | | F  
| F | | | | | | | |  
F   | | | | | | | |  
    | | | | | | | F  
S   | | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | | | | | |    = 89 , num_strict_rules = 53 , num_top_rules = 53 , num_weak_rules = 36
S   | | | | | | |    , alphabet_size = 15 , total_length = 444} , self = 99 , parent = Nothing
S   | | | | | | |    , duration = 1.473536221000 , status = Success , start = 2025-09-03 11:54:17.305948193
S   | | | | | | |    UTC , finish = 2025-09-03 11:54:18.779484414 UTC , thread_cap_info = ("ThreadId
S   | | | | | | |    121", 1, False)}
S   | | | | | | |    
|   | | | | F | |    
| S | | | |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |   | |    = 116 , num_strict_rules = 80 , num_top_rules = 80 , num_weak_rules = 36
| S | | | |   | |    , alphabet_size = 17 , total_length = 594} , self = 100 , parent = Nothing
| S | | | |   | |    , duration = 1.439344617000 , status = Success , start = 2025-09-03 11:54:17.351492001
| S | | | |   | |    UTC , finish = 2025-09-03 11:54:18.790836618 UTC , thread_cap_info = ("ThreadId
| S | | | |   | |    122", 1, False)}
| S | | | |   | |    
| | | | | |   | F    
| | | F | |   |      
| | | E | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 89
| | | E | |   |      , num_strict_rules = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size
| | | E | |   |      = 15 , total_length = 444} , self = 107 , parent = Nothing , duration =
| | | E | |   |      1.391589236000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | |   |      11:54:17.418886965 UTC , finish = 2025-09-03 11:54:18.810476201 UTC , thread_cap_info
| | | E | |   |      = ("ThreadId 123", 1, False)}
| | | E | |   |      
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | E |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | | E |      = 5 , total_length = 43} , self = 69 , parent = Nothing , duration = 0.310291831000
| | | | | | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:54:17.448472
| | | | | | E |      UTC , finish = 2025-09-03 11:54:17.758763831 UTC , thread_cap_info = ("ThreadId
| | | | | | E |      124", 2, False)}
| | | | | | E |      
| | | | | F | |      
| | | | |   | F      
| | | | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 116
| | | | | E |        , num_strict_rules = 80 , num_top_rules = 80 , num_weak_rules = 36 , alphabet_size
| | | | | E |        = 17 , total_length = 594} , self = 108 , parent = Nothing , duration =
| | | | | E |        1.191110089000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |        11:54:17.619385841 UTC , finish = 2025-09-03 11:54:18.81049593 UTC , thread_cap_info
| | | | | E |        = ("ThreadId 125", 1, False)}
| | | | | E |        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | E      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | | | E      = 5 , total_length = 43} , self = 76 , parent = Nothing , duration = 0.360965679000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 11:54:17.619402691
| | | | | | | E      UTC , finish = 2025-09-03 11:54:17.98036837 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      126", 2, False)}
| | | | | | | E      
| | | | S | | |      
| | | |   | E |      
| | | | F |   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F |   |      = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F |   |      = 40} , self = 82 , parent = Nothing , duration = 0.233249049000 , status
| | | | F |   |      = Fail , start = 2025-09-03 11:54:17.785718948 UTC , finish = 2025-09-03
| | | | F |   |      11:54:18.018967997 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
| | | | F |   |      
| | | | | | F |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | F |      = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | | F |      = 40} , self = 81 , parent = Nothing , duration = 0.223697630000 , status
| | | | | | F |      = Fail , start = 2025-09-03 11:54:17.791985228 UTC , finish = 2025-09-03
| | | | | | F |      11:54:18.015682858 UTC , thread_cap_info = ("ThreadId 131", 2, False)}
| | | | | | F |      
| | S | | | | |      
| |   | | | | E      
| | F | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F | | | |        = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | F | | | |        = 33} , self = 83 , parent = Nothing , duration = 0.258106618000 , status
| | F | | | |        = Fail , start = 2025-09-03 11:54:18.006006149 UTC , finish = 2025-09-03
| | F | | | |        11:54:18.264112767 UTC , thread_cap_info = ("ThreadId 140", 2, False)}
| | F | | | |        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | F      = 33} , self = 84 , parent = Nothing , duration = 0.313027834000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:54:18.009613488 UTC , finish = 2025-09-03
| | | | | | | F      11:54:18.322641322 UTC , thread_cap_info = ("ThreadId 139", 2, False)}
| | | | | | | F      
| | | | | | F |      
| | | | | | F |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F |      = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
| | | | | | F |      alphabet_size = 5 , total_length = 40} , self = 86 , parent = Nothing ,
| | | | | | F |      duration = 0.635866237000 , status = Fail , start = 2025-09-03 11:54:18.015723237
| | | | | | F |      UTC , finish = 2025-09-03 11:54:18.651589474 UTC , thread_cap_info = ("ThreadId
| | | | | | F |      145", 2, False)}
| | | | | | F |      
| | | | F | | |      
| | | | S | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | S | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
| | | | S | | |      = 5 , total_length = 40} , self = 87 , parent = Nothing , duration = 0.595707598000
| | | | S | | |      , status = Success , start = 2025-09-03 11:54:18.098565729 UTC , finish
| | | | S | | |      = 2025-09-03 11:54:18.694273327 UTC , thread_cap_info = ("ThreadId 146",
| | | | S | | |      2, False)}
| | | | S | | |      
| | F | | | | |      
| | F | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |      = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | F | | | | |      = 4 , total_length = 33} , self = 85 , parent = Nothing , duration = 0.290154256000
| | F | | | | |      , status = Fail , start = 2025-09-03 11:54:18.278612872 UTC , finish =
| | F | | | | |      2025-09-03 11:54:18.568767128 UTC , thread_cap_info = ("ThreadId 147",
| | F | | | | |      2, False)}
| | F | | | | |      
| | | | | | | F      
| | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | S      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | | | | | S      = 4 , total_length = 33} , self = 90 , parent = Nothing , duration = 0.437848675000
| | | | | | | S      , status = Success , start = 2025-09-03 11:54:18.32267059 UTC , finish
| | | | | | | S      = 2025-09-03 11:54:18.760519265 UTC , thread_cap_info = ("ThreadId 148",
| | | | | | | S      2, False)}
| | | | | | | S      
| | F | | | | |      
| | E | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E | | | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | E | | | | |      = 4 , total_length = 33} , self = 95 , parent = Nothing , duration = 0.138528632000
| | E | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:54:18.622414486
| | E | | | | |      UTC , finish = 2025-09-03 11:54:18.760943118 UTC , thread_cap_info = ("ThreadId
| | E | | | | |      153", 2, False)}
| | E | | | | |      
| | | | | | F |      
| | | | S |   |      
| | | |   |   S      
| | E |   |          
S |   |   |          
  S   |   |          
      E   |          
          E          
