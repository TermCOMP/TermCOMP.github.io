last 1627 length 7449
CNF 1627 vars 7449 clauses
last 1769 length 9203
CNF 1769 vars 9203 clauses
last 2580 length 11540
CNF 2580 vars 11540 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1976, clauses: 7947
last 1976 length 7947
last 2861 length 16731
CNF 2861 vars 16731 clauses
CNF 1976 vars 7947 clauses
last 3054 length 16598
last 3784 length 20772
CNF 3784 vars 20772 clauses
CNF 3054 vars 16598 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2274, clauses: 8729
last 2274 length 8729
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1976, clauses: 7947, status: Unsatisfied, time: 0.086034517s
CNF 2274 vars 8729 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2274, clauses: 8729, status: Unsatisfied, time: 0.086149186s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6202, clauses: 26022
last 6202 length 26022
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3777, clauses: 16207
last 3777 length 16207
CNF 6202 vars 26022 clauses
CNF 3777 vars 16207 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7122, clauses: 29900
last 7122 length 29900
CNF 7122 vars 29900 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4359, clauses: 18487
last 4359 length 18487
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3777, clauses: 16207, status: Unsatisfied, time: 0.139494329s
CNF 4359 vars 18487 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3281, clauses: 13972
last 3281 length 13972
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6202, clauses: 26022, status: Unsatisfied, time: 0.433796474s
CNF 3281 vars 13972 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4359, clauses: 18487, status: Unsatisfied, time: 0.340069773s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3281, clauses: 13972, status: Satisfied, time: 0.332581129s
last 8221 length 41349
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7122, clauses: 29900, status: Unsatisfied, time: 0.686195992s
CNF 8221 vars 41349 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3782, clauses: 15538
last 7238 length 37953
last 6434 length 35799
**************************************************last 3782 length 15538

CNF 7238 vars 37953 clauses
CNF 6434 vars 35799 clauses
CNF 3782 vars 15538 clauses
summaryMatrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4648, clauses: 19498

last 4648 length 19498
**************************************************Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11888, clauses: 53263

SRS with 1 rules on 2 letters       DP
SRS with 8 strict rules and 1 weak rules on 3 letters       EDG
SRS with 3 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a, a, a] -> [a, a, a, a, a, b, a, a, b, a, b] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, a, a, a] ->= [ a , a , a , a , a , b , a , a , b , a , b ] {- DP Nontop (Input 0) -}
  [a#, b, a, a, a, a] |-> [ a# , a , a , a , a , b , a , a , b , a , b ] {- DP (Top 0) (Input 0) -}
  [a#, b, a, a, a, a] |-> [ a# , a , a , a , b , a , a , b , a , b ] {- DP (Top 1) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, a, a, b, a, a, b, a, b] {- DP (Top 2) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, a, b, a, a, b, a, b] {- DP (Top 3) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, a, b, a, b] {- DP (Top 6) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b] {- DP (Top 9) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b, a, a, b, a, b] {- DP (Top 4) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b, a, b] {- DP (Top 7) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a, a, a] |-> [a#, b, a, b] {- DP (Top 7) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b] {- DP (Top 9) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b, a, a, b, a, b] {- DP (Top 4) (Input 0) -}
  [a, b, a, a, a, a] ->= [ a , a , a , a , a , b , a , a , b , a , b ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  0A  - \
        | 0A  0A  0A  0A  - |
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( a#
  , Wk  / 1A 1A 3A 5A - \
        | 1A 1A 3A 5A - |
        | 1A 1A 3A 5A - |
        | 1A 1A 3A 5A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, a, a, a] ->= [ a , a , a , a , a , b , a , a , b , a , b ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,2)\Deepee(8/1,3)\EDG(3/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = last 11888 length 53263
bits,CNF 4648 vars 19498 clauses
solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.984817598000
  min duration 0.610340662000
  total durat. 1.595158260000
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.251658953000
  min duration 1.251658953000
  total durat. 1.251658953000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 73
    , parent = Nothing
    , duration = 1.251658953000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:26:52.363362699 UTC
    , finish = 2025-09-03 12:26:53.615021652 UTC
    , thread_cap_info = ("ThreadId 23", 1, False)}
**************************************************
E              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E              = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
E              = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 17} , self
E              = 73 , parent = Nothing , duration = 1.251658953000 , status = Except "AsyncCancelled"
E              , start = 2025-09-03 12:26:52.363362699 UTC , finish = 2025-09-03 12:26:53.615021652
E              UTC , thread_cap_info = ("ThreadId 23", 1, False)}
E              
| F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F            = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F            = 55} , self = 45 , parent = Nothing , duration = 0.173180325000 , status
| F            = Fail , start = 2025-09-03 12:26:52.364494447 UTC , finish = 2025-09-03
| F            12:26:52.537674772 UTC , thread_cap_info = ("ThreadId 70", 0, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F          = 76} , self = 49 , parent = Nothing , duration = 0.245263052000 , status
| | F          = Fail , start = 2025-09-03 12:26:52.364527315 UTC , finish = 2025-09-03
| | F          12:26:52.609790367 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F        = 76} , self = 46 , parent = Nothing , duration = 0.179255911000 , status
| | | F        = Fail , start = 2025-09-03 12:26:52.375603812 UTC , finish = 2025-09-03
| | | F        12:26:52.554859723 UTC , thread_cap_info = ("ThreadId 75", 3, False)}
| | | F        
| | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | F      = 3 , total_length = 48} , self = 47 , parent = Nothing , duration = 0.126160452000
| | | | F      , status = Fail , start = 2025-09-03 12:26:52.429108858 UTC , finish =
| | | | F      2025-09-03 12:26:52.55526931 UTC , thread_cap_info = ("ThreadId 85", 2,
| | | | F      False)}
| | | | F      
| | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | F    = 3 , total_length = 48} , self = 65 , parent = Nothing , duration = 0.610340662000
| | | | | F    , status = Fail , start = 2025-09-03 12:26:52.469088039 UTC , finish =
| | | | | F    2025-09-03 12:26:53.079428701 UTC , thread_cap_info = ("ThreadId 87", 2,
| | | | | F    False)}
| | | | | F    
| | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F  = 5 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | | | | | F  = 3 , total_length = 55} , self = 53 , parent = Nothing , duration = 0.155193769000
| | | | | | F  , status = Fail , start = 2025-09-03 12:26:52.482819622 UTC , finish =
| | | | | | F  2025-09-03 12:26:52.638013391 UTC , thread_cap_info = ("ThreadId 89", 0,
| | | | | | F  False)}
| | | | | | F  
| F | | | | |  
| F | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| F | | | | |  = 3 , total_length = 55} , self = 71 , parent = Nothing , duration = 0.984817598000
| F | | | | |  , status = Fail , start = 2025-09-03 12:26:52.550156681 UTC , finish =
| F | | | | |  2025-09-03 12:26:53.534974279 UTC , thread_cap_info = ("ThreadId 94", 0,
| F | | | | |  False)}
| F | | | | |  
| | | F | | |  
| | |   F | |  
| | | F   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | F   | |  = 3 , total_length = 48} , self = 62 , parent = Nothing , duration = 0.237461325000
| | | F   | |  , status = Fail , start = 2025-09-03 12:26:52.578607217 UTC , finish =
| | | F   | |  2025-09-03 12:26:52.816068542 UTC , thread_cap_info = ("ThreadId 99", 2,
| | | F   | |  False)}
| | | F   | |  
| | F |   | |  
| |   |   | F  
| | F |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | F |   |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | F |   |    = 3 , total_length = 55} , self = 66 , parent = Nothing , duration = 0.481239470000
| | F |   |    , status = Fail , start = 2025-09-03 12:26:52.654997004 UTC , finish =
| | F |   |    2025-09-03 12:26:53.136236474 UTC , thread_cap_info = ("ThreadId 109",
| | F |   |    0, False)}
| | F |   |    
| | | F   |    
| | | S   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | S   |    = 3 , total_length = 48} , self = 67 , parent = Nothing , duration = 0.496535914000
| | | S   |    , status = Success , start = 2025-09-03 12:26:52.862613205 UTC , finish
| | | S   |    = 2025-09-03 12:26:53.359149119 UTC , thread_cap_info = ("ThreadId 123",
| | | S   |    2, False)}
| | | S   |    
| | | |   F    
| | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | E      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | E      = 3 , total_length = 48} , self = 69 , parent = Nothing , duration = 0.339165468000
| | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 12:26:53.135991566
| | | | E      UTC , finish = 2025-09-03 12:26:53.475157034 UTC , thread_cap_info = ("ThreadId
| | | | E      125", 2, False)}
| | | | E      
| | F | |      
| |   S |      
| |     E      
| F            
E              
