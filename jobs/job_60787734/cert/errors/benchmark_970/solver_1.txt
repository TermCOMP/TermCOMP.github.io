last 577 length 2279
last 806 length 3127
CNF 806 vars 3127 clauses
CNF 577 vars 2279 clauses
last 1034 length 4062
CNF 1034 vars 4062 clauses
last 744 length 2966
CNF 744 vars 2966 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3018, clauses: 10949
last 3018 length 10949
CNF 3018 vars 10949 clauses
last 3691 length 15298
last 3566 length 15258
last 4191 length 18072
CNF 3691 vars 15298 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3018, clauses: 10949, status: Unsatisfied, time: 0.12910419s
CNF 4191 vars 18072 clauses
CNF 3566 vars 15258 clauses
last 4241 length 17577
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9392, clauses: 39059
last 9392 length 39059
CNF 4241 vars 17577 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3838, clauses: 14038
last 3838 length 14038
last 4917 length 21130
CNF 3838 vars 14038 clauses
CNF 9392 vars 39059 clauses
CNF 4917 vars 21130 clauses
last 4784 length 20162
CNF 4784 vars 20162 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6100, clauses: 24026
last 6100 length 24026
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3838, clauses: 14038, status: Satisfied, time: 0.162435649s
CNF 6100 vars 24026 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10731, clauses: 44611
last 10731 length 44611
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9392, clauses: 39059, status: Unsatisfied, time: 0.21360906s
CNF 10731 vars 44611 clauses
last 1583 length 6611
CNF 1583 vars 6611 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6100, clauses: 24026, status: Unsatisfied, time: 0.142032142s
last 4144 length 17895
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 1464 length 6081
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4909, clauses: 19141
last 4186 length 17368
last 1738 length 7447
CNF 4144 vars 17895 clauses
last 2007 length 8700
**************************************************
last 4909 length 19141
CNF 1738 vars 7447 clauses
CNF 2007 vars 8700 clauses
summary
**************************************************
SRS with 7 rules on 3 letters       mirror
SRS with 7 rules on 3 letters       context
SRS with 13 rules on 3 letters       mirror
SRS with 13 rules on 3 letters       DP
SRS with 9 strict rules and 13 weak rules on 6 letters       weights
SRS with 6 strict rules and 13 weak rules on 5 letters       EDG
SRS with 6 strict rules and 13 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 13 weak rules on 5 letters       weights
SRS with 0 strict rules and 13 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [b, b, b] {- Input 0 -}
  [a, c] -> [c, b, b] {- Input 1 -}
  [b, a] -> [a, a, a] {- Input 2 -}
  [b, c] -> [c, c, c] {- Input 3 -}
  [a] -> [] {- Input 4 -}
  [b] -> [] {- Input 5 -}
  [c] -> [] {- Input 6 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a] -> [b, b, b] {- Mirror (Input 0) -}
  [c, a] -> [b, b, c] {- Mirror (Input 1) -}
  [a, b] -> [a, a, a] {- Mirror (Input 2) -}
  [c, b] -> [c, c, c] {- Mirror (Input 3) -}
  [a] -> [] {- Mirror (Input 4) -}
  [b] -> [] {- Mirror (Input 5) -}
  [c] -> [] {- Mirror (Input 6) -}
reason
  context
   property Termination
has value Just True
for SRS
  [b, a] -> [b, b, b] {- Mirror (Input 0) -}
  [c, a] -> [b, b, c] {- Mirror (Input 1) -}
  [a, b] -> [a, a, a] {- Mirror (Input 2) -}
  [c, b] -> [c, c, c] {- Mirror (Input 3) -}
  [a, a] -> [a] {- Mirror (Input 4) -}
  [b, a] -> [b] {- Mirror (Input 4) -}
  [c, a] -> [c] {- Mirror (Input 4) -}
  [a, b] -> [a] {- Mirror (Input 5) -}
  [b, b] -> [b] {- Mirror (Input 5) -}
  [c, b] -> [c] {- Mirror (Input 5) -}
  [a, c] -> [a] {- Mirror (Input 6) -}
  [b, c] -> [b] {- Mirror (Input 6) -}
  [c, c] -> [c] {- Mirror (Input 6) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b] -> [b, b, b] {- Input 0 -}
  [a, c] -> [c, b, b] {- Input 1 -}
  [b, a] -> [a, a, a] {- Input 2 -}
  [b, c] -> [c, c, c] {- Input 3 -}
  [a, a] -> [a] {- Input 4 -}
  [a, b] -> [b] {- Input 4 -}
  [a, c] -> [c] {- Input 4 -}
  [b, a] -> [a] {- Input 5 -}
  [b, b] -> [b] {- Input 5 -}
  [b, c] -> [c] {- Input 5 -}
  [c, a] -> [a] {- Input 6 -}
  [c, b] -> [b] {- Input 6 -}
  [c, c] -> [c] {- Input 6 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [b, c] ->= [c, c, c] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 4) -}
  [a, b] ->= [b] {- DP Nontop (Input 4) -}
  [a, c] ->= [c] {- DP Nontop (Input 4) -}
  [b, a] ->= [a] {- DP Nontop (Input 5) -}
  [b, b] ->= [b] {- DP Nontop (Input 5) -}
  [b, c] ->= [c] {- DP Nontop (Input 5) -}
  [c, a] ->= [a] {- DP Nontop (Input 6) -}
  [c, b] ->= [b] {- DP Nontop (Input 6) -}
  [c, c] ->= [c] {- DP Nontop (Input 6) -}
  [a#, b] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [a#, b] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#, c] |-> [c#, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [b#, a] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, c] |-> [c#, c] {- DP (Top 1) (Input 3) -}
  [b#, c] |-> [c#, c, c] {- DP (Top 0) (Input 3) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [b, c] ->= [c, c, c] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 4) -}
  [a, b] ->= [b] {- DP Nontop (Input 4) -}CNF 4909 vars 19141 clauses

  [a, c] ->= [c] {- DP Nontop (Input 4) -}
  [b, a] ->= [a] {- DP Nontop (Input 5) -}
  [b, b] ->= [b] {- DP Nontop (Input 5) -}
  [b, c] ->= [c] {- DP Nontop (Input 5) -}
  [c, a] ->= [a] {- DP Nontop (Input 6) -}
  [c, b] ->= [b] {- DP Nontop (Input 6) -}
  [c, c] ->= [c] {- DP Nontop (Input 6) -}
  [a#, b] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [a#, b] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, a] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [b#, a] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, a] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [a#, b] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [a#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, b] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, a, a] {- DP Nontop (Input 2) -}Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16904, clauses: 68197

  last 16904 length 68197
[b, c] ->= [c, c, c] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 4) -}
  [a, b] ->= [b] {- DP Nontop (Input 4) -}
  [a, c] ->= [c] {- DP Nontop (Input 4) -}
  [b, a] ->= [a] {- DP Nontop (Input 5) -}
  [b, b] ->= [b] {- DP Nontop (Input 5) -}
  [b, c] ->= [c] {- DP Nontop (Input 5) -}
  [c, a] ->= [a] {- DP Nontop (Input 6) -}
  [c, b] ->= [b] {- DP Nontop (Input 6) -}
  [c, c] ->= [c] {- DP Nontop (Input 6) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 12A 14A 14A - \
        | 12A 14A 14A - |
        | 12A 14A 14A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 14A 14A 14A - \
        | 14A 14A 14A - |
        | 14A 14A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [a#, b] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, b] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [b, c] ->= [c, c, c] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 4) -}
  [a, b] ->= [b] {- DP Nontop (Input 4) -}
  [a, c] ->= [c] {- DP Nontop (Input 4) -}
  [b, a] ->= [a] {- DP Nontop (Input 5) -}
  [b, b] ->= [b] {- DP Nontop (Input 5) -}
  [b, c] ->= [c] {- DP Nontop (Input 5) -}
  [c, a] ->= [a] {- DP Nontop (Input 6) -}
  [c, b] ->= [b] {- DP Nontop (Input 6) -}
  [c, c] ->= [c] {- DP Nontop (Input 6) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [b, c] ->= [c, c, c] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 4) -}
  [a, b] ->= [b] {- DP Nontop (Input 4) -}
  [a, c] ->= [c] {- DP Nontop (Input 4) -}
  [b, a] ->= [a] {- DP Nontop (Input 5) -}
  [b, b] ->= [b] {- DP Nontop (Input 5) -}
  [b, c] ->= [c] {- DP Nontop (Input 5) -}
  [c, a] ->= [a] {- DP Nontop (Input 6) -}
  [c, b] ->= [b] {- DP Nontop (Input 6) -}
  [c, c] ->= [c] {- DP Nontop (Input 6) -}
reason
  EDG

**************************************************
skeleton: \Mirror(7,3)\Context\Mirror(13,3)\Deepee(9/13,6)\Weight\EDG(6/13,5)\Matrix{\Arctic}{3}(4/13,5)\Weight(0/13,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                    = 16 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 ,
F                    alphabet_size = 4 , total_length = 59} , self = 57 , parent = Nothing ,
F                    duration = 0.214445296000 , status = Fail , start = 2025-09-03 13:39:28.797045605
F                    UTC , finish = 2025-09-03 13:39:29.011490901 UTC , thread_cap_info = ("ThreadId
F                    67", 2, False)}
F                    
| F                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| F                  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size
| F                  = 4 , total_length = 59} , self = 87 , parent = Nothing , duration = 0.471948074000
| F                  , status = Fail , start = 2025-09-03 13:39:28.812783913 UTC , finish =
| F                  2025-09-03 13:39:29.284731987 UTC , thread_cap_info = ("ThreadId 70", 2,
| F                  False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | F                = 42 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 210} , self = 60 , parent = Nothing , duration = 0.216946978000 , status
| | F                = Fail , start = 2025-09-03 13:39:28.845855649 UTC , finish = 2025-09-03
| | F                13:39:29.062802627 UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| | F                
| | | S              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | S              = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | S              = 42 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | S              = 210} , self = 59 , parent = Nothing , duration = 0.200330538000 , status
| | | S              = Success , start = 2025-09-03 13:39:28.860346589 UTC , finish = 2025-09-03
| | | S              13:39:29.060677127 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | | S              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | | F            = 7 , num_top_rules = 7 , num_weak_rules = 42 , alphabet_size = 11 , total_length
| | | | F            = 243} , self = 66 , parent = Nothing , duration = 0.259106933000 , status
| | | | F            = Fail , start = 2025-09-03 13:39:28.862190715 UTC , finish = 2025-09-03
| | | | F            13:39:29.121297648 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | F            
| | | | | S          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | S          = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | | | S          = 7 , num_top_rules = 7 , num_weak_rules = 42 , alphabet_size = 11 , total_length
| | | | | S          = 243} , self = 63 , parent = Nothing , duration = 0.221065520000 , status
| | | | | S          = Success , start = 2025-09-03 13:39:28.880338802 UTC , finish = 2025-09-03
| | | | | S          13:39:29.101404322 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | S          
| | | | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S        = 19 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 13 ,
| | | | | | S        alphabet_size = 5 , total_length = 72} , self = 84 , parent = Nothing ,
| | | | | | S        duration = 0.392912161000 , status = Success , start = 2025-09-03 13:39:28.882332603
| | | | | | S        UTC , finish = 2025-09-03 13:39:29.275244764 UTC , thread_cap_info = ("ThreadId
| | | | | | S        99", 2, False)}
| | | | | | S        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| | | | | | | E      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 13 , alphabet_size
| | | | | | | E      = 5 , total_length = 72} , self = 90 , parent = Nothing , duration = 0.477908084000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:28.921171539
| | | | | | | E      UTC , finish = 2025-09-03 13:39:29.399079623 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      101", 2, False)}
| | | | | | | E      
| | | | | | | | S    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | S    = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | | | | S    = 6 , num_top_rules = 6 , num_weak_rules = 42 , alphabet_size = 10 , total_length
| | | | | | | | S    = 246} , self = 82 , parent = Nothing , duration = 0.287500694000 , status
| | | | | | | | S    = Success , start = 2025-09-03 13:39:28.977538779 UTC , finish = 2025-09-03
| | | | | | | | S    13:39:29.265039473 UTC , thread_cap_info = ("ThreadId 105", 1, False)}
| | | | | | | | S    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 42 , alphabet_size = 10 , total_length
| | | | | | | | | F  = 246} , self = 77 , parent = Nothing , duration = 0.245933551000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 13:39:28.977540903 UTC , finish = 2025-09-03
| | | | | | | | | F  13:39:29.223474454 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| | | | | | | | | F  
F | | | | | | | | |  
  | | S | | | | | |  
  | F   | | | | | |  
F |     | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F |     | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |     | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |     | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |     | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |     | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
F |     | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size
F |     | | | | | |  = 4 , total_length = 59} , self = 91 , parent = Nothing , duration = 0.326180355000
F |     | | | | | |  , status = Fail , start = 2025-09-03 13:39:29.076362312 UTC , finish =
F |     | | | | | |  2025-09-03 13:39:29.402542667 UTC , thread_cap_info = ("ThreadId 112",
F |     | | | | | |  2, False)}
F |     | | | | | |  
| |     | S | | | |  
| |     F   | | | |  
| |         | | | F  
| |         | | S    
| |         S |      
| | F         |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F         |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F         |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F         |      = 48 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 42 ,
| | F         |      alphabet_size = 10 , total_length = 246} , self = 93 , parent = Nothing
| | F         |      , duration = 0.139538878000 , status = Fail , start = 2025-09-03 13:39:29.282070493
| | F         |      UTC , finish = 2025-09-03 13:39:29.421609371 UTC , thread_cap_info = ("ThreadId
| | F         |      150", 1, False)}
| | F         |      
| F |         |      
|   |         E      
F   |                
    F                
