last 4544 length 32133
last 3032 length 21069
last 2791 length 11346
last 2539 length 10095
CNF 4544 vars 32133 clauses
CNF 3032 vars 21069 clauses
CNF 2539 vars 10095 clauses
CNF 2791 vars 11346 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9056, clauses: 32232
last 9056 length 32232
CNF 9056 vars 32232 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15109, clauses: 54007
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9056, clauses: 32232, status: Satisfied, time: 0.329415443s
last 15109 length 54007
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30353, clauses: 125315
CNF 15109 vars 54007 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15109, clauses: 54007, status: Satisfied, time: 0.504692875s
last 2112 length 10530
CNF 2112 vars 10530 clauses
last 2775 length 14826
CNF 2775 vars 14826 clauses
last 2757 length 11212
CNF 2757 vars 11212 clauses
last 2473 length 9843
CNF 2473 vars 9843 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8857, clauses: 31312
last 8857 length 31312
CNF 8857 vars 31312 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14898, clauses: 53186
last 14898 length 53186
CNF 14898 vars 53186 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14898, clauses: 53186, status: Satisfied, time: 0.368854904s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30017, clauses: 123901
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8857, clauses: 31312, status: Unsatisfied, time: 1.171393535s
last 30017 length 123901
last 2427 length 9673
CNF 30017 vars 123901 clauses
CNF 2427 vars 9673 clauses
last 2750 length 11191
CNF 2750 vars 11191 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18562, clauses: 72054
last 18562 length 72054
CNF 18562 vars 72054 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14792, clauses: 52761
last 14792 length 52761
CNF 14792 vars 52761 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14792, clauses: 52761, status: Satisfied, time: 0.427913068s
last 2692 length 10959
CNF 2692 vars 10959 clauses
last 2383 length 9499
CNF 2383 vars 9499 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14488, clauses: 51628
last 14488 length 51628
CNF 14488 vars 51628 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18562, clauses: 72054, status: Unsatisfied, time: 2.236517554s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 38150, clauses: 157131
last 38150 length 157131
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14361, clauses: 53440
last 14361 length 53440
CNF 14361 vars 53440 clauses
CNF 38150 vars 157131 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14488, clauses: 51628, status: Satisfied, time: 1.335065s
last 2658 length 10825
CNF 2658 vars 10825 clauses
last 2317 length 9247
CNF 2317 vars 9247 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14277, clauses: 50807
last 14277 length 50807
CNF 14277 vars 50807 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37812, clauses: 155715
last 37812 length 155715
CNF 37812 vars 155715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14277, clauses: 50807, status: Unsatisfied, time: 2.818570121s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24102, clauses: 93287
last 24102 length 93287
CNF 24102 vars 93287 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37812, clauses: 155715, status: Satisfied, time: 3.218097127s
last 2251 length 8995
last 2624 length 10691
CNF 2251 vars 8995 clauses
CNF 2624 vars 10691 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 53199, clauses: 210320
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14361, clauses: 53440, status: Unsatisfied, time: 7.042719207s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14066, clauses: 49986
last 53199 length 210320
last 14066 length 49986
CNF 14066 vars 49986 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37474, clauses: 154299
last 37474 length 154299
CNF 53199 vars 210320 clauses
CNF 37474 vars 154299 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26993, clauses: 99931
last 26993 length 99931
CNF 26993 vars 99931 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14066, clauses: 49986, status: Unsatisfied, time: 2.184891896s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37474, clauses: 154299, status: Satisfied, time: 2.648199582s
last 1453 length 6011
last 1906 length 7983
CNF 1906 vars 7983 clauses
CNF 1453 vars 6011 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8797, clauses: 30793
last 8797 length 30793
CNF 8797 vars 30793 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8797, clauses: 30793, status: Unsatisfied, time: 1.090368382s
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29723, clauses: 122649
last 29723 length 122649
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18386, clauses: 71282
last 18386 length 71282
CNF 18386 vars 71282 clauses
CNF 29723 vars 122649 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18386, clauses: 71282, status: Unsatisfied, time: 2.076817767s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14257, clauses: 52744
last 14257 length 52744
[Info] pool sizes (success) 93801 seen 37120 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 14257 vars 52744 clauses
**************************************************
summary
**************************************************
SRS with 26 rules on 16 letters       looping derivation
from
  [BA, AB, ABB, b, a]
to
  [BABBBA, B, B, BA, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]
via 98 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BA, A] {- Input 2 -}
  [BA, b] -> [BAB] {- Input 3 -}
  [BAB, a] -> [BAB, A] {- Input 4 -}
  [BAB, b] -> [BABB] {- Input 5 -}
  [BABB, a] -> [BABB, A] {- Input 6 -}
  [BABB, b] -> [BABBB] {- Input 7 -}
  [BABBB, a] -> [BABBBA] {- Input 8 -}
  [BABBB, b] -> [BABBB, B] {- Input 9 -}
  [BABBBA, a] -> [BABBBAA] {- Input 10 -}
  [BABBBA, b] -> [BABBBA, B] {- Input 11 -}
  [BABBBAA, a] -> [BABBBAA, A] {- Input 12 -}
  [BABBBAA, b] -> [BABBBAAB] {- Input 13 -}
  [BABBBAAB, a] -> [BABBBAABA] {- Input 14 -}
  [BABBBAAB, b] -> [BABBBAAB, B] {- Input 15 -}
  [BABBBAABA] -> [a, b, b, b, a] {- Input 16 -}
  [A, a] -> [A, A] {- Input 17 -}
  [A, b] -> [AB] {- Input 18 -}
  [AB, a] -> [AB, A] {- Input 19 -}
  [AB, b] -> [ABB] {- Input 20 -}
  [ABB, a] -> [ABB, A] {- Input 21 -}
  [ABB, b] -> [ABBB] {- Input 22 -}
  [ABBB, a] -> [ABBBA] {- Input 23 -}
  [ABBB, b] -> [ABBB, B] {- Input 24 -}
  [ABBBA] -> [b, a, b, b, b, a, a, b, a] {- Input 25 -}
reason
  Nontermination
    Derive   { from = [BA, AB, ABB, b, a], via = [(Step   { rule = 22, position = 2}, [BA, AB, ABBB, a]), (Step   { rule = 23, position = 2}, [BA, AB, ABBBA]), (Step   { rule = 25, position = 2}, [BA, AB, b, a, b, b, b, a, a, b, a]), (Step   { rule = 20, position = 1}, [BA, ABB, a, b, b, b, a, a, b, a]), (Step   { rule = 21, position = 1}, [BA, ABB, A, b, b, b, a, a, b, a]), (Step   { rule = 18, position = 2}, [BA, ABB, AB, b, b, a, a, b, a]), (Step   { rule = 20, position = 2}, [BA, ABB, ABB, b, a, a, b, a]), (Step   { rule = 22, position = 2}, [BA, ABB, ABBB, a, a, b, a]), (Step   { rule = 23, position = 2}, [BA, ABB, ABBBA, a, b, a]), (Step   { rule = 25, position = 2}, [BA, ABB, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 1}, [BA, ABBB, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 1}, [BA, ABBBA, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 1}, [BA, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 3, position = 0}, [BAB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 4, position = 0}, [BAB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 1}, [BAB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 1}, [BAB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 1}, [BAB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 1}, [BAB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 1}, [BAB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 5, position = 0}, [BABB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 6, position = 0}, [BABB, A, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 1}, [BABB, AB, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 1}, [BABB, ABB, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 1}, [BABB, ABBB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 1}, [BABB, ABBBA, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 1}, [BABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 7, position = 0}, [BABBB, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 8, position = 0}, [BABBBA, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 11, position = 0}, [BABBBA, B, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 1, position = 1}, [BABBBA, B, B, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 1, position = 2}, [BABBBA, B, B, B, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 0, position = 3}, [BABBBA, B, B, BA, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 2, position = 3}, [BABBBA, B, B, BA, A, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 4}, [BABBBA, B, B, BA, AB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 4}, [BABBBA, B, B, BA, AB, A, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 17, position = 5}, [BABBBA, B, B, BA, AB, A, A, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABBBA, B, B, BA, AB, A, AB, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 6}, [BABBBA, B, B, BA, AB, A, AB, A, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 17, position = 7}, [BABBBA, B, B, BA, AB, A, AB, A, A, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, AB, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, AB, A, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, AB, b, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, ABB, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, ABBB, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, ABBBA, a, b, a, a, b, a]), (Step   { rule = 25, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, a, b, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, A, b, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, AB, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, ABB, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, ABBB, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, ABBBA, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABBB, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABBBA, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 7}, [BABBBA, B, B, BA, AB, A, AB, AB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 7}, [BABBBA, B, B, BA, AB, A, AB, AB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABB, A, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, AB, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, ABB, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, ABBB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, ABBBA, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABBB, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABBBA, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 7}, [BABBBA, B, B, BA, AB, A, AB, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBA, B, B, BA, AB, A, ABB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 6}, [BABBBA, B, B, BA, AB, A, ABB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBA, B, B, BA, AB, A, ABBB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBA, B, B, BA, AB, A, ABBBA, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBA, B, B, BA, AB, A, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 5}, [BABBBA, B, B, BA, AB, AB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 5}, [BABBBA, B, B, BA, AB, AB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABBBA, B, B, BA, AB, AB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBA, B, B, BA, AB, AB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBA, B, B, BA, AB, AB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBA, B, B, BA, AB, AB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBA, B, B, BA, AB, AB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 5}, [BABBBA, B, B, BA, AB, ABB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 5}, [BABBBA, B, B, BA, AB, ABB, A, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABBBA, B, B, BA, AB, ABB, AB, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBA, B, B, BA, AB, ABB, ABB, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBA, B, B, BA, AB, ABB, ABBB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBA, B, B, BA, AB, ABB, ABBBA, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBA, B, B, BA, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a])], to = [BABBBA, B, B, BA, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]}

**************************************************
skeleton: (26,16)\Loop{98}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 11
  max duration 3.928666609000
  min duration 0.000089461000
  total durat. 7.731466744000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 1512
      , num_strict_rules = 632
      , num_top_rules = 632
      , num_weak_rules = 880
      , alphabet_size = 434
      , total_length = 9352}
    , self = 101
    , parent = Nothing
    , duration = 3.793301400000
    , status = Success
    , start = 2025-09-03 11:19:05.25667742 UTC
    , finish = 2025-09-03 11:19:09.04997882 UTC
    , thread_cap_info = ("ThreadId 113", 3, False)}
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 1316
      , num_strict_rules = 436
      , num_top_rules = 436
      , num_weak_rules = 880
      , alphabet_size = 290
      , total_length = 9128}
    , self = 105
    , parent = Nothing
    , duration = 3.928666609000
    , status = Success
    , start = 2025-09-03 11:19:05.51633828 UTC
    , finish = 2025-09-03 11:19:09.445004889 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.575686013000
  min duration 0.124758685000
  total durat. 2.411491273000
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.045901713000
  min duration 3.036453647000
  total durat. 6.082355360000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1028
      , num_strict_rules = 324
      , num_top_rules = 324
      , num_weak_rules = 704
      , alphabet_size = 222
      , total_length = 6460}
    , self = 113
    , parent = Nothing
    , duration = 3.036453647000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:09.657734914 UTC
    , finish = 2025-09-03 11:19:12.694188561 UTC
    , thread_cap_info = ("ThreadId 173", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 856
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 832
      , alphabet_size = 239
      , total_length = 5624}
    , self = 112
    , parent = Nothing
    , duration = 3.045901713000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:09.52143207 UTC
    , finish = 2025-09-03 11:19:12.567333783 UTC
    , thread_cap_info = ("ThreadId 170", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.087005471000
  min duration 3.087005471000
  total durat. 3.087005471000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 880
      , num_strict_rules = 880
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 242
      , total_length = 5808}
    , self = 92
    , parent = Nothing
    , duration = 3.087005471000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:04.648585343 UTC
    , finish = 2025-09-03 11:19:07.735590814 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.555617182000
  min duration 0.108736793000
  total durat. 2.310863993000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.030943089000
  min duration 3.016633717000
  total durat. 6.047576806000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1028
      , num_strict_rules = 324
      , num_top_rules = 324
      , num_weak_rules = 704
      , alphabet_size = 222
      , total_length = 6460}
    , self = 114
    , parent = Nothing
    , duration = 3.016633717000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:09.677572058 UTC
    , finish = 2025-09-03 11:19:12.694205775 UTC
    , thread_cap_info = ("ThreadId 174", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 856
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 832
      , alphabet_size = 239
      , total_length = 5624}
    , self = 111
    , parent = Nothing
    , duration = 3.030943089000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:09.510758212 UTC
    , finish = 2025-09-03 11:19:12.541701301 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.116429856000
  min duration 3.116429856000
  total durat. 3.116429856000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 880
      , num_strict_rules = 880
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 242
      , total_length = 5808}
    , self = 93
    , parent = Nothing
    , duration = 3.116429856000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:04.648592178 UTC
    , finish = 2025-09-03 11:19:07.765022034 UTC
    , thread_cap_info = ("ThreadId 123", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.911888581000
  min duration 4.009436305000
  total durat. 8.921324886000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 195}
    , self = 128
    , parent = Nothing
    , duration = 4.009436305000
    , status = Success
    , start = 2025-09-03 11:19:14.876527619 UTC
    , finish = 2025-09-03 11:19:18.885963924 UTC
    , thread_cap_info = ("ThreadId 198", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 199}
    , self = 116
    , parent = Nothing
    , duration = 4.911888581000
    , status = Success
    , start = 2025-09-03 11:19:09.224413413 UTC
    , finish = 2025-09-03 11:19:14.136301994 UTC
    , thread_cap_info = ("ThreadId 167", 0, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 9.061570547000
  min duration 9.013727580000
  total durat. 27.096671998000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 856
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 832
      , alphabet_size = 239
      , total_length = 5624}
    , self = 139
    , parent = Nothing
    , duration = 9.013727580000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:12.601875913 UTC
    , finish = 2025-09-03 11:19:21.615603493 UTC
    , thread_cap_info = ("ThreadId 181", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1028
      , num_strict_rules = 324
      , num_top_rules = 324
      , num_weak_rules = 704
      , alphabet_size = 222
      , total_length = 6460}
    , self = 140
    , parent = Nothing
    , duration = 9.021373871000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:12.694230696 UTC
    , finish = 2025-09-03 11:19:21.715604567 UTC
    , thread_cap_info = ("ThreadId 185", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 115
    , parent = Nothing
    , duration = 9.061570547000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:04.020754946 UTC
    , finish = 2025-09-03 11:19:13.082325493 UTC
    , thread_cap_info = ("ThreadId 100", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.740271385000
  min duration 0.810482141000
  total durat. 5.700188849000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 207}
    , self = 85
    , parent = Nothing
    , duration = 1.003317523000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:05.79862467 UTC
    , finish = 2025-09-03 11:19:06.801942193 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 59
      , num_strict_rules = 33
      , num_top_rules = 33
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 210}
    , self = 74
    , parent = Nothing
    , duration = 1.172897059000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:04.268619552 UTC
    , finish = 2025-09-03 11:19:05.441516611 UTC
    , thread_cap_info = ("ThreadId 106", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 31
      , num_top_rules = 31
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 203}
    , self = 97
    , parent = Nothing
    , duration = 1.740271385000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:07.302186094 UTC
    , finish = 2025-09-03 11:19:09.042457479 UTC
    , thread_cap_info = ("ThreadId 149", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.792923678000
  min duration 2.737565902000
  total durat. 5.530489580000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 94
    , parent = Nothing
    , duration = 2.737565902000
    , status = Fail
    , start = 2025-09-03 11:19:05.445171072 UTC
    , finish = 2025-09-03 11:19:08.182736974 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 123}
    , self = 142
    , parent = Nothing
    , duration = 2.792923678000
    , status = Fail
    , start = 2025-09-03 11:19:21.438173166 UTC
    , finish = 2025-09-03 11:19:24.231096844 UTC
    , thread_cap_info = ("ThreadId 217", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.703046013000
  min duration 1.009846826000
  total durat. 2.712892839000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 195}
    , self = 130
    , parent = Nothing
    , duration = 1.009846826000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:17.979166685 UTC
    , finish = 2025-09-03 11:19:18.989013511 UTC
    , thread_cap_info = ("ThreadId 205", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 199}
    , self = 118
    , parent = Nothing
    , duration = 1.703046013000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:12.51561484 UTC
    , finish = 2025-09-03 11:19:14.218660853 UTC
    , thread_cap_info = ("ThreadId 177", 0, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 12.045235070000
  min duration 12.045235070000
  total durat. 12.045235070000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 143
    , parent = Nothing
    , duration = 12.045235070000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:13.122805173 UTC
    , finish = 2025-09-03 11:19:25.168040243 UTC
    , thread_cap_info = ("ThreadId 187", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.046995706000
  min duration 0.746046203000
  total durat. 5.870695534000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 34
      , num_top_rules = 34
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 214}
    , self = 48
    , parent = Nothing
    , duration = 1.012859076000
    , status = Success
    , start = 2025-09-03 11:19:02.875870673 UTC
    , finish = 2025-09-03 11:19:03.888729749 UTC
    , thread_cap_info = ("ThreadId 81", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 207}
    , self = 83
    , parent = Nothing
    , duration = 1.013925660000
    , status = Success
    , start = 2025-09-03 11:19:05.758415637 UTC
    , finish = 2025-09-03 11:19:06.772341297 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 59
      , num_strict_rules = 33
      , num_top_rules = 33
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 210}
    , self = 71
    , parent = Nothing
    , duration = 1.050868889000
    , status = Success
    , start = 2025-09-03 11:19:04.195998454 UTC
    , finish = 2025-09-03 11:19:05.246867343 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 31
      , num_top_rules = 31
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 203}
    , self = 95
    , parent = Nothing
    , duration = 2.046995706000
    , status = Success
    , start = 2025-09-03 11:19:06.974751833 UTC
    , finish = 2025-09-03 11:19:09.021747539 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 9.034215340000
  min duration 1.427762432000
  total durat. 27.811928499000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 78
    , parent = Nothing
    , duration = 1.427762432000
    , status = Fail
    , start = 2025-09-03 11:19:04.01736978 UTC
    , finish = 2025-09-03 11:19:05.445132212 UTC
    , thread_cap_info = ("ThreadId 99", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 123}
    , self = 137
    , parent = Nothing
    , duration = 1.887543189000
    , status = Fail
    , start = 2025-09-03 11:19:19.495633014 UTC
    , finish = 2025-09-03 11:19:21.383176203 UTC
    , thread_cap_info = ("ThreadId 214", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 195}
    , self = 127
    , parent = Nothing
    , duration = 3.089132342000
    , status = Fail
    , start = 2025-09-03 11:19:14.873297116 UTC
    , finish = 2025-09-03 11:19:17.962429458 UTC
    , thread_cap_info = ("ThreadId 197", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 199}
    , self = 110
    , parent = Nothing
    , duration = 3.345668111000
    , status = Fail
    , start = 2025-09-03 11:19:09.16581218 UTC
    , finish = 2025-09-03 11:19:12.511480291 UTC
    , thread_cap_info = ("ThreadId 165", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1028
      , num_strict_rules = 324
      , num_top_rules = 324
      , num_weak_rules = 704
      , alphabet_size = 222
      , total_length = 6460}
    , self = 141
    , parent = Nothing
    , duration = 9.027607085000
    , status = Fail
    , start = 2025-09-03 11:19:12.69558382 UTC
    , finish = 2025-09-03 11:19:21.723190905 UTC
    , thread_cap_info = ("ThreadId 184", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 856
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 832
      , alphabet_size = 239
      , total_length = 5624}
    , self = 138
    , parent = Nothing
    , duration = 9.034215340000
    , status = Fail
    , start = 2025-09-03 11:19:12.555255216 UTC
    , finish = 2025-09-03 11:19:21.589470556 UTC
    , thread_cap_info = ("ThreadId 180", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 7.500246186000
  min duration 7.500246186000
  total durat. 7.500246186000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 125
    , parent = Nothing
    , duration = 7.500246186000
    , status = Fail
    , start = 2025-09-03 11:19:08.195621999 UTC
    , finish = 2025-09-03 11:19:15.695868185 UTC
    , thread_cap_info = ("ThreadId 154", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 14.432306992000
  min duration 14.432306992000
  total durat. 14.432306992000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 26
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 100}
    , self = 126
    , parent = Nothing
    , duration = 14.432306992000
    , status = Fail
    , start = 2025-09-03 11:19:02.582392163 UTC
    , finish = 2025-09-03 11:19:17.014699155 UTC
    , thread_cap_info = ("ThreadId 37", 2, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 8.244371093000
  min duration 8.244371093000
  total durat. 8.244371093000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 26
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 100}
    , self = 144
    , parent = Nothing
    , duration = 8.244371093000
    , status = Success
    , start = 2025-09-03 11:19:17.029987399 UTC
    , finish = 2025-09-03 11:19:25.274358492 UTC
    , thread_cap_info = ("ThreadId 204", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 7
  max duration 1.443769432000
  min duration 0.001436831000
  total durat. 4.449250472000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 6656
      , num_strict_rules = 6656
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 256
      , total_length = 38912}
    , self = 57
    , parent = Nothing
    , duration = 1.423166999000
    , status = Success
    , start = 2025-09-03 11:19:02.667874212 UTC
    , finish = 2025-09-03 11:19:04.091041211 UTC
    , thread_cap_info = ("ThreadId 65", 3, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 6656
      , num_strict_rules = 6656
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 256
      , total_length = 38912}
    , self = 59
    , parent = Nothing
    , duration = 1.443769432000
    , status = Success
    , start = 2025-09-03 11:19:02.669208934 UTC
    , finish = 2025-09-03 11:19:04.112978366 UTC
    , thread_cap_info = ("ThreadId 66", 2, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 26 , num_strict_rules = 26
F                  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
F                  = 100} , self = 126 , parent = Nothing , duration = 14.432306992000 , status
F                  = Fail , start = 2025-09-03 11:19:02.582392163 UTC , finish = 2025-09-03
F                  11:19:17.014699155 UTC , thread_cap_info = ("ThreadId 37", 2, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| F                = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| F                = 142} , self = 38 , parent = Nothing , duration = 0.219220754000 , status
| F                = Fail , start = 2025-09-03 11:19:02.593419047 UTC , finish = 2025-09-03
| F                11:19:02.812639801 UTC , thread_cap_info = ("ThreadId 58", 0, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | F              = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | F              = 142} , self = 37 , parent = Nothing , duration = 0.212606656000 , status
| | F              = Fail , start = 2025-09-03 11:19:02.597084026 UTC , finish = 2025-09-03
| | F              11:19:02.809690682 UTC , thread_cap_info = ("ThreadId 59", 0, False)}
| | F              
| | | S            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S            = Size { num_rules = 6656 , num_strict_rules = 6656 , num_top_rules = 0
| | | S            , num_weak_rules = 0 , alphabet_size = 256 , total_length = 38912} , self
| | | S            = 57 , parent = Nothing , duration = 1.423166999000 , status = Success
| | | S            , start = 2025-09-03 11:19:02.667874212 UTC , finish = 2025-09-03 11:19:04.091041211
| | | S            UTC , thread_cap_info = ("ThreadId 65", 3, False)}
| | | S            
| | | | S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S          = Size { num_rules = 6656 , num_strict_rules = 6656 , num_top_rules = 0
| | | | S          , num_weak_rules = 0 , alphabet_size = 256 , total_length = 38912} , self
| | | | S          = 59 , parent = Nothing , duration = 1.443769432000 , status = Success
| | | | S          , start = 2025-09-03 11:19:02.669208934 UTC , finish = 2025-09-03 11:19:04.112978366
| | | | S          UTC , thread_cap_info = ("ThreadId 66", 2, False)}
| | | | S          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | F        = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F        total_length = 214} , self = 39 , parent = Nothing , duration = 0.124758685000
| | | | | F        , status = Fail , start = 2025-09-03 11:19:02.69105667 UTC , finish = 2025-09-03
| | | | | F        11:19:02.815815355 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | F      = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F      total_length = 214} , self = 40 , parent = Nothing , duration = 0.226278376000
| | | | | | F      , status = Fail , start = 2025-09-03 11:19:02.691059302 UTC , finish =
| | | | | | F      2025-09-03 11:19:02.917337678 UTC , thread_cap_info = ("ThreadId 70", 0,
| | | | | | F      False)}
| | | | | | F      
| | F | | | |      
| F   | | | |      
| S   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   | | | |      = 34 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 26 ,
| S   | | | |      alphabet_size = 19 , total_length = 142} , self = 41 , parent = Nothing
| S   | | | |      Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14257, clauses: 52744, status: Satisfied, time: 1.244090286s
, duration = 0.746046203000 , status = Success , start = 2025-09-03 11:19:02.812676245
| S   | | | |      UTC , finish = 2025-09-03 11:19:03.558722448 UTC , thread_cap_info = ("ThreadId
| S   | | | |      79", 0, False)}
| S   | | | |      
| |   | | F |      
| | E | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | E | |   |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size
| | E | |   |      = 19 , total_length = 142} , self = 43 , parent = Nothing , duration =
| | E | |   |      0.810482141000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |   |      11:19:02.83599299 UTC , finish = 2025-09-03 11:19:03.646475131 UTC , thread_cap_info
| | E | |   |      = ("ThreadId 80", 0, False)}
| | E | |   |      
| | | | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |      = 60 , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 26
| | | | | S |      , alphabet_size = 28 , total_length = 214} , self = 48 , parent = Nothing
| | | | | S |      , duration = 1.012859076000 , status = Success , start = 2025-09-03 11:19:02.875870673
| | | | | S |      UTC , finish = 2025-09-03 11:19:03.888729749 UTC , thread_cap_info = ("ThreadId
| | | | | S |      81", 0, False)}
| | | | | S |      
| | | | | | F      
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | | | | E      , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size
| | | | | | E      = 28 , total_length = 214} , self = 50 , parent = Nothing , duration =
| | | | | | E      0.973220741000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E      11:19:02.975598761 UTC , finish = 2025-09-03 11:19:03.948819502 UTC , thread_cap_info
| | | | | | E      = ("ThreadId 82", 0, False)}
| | | | | | E      
| S | | | | |      
|   E | | | |      
| F   | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F   | | | |      = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| F   | | | |      = 134} , self = 55 , parent = Nothing , duration = 0.201886526000 , status
| F   | | | |      = Fail , start = 2025-09-03 11:19:03.808842194 UTC , finish = 2025-09-03
| F   | | | |      11:19:04.01072872 UTC , thread_cap_info = ("ThreadId 89", 0, False)}
| F   | | | |      
| | F | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | F | | | |      = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | F | | | |      = 134} , self = 56 , parent = Nothing , duration = 0.193145641000 , status
| | F | | | |      = Fail , start = 2025-09-03 11:19:03.817603932 UTC , finish = 2025-09-03
| | F | | | |      11:19:04.010749573 UTC , thread_cap_info = ("ThreadId 90", 0, False)}
| | F | | | |      
| | | | | S |      
| | | | |   E      
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | | | | F        = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F        total_length = 210} , self = 61 , parent = Nothing , duration = 0.222053336000
| | | | | F        , status = Fail , start = 2025-09-03 11:19:03.955678434 UTC , finish =
| | | | | F        2025-09-03 11:19:04.17773177 UTC , thread_cap_info = ("ThreadId 96", 0,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | | | | | F      = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F      total_length = 210} , self = 60 , parent = Nothing , duration = 0.179078848000
| | | | | | F      , status = Fail , start = 2025-09-03 11:19:03.959471189 UTC , finish =
| | | | | | F      2025-09-03 11:19:04.138550037 UTC , thread_cap_info = ("ThreadId 97", 0,
| | | | | | F      False)}
| | | | | | F      
| F | | | | |      
|   F | | | |      
| F   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | | | |      = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| F   | | | |      alphabet_size = 19 , total_length = 134} , self = 78 , parent = Nothing
| F   | | | |      , duration = 1.427762432000 , status = Fail , start = 2025-09-03 11:19:04.01736978
| F   | | | |      UTC , finish = 2025-09-03 11:19:05.445132212 UTC , thread_cap_info = ("ThreadId
| F   | | | |      99", 0, False)}
| F   | | | |      
| | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | E | | | |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| | E | | | |      = 19 , total_length = 134} , self = 115 , parent = Nothing , duration =
| | E | | | |      9.061570547000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:04.020754946
| | E | | | |      UTC , finish = 2025-09-03 11:19:13.082325493 UTC , thread_cap_info = ("ThreadId
| | E | | | |      100", 0, False)}
| | E | | | |      
| | | S | | |      
| | |   S | |      
| | | F   | |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | F   | |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | F   | |      num_rules = 880 , num_strict_rules = 880 , num_top_rules = 0 , num_weak_rules
| | | F   | |      = 0 , alphabet_size = 242 , total_length = 5808} , self = 68 , parent =
| | | F   | |      Nothing , duration = 0.501512321000 , status = Fail , start = 2025-09-03
| | | F   | |      11:19:04.113008946 UTC , finish = 2025-09-03 11:19:04.614521267 UTC , thread_cap_info
| | | F   | |      = ("ThreadId 103", 2, False)}
| | | F   | |      
| | | |   | F      
| | | |   F        
| | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S          = 59 , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 26
| | | | S          , alphabet_size = 28 , total_length = 210} , self = 71 , parent = Nothing
| | | | S          , duration = 1.050868889000 , status = Success , start = 2025-09-03 11:19:04.195998454
| | | | S          UTC , finish = 2025-09-03 11:19:05.246867343 UTC , thread_cap_info = ("ThreadId
| | | | S          105", 0, False)}
| | | | S          
| | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 59
| | | | | E        , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size
| | | | | E        = 28 , total_length = 210} , self = 74 , parent = Nothing , duration =
| | | | | E        1.172897059000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E        11:19:04.268619552 UTC , finish = 2025-09-03 11:19:05.441516611 UTC , thread_cap_info
| | | | | E        = ("ThreadId 106", 0, False)}
| | | | | E        
| | | | | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S      = Size { num_rules = 2240 , num_strict_rules = 1360 , num_top_rules = 1360
| | | | | | S      , num_weak_rules = 880 , alphabet_size = 446 , total_length = 12560} ,
| | | | | | S      self = 72 , parent = Nothing , duration = 0.677238753000 , status = Success
| | | | | | S      , start = 2025-09-03 11:19:04.579419689 UTC , finish = 2025-09-03 11:19:05.256658442
| | | | | | S      UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | | | | | S      
| | | F | | |      
| | | S | | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S | | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S | | |      = Size { num_rules = 2480 , num_strict_rules = 1600 , num_top_rules = 1600
| | | S | | |      , num_weak_rules = 880 , alphabet_size = 292 , total_length = 17232} ,
| | | S | | |      self = 80 , parent = Nothing , duration = 0.896710668000 , status = Success
| | | S | | |      , start = 2025-09-03 11:19:04.619606304 UTC , finish = 2025-09-03 11:19:05.516316972
| | | S | | |      UTC , thread_cap_info = ("ThreadId 118", 3, False)}
| | | S | | |      
| | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 880 , num_strict_rules
| | | | | | | E    = 880 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 242 ,
| | | | | | | E    total_length = 5808} , self = 92 , parent = Nothing , duration = 3.087005471000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:04.648585343
| | | | | | | E    UTC , finish = 2025-09-03 11:19:07.735590814 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    121", 2, False)}
| | | | | | | E    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 880 , num_strict_rules
| | | | | | | | E  = 880 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 242 ,
| | | | | | | | E  total_length = 5808} , self = 93 , parent = Nothing , duration = 3.116429856000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:04.648592178
| | | | | | | | E  UTC , finish = 2025-09-03 11:19:07.765022034 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  123", 2, False)}
| | | | | | | | E  
| | | | S | | | |  
| | | |   | S | |  
| | | | S |   | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | S |   | |  verbose = False}" , input_size = Size { num_rules = 1512 , num_strict_rules
| | | | S |   | |  = 632 , num_top_rules = 632 , num_weak_rules = 880 , alphabet_size = 434
| | | | S |   | |  , total_length = 9352} , self = 101 , parent = Nothing , duration = 3.793301400000
| | | | S |   | |  , status = Success , start = 2025-09-03 11:19:05.25667742 UTC , finish
| | | | S |   | |  = 2025-09-03 11:19:09.04997882 UTC , thread_cap_info = ("ThreadId 113",
| | | | S |   | |  3, False)}
| | | | S |   | |  
| | | | | E   | |  
| F | | |     | |  
| F | | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| F | | |     | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| F | | |     | |  = 19 , total_length = 134} , self = 94 , parent = Nothing , duration =
| F | | |     | |  2.737565902000 , status = Fail , start = 2025-09-03 11:19:05.445171072
| F | | |     | |  UTC , finish = 2025-09-03 11:19:08.182736974 UTC , thread_cap_info = ("ThreadId
| F | | |     | |  130", 0, False)}
| F | | |     | |  
| | | | | F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
| | | | | F   | |  = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F   | |  total_length = 207} , self = 81 , parent = Nothing , duration = 0.295542291000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:19:05.449445478 UTC , finish =
| | | | | F   | |  2025-09-03 11:19:05.744987769 UTC , thread_cap_info = ("ThreadId 132",
| | | | | F   | |  0, False)}
| | | | | F   | |  
| | | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
| | | | | | F | |  = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F | |  total_length = 207} , self = 82 , parent = Nothing , duration = 0.281147173000
| | | | | | F | |  , status = Fail , start = 2025-09-03 11:19:05.476026339 UTC , finish =
| | | | | | F | |  2025-09-03 11:19:05.757173512 UTC , thread_cap_info = ("ThreadId 133",
| | | | | | F | |  0, False)}
| | | | | | F | |  
| | | S | | | | |  
| | | S | | | | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | S | | | | |  verbose = False}" , input_size = Size { num_rules = 1316 , num_strict_rules
| | | S | | | | |  = 436 , num_top_rules = 436 , num_weak_rules = 880 , alphabet_size = 290
| | | S | | | | |  , total_length = 9128} , self = 105 , parent = Nothing , duration = 3.928666609000
| | | S | | | | |  , status = Success , start = 2025-09-03 11:19:05.51633828 UTC , finish
| | | S | | | | |  = 2025-09-03 11:19:09.445004889 UTC , thread_cap_info = ("ThreadId 115",
| | | S | | | | |  3, False)}
| | | S | | | | |  
| | | | | F | | |  
| | | | |   F | |  
| | | | | S   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   | |  = 58 , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 26
| | | | | S   | |  , alphabet_size = 28 , total_length = 207} , self = 83 , parent = Nothing
| | | | | S   | |  , duration = 1.013925660000 , status = Success , start = 2025-09-03 11:19:05.758415637
| | | | | S   | |  UTC , finish = 2025-09-03 11:19:06.772341297 UTC , thread_cap_info = ("ThreadId
| | | | | S   | |  136", 0, False)}
| | | | | S   | |  
| | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 58
| | | | | | E | |  , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size
| | | | | | E | |  = 28 , total_length = 207} , self = 85 , parent = Nothing , duration =
| | | | | | E | |  1.003317523000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E | |  11:19:05.79862467 UTC , finish = 2025-09-03 11:19:06.801942193 UTC , thread_cap_info
| | | | | | E | |  = ("ThreadId 137", 0, False)}
| | | | | | E | |  
| | | | | S | | |  
| | | | |   E | |  
| | | | | F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | F   | |  = 31 , num_top_rules = 31 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F   | |  total_length = 203} , self = 91 , parent = Nothing , duration = 0.182650378000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:19:06.816780104 UTC , finish =
| | | | | F   | |  2025-09-03 11:19:06.999430482 UTC , thread_cap_info = ("ThreadId 144",
| | | | | F   | |  0, False)}
| | | | | F   | |  
| | | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | F | |  = 31 , num_top_rules = 31 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F | |  total_length = 203} , self = 90 , parent = Nothing , duration = 0.157942144000
| | | | | | F | |  , status = Fail , start = 2025-09-03 11:19:06.8167843 UTC , finish = 2025-09-03
| | | | | | F | |  11:19:06.974726444 UTC , thread_cap_info = ("ThreadId 145", 0, False)}
| | | | | | F | |  
| | | | | | F | |  
| | | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S | |  = 57 , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 26
| | | | | | S | |  , alphabet_size = 28 , total_length = 203} , self = 95 , parent = Nothing
| | | | | | S | |  , duration = 2.046995706000 , status = Success , start = 2025-09-03 11:19:06.974751833
| | | | | | S | |  UTC , finish = 2025-09-03 11:19:09.021747539 UTC , thread_cap_info = ("ThreadId
| | | | | | S | |  148", 0, False)}
| | | | | | S | |  
| | | | | F | | |  
| | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 57
| | | | | E | | |  , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 26 , alphabet_size
| | | | | E | | |  = 28 , total_length = 203} , self = 97 , parent = Nothing , duration =
| | | | | E | | |  1.740271385000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E | | |  11:19:07.302186094 UTC , finish = 2025-09-03 11:19:09.042457479 UTC , thread_cap_info
| | | | | E | | |  = ("ThreadId 149", 0, False)}
| | | | | E | | |  
| | | | | | | E |  
| | | | | | |   E  
| F | | | | |      
| F | | | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | |      = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| F | | | | |      alphabet_size = 19 , total_length = 134} , self = 125 , parent = Nothing
| F | | | | |      , duration = 7.500246186000 , status = Fail , start = 2025-09-03 11:19:08.195621999
| F | | | | |      UTC , finish = 2025-09-03 11:19:15.695868185 UTC , thread_cap_info = ("ThreadId
| F | | | | |      154", 0, False)}
| F | | | | |      
| | | | | | S      
| | | | | E        
| | | | S          
| | | | F          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | F          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | F          = Size { num_rules = 1028 , num_strict_rules = 324 , num_top_rules = 324
| | | | F          , num_weak_rules = 704 , alphabet_size = 222 , total_length = 6460} , self
| | | | F          = 108 , parent = Nothing , duration = 0.601561638000 , status = Fail ,
| | | | F          start = 2025-09-03 11:19:09.049991287 UTC , finish = 2025-09-03 11:19:09.651552925
| | | | F          UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | F        = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F        total_length = 199} , self = 104 , parent = Nothing , duration = 0.149035401000
| | | | | F        , status = Fail , start = 2025-09-03 11:19:09.052542283 UTC , finish =
| | | | | F        2025-09-03 11:19:09.201577684 UTC , thread_cap_info = ("ThreadId 162",
| | | | | F        0, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | | F      = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F      total_length = 199} , self = 103 , parent = Nothing , duration = 0.108736793000
| | | | | | F      , status = Fail , start = 2025-09-03 11:19:09.057051361 UTC , finish =
| | | | | | F      2025-09-03 11:19:09.165788154 UTC , thread_cap_info = ("ThreadId 163",
| | | | | | F      0, False)}
| | | | | | F      
| | | | | | F      
| | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F      = 56 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26
| | | | | | F      , alphabet_size = 28 , total_length = 199} , self = 110 , parent = Nothing
| | | | | | F      , duration = 3.345668111000 , status = Fail , start = 2025-09-03 11:19:09.16581218
| | | | | | F      UTC , finish = 2025-09-03 11:19:12.511480291 UTC , thread_cap_info = ("ThreadId
| | | | | | F      165", 0, False)}
| | | | | | F      
| | | | | F |      
| | | | | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 56
| | | | | S |      , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size
| | | | | S |      = 28 , total_length = 199} , self = 116 , parent = Nothing , duration =
| | | | | S |      4.911888581000 , status = Success , start = 2025-09-03 11:19:09.224413413
| | | | | S |      UTC , finish = 2025-09-03 11:19:14.136301994 UTC , thread_cap_info = ("ThreadId
| | | | | S |      167", 0, False)}
| | | | | S |      
| | | S | | |      
| | | E | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 856 , num_strict_rules
| | | E | | |      = 24 , num_top_rules = 24 , num_weak_rules = 832 , alphabet_size = 239
| | | E | | |      , total_length = 5624} , self = 111 , parent = Nothing , duration = 3.030943089000
| | | E | | |      , status = Except "<<timeout>>" , start = 2025-09-03 11:19:09.510758212
| | | E | | |      UTC , finish = 2025-09-03 11:19:12.541701301 UTC , thread_cap_info = ("ThreadId
| | | E | | |      171", 2, False)}
| | | E | | |      
| | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 856 , num_strict_rules
| | | | | | | E    = 24 , num_top_rules = 24 , num_weak_rules = 832 , alphabet_size = 239
| | | | | | | E    , total_length = 5624} , self = 112 , parent = Nothing , duration = 3.045901713000
| | | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-03 11:19:09.52143207
| | | | | | | E    UTC , finish = 2025-09-03 11:19:12.567333783 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    170", 2, False)}
| | | | | | | E    
| | | | F | | |    
| | | | E | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 1028 ,
| | | | E | | |    num_strict_rules = 324 , num_top_rules = 324 , num_weak_rules = 704 , alphabet_size
| | | | E | | |    = 222 , total_length = 6460} , self = 113 , parent = Nothing , duration
| | | | E | | |    = 3.036453647000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:09.657734914
| | | | E | | |    UTC , finish = 2025-09-03 11:19:12.694188561 UTC , thread_cap_info = ("ThreadId
| | | | E | | |    173", 3, False)}
| | | | E | | |    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 1028 ,
| | | | | | | | E  num_strict_rules = 324 , num_top_rules = 324 , num_weak_rules = 704 , alphabet_size
| | | | | | | | E  = 222 , total_length = 6460} , self = 114 , parent = Nothing , duration
| | | | | | | | E  = 3.016633717000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:09.677572058
| | | | | | | | E  UTC , finish = 2025-09-03 11:19:12.694205775 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  174", 3, False)}
| | | | | | | | E  
| | | | | | F | |  
| | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 56
| | | | | | E | |  , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size
| | | | | | E | |  = 28 , total_length = 199} , self = 118 , parent = Nothing , duration =
| | | | | | E | |  1.703046013000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E | |  11:19:12.51561484 UTC , finish = 2025-09-03 11:19:14.218660853 UTC , thread_cap_info
| | | | | | E | |  = ("ThreadId 177", 0, False)}
| | | | | | E | |  
| | | E | | | | |  
| | | F | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | | |  = 856 , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 832
| | | F | | | | |  , alphabet_size = 239 , total_length = 5624} , self = 138 , parent = Nothing
| | | F | | | | |  , duration = 9.034215340000 , status = Fail , start = 2025-09-03 11:19:12.555255216
| | | F | | | | |  UTC , finish = 2025-09-03 11:19:21.589470556 UTC , thread_cap_info = ("ThreadId
| | | F | | | | |  180", 2, False)}
| | | F | | | | |  
| | | | | | | E |  
| | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 856
| | | | | | | E |  , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 832 , alphabet_size
| | | | | | | E |  = 239 , total_length = 5624} , self = 139 , parent = Nothing , duration
| | | | | | | E |  = 9.013727580000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:12.601875913
| | | | | | | E |  UTC , finish = 2025-09-03 11:19:21.615603493 UTC , thread_cap_info = ("ThreadId
| | | | | | | E |  181", 2, False)}
| | | | | | | E |  
| | | | E | | | |  
| | | |   | | | E  
| | | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1028
| | | | E | | |    , num_strict_rules = 324 , num_top_rules = 324 , num_weak_rules = 704 ,
| | | | E | | |    alphabet_size = 222 , total_length = 6460} , self = 140 , parent = Nothing
| | | | E | | |    , duration = 9.021373871000 , status = Except "<<timeout>>" , start = 2025-09-03
| | | | E | | |    11:19:12.694230696 UTC , finish = 2025-09-03 11:19:21.715604567 UTC , thread_cap_info
| | | | E | | |    = ("ThreadId 185", 3, False)}
| | | | E | | |    
| | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F  = 1028 , num_strict_rules = 324 , num_top_rules = 324 , num_weak_rules
| | | | | | | | F  = 704 , alphabet_size = 222 , total_length = 6460} , self = 141 , parent
| | | | | | | | F  = Nothing , duration = 9.027607085000 , status = Fail , start = 2025-09-03
| | | | | | | | F  11:19:12.69558382 UTC , finish = 2025-09-03 11:19:21.723190905 UTC , thread_cap_info
| | | | | | | | F  = ("ThreadId 184", 3, False)}
| | | | | | | | F  
| | E | | | | | |  
| | E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | E | | | | | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| | E | | | | | |  = 19 , total_length = 134} , self = 143 , parent = Nothing , duration =
| | E | | | | | |  12.045235070000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:13.122805173
| | E | | | | | |  UTC , finish = 2025-09-03 11:19:25.168040243 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |  187", 0, False)}
| | E | | | | | |  
| | | | | S | | |  
| | | | |   E | |  
| | | | | F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | | | F   | |  = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F   | |  total_length = 195} , self = 123 , parent = Nothing , duration = 0.575686013000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:19:14.297525414 UTC , finish =
| | | | | F   | |  2025-09-03 11:19:14.873211427 UTC , thread_cap_info = ("ThreadId 193",
| | | | | F   | |  0, False)}
| | | | | F   | |  
| | | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | | | | F | |  = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F | |  total_length = 195} , self = 124 , parent = Nothing , duration = 0.555617182000
| | | | | | F | |  , status = Fail , start = 2025-09-03 11:19:14.31765873 UTC , finish = 2025-09-03
| | | | | | F | |  11:19:14.873275912 UTC , thread_cap_info = ("ThreadId 194", 0, False)}
| | | | | | F | |  
| | | | | F | | |  
| | | | |   F | |  
| | | | | F   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   | |  = 55 , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 26
| | | | | F   | |  , alphabet_size = 28 , total_length = 195} , self = 127 , parent = Nothing
| | | | | F   | |  , duration = 3.089132342000 , status = Fail , start = 2025-09-03 11:19:14.873297116
| | | | | F   | |  UTC , finish = 2025-09-03 11:19:17.962429458 UTC , thread_cap_info = ("ThreadId
| | | | | F   | |  197", 0, False)}
| | | | | F   | |  
| | | | | | S | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| | | | | | S | |  , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size
| | | | | | S | |  = 28 , total_length = 195} , self = 128 , parent = Nothing , duration =
| | | | | | S | |  4.009436305000 , status = Success , start = 2025-09-03 11:19:14.876527619
| | | | | | S | |  UTC , finish = 2025-09-03 11:19:18.885963924 UTC , thread_cap_info = ("ThreadId
| | | | | | S | |  198", 0, False)}
| | | | | | S | |  
| F | | | | | | |  
F   | | | | | | |  
S   | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S   | | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
S   | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S   | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S   | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S   | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S   | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S   | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S   | | | | | | |  = True})" , input_size = Size { num_rules = 26 , num_strict_rules = 26
S   | | | | | | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
S   | | | | | | |  = 100} , self = 144 , parent = Nothing , duration = 8.244371093000 , status
S   | | | | | | |  = Success , start = 2025-09-03 11:19:17.029987399 UTC , finish = 2025-09-03
S   | | | | | | |  11:19:25.274358492 UTC , thread_cap_info = ("ThreadId 204", 2, False)}
S   | | | | | | |  
|   | | | F | | |  
| E | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| E | | |   | | |  , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size
| E | | |   | | |  = 28 , total_length = 195} , self = 130 , parent = Nothing , duration =
| E | | |   | | |  1.009846826000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | | |   | | |  11:19:17.979166685 UTC , finish = 2025-09-03 11:19:18.989013511 UTC , thread_cap_info
| E | | |   | | |  = ("ThreadId 205", 0, False)}
| E | | |   | | |  
| | | | |   S | |  
| E | | |     | |  
| F | | |     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F | | |     | |  = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| F | | |     | |  = 123} , self = 136 , parent = Nothing , duration = 0.440657889000 , status
| F | | |     | |  = Fail , start = 2025-09-03 11:19:19.059027229 UTC , finish = 2025-09-03
| F | | |     | |  11:19:19.499685118 UTC , thread_cap_info = ("ThreadId 210", 0, False)}
| F | | |     | |  
| | | | | F   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | F   | |  = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | | | F   | |  = 123} , self = 135 , parent = Nothing , duration = 0.396311180000 , status
| | | | | F   | |  = Fail , start = 2025-09-03 11:19:19.080933488 UTC , finish = 2025-09-03
| | | | | F   | |  11:19:19.477244668 UTC , thread_cap_info = ("ThreadId 211", 0, False)}
| | | | | F   | |  
| | | | | F   | |  
| | | | | F   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   | |  = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| | | | | F   | |  alphabet_size = 19 , total_length = 123} , self = 137 , parent = Nothing
| | | | | F   | |  , duration = 1.887543189000 , status = Fail , start = 2025-09-03 11:19:19.495633014
| | | | | F   | |  UTC , finish = 2025-09-03 11:19:21.383176203 UTC , thread_cap_info = ("ThreadId
| | | | | F   | |  214", 0, False)}
| | | | | F   | |  
| F | | | |   | |  
|   | | | F   | |  
| F | | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| F | | |     | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| F | | |     | |  = 19 , total_length = 123} , self = 142 , parent = Nothing , duration =
| F | | |     | |  2.792923678000 , status = Fail , start = 2025-09-03 11:19:21.438173166
| F | | |     | |  UTC , finish = 2025-09-03 11:19:24.231096844 UTC , thread_cap_info = ("ThreadId
| F | | |     | |  217", 0, False)}
| F | | |     | |  
| | | F |     | |  
| | |   |     E |  
| | |   E       |  
| | |           F  
| F |              
|   E              
S                  
