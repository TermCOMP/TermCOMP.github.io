last 3618 length 20295
CNF 3618 vars 20295 clauses
last 3843 length 20679
last 5053 length 25908
CNF 3843 vars 20679 clauses
CNF 5053 vars 25908 clauses
last 3264 length 15900
CNF 3264 vars 15900 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2060, clauses: 8145
last 2060 length 8145
CNF 2060 vars 8145 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2051, clauses: 8076
last 2051 length 8076
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2060, clauses: 8145, status: Unsatisfied, time: 0.089958238s
CNF 2051 vars 8076 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2051, clauses: 8076, status: Unsatisfied, time: 0.168171323s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6493, clauses: 27293
last 6493 length 27293
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3946, clauses: 17085
last 3946 length 17085
CNF 6493 vars 27293 clauses
CNF 3946 vars 17085 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7077, clauses: 29745
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4286, clauses: 18328
last 7077 length 29745
last 4286 length 18328
CNF 4286 vars 18328 clauses
CNF 7077 vars 29745 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4286, clauses: 18328, status: Unsatisfied, time: 0.241724883s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3946, clauses: 17085, status: Unsatisfied, time: 0.498168944s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3417, clauses: 14108
last 3417 length 14108
CNF 3417 vars 14108 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3429, clauses: 14304
last 3429 length 14304
CNF 3429 vars 14304 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6493, clauses: 27293, status: Unsatisfied, time: 0.930632999s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7077, clauses: 29745, status: Unsatisfied, time: 0.758330439s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3417, clauses: 14108, status: Satisfied, time: 0.380751805s
last 10428 length 54317
last 13646 length 114540
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3429, clauses: 14304, status: Unsatisfied, time: 0.727133338s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       DP
SRS with 6 strict rules and 1 weak rules on 3 letters       EDG
SRS with 3 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a, b, b, a, b, a] -> [ a , b , a , b , a , b , b , a , b , b , a , b , b , a ] {- Input 0 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b, b, a, b] -> [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- Mirror (Input 0) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [a#] {- DP (Top 13) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a ] {- DP (Top 11) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a , b , a ] {- DP (Top 9) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , a , b , a ] {- DP (Top 6) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , b , a , b , a , b , a ] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, b, b, a, b, b, a, b] |-> [a#] {- DP (Top 13) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a ] {- DP (Top 11) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a , b , a ] {- DP (Top 9) (Mirror (Input 0)) -}
  [a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
reason
  ( a
  , Wk  / 0A  0A  0A  0A  - \
        | -4A 0A  0A  0A  - |
        | -4A -4A -4A 0A  - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( b
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( a#
  , Wk  / 1A 5A 5A 5A - \
        | 1A 5A 5A 5A - |
        | 1A 5A 5A 5A - |
        | 1A 5A 5A 5A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(1,2)\Deepee(6/1,3)\EDG(3/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.319980355000
  min duration 1.312727268000
  total durat. 2.632707623000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 78}
    , self = 65
    , parent = Nothing
    , duration = 1.312727268000
    , status = Fail
    , start = 2025-09-03 12:54:20.345396956 UTC
    , finish = 2025-09-03 12:54:21.658124224 UTC
    , thread_cap_info = ("ThreadId 108", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 63}
    , self = 66
    , parent = Nothing
    , duration = 1.319980355000
    , status = Fail
    , start = 2025-09-03 12:54:20.398147069 UTC
    , finish = 2025-09-03 12:54:21.718127424 UTC
    , thread_cap_info = ("ThreadId 110", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.634118113000
  min duration 0.414911898000
  total durat. 1.049030011000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.134463797000
  min duration 2.134463797000
  total durat. 2.134463797000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 73
    , parent = Nothing
    , duration = 2.134463797000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:19.943666126 UTC
    , finish = 2025-09-03 12:54:22.078129923 UTC
    , thread_cap_info = ("ThreadId 61", 0, False)}
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F            = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
F            = 54 , parent = Nothing , duration = 0.234488935000 , status = Fail , start
F            = 2025-09-03 12:54:19.939107716 UTC , finish = 2025-09-03 12:54:20.173596651
F            UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F            
| E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E          = 24} , self = 73 , parent = Nothing , duration = 2.134463797000 , status
| E          = Except "AsyncCancelled" , start = 2025-09-03 12:54:19.943666126 UTC ,
| E          finish = 2025-09-03 12:54:22.078129923 UTC , thread_cap_info = ("ThreadId
| E          61", 0, False)}
| E          
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F        = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F        = 63} , self = 57 , parent = Nothing , duration = 0.382379885000 , status
| | F        = Fail , start = 2025-09-03 12:54:19.958692188 UTC , finish = 2025-09-03
| | F        12:54:20.341072073 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F      = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F      = 63} , self = 59 , parent = Nothing , duration = 0.381559383000 , status
| | | F      = Fail , start = 2025-09-03 12:54:19.97907485 UTC , finish = 2025-09-03
| | | F      12:54:20.360634233 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | F    = 78} , self = 58 , parent = Nothing , duration = 0.281657660000 , status
| | | | F    = Fail , start = 2025-09-03 12:54:20.059416207 UTC , finish = 2025-09-03
| | | | F    12:54:20.341073867 UTC , thread_cap_info = ("ThreadId 92", 3, False)}
| | | | F    
| | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | F  = 78} , self = 56 , parent = Nothing , duration = 0.173731440000 , status
| | | | | F  = Fail , start = 2025-09-03 12:54:20.138754706 UTC , finish = 2025-09-03
| | | | | F  12:54:20.312486146 UTC , thread_cap_info = ("ThreadId 95", 3, False)}
| | | | | F  
F | | | | |  
  | | | | F  
F | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | |    = 3 , total_length = 78} , self = 60 , parent = Nothing , duration = 0.122923312000
F | | | |    , status = Fail , start = 2025-09-03 12:54:20.31251732 UTC , finish = 2025-09-03
F | | | |    12:54:20.435440632 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
F | | | |    
| | F | |    
| |   | F    
| | F |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | F |      = 3 , total_length = 63} , self = 62 , parent = Nothing , duration = 0.216639008000
| | F |      , status = Fail , start = 2025-09-03 12:54:20.345376886 UTC , finish =
| | F |      2025-09-03 12:54:20.562015894 UTC , thread_cap_info = ("ThreadId 107",
| | F |      3, False)}
| | F |      
| | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | F    = 3 , total_length = 78} , self = 65 , parent = Nothing , duration = 1.312727268000
| | | | F    , status = Fail , start = 2025-09-03 12:54:20.345396956 UTC , finish =
| | | | F    2025-09-03 12:54:21.658124224 UTC , thread_cap_info = ("ThreadId 108",
| | | | F    3, False)}
| | | | F    
| | | F |    
| | | F |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | F |    = 3 , total_length = 63} , self = 66 , parent = Nothing , duration = 1.319980355000
| | | F |    , status = Fail , start = 2025-09-03 12:54:20.398147069 UTC , finish =
| | | F |    2025-09-03 12:54:21.718127424 UTC , thread_cap_info = ("ThreadId 110",
| | | F |    3, False)}
| | | F |    
F | | | |    
F | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | |    = 3 , total_length = 78} , self = 64 , parent = Nothing , duration = 0.634118113000
F | | | |    , status = Fail , start = 2025-09-03 12:54:20.479711505 UTC , finish =
F | | | |    2025-09-03 12:54:21.113829618 UTC , thread_cap_info = ("ThreadId 113",
F | | | |    3, False)}
F | | | |    
| | F | |    
| | F | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | F | |    = 3 , total_length = 63} , self = 63 , parent = Nothing , duration = 0.414911898000
| | F | |    , status = Fail , start = 2025-09-03 12:54:20.604145576 UTC , finish =
| | F | |    2025-09-03 12:54:21.019057474 UTC , thread_cap_info = ("ThreadId 115",
| | F | |    3, False)}
| | F | |    
| | F | |    
| | S | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | S | |    = 3 , total_length = 63} , self = 67 , parent = Nothing , duration = 0.794628794000
| | S | |    , status = Success , start = 2025-09-03 12:54:21.039284398 UTC , finish
| | S | |    = 2025-09-03 12:54:21.833913192 UTC , thread_cap_info = ("ThreadId 119",
| | S | |    3, False)}
| | S | |    
F | | | |    
F | | | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | |    = 3 , total_length = 78} , self = 72 , parent = Nothing , duration = 0.897594541000
F | | | |    , status = Fail , start = 2025-09-03 12:54:21.166364811 UTC , finish =
F | | | |    2025-09-03 12:54:22.063959352 UTC , thread_cap_info = ("ThreadId 120",
F | | | |    3, False)}
F | | | |    
| | | | F    
| | | F      
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | E      = 3 , total_length = 63} , self = 69 , parent = Nothing , duration = 0.141768529000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.778625839
| | | E      UTC , finish = 2025-09-03 12:54:21.920394368 UTC , thread_cap_info = ("ThreadId
| | | E      124", 3, False)}
| | | E      
| | S |      
| |   E      
F |          
  E          
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10740, clauses: 49645
last 10740 length 49645
