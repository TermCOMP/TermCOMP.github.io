last 511 length 2191
CNF 511 vars 2191 clauses
last 641 length 2913
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2068, clauses: 7366
CNF 641 vars 2913 clauses
last 588 length 2581
last 703 length 2969
last 2068 length 7366
last 5104 length 27824
last 5693 length 28082
last 9952 length 54675
last 5677 length 40052
CNF 703 vars 2969 clauses
CNF 588 vars 2581 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5581, clauses: 22937
last 8608 length 51048
last 11140 length 52471
CNF 2068 vars 7366 clauses
CNF 5104 vars 27824 clauses
CNF 5693 vars 28082 clauses
CNF 5677 vars 40052 clauses
CNF 9952 vars 54675 clauses
last 5581 length 22937
CNF 8608 vars 51048 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2502, clauses: 9197
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2068, clauses: 7366, status: Satisfied, time: 0.44513044s
CNF 11140 vars 52471 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6260, clauses: 25792
last 2502 length 9197
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14103, clauses: 54158
last 631 length 2875
last 419 length 1831
last 6260 length 25792
CNF 2502 vars 9197 clauses
last 14103 length 54158
CNF 631 vars 2875 clauses
CNF 419 vars 1831 clauses
CNF 6260 vars 25792 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37832, clauses: 158060
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2502, clauses: 9197, status: Satisfied, time: 0.531699092s
CNF 14103 vars 54158 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15867, clauses: 62234
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1950, clauses: 6857
last 37832 length 158060
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5535, clauses: 22755
last 673 length 3092
last 516 length 2187
last 15867 length 62234
last 1950 length 6857
last 5535 length 22755
CNF 673 vars 3092 clauses
CNF 516 vars 2187 clauses
CNF 37832 vars 158060 clauses
CNF 1950 vars 6857 clauses
CNF 15867 vars 62234 clauses
CNF 5535 vars 22755 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2267, clauses: 8103
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 38955, clauses: 162683
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5921, clauses: 24353
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14103, clauses: 54158, status: Satisfied, time: 0.838055478s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1950, clauses: 6857, status: Unsatisfied, time: 0.348555495s
last 2267 length 8103
last 38955 length 162683
last 5921 length 24353
CNF 2267 vars 8103 clauses
CNF 5921 vars 24353 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3450, clauses: 13639
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2267, clauses: 8103, status: Satisfied, time: 0.155676524s
CNF 38955 vars 162683 clauses
last 3450 length 13639
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5921, clauses: 24353, status: Satisfied, time: 0.21729417s
last 5886 length 31264
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5535, clauses: 22755, status: Unsatisfied, time: 1.0187049s
CNF 3450 vars 13639 clauses
last 6633 length 43853
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 5 letters       EDG
SRS with 5 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [b, a, b, c, c, b] {- Input 1 -}
  [c, b] -> [a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, a] -> [b, a, b, c, c, b] {- Input 1 -}
  [c, b] -> [a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [a, a] -> [b, c, c, b, a, b] {- Mirror (Input 1) -}
  [b, c] -> [a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, c, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [a#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [a#, a] |-> [b#, a, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [b#, c, c, b, a, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [b#, c, c, b, a, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, c, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 1A 1A 3A - \
        | 1A 1A 3A - |
        | 1A 1A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 3A 3A - \
        | 1A 3A 3A - |
        | 1A 3A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, c, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, c, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, c, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, c, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee\EDG(5/5,5)\Matrix{\Arctic}{3}\EDG(4/5,5)\Matrix{\Arctic}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.967503129000
  min duration 0.029838200000
  total durat. 3.569020189000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.865612361000
  min duration 0.243620178000
  total durat. 3.688795287000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.262418579000
  min duration 1.262418579000
  total durat. 1.262418579000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 28}
    , self = 97
    , parent = Nothing
    , duration = 1.262418579000
    , status = Fail
    , start = 2025-09-03 11:47:11.591755716 UTC
    , finish = 2025-09-03 11:47:12.854174295 UTC
    , thread_cap_info = ("ThreadId 136", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.533902041000
  min duration 0.528485748000
  total durat. 3.984508668000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 43}
    , self = 77
    , parent = Nothing
    , duration = 1.121177042000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:47:10.551766031 UTC
    , finish = 2025-09-03 11:47:11.672943073 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 351}
    , self = 87
    , parent = Nothing
    , duration = 1.533902041000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:47:10.763355168 UTC
    , finish = 2025-09-03 11:47:12.297257209 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.512970241000
  min duration 0.502138502000
  total durat. 3.937295618000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 43}
    , self = 75
    , parent = Nothing
    , duration = 1.141683645000
    , status = Success
    , start = 2025-09-03 11:47:10.530943168 UTC
    , finish = 2025-09-03 11:47:11.672626813 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 351}
    , self = 84
    , parent = Nothing
    , duration = 1.512970241000
    , status = Success
    , start = 2025-09-03 11:47:10.657874137 UTC
    , finish = 2025-09-03 11:47:12.170844378 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.013478377000
  min duration 1.013478377000
  total durat. 1.013478377000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 72
    , parent = Nothing
    , duration = 1.013478377000
    , status = Fail
    , start = 2025-09-03 11:47:10.008696452 UTC
    , finish = 2025-09-03 11:47:11.022174829 UTC
    , thread_cap_info = ("ThreadId 35", 2, False)}
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 12} , self = 72 , parent = Nothing , duration = 1.013478377000 , status
F                      = Fail , start = 2025-09-03 11:47:10.008696452 UTC , finish = 2025-09-03
F                      11:47:11.022174829 UTC , thread_cap_info = ("ThreadId 35", 2, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| F                    = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 15 ,
| F                    total_length = 351} , self = 60 , parent = Nothing , duration = 0.628727350000
| F                    , status = Fail , start = 2025-09-03 11:47:10.029097417 UTC , finish =
| F                    2025-09-03 11:47:10.657824767 UTC , thread_cap_info = ("ThreadId 66", 0,
| F                    False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | F                  = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F                  CNF 5886 vars 31264 clauses
total_length = 414} , self = 71 , parent = Nothing , duration = 0.967503129000
| | F                  , status = Fail , start = 2025-09-03 11:47:10.029305276 UTC , finish =
| | F                  2025-09-03 11:47:10.996808405 UTC , thread_cap_info = ("ThreadId 68", 3,
| | F                  False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | F                = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | F                total_length = 414} , self = 63 , parent = Nothing , duration = 0.865612361000
| | | F                , status = Fail , start = 2025-09-03 11:47:10.029309723 UTC , finish =
| | | F                2025-09-03 11:47:10.894922084 UTC , thread_cap_info = ("ThreadId 69", 3,
| | | F                False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | F              = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | F              total_length = 351} , self = 62 , parent = Nothing , duration = 0.729165295000
| | | | F              , status = Fail , start = 2025-09-03 11:47:10.03415504 UTC , finish = 2025-09-03
| | | | F              11:47:10.763320335 UTC , thread_cap_info = ("ThreadId 65", 0, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F            = 162} , self = 59 , parent = Nothing , duration = 0.495343661000 , status
| | | | | F            = Fail , start = 2025-09-03 11:47:10.053563267 UTC , finish = 2025-09-03
| | | | | F            11:47:10.548906928 UTC , thread_cap_info = ("ThreadId 84", 2, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F          = 162} , self = 61 , parent = Nothing , duration = 0.637959077000 , status
| | | | | | F          = Fail , start = 2025-09-03 11:47:10.071754893 UTC , finish = 2025-09-03
| | | | | | F          11:47:10.70971397 UTC , thread_cap_info = ("ThreadId 86", 2, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | F        = 32} , self = 55 , parent = Nothing , duration = 0.259754229000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:47:10.113901646 UTC , finish = 2025-09-03
| | | | | | | F        11:47:10.373655875 UTC , thread_cap_info = ("ThreadId 91", 1, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | | F      = 43} , self = 58 , parent = Nothing , duration = 0.413504679000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 11:47:10.121666962 UTC , finish = 2025-09-03
| | | | | | | | F      11:47:10.535171641 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | F    = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | | | F    = 43} , self = 57 , parent = Nothing , duration = 0.406798294000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 11:47:10.121671721 UTC , finish = 2025-09-03
| | | | | | | | | F    11:47:10.528470015 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | S  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | | | | S  = 5 , total_length = 32} , self = 64 , parent = Nothing , duration = 0.780503230000
| | | | | | | | | | S  , status = Success , start = 2025-09-03 11:47:10.131769328 UTC , finish
| | | | | | | | | | S  = 2025-09-03 11:47:10.912272558 UTC , thread_cap_info = ("ThreadId 97",
| | | | | | | | | | S  1, False)}
| | | | | | | | | | S  
| | | | | | | F | | |  
| | | | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | E | | |  = 5 , total_length = 32} , self = 66 , parent = Nothing , duration = 0.528485748000
| | | | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:47:10.392511118
| | | | | | | E | | |  UTC , finish = 2025-09-03 11:47:10.920996866 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | | |  102", 1, False)}
| | | | | | | E | | |  
| | | | | | | | | F |  
| | | | | | | | | S |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | | | | | | S |  alphabet_size = 5 , total_length = 43} , self = 75 , parent = Nothing ,
| | | | | | | | | S |  duration = 1.141683645000 , status = Success , start = 2025-09-03 11:47:10.530943168
| | | | | | | | | S |  UTC , finish = 2025-09-03 11:47:11.672626813 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S |  114", 1, False)}
| | | | | | | | | S |  
| | | | | | | | F | |  
| | | | | F | |   | |  
| | | | | E | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | E | |   | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | E | |   | |  = 5 , total_length = 43} , self = 77 , parent = Nothing , duration = 1.121177042000
| | | | | E | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:47:10.551766031
| | | | | E | |   | |  UTC , finish = 2025-09-03 11:47:11.672943073 UTC , thread_cap_info = ("ThreadId
| | | | | E | |   | |  115", 1, False)}
| | | | | E | |   | |  
| F | | | | | |   | |  
| S | | | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |   | |  = 64 , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 27
| S | | | | | |   | |  , alphabet_size = 15 , total_length = 351} , self = 84 , parent = Nothing
| S | | | | | |   | |  , duration = 1.512970241000 , status = Success , start = 2025-09-03 11:47:10.657874137
| S | | | | | |   | |  UTC , finish = 2025-09-03 11:47:12.170844378 UTC , thread_cap_info = ("ThreadId
| S | | | | | |   | |  116", 0, False)}
| S | | | | | |   | |  
| | | | | | F |   | |  
| | | | F |   |   | |  
| | | | E |   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 64
| | | | E |   |   | |  , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size
| | | | E |   |   | |  = 15 , total_length = 351} , self = 87 , parent = Nothing , duration =
| | | | E |   |   | |  1.533902041000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E |   |   | |  11:47:10.763355168 UTC , finish = 2025-09-03 11:47:12.297257209 UTC , thread_cap_info
| | | | E |   |   | |  = ("ThreadId 120", 0, False)}
| | | | E |   |   | |  
| | | F | |   |   | |  
| | |   | |   |   | S  
| | |   | |   E   |    
| | | F | |       |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |       |    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F | |       |    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F | |       |    = 28} , self = 73 , parent = Nothing , duration = 0.646303462000 , status
| | | F | |       |    = Fail , start = 2025-09-03 11:47:10.921400374 UTC , finish = 2025-09-03
| | | F | |       |    11:47:11.567703836 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| | | F | |       |    
| | | | | | F     |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F     |    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F     |    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | F     |    = 28} , self = 74 , parent = Nothing , duration = 0.646323798000 , status
| | | | | | F     |    = Fail , start = 2025-09-03 11:47:10.921403551 UTC , finish = 2025-09-03
| | | | | | F     |    11:47:11.567727349 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | | | | F     |    
| | F | | | |     |    
F |   | | | |     |    
  |   F | | |     |    
  |     | | F     |    
F |     | |       |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |     | |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |     | |       |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |     | |       |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F |     | |       |    = 5 , total_length = 28} , self = 86 , parent = Nothing , duration = 0.612037674000
F |     | |       |    , status = Fail , start = 2025-09-03 11:47:11.572499104 UTC , finish =
F |     | |       |    2025-09-03 11:47:12.184536778 UTC , thread_cap_info = ("ThreadId 135",
F |     | |       |    1, False)}
F |     | |       |    
| | F   | |       |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F   | |       |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F   | |       |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F   | |       |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F   | |       |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F   | |       |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F   | |       |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F   | |       |    = 5 , total_length = 28} , self = 97 , parent = Nothing , duration = 1.262418579000
| | F   | |       |    , status = Fail , start = 2025-09-03 11:47:11.591755716 UTC , finish =
| | F   | |       |    2025-09-03 11:47:12.854174295 UTC , thread_cap_info = ("ThreadId 136",
| | F   | |       |    1, False)}
| | F   | |       |    
| | |   | |       S    
| | |   | E            
| | | F |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F |              = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F |              = 35} , self = 82 , parent = Nothing , duration = 0.243620178000 , status
| | | F |              = Fail , start = 2025-09-03 11:47:11.673254318 UTC , finish = 2025-09-03
| | | F |              11:47:11.916874496 UTC , thread_cap_info = ("ThreadId 142", 1, False)}
| | | F |              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F            = 35} , self = 83 , parent = Nothing , duration = 0.287361763000 , status
| | | | | F            = Fail , start = 2025-09-03 11:47:11.682595941 UTC , finish = 2025-09-03
| | | | | F            11:47:11.969957704 UTC , thread_cap_info = ("ThreadId 141", 1, False)}
| | | | | F            
| | | F | |            
| | | S | |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |            = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | S | |            = 5 , total_length = 35} , self = 92 , parent = Nothing , duration = 0.502138502000
| | | S | |            , status = Success , start = 2025-09-03 11:47:11.933838929 UTC , finish
| | | S | |            = 2025-09-03 11:47:12.435977431 UTC , thread_cap_info = ("ThreadId 149",
| | | S | |            1, False)}
| | | S | |            
| | | | | F            
| | | | | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | E            , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | E            = 5 , total_length = 35} , self = 94 , parent = Nothing , duration = 0.800943837000
| | | | | E            , status = Except "AsyncCancelled" , start = 2025-09-03 11:47:11.971221876
| | | | | E            UTC , finish = 2025-09-03 11:47:12.772165713 UTC , thread_cap_info = ("ThreadId
| | | | | E            150", 1, False)}
| | | | | E            
| S | | | |            
F   | | | |            
    | | E |            
    | S   |            
    |     E            
    F                  
