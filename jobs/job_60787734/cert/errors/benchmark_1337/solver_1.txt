last 774 length 3446
last 758 length 3388
CNF 774 vars 3446 clauses
last 507 length 2121
last 538 length 2238
CNF 758 vars 3388 clauses
CNF 538 vars 2238 clauses
CNF 507 vars 2121 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2564, clauses: 9165
last 2564 length 9165
last 4597 length 26172
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2458, clauses: 8740
last 5636 length 39897
CNF 2564 vars 9165 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7631, clauses: 31633
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7677, clauses: 31809
last 2458 length 8740
CNF 4597 vars 26172 clauses
CNF 5636 vars 39897 clauses
last 7631 length 31633
last 7677 length 31809
CNF 2458 vars 8740 clauses
CNF 7631 vars 31633 clauses
last 4627 length 19807
CNF 7677 vars 31809 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2564, clauses: 9165, status: Unsatisfied, time: 0.261236735s
last 5583 length 26013
last 7564 length 32606
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2458, clauses: 8740, status: Unsatisfied, time: 0.178047063s
last 8232 length 37167
CNF 4627 vars 19807 clauses
CNF 5583 vars 26013 clauses
CNF 7564 vars 32606 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7631, clauses: 31633, status: Satisfied, time: 0.247416261s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4804, clauses: 19139
CNF 8232 vars 37167 clauses
last 4804 length 19139
CNF 4804 vars 19139 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7677, clauses: 31809, status: Satisfied, time: 0.429421139s
last 411 length 1761
last 695 length 3147
CNF 411 vars 1761 clauses
CNF 695 vars 3147 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13013, clauses: 51078
last 13013 length 51078
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 33554, clauses: 140405
last 33554 length 140405
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1955, clauses: 6903
CNF 33554 vars 140405 clauses
CNF 13013 vars 51078 clauses
last 1955 length 6903
last 507 length 2121
last 758 length 3388
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6918, clauses: 28737
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12508, clauses: 48853
CNF 1955 vars 6903 clauses
CNF 507 vars 2121 clauses
CNF 758 vars 3388 clauses
last 6918 length 28737
last 12508 length 48853
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1955, clauses: 6903, status: Unsatisfied, time: 0.289663323s
CNF 6918 vars 28737 clauses
CNF 12508 vars 48853 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2458, clauses: 8740
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34165, clauses: 143046
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4228, clauses: 16922
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7631, clauses: 31633
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6918, clauses: 28737, status: Satisfied, time: 0.39606909s
last 2458 length 8740
last 34165 length 143046
last 7631 length 31633
CNF 2458 vars 8740 clauses
CNF 7631 vars 31633 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, a, c, c] {- Input 0 -}
  [c, a] -> [] {- Input 1 -}
  [c, b] -> [a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, a, c, c] {- Input 0 -}
  [a, c, a] -> [a] {- Input 1 -}
  [b, c, a] -> [b] {- Input 1 -}
  [c, c, a] -> [c] {- Input 1 -}
  [c, b] -> [a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, c, a, b, a] {- Mirror (Input 0) -}
  [a, c, a] -> [a] {- Mirror (Input 1) -}
  [a, c, b] -> [b] {- Mirror (Input 1) -}
  [a, c, c] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, c, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / - 0A 0A \
        | - 1A 1A |
        \ - -  0A / )
  ( b
  , Wk  / -  1A  1A \
        | 1A -1A 0A |
        \ -  -   0A / )
  ( c
  , Wk  / -  0A  1A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( a#
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
  ( b#
  , Wk  / 0A -2A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [a, a] ->= [c, c, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a, a] ->= [c, c, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a, a] ->= [c, c, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A -1A 1A \
        | 0A -   -  |
        \ -  -   0A / )
  ( b
  , Wk  / -1A 0A 0A \
        | -   1A -  |
        \ -   -  0A / )
  ( c
  , Wk  / -  0A 0A \
        | 1A -  1A |
        \ -  -  0A / )
  ( a#
  , Wk  / 1A -2A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, c, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee\EDG(3/5,5)\Matrix{\ArcticBZ}{3}(2/5,5)\Weight\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.662203699000
  min duration 0.032760608000
  total durat. 2.268869763000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.615699757000
  min duration 0.024732414000
  total durat. 2.143739653000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.708609146000
  min duration 0.518995575000
  total durat. 1.916957212000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.668739834000
  min duration 0.409322147000
  total durat. 1.579557926000
**************************************************
CNF 34165 vars 143046 clauses
F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                        = 12} , self = 59 , parent = Nothing , duration = 0.209084098000 , status
F                        = Fail , start = 2025-09-03 11:33:46.107665824 UTC , finish = 2025-09-03
F                        11:33:46.316749922 UTC , thread_cap_info = ("ThreadId 49", 1, False)}
F                        
| F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                      = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| F                      = 119} , self = 60 , parent = Nothing , duration = 0.317029081000 , status
| F                      = Fail , start = 2025-09-03 11:33:46.117941189 UTC , finish = 2025-09-03
| F                      11:33:46.43497027 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F                    = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | F                    = 119} , self = 61 , parent = Nothing , duration = 0.324598025000 , status
| | F                    = Fail , start = 2025-09-03 11:33:46.117945791 UTC , finish = 2025-09-03
| | F                    11:33:46.442543816 UTC , thread_cap_info = ("ThreadId 85", 0, False)}
| | F                    
| | | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | F                  = 12} , self = 64 , parent = Nothing , duration = 0.578281674000 , status
| | | F                  = Fail , start = 2025-09-03 11:33:46.119968029 UTC , finish = 2025-09-03
| | | F                  11:33:46.698249703 UTC , thread_cap_info = ("ThreadId 50", 1, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | | F                = 32 , num_top_rules = 32 , num_weak_rules = 18 , alphabet_size = 12 ,
| | | | F                total_length = 303} , self = 70 , parent = Nothing , duration = 0.661131828000
| | | | F                , status = Fail , start = 2025-09-03 11:33:46.127047218 UTC , finish =
| | | | F                2025-09-03 11:33:46.788179046 UTC , thread_cap_info = ("ThreadId 97", 3,
| | | | F                False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | F              = 39 , num_top_rules = 39 , num_weak_rules = 17 , alphabet_size = 12 ,
| | | | | F              total_length = 327} , self = 71 , parent = Nothing , duration = 0.662203699000
| | | | | F              , status = Fail , start = 2025-09-03 11:33:46.127051078 UTC , finish =
| | | | | F              2025-09-03 11:33:46.789254777 UTC , thread_cap_info = ("ThreadId 98", 3,
| | | | | F              False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | | F            = 39 , num_top_rules = 39 , num_weak_rules = 17 , alphabet_size = 12 ,
| | | | | | F            total_length = 327} , self = 65 , parent = Nothing , duration = 0.615699757000
| | | | | | F            , status = Fail , start = 2025-09-03 11:33:46.12705332 UTC , finish = 2025-09-03
| | | | | | F            11:33:46.742753077 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | | | F            
| | | | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F          = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | F          = 5 , total_length = 34} , self = 63 , parent = Nothing , duration = 0.501495945000
| | | | | | | F          , status = Fail , start = 2025-09-03 11:33:46.152756228 UTC , finish =
| | | | | | | F          2025-09-03 11:33:46.654252173 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | F          2, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F        = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | | F        = 5 , total_length = 37} , self = 62 , parent = Nothing , duration = 0.409322147000
| | | | | | | | F        , status = Fail , start = 2025-09-03 11:33:46.152758454 UTC , finish =
| | | | | | | | F        2025-09-03 11:33:46.562080601 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | F        2, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | | | | | | | F      = 32 , num_top_rules = 32 , num_weak_rules = 18 , alphabet_size = 12 ,
| | | | | | | | | F      total_length = 303} , self = 68 , parent = Nothing , duration = 0.602997045000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 11:33:46.159980526 UTC , finish =
| | | | | | | | | F      2025-09-03 11:33:46.762977571 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | | | F      3, False)}
| | | | | | | | | F      
| | | | | | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | | | S    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | | | | S    = 5 , total_length = 37} , self = 72 , parent = Nothing , duration = 0.689352491000
| | | | | | | | | | S    , status = Success , start = 2025-09-03 11:33:46.159981534 UTC , finish
| | | | | | | | | | S    = 2025-09-03 11:33:46.849334025 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | | | | S    2, False)}
| | | | | | | | | | S    
| | | | | | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | | | | S  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | | | | | S  = 5 , total_length = 34} , self = 66 , parent = Nothing , duration = 0.518995575000
| | | | | | | | | | | S  , status = Success , start = 2025-09-03 11:33:46.228823794 UTC , finish
| | | | | | | | | | | S  = 2025-09-03 11:33:46.747819369 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | | | S  2, False)}
| | | | | | | | | | | S  
F | | | | | | | | | | |  
  F | | | | | | | | | |  
    F | | | | | | | | |  
      | | | | | F | | |  
E     | | | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E     | | | | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E     | | | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E     | | | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     | | | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     | | | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E     | | | | |   | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
E     | | | | |   | | |  = 5 , total_length = 37} , self = 77 , parent = Nothing , duration = 0.540522984000
E     | | | | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:46.562149035
E     | | | | |   | | |  UTC , finish = 2025-09-03 11:33:47.102672019 UTC , thread_cap_info = ("ThreadId
E     | | | | |   | | |  119", 2, False)}
E     | | | | |   | | |  
|     | | | | F   | | |  
| E   | | | |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   | | | |     | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   | | | |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   | | | |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   | | | |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   | | | |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E   | | | |     | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| E   | | | |     | | |  = 5 , total_length = 34} , self = 69 , parent = Nothing , duration = 0.108712443000
| E   | | | |     | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:46.654279885
| E   | | | |     | | |  UTC , finish = 2025-09-03 11:33:46.762992328 UTC , thread_cap_info = ("ThreadId
| E   | | | |     | | |  122", 2, False)}
| E   | | | |     | | |  
| |   F | | |     | | |  
| |     | | F     | | |  
| |     | |       | | S  
| |     | |       F |    
| E     | |         |    
|       F |         |    
|         F         |    
|                   S    
E                        
F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
F                        = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F                        = 27} , self = 80 , parent = Nothing , duration = 0.180289085000 , status
F                        = Fail , start = 2025-09-03 11:33:47.160016137 UTC , finish = 2025-09-03
F                        11:33:47.340305222 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
F                        
| F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F                      = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F                      = 27} , self = 83 , parent = Nothing , duration = 0.217644105000 , status
| F                      = Fail , start = 2025-09-03 11:33:47.164815934 UTC , finish = 2025-09-03
| F                      11:33:47.382460039 UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| F                      
F |                      
F |                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |                      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F |                      = 4 , total_length = 27} , self = 87 , parent = Nothing , duration = 0.668739834000
F |                      , status = Fail , start = 2025-09-03 11:33:47.380229508 UTC , finish =
F |                      2025-09-03 11:33:48.048969342 UTC , thread_cap_info = ("ThreadId 141",
F |                      2, False)}
F |                      
| F                      
| S                      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| S                      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| S                      = 4 , total_length = 27} , self = 88 , parent = Nothing , duration = 0.708609146000
| S                      , status = Success , start = 2025-09-03 11:33:47.479994579 UTC , finish
| S                      = 2025-09-03 11:33:48.188603725 UTC , thread_cap_info = ("ThreadId 144",
| S                      2, False)}
| S                      
| | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                    = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F                    = 34} , self = 85 , parent = Nothing , duration = 0.330601739000 , status
| | F                    = Fail , start = 2025-09-03 11:33:47.54000471 UTC , finish = 2025-09-03
| | F                    11:33:47.870606449 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F                  = 34} , self = 86 , parent = Nothing , duration = 0.328828549000 , status
| | | F                  = Fail , start = 2025-09-03 11:33:47.546118806 UTC , finish = 2025-09-03
| | | F                  11:33:47.874947355 UTC , thread_cap_info = ("ThreadId 147", 3, False)}
| | | F                  
| | F |                  
| |   F                  
F |                      
E |                      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |                      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E |                      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
E |                      = 4 , total_length = 27} , self = 90 , parent = Nothing , duration = 0.134502333000
E |                      , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:48.054211236
E |                      UTC , finish = 2025-09-03 11:33:48.188713569 UTC , thread_cap_info = ("ThreadId
E |                      155", 2, False)}
E |                      
| S                      
E                        
