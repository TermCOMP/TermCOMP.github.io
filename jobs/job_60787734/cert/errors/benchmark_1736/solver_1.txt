last 3193 length 15333
CNF 3193 vars 15333 clauses
last 4917 length 24035
last 10316 length 67189
CNF 4917 vars 24035 clauses
CNF 10316 vars 67189 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2174, clauses: 8883
last 4218 length 22407
last 2174 length 8883
CNF 4218 vars 22407 clauses
CNF 2174 vars 8883 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2174, clauses: 8883, status: Unsatisfied, time: 0.182263905s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2186, clauses: 8694
last 2186 length 8694
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7079, clauses: 29807
last 7079 length 29807
CNF 2186 vars 8694 clauses
last 4674 length 24264
CNF 7079 vars 29807 clauses
CNF 4674 vars 24264 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2186, clauses: 8694, status: Unsatisfied, time: 0.166587015s
last 13360 length 107461
CNF 13360 vars 107461 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4290, clauses: 18659
last 4290 length 18659
CNF 4290 vars 18659 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4635, clauses: 20027
last 4635 length 20027
CNF 4635 vars 20027 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7665, clauses: 32285
last 7665 length 32285
CNF 7665 vars 32285 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7079, clauses: 29807, status: Unsatisfied, time: 0.64034749s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4290, clauses: 18659, status: Unsatisfied, time: 0.371081978s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4635, clauses: 20027, status: Unsatisfied, time: 0.252810507s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3629, clauses: 15560
last 3629 length 15560
CNF 3629 vars 15560 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7665, clauses: 32285, status: Unsatisfied, time: 0.623075919s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3665, clauses: 15276
last 3665 length 15276
CNF 3665 vars 15276 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3665, clauses: 15276, status: Satisfied, time: 0.210997938s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11799, clauses: 54856
last 11799 length 54856
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3629, clauses: 15560, status: Unsatisfied, time: 0.603413929s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       DP
SRS with 6 strict rules and 1 weak rules on 3 letters       EDG
SRS with 3 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a, b, b, a, b, a, b, a] -> [ a , b , a , b , a , b , b , a , b , b , a , b , b , a ] {- Input 0 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, b, a, b, b, a, b] -> [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- Mirror (Input 0) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
  [ a# , b , a , b , a , b , b , a , b , b , a , b ] |-> [a#] {- DP (Top 13) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a ] {- DP (Top 11) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a , b , a ] {- DP (Top 9) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , a , b , a ] {- DP (Top 6) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , b , a , b , a , b , a ] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ a# , b , a , b , a , b , b , a , b , b , a , b ] |-> [a#] {- DP (Top 13) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a ] {- DP (Top 11) (Mirror (Input 0)) -}
  [a#, b, a, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a , b , a ] {- DP (Top 9) (Mirror (Input 0)) -}
  [a, b, a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
reason
  ( a
  , Wk  / 0A  0A  0A  0A - \
        | -4A -4A 0A  0A - |
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( b
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( a#
  , Wk  / 1A 1A 1A 5A - \
        | 1A 1A 1A 5A - |
        | 1A 1A 1A 5A - |
        | 1A 1A 1A 5A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(1,2)\Deepee(6/1,3)\EDG(3/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 11799 vars 54856 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.995793310000
  min duration 0.597793028000
  total durat. 2.275373751000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.735142737000
  min duration 0.321517084000
  total durat. 3.170002011000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 71}
    , self = 63
    , parent = Nothing
    , duration = 1.113342190000
    , status = Fail
    , start = 2025-09-03 12:55:50.624765156 UTC
    , finish = 2025-09-03 12:55:51.738107346 UTC
    , thread_cap_info = ("ThreadId 102", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 112}
    , self = 64
    , parent = Nothing
    , duration = 1.735142737000
    , status = Fail
    , start = 2025-09-03 12:55:50.117598927 UTC
    , finish = 2025-09-03 12:55:51.852741664 UTC
    , thread_cap_info = ("ThreadId 71", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.981563493000
  min duration 0.969435292000
  total durat. 1.950998785000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.668991341000
  min duration 0.479941277000
  total durat. 1.148932618000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.933896357000
  min duration 2.933896357000
  total durat. 2.933896357000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 76
    , parent = Nothing
    , duration = 2.933896357000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:50.104076421 UTC
    , finish = 2025-09-03 12:55:53.037972778 UTC
    , thread_cap_info = ("ThreadId 73", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.867709683000
  min duration 2.867709683000
  total durat. 2.867709683000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 74
    , parent = Nothing
    , duration = 2.867709683000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:50.15771329 UTC
    , finish = 2025-09-03 12:55:53.025422973 UTC
    , thread_cap_info = ("ThreadId 83", 0, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 26} , self
F                  = 57 , parent = Nothing , duration = 0.808145089000 , status = Fail , start
F                  = 2025-09-03 12:55:50.102153698 UTC , finish = 2025-09-03 12:55:50.910298787
F                  UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                = 112} , self = 58 , parent = Nothing , duration = 0.995793310000 , status
| F                = Fail , start = 2025-09-03 12:55:50.103301628 UTC , finish = 2025-09-03
| F                12:55:51.099094938 UTC , thread_cap_info = ("ThreadId 69", 2, False)}
| F                
| | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E              = 26} , self = 76 , parent = Nothing , duration = 2.933896357000 , status
| | E              = Except "AsyncCancelled" , start = 2025-09-03 12:55:50.104076421 UTC ,
| | E              finish = 2025-09-03 12:55:53.037972778 UTC , thread_cap_info = ("ThreadId
| | E              73", 1, False)}
| | E              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F            = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F            = 112} , self = 64 , parent = Nothing , duration = 1.735142737000 , status
| | | F            = Fail , start = 2025-09-03 12:55:50.117598927 UTC , finish = 2025-09-03
| | | F            12:55:51.852741664 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| | | F            
| | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E          = 26} , self = 74 , parent = Nothing , duration = 2.867709683000 , status
| | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:55:50.15771329 UTC ,
| | | | E          finish = 2025-09-03 12:55:53.025422973 UTC , thread_cap_info = ("ThreadId
| | | | E          83", 0, False)}
| | | | E          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | F        = 86} , self = 59 , parent = Nothing , duration = 0.681787413000 , status
| | | | | F        = Fail , start = 2025-09-03 12:55:50.458481737 UTC , finish = 2025-09-03
| | | | | F        12:55:51.14026915 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | F      = 86} , self = 56 , parent = Nothing , duration = 0.321517084000 , status
| | | | | | F      = Fail , start = 2025-09-03 12:55:50.477588555 UTC , finish = 2025-09-03
| | | | | | F      12:55:50.799105639 UTC , thread_cap_info = ("ThreadId 99", 0, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | F    = 71} , self = 63 , parent = Nothing , duration = 1.113342190000 , status
| | | | | | | F    = Fail , start = 2025-09-03 12:55:50.624765156 UTC , finish = 2025-09-03
| | | | | | | F    12:55:51.738107346 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | F  = 71} , self = 60 , parent = Nothing , duration = 0.597793028000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 12:55:50.701312145 UTC , finish = 2025-09-03
| | | | | | | | F  12:55:51.299105173 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
| | | | | | | | F  
| | | | | | F | |  
F | | | | |   | |  
F | | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |   | |  = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | | |   | |  = 3 , total_length = 86} , self = 61 , parent = Nothing , duration = 0.405260048000
F | | | | |   | |  , status = Fail , start = 2025-09-03 12:55:50.976944411 UTC , finish =
F | | | | |   | |  2025-09-03 12:55:51.382204459 UTC , thread_cap_info = ("ThreadId 104",
F | | | | |   | |  0, False)}
F | | | | |   | |  
| F | | | |   | |  
|   | | | F   | |  
| F | | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | |     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| F | | |     | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| F | | |     | |  = 3 , total_length = 86} , self = 65 , parent = Nothing , duration = 0.981563493000
| F | | |     | |  , status = Fail , start = 2025-09-03 12:55:51.219820465 UTC , finish =
| F | | |     | |  2025-09-03 12:55:52.201383958 UTC , thread_cap_info = ("ThreadId 107",
| F | | |     | |  0, False)}
| F | | |     | |  
| | | | |     | F  
F | | | |     |    
F | | | |     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | |     |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | |     |    = 3 , total_length = 71} , self = 62 , parent = Nothing , duration = 0.312220999000
F | | | |     |    , status = Fail , start = 2025-09-03 12:55:51.397613345 UTC , finish =
F | | | |     |    2025-09-03 12:55:51.709834344 UTC , thread_cap_info = ("ThreadId 110",
F | | | |     |    0, False)}
F | | | |     |    
| | | | | F   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F   |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | F   |    = 3 , total_length = 86} , self = 66 , parent = Nothing , duration = 0.668991341000
| | | | | F   |    , status = Fail , start = 2025-09-03 12:55:51.551606009 UTC , finish =
| | | | | F   |    2025-09-03 12:55:52.22059735 UTC , thread_cap_info = ("ThreadId 111", 0,
| | | | | F   |    False)}
| | | | | F   |    
F | | | | |   |    
  | | | | |   F    
F | | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F | | | | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | | |        = 3 , total_length = 71} , self = 68 , parent = Nothing , duration = 0.969435292000
F | | | | |        , status = Fail , start = 2025-09-03 12:55:51.757597211 UTC , finish =
F | | | | |        2025-09-03 12:55:52.727032503 UTC , thread_cap_info = ("ThreadId 115",
F | | | | |        0, False)}
F | | | | |        
| | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | | F      = 3 , total_length = 71} , self = 67 , parent = Nothing , duration = 0.479941277000
| | | | | | F      , status = Fail , start = 2025-09-03 12:55:51.818213741 UTC , finish =
| | | | | | F      2025-09-03 12:55:52.298155018 UTC , thread_cap_info = ("ThreadId 117",
| | | | | | F      0, False)}
| | | | | | F      
| | | F | | |      
| F |   | | |      
| F |   | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F |   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   | | |      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| F |   | | |      = 3 , total_length = 86} , self = 75 , parent = Nothing , duration = 0.816878602000
| F |   | | |      , status = Fail , start = 2025-09-03 12:55:52.208673743 UTC , finish =
| F |   | | |      2025-09-03 12:55:53.025552345 UTC , thread_cap_info = ("ThreadId 123",
| F |   | | |      0, False)}
| F |   | | |      
| | |   | F |      
| | |   |   F      
| | | S |          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |          = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | S |          = 3 , total_length = 71} , self = 69 , parent = Nothing , duration = 0.588559487000
| | | S |          , status = Success , start = 2025-09-03 12:55:52.362963968 UTC , finish
| | | S |          = 2025-09-03 12:55:52.951523455 UTC , thread_cap_info = ("ThreadId 125",
| | | S |          0, False)}
| | | S |          
F | | | |          
E | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | |          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E | | | |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
E | | | |          = 3 , total_length = 71} , self = 71 , parent = Nothing , duration = 0.281689244000
E | | | |          , status = Except "AsyncCancelled" , start = 2025-09-03 12:55:52.743617818
E | | | |          UTC , finish = 2025-09-03 12:55:53.025307062 UTC , thread_cap_info = ("ThreadId
E | | | |          128", 0, False)}
E | | | |          
| | | S |          
E | |   |          
  | |   E          
  F |              
    E              
