last 570 length 2366
last 754 length 3374
CNF 754 vars 3374 clauses
CNF 570 vars 2366 clauses
last 483 length 1914
CNF 483 vars 1914 clauses
last 559 length 2338
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2339, clauses: 8385
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7384, clauses: 30655
last 2339 length 8385
CNF 559 vars 2338 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2339, clauses: 8310
last 7384 length 30655
last 2339 length 8310
CNF 2339 vars 8385 clauses
CNF 7384 vars 30655 clauses
CNF 2339 vars 8310 clauses
last 5255 length 28547
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2339, clauses: 8385, status: Unsatisfied, time: 0.1145073s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7678, clauses: 31879
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7384, clauses: 30655, status: Satisfied, time: 0.158841953s
last 5889 length 40865
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2339, clauses: 8310, status: Unsatisfied, time: 0.285934039s
last 5388 length 22870
last 8802 length 39500
last 12803 length 79413
last 7678 length 31879
CNF 5255 vars 28547 clauses
last 16909 length 83344
last 500 length 2098
last 724 length 3252
CNF 5388 vars 22870 clauses
CNF 5889 vars 40865 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4849, clauses: 19230
CNF 8802 vars 39500 clauses
CNF 7678 vars 31879 clauses
CNF 12803 vars 79413 clauses
CNF 500 vars 2098 clauses
CNF 724 vars 3252 clauses
CNF 16909 vars 83344 clauses
last 4849 length 19230
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7678, clauses: 31879, status: Satisfied, time: 0.362250035s
CNF 4849 vars 19230 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2126, clauses: 7560
last 2126 length 7560
CNF 2126 vars 7560 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2126, clauses: 7560, status: Unsatisfied, time: 0.057613491s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15950, clauses: 61371
last 15950 length 61371
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7044, clauses: 29235
last 7044 length 29235
CNF 7044 vars 29235 clauses
CNF 15950 vars 61371 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4426, clauses: 17644
**************************************************
last 4426 length 17644
summary
**************************************************
SRS with 4 rules on 3 letters       context
SRS with 8 rules on 3 letters       mirror
SRS with 8 rules on 3 letters       DP
SRS with 6 strict rules and 8 weak rules on 6 letters       weights
SRS with 2 strict rules and 8 weak rules on 4 letters       EDG
SRS with 2 strict rules and 8 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 8 weak rules on 3 letters       EDG
CNF 4426 vars 17644 clauses

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a] -> [b] {- Input 1 -}
  [a, c] -> [c, c, a, a, b] {- Input 2 -}
  [b, b] -> [] {- Input 3 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a] -> [b] {- Input 1 -}
  [a, c] -> [c, c, a, a, b] {- Input 2 -}
  [a, b, b] -> [a] {- Input 3 -}
  [b, b, b] -> [b] {- Input 3 -}
  [c, b, b] -> [c] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [a] -> [b] {- Mirror (Input 1) -}
  [c, a] -> [b, a, a, c, c] {- Mirror (Input 2) -}
  [b, b, a] -> [a] {- Mirror (Input 3) -}
  [b, b, b] -> [b] {- Mirror (Input 3) -}
  [b, b, c] -> [c] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a] ->= [b, a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [a#] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a] |-> [a#, a, c, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 2) (Mirror (Input 2)) -}
  [c#, a] |-> [b#, a, a, c, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, a] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a] ->= [b, a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [c#, a] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, a] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, a] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a] ->= [b, a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A -1A -  \
        | 1A 1A  1A |
        \ -  -   0A / )
  ( b
  , Wk  / 0A -1A -  \
        | 1A -   1A |
        \ -  -   0A / )
  ( c
  , Wk  / 0A 0A -  \
        | -  0A -  |
        \ -  -  0A / )
  ( c#
  , Wk  / -1A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a] ->= [b, a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Context\Mirror(8,3)\Deepee(6/8,6)\Weight\EDG(2/8,4)\Matrix{\ArcticBZ}{3}(0/8,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.133308898000
  min duration 0.023512719000
  total durat. 3.022216008000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 108
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 579}
    , self = 80
    , parent = Nothing
    , duration = 1.133308898000
    , status = Fail
    , start = 2025-09-03 11:03:32.121934435 UTC
    , finish = 2025-09-03 11:03:33.255243333 UTC
    , thread_cap_info = ("ThreadId 92", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.982759691000
  min duration 0.012567600000
  total durat. 2.895126600000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.883423780000
  min duration 0.635176601000
  total durat. 1.518600381000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.632038879000
  min duration 0.101088509000
  total durat. 1.276928244000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.403194725000
  min duration 1.403194725000
  total durat. 1.403194725000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 84
    , parent = Nothing
    , duration = 1.403194725000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:03:32.073395163 UTC
    , finish = 2025-09-03 11:03:33.476589888 UTC
    , thread_cap_info = ("ThreadId 35", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.046510349000
  min duration 1.046510349000
  total durat. 1.046510349000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 74
    , parent = Nothing
    , duration = 1.046510349000
    , status = Fail
    , start = 2025-09-03 11:03:32.073397388 UTC
    , finish = 2025-09-03 11:03:33.119907737 UTC
    , thread_cap_info = ("ThreadId 36", 3, False)}
**************************************************
E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
E                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                        = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                        = 12} , self = 84 , parent = Nothing , duration = 1.403194725000 , status
E                        = Except "AsyncCancelled" , start = 2025-09-03 11:03:32.073395163 UTC ,
E                        finish = 2025-09-03 11:03:33.476589888 UTC , thread_cap_info = ("ThreadId
E                        35", 2, False)}
E                        
| F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                      = 12} , self = 74 , parent = Nothing , duration = 1.046510349000 , status
| F                      = Fail , start = 2025-09-03 11:03:32.073397388 UTC , finish = 2025-09-03
| F                      11:03:33.119907737 UTC , thread_cap_info = ("ThreadId 36", 3, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F                    = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                    = 180} , self = 68 , parent = Nothing , duration = 0.763201674000 , status
| | F                    = Fail , start = 2025-09-03 11:03:32.092271535 UTC , finish = 2025-09-03
| | F                    11:03:32.855473209 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
| | F                    
| | | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                  = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | F                  alphabet_size = 4 , total_length = 39} , self = 59 , parent = Nothing ,
| | | F                  duration = 0.632038879000 , status = Fail , start = 2025-09-03 11:03:32.099401944
| | | F                  UTC , finish = 2025-09-03 11:03:32.731440823 UTC , thread_cap_info = ("ThreadId
| | | F                  86", 1, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F                = 180} , self = 69 , parent = Nothing , duration = 0.783445109000 , status
| | | | F                = Fail , start = 2025-09-03 11:03:32.111180694 UTC , finish = 2025-09-03
| | | | F                11:03:32.894625803 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| | | | F                
| | | | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | S              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | S              = 4 , total_length = 39} , self = 60 , parent = Nothing , duration = 0.635176601000
| | | | | S              , status = Success , start = 2025-09-03 11:03:32.111183787 UTC , finish
| | | | | S              = 2025-09-03 11:03:32.746360388 UTC , thread_cap_info = ("ThreadId 87",
| | | | | S              1, False)}
| | | | | S              
| | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 108 , num_strict_rules
| | | | | | F            = 72 , num_top_rules = 72 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | F            total_length = 579} , self = 80 , parent = Nothing , duration = 1.133308898000
| | | | | | F            , status = Fail , start = 2025-09-03 11:03:32.121934435 UTC , finish =
| | | | | | F            2025-09-03 11:03:33.255243333 UTC , thread_cap_info = ("ThreadId 92", 0,
| | | | | | F            False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 108 , num_strict_rules
| | | | | | | F          = 72 , num_top_rules = 72 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | F          total_length = 579} , self = 73 , parent = Nothing , duration = 0.982759691000
| | | | | | | F          , status = Fail , start = 2025-09-03 11:03:32.131182961 UTC , finish =
| | | | | | | F          2025-09-03 11:03:33.113942652 UTC , thread_cap_info = ("ThreadId 93", 0,
| | | | | | | F          False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F        = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | | | | | | F        Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7044, clauses: 29235, status: Unsatisfied, time: 0.222284105s
alphabet_size = 4 , total_length = 37} , self = 67 , parent = Nothing ,
| | | | | | | | F        duration = 0.543800856000 , status = Fail , start = 2025-09-03 11:03:32.210326414
| | | | | | | | F        UTC , finish = 2025-09-03 11:03:32.75412727 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F        100", 1, False)}
| | | | | | | | F        
| | | | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | | S      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | | | | | S      = 4 , total_length = 37} , self = 75 , parent = Nothing , duration = 0.883423780000
| | | | | | | | | S      , status = Success , start = 2025-09-03 11:03:32.249648425 UTC , finish
| | | | | | | | | S      = 2025-09-03 11:03:33.133072205 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | | S      1, False)}
| | | | | | | | | S      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | | | | F    = 40 , num_top_rules = 40 , num_weak_rules = 36 , alphabet_size = 14 ,
| | | | | | | | | | F    total_length = 386} , self = 71 , parent = Nothing , duration = 0.678731454000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 11:03:32.251212767 UTC , finish =
| | | | | | | | | | F    2025-09-03 11:03:32.929944221 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | | | F    0, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | | | | | F  = 40 , num_top_rules = 40 , num_weak_rules = 36 , alphabet_size = 14 ,
| | | | | | | | | | | F  total_length = 386} , self = 70 , parent = Nothing , duration = 0.633832173000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:03:32.271237621 UTC , finish =
| | | | | | | | | | | F  2025-09-03 11:03:32.905069794 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | | | | F  0, False)}
| | | | | | | | | | | F  
| | | F | | | | | | | |  
| | |   | S | | | | | |  
| | | F |   | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F |   | | | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | F |   | | | | | |  = 35} , self = 76 , parent = Nothing , duration = 0.389056846000 , status
| | | F |   | | | | | |  = Fail , start = 2025-09-03 11:03:32.746568894 UTC , finish = 2025-09-03
| | | F |   | | | | | |  11:03:33.13562574 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| | | F |   | | | | | |  
| | | | | F | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F | | | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | F | | | | | |  = 35} , self = 72 , parent = Nothing , duration = 0.365240752000 , status
| | | | | F | | | | | |  = Fail , start = 2025-09-03 11:03:32.746576805 UTC , finish = 2025-09-03
| | | | | F | | | | | |  11:03:33.111817557 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| | | | | F | | | | | |  
| | | | | | | | F | | |  
| | | | | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | E | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | | | | E | | |  = 4 , total_length = 37} , self = 78 , parent = Nothing , duration = 0.479411196000
| | | | | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:03:32.754152175
| | | | | | | | E | | |  UTC , finish = 2025-09-03 11:03:33.233563371 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | | |  121", 1, False)}
| | | | | | | | E | | |  
| | F | | | | | | | | |  
| |   | F | | | | | | |  
| |   |   | | | | | | F  
| |   |   | | | | | F    
| |   |   F | | | |      
| |   |     | F | |      
| F   |     |   | |      
| E   |     |   | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E   |     |   | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E   |     |   | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E   |     |   | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E   |     |   | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E   |     |   | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E   |     |   | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E   |     |   | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E   |     |   | |      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| E   |     |   | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E   |     |   | |      = 12} , self = 83 , parent = Nothing , duration = 0.339964983000 , status
| E   |     |   | |      = Except "AsyncCancelled" , start = 2025-09-03 11:03:33.132455574 UTC ,
| E   |     |   | |      finish = 2025-09-03 11:03:33.472420557 UTC , thread_cap_info = ("ThreadId
| E   |     |   | |      133", 3, False)}
| E   |     |   | |      
| |   |     |   | S      
| |   F     |   |        
| | F       |   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F       |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F       |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F       |   |        = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | F       |   |        = 4 , total_length = 35} , self = 79 , parent = Nothing , duration = 0.101088509000
| | F       |   |        , status = Fail , start = 2025-09-03 11:03:33.135632538 UTC , finish =
| | F       |   |        2025-09-03 11:03:33.236721047 UTC , thread_cap_info = ("ThreadId 135",
| | F       |   |        1, False)}
| | F       |   |        
| | |       |   E        
| | F       |            
| |         F            
| E                      
E                        
