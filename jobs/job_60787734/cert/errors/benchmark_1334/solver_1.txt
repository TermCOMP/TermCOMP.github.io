last 3017 length 13094
last 2686 length 11115
CNF 3017 vars 13094 clauses
CNF 2686 vars 11115 clauses
last 3376 length 14067
last 3232 length 14003
last 2863 length 11986
CNF 3376 vars 14067 clauses
last 3897 length 16812
CNF 3232 vars 14003 clauses
CNF 2863 vars 11986 clauses
last 186 length 705
last 258 length 1010
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7519, clauses: 27304
last 272 length 1075
last 341 length 1354
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9185, clauses: 33582
CNF 258 vars 1010 clauses
CNF 3897 vars 16812 clauses
last 7519 length 27304
CNF 272 vars 1075 clauses
CNF 341 vars 1354 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31273, clauses: 131425
CNF 186 vars 705 clauses
last 9185 length 33582
CNF 7519 vars 27304 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1421, clauses: 4920
last 31273 length 131425
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1818, clauses: 6368
CNF 9185 vars 33582 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5157, clauses: 21131
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4490, clauses: 18401
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7519, clauses: 27304, status: Satisfied, time: 0.257765833s
last 1421 length 4920
last 1818 length 6368
CNF 31273 vars 131425 clauses
last 5157 length 21131
last 4490 length 18401
CNF 1421 vars 4920 clauses
CNF 5157 vars 21131 clauses
CNF 1818 vars 6368 clauses
CNF 4490 vars 18401 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 36847, clauses: 154863
last 2911 length 12642
last 2596 length 10787
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9185, clauses: 33582, status: Satisfied, time: 0.602738106s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1421, clauses: 4920, status: Satisfied, time: 0.351711679s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1818, clauses: 6368, status: Satisfied, time: 0.292639457s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5157, clauses: 21131, status: Satisfied, time: 0.296219958s
last 36847 length 154863
CNF 2596 vars 10787 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4490, clauses: 18401, status: Satisfied, time: 0.167796822s
CNF 2911 vars 12642 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 5 strict rules and 3 weak rules on 6 letters       weights
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 2 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 5 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b] {- Input 0 -}
  [a, c] -> [b] {- Input 1 -}
  [b, b] -> [c, b, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [b, a] {- Mirror (Input 0) -}
  [c, a] -> [b] {- Mirror (Input 1) -}
  [b, b] -> [a, b, c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, b, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [b#, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, b] |-> [c#] {- DP (Top 2) (Mirror (Input 2)) -}
  [c#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, b, c] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, b, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A 1A 0A  \
        | 0A -  -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / 0A 1A  -   \
        | 0A -1A -1A |
        \ -  -   0A  / )
  ( c
  , Wk  / 0A  -   -2A \
        | -1A -1A -   |
        \ -   -   0A  / )
  ( a#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / 0A 1A -2A \
        | -  -  -   |
        \ -  -  0A  / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [a, a] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee(5/3,6)\Weight\EDG(2/3,5)\Matrix{\ArcticBZ}{3}(1/3,5)\Weight(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.473682800000
  min duration 0.078369111000
  total durat. 1.527541791000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.503071912000
  min duration 0.046019307000
  total durat. 1.705769535000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.925518319000
  min duration 0.533076832000
  total durat. 1.458595151000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.964439541000
  min duration 0.613802663000
  total durat. 3.110362891000
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
F                    = 22 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 137} , self = 59 , parent = Nothing , duration = 0.473682800000 , status
F                    = Fail , start = 2025-09-03 11:37:35.180038191 UTC , finish = 2025-09-03
F                    11:37:35.653720991 UTC , thread_cap_info = ("ThreadId 71", 1, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| F                  = 4 , num_top_rules = 4 , num_weak_rules = 22 , alphabet_size = 11 , total_length
| F                  = 163} , self = 57 , parent = Nothing , duration = 0.194614710000 , status
| F                  = Fail , start = 2025-09-03 11:37:35.199726713 UTC , finish = 2025-09-03
| F                  11:37:35.394341423 UTC , thread_cap_info = ("ThreadId 82", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | F                = 22 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 137} , self = 58 , parent = Nothing , duration = 0.453247047000 , status
| | F                = Fail , start = 2025-09-03 11:37:35.200379275 UTC , finish = 2025-09-03
| | F                11:37:35.653626322 UTC , thread_cap_info = ("ThreadId 73", 1, False)}
| | F                
| | | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S              = 21 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 19 ,
| | | S              alphabet_size = 9 , total_length = 131} , self = 65 , parent = Nothing
| | | S              , duration = 0.964439541000 , status = Success , start = 2025-09-03 11:37:35.216633292
| | | S              UTC , finish = 2025-09-03 11:37:36.181072833 UTC , thread_cap_info = ("ThreadId
| | | S              84", 2, False)}
| | | S              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 22 , alphabet_size = 11 , total_length
| | | | F            = 163} , self = 63 , parent = Nothing , duration = 0.503071912000 , status
| | | | F            = Fail , start = 2025-09-03 11:37:35.219602815 UTC , finish = 2025-09-03
| | | | F            11:37:35.722674727 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| | | | F            
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | | | | E          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 19 , alphabet_size
| | | | | E          = 9 , total_length = 131} , self = 67 , parent = Nothing , duration = 0.925518319000
| | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:37:35.261114292
| | | | | E          UTC , finish = 2025-09-03 11:37:36.186632611 UTC , thread_cap_info = ("ThreadId
| | | | | E          91", 2, False)}
| | | | | E          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | F        = 16} , self = 64 , parent = Nothing , duration = 0.441716337000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:37:35.321525295 UTC , finish = 2025-09-03
| | | | | | F        11:37:35.763241632 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | F      = 16} , self = 60 , parent = Nothing , duration = 0.366260581000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:37:35.322541735 UTC , finish = 2025-09-03
| | | | | | | F      11:37:35.688802316 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | | F    = 21} , self = 61 , parent = Nothing , duration = 0.339158833000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 11:37:35.359612619 UTC , finish = 2025-09-03
| | | | | | | | F    11:37:35.698771452 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | | | F  = 21} , self = 62 , parent = Nothing , duration = 0.337170688000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 11:37:35.36183255 UTC , finish = 2025-09-03
| | | | | | | | | F  11:37:35.699003238 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
| | | | | | | | | F  
| F | | | | | | | |  
| S | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | | |  = 26 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 22 ,
| S | | | | | | | |  alphabet_size = 11 , total_length = 163} , self = 72 , parent = Nothing
| S | | | | | | | |  , duration = 0.913191139000 , status = Success , start = 2025-09-03 11:37:35.394374486
| S | | | | | | | |  UTC , finish = 2025-09-03 11:37:36.307565625 UTC , thread_cap_info = ("ThreadId
| S | | | | | | | |  108", 2, False)}
| S | | | | | | | |  
| | F | | | | | | |  
F |   | | | | | | |  
  |   | | | | F | |  
S |   | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | | | |   | |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
S |   | | | |   | |  = 4 , total_length = 16} , self = 73 , parent = Nothing , duration = 0.618929548000
S |   | | | |   | |  , status = Success , start = 2025-09-03 11:37:35.688855071 UTC , finish
S |   | | | |   | |  = 2025-09-03 11:37:36.307784619 UTC , thread_cap_info = ("ThreadId 117",
S |   | | | |   | |  0, False)}
S |   | | | |   | |  
| |   | | | |   F |  
| | S | | | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |     |  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | S | | | |     |  = 5 , total_length = 21} , self = 76 , parent = Nothing , duration = 0.613802663000
| | S | | | |     |  , status = Success , start = 2025-09-03 11:37:35.698804666 UTC , finish
| | S | | | |     |  = 2025-09-03 11:37:36.312607329 UTC , thread_cap_info = ("ThreadId 118",
| | S | | | |     |  3, False)}
| | S | | | |     |  
| | | | | | |     F  
| | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | S      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | S      = 5 , total_length = 21} , self = 77 , parent = Nothing , duration = 0.613646825000
| | | | | | | S      , status = Success , start = 2025-09-03 11:37:35.699018095 UTC , finish
| | | | | | | S      = 2025-09-03 11:37:36.31266492 UTC , thread_cap_info = ("ThreadId 119",
| | | | | | | S      3, False)}
| | | | | | | S      
| | | | F | | |      
| | | |   | F |      
| | | | E |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | E |   |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | E |   |      = 4 , total_length = 16} , self = 80 , parent = Nothing , duration = 0.533076832000
| | | | E |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:37:35.779780181
| | | | E |   |      UTC , finish = 2025-09-03 11:37:36.312857013 UTC , thread_cap_info = ("ThreadId
| | | | E |   |      122", 0, False)}
| | | | E |   |      
| | | S | |   |      
| | |   | E   |      
| S |   |     |      
S   |   |     |      
    S   |     |      
        |     S      
        E            
