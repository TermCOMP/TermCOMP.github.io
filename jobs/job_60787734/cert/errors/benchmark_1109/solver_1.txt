last 871 length 3644
CNF 871 vars 3644 clauses
last 959 length 4280
CNF 959 vars 4280 clauses
last 698 length 2828
last 608 length 2563
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2406, clauses: 8780
CNF 698 vars 2828 clauses
CNF 608 vars 2563 clauses
last 2406 length 8780
last 8016 length 53661
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7384, clauses: 30687
last 9280 length 90173
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2120, clauses: 7656
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6468, clauses: 26811
CNF 2406 vars 8780 clauses
last 7384 length 30687
last 10638 length 54112
CNF 8016 vars 53661 clauses
last 15639 length 71657
last 2120 length 7656
CNF 9280 vars 90173 clauses
last 6468 length 26811
CNF 7384 vars 30687 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2406, clauses: 8780, status: Satisfied, time: 0.906136063s
CNF 10638 vars 54112 clauses
CNF 15639 vars 71657 clauses
CNF 2120 vars 7656 clauses
CNF 6468 vars 26811 clauses
last 31093 length 186553
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2120, clauses: 7656, status: Satisfied, time: 0.82356713s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6468, clauses: 26811, status: Satisfied, time: 0.623569032s
CNF 31093 vars 186553 clauses
last 788 length 3297
last 898 length 4064
last 604 length 2568
last 604 length 2462
CNF 788 vars 3297 clauses
CNF 604 vars 2568 clauses
CNF 898 vars 4064 clauses
CNF 604 vars 2462 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2312, clauses: 8364
last 23490 length 203830
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2012, clauses: 7191
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15327, clauses: 62783
last 2312 length 8364
last 2012 length 7191
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7340, clauses: 30517
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6420, clauses: 26631
CNF 23490 vars 203830 clauses
last 15327 length 62783
CNF 2312 vars 8364 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 39566, clauses: 165535
last 7340 length 30517
last 6420 length 26631
CNF 2012 vars 7191 clauses
CNF 15327 vars 62783 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17578, clauses: 72226
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2312, clauses: 8364, status: Unsatisfied, time: 0.601851362s
last 39566 length 165535
CNF 6420 vars 26631 clauses
CNF 7340 vars 30517 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2012, clauses: 7191, status: Satisfied, time: 0.577211924s
last 17578 length 72226
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15327, clauses: 62783, status: Satisfied, time: 0.804062447s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4605, clauses: 18582
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7340, clauses: 30517, status: Unsatisfied, time: 0.9486333s
CNF 39566 vars 165535 clauses
CNF 17578 vars 72226 clauses
last 4605 length 18582
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 7 rules on 3 letters       mirror
SRS with 7 rules on 3 letters       DP
SRS with 5 strict rules and 7 weak rules on 5 letters       weights
SRS with 2 strict rules and 7 weak rules on 4 letters       EDG
SRS with 2 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 7 weak rules on 4 letters       EDG
SRS with 1 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b] -> [b, b, c, a, a, a] {- Input 1 -}
  [c, a] -> [] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, a, b] -> [b, b, c, a, a, a] {- Input 1 -}
  [a, c, a] -> [a] {- Input 2 -}
  [b, c, a] -> [b] {- Input 2 -}
  [c, c, a] -> [c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b, a, a] -> [a, a, a, c, b, b] {- Mirror (Input 1) -}
  [a, c, a] -> [a] {- Mirror (Input 2) -}
  [a, c, b] -> [b] {- Mirror (Input 2) -}
  [a, c, c] -> [c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, a, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [a#, a, a, c, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [a#, a, c, b, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, a] |-> [a#, c, b, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 4) (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, a, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 4) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 5) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, a, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 1A 1A \
        | 0A -  0A |
        \ -  -  0A / )
  ( b
  , Wk  / 0A 1A -   \
        | -  0A -2A |
        \ -  -  0A  / )
  ( c
  , Wk  / -1A 0A 0A \
        | -1A -  -  |
        \ -   -  0A / )
  ( b#
  , Wk  / 0A -1A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, a, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, b] {- DP (Top 4) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, a, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b#
  , Wk  / 12A 14A 14A - \
        | 12A 14A 14A - |
        | 12A 14A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, a, c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(7,3)\Deepee(5/7,5)\Weight\EDG(2/7,4)\Matrix{\ArcticBZ}{3}\EDG(1/7,4)\Matrix{\Arctic}{3}(0/7,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 4605 vars 18582 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.783219013000
  min duration 0.039283399000
  total durat. 6.070619732000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 60
    , parent = Nothing
    , duration = 1.258971621000
    , status = Fail
    , start = 2025-09-03 11:00:40.560152217 UTC
    , finish = 2025-09-03 11:00:41.819123838 UTC
    , thread_cap_info = ("ThreadId 67", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 457}
    , self = 67
    , parent = Nothing
    , duration = 1.581424057000
    , status = Fail
    , start = 2025-09-03 11:00:40.752539167 UTC
    , finish = 2025-09-03 11:00:42.333963224 UTC
    , thread_cap_info = ("ThreadId 100", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 80
      , num_strict_rules = 53
      , num_top_rules = 53
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 568}
    , self = 79
    , parent = Nothing
    , duration = 1.783219013000
    , status = Fail
    , start = 2025-09-03 11:00:40.951996182 UTC
    , finish = 2025-09-03 11:00:42.735215195 UTC
    , thread_cap_info = ("ThreadId 106", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.983928219000
  min duration 0.076489489000
  total durat. 7.729896793000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 457}
    , self = 65
    , parent = Nothing
    , duration = 1.538480629000
    , status = Fail
    , start = 2025-09-03 11:00:40.775884424 UTC
    , finish = 2025-09-03 11:00:42.314365053 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 61
    , parent = Nothing
    , duration = 1.576420326000
    , status = Fail
    , start = 2025-09-03 11:00:40.560160236 UTC
    , finish = 2025-09-03 11:00:42.136580562 UTC
    , thread_cap_info = ("ThreadId 69", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 80
      , num_strict_rules = 53
      , num_top_rules = 53
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 568}
    , self = 84
    , parent = Nothing
    , duration = 2.983928219000
    , status = Fail
    , start = 2025-09-03 11:00:40.9728698 UTC
    , finish = 2025-09-03 11:00:43.956798019 UTC
    , thread_cap_info = ("ThreadId 107", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.303335719000
  min duration 1.303335719000
  total durat. 1.303335719000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 73
    , parent = Nothing
    , duration = 1.303335719000
    , status = Success
    , start = 2025-09-03 11:00:41.110170952 UTC
    , finish = 2025-09-03 11:00:42.413506671 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.800987923000
  min duration 1.800987923000
  total durat. 1.800987923000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 41}
    , self = 94
    , parent = Nothing
    , duration = 1.800987923000
    , status = Fail
    , start = 2025-09-03 11:00:43.173788218 UTC
    , finish = 2025-09-03 11:00:44.974776141 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.659967506000
  min duration 1.518951095000
  total durat. 3.178918601000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 45}
    , self = 64
    , parent = Nothing
    , duration = 1.518951095000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:00:40.775884012 UTC
    , finish = 2025-09-03 11:00:42.294835107 UTC
    , thread_cap_info = ("ThreadId 103", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 35}
    , self = 89
    , parent = Nothing
    , duration = 1.659967506000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:00:43.211998544 UTC
    , finish = 2025-09-03 11:00:44.87196605 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.589568547000
  min duration 1.418423988000
  total durat. 7.411080110000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 71
    , parent = Nothing
    , duration = 1.418423988000
    , status = Success
    , start = 2025-09-03 11:00:40.992032846 UTC
    , finish = 2025-09-03 11:00:42.410456834 UTC
    , thread_cap_info = ("ThreadId 108", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 45}
    , self = 62
    , parent = Nothing
    , duration = 1.542586491000
    , status = Success
    , start = 2025-09-03 11:00:40.692688091 UTC
    , finish = 2025-09-03 11:00:42.235274582 UTC
    , thread_cap_info = ("ThreadId 87", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 35}
    , self = 86
    , parent = Nothing
    , duration = 1.860501084000
    , status = Success
    , start = 2025-09-03 11:00:42.972993022 UTC
    , finish = 2025-09-03 11:00:44.833494106 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 457}
    , self = 92
    , parent = Nothing
    , duration = 2.589568547000
    , status = Success
    , start = 2025-09-03 11:00:42.373085836 UTC
    , finish = 2025-09-03 11:00:44.962654383 UTC
    , thread_cap_info = ("ThreadId 124", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.407334281000
  min duration 1.407334281000
  total durat. 1.407334281000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 41}
    , self = 85
    , parent = Nothing
    , duration = 1.407334281000
    , status = Fail
    , start = 2025-09-03 11:00:42.855495272 UTC
    , finish = 2025-09-03 11:00:44.262829553 UTC
    , thread_cap_info = ("ThreadId 142", 1, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 4.299434256000
  min duration 4.299434256000
  total durat. 4.299434256000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 88
    , parent = Nothing
    , duration = 4.299434256000
    , status = Fail
    , start = 2025-09-03 11:00:40.558549083 UTC
    , finish = 2025-09-03 11:00:44.857983339 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
**************************************************
F                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                        = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                        = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                        = 88 , parent = Nothing , duration = 4.299434256000 , status = Fail , start
F                        = 2025-09-03 11:00:40.558549083 UTC , finish = 2025-09-03 11:00:44.857983339
F                        UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                        
| F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                      = 12} , self = 59 , parent = Nothing , duration = 0.844723759000 , status
| F                      = Fail , start = 2025-09-03 11:00:40.558703823 UTC , finish = 2025-09-03
| F                      11:00:41.403427582 UTC , thread_cap_info = ("ThreadId 43", 1, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                    = 162} , self = 60 , parent = Nothing , duration = 1.258971621000 , status
| | F                    = Fail , start = 2025-09-03 11:00:40.560152217 UTC , finish = 2025-09-03
| | F                    11:00:41.819123838 UTC , thread_cap_info = ("ThreadId 67", 2, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F                  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                  = 162} , self = 61 , parent = Nothing , duration = 1.576420326000 , status
| | | F                  = Fail , start = 2025-09-03 11:00:40.560160236 UTC , finish = 2025-09-03
| | | F                  11:00:42.136580562 UTC , thread_cap_info = ("ThreadId 69", 2, False)}
| | | F                  
| | | | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S                = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | S                alphabet_size = 4 , total_length = 45} , self = 62 , parent = Nothing ,
| | | | S                duration = 1.542586491000 , status = Success , start = 2025-09-03 11:00:40.692688091
| | | | S                UTC , finish = 2025-09-03 11:00:42.235274582 UTC , thread_cap_info = ("ThreadId
| | | | S                87", 1, False)}
| | | | S                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F              = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | F              = 39} , self = 57 , parent = Nothing , duration = 0.243192104000 , status
| | | | | F              = Fail , start = 2025-09-03 11:00:40.731989205 UTC , finish = 2025-09-03
| | | | | F              11:00:40.975181309 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | F            = 39} , self = 58 , parent = Nothing , duration = 0.317761186000 , status
| | | | | | F            = Fail , start = 2025-09-03 11:00:40.7382414 UTC , finish = 2025-09-03
| | | | | | F            11:00:41.056002586 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | | | | F          = 44 , num_top_rules = 44 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | F          total_length = 457} , self = 67 , parent = Nothing , duration = 1.581424057000
| | | | | | | F          , status = Fail , start = 2025-09-03 11:00:40.752539167 UTC , finish =
| | | | | | | F          2025-09-03 11:00:42.333963224 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | F          3, False)}
| | | | | | | F          
| | | | | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | E        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | | | | E        = 4 , total_length = 45} , self = 64 , parent = Nothing , duration = 1.518951095000
| | | | | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 11:00:40.775884012
| | | | | | | | E        UTC , finish = 2025-09-03 11:00:42.294835107 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E        103", 1, False)}
| | | | | | | | E        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | | | | | | F      = 44 , num_top_rules = 44 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | | | F      total_length = 457} , self = 65 , parent = Nothing , duration = 1.538480629000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 11:00:40.775884424 UTC , finish =
| | | | | | | | | F      2025-09-03 11:00:42.314365053 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | | F      3, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | | | F    = 53 , num_top_rules = 53 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | | F    total_length = 568} , self = 79 , parent = Nothing , duration = 1.783219013000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 11:00:40.951996182 UTC , finish =
| | | | | | | | | | F    2025-09-03 11:00:42.735215195 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | | | F    3, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | | | | F  = 53 , num_top_rules = 53 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | | | F  total_length = 568} , self = 84 , parent = Nothing , duration = 2.983928219000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:00:40.9728698 UTC , finish = 2025-09-03
| | | | | | | | | | | F  11:00:43.956798019 UTC , thread_cap_info = ("ThreadId 107", 3, False)}
| | | | | | | | | | | F  
| | | | | F | | | | | |  
| | | | | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | | | | |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | S | | | | | |  = 4 , total_length = 39} , self = 71 , parent = Nothing , duration = 1.418423988000
| | | | | S | | | | | |  , status = Success , start = 2025-09-03 11:00:40.992032846 UTC , finish
| | | | | S | | | | | |  = 2025-09-03 11:00:42.410456834 UTC , thread_cap_info = ("ThreadId 108",
| | | | | S | | | | | |  1, False)}
| | | | | S | | | | | |  
| | | | | | F | | | | |  
| | | | | | S | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | S | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | S | | | | |  = 4 , total_length = 39} , self = 73 , parent = Nothing , duration = 1.303335719000
| | | | | | S | | | | |  , status = Success , start = 2025-09-03 11:00:41.110170952 UTC , finish
| | | | | | S | | | | |  = 2025-09-03 11:00:42.413506671 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | S | | | | |  1, False)}
| | | | | | S | | | | |  
| F | | | | | | | | | |  
|   F | | | | | | | | |  
|     F | | | | | | | |  
|       S | | | | | | |  
|         | | | E | | |  
|         | | |   F | |  
|         | | F     | |  
| S       | |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S       | |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S       | |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S       | |       | |  = 71 , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 27
| S       | |       | |  , alphabet_size = 14 , total_length = 457} , self = 92 , parent = Nothing
| S       | |       | |  , duration = 2.589568547000 , status = Success , start = 2025-09-03 11:00:42.373085836
| S       | |       | |  UTC , finish = 2025-09-03 11:00:44.962654383 UTC , thread_cap_info = ("ThreadId
| S       | |       | |  124", 3, False)}
| S       | |       | |  
| | F     | |       | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F     | |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     | |       | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F     | |       | |  = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F     | |       | |  = 41} , self = 80 , parent = Nothing , duration = 0.438430622000 , status
| | F     | |       | |  = Fail , start = 2025-09-03 11:00:42.3936945 UTC , finish = 2025-09-03
| | F     | |       | |  11:00:42.832125122 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | F     | |       | |  
| | |     S |       | |  
| | | F     |       | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     |       | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F     |       | |  = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | F     |       | |  = 41} , self = 82 , parent = Nothing , duration = 0.703197457000 , status
| | | F     |       | |  = Fail , start = 2025-09-03 11:00:42.412966291 UTC , finish = 2025-09-03
| | | F     |       | |  11:00:43.116163748 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | | F     |       | |  
| | | |     S       | |  
| | | | F           | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F           | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F           | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F           | |  = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | F           | |  = 35} , self = 81 , parent = Nothing , duration = 0.533619487000 , status
| | | | F           | |  = Fail , start = 2025-09-03 11:00:42.421975452 UTC , finish = 2025-09-03
| | | | F           | |  11:00:42.955594939 UTC , thread_cap_info = ("ThreadId 136", 1, False)}
| | | | F           | |  
| | | | | F         | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F         | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F         | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F         | |  = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | F         | |  = 35} , self = 83 , parent = Nothing , duration = 0.726098916000 , status
| | | | | F         | |  = Fail , start = 2025-09-03 11:00:42.431405501 UTC , finish = 2025-09-03
| | | | | F         | |  11:00:43.157504417 UTC , thread_cap_info = ("ThreadId 135", 1, False)}
| | | | | F         | |  
| | | | | |         F |  
| | F | | |           |  
| | F | | |           |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |           |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |           |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |           |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F | | |           |  = 4 , total_length = 41} , self = 85 , parent = Nothing , duration = 1.407334281000
| | F | | |           |  , status = Fail , start = 2025-09-03 11:00:42.855495272 UTC , finish =
| | F | | |           |  2025-09-03 11:00:44.262829553 UTC , thread_cap_info = ("ThreadId 142",
| | F | | |           |  1, False)}
| | F | | |           |  
| | | | F |           |  
| | | | S |           |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |           |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |           |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |           |  = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | S |           |  = 4 , total_length = 35} , self = 86 , parent = Nothing , duration = 1.860501084000
| | | | S |           |  , status = Success , start = 2025-09-03 11:00:42.972993022 UTC , finish
| | | | S |           |  = 2025-09-03 11:00:44.833494106 UTC , thread_cap_info = ("ThreadId 143",
| | | | S |           |  1, False)}
| | | | S |           |  
| | | F | |           |  
| | |   | F           |  
| | | F |             |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F |             |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F |             |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F |             |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |             |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |             |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | F |             |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | F |             |  = 4 , total_length = 41} , self = 94 , parent = Nothing , duration = 1.800987923000
| | | F |             |  , status = Fail , start = 2025-09-03 11:00:43.173788218 UTC , finish =
| | | F |             |  2025-09-03 11:00:44.974776141 UTC , thread_cap_info = ("ThreadId 144",
| | | F |             |  1, False)}
| | | F |             |  
| | | | | E           |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E           |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E           |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E           |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E           |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E           |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | E           |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | | E           |  = 4 , total_length = 35} , self = 89 , parent = Nothing , duration = 1.659967506000
| | | | | E           |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:00:43.211998544
| | | | | E           |  UTC , finish = 2025-09-03 11:00:44.87196605 UTC , thread_cap_info = ("ThreadId
| | | | | E           |  145", 1, False)}
| | | | | E           |  
| | | | | |           F  
| | F | | |              
| |   | S |              
F |   |   |              
  |   |   E              
  S   |                  
      F                  
