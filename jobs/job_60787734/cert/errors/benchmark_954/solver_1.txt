last 6726 length 59138
CNF 6726 vars 59138 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4601, clauses: 16734
last 4601 length 16734
CNF 4601 vars 16734 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4601, clauses: 16734, status: Unsatisfied, time: 0.327737617s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17831, clauses: 74915
last 17831 length 74915
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 21041
last 5433 length 21041
CNF 5433 vars 21041 clauses
CNF 17831 vars 74915 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 21041, status: Satisfied, time: 0.563032836s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10790, clauses: 45309
last 10790 length 45309
CNF 10790 vars 45309 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17831, clauses: 74915, status: Unsatisfied, time: 1.322244323s
last 4621 length 38065
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7660, clauses: 28946
CNF 4621 vars 38065 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10790, clauses: 45309, status: Unsatisfied, time: 1.419764865s
last 7660 length 28946
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4594, clauses: 16627
last 4594 length 16627
CNF 7660 vars 28946 clauses
CNF 4594 vars 16627 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30658, clauses: 117703
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 38834, clauses: 150768
last 30658 length 117703
last 38834 length 150768
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4594, clauses: 16627, status: Unsatisfied, time: 1.007975781s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7660, clauses: 28946, status: Unsatisfied, time: 1.65178939s
CNF 30658 vars 117703 clauses
CNF 38834 vars 150768 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 133800, clauses: 564392
last 133800 length 564392
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 38834, clauses: 150768, status: Satisfied, time: 2.040191833s
CNF 133800 vars 564392 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14391, clauses: 53909
last 14391 length 53909
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11418, clauses: 48386
last 11418 length 48386
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 111611, clauses: 471163
last 111611 length 471163
CNF 14391 vars 53909 clauses
CNF 11418 vars 48386 clauses
CNF 111611 vars 471163 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18932, clauses: 79757
last 18932 length 79757
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31537, clauses: 139767
last 31537 length 139767
CNF 18932 vars 79757 clauses
CNF 31537 vars 139767 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11418, clauses: 48386, status: Unsatisfied, time: 2.918991187s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18932, clauses: 79757, status: Satisfied, time: 3.115217447s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 7 rules on 5 letters       weights
SRS with 5 rules on 5 letters       context
SRS with 9 rules on 5 letters       mirror
SRS with 9 rules on 5 letters       DP
SRS with 35 strict rules and 9 weak rules on 7 letters       weights
SRS with 10 strict rules and 9 weak rules on 7 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 9 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 9 weak rules on 6 letters       EDG
  SRS with 1 strict rules and 9 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 9 weak rules on 5 letters       EDG

  2 SRS with 1 strict rules and 9 weak rules on 6 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [v, s] -> [ s , p , p , s , s , s , s , s , s , s , s , w , p , p , s , s , p , s , p , s ] {- Input 0 -}
  [v, 0] -> [p, p, s, s, 0, p, p, s, s, s, s, s] {- Input 1 -}
  [w, s] -> [ s , s , s , s , s , s , p , p , s , s , v , p , p , s , s , s , p , p , s , s ] {- Input 2 -}
  [w, 0] -> [ p , s , p , p , p , p , p , p , p , p , s , s , 0 , s , s , s , s , s , s ] {- Input 3 -}
  [p, p, s] -> [p] {- Input 4 -}
  [p, s] -> [] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s, s, s, s, p, s] {- Input 6 -}
reason
  (s, 0/1)
  (p, 0/1)
  (0, 0/1)
  (v, 1/1)
  (w, 1/1)
   property Termination
has value Just True
for SRS
  [v, s] -> [ s , p , p , s , s , s , s , s , s , s , s , w , p , p , s , s , p , s , p , s ] {- Input 0 -}
  [w, s] -> [ s , s , s , s , s , s , p , p , s , s , v , p , p , s , s , s , p , p , s , s ] {- Input 2 -}
  [p, p, s] -> [p] {- Input 4 -}
  [p, s] -> [] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s, s, s, s, p, s] {- Input 6 -}
reason
  context
   property Termination
has value Just True
for SRS
  [v, s] -> [ s , p , p , s , s , s , s , s , s , s , s , w , p , p , s , s , p , s , p , s ] {- Input 0 -}
  [w, s] -> [ s , s , s , s , s , s , p , p , s , s , v , p , p , s , s , s , p , p , s , s ] {- Input 2 -}
  [p, p, s] -> [p] {- Input 4 -}
  [s, p, s] -> [s] {- Input 5 -}
  [p, p, s] -> [p] {- Input 5 -}
  [0, p, s] -> [0] {- Input 5 -}
  [v, p, s] -> [v] {- Input 5 -}
  [w, p, s] -> [w] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s, s, s, s, p, s] {- Input 6 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [s, v] -> [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- Mirror (Input 0) -}
  [s, w] -> [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- Mirror (Input 2) -}
  [s, p, p] -> [p] {- Mirror (Input 4) -}
  [s, p, s] -> [s] {- Mirror (Input 5) -}
  [s, p, p] -> [p] {- Mirror (Input 5) -}
  [s, p, 0] -> [0] {- Mirror (Input 5) -}
  [s, p, v] -> [v] {- Mirror (Input 5) -}
  [s, p, w] -> [w] {- Mirror (Input 5) -}
  [0, p] -> [s, p, s, s, s, s, s, s, s, 0] {- Mirror (Input 6) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
  [s#, v] |-> [s#] {- DP (Top 19) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 9) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, s, s, s, s, s, s, p, p, s] {- DP (Top 10) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, s, s, s, s, s, p, p, s] {- DP (Top 11) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, s, s, s, s, p, p, s] {- DP (Top 12) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, s, s, s, p, p, s] {- DP (Top 13) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, s, s, p, p, s] {- DP (Top 14) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, s, p, p, s] {- DP (Top 15) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 4) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 2) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 0) (Mirror (Input 0)) -}
  [s#, v] |-> [s#, p, p, s] {- DP (Top 16) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 5) (Mirror (Input 0)) -}
  [s#, w] |-> [s#] {- DP (Top 19) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, s] {- DP (Top 18) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, s, s] {- DP (Top 17) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, s, s, s] {- DP (Top 16) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, s, s, s, s] {- DP (Top 15) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, s, s, s, s, s] {- DP (Top 14) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 4) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, s, p, p, s, s, s, s, s, s] {- DP (Top 10) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 0) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 5) (Mirror (Input 2)) -}
  [s#, w] |-> [s#, p, p, s, s, s, s, s, s] {- DP (Top 11) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 1) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 6) (Mirror (Input 2)) -}
  [0#, p] |-> [s#, s, s, s, s, s, s, 0] {- DP (Top 2) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, s, s, s, s, 0] {- DP (Top 3) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, s, s, s, 0] {- DP (Top 4) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, s, s, 0] {- DP (Top 5) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, s, 0] {- DP (Top 6) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, 0] {- DP (Top 7) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, p, s, s, s, s, s, s, s, 0] {- DP (Top 0) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, 0] {- DP (Top 8) (Mirror (Input 6)) -}
  [0#, p] |-> [0#] {- DP (Top 9) (Mirror (Input 6)) -}
reason
  (s, 0/1)
  (p, 0/1)
  (0, 0/1)
  (v, 1/1)
  (w, 1/1)
  (s#, 0/1)
  (0#, 1/1)
   property Termination
has value Just True
for SRS
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
  [s#, v] |-> [ s# , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 4) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 2) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 0) (Mirror (Input 0)) -}
  [s#, v] |-> [ s# , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 5) (Mirror (Input 0)) -}
  [s#, w] |-> [ s# , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 4) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 0) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 5) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 1) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 6) (Mirror (Input 2)) -}
  [0#, p] |-> [0#] {- DP (Top 9) (Mirror (Input 6)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, v] |-> [ s# , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP (Top 4) (Mirror (Input 0)) -}
  [s#, w] |-> [ s# , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 4) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 0) (Mirror (Input 2)) -}
  [s#, w] |-> [ s# , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 5) (Mirror (Input 2)) -}
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  ( s
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
  ( v
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( w
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( s#
  , Wk  / 7A 7A 10A - \
        | 7A 7A 10A - |
        | 7A 7A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [s#, w] |-> [ s# , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 4) (Mirror (Input 2)) -}
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, w] |-> [ s# , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP (Top 4) (Mirror (Input 2)) -}
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  ( s
  , Wk  / 0A -  0A \
        | -  1A -  |
        \ -  -  0A / )
  ( p
  , Wk  / 0A 0A  1A \
        | -  -1A -  |
        \ -  -   0A / )
  ( 0
  , Wk  / 0A -2A 0A \
        | -  -   -  |
        \ -  -   0A / )
  ( v
  , Wk  / - - 2A \
        | - - 0A |
        \ - - 0A / )
  ( w
  , Wk  / - - 2A \
        | - - 1A |
        \ - - 0A / )
  ( s#
  , Wk  / -2A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 9) (Mirror (Input 6)) -}
  [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
  [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  remove un-usable
    SRS
      [s, v] ->= [ s , p , s , p , s , s , p , p , w , s , s , s , s , s , s , s , s , p , p , s ] {- DP Nontop (Mirror (Input 0)) -}
      [s, w] ->= [ s , s , p , p , s , s , s , p , p , v , s , s , p , p , s , s , s , s , s , s ] {- DP Nontop (Mirror (Input 2)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
      [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, v] ->= [v] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, w] ->= [w] {- DP Nontop (Mirror (Input 5)) -}
      [0, p] ->= [s, p, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 9) (Mirror (Input 6)) -}
reason
  (p, 1/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (7,5)\Weight(5,5)\Context\Mirror(9,5)\Deepee(35/9,7)\Weight(10/9,7)\EDG[(4/9,6)\Matrix{\Arctic}{3}\EDG(1/9,6)\Matrix{\ArcticBZ}{3}(0/9,5)\EDG[],(1/9,6)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.366743708000
  min duration 1.023151573000
  total durat. 2.389895281000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 103}
    , self = 59
    , parent = Nothing
    , duration = 1.023151573000
    , status = Fail
    , start = 2025-09-03 13:36:32.91812407 UTC
    , finish = 2025-09-03 13:36:33.941275643 UTC
    , thread_cap_info = ("ThreadId 96", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 98}
    , self = 78
    , parent = Nothing
    , duration = 1.366743708000
    , status = Fail
    , start = 2025-09-03 13:36:37.237271392 UTC
    , finish = 2025-09-03 13:36:38.6040151 UTC
    , thread_cap_info = ("ThreadId 132", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.051440108000
  min duration 3.021031188000
  total durat. 12.154238693000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 136
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 80
      , alphabet_size = 25
      , total_length = 1944}
    , self = 65
    , parent = Nothing
    , duration = 3.021031188000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:32.897448103 UTC
    , finish = 2025-09-03 13:36:35.918479291 UTC
    , thread_cap_info = ("ThreadId 98", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 106
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 69
      , alphabet_size = 19
      , total_length = 1720}
    , self = 69
    , parent = Nothing
    , duration = 3.039990509000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:33.117254723 UTC
    , finish = 2025-09-03 13:36:36.157245232 UTC
    , thread_cap_info = ("ThreadId 102", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 155}
    , self = 61
    , parent = Nothing
    , duration = 3.041776888000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:32.637253191 UTC
    , finish = 2025-09-03 13:36:35.679030079 UTC
    , thread_cap_info = ("ThreadId 61", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 135
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 80
      , alphabet_size = 25
      , total_length = 1938}
    , self = 93
    , parent = Nothing
    , duration = 3.051440108000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:42.50019506 UTC
    , finish = 2025-09-03 13:36:45.551635168 UTC
    , thread_cap_info = ("ThreadId 151", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.041793794000
  min duration 3.041793794000
  total durat. 3.041793794000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 86
      , num_strict_rules = 86
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 20
      , total_length = 1214}
    , self = 62
    , parent = Nothing
    , duration = 3.041793794000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:32.637249292 UTC
    , finish = 2025-09-03 13:36:35.679043086 UTC
    , thread_cap_info = ("ThreadId 73", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.080486383000
  min duration 3.000371421000
  total durat. 18.160772255000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 136
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 80
      , alphabet_size = 25
      , total_length = 1944}
    , self = 66
    , parent = Nothing
    , duration = 3.000371421000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:32.918123688 UTC
    , finish = 2025-09-03 13:36:35.918495109 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 106
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 69
      , alphabet_size = 19
      , total_length = 1720}
    , self = 68
    , parent = Nothing
    , duration = 3.002121215000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:33.137252304 UTC
    , finish = 2025-09-03 13:36:36.139373519 UTC
    , thread_cap_info = ("ThreadId 103", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 155}
    , self = 63
    , parent = Nothing
    , duration = 3.018429568000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:32.660617461 UTC
    , finish = 2025-09-03 13:36:35.679047029 UTC
    , thread_cap_info = ("ThreadId 62", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 98}
    , self = 82
    , parent = Nothing
    , duration = 3.021991752000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:37.258928702 UTC
    , finish = 2025-09-03 13:36:40.280920454 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 135
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 80
      , alphabet_size = 25
      , total_length = 1938}
    , self = 92
    , parent = Nothing
    , duration = 3.037371916000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:42.481858775 UTC
    , finish = 2025-09-03 13:36:45.519230691 UTC
    , thread_cap_info = ("ThreadId 152", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 103}
    , self = 67
    , parent = Nothing
    , duration = 3.080486383000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:32.937294526 UTC
    , finish = 2025-09-03 13:36:36.017780909 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.069518632000
  min duration 3.069518632000
  total durat. 3.069518632000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 86
      , num_strict_rules = 86
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 20
      , total_length = 1214}
    , self = 64
    , parent = Nothing
    , duration = 3.069518632000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:32.627754248 UTC
    , finish = 2025-09-03 13:36:35.69727288 UTC
    , thread_cap_info = ("ThreadId 75", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 8.026477498000
  min duration 8.026477498000
  total durat. 8.026477498000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 98}
    , self = 95
    , parent = Nothing
    , duration = 8.026477498000
    , status = Success
    , start = 2025-09-03 13:36:40.00065885 UTC
    , finish = 2025-09-03 13:36:48.027136348 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.587308575000
  min duration 2.587308575000
  total durat. 2.587308575000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 103}
    , self = 77
    , parent = Nothing
    , duration = 2.587308575000
    , status = Fail
    , start = 2025-09-03 13:36:34.85929734 UTC
    , finish = 2025-09-03 13:36:37.446605915 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 9.087565191000
  min duration 9.087565191000
  total durat. 9.087565191000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 106
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 69
      , alphabet_size = 19
      , total_length = 1720}
    , self = 91
    , parent = Nothing
    , duration = 9.087565191000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:36:36.217265907 UTC
    , finish = 2025-09-03 13:36:45.304831098 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 6.423577677000
  min duration 1.211488770000
  total durat. 7.635066447000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 155}
    , self = 72
    , parent = Nothing
    , duration = 1.211488770000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:35.797256425 UTC
    , finish = 2025-09-03 13:36:37.008745195 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 136
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 80
      , alphabet_size = 25
      , total_length = 1944}
    , self = 85
    , parent = Nothing
    , duration = 6.423577677000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:36:35.960859095 UTC
    , finish = 2025-09-03 13:36:42.384436772 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 6.407267466000
  min duration 2.629796309000
  total durat. 9.037063775000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 103}
    , self = 79
    , parent = Nothing
    , duration = 2.629796309000
    , status = Fail
    , start = 2025-09-03 13:36:36.129960871 UTC
    , finish = 2025-09-03 13:36:38.75975718 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 98}
    , self = 94
    , parent = Nothing
    , duration = 6.407267466000
    , status = Fail
    , start = 2025-09-03 13:36:40.424220916 UTC
    , finish = 2025-09-03 13:36:46.831488382 UTC
    , thread_cap_info = ("ThreadId 145", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 5.894590962000
  min duration 1.094311352000
  total durat. 6.988902314000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 155}
    , self = 70
    , parent = Nothing
    , duration = 1.094311352000
    , status = Success
    , start = 2025-09-03 13:36:35.777261044 UTC
    , finish = 2025-09-03 13:36:36.871572396 UTC
    , thread_cap_info = ("ThreadId 113", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 136
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 80
      , alphabet_size = 25
      , total_length = 1944}
    , self = 83
    , parent = Nothing
    , duration = 5.894590962000
    , status = Success
    , start = 2025-09-03 13:36:35.937281675 UTC
    , finish = 2025-09-03 13:36:41.831872637 UTC
    , thread_cap_info = ("ThreadId 117", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 9.118631071000
  min duration 0.647529994000
  total durat. 11.024306752000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 98}
    , self = 80
    , parent = Nothing
    , duration = 1.258145687000
    , status = Fail
    , start = 2025-09-03 13:36:38.659030057 UTC
    , finish = 2025-09-03 13:36:39.917175744 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 106
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 69
      , alphabet_size = 19
      , total_length = 1720}
    , self = 90
    , parent = Nothing
    , duration = 9.118631071000
    , status = Fail
    , start = 2025-09-03 13:36:36.157271816 UTC
    , finish = 2025-09-03 13:36:45.275902887 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.480551618000
  min duration 1.270081769000
  total durat. 3.750633387000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 98}
    , self = 97
    , parent = Nothing
    , duration = 1.270081769000
    , status = Fail
    , start = 2025-09-03 13:36:46.92398113 UTC
    , finish = 2025-09-03 13:36:48.194062899 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 103}
    , self = 81
    , parent = Nothing
    , duration = 2.480551618000
    , status = Fail
    , start = 2025-09-03 13:36:37.657267209 UTC
    , finish = 2025-09-03 13:36:40.137818827 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length = 62} , self
F                    = 44 , parent = Nothing , duration = 0.134230707000 , status = Fail , start
F                    = 2025-09-03 13:36:32.607131843 UTC , finish = 2025-09-03 13:36:32.74136255
F                    UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                    
| E                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 86 , num_strict_rules
| E                  = 86 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 20 , total_length
| E                  = 1214} , self = 64 , parent = Nothing , duration = 3.069518632000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-03 13:36:32.627754248 UTC ,
| E                  finish = 2025-09-03 13:36:35.69727288 UTC , thread_cap_info = ("ThreadId
| E                  75", 0, False)}
| E                  
| | E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                = False\n , verbose = False}" , input_size = Size { num_rules = 86 , num_strict_rules
| | E                = 86 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 20 , total_length
| | E                = 1214} , self = 62 , parent = Nothing , duration = 3.041793794000 , status
| | E                = Except "AsyncCancelled" , start = 2025-09-03 13:36:32.637249292 UTC ,
| | E                finish = 2025-09-03 13:36:35.679043086 UTC , thread_cap_info = ("ThreadId
| | E                73", 0, False)}
| | E                
| | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | E              = 4 , num_top_rules = 4 , num_weak_rules = 9 , alphabet_size = 6 , total_length
| | | E              = 155} , self = 61 , parent = Nothing , duration = 3.041776888000 , status
| | | E              = Except "<<timeout>>" , start = 2025-09-03 13:36:32.637253191 UTC , finish
| | | E              = 2025-09-03 13:36:35.679030079 UTC , thread_cap_info = ("ThreadId 61",
| | | E              2, False)}
| | | E              
| | | | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | E            = 4 , num_top_rules = 4 , num_weak_rules = 9 , alphabet_size = 6 , total_length
| | | | E            = 155} , self = 63 , parent = Nothing , duration = 3.018429568000 , status
| | | | E            = Except "<<timeout>>" , start = 2025-09-03 13:36:32.660617461 UTC , finish
| | | | E            = 2025-09-03 13:36:35.679047029 UTC , thread_cap_info = ("ThreadId 62",
| | | | E            2, False)}
| | | | E            
F | | | |            
S | | | |            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | | | |            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | | | |            = Size { num_rules = 639 , num_strict_rules = 553 , num_top_rules = 553
S | | | |            , num_weak_rules = 86 , alphabet_size = 26 , total_length = 8598} , self
S | | | |            = 53 , parent = Nothing , duration = 0.106275175000 , status = Success
S | | | |            , start = 2025-09-03 13:36:32.766424091 UTC , finish = 2025-09-03 13:36:32.872699266
S | | | |            UTC , thread_cap_info = ("ThreadId 91", 1, False)}
S | | | |            
S | | | |            
S | | | |            Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
S | | | |            verbose = False}" , input_size = Size { num_rules = 188 , num_strict_rules
S | | | |            = 102 , num_top_rules = 102 , num_weak_rules = 86 , alphabet_size = 26
S | | | |            , total_length = 3328} , self = 56 , parent = Nothing , duration = 0.138046285000
S | | | |            , status = Success , start = 2025-09-03 13:36:32.872717172 UTC , finish
S | | | |            = 2025-09-03 13:36:33.010763457 UTC , thread_cap_info = ("ThreadId 88",
S | | | |            1, False)}
S | | | |            
| | | | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 136 , num_strict_rules
| | | | | E          = 56 , num_top_rules = 56 , num_weak_rules = 80 , alphabet_size = 25 ,
| | | | | E          total_length = 1944} , self = 65 , parent = Nothing , duration = 3.021031188000
| | | | | E          , status = Except "<<timeout>>" , start = 2025-09-03 13:36:32.897448103
| | | | | E          UTC , finish = 2025-09-03 13:36:35.918479291 UTC , thread_cap_info = ("ThreadId
| | | | | E          98", 1, False)}
| | | | | E          
| | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 136 , num_strict_rules
| | | | | | E        = 56 , num_top_rules = 56 , num_weak_rules = 80 , alphabet_size = 25 ,
| | | | | | E        total_length = 1944} , self = 66 , parent = Nothing , duration = 3.000371421000
| | | | | | E        , status = Except "<<timeout>>" , start = 2025-09-03 13:36:32.918123688
| | | | | | E        UTC , finish = 2025-09-03 13:36:35.918495109 UTC , thread_cap_info = ("ThreadId
| | | | | | E        99", 1, False)}
| | | | | | E        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | | | | | | F      = 103} , self = 59 , parent = Nothing , duration = 1.023151573000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:36:32.91812407 UTC , finish = 2025-09-03
| | | | | | | F      13:36:33.941275643 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| | | | | | | F      
| | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | E    = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | | | | | | | E    = 103} , self = 67 , parent = Nothing , duration = 3.080486383000 , status
| | | | | | | | E    = Except "<<timeout>>" , start = 2025-09-03 13:36:32.937294526 UTC , finish
| | | | | | | | E    = 2025-09-03 13:36:36.017780909 UTC , thread_cap_info = ("ThreadId 97",
| | | | | | | | E    2, False)}
| | | | | | | | E    
S | | | | | | | |    
E | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 106 , num_strict_rules
E | | | | | | | |    = 37 , num_top_rules = 37 , num_weak_rules = 69 , alphabet_size = 19 ,
E | | | | | | | |    total_length = 1720} , self = 69 , parent = Nothing , duration = 3.039990509000
E | | | | | | | |    , status = Except "<<timeout>>" , start = 2025-09-03 13:36:33.117254723
E | | | | | | | |    UTC , finish = 2025-09-03 13:36:36.157245232 UTC , thread_cap_info = ("ThreadId
E | | | | | | | |    102", 1, False)}
E | | | | | | | |    
| | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 106 , num_strict_rules
| | | | | | | | | E  = 37 , num_top_rules = 37 , num_weak_rules = 69 , alphabet_size = 19 ,
| | | | | | | | | E  total_length = 1720} , self = 68 , parent = Nothing , duration = 3.002121215000
| | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 13:36:33.137252304
| | | | | | | | | E  UTC , finish = 2025-09-03 13:36:36.139373519 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  103", 1, False)}
| | | | | | | | | E  
| | | | | | | F | |  
| | | | | | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F | |  = 11 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 ,
| | | | | | | F | |  alphabet_size = 7 , total_length = 103} , self = 60 , parent = Nothing
| | | | | | | F | |  , duration = 0.647529994000 , status = Fail , start = 2025-09-03 13:36:34.077270802
| | | | | | | F | |  UTC , finish = 2025-09-03 13:36:34.724800796 UTC , thread_cap_info = ("ThreadId
| | | | | | | F | |  105", 2, False)}
| | | | | | | F | |  
| | | | | | | F | |  
| | | | | | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | F | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size
| | | | | | | F | |  = 7 , total_length = 103} , self = 77 , parent = Nothing , duration = 2.587308575000
| | | | | | | F | |  , status = Fail , start = 2025-09-03 13:36:34.85929734 UTC , finish = 2025-09-03
| | | | | | | F | |  13:36:37.446605915 UTC , thread_cap_info = ("ThreadId 107", 2, False)}
| | | | | | | F | |  
| | | E | | | | | |  
| | E   | | | | | |  
| |     E | | | | |  
| E       | | | | |  
| S       | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S       | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S       | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S       | | | | |  = 13 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 9 ,
| S       | | | | |  alphabet_size = 6 , total_length = 155} , self = 70 , parent = Nothing
| S       | | | | |  , duration = 1.094311352000 , status = Success , start = 2025-09-03 13:36:35.777261044
| S       | | | | |  UTC , finish = 2025-09-03 13:36:36.871572396 UTC , thread_cap_info = ("ThreadId
| S       | | | | |  113", 2, False)}
| S       | | | | |  
| | E     | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E     | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E     | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | E     | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 9 , alphabet_size
| | E     | | | | |  = 6 , total_length = 155} , self = 72 , parent = Nothing , duration = 1.211488770000
| | E     | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:36:35.797256425
| | E     | | | | |  UTC , finish = 2025-09-03 13:36:37.008745195 UTC , thread_cap_info = ("ThreadId
| | E     | | | | |  114", 2, False)}
| | E     | | | | |  
| | |     E | | | |  
| | |       E | | |  
| | | S       | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S       | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S       | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S       | | |  = 136 , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 80
| | | S       | | |  , alphabet_size = 25 , total_length = 1944} , self = 83 , parent = Nothing
| | | S       | | |  , duration = 5.894590962000 , status = Success , start = 2025-09-03 13:36:35.937281675
| | | S       | | |  UTC , finish = 2025-09-03 13:36:41.831872637 UTC , thread_cap_info = ("ThreadId
| | | S       | | |  117", 1, False)}
| | | S       | | |  
| | | | E     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E     | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 136
| | | | E     | | |  , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 80 , alphabet_size
| | | | E     | | |  = 25 , total_length = 1944} , self = 85 , parent = Nothing , duration =
| | | | E     | | |  6.423577677000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E     | | |  13:36:35.960859095 UTC , finish = 2025-09-03 13:36:42.384436772 UTC , thread_cap_info
| | | | E     | | |  = ("ThreadId 118", 1, False)}
| | | | E     | | |  
| | | | |     | E |  
| | | | | F   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F   |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | F   |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size
| | | | | F   |   |  = 7 , total_length = 103} , self = 79 , parent = Nothing , duration = 2.629796309000
| | | | | F   |   |  , status = Fail , start = 2025-09-03 13:36:36.129960871 UTC , finish =
| | | | | F   |   |  2025-09-03 13:36:38.75975718 UTC , thread_cap_info = ("ThreadId 120", 2,
| | | | | F   |   |  False)}
| | | | | F   |   |  
| | | | | |   |   E  
E | | | | |   |      
F | | | | |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |   |      = 106 , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 69
F | | | | |   |      , alphabet_size = 19 , total_length = 1720} , self = 90 , parent = Nothing
F | | | | |   |      , duration = 9.118631071000 , status = Fail , start = 2025-09-03 13:36:36.157271816
F | | | | |   |      UTC , finish = 2025-09-03 13:36:45.275902887 UTC , thread_cap_info = ("ThreadId
F | | | | |   |      124", 1, False)}
F | | | | |   |      
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 106
| | | | | | E |      , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 69 , alphabet_size
| | | | | | E |      = 19 , total_length = 1720} , self = 91 , parent = Nothing , duration =
| | | | | | E |      9.087565191000 , status = Except "<<timeout>>" , start = 2025-09-03 13:36:36.217265907
| | | | | | E |      UTC , finish = 2025-09-03 13:36:45.304831098 UTC , thread_cap_info = ("ThreadId
| | | | | | E |      125", 1, False)}
| | | | | | E |      
| S | | | | | |      
|   E | | | | |      
| F   | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F   | | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 9 , alphabet_size = 6 , total_length
| F   | | | | |      = 98} , self = 78 , parent = Nothing , duration = 1.366743708000 , status
| F   | | | | |      = Fail , start = 2025-09-03 13:36:37.237271392 UTC , finish = 2025-09-03
| F   | | | | |      13:36:38.6040151 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
| F   | | | | |      
| | E | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | E | | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 9 , alphabet_size = 6 , total_length
| | E | | | | |      = 98} , self = 82 , parent = Nothing , duration = 3.021991752000 , status
| | E | | | | |      = Except "<<timeout>>" , start = 2025-09-03 13:36:37.258928702 UTC , finish
| | E | | | | |      = 2025-09-03 13:36:40.280920454 UTC , thread_cap_info = ("ThreadId 133",
| | E | | | | |      2, False)}
| | E | | | | |      
| | | | | | | F      
| | | | | | | F      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 11 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 ,
| | | | | | | F      alphabet_size = 7 , total_length = 103} , self = 81 , parent = Nothing
| | | | | | | F      , duration = 2.480551618000 , status = Fail , start = 2025-09-03 13:36:37.657267209
| | | | | | | F      UTC , finish = 2025-09-03 13:36:40.137818827 UTC , thread_cap_info = ("ThreadId
| | | | | | | F      134", 2, False)}
| | | | | | | F      
| F | | | | | |      
| F | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |      = 10 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 9 ,
| F | | | | | |      alphabet_size = 6 , total_length = 98} , self = 80 , parent = Nothing ,
| F | | | | | |      duration = 1.258145687000 , status = Fail , start = 2025-09-03 13:36:38.659030057
| F | | | | | |      UTC , finish = 2025-09-03 13:36:39.917175744 UTC , thread_cap_info = ("ThreadId
| F | | | | | |      136", 2, False)}
| F | | | | | |      
| | | | | F | |      
| F | | |   | |      
| S | | |   | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | |   | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | |   | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | |   | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | |   | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | |   | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| S | | |   | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 9 , alphabet_size
| S | | |   | |      = 6 , total_length = 98} , self = 95 , parent = Nothing , duration = 8.026477498000
| S | | |   | |      , status = Success , start = 2025-09-03 13:36:40.00065885 UTC , finish
| S | | |   | |      = 2025-09-03 13:36:48.027136348 UTC , thread_cap_info = ("ThreadId 142",
| S | | |   | |      2, False)}
| S | | |   | |      
| | | | |   | F      
| | E | |   |        
| | F | |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | F | |   |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 9 , alphabet_size
| | F | |   |        = 6 , total_length = 98} , self = 94 , parent = Nothing , duration = 6.407267466000
| | F | |   |        , status = Fail , start = 2025-09-03 13:36:40.424220916 UTC , finish =
| | F | |   |        2025-09-03 13:36:46.831488382 UTC , thread_cap_info = ("ThreadId 145",
| | F | |   |        2, False)}
| | F | |   |        
| | | S |   |        
| | |   E   |        
| | | E     |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E     |        = False\n , verbose = False}" , input_size = Size { num_rules = 135 , num_strict_rules
| | | E     |        = 55 , num_top_rules = 55 , num_weak_rules = 80 , alphabet_size = 25 ,
| | | E     |        total_length = 1938} , self = 92 , parent = Nothing , duration = 3.037371916000
| | | E     |        , status = Except "<<timeout>>" , start = 2025-09-03 13:36:42.481858775
| | | E     |        UTC , finish = 2025-09-03 13:36:45.519230691 UTC , thread_cap_info = ("ThreadId
| | | E     |        152", 1, False)}
| | | E     |        
| | | | E   |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E   |        = False\n , verbose = False}" , input_size = Size { num_rules = 135 , num_strict_rules
| | | | E   |        = 55 , num_top_rules = 55 , num_weak_rules = 80 , alphabet_size = 25 ,
| | | | E   |        total_length = 1938} , self = 93 , parent = Nothing , duration = 3.051440108000
| | | | E   |        , status = Except "<<timeout>>" , start = 2025-09-03 13:36:42.50019506
| | | | E   |        UTC , finish = 2025-09-03 13:36:45.551635168 UTC , thread_cap_info = ("ThreadId
| | | | E   |        151", 1, False)}
| | | | E   |        
F | | | |   |        
  | | | |   E        
  | | E |            
  | |   E            
  | F                
F |                  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |                  = 10 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 9 ,
F |                  alphabet_size = 6 , total_length = 98} , self = 97 , parent = Nothing ,
F |                  duration = 1.270081769000 , status = Fail , start = 2025-09-03 13:36:46.92398113
F |                  UTC , finish = 2025-09-03 13:36:48.194062899 UTC , thread_cap_info = ("ThreadId
F |                  166", 2, False)}
F |                  
| S                  
F                    
