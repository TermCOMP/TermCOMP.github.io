last 3762 length 16616
last 3955 length 19223
CNF 3762 vars 16616 clauses
CNF 3955 vars 19223 clauses
last 854 length 3586
last 848 length 3550
CNF 854 vars 3586 clauses
last 1051 length 4550
CNF 1051 vars 4550 clauses
CNF 848 vars 3550 clauses
last 867 length 3642
CNF 867 vars 3642 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2017, clauses: 7366
last 2017 length 7366
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1912, clauses: 6937
last 1912 length 6937
CNF 1912 vars 6937 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1912, clauses: 6937, status: Satisfied, time: 0.005995798s
CNF 2017 vars 7366 clauses
last 916 length 3862
CNF 916 vars 3862 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2017, clauses: 7366, status: Satisfied, time: 0.066146533s
last 1093 length 4837
CNF 1093 vars 4837 clauses
last 4177 length 18322
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7941, clauses: 33357
last 7941 length 33357
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2017, clauses: 7366
last 2017 length 7366
CNF 7941 vars 33357 clauses
CNF 2017 vars 7366 clauses
last 887 length 3732
last 1052 length 4489
CNF 4177 vars 18322 clauses
CNF 887 vars 3732 clauses
CNF 1052 vars 4489 clauses
last 4491 length 19979
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2017, clauses: 7366, status: Unsatisfied, time: 0.128374774s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7941, clauses: 33357
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2020, clauses: 7345
last 4772 length 21644
last 5523 length 26566
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6210, clauses: 23231
CNF 4491 vars 19979 clauses
last 7941 length 33357
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7941, clauses: 33357
last 2020 length 7345
last 6210 length 23231
last 7941 length 33357
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4768, clauses: 19808
CNF 4772 vars 21644 clauses
CNF 5523 vars 26566 clauses
CNF 7941 vars 33357 clauses
CNF 2020 vars 7345 clauses
last 4768 length 19808
CNF 6210 vars 23231 clauses
CNF 7941 vars 33357 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2020, clauses: 7345, status: Satisfied, time: 0.110717606s
CNF 4768 vars 19808 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6048, clauses: 22661
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6210, clauses: 23231, status: Satisfied, time: 0.450193245s
last 6048 length 22661
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7941, clauses: 33357, status: Unsatisfied, time: 0.593549812s
**************************************************CNF 6048 vars 22661 clauses

summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 10 strict rules and 3 weak rules on 4 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [b, a, a, b] {- Input 0 -}
  [a, b, b, b] -> [a, a, a, b] {- Input 1 -}
  [b, b, a, a] -> [b, b, b, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, a, b] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
  [a#, b, b, a] |-> [a#, a, b] {- DP (Top 1) (Input 0) -}
  [a#, b, b, a] |-> [a#, b] {- DP (Top 2) (Input 0) -}
  [a#, b, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [a#, b, b, a] |-> [b#, a, a, b] {- DP (Top 0) (Input 0) -}
  [a#, b, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, b, b, b] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [a#, b, b, b] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, a, a] |-> [b#, a] {- DP (Top 2) (Input 2) -}
  [b#, b, a, a] |-> [b#, b, a] {- DP (Top 1) (Input 2) -}
  [b#, b, a, a] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, a, b] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
  [a#, b, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a, b, b, a] ->= [b, a, a, b] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 10A 12A 13A - \
        | 10A 12A 13A - |
        | 10A 12A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, a, b] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
  [a, b, b, a] ->= [b, a, a, b] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 11A 13A 14A - \
        | 11A 13A 14A - |
        | 11A 13A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, a, b] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, b, a, a] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(10/3,4)\Weight(2/3,4)\EDG[(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[],(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.429152840000
  min duration 0.044892813000
  total durat. 1.077333375000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.534961476000
  min duration 0.037910524000
  total durat. 1.426154080000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.627259001000
  min duration 0.024584310000
  total durat. 1.402372159000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.806701017000
  min duration 0.037157593000
  total durat. 1.488980242000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.242309053000
  min duration 1.242309053000
  total durat. 1.242309053000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 94
    , parent = Nothing
    , duration = 1.242309053000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:13.06900116 UTC
    , finish = 2025-09-03 12:13:14.311310213 UTC
    , thread_cap_info = ("ThreadId 63", 1, False)}
**************************************************
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
F                = 61 , parent = Nothing , duration = 0.223220288000 , status = Fail , start
F                = 2025-09-03 12:13:13.015558398 UTC , finish = 2025-09-03 12:13:13.238778686
F                UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                
| E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E              = 24} , self = 94 , parent = Nothing , duration = 1.242309053000 , status
| E              = Except "AsyncCancelled" , start = 2025-09-03 12:13:13.06900116 UTC ,
| E              finish = 2025-09-03 12:13:14.311310213 UTC , thread_cap_info = ("ThreadId
| E              63", 1, False)}
| E              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F            = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | F            = 140} , self = 79 , parent = Nothing , duration = 0.282648218000 , status
| | F            = Fail , start = 2025-09-03 12:13:13.168122107 UTC , finish = 2025-09-03
| | F            12:13:13.450770325 UTC , thread_cap_info = ("ThreadId 104", 2, False)}
| | F            
| | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S          = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | S          = 3 , total_length = 32} , self = 69 , parent = Nothing , duration = 0.133220288000
| | | S          , status = Success , start = 2025-09-03 12:13:13.179647591 UTC , finish
| | | S          = 2025-09-03 12:13:13.312867879 UTC , thread_cap_info = ("ThreadId 108",
| | | S          1, False)}
| | | S          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
last 4402 length 19748
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F        = 140} , self = 83 , parent = Nothing , duration = 0.534961476000 , status
| | | | F        = Fail , start = 2025-09-03 12:13:13.187486465 UTC , finish = 2025-09-03
| | | | F        12:13:13.722447941 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | | | F        
| | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | E      = 3 , total_length = 32} , self = 74 , parent = Nothing , duration = 0.167475365000
| | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 12:13:13.18754396
| | | | | E      UTC , finish = 2025-09-03 12:13:13.355019325 UTC , thread_cap_info = ("ThreadId
| | | | | E      109", 1, False)}
| | | | | E      
F | | | | |      
  | | S | |      
F | |   | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | |      = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
F | |   | |      = 3 , total_length = 32} , self = 82 , parent = Nothing , duration = 0.290750563000
F | |   | |      , status = Fail , start = 2025-09-03 12:13:13.321033222 UTC , finish =
F | |   | |      2025-09-03 12:13:13.611783785 UTC , thread_cap_info = ("ThreadId 124",
F | |   | |      1, False)}
F | |   | |      
| | | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F | |      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | F | |      = 140} , self = 84 , parent = Nothing , duration = 0.429152840000 , status
| | | F | |      = Fail , start = 2025-09-03 12:13:13.331214629 UTC , finish = 2025-09-03
| | | F | |      12:13:13.760367469 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | F | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | F    = 140} , self = 85 , parent = Nothing , duration = 0.440821598000 , status
| | | | | | F    = Fail , start = 2025-09-03 12:13:13.34747317 UTC , finish = 2025-09-03
| | | | | | F    12:13:13.788294768 UTC , thread_cap_info = ("ThreadId 126", 2, False)}
| | | | | | F    
| | | | | E |    
| | | | | F |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | F |    = 32} , self = 81 , parent = Nothing , duration = 0.212848855000 , status
| | | | | F |    = Fail , start = 2025-09-03 12:13:13.356036132 UTC , finish = 2025-09-03
| | | | | F |    12:13:13.568884987 UTC , thread_cap_info = ("ThreadId 135", 1, False)}
| | | | | F |    
| | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F  = 32} , self = 80 , parent = Nothing , duration = 0.109513835000 , status
| | | | | | | F  = Fail , start = 2025-09-03 12:13:13.367469851 UTC , finish = 2025-09-03
| | | | | | | F  12:13:13.476983686 UTC , thread_cap_info = ("ThreadId 134", 1, False)}
| | | | | | | F  
| | F | | | | |  
| | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | |  = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | S | | | | |  alphabet_size = 5 , total_length = 140} , self = 90 , parent = Nothing
| | S | | | | |  , duration = 0.806701017000 , status = Success , start = 2025-09-03 12:13:13.467487484
| | S | | | | |  UTC , finish = 2025-09-03 12:13:14.274188501 UTC , thread_cap_info = ("ThreadId
| | S | | | | |  138", 2, False)}
| | S | | | | |  
| | | | | | | F  
| | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | S  = 3 , total_length = 32} , self = 86 , parent = Nothing , duration = 0.511901344000
| | | | | | | S  , status = Success , start = 2025-09-03 12:13:13.477003069 UTC , finish
| | | | | | | S  = 2025-09-03 12:13:13.988904413 UTC , thread_cap_info = ("ThreadId 139",
| | | | | | | S  1, False)}
| | | | | | | S  
| | | | | F | |  
| | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | E | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | E | |  = 3 , total_length = 32} , self = 88 , parent = Nothing , duration = 0.627259001000
| | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:13:13.568909428
| | | | | E | |  UTC , finish = 2025-09-03 12:13:14.196168429 UTC , thread_cap_info = ("ThreadId
| | | | | E | |  140", 1, False)}
| | | | | E | |  
F | | | | | | |  
  | | | F | | |  
E | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | | |   | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size
E | | |   | | |  = 5 , total_length = 140} , self = 93 , parent = Nothing , duration = 0.583053483000
E | | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:13:13.728222393
E | | |   | | |  UTC , finish = 2025-09-03 12:13:14.311275876 UTC , thread_cap_info = ("ThreadId
E | | |   | | |  147", 2, False)}
E | | |   | | |  
| | | F   | | |  
| | |     | F |  
| | |     |   S  
| | |     E      
| | S            
E |              
  E              
CNF 4402 vars 19748 clauses
