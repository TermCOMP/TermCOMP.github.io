last 3900 length 17146
last 841 length 3530
last 1164 length 5004
last 3890 length 17225
CNF 841 vars 3530 clauses
CNF 3900 vars 17146 clauses
CNF 3890 vars 17225 clauses
last 1271 length 5333
CNF 1271 vars 5333 clauses
CNF 1164 vars 5004 clauses
last 1415 length 6177
CNF 1415 vars 6177 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1987, clauses: 7246
last 1987 length 7246
CNF 1987 vars 7246 clauses
last 4928 length 21948
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2949, clauses: 10976
last 2949 length 10976
last 4576 length 20212
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1987, clauses: 7246, status: Satisfied, time: 0.0445846s
CNF 2949 vars 10976 clauses
CNF 4576 vars 20212 clauses
CNF 4928 vars 21948 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2949, clauses: 10976, status: Satisfied, time: 0.087424288s
last 802 length 3332
CNF 802 vars 3332 clauses
last 937 length 3908
CNF 937 vars 3908 clauses
last 818 length 3504
CNF 818 vars 3504 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2029, clauses: 7402
last 2029 length 7402
last 5950 length 26402
CNF 2029 vars 7402 clauses
last 992 length 4230
CNF 5950 vars 26402 clauses
CNF 992 vars 4230 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2008, clauses: 7273
last 2008 length 7273
last 6489 length 30861
CNF 2008 vars 7273 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2029, clauses: 7402, status: Unsatisfied, time: 0.156945213s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7943, clauses: 33383
CNF 6489 vars 30861 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7939, clauses: 33351
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2008, clauses: 7273, status: Unsatisfied, time: 0.245903811s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4774, clauses: 19926
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5964, clauses: 22289
last 7943 length 33383
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7391, clauses: 28218
last 7939 length 33351
last 4774 length 19926
last 5964 length 22289
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4764, clauses: 19766
CNF 7943 vars 33383 clauses
last 7391 length 28218
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25183, clauses: 106631
CNF 7939 vars 33351 clauses
CNF 5964 vars 22289 clauses
CNF 4774 vars 19926 clauses
last 4764 length 19766
last 25183 length 106631
CNF 7391 vars 28218 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27736, clauses: 117341
last 27736 length 117341
CNF 4764 vars 19766 clauses
CNF 25183 vars 106631 clauses
CNF 27736 vars 117341 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4774, clauses: 19926, status: Satisfied, time: 0.729118368s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7391, clauses: 28218, status: Satisfied, time: 0.627593582s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5964, clauses: 22289, status: Satisfied, time: 0.688051321s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 11 strict rules and 3 weak rules on 4 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a] -> [a, a, b, a] {- Input 0 -}
  [b, b, a, a] -> [a, a, a, b] {- Input 1 -}
  [b, a, a, b] -> [b, b, b, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
  [a#, b, a, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a, a] |-> [a#, b, a] {- DP (Top 1) (Input 0) -}
  [a#, b, a, a] |-> [b#, a] {- DP (Top 2) (Input 0) -}
  [b#, a, a, b] |-> [a#] {- DP (Top 3) (Input 2) -}
  [b#, a, a, b] |-> [b#, a] {- DP (Top 2) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, a] {- DP (Top 1) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
  [b#, b, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
  [a#, b, a, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, b] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 0) -}
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, a, a, b] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0 2 1 \
        | 1 0 1 |
        \ 0 0 1 / )
  ( b
  , Wk  / 0 2 0 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(11/3,4)\Weight(2/3,4)\EDG[(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[],(1/3,3)\Matrix{\Natural}{3}(0/3,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.576679909000
  min duration 0.028364849000
  total durat. 1.576765470000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.929161126000
  min duration 0.030143434000
  total durat. 1.959034260000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.414127744000
  min duration 0.099599226000
  total durat. 3.056530456000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 96
    , parent = Nothing
    , duration = 1.382952073000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:04:40.613419552 UTC
    , finish = 2025-09-03 12:04:41.996371625 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 89
    , parent = Nothing
    , duration = 1.414127744000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:04:40.555536513 UTC
    , finish = 2025-09-03 12:04:41.969664257 UTC
    , thread_cap_info = ("ThreadId 133", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.082930301000
  min duration 1.082930301000
  total durat. 1.082930301000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 87
    , parent = Nothing
    , duration = 1.082930301000
    , status = Success
    , start = 2025-09-03 12:04:40.855373768 UTC
    , finish = 2025-09-03 12:04:41.938304069 UTC
    , thread_cap_info = ("ThreadId 146", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.412619544000
  min duration 0.129820341000
  total durat. 2.911737882000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 92
    , parent = Nothing
    , duration = 1.223308613000
    , status = Success
    , start = 2025-09-03 12:04:40.772297431 UTC
    , finish = 2025-09-03 12:04:41.995606044 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 90
    , parent = Nothing
    , duration = 1.412619544000
    , status = Success
    , start = 2025-09-03 12:04:40.572089649 UTC
    , finish = 2025-09-03 12:04:41.984709193 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                    = 24} , self = 80 , parent = Nothing , duration = 0.567771653000 , status
F                    = Fail , start = 2025-09-03 12:04:40.017041485 UTC , finish = 2025-09-03
F                    12:04:40.584813138 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                    
| F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                  = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
| F                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
| F                  = 50 , parent = Nothing , duration = 0.207095474000 , status = Fail , start
| F                  = 2025-09-03 12:04:40.017134711 UTC , finish = 2025-09-03 12:04:40.224230185
| F                  UTC , thread_cap_info = ("ThreadId 22", 2, False)}
| F                  
| | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                = 24} , self = 84 , parent = Nothing , duration = 0.816008200000 , status
| | F                = Fail , start = 2025-09-03 12:04:40.017138195 UTC , finish = 2025-09-03
| | F                12:04:40.833146395 UTC , thread_cap_info = ("ThreadId 37", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F              = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | F              = 140} , self = 77 , parent = Nothing , duration = 0.516199552000 , status
| | | F              = Fail , start = 2025-09-03 12:04:40.035862348 UTC , finish = 2025-09-03
| | | F              12:04:40.5520619 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F            = 140} , self = 79 , parent = Nothing , duration = 0.502719770000 , status
| | | | F            = Fail , start = 2025-09-03 12:04:40.052039669 UTC , finish = 2025-09-03
| | | | F            12:04:40.554759439 UTC , thread_cap_info = ("ThreadId 63", 1, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F          = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F          = 120} , self = 57 , parent = Nothing , duration = 0.276647251000 , status
| | | | | F          = Fail , start = 2025-09-03 12:04:40.052312676 UTC , finish = 2025-09-03
| | | | | F          12:04:40.328959927 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F        = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | F        = 120} , self = 54 , parent = Nothing , duration = 0.213348318000 , status
| | | | | | F        = Fail , start = 2025-09-03 12:04:40.072037471 UTC , finish = 2025-09-03
| | | | | | F        12:04:40.285385789 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | F      = 180} , self = 82 , parent = Nothing , duration = 0.576679909000 , status
| | | | | | | F      = Fail , start = 2025-09-03 12:04:40.152571798 UTC , finish = 2025-09-03
| | | | | | | F      12:04:40.729251707 UTC , thread_cap_info = ("ThreadId 85", 1, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | F    = 180} , self = 85 , parent = Nothing , duration = 0.929161126000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 12:04:40.172050786 UTC , finish = 2025-09-03
| | | | | | | | F    12:04:41.101211912 UTC , thread_cap_info = ("ThreadId 86", 1, False)}
| | | | | | | | F    
| F | | | | | | |    
| F | | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F | | | | | | |    = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| F | | | | | | |    = 48} , self = 60 , parent = Nothing , duration = 0.119760385000 , status
| F | | | | | | |    = Fail , start = 2025-09-03 12:04:40.271353965 UTC , finish = 2025-09-03
| F | | | | | | |    12:04:40.39111435 UTC , thread_cap_info = ("ThreadId 97", 3, False)}
| F | | | | | | |    
| | | | | | F | |    
| | | | | | S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S | |    = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | S | |    = 3 , total_length = 32} , self = 61 , parent = Nothing , duration = 0.129820341000
| | | | | | S | |    , status = Success , start = 2025-09-03 12:04:40.285417075 UTC , finish
| | | | | | S | |    = 2025-09-03 12:04:40.415237416 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | S | |    2, False)}
| | | | | | S | |    
| | | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | | E  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | E  = 3 , total_length = 32} , self = 63 , parent = Nothing , duration = 0.159851413000
| | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:40.292052098
| | | | | | | | | E  UTC , finish = 2025-09-03 12:04:40.451903511 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  105", 2, False)}
| | | | | | | | | E  
| | | | | F | | | |  
| | | | | S | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S | | | |  = 4 , total_length = 48} , self = 65 , parent = Nothing , duration = 0.145989384000
| | | | | S | | | |  , status = Success , start = 2025-09-03 12:04:40.336403431 UTC , finish
| | | | | S | | | |  = 2025-09-03 12:04:40.482392815 UTC , thread_cap_info = ("ThreadId 108",
| | | | | S | | | |  3, False)}
| | | | | S | | | |  
| F | | | | | | | |  
|   | | | | S | | |  
|   | | | |   | | E  
|   | | | S   | |    
| F | | |     | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F | | |     | |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F | | |     | |    = 32} , self = 81 , parent = Nothing , duration = 0.106662743000 , status
| F | | |     | |    = Fail , start = 2025-09-03 12:04:40.529764889 UTC , finish = 2025-09-03
| F | | |     | |    12:04:40.636427632 UTC , thread_cap_info = ("ThreadId 130", 3, False)}
| F | | |     | |    
| | | | | F   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   | |    = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | F   | |    = 3 , total_length = 32} , self = 83 , parent = Nothing , duration = 0.297642946000
| | | | | F   | |    , status = Fail , start = 2025-09-03 12:04:40.53456952 UTC , finish = 2025-09-03
| | | | | F   | |    12:04:40.832212466 UTC , thread_cap_info = ("ThreadId 132", 3, False)}
| | | | | F   | |    
| | | F | |   | |    
| | |   F |   | |    
| | | E   |   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E   |   | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | E   |   | |    = 3 , total_length = 32} , self = 89 , parent = Nothing , duration = 1.414127744000
| | | E   |   | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:40.555536513
| | | E   |   | |    UTC , finish = 2025-09-03 12:04:41.969664257 UTC , thread_cap_info = ("ThreadId
| | | E   |   | |    133", 3, False)}
| | | E   |   | |    
| | | | S |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |   | |    = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | S |   | |    alphabet_size = 5 , total_length = 140} , self = 90 , parent = Nothing
| | | | S |   | |    , duration = 1.412619544000 , status = Success , start = 2025-09-03 12:04:40.572089649
| | | | S |   | |    UTC , finish = 2025-09-03 12:04:41.984709193 UTC , thread_cap_info = ("ThreadId
| | | | S |   | |    137", 1, False)}
| | | | S |   | |    
| | | | | | F | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F | |    = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | F | |    = 3 , total_length = 32} , self = 86 , parent = Nothing , duration = 0.529768663000
| | | | | | F | |    , status = Fail , start = 2025-09-03 12:04:40.582268614 UTC , finish =
| | | | | | F | |    2025-09-03 12:04:41.112037277 UTC , thread_cap_info = ("ThreadId 136",
| | | | | | F | |    3, False)}
| | | | | | F | |    
F | | | | | | | |    
E | | | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | | | | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size
E | | | | | | | |    = 5 , total_length = 140} , self = 96 , parent = Nothing , duration = 1.382952073000
E | | | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:40.613419552
E | | | | | | | |    UTC , finish = 2025-09-03 12:04:41.996371625 UTC , thread_cap_info = ("ThreadId
E | | | | | | | |    138", 1, False)}
E | | | | | | | |    
| F | | | | | | |    
|   | | | | | F |    
| S | | | | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | |   |    = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| S | | | | |   |    alphabet_size = 6 , total_length = 180} , self = 92 , parent = Nothing
| S | | | | |   |    , duration = 1.223308613000 , status = Success , start = 2025-09-03 12:04:40.772297431
| S | | | | |   |    UTC , finish = 2025-09-03 12:04:41.995606044 UTC , thread_cap_info = ("ThreadId
| S | | | | |   |    144", 1, False)}
| S | | | | |   |    
| | | | | F |   |    
| | F | |   |   |    
| | S | |   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S | |   |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S | |   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S | |   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | |   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | |   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | S | |   |   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | S | |   |   |    = 3 , total_length = 32} , self = 87 , parent = Nothing , duration = 1.082930301000
| | S | |   |   |    , status = Success , start = 2025-09-03 12:04:40.855373768 UTC , finish
| | S | |   |   |    = 2025-09-03 12:04:41.938304069 UTC , thread_cap_info = ("ThreadId 146",
| | S | |   |   |    2, False)}
| | S | |   |   |    
| | | | |   |   F    
| | | | |   F        
| | S | |            
| |   E |            
| |     S            
| S                  
E                    
