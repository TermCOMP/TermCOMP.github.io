last 599 length 2433
last 718 length 2959
CNF 718 vars 2959 clauses
CNF 599 vars 2433 clauses
last 606 length 2475
last 751 length 3104
CNF 606 vars 2475 clauses
CNF 751 vars 3104 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2179, clauses: 7795
last 2179 length 7795
CNF 2179 vars 7795 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2298, clauses: 8375
last 2298 length 8375
CNF 2298 vars 8375 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2179, clauses: 7795, status: Unsatisfied, time: 0.043643462s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2298, clauses: 8375, status: Unsatisfied, time: 0.077624083s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6463, clauses: 26709
last 6463 length 26709
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7304, clauses: 30377
last 7304 length 30377
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4049, clauses: 16285
last 4049 length 16285
CNF 6463 vars 26709 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4550, clauses: 18450
last 4550 length 18450
CNF 4049 vars 16285 clauses
CNF 4550 vars 18450 clauses
CNF 7304 vars 30377 clauses
last 5599 length 30077
CNF 5599 vars 30077 clauses
last 6315 length 42652
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4049, clauses: 16285, status: Unsatisfied, time: 0.326524414s
CNF 6315 vars 42652 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4550, clauses: 18450, status: Unsatisfied, time: 0.345436512s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6463, clauses: 26709, status: Unsatisfied, time: 0.37718535s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3565, clauses: 13314
last 3565 length 13314
CNF 3565 vars 13314 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3565, clauses: 13314, status: Unsatisfied, time: 0.199789316s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11294, clauses: 47531
last 11294 length 47531
CNF 11294 vars 47531 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6630, clauses: 24539
last 6630 length 24539
CNF 6630 vars 24539 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3773, clauses: 14493
last 3773 length 14493
CNF 3773 vars 14493 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7304, clauses: 30377, status: Unsatisfied, time: 1.261243991s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6630, clauses: 24539, status: Unsatisfied, time: 0.497041732s
last 6762 length 27217
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3773, clauses: 14493, status: Unsatisfied, time: 0.59350788s
CNF 6762 vars 27217 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13883, clauses: 64383
last 13883 length 64383
last 10298 length 43443
CNF 13883 vars 64383 clauses
CNF 10298 vars 43443 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7049, clauses: 26753
last 7049 length 26753
CNF 7049 vars 26753 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12686, clauses: 53659
last 12686 length 53659
CNF 12686 vars 53659 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7049, clauses: 26753, status: Unsatisfied, time: 1.25380811s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16581, clauses: 64265
last 16581 length 64265
CNF 16581 vars 64265 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15528, clauses: 72367
last 15528 length 72367
CNF 15528 vars 72367 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22231, clauses: 91684
last 22231 length 91684
CNF 22231 vars 91684 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15528, clauses: 72367, status: Satisfied, time: 2.345174879s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 3 strict rules and 5 weak rules on 4 letters       EDG
SRS with 3 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Usable
SRS with 1 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b] -> [] {- Input 1 -}
  [b, c, c] -> [c, c, b, c, a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, a, b] -> [a] {- Input 1 -}
  [b, a, b] -> [b] {- Input 1 -}
  [c, a, b] -> [c] {- Input 1 -}
  [b, c, c] -> [c, c, b, c, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [b, a, a] -> [a] {- Mirror (Input 1) -}
  [b, a, b] -> [b] {- Mirror (Input 1) -}
  [b, a, c] -> [c] {- Mirror (Input 1) -}
  [c, c, b] -> [a, c, b, c, c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, b] ->= [a, c, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c, b] |-> [a#, c, b, c, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, c, b] |-> [b#, c, c] {- DP (Top 2) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#, b, c, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, b] ->= [a, c, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#, b, c, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#, b, c, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, b] ->= [a, c, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A - - 0A 1A \
        | 1A - - -  0A |
        | -  - - 1A -  |
        | 0A - - -  0A |
        \ -  - - -  0A / )
  ( b
  , Wk  / 1A - - 0A 1A \
        | 1A - - -  -  |
        | -  - - 1A -  |
        | 0A - - -  0A |
        \ -  - - -  0A / )
  ( c
  , Wk  / -  - - 0A 0A \
        | 1A - - -  -  |
        | -  - - 1A -  |
        | 0A - - -  -  |
        \ -  - - -  0A / )
  ( c#
  , Wk  / - - - 0A 0A \
        | - - - -  -  |
        | - - - -  -  |
        | - - - -  -  |
        \ - - - -  0A / )
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, b] ->= [a, c, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, b] ->= [a, c, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  remove un-usable
    SRS
      [a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
      [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
      [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
      [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
      [c, c, b] ->= [a, c, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
reason
  (b, 1/1)
  (c, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(3/5,4)\Matrix{\Arctic}{5}\EDG(1/5,4)\Usable(1,3)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.522286760000
  min duration 0.019458992000
  total durat. 3.194001701000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 43
      , num_top_rules = 43
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 388}
    , self = 72
    , parent = Nothing
    , duration = 2.522286760000
    , status = Fail
    , start = 2025-09-03 11:22:11.716013303 UTC
    , finish = 2025-09-03 11:22:14.238300063 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.147036744000
  min duration 3.147036744000
  total durat. 3.147036744000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 642}
    , self = 73
    , parent = Nothing
    , duration = 3.147036744000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:22:11.91469651 UTC
    , finish = 2025-09-03 11:22:15.061733254 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.717464065000
  min duration 0.045655470000
  total durat. 2.476292039000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 43
      , num_top_rules = 43
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 388}
    , self = 71
    , parent = Nothing
    , duration = 1.717464065000
    , status = Fail
    , start = 2025-09-03 11:22:11.739629344 UTC
    , finish = 2025-09-03 11:22:13.457093409 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.135988626000
  min duration 3.135988626000
  total durat. 3.135988626000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 642}
    , self = 74
    , parent = Nothing
    , duration = 3.135988626000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:22:11.931639813 UTC
    , finish = 2025-09-03 11:22:15.067628439 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.473442775000
  min duration 0.596984050000
  total durat. 2.070426825000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 68
    , parent = Nothing
    , duration = 1.473442775000
    , status = Fail
    , start = 2025-09-03 11:22:11.31992907 UTC
    , finish = 2025-09-03 11:22:12.793371845 UTC
    , thread_cap_info = ("ThreadId 89", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 5.406392107000
  min duration 5.406392107000
  total durat. 5.406392107000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 76
    , parent = Nothing
    , duration = 5.406392107000
    , status = Success
    , start = 2025-09-03 11:22:15.995666478 UTC
    , finish = 2025-09-03 11:22:21.402058585 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 8.776384276000
  min duration 8.776384276000
  total durat. 8.776384276000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 78
    , parent = Nothing
    , duration = 8.776384276000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:22:12.91681924 UTC
    , finish = 2025-09-03 11:22:21.693203516 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.038739907000
  min duration 0.278408584000
  total durat. 1.317148491000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 70
    , parent = Nothing
    , duration = 1.038739907000
    , status = Fail
    , start = 2025-09-03 11:22:12.039000682 UTC
    , finish = 2025-09-03 11:22:13.077740589 UTC
    , thread_cap_info = ("ThreadId 126", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.606606458000
  min duration 0.725649227000
  total durat. 3.332255685000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 75
    , parent = Nothing
    , duration = 2.606606458000
    , status = Fail
    , start = 2025-09-03 11:22:13.254000829 UTC
    , finish = 2025-09-03 11:22:15.860607287 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 162} , self = 63 , parent = Nothing , duration = 0.632780565000 , status
F                = Fail , start = 2025-09-03 11:22:11.241581995 UTC , finish = 2025-09-03
F                11:22:11.87436256 UTC , thread_cap_info = ("ThreadId 70", 1, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 162} , self = 65 , parent = Nothing , duration = 0.657838674000 , status
| F              = Fail , start = 2025-09-03 11:22:11.241588952 UTC , finish = 2025-09-03
| F              11:22:11.899427626 UTC , thread_cap_info = ("ThreadId 72", 1, False)}
| F              
| | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F            = 4 , total_length = 38} , self = 47 , parent = Nothing , duration = 0.116998867000
| | F            , status = Fail , start = 2025-09-03 11:22:11.280651078 UTC , finish =
| | F            2025-09-03 11:22:11.397649945 UTC , thread_cap_info = ("ThreadId 86", 3,
| | F            False)}
| | F            
| | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F          = 5 , total_length = 34} , self = 66 , parent = Nothing , duration = 0.596984050000
| | | F          , status = Fail , start = 2025-09-03 11:22:11.310036935 UTC , finish =
| | | F          2025-09-03 11:22:11.907020985 UTC , thread_cap_info = ("ThreadId 88", 2,
| | | F          False)}
| | | F          
| | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | F        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | F        = 4 , total_length = 38} , self = 68 , parent = Nothing , duration = 1.473442775000
| | | | F        , status = Fail , start = 2025-09-03 11:22:11.31992907 UTC , finish = 2025-09-03
| | | | F        11:22:12.793371845 UTC , thread_cap_info = ("ThreadId 89", 3, False)}
| | | | F        
| | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | F      = 5 , total_length = 34} , self = 61 , parent = Nothing , duration = 0.480345665000
| | | | | F      , status = Fail , start = 2025-09-03 11:22:11.374236268 UTC , finish =
| | | | | F      2025-09-03 11:22:11.854581933 UTC , thread_cap_info = ("ThreadId 95", 2,
| | | | | F      False)}
| | | | | F      
| | F | | |      
| | F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | F | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F | | |      = 4 , total_length = 38} , self = 64 , parent = Nothing , duration = 0.480376524000
| | F | | |      , status = Fail , start = 2025-09-03 11:22:11.410905542 UTC , finish =
| | F | | |      2025-09-03 11:22:11.891282066 UTC , thread_cap_info = ("ThreadId 96", 3,
| | F | | |      False)}
| | F | | |      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | | | | F    = 43 , num_top_rules = 43 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | F    total_length = 388} , self = 72 , parent = Nothing , duration = 2.522286760000
| | | | | | F    , status = Fail , start = 2025-09-03 11:22:11.716013303 UTC , finish =
| | | | | | F    2025-09-03 11:22:14.238300063 UTC , thread_cap_info = ("ThreadId 115",
| | | | | | F    3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | | | | | F  = 43 , num_top_rules = 43 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | F  total_length = 388} , self = 71 , parent = Nothing , duration = 1.717464065000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:22:11.739629344 UTC , finish =
| | | | | | | F  2025-09-03 11:22:13.457093409 UTC , thread_cap_info = ("ThreadId 116",
| | | | | | | F  3, False)}
| | | | | | | F  
| | | | | F | |  
| | | | | F | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | F | |  = 5 , total_length = 34} , self = 67 , parent = Nothing , duration = 0.278408584000
| | | | | F | |  , status = Fail , start = 2025-09-03 11:22:11.872801293 UTC , finish =
| | | | | F | |  2025-09-03 11:22:12.151209877 UTC , thread_cap_info = ("ThreadId 119",
| | | | | F | |  2, False)}
| | | | | F | |  
F | | | | | | |  
  | F | | | | |  
  F   | | | | |  
      F | | | |  
E       | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E       | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E       | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
E       | | | |  = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
E       | | | |  total_length = 642} , self = 73 , parent = Nothing , duration = 3.147036744000
E       | | | |  , status = Except "<<timeout>>" , start = 2025-09-03 11:22:11.91469651
E       | | | |  UTC , finish = 2025-09-03 11:22:15.061733254 UTC , thread_cap_info = ("ThreadId
E       | | | |  120", 3, False)}
E       | | | |  
| E     | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E     | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| E     | | | |  = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| E     | | | |  total_length = 642} , self = 74 , parent = Nothing , duration = 3.135988626000
| E     | | | |  , status = Except "<<timeout>>" , start = 2025-09-03 11:22:11.931639813
| E     | | | |  UTC , finish = 2025-09-03 11:22:15.067628439 UTC , thread_cap_info = ("ThreadId
| E     | | | |  121", 3, False)}
| E     | | | |  
| | F   | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | | | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F   | | | |  = 4 , total_length = 38} , self = 70 , parent = Nothing , duration = 1.038739907000
| | F   | | | |  , status = Fail , start = 2025-09-03 11:22:12.039000682 UTC , finish =
| | F   | | | |  2025-09-03 11:22:13.077740589 UTC , thread_cap_info = ("ThreadId 126",
| | F   | | | |  3, False)}
| | F   | | | |  
| | |   | F | |  
| | | F |   | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |   | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F |   | |  = 5 , total_length = 34} , self = 69 , parent = Nothing , duration = 0.725649227000
| | | F |   | |  , status = Fail , start = 2025-09-03 11:22:12.173961317 UTC , finish =
| | | F |   | |  2025-09-03 11:22:12.899610544 UTC , thread_cap_info = ("ThreadId 127",
| | | F |   | |  2, False)}
| | | F |   | |  
| | | | F   | |  
| | | F     | |  
| | | E     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E     | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E     | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | E     | |  = 4 , total_length = 38} , self = 78 , parent = Nothing , duration = 8.776384276000
| | | E     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:22:12.91681924
| | | E     | |  UTC , finish = 2025-09-03 11:22:21.693203516 UTC , thread_cap_info = ("ThreadId
| | | E     | |  131", 3, False)}
| | | E     | |  
| | F |     | |  
| | F |     | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |     | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F |     | |  = 4 , total_length = 38} , self = 75 , parent = Nothing , duration = 2.606606458000
| | F |     | |  , status = Fail , start = 2025-09-03 11:22:13.254000829 UTC , finish =
| | F |     | |  2025-09-03 11:22:15.860607287 UTC , thread_cap_info = ("ThreadId 134",
| | F |     | |  3, False)}
| | F |     | |  
| | | |     | F  
| | | |     F    
E | | |          
  E | |          
    F |          
S     |          Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
S     |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S     |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S     |          , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S     |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S     |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
S     |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
S     |          = 4 , total_length = 38} , self = 76 , parent = Nothing , duration = 5.406392107000
S     |          , status = Success , start = 2025-09-03 11:22:15.995666478 UTC , finish
S     |          = 2025-09-03 11:22:21.402058585 UTC , thread_cap_info = ("ThreadId 146",
S     |          3, False)}
S     |          
S     |          
      E          
