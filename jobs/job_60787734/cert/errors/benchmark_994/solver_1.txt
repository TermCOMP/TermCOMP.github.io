last 661 length 2502
last 790 length 2991
CNF 790 vars 2991 clauses
CNF 661 vars 2502 clauses
last 742 length 2805
CNF 742 vars 2805 clauses
last 652 length 2467
CNF 652 vars 2467 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5510, clauses: 19575
last 5510 length 19575
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5404, clauses: 19150
last 5404 length 19150
CNF 5510 vars 19575 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10618, clauses: 42785
CNF 5404 vars 19150 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10572, clauses: 42609
last 10618 length 42785
last 10572 length 42609
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5404, clauses: 19150, status: Satisfied, time: 0.096993239s
CNF 10572 vars 42609 clauses
CNF 10618 vars 42785 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5510, clauses: 19575, status: Satisfied, time: 0.250858876s
last 404 length 1525
last 422 length 1607
CNF 404 vars 1525 clauses
last 670 length 2535
last 616 length 2329
CNF 670 vars 2535 clauses
CNF 422 vars 1607 clauses
CNF 616 vars 2329 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3162, clauses: 10958
last 3162 length 10958
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4890, clauses: 17276
last 4890 length 17276
CNF 3162 vars 10958 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8128, clauses: 32841
CNF 4890 vars 17276 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10107, clauses: 40787
last 8128 length 32841
last 10107 length 40787
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3162, clauses: 10958, status: Satisfied, time: 0.18471856s
CNF 8128 vars 32841 clauses
CNF 10107 vars 40787 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4890, clauses: 17276, status: Satisfied, time: 0.120604796s
last 608 length 2299
CNF 608 vars 2299 clauses
last 662 length 2505
CNF 662 vars 2505 clauses
last 378 length 1433
last 389 length 1488
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4784, clauses: 16887
CNF 378 vars 1433 clauses
last 4784 length 16887
CNF 389 vars 1488 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10061, clauses: 40617
CNF 4784 vars 16887 clauses
last 10061 length 40617
CNF 10061 vars 40617 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2872, clauses: 9946
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4784, clauses: 16887, status: Satisfied, time: 0.245195258s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7755, clauses: 31365
last 2872 length 9946
last 7755 length 31365
CNF 2872 vars 9946 clauses
last 600 length 2269
CNF 600 vars 2269 clauses
last 654 length 2475
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2872, clauses: 9946, status: Satisfied, time: 0.040214412s
CNF 7755 vars 31365 clauses
CNF 654 vars 2475 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4678, clauses: 16498
last 4678 length 16498
CNF 4678 vars 16498 clauses
**************************************************
summary
**************************************************
SRS with 10 rules on 7 letters       DP
SRS with 15 strict rules and 10 weak rules on 14 letters       EDG
SRS with 15 strict rules and 10 weak rules on 14 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 10 strict rules and 10 weak rules on 14 letters       weights
SRS with 5 strict rules and 10 weak rules on 12 letters       EDG
2 sub-proofs
  1 SRS with 3 strict rules and 10 weak rules on 10 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 10 weak rules on 10 letters       weights
  SRS with 0 strict rules and 10 weak rules on 7 letters       EDG

  2 SRS with 2 strict rules and 10 weak rules on 9 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 10 weak rules on 9 letters       weights
  SRS with 0 strict rules and 10 weak rules on 7 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [c, b] {- Input 0 -}
  [c, c] -> [d, b] {- Input 1 -}
  [d] -> [c, e] {- Input 2 -}
  [b, b] -> [f] {- Input 3 -}
  [c, b] -> [g] {- Input 4 -}
  [e] -> [f] {- Input 5 -}
  [e] -> [b, b] {- Input 6 -}
  [f, g] -> [a, c] {- Input 7 -}
  [g, f] -> [e] {- Input 8 -}
  [a] -> [b, c] {- Input 9 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
  [d#] |-> [e#] {- DP (Top 1) (Input 2) -}
  [d#] |-> [c#, e] {- DP (Top 0) (Input 2) -}
  [g#, f] |-> [e#] {- DP (Top 0) (Input 8) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 9) -}
  [a#] |-> [c#] {- DP (Top 1) (Input 9) -}
  [a#, b] |-> [c#, b] {- DP (Top 0) (Input 0) -}
  [f#, g] |-> [a#, c] {- DP (Top 0) (Input 7) -}
  [f#, g] |-> [c#] {- DP (Top 1) (Input 7) -}
  [b#, b] |-> [f#] {- DP (Top 0) (Input 3) -}
  [e#] |-> [f#] {- DP (Top 0) (Input 5) -}
  [e#] |-> [b#] {- DP (Top 1) (Input 6) -}
  [e#] |-> [b#, b] {- DP (Top 0) (Input 6) -}
  [c#, b] |-> [g#] {- DP (Top 0) (Input 4) -}
  [c#, c] |-> [d#, b] {- DP (Top 0) (Input 1) -}
  [c#, c] |-> [b#] {- DP (Top 1) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#] |-> [e#] {- DP (Top 1) (Input 2) -}
  [e#] |-> [f#] {- DP (Top 0) (Input 5) -}
  [f#, g] |-> [a#, c] {- DP (Top 0) (Input 7) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 9) -}
  [b#, b] |-> [f#] {- DP (Top 0) (Input 3) -}
  [f#, g] |-> [c#] {- DP (Top 1) (Input 7) -}
  [c#, b] |-> [g#] {- DP (Top 0) (Input 4) -}
  [g#, f] |-> [e#] {- DP (Top 0) (Input 8) -}
  [e#] |-> [b#] {- DP (Top 1) (Input 6) -}
  [e#] |-> [b#, b] {- DP (Top 0) (Input 6) -}
  [c#, c] |-> [d#, b] {- DP (Top 0) (Input 1) -}
  [d#] |-> [c#, e] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [b#] {- DP (Top 1) (Input 1) -}
  [a#] |-> [c#] {- DP (Top 1) (Input 9) -}
  [a#, b] |-> [c#, b] {- DP (Top 0) (Input 0) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  ( d
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( g
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( f
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( e
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( d#
  , Wk  / 13A 13A 16A - \
        | 13A 13A 16A - |
        | 13A 13A 16A - |
        \ -   -   -   - / )
  ( g#
  , Wk  / 13A 13A 16A - \
        | 13A 13A 16A - |
        | 13A 13A 16A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 14A 14A 14A - \
        | 14A 14A 14A - |
        | 14A 14A 14A - |
        \ -   -   -   - / )
  ( f#
  , Wk  / 11A 11A 14A - \
        | 11A 11A 14A - |
        | 11A 11A 14A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 11A 13A 13A - \
        | 11A 13A 13A - |
        | 11A 13A 13A - |
        \ -   -   -   - / )
  ( e#
  , Wk  / 13A 13A 16A - \
        | 13A 13A 16A - |
        | 13A 13A 16A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [d#] |-> [e#] {- DP (Top 1) (Input 2) -}
  [f#, g] |-> [a#, c] {- DP (Top 0) (Input 7) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 9) -}
  [b#, b] |-> [f#] {- DP (Top 0) (Input 3) -}
  [c#, b] |-> [g#] {- DP (Top 0) (Input 4) -}
  [g#, f] |-> [e#] {- DP (Top 0) (Input 8) -}
  [e#] |-> [b#] {- DP (Top 1) (Input 6) -}
  [c#, c] |-> [d#, b] {- DP (Top 0) (Input 1) -}
  [d#] |-> [c#, e] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [b#] {- DP (Top 1) (Input 1) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  (d, 0/1)
  (g, 0/1)
  (a, 0/1)
  (f, 0/1)
  (b, 0/1)
  (e, 0/1)
  (c, 0/1)
  (d#, 3/1)
  (g#, 2/1)
  (a#, 0/1)
  (f#, 0/1)
  (b#, 0/1)
  (e#, 1/1)
  (c#, 3/1)
   property Termination
has value Just True
for SRS
  [f#, g] |-> [a#, c] {- DP (Top 0) (Input 7) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 9) -}
  [b#, b] |-> [f#] {- DP (Top 0) (Input 3) -}
  [c#, c] |-> [d#, b] {- DP (Top 0) (Input 1) -}
  [d#] |-> [c#, e] {- DP (Top 0) (Input 2) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [f#, g] |-> [a#, c] {- DP (Top 0) (Input 7) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 9) -}
  [b#, b] |-> [f#] {- DP (Top 0) (Input 3) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  ( d
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( g
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( f
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( e
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( f#
  , Wk  / 11A 11A 12A - \
        | 11A 11A 12A - |
        | 11A 11A 12A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 9A 12A 12A - \
        | 9A 12A 12A - |
        | 9A 12A 12A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [f#, g] |-> [a#, c] {- DP (Top 0) (Input 7) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 9) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  (d, 0/1)
  (g, 0/1)
  (a, 0/1)
  (f, 0/1)
  (b, 0/1)
  (e, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (f#, 2/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [c#, c] |-> [d#, b] {- DP (Top 0) (Input 1) -}
  [d#] |-> [c#, e] {- DP (Top 0) (Input 2) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  ( d
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( g
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( f
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( e
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( d#
  , Wk  / 21A 21A 24A - \
        | 21A 21A 24A - |
        | 21A 21A 24A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 20A 21A 21A - \
        | 20A 21A 21A - |
        | 20A 21A 21A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [c#, c] |-> [d#, b] {- DP (Top 0) (Input 1) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  (d, 0/1)
  (g, 0/1)
  (a, 0/1)
  (f, 0/1)
  (b, 0/1)
  (e, 0/1)
  (c, 0/1)
  (d#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [c, b] {- DP Nontop (Input 0) -}
  [c, c] ->= [d, b] {- DP Nontop (Input 1) -}
  [d] ->= [c, e] {- DP Nontop (Input 2) -}
  [b, b] ->= [f] {- DP Nontop (Input 3) -}
  [c, b] ->= [g] {- DP Nontop (Input 4) -}
  [e] ->= [f] {- DP Nontop (Input 5) -}
  [e] ->= [b, b] {- DP Nontop (Input 6) -}
  [f, g] ->= [a, c] {- DP Nontop (Input 7) -}
  [g, f] ->= [e] {- DP Nontop (Input 8) -}
  [a] ->= [b, c] {- DP Nontop (Input 9) -}
reason
  EDG

**************************************************
skeleton: (10,7)\Deepee\EDG(15/10,14)\Matrix{\Arctic}{3}(10/10,14)\Weight(5/10,12)\EDG[(3/10,10)\Matrix{\Arctic}{3}(2/10,10)\Weight(0/10,7)\EDG[],(2/10,9)\Matrix{\Arctic}{3}(1/10,9)\Weight(0/10,7)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10015, clauses: 40447
last 10015 length 40447

Except CNF 10015 vars 40447 clauses
"AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 6
  max duration 0.359058633000
  min duration 0.218477150000
  total durat. 1.613724092000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.390479709000
  min duration 0.217894887000
  total durat. 1.705661433000
**************************************************
S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S            = 26 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 10
S            , alphabet_size = 14 , total_length = 79} , self = 54 , parent = Nothing
S            , duration = 0.390479709000 , status = Success , start = 2025-09-03 13:42:49.235342193
S            UTC , finish = 2025-09-03 13:42:49.625821902 UTC , thread_cap_info = ("ThreadId
S            77", 0, False)}
S            
| E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 26
| E          , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 10 , alphabet_size
| E          = 14 , total_length = 79} , self = 61 , parent = Nothing , duration = 0.359058633000
| E          , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:49.270618784
| E          UTC , finish = 2025-09-03 13:42:49.629677417 UTC , thread_cap_info = ("ThreadId
| E          87", 0, False)}
| E          
| | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S        = 25 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 10
| | S        , alphabet_size = 14 , total_length = 76} , self = 51 , parent = Nothing
| | S        , duration = 0.242883638000 , status = Success , start = 2025-09-03 13:42:49.29121476
| | S        UTC , finish = 2025-09-03 13:42:49.534098398 UTC , thread_cap_info = ("ThreadId
| | S        89", 0, False)}
| | S        
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 25
| | | E      , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 10 , alphabet_size
| | | E      = 14 , total_length = 76} , self = 56 , parent = Nothing , duration = 0.295097887000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:49.331186241
| | | E      UTC , finish = 2025-09-03 13:42:49.626284128 UTC , thread_cap_info = ("ThreadId
| | | E      93", 0, False)}
| | | E      
| | | | F    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | F    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | F    = Size { num_rules = 1715 , num_strict_rules = 1225 , num_top_rules = 1225
| | | | F    , num_weak_rules = 490 , alphabet_size = 98 , total_length = 7987} , self
| | | | F    = 53 , parent = Nothing , duration = 0.235960959000 , status = Fail , start
| | | | F    = 2025-09-03 13:42:49.371526534 UTC , finish = 2025-09-03 13:42:49.607487493
| | | | F    UTC , thread_cap_info = ("ThreadId 100", 3, False)}
| | | | F    
| | | | | F  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | F  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | F  = Size { num_rules = 1764 , num_strict_rules = 1274 , num_top_rules = 1274
| | | | | F  , num_weak_rules = 490 , alphabet_size = 98 , total_length = 8183} , self
| | | | | F  = 67 , parent = Nothing , duration = 0.253367313000 , status = Fail , start
| | | | | F  = 2025-09-03 13:42:49.411538111 UTC , finish = 2025-09-03 13:42:49.664905424
| | | | | F  UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | F  
| | S | | |  
| |   | F |  
S |   |   |  
  |   E   |  
  E       |  
S         |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S         |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S         |  = 13 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 10 ,
S         |  alphabet_size = 10 , total_length = 42} , self = 71 , parent = Nothing
S         |  , duration = 0.296143372000 , status = Success , start = 2025-09-03 13:42:49.644481687
S         |  UTC , finish = 2025-09-03 13:42:49.940625059 UTC , thread_cap_info = ("ThreadId
S         |  121", 0, False)}
S         |  
|         F  
| S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S          = 22 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 10
| S          , alphabet_size = 13 , total_length = 68} , self = 72 , parent = Nothing
| S          , duration = 0.266248166000 , status = Success , start = 2025-09-03 13:42:49.674992241
| S          UTC , finish = 2025-09-03 13:42:49.941240407 UTC , thread_cap_info = ("ThreadId
| S          122", 0, False)}
| S          
| | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | E        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 10 , alphabet_size
| | E        = 10 , total_length = 42} , self = 80 , parent = Nothing , duration = 0.245835022000
| | E        , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:49.708200074
| | E        UTC , finish = 2025-09-03 13:42:49.954035096 UTC , thread_cap_info = ("ThreadId
| | E        123", 0, False)}
| | E        
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | E      , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 10 , alphabet_size
| | | E      = 13 , total_length = 68} , self = 75 , parent = Nothing , duration = 0.218477150000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:49.730627663
| | | E      UTC , finish = 2025-09-03 13:42:49.949104813 UTC , thread_cap_info = ("ThreadId
| | | E      124", 0, False)}
| | | E      
S | | |      
  S | |      
    | E      
    E        
S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S            = 21 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 10
S            , alphabet_size = 13 , total_length = 66} , self = 89 , parent = Nothing
S            , duration = 0.292011661000 , status = Success , start = 2025-09-03 13:42:49.961806572
S            UTC , finish = 2025-09-03 13:42:50.253818233 UTC , thread_cap_info = ("ThreadId
S            140", 0, False)}
S            
| F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F          = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 9 , total_length
| F          = 39} , self = 87 , parent = Nothing , duration = 0.106223081000 , status
| F          = Fail , start = 2025-09-03 13:42:49.970745555 UTC , finish = 2025-09-03
| F          13:42:50.076968636 UTC , thread_cap_info = ("ThreadId 142", 0, False)}
| F          
| | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F        = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 9 , total_length
| | F        = 39} , self = 88 , parent = Nothing , duration = 0.103698568000 , status
| | F        = Fail , start = 2025-09-03 13:42:49.9732799 UTC , finish = 2025-09-03
| | F        13:42:50.076978468 UTC , thread_cap_info = ("ThreadId 143", 0, False)}
| | F        
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | | E      , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 10 , alphabet_size
| | | E      = 13 , total_length = 66} , self = 91 , parent = Nothing , duration = 0.255248254000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:50.000177017
| | | E      UTC , finish = 2025-09-03 13:42:50.255425271 UTC , thread_cap_info = ("ThreadId
| | | E      146", 0, False)}
| | | E      
| F | |      
|   F |      
| S   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   |      = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| S   |      alphabet_size = 9 , total_length = 39} , self = 96 , parent = Nothing ,
| S   |      duration = 0.217894887000 , status = Success , start = 2025-09-03 13:42:50.07701216
| S   |      UTC , finish = 2025-09-03 13:42:50.294907047 UTC , thread_cap_info = ("ThreadId
| S   |      148", 0, False)}
| S   |      
| | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | E |      = 9 , total_length = 39} , self = 99 , parent = Nothing , duration = 0.240007146000
| | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:50.090584758
| | E |      UTC , finish = 2025-09-03 13:42:50.330591904 UTC , thread_cap_info = ("ThreadId
| | E |      149", 0, False)}
| | E |      
S | | |      
  | | E      
  S |        
    E        
