last 1379 length 5803
CNF 1379 vars 5803 clauses
last 1554 length 6418
CNF 1554 vars 6418 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4267, clauses: 15880
last 4267 length 15880
CNF 4267 vars 15880 clauses
last 1478 length 6071
last 1708 length 6962
CNF 1478 vars 6071 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4267, clauses: 15880, status: Unsatisfied, time: 0.222836245s
CNF 1708 vars 6962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5484, clauses: 20363
last 5484 length 20363
CNF 5484 vars 20363 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14310, clauses: 59866
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5484, clauses: 20363, status: Satisfied, time: 0.114398762s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8844, clauses: 35681
last 14310 length 59866
last 8844 length 35681
CNF 8844 vars 35681 clauses
CNF 14310 vars 59866 clauses
last 1576 length 6426
CNF 1576 vars 6426 clauses
last 1369 length 5613
CNF 1369 vars 5613 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5062, clauses: 18685
last 5062 length 18685
CNF 5062 vars 18685 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5062, clauses: 18685, status: Unsatisfied, time: 0.229443287s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14854, clauses: 61952
last 14854 length 61952
CNF 14854 vars 61952 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9328, clauses: 37591
last 9328 length 37591
CNF 9328 vars 37591 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14854, clauses: 61952, status: Satisfied, time: 0.399545148s
last 1201 length 4932
CNF 1201 vars 4932 clauses
last 1144 length 4705
last 35327 length 157414
CNF 1144 vars 4705 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3810, clauses: 13838
last 3810 length 13838
CNF 3810 vars 13838 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3810, clauses: 13838, status: Unsatisfied, time: 0.213620046s
CNF 35327 vars 157414 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14310, clauses: 59866, status: Unsatisfied, time: 2.252052552s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8016, clauses: 32311
last 8016 length 32311
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13082, clauses: 54613
last 13082 length 54613
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7000, clauses: 28024
CNF 8016 vars 32311 clauses
CNF 13082 vars 54613 clauses
last 7000 length 28024
CNF 7000 vars 28024 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8016, clauses: 32311, status: Satisfied, time: 0.391788714s
last 1177 length 4840
CNF 1177 vars 4840 clauses
last 1113 length 4586
CNF 1113 vars 4586 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7000, clauses: 28024, status: Satisfied, time: 0.553090992s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3611, clauses: 13101
last 3611 length 13101
CNF 3611 vars 13101 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3611, clauses: 13101, status: Unsatisfied, time: 0.191322964s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7771, clauses: 31365
last 7771 length 31365
last 1420 length 5830
CNF 7771 vars 31365 clauses
CNF 1420 vars 5830 clauses
last 1244 length 5055
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12744, clauses: 53203
last 12744 length 53203
CNF 1244 vars 5055 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3951, clauses: 14603
CNF 12744 vars 53203 clauses
last 3951 length 14603
CNF 3951 vars 14603 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3951, clauses: 14603, status: Satisfied, time: 0.267944524s
last 360 length 1519
last 424 length 1783
CNF 424 vars 1783 clauses
CNF 360 vars 1519 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1177, clauses: 4207
last 1177 length 4207
CNF 1177 vars 4207 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 9 rules on 6 letters       weights
SRS with 8 rules on 6 letters       DP
SRS with 19 strict rules and 8 weak rules on 10 letters       weights
SRS with 11 strict rules and 8 weak rules on 10 letters       EDG
3 sub-proofs
  1 SRS with 6 strict rules and 8 weak rules on 7 letters       Usable
  SRS with 6 strict rules and 7 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 5 strict rules and 7 weak rules on 5 letters       EDG
  SRS with 5 strict rules and 7 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 3 strict rules and 7 weak rules on 5 letters       EDG
  SRS with 3 strict rules and 7 weak rules on 5 letters       Usable
  SRS with 3 strict rules and 3 weak rules on 5 letters       weights
  SRS with 1 strict rules and 2 weak rules on 4 letters       EDG
  SRS with 1 strict rules and 2 weak rules on 4 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 2 strict rules and 8 weak rules on 7 letters       Usable
  SRS with 2 strict rules and 3 weak rules on 5 letters       weights
  SRS with 0 strict rules and 2 weak rules on 3 letters       EDG

  3 SRS with 1 strict rules and 8 weak rules on 7 letters       Usable
  SRS with 1 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [b, c, a] {- Input 0 -}
  [b, c] -> [c, b, b] {- Input 1 -}
  [a, c] -> [c, a, b] {- Input 2 -}
  [a, a] -> [a, d, d, d] {- Input 3 -}
  [d, a] -> [d, d, c] {- Input 4 -}
  [a, d, d, c] -> [a, a, a, d] {- Input 5 -}
  [e, e, f, f] -> [f, f, f, e, e] {- Input 6 -}
  [e] -> [a] {- Input 7 -}
  [b, d] -> [d, d] {- Input 8 -}
reason
  (d, 0/1)
  (a, 0/1)
  (f, 0/1)
  (b, 0/1)
  (e, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] -> [b, c, a] {- Input 0 -}
  [b, c] -> [c, b, b] {- Input 1 -}
  [a, c] -> [c, a, b] {- Input 2 -}
  [a, a] -> [a, d, d, d] {- Input 3 -}
  [d, a] -> [d, d, c] {- Input 4 -}
  [a, d, d, c] -> [a, a, a, d] {- Input 5 -}
  [e, e, f, f] -> [f, f, f, e, e] {- Input 6 -}
  [b, d] -> [d, d] {- Input 8 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
  [d#, a] |-> [d#, d, c] {- DP (Top 0) (Input 4) -}
  [d#, a] |-> [d#, c] {- DP (Top 1) (Input 4) -}
  [a#, d, d, c] |-> [d#] {- DP (Top 3) (Input 5) -}
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, d] {- DP (Top 1) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, a, d] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [d#] {- DP (Top 3) (Input 3) -}
  [a#, a] |-> [d#, d] {- DP (Top 2) (Input 3) -}
  [a#, a] |-> [d#, d, d] {- DP (Top 1) (Input 3) -}
  [a#, a] |-> [a#, d, d, d] {- DP (Top 0) (Input 3) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, c, a] {- DP (Top 0) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a#, c] |-> [b#] {- DP (Top 2) (Input 2) -}
  [b#, d] |-> [d#, d] {- DP (Top 0) (Input 8) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [e#, e, f, f] |-> [e#] {- DP (Top 4) (Input 6) -}
  [e#, e, f, f] |-> [e#, e] {- DP (Top 3) (Input 6) -}
reason
  (d, 0/1)
  (a, 0/1)
  (f, 0/1)
  (b, 0/1)
  (e, 2/1)
  (c, 0/1)
  (d#, 0/1)
  (a#, 2/1)
  (b#, 1/1)
  (e#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
  [d#, a] |-> [d#, d, c] {- DP (Top 0) (Input 4) -}
  [d#, a] |-> [d#, c] {- DP (Top 1) (Input 4) -}
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, d] {- DP (Top 1) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, a, d] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, d, d, d] {- DP (Top 0) (Input 3) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [e#, e, f, f] |-> [e#, e] {- DP (Top 3) (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, d] {- DP (Top 1) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, a, d] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, d, d, d] {- DP (Top 0) (Input 3) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, d] {- DP (Top 1) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, a, d] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, d, d, d] {- DP (Top 0) (Input 3) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  ( d
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A 0A  0A  - |
        | -4A -4A -4A 0A  - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( a
  , Wk  / 0A  0A  0A  0A - \
        | 0A  0A  0A  0A - |
        | 0A  0A  0A  0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( b
  , Wk  / 0A 0A 0A 0A - \
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        \ -  -  -  -  - / )
  ( c
  , Wk  / 0A 0A 0A 0A - \
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        \ -  -  -  -  - / )
  ( a#
  , Wk  / 2A 5A 5A 5A - \
        | 2A 5A 5A 5A - |
        | 2A 5A 5A 5A - |
        | 2A 5A 5A 5A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, d] {- DP (Top 1) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, a, d] {- DP (Top 0) (Input 5) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, d] {- DP (Top 1) (Input 5) -}
  [a#, d, d, c] |-> [a#, a, a, d] {- DP (Top 0) (Input 5) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  ( d
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 16A 17A 19A - \
        | 16A 17A 19A - |
        | 16A 17A 19A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
      [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
      [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
      [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
   property Termination
has value Just True
for SRS
  [a#, d, d, c] |-> [a#, d] {- DP (Top 2) (Input 5) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, c] |-> [a#, b] {- DP (Top 1) (Input 2) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  (d, 0/1)
  (a, 2/1)
  (b, 0/1)
  (c, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
      [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
reason
  (b, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
      [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
      [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
      [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
      [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
   property Termination
has value Just True
for SRS
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  (d, 0/1)
  (a, 2/1)
  (b, 0/1)
  (c, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [e#, e, f, f] |-> [e#, e] {- DP (Top 3) (Input 6) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
  [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
  [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
  [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
  [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
reason
  remove un-usable
    SRS
      [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
      [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
      [a, c] ->= [c, a, b] {- DP Nontop (Input 2) -}
      [a, a] ->= [a, d, d, d] {- DP Nontop (Input 3) -}
      [d, a] ->= [d, d, c] {- DP Nontop (Input 4) -}
      [a, d, d, c] ->= [a, a, a, d] {- DP Nontop (Input 5) -}
      [b, d] ->= [d, d] {- DP Nontop (Input 8) -}
   property Termination
has value Just True
for SRS
  [e#, e, f, f] |-> [e#, e] {- DP (Top 3) (Input 6) -}
  [e, e, f, f] ->= [f, f, f, e, e] {- DP Nontop (Input 6) -}
reason
  ( f
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( e
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( e#
  , Ek 2  / 1 1 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (9,6)\Weight(8,6)\Deepee(19/8,10)\Weight(11/8,10)\EDG[(6/8,7)\Usable(6/7,5)\Matrix{\Arctic}{4}\EDG(5/7,5)\Matrix{\Arctic}{3}\EDG(3/7,5)\Usable(3/3,5)\Weight\EDG(1/2,4)\Usable(1,2)\Weight(0,0)\EDG[],(2/8,7)\Usable(2/3,5)\Weight(0/2,3)\EDG[],(1/8,7)\Usable(1/1,3)\Matrix{\Natural}{2}(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 14
  max duration 3.047461721000
  min duration 0.000005295000
  total durat. 6.071285902000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 654
      , num_strict_rules = 470
      , num_top_rules = 470
      , num_weak_rules = 184
      , alphabet_size = 49
      , total_length = 4284}
    , self = 82
    , parent = Nothing
    , duration = 3.021149879000
    , status = Success
    , start = 2025-09-03 13:39:00.483799734 UTC
    , finish = 2025-09-03 13:39:03.504949613 UTC
    , thread_cap_info = ("ThreadId 94", 3, False)}
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 732
      , num_strict_rules = 548
      , num_top_rules = 548
      , num_weak_rules = 184
      , alphabet_size = 56
      , total_length = 4844}
    , self = 85
    , parent = Nothing
    , duration = 3.047461721000
    , status = Success
    , start = 2025-09-03 13:39:00.502833863 UTC
    , finish = 2025-09-03 13:39:03.550295584 UTC
    , thread_cap_info = ("ThreadId 96", 3, False)}
Success : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.006258879000
  min duration 0.083761204000
  total durat. 3.090020083000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 184
      , num_strict_rules = 184
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 32
      , total_length = 1376}
    , self = 79
    , parent = Nothing
    , duration = 3.006258879000
    , status = Success
    , start = 2025-09-03 13:39:00.171673591 UTC
    , finish = 2025-09-03 13:39:03.17793247 UTC
    , thread_cap_info = ("ThreadId 76", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.033369134000
  min duration 3.033369134000
  total durat. 3.033369134000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 184
      , num_strict_rules = 184
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 32
      , total_length = 1376}
    , self = 81
    , parent = Nothing
    , duration = 3.033369134000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:00.171678543 UTC
    , finish = 2025-09-03 13:39:03.205047677 UTC
    , thread_cap_info = ("ThreadId 78", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.062823289000
  min duration 1.062823289000
  total durat. 1.062823289000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 7
      , alphabet_size = 7
      , total_length = 83}
    , self = 68
    , parent = Nothing
    , duration = 1.062823289000
    , status = Success
    , start = 2025-09-03 13:39:01.005986373 UTC
    , finish = 2025-09-03 13:39:02.068809662 UTC
    , thread_cap_info = ("ThreadId 118", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.743917682000
  min duration 2.743917682000
  total durat. 2.743917682000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 78
    , parent = Nothing
    , duration = 2.743917682000
    , status = Fail
    , start = 2025-09-03 13:39:00.268644221 UTC
    , finish = 2025-09-03 13:39:03.012561903 UTC
    , thread_cap_info = ("ThreadId 91", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.346360420000
  min duration 0.265440877000
  total durat. 2.031943334000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 59}
    , self = 90
    , parent = Nothing
    , duration = 1.346360420000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:02.681549106 UTC
    , finish = 2025-09-03 13:39:04.027909526 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.967980656000
  min duration 0.818074115000
  total durat. 4.786054771000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 99
    , parent = Nothing
    , duration = 3.967980656000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:00.502841464 UTC
    , finish = 2025-09-03 13:39:04.47082212 UTC
    , thread_cap_info = ("ThreadId 102", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.507746984000
  min duration 0.100482914000
  total durat. 1.509306993000
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.182410668000
  min duration 1.182410668000
  total durat. 1.182410668000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 97
    , parent = Nothing
    , duration = 1.182410668000
    , status = Success
    , start = 2025-09-03 13:39:03.102853499 UTC
    , finish = 2025-09-03 13:39:04.285264167 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length = 47} , self
F                      = 52 , parent = Nothing , duration = 0.349484479000 , status = Fail , start
F                      = 2025-09-03 13:39:00.125468463 UTC , finish = 2025-09-03 13:39:00.474952942
F                      UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                      
| F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                    = True})" , input_size = Size { num_rules = 8 , num_strict_rules = 8 ,
| F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| F                    = 47} , self = 56 , parent = Nothing , duration = 0.372500578000 , status
| F                    = Fail , start = 2025-09-03 13:39:00.125481015 UTC , finish = 2025-09-03
| F                    13:39:00.497981593 UTC , thread_cap_info = ("ThreadId 35", 1, False)}
| F                    
| | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                  = True})" , input_size = Size { num_rules = 8 , num_strict_rules = 8 ,
| | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| | F                  = 47} , self = 57 , parent = Nothing , duration = 0.465406567000 , status
| | F                  = Fail , start = 2025-09-03 13:39:00.125485724 UTC , finish = 2025-09-03
| | F                  13:39:00.590892291 UTC , thread_cap_info = ("ThreadId 40", 3, False)}
| | F                  
| | | S                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | S                = False\n , verbose = False}" , input_size = Size { num_rules = 184 , num_strict_rules
| | | S                = 184 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 32 , total_length
| | | S                = 1376} , self = 79 , parent = Nothing , duration = 3.006258879000 , status
| | | S                = Success , start = 2025-09-03 13:39:00.171673591 UTC , finish = 2025-09-03
| | | S                13:39:03.17793247 UTC , thread_cap_info = ("ThreadId 76", 2, False)}
| | | S                
| | | | E              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 184 , num_strict_rules
| | | | E              = 184 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 32 , total_length
| | | | E              = 1376} , self = 81 , parent = Nothing , duration = 3.033369134000 , status
| | | | E              = Except "AsyncCancelled" , start = 2025-09-03 13:39:00.171678543 UTC ,
| | | | E              finish = 2025-09-03 13:39:03.205047677 UTC , thread_cap_info = ("ThreadId
| | | | E              78", 2, False)}
| | | | E              
| | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F            = 13 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 7 ,
| | | | | F            alphabet_size = 5 , total_length = 72} , self = 51 , parent = Nothing ,
| | | | | F            duration = 0.265841441000 , status = Fail , start = 2025-09-03 13:39:00.181146964
| | | | | F            UTC , finish = 2025-09-03 13:39:00.446988405 UTC , thread_cap_info = ("ThreadId
| | | | | F            82", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | F          = 12 , num_top_rules = 12 , num_weak_rules = 7 , alphabet_size = 7 , total_length
| | | | | | F          = 92} , self = 50 , parent = Nothing , duration = 0.116120180000 , status
| | | | | | F          = Fail , start = 2025-09-03 13:39:00.222053432 UTC , finish = 2025-09-03
| | | | | | F          13:39:00.338173612 UTC , thread_cap_info = ("ThreadId 85", 0, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | | F        = 12 , num_top_rules = 12 , num_weak_rules = 7 , alphabet_size = 7 , total_length
| | | | | | | F        = 92} , self = 55 , parent = Nothing , duration = 0.257390227000 , status
| | | | | | | F        = Fail , start = 2025-09-03 13:39:00.228581597 UTC , finish = 2025-09-03
| | | | | | | F        13:39:00.485971824 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | | | | | F      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 7 , alphabet_size
| | | | | | | | F      = 5 , total_length = 72} , self = 78 , parent = Nothing , duration = 2.743917682000
| | | | | | | | F      , status = Fail , start = 2025-09-03 13:39:00.268644221 UTC , finish =
| | | | | | | | F      2025-09-03 13:39:03.012561903 UTC , thread_cap_info = ("ThreadId 91", 0,
| | | | | | | | F      False)}
| | | | | | | | F      
| | | | | | | | | S    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | S    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | S    = Size { num_rules = 740 , num_strict_rules = 556 , num_top_rules = 556
| | | | | | | | | S    , num_weak_rules = 184 , alphabet_size = 50 , total_length = 4832} , self
| | | | | | | | | S    = 53 , parent = Nothing , duration = 0.197183514000 , status = Success
| | | | | | | | | S    , start = 2025-09-03 13:39:00.28506787 UTC , finish = 2025-09-03 13:39:00.482251384
| | | | | | | | | S    UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | | | | | | S    
| | | | | | | | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | S  = Size { num_rules = 858 , num_strict_rules = 674 , num_top_rules = 674
| | | | | | | | | | S  , num_weak_rules = 184 , alphabet_size = 58 , total_length = 5516} , self
| | | | | | | | | | S  = 54 , parent = Nothing , duration = 0.179944836000 , status = Success
| | | | | | | | | | S  , start = 2025-09-03 13:39:00.302837256 UTC , finish = 2025-09-03 13:39:00.482782092
| | | | | | | | | | S  UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | | | | | | | S  
| | | | | | F | | | |  
| | | | | | S | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S | | | |  = 19 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 7
| | | | | | S | | | |  , alphabet_size = 7 , total_length = 92} , self = 58 , parent = Nothing
| | | | | | S | | | |  , duration = 0.455691922000 , status = Success , start = 2025-09-03 13:39:00.383627831
| | | | | | S | | | |  UTC , finish = 2025-09-03 13:39:00.839319753 UTC , thread_cap_info = ("ThreadId
| | | | | | S | | | |  101", 0, False)}
| | | | | | S | | | |  
| | | | | F | | | | |  
F | | | |   | | | | |  
  | | | |   | | | S |  
  | | | |   | | |   S  
S | | | |   | | |      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
S | | | |   | | |      verbose = False}" , input_size = Size { num_rules = 654 , num_strict_rules
S | | | |   | | |      = 470 , num_top_rules = 470 , num_weak_rules = 184 , alphabet_size = 49
S | | | |   | | |      , total_length = 4284} , self = 82 , parent = Nothing , duration = 3.021149879000
S | | | |   | | |      , status = Success , start = 2025-09-03 13:39:00.483799734 UTC , finish
S | | | |   | | |      = 2025-09-03 13:39:03.504949613 UTC , thread_cap_info = ("ThreadId 94",
S | | | |   | | |      3, False)}
S | | | |   | | |      
| | | | |   | F |      
| F | | |   |   |      
| S | | |   |   |      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| S | | |   |   |      verbose = False}" , input_size = Size { num_rules = 732 , num_strict_rules
| S | | |   |   |      = 548 , num_top_rules = 548 , num_weak_rules = 184 , alphabet_size = 56
| S | | |   |   |      , total_length = 4844} , self = 85 , parent = Nothing , duration = 3.047461721000
| S | | |   |   |      , status = Success , start = 2025-09-03 13:39:00.502833863 UTC , finish
| S | | |   |   |      = 2025-09-03 13:39:03.550295584 UTC , thread_cap_info = ("ThreadId 96",
| S | | |   |   |      3, False)}
| S | | |   |   |      
| | | | | E |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E |   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | | E |   |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 7 , alphabet_size
| | | | | E |   |      = 5 , total_length = 72} , self = 99 , parent = Nothing , duration = 3.967980656000
| | | | | E |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:00.502841464
| | | | | E |   |      UTC , finish = 2025-09-03 13:39:04.47082212 UTC , thread_cap_info = ("ThreadId
| | | | | E |   |      102", 0, False)}
| | | | | E |   |      
| | | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| | | | | | | E |      , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 7 , alphabet_size
| | | | | | | E |      = 7 , total_length = 92} , self = 60 , parent = Nothing , duration = 0.265440877000
| | | | | | | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:00.575389928
| | | | | | | E |      UTC , finish = 2025-09-03 13:39:00.840830805 UTC , thread_cap_info = ("ThreadId
| | | | | | | E |      104", 0, False)}
| | | | | | | E |      
| | F | | | | | |      
| |   | | | S | |      
| |   | | |   E |      
| | F | | |     |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |     |      = 17 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 7
| | F | | |     |      , alphabet_size = 7 , total_length = 83} , self = 67 , parent = Nothing
| | F | | |     |      , duration = 0.507746984000 , status = Fail , start = 2025-09-03 13:39:00.965783602
| | F | | |     |      UTC , finish = 2025-09-03 13:39:01.473530586 UTC , thread_cap_info = ("ThreadId
| | F | | |     |      117", 0, False)}
| | F | | |     |      
| | | | | | S   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | | | | S   |      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 7 , alphabet_size
| | | | | | S   |      = 7 , total_length = 83} , self = 68 , parent = Nothing , duration = 1.062823289000
| | | | | | S   |      , status = Success , start = 2025-09-03 13:39:01.005986373 UTC , finish
| | | | | | S   |      = 2025-09-03 13:39:02.068809662 UTC , thread_cap_info = ("ThreadId 118",
| | | | | | S   |      0, False)}
| | | | | | S   |      
| | F | | | |   |      
| | E | | | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | |   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | E | | | |   |      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 7 , alphabet_size
| | E | | | |   |      = 7 , total_length = 83} , self = 70 , parent = Nothing , duration = 0.818074115000
| | E | | | |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:01.490927002
| | E | | | |   |      UTC , finish = 2025-09-03 13:39:02.309001117 UTC , thread_cap_info = ("ThreadId
| | E | | | |   |      120", 0, False)}
| | E | | | |   |      
| | | | | | S   |      
| | E | | |     |      
| | F | | |     |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |     |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | F | | |     |      = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | F | | |     |      = 59} , self = 75 , parent = Nothing , duration = 0.111156594000 , status
| | F | | |     |      = Fail , start = 2025-09-03 13:39:02.405816585 UTC , finish = 2025-09-03
| | F | | |     |      13:39:02.516973179 UTC , thread_cap_info = ("ThreadId 127", 0, False)}
| | F | | |     |      
| | | | | | F   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F   |      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | F   |      = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | | | | F   |      = 59} , self = 76 , parent = Nothing , duration = 0.223061301000 , status
| | | | | | F   |      = Fail , start = 2025-09-03 13:39:02.449431993 UTC , finish = 2025-09-03
| | | | | | F   |      13:39:02.672493294 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | | | | | F   |      
| | F | | | |   |      
| | F | | | |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | |   |      = 11 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 ,
| | F | | | |   |      alphabet_size = 6 , total_length = 59} , self = 77 , parent = Nothing ,
| | F | | | |   |      duration = 0.350743763000 , status = Fail , start = 2025-09-03 13:39:02.54284624
| | F | | | |   |      UTC , finish = 2025-09-03 13:39:02.893590003 UTC , thread_cap_info = ("ThreadId
| | F | | | |   |      131", 0, False)}
| | F | | | |   |      
| | | | | | F   |      
| | | | | | E   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | E   |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size
| | | | | | E   |      = 6 , total_length = 59} , self = 90 , parent = Nothing , duration = 1.346360420000
| | | | | | E   |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:02.681549106
| | | | | | E   |      UTC , finish = 2025-09-03 13:39:04.027909526 UTC , thread_cap_info = ("ThreadId
| | | | | | E   |      134", 0, False)}
| | | | | | E   |      
| | F | | | |   |      
| | S | | | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S | | | |   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S | | | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S | | | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | S | | | |   |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size
| | S | | | |   |      = 6 , total_length = 59} , self = 88 , parent = Nothing , duration = 0.994887178000
| | S | | | |   |      , status = Success , start = 2025-09-03 13:39:02.947390198 UTC , finish
| | S | | | |   |      = 2025-09-03 13:39:03.942277376 UTC , thread_cap_info = ("ThreadId 135",
| | S | | | |   |      0, False)}
| | S | | | |   |      
| | | | | | |   F      
| | | | | | | S        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S        = 13 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 7 ,
| | | | | | | S        alphabet_size = 5 , total_length = 72} , self = 97 , parent = Nothing ,
| | | | | | | S        duration = 1.182410668000 , status = Success , start = 2025-09-03 13:39:03.102853499
| | | | | | | S        UTC , finish = 2025-09-03 13:39:04.285264167 UTC , thread_cap_info = ("ThreadId
| | | | | | | S        136", 0, False)}
| | | | | | | S        
| | | S | | | |        
| | |   E | | |        
S | |     | | |        
  S |     | | |        
    S     | | |        
          | E |        
F         |   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F         |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F         |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F         |   |        = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
F         |   |        alphabet_size = 6 , total_length = 56} , self = 101 , parent = Nothing
F         |   |        , duration = 0.284491891000 , status = Fail , start = 2025-09-03 13:39:04.265323354
F         |   |        UTC , finish = 2025-09-03 13:39:04.549815245 UTC , thread_cap_info = ("ThreadId
F         |   |        160", 0, False)}
F         |   |        
|         |   S        
|         E            
F                      
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F                      = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
F                      = 66} , self = 105 , parent = Nothing , duration = 0.122938922000 , status
F                      = Fail , start = 2025-09-03 13:39:04.822891541 UTC , finish = 2025-09-03
F                      13:39:04.945830463 UTC , thread_cap_info = ("ThreadId 168", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                    = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| F                    = 66} , self = 106 , parent = Nothing , duration = 0.267012328000 , status
| F                    = Fail , start = 2025-09-03 13:39:04.838688606 UTC , finish = 2025-09-03
| F                    13:39:05.105700934 UTC , thread_cap_info = ("ThreadId 169", 0, False)}
| F                    
F |                    
S |                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |                    = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
S |                    alphabet_size = 5 , total_length = 66} , self = 107 , parent = Nothing
S |                    , duration = 0.513629778000 , status = Success , start = 2025-09-03 13:39:04.984053357
S |                    UTC , finish = 2025-09-03 13:39:05.497683135 UTC , thread_cap_info = ("ThreadId
S |                    173", 0, False)}
S |                    
| F                    
| E                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E                    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| E                    = 5 , total_length = 66} , self = 109 , parent = Nothing , duration = 0.420142037000
| E                    , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:05.14588363
| E                    UTC , finish = 2025-09-03 13:39:05.566025667 UTC , thread_cap_info = ("ThreadId
| E                    175", 0, False)}
| E                    
S |                    
  E                    
F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                      = 2 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
F                      = 3 , total_length = 15} , self = 123 , parent = Nothing , duration = 0.100482914000
F                      , status = Fail , start = 2025-09-03 13:39:06.144844882 UTC , finish =
F                      2025-09-03 13:39:06.245327796 UTC , thread_cap_info = ("ThreadId 188",
F                      0, False)}
F                      
F                      
