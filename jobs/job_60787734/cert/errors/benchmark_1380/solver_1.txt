last 456 length 1871
last 377 length 1469
CNF 456 vars 1871 clauses
last 538 length 2154
CNF 377 vars 1469 clauses
CNF 538 vars 2154 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6540
last 1856 length 6540
last 522 length 2141
CNF 522 vars 2141 clauses
CNF 1856 vars 6540 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8095
last 2266 length 8095
last 4128 length 18405
last 3752 length 19340
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6540, status: Unsatisfied, time: 0.097457726s
CNF 3752 vars 19340 clauses
CNF 2266 vars 8095 clauses
CNF 4128 vars 18405 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6334, clauses: 26245
last 6334 length 26245
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8095, status: Unsatisfied, time: 0.195339639s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6753, clauses: 27911
CNF 6334 vars 26245 clauses
last 4018 length 16853
last 3234 length 13267
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3888, clauses: 15462
last 6753 length 27911
last 4128 length 16679
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4213, clauses: 16763
last 6672 length 27703
CNF 4018 vars 16853 clauses
last 3888 length 15462
CNF 3234 vars 13267 clauses
last 4213 length 16763
CNF 6753 vars 27911 clauses
CNF 4128 vars 16679 clauses
CNF 6672 vars 27703 clauses
CNF 3888 vars 15462 clauses
CNF 4213 vars 16763 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6753, clauses: 27911, status: Satisfied, time: 0.343293471s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6334, clauses: 26245, status: Unsatisfied, time: 0.492447351s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3037, clauses: 11305
last 3037 length 11305
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8511, clauses: 31058
last 8511 length 31058
CNF 3037 vars 11305 clauses
CNF 8511 vars 31058 clauses
last 490 length 1968
CNF 490 vars 1968 clauses
last 513 length 2106
CNF 513 vars 2106 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12230, clauses: 46416
last 12230 length 46416
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3037, clauses: 11305, status: Unsatisfied, time: 0.322161942s
CNF 12230 vars 46416 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7670
last 2160 length 7670
CNF 2160 vars 7670 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3888, clauses: 15462, status: Unsatisfied, time: 1.139738821s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7670, status: Unsatisfied, time: 0.11422937s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4138, clauses: 16477
last 4138 length 16477
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5705, clauses: 21150
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6707, clauses: 27735
CNF 4138 vars 16477 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11086, clauses: 45545
last 5705 length 21150
last 6707 length 27735
last 11086 length 45545
CNF 6707 vars 27735 clauses
CNF 5705 vars 21150 clauses
CNF 11086 vars 45545 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6707, clauses: 27735, status: Satisfied, time: 0.290601336s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 5 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [b, c, a, a] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a] -> [] {- Mirror (Input 0) -}
  [c, a] -> [a, a, c, b] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a] {- Mirror (Input 0) -}
  [b, b, a] -> [b] {- Mirror (Input 0) -}
  [c, b, a] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [a, a, c, b] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a] {- Input 0 -}
  [a, b, b] -> [b] {- Input 0 -}
  [a, b, c] -> [c] {- Input 0 -}
  [a, c] -> [b, c, a, a] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
  [a#, c] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, c] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [a#, c] |-> [c#, a, a] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 1/1)
  (a#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
  [a#, c] |-> [c#, a, a] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c] |-> [c#, a, a] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -  0A 0A \
        | 0A -  0A |
        \ -  -  0A / )
  ( b
  , Wk  / -  0A 0A \
        | 0A 1A 1A |
        \ -  -  0A / )
  ( c
  , Wk  / - 1A 1A \
        | - 0A 0A |
        \ - -  0A / )
  ( a#
  , Wk  / - 1A 2A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a#, c] |-> [c#, a, a] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c] |-> [c#, a, a] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -1A 1A 0A \
        | -1A -  -  |
        \ -   -  0A / )
  ( b
  , Wk  / 1A 1A 2A  \
        | -  -  -1A |
        \ -  -  0A  / )
  ( c
  , Wk  / 0A -1A 1A \
        | 0A 0A  1A |
        \ -  -   0A / )
  ( a#
  , Wk  / -2A -1A 0A \
        | -   -   -  |
        \ -   -   0A / )
  ( c#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
   property Termination
has value Just True
for SRS
  [a#, c] |-> [c#, a, a] {- DP (Top 1) (Input 1) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 1/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [b, c, a, a] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(5/5,5)\Weight\EDG(3/5,5)\Matrix{\ArcticBZ}{3}\EDG(2/5,5)\Matrix{\ArcticBZ}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.557081560000
  min duration 0.021511399000
  total durat. 1.266232090000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.512634906000
  min duration 0.018599012000
  total durat. 1.275814054000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.197652664000
  min duration 0.697446995000
  total durat. 1.895099659000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 31}
    , self = 85
    , parent = Nothing
    , duration = 1.197652664000
    , status = Success
    , start = 2025-09-03 11:49:18.978023858 UTC
    , finish = 2025-09-03 11:49:20.175676522 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.337422826000
  min duration 1.337422826000
  total durat. 1.337422826000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 26}
    , self = 83
    , parent = Nothing
    , duration = 1.337422826000
    , status = Fail
    , start = 2025-09-03 11:49:17.918159876 UTC
    , finish = 2025-09-03 11:49:19.255582702 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.793251138000
  min duration 0.619727612000
  total durat. 1.412978750000
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 162} , self = 65 , parent = Nothing , duration = 0.240745609000 , status
F                    = Fail , start = 2025-09-03 11:49:17.679594824 UTC , finish = 2025-09-03
F                    11:49:17.920340433 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
F                    
| F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F                  = 4 , total_length = 26} , self = 62 , parent = Nothing , duration = 0.162294591000
| F                  , status = Fail , start = 2025-09-03 11:49:17.698312811 UTC , finish =
| F                  2025-09-03 11:49:17.860607402 UTC , thread_cap_info = ("ThreadId 92", 1,
| F                  False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 162} , self = 64 , parent = Nothing , duration = 0.198605658000 , status
| | F                = Fail , start = 2025-09-03 11:49:17.701056089 UTC , finish = 2025-09-03
| | F                11:49:17.899661747 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | F              = 20 , num_top_rules = 20 , num_weak_rules = 27 , alphabet_size = 13 ,
| | | F              total_length = 278} , self = 71 , parent = Nothing , duration = 0.557081560000
| | | F              , status = Fail , start = 2025-09-03 11:49:17.704467833 UTC , finish =
| | | F              2025-09-03 11:49:18.261549393 UTC , thread_cap_info = ("ThreadId 97", 0,
| | | F              False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | F            = 20 , num_top_rules = 20 , num_weak_rules = 27 , alphabet_size = 13 ,
| | | | F            total_length = 278} , self = 70 , parent = Nothing , duration = 0.512634906000
| | | | F            , status = Fail , start = 2025-09-03 11:49:17.722434566 UTC , finish =
| | | | F            2025-09-03 11:49:18.235069472 UTC , thread_cap_info = ("ThreadId 98", 0,
| | | | F            False)}
| | | | F            
| | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | F          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | F          = 4 , total_length = 26} , self = 72 , parent = Nothing , duration = 0.750139769000
| | | | | F          , status = Fail , start = 2025-09-03 11:49:17.723337337 UTC , finish =
| | | | | F          2025-09-03 11:49:18.473477106 UTC , thread_cap_info = ("ThreadId 101",
| | | | | F          1, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | F        = 5 , total_length = 34} , self = 67 , parent = Nothing , duration = 0.274567646000
| | | | | | F        , status = Fail , start = 2025-09-03 11:49:17.743847019 UTC , finish =
| | | | | | F        2025-09-03 11:49:18.018414665 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | F        1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | | F      = 180} , self = 68 , parent = Nothing , duration = 0.370118379000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:49:17.780763341 UTC , finish = 2025-09-03
| | | | | | | F      11:49:18.15088172 UTC , thread_cap_info = ("ThreadId 107", 0, False)}
| | | | | | | F      
| | | | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | S    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | | S    = 5 , total_length = 34} , self = 73 , parent = Nothing , duration = 0.697446995000
| | | | | | | | S    , status = Success , start = 2025-09-03 11:49:17.780766907 UTC , finish
| | | | | | | | S    = 2025-09-03 11:49:18.478213902 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | S    1, False)}
| | | | | | | | S    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | | | | F  = 180} , self = 69 , parent = Nothing , duration = 0.432263573000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 11:49:17.798025717 UTC , finish = 2025-09-03
| | | | | | | | | F  11:49:18.23028929 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| | | | | | | | | F  
| F | | | | | | | |  
|   F | | | | | | |  
| F   | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F   | | | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F   | | | | | | |  = 4 , total_length = 26} , self = 83 , parent = Nothing , duration = 1.337422826000
| F   | | | | | | |  , status = Fail , start = 2025-09-03 11:49:17.918159876 UTC , finish =
| F   | | | | | | |  2025-09-03 11:49:19.255582702 UTC , thread_cap_info = ("ThreadId 115",
| F   | | | | | | |  1, False)}
| F   | | | | | | |  
F |   | | | | | | |  
  |   | | | F | | |  
E |   | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |   | | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |   | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |   | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E |   | | |   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
E |   | | |   | | |  = 5 , total_length = 34} , self = 75 , parent = Nothing , duration = 0.619727612000
E |   | | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:18.030765042
E |   | | |   | | |  UTC , finish = 2025-09-03 11:49:18.650492654 UTC , thread_cap_info = ("ThreadId
E |   | | |   | | |  120", 1, False)}
E |   | | |   | | |  
| |   | | |   F | |  
| |   | | |     | F  
| |   | F |     |    
| |   F   |     |    
| |       F     |    
| |             S    
| | F                Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F                = 4 , total_length = 26} , self = 82 , parent = Nothing , duration = 0.478811018000
| | F                , status = Fail , start = 2025-09-03 11:49:18.498028995 UTC , finish =
| | F                2025-09-03 11:49:18.976840013 UTC , thread_cap_info = ("ThreadId 133",
| | F                1, False)}
| | F                
E | |                
F | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |                = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | |                = 5 , total_length = 31} , self = 84 , parent = Nothing , duration = 0.311132120000
F | |                , status = Fail , start = 2025-09-03 11:49:18.972334262 UTC , finish =
F | |                2025-09-03 11:49:19.283466382 UTC , thread_cap_info = ("ThreadId 143",
F | |                1, False)}
F | |                
| | F                
| | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S                = 5 , total_length = 31} , self = 85 , parent = Nothing , duration = 1.197652664000
| | S                , status = Success , start = 2025-09-03 11:49:18.978023858 UTC , finish
| | S                = 2025-09-03 11:49:20.175676522 UTC , thread_cap_info = ("ThreadId 145",
| | S                1, False)}
| | S                
| F |                
F   |                
E   |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E   |                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
E   |                = 5 , total_length = 31} , self = 87 , parent = Nothing , duration = 0.793251138000
E   |                , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:19.382549383
E   |                UTC , finish = 2025-09-03 11:49:20.175800521 UTC , thread_cap_info = ("ThreadId
E   |                149", 1, False)}
E   |                
|   S                
E                    
