last 921 length 4394
CNF 921 vars 4394 clauses
last 1469 length 7799
last 971 length 4569
CNF 971 vars 4569 clauses
last 1217 length 5617
CNF 1217 vars 5617 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1387, clauses: 5125
CNF 1469 vars 7799 clauses
last 1387 length 5125
CNF 1387 vars 5125 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1396, clauses: 5212
last 1396 length 5212
CNF 1396 vars 5212 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1396, clauses: 5212, status: Unsatisfied, time: 0.079380993s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1387, clauses: 5125, status: Unsatisfied, time: 0.104243135s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4933, clauses: 20597
last 4756 length 26521
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2928, clauses: 12282
last 4294 length 26439
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4931, clauses: 20571
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2924, clauses: 12144
last 4933 length 20597
CNF 4756 vars 26521 clauses
last 2928 length 12282
last 6404 length 36687
CNF 4294 vars 26439 clauses
last 5569 length 34806
last 4931 length 20571
last 4849 length 26645
last 2924 length 12144
CNF 4933 vars 20597 clauses
CNF 2928 vars 12282 clauses
CNF 6404 vars 36687 clauses
last 6985 length 49113
CNF 4931 vars 20571 clauses
CNF 5569 vars 34806 clauses
CNF 2924 vars 12144 clauses
CNF 4849 vars 26645 clauses
CNF 6985 vars 49113 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4931, clauses: 20571, status: Satisfied, time: 0.232454945s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2907, clauses: 10862
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2924, clauses: 12144, status: Satisfied, time: 0.256000256s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2910, clauses: 10736
last 2907 length 10862
last 2910 length 10736
CNF 2907 vars 10862 clauses
**************************************************
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11627, clauses: 48797
summary
last 11627 length 48797
**************************************************
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       DP
SRS with 4 strict rules and 1 weak rules on 3 letters       weights
SRS with 1 strict rules and 1 weak rules on 3 letters       EDG
SRS with 1 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, a, b, b] -> [a, b, a, b, b, b, a] {- Input 0 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b, a, b, a, b] -> [a, b, b, b, a, b, a] {- Mirror (Input 0) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, a, b, a, b] ->= [a, b, b, b, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b#, b, a, b, a, b] |-> [b#, a] {- DP (Top 5) (Mirror (Input 0)) -}
  [b#, b, a, b, a, b] |-> [b#, a, b, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [b#, b, a, b, a, b] |-> [b#, b, a, b, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b, a, b, a, b] |-> [b#, b, b, a, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
reason
  (a, 0/1)
  (b, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, a, b, a, b] ->= [a, b, b, b, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [b#, b, a, b, a, b] |-> [b#, b, b, a, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, a, b, a, b] |-> [b#, b, b, a, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b, b, a, b, a, b] ->= [a, b, b, b, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
reason
  ( a
  , Wk  / 0A 1A  1A \
        | -  -1A -  |
        \ -  -   0A / )
  ( b
  , Wk  / -   1A 0A \
        | -1A -  -  |
        \ -   -  0A / )
  ( b#
  , Wk  / - 2A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b, b, a, b, a, b] ->= [a, b, b, b, a, b, a] {- DP Nontop (Mirror (Input 0)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(1,2)\Deepee(4/1,3)\Weight\EDG(1/1,3)\Matrix{\ArcticBZ}{3}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 2910 vars 10736 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.661239551000
  min duration 0.025339929000
  total durat. 1.835154215000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.634796041000
  min duration 0.039991366000
  total durat. 1.775335044000
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                = 60} , self = 64 , parent = Nothing , duration = 0.661239551000 , status
F                = Fail , start = 2025-09-03 13:45:44.998533072 UTC , finish = 2025-09-03
F                13:45:45.659772623 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 60} , self = 63 , parent = Nothing , duration = 0.634796041000 , status
| F              = Fail , start = 2025-09-03 13:45:45.006319002 UTC , finish = 2025-09-03
| F              13:45:45.641115043 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| F              
| | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F            = 2 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | F            = 3 , total_length = 25} , self = 49 , parent = Nothing , duration = 0.173922473000
| | F            , status = Fail , start = 2025-09-03 13:45:45.032826564 UTC , finish =
| | F            2025-09-03 13:45:45.206749037 UTC , thread_cap_info = ("ThreadId 82", 2,
| | F            False)}
| | F            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 2 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | | F          = 3 , total_length = 25} , self = 48 , parent = Nothing , duration = 0.102045277000
| | | F          , status = Fail , start = 2025-09-03 13:45:45.044469514 UTC , finish =
| | | F          2025-09-03 13:45:45.146514791 UTC , thread_cap_info = ("ThreadId 85", 1,
| | | F          False)}
| | | F          
| | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | S        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | | | S        = 3 , total_length = 25} , self = 68 , parent = Nothing , duration = 0.779403580000
| | | | S        , status = Success , start = 2025-09-03 13:45:45.066942753 UTC , finish
| | | | S        = 2025-09-03 13:45:45.846346333 UTC , thread_cap_info = ("ThreadId 89",
| | | | S        2, False)}
| | | | S        
| | | F |        
| | F   |        
| | E   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | E   |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | E   |        = 3 , total_length = 25} , self = 71 , parent = Nothing , duration = 0.641917347000
| | E   |        , status = Except "AsyncCancelled" , start = 2025-09-03 13:45:45.228319699
| | E   |        UTC , finish = 2025-09-03 13:45:45.870237046 UTC , thread_cap_info = ("ThreadId
| | E   |        100", 2, False)}
| | E   |        
| | | F |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F |        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | F |        = 74} , self = 65 , parent = Nothing , duration = 0.479606168000 , status
| | | F |        = Fail , start = 2025-09-03 13:45:45.247850662 UTC , finish = 2025-09-03
| | | F |        13:45:45.72745683 UTC , thread_cap_info = ("ThreadId 111", 3, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | F      = 74} , self = 67 , parent = Nothing , duration = 0.575052185000 , status
| | | | | F      = Fail , start = 2025-09-03 13:45:45.256477684 UTC , finish = 2025-09-03
| | | | | F      13:45:45.831529869 UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | F    = 74} , self = 66 , parent = Nothing , duration = 0.522582672000 , status
| | | | | | F    = Fail , start = 2025-09-03 13:45:45.266824268 UTC , finish = 2025-09-03
| | | | | | F    13:45:45.78940694 UTC , thread_cap_info = ("ThreadId 113", 3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | F  = 74} , self = 70 , parent = Nothing , duration = 0.560856569000 , status
| | | | | | | F  = Fail , start = 2025-09-03 13:45:45.287277775 UTC , finish = 2025-09-03
| | | | | | | F  13:45:45.848134344 UTC , thread_cap_info = ("ThreadId 114", 3, False)}
| | | | | | | F  
| F | | | | | |  
F   | | | | | |  
    | F | | | |  
    |   | | F |  
    |   | F   |  
    |   S     |  
    |         F  
    E            
