**************************************************
summary
**************************************************
SRS with 50 rules on 6 letters       DP
SRS with 94 strict rules and 50 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 3 strict rules and 50 weak rules on 7 letters       Usable
  SRS with 3 rules on 6 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 3 strict rules and 50 weak rules on 7 letters       Usable
  SRS with 3 rules on 6 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 1, 2] -> [0, 2, 1, 0] {- Input 0 -}
  [0, 1, 2] -> [1, 0, 2, 3] {- Input 1 -}
  [0, 1, 2] -> [0, 2, 4, 1, 5] {- Input 2 -}
  [0, 1, 2] -> [0, 3, 2, 1, 0] {- Input 3 -}
  [0, 1, 2] -> [1, 0, 3, 2, 3] {- Input 4 -}
  [0, 1, 2] -> [0, 1, 3, 4, 2, 3] {- Input 5 -}
  [0, 5, 2] -> [0, 2, 4, 5, 3] {- Input 6 -}
  [0, 5, 2] -> [5, 4, 2, 3, 0, 4] {- Input 7 -}
  [2, 0, 1] -> [3, 0, 2, 1] {- Input 8 -}
  [2, 0, 1] -> [0, 2, 1, 1, 4] {- Input 9 -}
  [2, 0, 1] -> [0, 3, 2, 4, 1] {- Input 10 -}
  [2, 0, 1] -> [3, 0, 2, 1, 4] {- Input 11 -}
  [2, 0, 1] -> [0, 2, 2, 3, 4, 1] {- Input 12 -}
  [2, 0, 1] -> [0, 3, 2, 3, 1, 1] {- Input 13 -}
  [2, 0, 1] -> [4, 0, 4, 2, 1, 4] {- Input 14 -}
  [2, 5, 1] -> [0, 2, 1, 5, 1] {- Input 15 -}
  [2, 5, 1] -> [1, 4, 5, 4, 2] {- Input 16 -}
  [2, 5, 1] -> [5, 0, 2, 1, 4] {- Input 17 -}
  [2, 5, 1] -> [5, 2, 1, 4, 1] {- Input 18 -}
  [2, 5, 1] -> [1, 5, 0, 2, 4, 1] {- Input 19 -}
  [2, 5, 1] -> [5, 2, 1, 1, 1, 1] {- Input 20 -}
  [0, 1, 2, 1] -> [3, 1, 4, 0, 2, 1] {- Input 21 -}
  [0, 1, 3, 1] -> [5, 0, 3, 1, 1] {- Input 22 -}
  [0, 1, 3, 1] -> [1, 0, 3, 4, 2, 1] {- Input 23 -}
  [0, 1, 5, 1] -> [5, 0, 3, 1, 1] {- Input 24 -}
  [0, 2, 1, 2] -> [0, 2, 2, 1, 5] {- Input 25 -}
  [0, 2, 5, 1] -> [1, 1, 5, 0, 2, 1] {- Input 26 -}
  [0, 5, 3, 1] -> [0, 1, 4, 4, 3, 5] {- Input 27 -}
  [0, 5, 5, 2] -> [5, 4, 2, 3, 5, 0] {- Input 28 -}
  [2, 0, 1, 2] -> [0, 2, 3, 2, 1, 1] {- Input 29 -}
  [2, 0, 1, 2] -> [4, 0, 2, 1, 1, 2] {- Input 30 -}
  [2, 0, 4, 1] -> [3, 0, 2, 4, 1] {- Input 31 -}
  [2, 0, 5, 1] -> [5, 4, 2, 1, 0] {- Input 32 -}
  [2, 2, 5, 1] -> [3, 2, 2, 4, 5, 1] {- Input 33 -}
  [2, 4, 0, 1] -> [1, 0, 2, 4, 4] {- Input 34 -}
  [2, 4, 0, 1] -> [3, 0, 0, 2, 4, 1] {- Input 35 -}
  [2, 4, 0, 1] -> [5, 4, 0, 2, 1, 1] {- Input 36 -}
  [2, 5, 2, 1] -> [1, 5, 2, 2, 3, 1] {- Input 37 -}
  [2, 5, 4, 1] -> [4, 5, 2, 1, 4, 4] {- Input 38 -}
  [2, 5, 5, 1] -> [1, 5, 4, 2, 4, 5] {- Input 39 -}
  [2, 5, 5, 2] -> [5, 5, 2, 3, 2] {- Input 40 -}
  [0, 1, 3, 0, 1] -> [0, 3, 1, 0, 1, 1] {- Input 41 -}
  [0, 2, 4, 3, 1] -> [1, 3, 4, 2, 3, 0] {- Input 42 -}
  [0, 2, 4, 3, 1] -> [4, 0, 3, 2, 1, 0] {- Input 43 -}
  [0, 2, 5, 3, 1] -> [5, 0, 2, 3, 5, 1] {- Input 44 -}
  [2, 0, 5, 4, 1] -> [0, 4, 5, 3, 2, 1] {- Input 45 -}
  [2, 2, 0, 1, 2] -> [2, 4, 0, 2, 2, 1] {- Input 46 -}
  [2, 4, 0, 5, 1] -> [1, 4, 5, 0, 4, 2] {- Input 47 -}
  [2, 4, 2, 3, 1] -> [4, 2, 2, 3, 3, 1] {- Input 48 -}
  [2, 5, 2, 0, 1] -> [0, 2, 4, 1, 5, 2] {- Input 49 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 1, 2] ->= [0, 2, 1, 0] {- DP Nontop (Input 0) -}
  [0, 1, 2] ->= [1, 0, 2, 3] {- DP Nontop (Input 1) -}
  [0, 1, 2] ->= [0, 2, 4, 1, 5] {- DP Nontop (Input 2) -}
  [0, 1, 2] ->= [0, 3, 2, 1, 0] {- DP Nontop (Input 3) -}
  [0, 1, 2] ->= [1, 0, 3, 2, 3] {- DP Nontop (Input 4) -}
  [0, 1, 2] ->= [0, 1, 3, 4, 2, 3] {- DP Nontop (Input 5) -}
  [0, 5, 2] ->= [0, 2, 4, 5, 3] {- DP Nontop (Input 6) -}
  [0, 5, 2] ->= [5, 4, 2, 3, 0, 4] {- DP Nontop (Input 7) -}
  [2, 0, 1] ->= [3, 0, 2, 1] {- DP Nontop (Input 8) -}
  [2, 0, 1] ->= [0, 2, 1, 1, 4] {- DP Nontop (Input 9) -}
  [2, 0, 1] ->= [0, 3, 2, 4, 1] {- DP Nontop (Input 10) -}
  [2, 0, 1] ->= [3, 0, 2, 1, 4] {- DP Nontop (Input 11) -}
  [2, 0, 1] ->= [0, 2, 2, 3, 4, 1] {- DP Nontop (Input 12) -}
  [2, 0, 1] ->= [0, 3, 2, 3, 1, 1] {- DP Nontop (Input 13) -}
  [2, 0, 1] ->= [4, 0, 4, 2, 1, 4] {- DP Nontop (Input 14) -}
  [2, 5, 1] ->= [0, 2, 1, 5, 1] {- DP Nontop (Input 15) -}
  [2, 5, 1] ->= [1, 4, 5, 4, 2] {- DP Nontop (Input 16) -}
  [2, 5, 1] ->= [5, 0, 2, 1, 4] {- DP Nontop (Input 17) -}
  [2, 5, 1] ->= [5, 2, 1, 4, 1] {- DP Nontop (Input 18) -}
  [2, 5, 1] ->= [1, 5, 0, 2, 4, 1] {- DP Nontop (Input 19) -}
  [2, 5, 1] ->= [5, 2, 1, 1, 1, 1] {- DP Nontop (Input 20) -}
  [0, 1, 2, 1] ->= [3, 1, 4, 0, 2, 1] {- DP Nontop (Input 21) -}
  [0, 1, 3, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 22) -}
  [0, 1, 3, 1] ->= [1, 0, 3, 4, 2, 1] {- DP Nontop (Input 23) -}
  [0, 1, 5, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 24) -}
  [0, 2, 1, 2] ->= [0, 2, 2, 1, 5] {- DP Nontop (Input 25) -}
  [0, 2, 5, 1] ->= [1, 1, 5, 0, 2, 1] {- DP Nontop (Input 26) -}
  [0, 5, 3, 1] ->= [0, 1, 4, 4, 3, 5] {- DP Nontop (Input 27) -}
  [0, 5, 5, 2] ->= [5, 4, 2, 3, 5, 0] {- DP Nontop (Input 28) -}
  [2, 0, 1, 2] ->= [0, 2, 3, 2, 1, 1] {- DP Nontop (Input 29) -}
  [2, 0, 1, 2] ->= [4, 0, 2, 1, 1, 2] {- DP Nontop (Input 30) -}
  [2, 0, 4, 1] ->= [3, 0, 2, 4, 1] {- DP Nontop (Input 31) -}
  [2, 0, 5, 1] ->= [5, 4, 2, 1, 0] {- DP Nontop (Input 32) -}
  [2, 2, 5, 1] ->= [3, 2, 2, 4, 5, 1] {- DP Nontop (Input 33) -}
  [2, 4, 0, 1] ->= [1, 0, 2, 4, 4] {- DP Nontop (Input 34) -}
  [2, 4, 0, 1] ->= [3, 0, 0, 2, 4, 1] {- DP Nontop (Input 35) -}
  [2, 4, 0, 1] ->= [5, 4, 0, 2, 1, 1] {- DP Nontop (Input 36) -}
  [2, 5, 2, 1] ->= [1, 5, 2, 2, 3, 1] {- DP Nontop (Input 37) -}
  [2, 5, 4, 1] ->= [4, 5, 2, 1, 4, 4] {- DP Nontop (Input 38) -}
  [2, 5, 5, 1] ->= [1, 5, 4, 2, 4, 5] {- DP Nontop (Input 39) -}
  [2, 5, 5, 2] ->= [5, 5, 2, 3, 2] {- DP Nontop (Input 40) -}
  [0, 1, 3, 0, 1] ->= [0, 3, 1, 0, 1, 1] {- DP Nontop (Input 41) -}
  [0, 2, 4, 3, 1] ->= [1, 3, 4, 2, 3, 0] {- DP Nontop (Input 42) -}
  [0, 2, 4, 3, 1] ->= [4, 0, 3, 2, 1, 0] {- DP Nontop (Input 43) -}
  [0, 2, 5, 3, 1] ->= [5, 0, 2, 3, 5, 1] {- DP Nontop (Input 44) -}
  [2, 0, 5, 4, 1] ->= [0, 4, 5, 3, 2, 1] {- DP Nontop (Input 45) -}
  [2, 2, 0, 1, 2] ->= [2, 4, 0, 2, 2, 1] {- DP Nontop (Input 46) -}
  [2, 4, 0, 5, 1] ->= [1, 4, 5, 0, 4, 2] {- DP Nontop (Input 47) -}
  [2, 4, 2, 3, 1] ->= [4, 2, 2, 3, 3, 1] {- DP Nontop (Input 48) -}
  [2, 5, 2, 0, 1] ->= [0, 2, 4, 1, 5, 2] {- DP Nontop (Input 49) -}
  [2#, 4, 2, 3, 1] |-> [2#, 2, 3, 3, 1] {- DP (Top 1) (Input 48) -}
  [2#, 4, 2, 3, 1] |-> [2#, 3, 3, 1] {- DP (Top 2) (Input 48) -}
  [2#, 4, 0, 1] |-> [2#, 1, 1] {- DP (Top 3) (Input 36) -}
  [2#, 4, 0, 1] |-> [2#, 4, 1] {- DP (Top 3) (Input 35) -}
  [2#, 4, 0, 1] |-> [2#, 4, 4] {- DP (Top 2) (Input 34) -}
  [2#, 4, 0, 1] |-> [0#, 2, 1, 1] {- DP (Top 2) (Input 36) -}
  [2#, 4, 0, 1] |-> [0#, 2, 4, 1] {- DP (Top 2) (Input 35) -}
  [2#, 4, 0, 1] |-> [0#, 2, 4, 4] {- DP (Top 1) (Input 34) -}
  [2#, 4, 0, 1] |-> [0#, 0, 2, 4, 1] {- DP (Top 1) (Input 35) -}
  [2#, 4, 0, 5, 1] |-> [2#] {- DP (Top 5) (Input 47) -}
  [2#, 4, 0, 5, 1] |-> [0#, 4, 2] {- DP (Top 3) (Input 47) -}
  [2#, 2, 0, 1, 2] |-> [2#, 1] {- DP (Top 4) (Input 46) -}
  [2#, 2, 0, 1, 2] |-> [2#, 4, 0, 2, 2, 1] {- DP (Top 0) (Input 46) -}
  [2#, 2, 0, 1, 2] |-> [2#, 2, 1] {- DP (Top 3) (Input 46) -}
  [2#, 2, 0, 1, 2] |-> [0#, 2, 2, 1] {- DP (Top 2) (Input 46) -}
  [2#, 2, 5, 1] |-> [2#, 4, 5, 1] {- DP (Top 2) (Input 33) -}
  [2#, 2, 5, 1] |-> [2#, 2, 4, 5, 1] {- DP (Top 1) (Input 33) -}
  [2#, 0, 1] |-> [2#, 1] {- DP (Top 2) (Input 8) -}
  [2#, 0, 1] |-> [2#, 1, 1, 4] {- DP (Top 1) (Input 9) -}
  [2#, 0, 1] |-> [2#, 1, 4] {- Many [ DP (Top 3) (Input 14) , DP (Top 2) (Input 11) ] -}
  [2#, 0, 1] |-> [2#, 4, 1] {- DP (Top 2) (Input 10) -}
  [2#, 0, 1] |-> [2#, 2, 3, 4, 1] {- DP (Top 1) (Input 12) -}
  [2#, 0, 1] |-> [2#, 3, 1, 1] {- DP (Top 2) (Input 13) -}
  [2#, 0, 1] |-> [2#, 3, 4, 1] {- DP (Top 2) (Input 12) -}
  [2#, 0, 1] |-> [0#, 4, 2, 1, 4] {- DP (Top 1) (Input 14) -}
  [2#, 0, 1] |-> [0#, 2, 1] {- DP (Top 1) (Input 8) -}
  [2#, 0, 1] |-> [0#, 2, 1, 1, 4] {- DP (Top 0) (Input 9) -}
  [2#, 0, 1] |-> [0#, 2, 1, 4] {- DP (Top 1) (Input 11) -}
  [2#, 0, 1] |-> [0#, 2, 2, 3, 4, 1] {- DP (Top 0) (Input 12) -}
  [2#, 0, 1] |-> [0#, 3, 2, 4, 1] {- DP (Top 0) (Input 10) -}
  [2#, 0, 1] |-> [0#, 3, 2, 3, 1, 1] {- DP (Top 0) (Input 13) -}
  [2#, 0, 1, 2] |-> [2#, 1, 1] {- DP (Top 3) (Input 29) -}
  [2#, 0, 1, 2] |-> [2#, 1, 1, 2] {- DP (Top 2) (Input 30) -}
  [2#, 0, 1, 2] |-> [2#, 3, 2, 1, 1] {- DP (Top 1) (Input 29) -}
  [2#, 0, 1, 2] |-> [0#, 2, 1, 1, 2] {- DP (Top 1) (Input 30) -}
  [2#, 0, 1, 2] |-> [0#, 2, 3, 2, 1, 1] {- DP (Top 0) (Input 29) -}
  [2#, 0, 4, 1] |-> [2#, 4, 1] {- DP (Top 2) (Input 31) -}
  [2#, 0, 4, 1] |-> [0#, 2, 4, 1] {- DP (Top 1) (Input 31) -}
  [2#, 0, 5, 1] |-> [2#, 1, 0] {- DP (Top 2) (Input 32) -}
  [2#, 0, 5, 1] |-> [0#] {- DP (Top 4) (Input 32) -}
  [2#, 0, 5, 4, 1] |-> [2#, 1] {- DP (Top 4) (Input 45) -}
  [2#, 0, 5, 4, 1] |-> [0#, 4, 5, 3, 2, 1] {- DP (Top 0) (Input 45) -}
  [2#, 5, 1] |-> [2#] {- DP (Top 4) (Input 16) -}
  [2#, 5, 1] |-> [2#, 1, 1, 1, 1] {- DP (Top 1) (Input 20) -}
  [2#, 5, 1] |-> [2#, 1, 4] {- DP (Top 2) (Input 17) -}
  [2#, 5, 1] |-> [2#, 1, 4, 1] {- DP (Top 1) (Input 18) -}
  [2#, 5, 1] |-> [2#, 1, 5, 1] {- DP (Top 1) (Input 15) -}
  [2#, 5, 1] |-> [2#, 4, 1] {- DP (Top 3) (Input 19) -}
  [2#, 5, 1] |-> [0#, 2, 1, 4] {- DP (Top 1) (Input 17) -}
  [2#, 5, 1] |-> [0#, 2, 1, 5, 1] {- DP (Top 0) (Input 15) -}
  [2#, 5, 1] |-> [0#, 2, 4, 1] {- DP (Top 2) (Input 19) -}
  [2#, 5, 4, 1] |-> [2#, 1, 4, 4] {- DP (Top 2) (Input 38) -}
  [2#, 5, 2, 1] |-> [2#, 2, 3, 1] {- DP (Top 2) (Input 37) -}
  [2#, 5, 2, 1] |-> [2#, 3, 1] {- DP (Top 3) (Input 37) -}
  [2#, 5, 2, 0, 1] |-> [2#] {- DP (Top 5) (Input 49) -}
  [2#, 5, 2, 0, 1] |-> [2#, 4, 1, 5, 2] {- DP (Top 1) (Input 49) -}
  [2#, 5, 2, 0, 1] |-> [0#, 2, 4, 1, 5, 2] {- DP (Top 0) (Input 49) -}
  [2#, 5, 5, 1] |-> [2#, 4, 5] {- DP (Top 3) (Input 39) -}
  [2#, 5, 5, 2] |-> [2#, 3, 2] {- DP (Top 2) (Input 40) -}
  [0#, 1, 2] |-> [2#, 1, 0] {- Many [ DP (Top 2) (Input 3) , DP (Top 1) (Input 0) ] -}
  [0#, 1, 2] |-> [2#, 4, 1, 5] {- DP (Top 1) (Input 2) -}
  [0#, 1, 2] |-> [2#, 3] {- Many [ DP (Top 4) (Input 5) , DP (Top 3) (Input 4) , DP (Top 2) (Input 1) ] -}
  [0#, 1, 2] |-> [0#] {- Many [DP (Top 4) (Input 3), DP (Top 3) (Input 0)] -}
  [0#, 1, 2] |-> [0#, 1, 3, 4, 2, 3] {- DP (Top 0) (Input 5) -}
  [0#, 1, 2] |-> [0#, 2, 1, 0] {- DP (Top 0) (Input 0) -}
  [0#, 1, 2] |-> [0#, 2, 4, 1, 5] {- DP (Top 0) (Input 2) -}
  [0#, 1, 2] |-> [0#, 2, 3] {- DP (Top 1) (Input 1) -}
  [0#, 1, 2] |-> [0#, 3, 2, 1, 0] {- DP (Top 0) (Input 3) -}
  [0#, 1, 2] |-> [0#, 3, 2, 3] {- DP (Top 1) (Input 4) -}
  [0#, 1, 2, 1] |-> [0#, 2, 1] {- DP (Top 3) (Input 21) -}
  [0#, 1, 5, 1] |-> [0#, 3, 1, 1] {- DP (Top 1) (Input 24) -}
  [0#, 1, 3, 1] |-> [2#, 1] {- DP (Top 4) (Input 23) -}
  [0#, 1, 3, 1] |-> [0#, 3, 1, 1] {- DP (Top 1) (Input 22) -}
  [0#, 1, 3, 1] |-> [0#, 3, 4, 2, 1] {- DP (Top 1) (Input 23) -}
  [0#, 1, 3, 0, 1] |-> [0#, 1, 1] {- DP (Top 3) (Input 41) -}
  [0#, 1, 3, 0, 1] |-> [0#, 3, 1, 0, 1, 1] {- DP (Top 0) (Input 41) -}
  [0#, 2, 1, 2] |-> [2#, 1, 5] {- DP (Top 2) (Input 25) -}
  [0#, 2, 1, 2] |-> [2#, 2, 1, 5] {- DP (Top 1) (Input 25) -}
  [0#, 2, 1, 2] |-> [0#, 2, 2, 1, 5] {- DP (Top 0) (Input 25) -}
  [0#, 2, 4, 3, 1] |-> [2#, 1, 0] {- DP (Top 3) (Input 43) -}
  [0#, 2, 4, 3, 1] |-> [2#, 3, 0] {- DP (Top 3) (Input 42) -}
  [0#, 2, 4, 3, 1] |-> [0#] {- Many [ DP (Top 5) (Input 43) , DP (Top 5) (Input 42) ] -}
  [0#, 2, 4, 3, 1] |-> [0#, 3, 2, 1, 0] {- DP (Top 1) (Input 43) -}
  [0#, 2, 5, 1] |-> [2#, 1] {- DP (Top 4) (Input 26) -}
  [0#, 2, 5, 1] |-> [0#, 2, 1] {- DP (Top 3) (Input 26) -}
  [0#, 2, 5, 3, 1] |-> [2#, 3, 5, 1] {- DP (Top 2) (Input 44) -}
  [0#, 2, 5, 3, 1] |-> [0#, 2, 3, 5, 1] {- DP (Top 1) (Input 44) -}
  [0#, 5, 2] |-> [2#, 4, 5, 3] {- DP (Top 1) (Input 6) -}
  [0#, 5, 2] |-> [2#, 3, 0, 4] {- DP (Top 2) (Input 7) -}
  [0#, 5, 2] |-> [0#, 4] {- DP (Top 4) (Input 7) -}
  [0#, 5, 2] |-> [0#, 2, 4, 5, 3] {- DP (Top 0) (Input 6) -}
  [0#, 5, 5, 2] |-> [2#, 3, 5, 0] {- DP (Top 2) (Input 28) -}
  [0#, 5, 5, 2] |-> [0#] {- DP (Top 5) (Input 28) -}
  [0#, 5, 3, 1] |-> [0#, 1, 4, 4, 3, 5] {- DP (Top 0) (Input 27) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [2#, 5, 2, 0, 1] |-> [2#] {- DP (Top 5) (Input 49) -}
  [2#, 4, 0, 5, 1] |-> [2#] {- DP (Top 5) (Input 47) -}
  [2#, 5, 1] |-> [2#] {- DP (Top 4) (Input 16) -}
  [0, 1, 2] ->= [0, 2, 1, 0] {- DP Nontop (Input 0) -}
  [0, 1, 2] ->= [1, 0, 2, 3] {- DP Nontop (Input 1) -}
  [0, 1, 2] ->= [0, 2, 4, 1, 5] {- DP Nontop (Input 2) -}
  [0, 1, 2] ->= [0, 3, 2, 1, 0] {- DP Nontop (Input 3) -}
  [0, 1, 2] ->= [1, 0, 3, 2, 3] {- DP Nontop (Input 4) -}
  [0, 1, 2] ->= [0, 1, 3, 4, 2, 3] {- DP Nontop (Input 5) -}
  [0, 5, 2] ->= [0, 2, 4, 5, 3] {- DP Nontop (Input 6) -}
  [0, 5, 2] ->= [5, 4, 2, 3, 0, 4] {- DP Nontop (Input 7) -}
  [2, 0, 1] ->= [3, 0, 2, 1] {- DP Nontop (Input 8) -}
  [2, 0, 1] ->= [0, 2, 1, 1, 4] {- DP Nontop (Input 9) -}
  [2, 0, 1] ->= [0, 3, 2, 4, 1] {- DP Nontop (Input 10) -}
  [2, 0, 1] ->= [3, 0, 2, 1, 4] {- DP Nontop (Input 11) -}
  [2, 0, 1] ->= [0, 2, 2, 3, 4, 1] {- DP Nontop (Input 12) -}
  [2, 0, 1] ->= [0, 3, 2, 3, 1, 1] {- DP Nontop (Input 13) -}
  [2, 0, 1] ->= [4, 0, 4, 2, 1, 4] {- DP Nontop (Input 14) -}
  [2, 5, 1] ->= [0, 2, 1, 5, 1] {- DP Nontop (Input 15) -}
  [2, 5, 1] ->= [1, 4, 5, 4, 2] {- DP Nontop (Input 16) -}
  [2, 5, 1] ->= [5, 0, 2, 1, 4] {- DP Nontop (Input 17) -}
  [2, 5, 1] ->= [5, 2, 1, 4, 1] {- DP Nontop (Input 18) -}
  [2, 5, 1] ->= [1, 5, 0, 2, 4, 1] {- DP Nontop (Input 19) -}
  [2, 5, 1] ->= [5, 2, 1, 1, 1, 1] {- DP Nontop (Input 20) -}
  [0, 1, 2, 1] ->= [3, 1, 4, 0, 2, 1] {- DP Nontop (Input 21) -}
  [0, 1, 3, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 22) -}
  [0, 1, 3, 1] ->= [1, 0, 3, 4, 2, 1] {- DP Nontop (Input 23) -}
  [0, 1, 5, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 24) -}
  [0, 2, 1, 2] ->= [0, 2, 2, 1, 5] {- DP Nontop (Input 25) -}
  [0, 2, 5, 1] ->= [1, 1, 5, 0, 2, 1] {- DP Nontop (Input 26) -}
  [0, 5, 3, 1] ->= [0, 1, 4, 4, 3, 5] {- DP Nontop (Input 27) -}
  [0, 5, 5, 2] ->= [5, 4, 2, 3, 5, 0] {- DP Nontop (Input 28) -}
  [2, 0, 1, 2] ->= [0, 2, 3, 2, 1, 1] {- DP Nontop (Input 29) -}
  [2, 0, 1, 2] ->= [4, 0, 2, 1, 1, 2] {- DP Nontop (Input 30) -}
  [2, 0, 4, 1] ->= [3, 0, 2, 4, 1] {- DP Nontop (Input 31) -}
  [2, 0, 5, 1] ->= [5, 4, 2, 1, 0] {- DP Nontop (Input 32) -}
  [2, 2, 5, 1] ->= [3, 2, 2, 4, 5, 1] {- DP Nontop (Input 33) -}
  [2, 4, 0, 1] ->= [1, 0, 2, 4, 4] {- DP Nontop (Input 34) -}
  [2, 4, 0, 1] ->= [3, 0, 0, 2, 4, 1] {- DP Nontop (Input 35) -}
  [2, 4, 0, 1] ->= [5, 4, 0, 2, 1, 1] {- DP Nontop (Input 36) -}
  [2, 5, 2, 1] ->= [1, 5, 2, 2, 3, 1] {- DP Nontop (Input 37) -}
  [2, 5, 4, 1] ->= [4, 5, 2, 1, 4, 4] {- DP Nontop (Input 38) -}
  [2, 5, 5, 1] ->= [1, 5, 4, 2, 4, 5] {- DP Nontop (Input 39) -}
  [2, 5, 5, 2] ->= [5, 5, 2, 3, 2] {- DP Nontop (Input 40) -}
  [0, 1, 3, 0, 1] ->= [0, 3, 1, 0, 1, 1] {- DP Nontop (Input 41) -}
  [0, 2, 4, 3, 1] ->= [1, 3, 4, 2, 3, 0] {- DP Nontop (Input 42) -}
  [0, 2, 4, 3, 1] ->= [4, 0, 3, 2, 1, 0] {- DP Nontop (Input 43) -}
  [0, 2, 5, 3, 1] ->= [5, 0, 2, 3, 5, 1] {- DP Nontop (Input 44) -}
  [2, 0, 5, 4, 1] ->= [0, 4, 5, 3, 2, 1] {- DP Nontop (Input 45) -}
  [2, 2, 0, 1, 2] ->= [2, 4, 0, 2, 2, 1] {- DP Nontop (Input 46) -}
  [2, 4, 0, 5, 1] ->= [1, 4, 5, 0, 4, 2] {- DP Nontop (Input 47) -}
  [2, 4, 2, 3, 1] ->= [4, 2, 2, 3, 3, 1] {- DP Nontop (Input 48) -}
  [2, 5, 2, 0, 1] ->= [0, 2, 4, 1, 5, 2] {- DP Nontop (Input 49) -}
reason
  remove un-usable
    SRS
      [0, 1, 2] ->= [0, 2, 1, 0] {- DP Nontop (Input 0) -}
      [0, 1, 2] ->= [1, 0, 2, 3] {- DP Nontop (Input 1) -}
      [0, 1, 2] ->= [0, 2, 4, 1, 5] {- DP Nontop (Input 2) -}
      [0, 1, 2] ->= [0, 3, 2, 1, 0] {- DP Nontop (Input 3) -}
      [0, 1, 2] ->= [1, 0, 3, 2, 3] {- DP Nontop (Input 4) -}
      [0, 1, 2] ->= [0, 1, 3, 4, 2, 3] {- DP Nontop (Input 5) -}
      [0, 5, 2] ->= [0, 2, 4, 5, 3] {- DP Nontop (Input 6) -}
      [0, 5, 2] ->= [5, 4, 2, 3, 0, 4] {- DP Nontop (Input 7) -}
      [2, 0, 1] ->= [3, 0, 2, 1] {- DP Nontop (Input 8) -}
      [2, 0, 1] ->= [0, 2, 1, 1, 4] {- DP Nontop (Input 9) -}
      [2, 0, 1] ->= [0, 3, 2, 4, 1] {- DP Nontop (Input 10) -}
      [2, 0, 1] ->= [3, 0, 2, 1, 4] {- DP Nontop (Input 11) -}
      [2, 0, 1] ->= [0, 2, 2, 3, 4, 1] {- DP Nontop (Input 12) -}
      [2, 0, 1] ->= [0, 3, 2, 3, 1, 1] {- DP Nontop (Input 13) -}
      [2, 0, 1] ->= [4, 0, 4, 2, 1, 4] {- DP Nontop (Input 14) -}
      [2, 5, 1] ->= [0, 2, 1, 5, 1] {- DP Nontop (Input 15) -}
      [2, 5, 1] ->= [1, 4, 5, 4, 2] {- DP Nontop (Input 16) -}
      [2, 5, 1] ->= [5, 0, 2, 1, 4] {- DP Nontop (Input 17) -}
      [2, 5, 1] ->= [5, 2, 1, 4, 1] {- DP Nontop (Input 18) -}
      [2, 5, 1] ->= [1, 5, 0, 2, 4, 1] {- DP Nontop (Input 19) -}
      [2, 5, 1] ->= [5, 2, 1, 1, 1, 1] {- DP Nontop (Input 20) -}
      [0, 1, 2, 1] ->= [3, 1, 4, 0, 2, 1] {- DP Nontop (Input 21) -}
      [0, 1, 3, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 22) -}
      [0, 1, 3, 1] ->= [1, 0, 3, 4, 2, 1] {- DP Nontop (Input 23) -}
      [0, 1, 5, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 24) -}
      [0, 2, 1, 2] ->= [0, 2, 2, 1, 5] {- DP Nontop (Input 25) -}
      [0, 2, 5, 1] ->= [1, 1, 5, 0, 2, 1] {- DP Nontop (Input 26) -}
      [0, 5, 3, 1] ->= [0, 1, 4, 4, 3, 5] {- DP Nontop (Input 27) -}
      [0, 5, 5, 2] ->= [5, 4, 2, 3, 5, 0] {- DP Nontop (Input 28) -}
      [2, 0, 1, 2] ->= [0, 2, 3, 2, 1, 1] {- DP Nontop (Input 29) -}
      [2, 0, 1, 2] ->= [4, 0, 2, 1, 1, 2] {- DP Nontop (Input 30) -}
      [2, 0, 4, 1] ->= [3, 0, 2, 4, 1] {- DP Nontop (Input 31) -}
      [2, 0, 5, 1] ->= [5, 4, 2, 1, 0] {- DP Nontop (Input 32) -}
      [2, 2, 5, 1] ->= [3, 2, 2, 4, 5, 1] {- DP Nontop (Input 33) -}
      [2, 4, 0, 1] ->= [1, 0, 2, 4, 4] {- DP Nontop (Input 34) -}
      [2, 4, 0, 1] ->= [3, 0, 0, 2, 4, 1] {- DP Nontop (Input 35) -}
      [2, 4, 0, 1] ->= [5, 4, 0, 2, 1, 1] {- DP Nontop (Input 36) -}
      [2, 5, 2, 1] ->= [1, 5, 2, 2, 3, 1] {- DP Nontop (Input 37) -}
      [2, 5, 4, 1] ->= [4, 5, 2, 1, 4, 4] {- DP Nontop (Input 38) -}
      [2, 5, 5, 1] ->= [1, 5, 4, 2, 4, 5] {- DP Nontop (Input 39) -}
      [2, 5, 5, 2] ->= [5, 5, 2, 3, 2] {- DP Nontop (Input 40) -}
      [0, 1, 3, 0, 1] ->= [0, 3, 1, 0, 1, 1] {- DP Nontop (Input 41) -}
      [0, 2, 4, 3, 1] ->= [1, 3, 4, 2, 3, 0] {- DP Nontop (Input 42) -}
      [0, 2, 4, 3, 1] ->= [4, 0, 3, 2, 1, 0] {- DP Nontop (Input 43) -}
      [0, 2, 5, 3, 1] ->= [5, 0, 2, 3, 5, 1] {- DP Nontop (Input 44) -}
      [2, 0, 5, 4, 1] ->= [0, 4, 5, 3, 2, 1] {- DP Nontop (Input 45) -}
      [2, 2, 0, 1, 2] ->= [2, 4, 0, 2, 2, 1] {- DP Nontop (Input 46) -}
      [2, 4, 0, 5, 1] ->= [1, 4, 5, 0, 4, 2] {- DP Nontop (Input 47) -}
      [2, 4, 2, 3, 1] ->= [4, 2, 2, 3, 3, 1] {- DP Nontop (Input 48) -}
      [2, 5, 2, 0, 1] ->= [0, 2, 4, 1, 5, 2] {- DP Nontop (Input 49) -}
   property Termination
has value Just True
for SRS
  [2#, 5, 2, 0, 1] |-> [2#] {- DP (Top 5) (Input 49) -}
  [2#, 4, 0, 5, 1] |-> [2#] {- DP (Top 5) (Input 47) -}
  [2#, 5, 1] |-> [2#] {- DP (Top 4) (Input 16) -}
reason
  (1, 1/1)
  (4, 1/1)
  (2, 1/1)
  (0, 1/1)
  (5, 1/1)
  (2#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [0#, 5, 5, 2] |-> [0#] {- DP (Top 5) (Input 28) -}
  [0#, 1, 2] |-> [0#] {- Many [DP (Top 4) (Input 3), DP (Top 3) (Input 0)] -}
  [0#, 2, 4, 3, 1] |-> [0#] {- Many [ DP (Top 5) (Input 43) , DP (Top 5) (Input 42) ] -}
  [0, 1, 2] ->= [0, 2, 1, 0] {- DP Nontop (Input 0) -}
  [0, 1, 2] ->= [1, 0, 2, 3] {- DP Nontop (Input 1) -}
  [0, 1, 2] ->= [0, 2, 4, 1, 5] {- DP Nontop (Input 2) -}
  [0, 1, 2] ->= [0, 3, 2, 1, 0] {- DP Nontop (Input 3) -}
  [0, 1, 2] ->= [1, 0, 3, 2, 3] {- DP Nontop (Input 4) -}
  [0, 1, 2] ->= [0, 1, 3, 4, 2, 3] {- DP Nontop (Input 5) -}
  [0, 5, 2] ->= [0, 2, 4, 5, 3] {- DP Nontop (Input 6) -}
  [0, 5, 2] ->= [5, 4, 2, 3, 0, 4] {- DP Nontop (Input 7) -}
  [2, 0, 1] ->= [3, 0, 2, 1] {- DP Nontop (Input 8) -}
  [2, 0, 1] ->= [0, 2, 1, 1, 4] {- DP Nontop (Input 9) -}
  [2, 0, 1] ->= [0, 3, 2, 4, 1] {- DP Nontop (Input 10) -}
  [2, 0, 1] ->= [3, 0, 2, 1, 4] {- DP Nontop (Input 11) -}
  [2, 0, 1] ->= [0, 2, 2, 3, 4, 1] {- DP Nontop (Input 12) -}
  [2, 0, 1] ->= [0, 3, 2, 3, 1, 1] {- DP Nontop (Input 13) -}
  [2, 0, 1] ->= [4, 0, 4, 2, 1, 4] {- DP Nontop (Input 14) -}
  [2, 5, 1] ->= [0, 2, 1, 5, 1] {- DP Nontop (Input 15) -}
  [2, 5, 1] ->= [1, 4, 5, 4, 2] {- DP Nontop (Input 16) -}
  [2, 5, 1] ->= [5, 0, 2, 1, 4] {- DP Nontop (Input 17) -}
  [2, 5, 1] ->= [5, 2, 1, 4, 1] {- DP Nontop (Input 18) -}
  [2, 5, 1] ->= [1, 5, 0, 2, 4, 1] {- DP Nontop (Input 19) -}
  [2, 5, 1] ->= [5, 2, 1, 1, 1, 1] {- DP Nontop (Input 20) -}
  [0, 1, 2, 1] ->= [3, 1, 4, 0, 2, 1] {- DP Nontop (Input 21) -}
  [0, 1, 3, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 22) -}
  [0, 1, 3, 1] ->= [1, 0, 3, 4, 2, 1] {- DP Nontop (Input 23) -}
  [0, 1, 5, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 24) -}
  [0, 2, 1, 2] ->= [0, 2, 2, 1, 5] {- DP Nontop (Input 25) -}
  [0, 2, 5, 1] ->= [1, 1, 5, 0, 2, 1] {- DP Nontop (Input 26) -}
  [0, 5, 3, 1] ->= [0, 1, 4, 4, 3, 5] {- DP Nontop (Input 27) -}
  [0, 5, 5, 2] ->= [5, 4, 2, 3, 5, 0] {- DP Nontop (Input 28) -}
  [2, 0, 1, 2] ->= [0, 2, 3, 2, 1, 1] {- DP Nontop (Input 29) -}
  [2, 0, 1, 2] ->= [4, 0, 2, 1, 1, 2] {- DP Nontop (Input 30) -}
  [2, 0, 4, 1] ->= [3, 0, 2, 4, 1] {- DP Nontop (Input 31) -}
  [2, 0, 5, 1] ->= [5, 4, 2, 1, 0] {- DP Nontop (Input 32) -}
  [2, 2, 5, 1] ->= [3, 2, 2, 4, 5, 1] {- DP Nontop (Input 33) -}
  [2, 4, 0, 1] ->= [1, 0, 2, 4, 4] {- DP Nontop (Input 34) -}
  [2, 4, 0, 1] ->= [3, 0, 0, 2, 4, 1] {- DP Nontop (Input 35) -}
  [2, 4, 0, 1] ->= [5, 4, 0, 2, 1, 1] {- DP Nontop (Input 36) -}
  [2, 5, 2, 1] ->= [1, 5, 2, 2, 3, 1] {- DP Nontop (Input 37) -}
  [2, 5, 4, 1] ->= [4, 5, 2, 1, 4, 4] {- DP Nontop (Input 38) -}
  [2, 5, 5, 1] ->= [1, 5, 4, 2, 4, 5] {- DP Nontop (Input 39) -}
  [2, 5, 5, 2] ->= [5, 5, 2, 3, 2] {- DP Nontop (Input 40) -}
  [0, 1, 3, 0, 1] ->= [0, 3, 1, 0, 1, 1] {- DP Nontop (Input 41) -}
  [0, 2, 4, 3, 1] ->= [1, 3, 4, 2, 3, 0] {- DP Nontop (Input 42) -}
  [0, 2, 4, 3, 1] ->= [4, 0, 3, 2, 1, 0] {- DP Nontop (Input 43) -}
  [0, 2, 5, 3, 1] ->= [5, 0, 2, 3, 5, 1] {- DP Nontop (Input 44) -}
  [2, 0, 5, 4, 1] ->= [0, 4, 5, 3, 2, 1] {- DP Nontop (Input 45) -}
  [2, 2, 0, 1, 2] ->= [2, 4, 0, 2, 2, 1] {- DP Nontop (Input 46) -}
  [2, 4, 0, 5, 1] ->= [1, 4, 5, 0, 4, 2] {- DP Nontop (Input 47) -}
  [2, 4, 2, 3, 1] ->= [4, 2, 2, 3, 3, 1] {- DP Nontop (Input 48) -}
  [2, 5, 2, 0, 1] ->= [0, 2, 4, 1, 5, 2] {- DP Nontop (Input 49) -}
reason
  remove un-usable
    SRS
      [0, 1, 2] ->= [0, 2, 1, 0] {- DP Nontop (Input 0) -}
      [0, 1, 2] ->= [1, 0, 2, 3] {- DP Nontop (Input 1) -}
      [0, 1, 2] ->= [0, 2, 4, 1, 5] {- DP Nontop (Input 2) -}
      [0, 1, 2] ->= [0, 3, 2, 1, 0] {- DP Nontop (Input 3) -}
      [0, 1, 2] ->= [1, 0, 3, 2, 3] {- DP Nontop (Input 4) -}
      [0, 1, 2] ->= [0, 1, 3, 4, 2, 3] {- DP Nontop (Input 5) -}
      [0, 5, 2] ->= [0, 2, 4, 5, 3] {- DP Nontop (Input 6) -}
      [0, 5, 2] ->= [5, 4, 2, 3, 0, 4] {- DP Nontop (Input 7) -}
      [2, 0, 1] ->= [3, 0, 2, 1] {- DP Nontop (Input 8) -}
      [2, 0, 1] ->= [0, 2, 1, 1, 4] {- DP Nontop (Input 9) -}
      [2, 0, 1] ->= [0, 3, 2, 4, 1] {- DP Nontop (Input 10) -}
      [2, 0, 1] ->= [3, 0, 2, 1, 4] {- DP Nontop (Input 11) -}
      [2, 0, 1] ->= [0, 2, 2, 3, 4, 1] {- DP Nontop (Input 12) -}
      [2, 0, 1] ->= [0, 3, 2, 3, 1, 1] {- DP Nontop (Input 13) -}
      [2, 0, 1] ->= [4, 0, 4, 2, 1, 4] {- DP Nontop (Input 14) -}
      [2, 5, 1] ->= [0, 2, 1, 5, 1] {- DP Nontop (Input 15) -}
      [2, 5, 1] ->= [1, 4, 5, 4, 2] {- DP Nontop (Input 16) -}
      [2, 5, 1] ->= [5, 0, 2, 1, 4] {- DP Nontop (Input 17) -}
      [2, 5, 1] ->= [5, 2, 1, 4, 1] {- DP Nontop (Input 18) -}
      [2, 5, 1] ->= [1, 5, 0, 2, 4, 1] {- DP Nontop (Input 19) -}
      [2, 5, 1] ->= [5, 2, 1, 1, 1, 1] {- DP Nontop (Input 20) -}
      [0, 1, 2, 1] ->= [3, 1, 4, 0, 2, 1] {- DP Nontop (Input 21) -}
      [0, 1, 3, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 22) -}
      [0, 1, 3, 1] ->= [1, 0, 3, 4, 2, 1] {- DP Nontop (Input 23) -}
      [0, 1, 5, 1] ->= [5, 0, 3, 1, 1] {- DP Nontop (Input 24) -}
      [0, 2, 1, 2] ->= [0, 2, 2, 1, 5] {- DP Nontop (Input 25) -}
      [0, 2, 5, 1] ->= [1, 1, 5, 0, 2, 1] {- DP Nontop (Input 26) -}
      [0, 5, 3, 1] ->= [0, 1, 4, 4, 3, 5] {- DP Nontop (Input 27) -}
      [0, 5, 5, 2] ->= [5, 4, 2, 3, 5, 0] {- DP Nontop (Input 28) -}
      [2, 0, 1, 2] ->= [0, 2, 3, 2, 1, 1] {- DP Nontop (Input 29) -}
      [2, 0, 1, 2] ->= [4, 0, 2, 1, 1, 2] {- DP Nontop (Input 30) -}
      [2, 0, 4, 1] ->= [3, 0, 2, 4, 1] {- DP Nontop (Input 31) -}
      [2, 0, 5, 1] ->= [5, 4, 2, 1, 0] {- DP Nontop (Input 32) -}
      [2, 2, 5, 1] ->= [3, 2, 2, 4, 5, 1] {- DP Nontop (Input 33) -}
      [2, 4, 0, 1] ->= [1, 0, 2, 4, 4] {- DP Nontop (Input 34) -}
      [2, 4, 0, 1] ->= [3, 0, 0, 2, 4, 1] {- DP Nontop (Input 35) -}
      [2, 4, 0, 1] ->= [5, 4, 0, 2, 1, 1] {- DP Nontop (Input 36) -}
      [2, 5, 2, 1] ->= [1, 5, 2, 2, 3, 1] {- DP Nontop (Input 37) -}
      [2, 5, 4, 1] ->= [4, 5, 2, 1, 4, 4] {- DP Nontop (Input 38) -}
      [2, 5, 5, 1] ->= [1, 5, 4, 2, 4, 5] {- DP Nontop (Input 39) -}
      [2, 5, 5, 2] ->= [5, 5, 2, 3, 2] {- DP Nontop (Input 40) -}
      [0, 1, 3, 0, 1] ->= [0, 3, 1, 0, 1, 1] {- DP Nontop (Input 41) -}
      [0, 2, 4, 3, 1] ->= [1, 3, 4, 2, 3, 0] {- DP Nontop (Input 42) -}
      [0, 2, 4, 3, 1] ->= [4, 0, 3, 2, 1, 0] {- DP Nontop (Input 43) -}
      [0, 2, 5, 3, 1] ->= [5, 0, 2, 3, 5, 1] {- DP Nontop (Input 44) -}
      [2, 0, 5, 4, 1] ->= [0, 4, 5, 3, 2, 1] {- DP Nontop (Input 45) -}
      [2, 2, 0, 1, 2] ->= [2, 4, 0, 2, 2, 1] {- DP Nontop (Input 46) -}
      [2, 4, 0, 5, 1] ->= [1, 4, 5, 0, 4, 2] {- DP Nontop (Input 47) -}
      [2, 4, 2, 3, 1] ->= [4, 2, 2, 3, 3, 1] {- DP Nontop (Input 48) -}
      [2, 5, 2, 0, 1] ->= [0, 2, 4, 1, 5, 2] {- DP Nontop (Input 49) -}
   property Termination
has value Just True
for SRS
  [0#, 5, 5, 2] |-> [0#] {- DP (Top 5) (Input 28) -}
  [0#, 1, 2] |-> [0#] {- Many [DP (Top 4) (Input 3), DP (Top 3) (Input 0)] -}
  [0#, 2, 4, 3, 1] |-> [0#] {- Many [ DP (Top 5) (Input 43) , DP (Top 5) (Input 42) ] -}
reason
  (1, 1/1)
  (4, 1/1)
  (2, 1/1)
  (5, 1/1)
  (3, 1/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (50,6)\Deepee(94/50,8)\EDG[(3/50,7)\Usable(3,6)\Weight(0,0)\EDG[],(3/50,7)\Usable(3,6)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S  = Size { num_rules = 1800 , num_strict_rules = 1800 , num_top_rules = 0
S  , num_weak_rules = 0 , alphabet_size = 36 , total_length = 20304} , self
S  = 37 , parent = Nothing , duration = 0.126173164000 , status = Success
S  , start = 2025-09-03 12:17:03.44022243 UTC , finish = 2025-09-03 12:17:03.566395594
S  UTC , thread_cap_info = ("ThreadId 65", 0, False)}
S  
S  
