last 887 length 3788
last 671 length 2719
CNF 671 vars 2719 clauses
CNF 887 vars 3788 clauses
last 648 length 2787
last 1400 length 7085
CNF 648 vars 2787 clauses
CNF 1400 vars 7085 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2691, clauses: 9713
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2399, clauses: 8505
last 2691 length 9713
last 2399 length 8505
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8222, clauses: 34231
CNF 2691 vars 9713 clauses
CNF 2399 vars 8505 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9142, clauses: 38129
last 8222 length 34231
last 9142 length 38129
CNF 8222 vars 34231 clauses
CNF 9142 vars 38129 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2399, clauses: 8505, status: Unsatisfied, time: 0.241739382s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2691, clauses: 9713, status: Unsatisfied, time: 0.313861711s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5129, clauses: 20580
last 5129 length 20580
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5708, clauses: 22964
last 5708 length 22964
CNF 5129 vars 20580 clauses
CNF 5708 vars 22964 clauses
last 7076 length 34546
last 8999 length 64923
last 7844 length 37589
CNF 7076 vars 34546 clauses
last 14063 length 74113
CNF 7844 vars 37589 clauses
last 12103 length 65570
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5129, clauses: 20580, status: Unsatisfied, time: 0.811495138s
CNF 8999 vars 64923 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8222, clauses: 34231, status: Unsatisfied, time: 1.289972161s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5708, clauses: 22964, status: Unsatisfied, time: 0.990368342s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9142, clauses: 38129, status: Unsatisfied, time: 1.364124248s
CNF 14063 vars 74113 clauses
CNF 12103 vars 65570 clauses
[Info] pool sizes (success) 64853 seen 45295 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 14763
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4425, clauses: 16857
**************************************************last 3956 length 14763
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14558, clauses: 56730
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16196, clauses: 64131

Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14626, clauses: 60881
last 4425 length 16857
CNF 3956 vars 14763 clauses
last 14558 length 56730
last 16196 length 64131
last 14626 length 60881
summary
CNF 14558 vars 56730 clauses
CNF 16196 vars 64131 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16118, clauses: 67087
CNF 14626 vars 60881 clauses
CNF 4425 vars 16857 clauses
**************************************************
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 14763, status: Unsatisfied, time: 0.284021744s
last 16118 length 67087
SRS with 3 rules on 3 letters       looping derivation
from
  [a, a, a, b, b, c]
to
  [b, b, c, b, b, b, b, c, b, b, b, b, c, b, b, a, a, c, a, a, a, b, b, c, c, c, c]
via 54 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, b, a, a, c, a] {- Input 1 -}
  [c, c, b] -> [] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [a, a, a, b, b, c], via = [(Step   { rule = 1, position = 2}, [a, a, b, b, a, a, c, a, b, c]), (Step   { rule = 0, position = 4}, [a, a, b, b, a, c, a, b, c]), (Step   { rule = 0, position = 4}, [a, a, b, b, c, a, b, c]), (Step   { rule = 1, position = 5}, [a, a, b, b, c, b, b, a, a, c, a, c]), (Step   { rule = 0, position = 10}, [a, a, b, b, c, b, b, a, a, c, c]), (Step   { rule = 0, position = 7}, [a, a, b, b, c, b, b, a, c, c]), (Step   { rule = 0, position = 7}, [a, a, b, b, c, b, b, c, c]), (Step   { rule = 1, position = 1}, [a, b, b, a, a, c, a, b, c, b, b, c, c]), (Step   { rule = 0, position = 3}, [a, b, b, a, c, a, b, c, b, b, c, c]), (Step   { rule = 0, position = 3}, [a, b, b, c, a, b, c, b, b, c, c]), (Step   { rule = 1, position = 4}, [a, b, b, c, b, b, a, a, c, a, c, b, b, c, c]), (Step   { rule = 0, position = 9}, [a, b, b, c, b, b, a, a, c, c, b, b, c, c]), (Step   { rule = 2, position = 8}, [a, b, b, c, b, b, a, a, b, c, c]), (Step   { rule = 1, position = 7}, [a, b, b, c, b, b, a, b, b, a, a, c, a, c, c]), (Step   { rule = 0, position = 12}, [a, b, b, c, b, b, a, b, b, a, a, c, c, c]), (Step   { rule = 0, position = 9}, [a, b, b, c, b, b, a, b, b, a, c, c, c]), (Step   { rule = 0, position = 9}, [a, b, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 1, position = 0}, [b, b, a, a, c, a, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 0, position = 2}, [b, b, a, c, a, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 0, position = 2}, [b, b, c, a, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 1, position = 3}, [b, b, c, b, b, a, a, c, a, c, b, b, a, b, b, c, c, c]), (Step   { rule = 0, position = 8}, [b, b, c, b, b, a, a, c, c, b, b, a, b, b, c, c, c]), (Step   { rule = 2, position = 7}, [b, b, c, b, b, a, a, b, a, b, b, c, c, c]), (Step   { rule = 1, position = 8}, [b, b, c, b, b, a, a, b, b, b, a, a, c, a, b, c, c, c]), (Step   { rule = 0, position = 10}, [b, b, c, b, b, a, a, b, b, b, a, c, a, b, c, c, c]), (Step   { rule = 0, position = 10}, [b, b, c, b, b, a, a, b, b, b, c, a, b, c, c, c]), (Step   { rule = 1, position = 11}, [b, b, c, b, b, a, a, b, b, b, c, b, b, a, a, c, a, c, c, c]), (Step   { rule = 0, position = 16}, [b, b, c, b, b, a, a, b, b, b, c, b, b, a, a, c, c, c, c]), (Step   { rule = 0, position = 13}, [b, b, c, b, b, a, a, b, b, b, c, b, b, a, c, c, c, c]), (Step   { rule = 0, position = 13}, [b, b, c, b, b, a, a, b, b, b, c, b, b, c, c, c, c]), (Step   { rule = 1, position = 6}, [b, b, c, b, b, a, b, b, a, a, c, a, b, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 8}, [b, b, c, b, b, a, b, b, a, c, a, b, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 8}, [b, b, c, b, b, a, b, b, c, a, b, b, c, b, b, c, c, c, c]), (Step   { rule = 1, position = 9}, [b, b, c, b, b, a, b, b, c, b, b, a, a, c, a, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 11}, [b, b, c, b, b, a, b, b, c, b, b, a, c, a, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 11}, [b, b, c, b, b, a, b, b, c, b, b, c, a, b, c, b, b, c, c, c, c]), (Step   { rule = 1, position = 12}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, a, c, a, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 17}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, a, c, c, b, b, c, c, c, c]), (Step   { rule = 2, position = 16}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, a, b, c, c, c, c]), (Step   { rule = 0, position = 14}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, b, c, c, c, c]), (Step   { rule = 0, position = 14}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 1, position = 5}, [b, b, c, b, b, b, b, a, a, c, a, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 7}, [b, b, c, b, b, b, b, a, c, a, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 7}, [b, b, c, b, b, b, b, c, a, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 1, position = 8}, [b, b, c, b, b, b, b, c, b, b, a, a, c, a, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 13}, [b, b, c, b, b, b, b, c, b, b, a, a, c, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 2, position = 12}, [b, b, c, b, b, b, b, c, b, b, a, a, b, c, b, b, b, c, c, c, c]), (Step   { rule = 1, position = 11}, [b, b, c, b, b, b, b, c, b, b, a, b, b, a, a, c, a, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 16}, [b, b, c, b, b, b, b, c, b, b, a, b, b, a, a, c, c, b, b, b, c, c, c, c]), (Step   { rule = 2, position = 15}, [b, b, c, b, b, b, b, c, b, b, a, b, b, a, a, b, b, c, c, c, c]), (Step   { rule = 1, position = 10}, [b, b, c, b, b, b, b, c, b, b, b, b, a, a, c, a, b, a, a, b, b, c, c, c, c]), (Step   { rule = 0, position = 12}, [b, b, c, b, b, b, b, c, b, b, b, b, a, c, a, b, a, a, b, b, c, c, c, c]), (Step   { rule = 0, position = 12}, [b, b, c, b, b, b, b, c, b, b, b, b, c, a, b, a, a, b, b, c, c, c, c]), (Step   { rule = 1, position = 13}, [b, b, c, b, b, b, b, c, b, b, b, b, c, b, b, a, a, c, a, a, a, b, b, c, c, c, c])], to = [b, b, c, b, b, b, b, c, b, b, b, b, c, b, b, a, a, c, a, a, a, b, b, c, c, c, c]}

**************************************************
skeleton: (3,3)\Loop{54}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 16118 vars 67087 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4425, clauses: 16857, status: Unsatisfied, time: 0.456661405s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.805103172000
  min duration 0.046521646000
  total durat. 1.918998149000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 68
    , parent = Nothing
    , duration = 1.805103172000
    , status = Fail
    , start = 2025-09-03 11:07:00.262948455 UTC
    , finish = 2025-09-03 11:07:02.068051627 UTC
    , thread_cap_info = ("ThreadId 76", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.286627060000
  min duration 0.101296963000
  total durat. 2.734531992000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 384}
    , self = 63
    , parent = Nothing
    , duration = 1.188260266000
    , status = Fail
    , start = 2025-09-03 11:07:00.363933053 UTC
    , finish = 2025-09-03 11:07:01.552193319 UTC
    , thread_cap_info = ("ThreadId 104", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 76
      , num_strict_rules = 49
      , num_top_rules = 49
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 449}
    , self = 64
    , parent = Nothing
    , duration = 1.286627060000
    , status = Fail
    , start = 2025-09-03 11:07:00.48266765 UTC
    , finish = 2025-09-03 11:07:01.76929471 UTC
    , thread_cap_info = ("ThreadId 109", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.741460255000
  min duration 1.512473041000
  total durat. 3.253933296000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 66
    , parent = Nothing
    , duration = 1.512473041000
    , status = Fail
    , start = 2025-09-03 11:07:00.391607447 UTC
    , finish = 2025-09-03 11:07:01.904080488 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 46}
    , self = 69
    , parent = Nothing
    , duration = 1.741460255000
    , status = Fail
    , start = 2025-09-03 11:07:00.422684418 UTC
    , finish = 2025-09-03 11:07:02.164144673 UTC
    , thread_cap_info = ("ThreadId 108", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.299812972000
  min duration 1.084421497000
  total durat. 2.384234469000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 65
    , parent = Nothing
    , duration = 1.084421497000
    , status = Fail
    , start = 2025-09-03 11:07:00.718449987 UTC
    , finish = 2025-09-03 11:07:01.802871484 UTC
    , thread_cap_info = ("ThreadId 114", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 46}
    , self = 67
    , parent = Nothing
    , duration = 1.299812972000
    , status = Fail
    , start = 2025-09-03 11:07:00.724182428 UTC
    , finish = 2025-09-03 11:07:02.0239954 UTC
    , thread_cap_info = ("ThreadId 115", 0, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.359590224000
  min duration 1.359590224000
  total durat. 1.359590224000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 70
    , parent = Nothing
    , duration = 1.359590224000
    , status = Success
    , start = 2025-09-03 11:07:00.826129125 UTC
    , finish = 2025-09-03 11:07:02.185719349 UTC
    , thread_cap_info = ("ThreadId 116", 1, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                = 12} , self = 62 , parent = Nothing , duration = 0.569993933000 , status
F                = Fail , start = 2025-09-03 11:07:00.256118092 UTC , finish = 2025-09-03
F                11:07:00.826112025 UTC , thread_cap_info = ("ThreadId 34", 1, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F              = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| F              = 46} , self = 59 , parent = Nothing , duration = 0.158347703000 , status
| F              = Fail , start = 2025-09-03 11:07:00.257287547 UTC , finish = 2025-09-03
| F              11:07:00.41563525 UTC , thread_cap_info = ("ThreadId 60", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 162} , self = 68 , parent = Nothing , duration = 1.805103172000 , status
| | F            = Fail , start = 2025-09-03 11:07:00.262948455 UTC , finish = 2025-09-03
| | F            11:07:02.068051627 UTC , thread_cap_info = ("ThreadId 76", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F          = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | F          = 39} , self = 58 , parent = Nothing , duration = 0.101296963000 , status
| | | F          = Fail , start = 2025-09-03 11:07:00.290250806 UTC , finish = 2025-09-03
| | | F          11:07:00.391547769 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | F          
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | F        = 4 , total_length = 39} , self = 60 , parent = Nothing , duration = 0.371058372000
| | | | F        , status = Fail , start = 2025-09-03 11:07:00.335018923 UTC , finish =
| | | | F        2025-09-03 11:07:00.706077295 UTC , thread_cap_info = ("ThreadId 88", 0,
| | | | F        False)}
| | | | F        
| | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F      = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | | F      alphabet_size = 4 , total_length = 46} , self = 61 , parent = Nothing ,
| | | | | F      duration = 0.383704598000 , status = Fail , start = 2025-09-03 11:07:00.337099135
| | | | | F      UTC , finish = 2025-09-03 11:07:00.720803733 UTC , thread_cap_info = ("ThreadId
| | | | | F      89", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | F    = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | F    total_length = 384} , self = 63 , parent = Nothing , duration = 1.188260266000
| | | | | | F    , status = Fail , start = 2025-09-03 11:07:00.363933053 UTC , finish =
| | | | | | F    2025-09-03 11:07:01.552193319 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | F    3, False)}
| | | | | | F    
| | | F | | |    
| | | F | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | F | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | F | | |    = 4 , total_length = 39} , self = 66 , parent = Nothing , duration = 1.512473041000
| | | F | | |    , status = Fail , start = 2025-09-03 11:07:00.391607447 UTC , finish =
| | | F | | |    2025-09-03 11:07:01.904080488 UTC , thread_cap_info = ("ThreadId 107",
| | | F | | |    0, False)}
| | | F | | |    
| F | | | | |    
| F | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| F | | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| F | | | | |    = 4 , total_length = 46} , self = 69 , parent = Nothing , duration = 1.741460255000
| F | | | | |    , status = Fail , start = 2025-09-03 11:07:00.422684418 UTC , finish =
| F | | | | |    2025-09-03 11:07:02.164144673 UTC , thread_cap_info = ("ThreadId 108",
| F | | | | |    0, False)}
| F | | | | |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | F  = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | F  total_length = 449} , self = 64 , parent = Nothing , duration = 1.286627060000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:07:00.48266765 UTC , finish = 2025-09-03
| | | | | | | F  11:07:01.76929471 UTC , thread_cap_info = ("ThreadId 109", 3, False)}
| | | | | | | F  
| | | | F | | |  
| | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | F | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | F | | |  = 4 , total_length = 39} , self = 65 , parent = Nothing , duration = 1.084421497000
| | | | F | | |  , status = Fail , start = 2025-09-03 11:07:00.718449987 UTC , finish =
| | | | F | | |  2025-09-03 11:07:01.802871484 UTC , thread_cap_info = ("ThreadId 114",
| | | | F | | |  0, False)}
| | | | F | | |  
| | | | | F | |  
| | | | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | F | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | F | |  = 4 , total_length = 46} , self = 67 , parent = Nothing , duration = 1.299812972000
| | | | | F | |  , status = Fail , start = 2025-09-03 11:07:00.724182428 UTC , finish =
| | | | | F | |  2025-09-03 11:07:02.0239954 UTC , thread_cap_info = ("ThreadId 115", 0,
| | | | | F | |  False)}
| | | | | F | |  
F | | | | | | |  
S | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
S | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S | | | | | | |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
S | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S | | | | | | |  = 12} , self = 70 , parent = Nothing , duration = 1.359590224000 , status
S | | | | | | |  = Success , start = 2025-09-03 11:07:00.826129125 UTC , finish = 2025-09-03
S | | | | | | |  11:07:02.185719349 UTC , thread_cap_info = ("ThreadId 116", 1, False)}
S | | | | | | |  
| | | | | | F |  
| | | | | |   F  
| | | | F |      
| | | F   |      
| | |     F      
| | F            
| F              
S                
