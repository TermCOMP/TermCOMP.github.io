last 796 length 3213
CNF 796 vars 3213 clauses
last 688 length 2867
CNF 688 vars 2867 clauses
last 447 length 1759
CNF 447 vars 1759 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2534, clauses: 9282
last 2534 length 9282
last 400 length 1544
CNF 400 vars 1544 clauses
CNF 2534 vars 9282 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2534, clauses: 9282, status: Satisfied, time: 0.069315912s
last 4362 length 19491
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1730, clauses: 6177
CNF 4362 vars 19491 clauses
last 4934 length 24317
last 1730 length 6177
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4666, clauses: 19123
last 603 length 2411
last 568 length 2268
CNF 4934 vars 24317 clauses
last 11552 length 53638
last 4666 length 19123
CNF 1730 vars 6177 clauses
CNF 603 vars 2411 clauses
CNF 568 vars 2268 clauses
last 10528 length 49938
last 15266 length 66021
CNF 11552 vars 53638 clauses
CNF 4666 vars 19123 clauses
last 17734 length 75825
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1730, clauses: 6177, status: Satisfied, time: 0.628973244s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2323, clauses: 8353
CNF 10528 vars 49938 clauses
CNF 15266 vars 66021 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21015
CNF 17734 vars 75825 clauses
last 2323 length 8353
last 5164 length 21015
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       context
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 4 strict rules and 6 weak rules on CNF 2323 vars 8353 clauses
5 CNF 5164 vars 21015 clauses
letters Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2323, clauses: 8353, status: Satisfied, time: 0.078717884s
      weights
SRS with 2 strict rules and 6 weak rules on 4 letters       EDG
SRS with 2 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a] -> [b] {- Input 1 -}
  [b, a, c] -> [c, c, a, a] {- Input 2 -}
  [c] -> [b] {- Input 3 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a] -> [b] {- Input 1 -}
  [b, a, c] -> [c, c, a, a] {- Input 2 -}
  [c] -> [b] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [a] -> [b] {- Mirror (Input 1) -}
  [c, a, b] -> [a, a, c, c] {- Mirror (Input 2) -}
  [c] -> [b] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c#, a, b] |-> [a#, a, c, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, b] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, c] {- DP (Top 2) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c#, a, b] |-> [c#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, c] {- DP (Top 2) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, b] |-> [c#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, c] {- DP (Top 2) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c#
  , Wk  / 10A 11A 11A - \
        | 10A 11A 11A - |
        | 10A 11A 11A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Context\Mirror(6,3)\Deepee(4/6,5)\Weight\EDG(2/6,4)\Matrix{\Arctic}{3}(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21015, status: Satisfied, time: 0.111404653s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.616455329000
  min duration 0.023561473000
  total durat. 1.044125523000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.716760693000
  min duration 0.021754438000
  total durat. 2.775380829000
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 180} , self = 66 , parent = Nothing , duration = 0.366942261000 , status
F                = Fail , start = 2025-09-03 11:09:15.519720114 UTC , finish = 2025-09-03
F                11:09:15.886662375 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| F              = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 180} , self = 67 , parent = Nothing , duration = 0.690418827000 , status
| F              = Fail , start = 2025-09-03 11:09:15.519726744 UTC , finish = 2025-09-03
| F              11:09:16.210145571 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
| F              
| | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S            = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | S            alphabet_size = 6 , total_length = 46} , self = 45 , parent = Nothing ,
| | S            duration = 0.109516486000 , status = Success , start = 2025-09-03 11:09:15.542065427
| | S            UTC , finish = 2025-09-03 11:09:15.651581913 UTC , thread_cap_info = ("ThreadId
| | S            76", 1, False)}
| | S            
| | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E          , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | E          = 6 , total_length = 46} , self = 56 , parent = Nothing , duration = 0.126588823000
| | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:09:15.579732206
| | | E          UTC , finish = 2025-09-03 11:09:15.706321029 UTC , thread_cap_info = ("ThreadId
| | | E          81", 1, False)}
| | | E          
| | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S        = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | S        = 4 , total_length = 29} , self = 71 , parent = Nothing , duration = 0.814347029000
| | | | S        , status = Success , start = 2025-09-03 11:09:15.606342355 UTC , finish
| | | | S        = 2025-09-03 11:09:16.420689384 UTC , thread_cap_info = ("ThreadId 86",
| | | | S        1, False)}
| | | | S        
| | S | |        
| | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E | |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | E | |        = 4 , total_length = 29} , self = 73 , parent = Nothing , duration = 0.798840504000
| | E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:09:15.651605347
| | E | |        UTC , finish = 2025-09-03 11:09:16.450445851 UTC , thread_cap_info = ("ThreadId
| | E | |        92", 1, False)}
| | E | |        
| | | E |        
| | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | F |        = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | F |        = 39} , self = 69 , parent = Nothing , duration = 0.616455329000 , status
| | | F |        = Fail , start = 2025-09-03 11:09:15.711419797 UTC , finish = 2025-09-03
| | | F |        11:09:16.327875126 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | F      = 39} , self = 68 , parent = Nothing , duration = 0.609331165000 , status
| | | | | F      = Fail , start = 2025-09-03 11:09:15.716259815 UTC , finish = 2025-09-03
| | | | | F      11:09:16.32559098 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 120 , num_strict_rules
| | | | | | F    = 84 , num_top_rules = 84 , num_weak_rules = 36 , alphabet_size = 18 ,
| | | | | | F    total_length = 630} , self = 70 , parent = Nothing , duration = 0.682205046000
| | | | | | F    , status = Fail , start = 2025-09-03 11:09:15.726330805 UTC , finish =
| | | | | | F    2025-09-03 11:09:16.408535851 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | F    1, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
| | | | | | | F  = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | | | | F  total_length = 504} , self = 76 , parent = Nothing , duration = 0.716760693000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:09:15.747245 UTC , finish = 2025-09-03
| | | | | | | F  11:09:16.464005693 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | | | | | | F  
F | | | | | | |  
  F | | | | | |  
    | | | F | |  
    | F |   | |  
    |   |   F |  
    |   S     |  
    E         |  
              F  
