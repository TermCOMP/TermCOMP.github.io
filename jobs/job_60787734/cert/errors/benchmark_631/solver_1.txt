last 15018 length 84467
CNF 15018 vars 84467 clauses
last 11494 length 104377
CNF 11494 vars 104377 clauses
last 14431 length 118900
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3819, clauses: 15866
last 3819 length 15866
CNF 3819 vars 15866 clauses
CNF 14431 vars 118900 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3819, clauses: 15866, status: Satisfied, time: 0.220293925s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13420, clauses: 56733
last 28253 length 175623
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5919, clauses: 26543
last 5919 length 26543
CNF 5919 vars 26543 clauses
CNF 28253 vars 175623 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5919, clauses: 26543, status: Unsatisfied, time: 0.424443847s
last 14808 length 83604
CNF 14808 vars 83604 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16770, clauses: 70975
last 16770 length 70975
last 11374 length 103930
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10816, clauses: 47690
CNF 16770 vars 70975 clauses
CNF 11374 vars 103930 clauses
last 10816 length 47690
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3608, clauses: 14919
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16770, clauses: 70975, status: Satisfied, time: 0.471600608s
CNF 10816 vars 47690 clauses
last 3608 length 14919
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13082, clauses: 55307
last 13082 length 55307
CNF 13082 vars 55307 clauses
CNF 3608 vars 14919 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13082, clauses: 55307, status: Satisfied, time: 0.08296632s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 11 rules on 3 letters       DP
SRS with 12 strict rules and 11 weak rules on 4 letters       EDG
SRS with 12 strict rules and 11 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 11 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- Input 0 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 1 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 2 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 3 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 4 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 5 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 6 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 7 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 8 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 9 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 10 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 2) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 3) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 4) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 5) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 6) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 7) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 8) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 9) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 10) -}
  [0#, 1, 2, 1] |-> [0#, 1, 2] {- Many [ DP (Top 37) (Input 10) , DP (Top 34) (Input 9) , DP (Top 31) (Input 8) , DP (Top 28) (Input 7) , DP (Top 25) (Input 6) , DP (Top 22) (Input 5) , DP (Top 19) (Input 4) , DP (Top 16) (Input 3) , DP (Top 13) (Input 2) , DP (Top 10) (Input 1) , DP (Top 7) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2] {- Many [ DP (Top 34) (Input 10) , DP (Top 31) (Input 9) , DP (Top 28) (Input 8) , DP (Top 25) (Input 7) , DP (Top 22) (Input 6) , DP (Top 19) (Input 5) , DP (Top 16) (Input 4) , DP (Top 13) (Input 3) , DP (Top 10) (Input 2) , DP (Top 7) (Input 1) , DP (Top 4) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2, 0, 1, 2] {- Many [ DP (Top 31) (Input 10) , DP (Top 28) (Input 9) , DP (Top 25) (Input 8) , DP (Top 22) (Input 7) , DP (Top 19) (Input 6) , DP (Top 16) (Input 5) , DP (Top 13) (Input 4) , DP (Top 10) (Input 3) , DP (Top 7) (Input 2) , DP (Top 4) (Input 1) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 28) (Input 10) , DP (Top 25) (Input 9) , DP (Top 22) (Input 8) , DP (Top 19) (Input 7) , DP (Top 16) (Input 6) , DP (Top 13) (Input 5) , DP (Top 10) (Input 4) , DP (Top 7) (Input 3) , DP (Top 4) (Input 2) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 25) (Input 10) , DP (Top 22) (Input 9) , DP (Top 19) (Input 8) , DP (Top 16) (Input 7) , DP (Top 13) (Input 6) , DP (Top 10) (Input 5) , DP (Top 7) (Input 4) , DP (Top 4) (Input 3) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 22) (Input 10) , DP (Top 19) (Input 9) , DP (Top 16) (Input 8) , DP (Top 13) (Input 7) , DP (Top 10) (Input 6) , DP (Top 7) (Input 5) , DP (Top 4) (Input 4) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 19) (Input 10) , DP (Top 16) (Input 9) , DP (Top 13) (Input 8) , DP (Top 10) (Input 7) , DP (Top 7) (Input 6) , DP (Top 4) (Input 5) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 16) (Input 10) , DP (Top 13) (Input 9) , DP (Top 10) (Input 8) , DP (Top 7) (Input 7) , DP (Top 4) (Input 6) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 13) (Input 10) , DP (Top 10) (Input 9) , DP (Top 7) (Input 8) , DP (Top 4) (Input 7) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 10) (Input 10) , DP (Top 7) (Input 9) , DP (Top 4) (Input 8) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [DP (Top 7) (Input 10), DP (Top 4) (Input 9)] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP (Top 4) (Input 10) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [0#, 1, 2, 1] |-> [0#, 1, 2] {- Many [ DP (Top 37) (Input 10) , DP (Top 34) (Input 9) , DP (Top 31) (Input 8) , DP (Top 28) (Input 7) , DP (Top 25) (Input 6) , DP (Top 22) (Input 5) , DP (Top 19) (Input 4) , DP (Top 16) (Input 3) , DP (Top 13) (Input 2) , DP (Top 10) (Input 1) , DP (Top 7) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2] {- Many [ DP (Top 34) (Input 10) , DP (Top 31) (Input 9) , DP (Top 28) (Input 8) , DP (Top 25) (Input 7) , DP (Top 22) (Input 6) , DP (Top 19) (Input 5) , DP (Top 16) (Input 4) , DP (Top 13) (Input 3) , DP (Top 10) (Input 2) , DP (Top 7) (Input 1) , DP (Top 4) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2, 0, 1, 2] {- Many [ DP (Top 31) (Input 10) , DP (Top 28) (Input 9) , DP (Top 25) (Input 8) , DP (Top 22) (Input 7) , DP (Top 19) (Input 6) , DP (Top 16) (Input 5) , DP (Top 13) (Input 4) , DP (Top 10) (Input 3) , DP (Top 7) (Input 2) , DP (Top 4) (Input 1) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 28) (Input 10) , DP (Top 25) (Input 9) , DP (Top 22) (Input 8) , DP (Top 19) (Input 7) , DP (Top 16) (Input 6) , DP (Top 13) (Input 5) , DP (Top 10) (Input 4) , DP (Top 7) (Input 3) , DP (Top 4) (Input 2) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 25) (Input 10) , DP (Top 22) (Input 9) , DP (Top 19) (Input 8) , DP (Top 16) (Input 7) , DP (Top 13) (Input 6) , DP (Top 10) (Input 5) , DP (Top 7) (Input 4) , DP (Top 4) (Input 3) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 22) (Input 10) , DP (Top 19) (Input 9) , DP (Top 16) (Input 8) , DP (Top 13) (Input 7) , DP (Top 10) (Input 6) , DP (Top 7) (Input 5) , DP (Top 4) (Input 4) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 19) (Input 10) , DP (Top 16) (Input 9) , DP (Top 13) (Input 8) , DP (Top 10) (Input 7) , DP (Top 7) (Input 6) , DP (Top 4) (Input 5) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 16) (Input 10) , DP (Top 13) (Input 9) , DP (Top 10) (Input 8) , DP (Top 7) (Input 7) , DP (Top 4) (Input 6) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 13) (Input 10) , DP (Top 10) (Input 9) , DP (Top 7) (Input 8) , DP (Top 4) (Input 7) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 10) (Input 10) , DP (Top 7) (Input 9) , DP (Top 4) (Input 8) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [DP (Top 7) (Input 10), DP (Top 4) (Input 9)] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP (Top 4) (Input 10) -}
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 2) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 3) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 4) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 5) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 6) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 7) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 8) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 9) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 10) -}
reason
  ( 1
  , Wk  / 0A -  -1A \
        | 0A 1A 2A  |
        \ -  -  0A  / )
  ( 2
  , Wk  / -2A -1A 0A \
        | -1A -2A -  |
        \ -   -   0A / )
  ( 0
  , Wk  / 1A 0A  -1A \
        | 1A -1A 1A  |
        \ -  -   0A  / )
  ( 0#
  , Wk  / 1A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 2) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 3) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 4) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 5) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 6) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 7) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 8) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 9) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 10) -}
reason
  EDG

**************************************************
skeleton: (11,3)\Deepee\EDG(12/11,4)\Matrix{\ArcticBZ}{3}(0/11,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.500526118000
  min duration 0.661995494000
  total durat. 3.072405561000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 11
      , alphabet_size = 4
      , total_length = 601}
    , self = 60
    , parent = Nothing
    , duration = 1.500526118000
    , status = Fail
    , start = 2025-09-03 12:28:37.079052416 UTC
    , finish = 2025-09-03 12:28:38.579578534 UTC
    , thread_cap_info = ("ThreadId 67", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.059564677000
  min duration 3.059564677000
  total durat. 3.059564677000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 66
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 2046}
    , self = 69
    , parent = Nothing
    , duration = 3.059564677000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:37.091512407 UTC
    , finish = 2025-09-03 12:28:40.151077084 UTC
    , thread_cap_info = ("ThreadId 76", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.390971847000
  min duration 0.858679286000
  total durat. 3.264226858000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 11
      , alphabet_size = 4
      , total_length = 601}
    , self = 52
    , parent = Nothing
    , duration = 1.014575725000
    , status = Fail
    , start = 2025-09-03 12:28:37.079057484 UTC
    , finish = 2025-09-03 12:28:38.093633209 UTC
    , thread_cap_info = ("ThreadId 68", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 4
      , total_length = 332}
    , self = 66
    , parent = Nothing
    , duration = 1.390971847000
    , status = Fail
    , start = 2025-09-03 12:28:38.190742562 UTC
    , finish = 2025-09-03 12:28:39.581714409 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.059575937000
  min duration 3.059575937000
  total durat. 3.059575937000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 66
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 2046}
    , self = 70
    , parent = Nothing
    , duration = 3.059575937000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:37.091518043 UTC
    , finish = 2025-09-03 12:28:40.15109398 UTC
    , thread_cap_info = ("ThreadId 78", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.379734589000
  min duration 0.645398416000
  total durat. 2.025133005000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 11
      , alphabet_size = 4
      , total_length = 601}
    , self = 67
    , parent = Nothing
    , duration = 1.379734589000
    , status = Success
    , start = 2025-09-03 12:28:38.579609592 UTC
    , finish = 2025-09-03 12:28:39.959344181 UTC
    , thread_cap_info = ("ThreadId 110", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.486457311000
  min duration 1.486457311000
  total durat. 1.486457311000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 11
      , alphabet_size = 4
      , total_length = 601}
    , self = 71
    , parent = Nothing
    , duration = 1.486457311000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:38.750766663 UTC
    , finish = 2025-09-03 12:28:40.237223974 UTC
    , thread_cap_info = ("ThreadId 115", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.192798805000
  min duration 0.623892591000
  total durat. 1.816691396000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 4
      , total_length = 332}
    , self = 76
    , parent = Nothing
    , duration = 1.192798805000
    , status = Fail
    , start = 2025-09-03 12:28:39.099793423 UTC
    , finish = 2025-09-03 12:28:40.292592228 UTC
    , thread_cap_info = ("ThreadId 119", 2, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 3.367157287000
  min duration 3.367157287000
  total durat. 3.367157287000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 11
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 319}
    , self = 78
    , parent = Nothing
    , duration = 3.367157287000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:28:37.076356881 UTC
    , finish = 2025-09-03 12:28:40.443514168 UTC
    , thread_cap_info = ("ThreadId 23", 3, False)}
**************************************************
E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                = True}" , input_size = Size { num_rules = 11 , num_strict_rules = 11 ,
E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                = 319} , self = 78 , parent = Nothing , duration = 3.367157287000 , status
E                = Except "AsyncCancelled" , start = 2025-09-03 12:28:37.076356881 UTC ,
E                finish = 2025-09-03 12:28:40.443514168 UTC , thread_cap_info = ("ThreadId
E                23", 3, False)}
E                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| F              = 12 , num_top_rules = 12 , num_weak_rules = 11 , alphabet_size = 4 , total_length
| F              = 601} , self = 60 , parent = Nothing , duration = 1.500526118000 , status
| F              = Fail , start = 2025-09-03 12:28:37.079052416 UTC , finish = 2025-09-03
| F              12:28:38.579578534 UTC , thread_cap_info = ("ThreadId 67", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | F            = 12 , num_top_rules = 12 , num_weak_rules = 11 , alphabet_size = 4 , total_length
| | F            = 601} , self = 52 , parent = Nothing , duration = 1.014575725000 , status
| | F            = Fail , start = 2025-09-03 12:28:37.079057484 UTC , finish = 2025-09-03
| | F            12:28:38.093633209 UTC , thread_cap_info = ("ThreadId 68", 0, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F          = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size = 4 , total_length
| | | F          = 339} , self = 47 , parent = Nothing , duration = 0.858679286000 , status
| | | F          = Fail , start = 2025-09-03 12:28:37.079213785 UTC , finish = 2025-09-03
| | | F          12:28:37.937893071 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size = 4 , total_length
| | | | F        = 339} , self = 43 , parent = Nothing , duration = 0.661995494000 , status
| | | | F        = Fail , start = 2025-09-03 12:28:37.090930015 UTC , finish = 2025-09-03
| | | | F        12:28:37.752925509 UTC , thread_cap_info = ("ThreadId 70", 2, False)}
| | | | F        
| | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | | | | E      = 66 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | | | | E      = 2046} , self = 69 , parent = Nothing , duration = 3.059564677000 , status
| | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:28:37.091512407 UTC ,
| | | | | E      finish = 2025-09-03 12:28:40.151077084 UTC , thread_cap_info = ("ThreadId
| | | | | E      76", 1, False)}
| | | | | E      
| | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | | | | | E    = 66 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | | | | | E    = 2046} , self = 70 , parent = Nothing , duration = 3.059575937000 , status
| | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:28:37.091518043 UTC ,
| | | | | | E    finish = 2025-09-03 12:28:40.15109398 UTC , thread_cap_info = ("ThreadId
| | | | | | E    78", 1, False)}
| | | | | | E    
| | | | F | |    
| | | | S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |    = 14 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 11 ,
| | | | S | |    alphabet_size = 4 , total_length = 339} , self = 53 , parent = Nothing
| | | | S | |    , duration = 0.324284876000 , status = Success , start = 2025-09-03 12:28:37.835253437
| | | | S | |    UTC , finish = 2025-09-03 12:28:38.159538313 UTC , thread_cap_info = ("ThreadId
| | | | S | |    91", 2, False)}
| | | | S | |    
| | | F | | |    
| | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | E | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size
| | | E | | |    = 4 , total_length = 339} , self = 55 , parent = Nothing , duration = 0.238614612000
| | | E | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:28:37.950866045
| | | E | | |    UTC , finish = 2025-09-03 12:28:38.189480657 UTC , thread_cap_info = ("ThreadId
| | | E | | |    99", 2, False)}
| | | E | | |    
| | | | | | | S  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | S  verbose = False}" , input_size = Size { num_rules = 159 , num_strict_rules
| | | | | | | S  = 93 , num_top_rules = 93 , num_weak_rules = 66 , alphabet_size = 10 ,
| | | | | | | S  total_length = 4272} , self = 61 , parent = Nothing , duration = 0.488873211000
| | | | | | | S  , status = Success , start = 2025-09-03 12:28:38.091052452 UTC , finish
| | | | | | | S  = 2025-09-03 12:28:38.579925663 UTC , thread_cap_info = ("ThreadId 94",
| | | | | | | S  3, False)}
| | | | | | | S  
| | F | | | | |  
| | F | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |  = 23 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 11
| | F | | | | |  , alphabet_size = 4 , total_length = 601} , self = 64 , parent = Nothing
| | F | | | | |  , duration = 0.623892591000 , status = Fail , start = 2025-09-03 12:28:38.110794152
| | F | | | | |  UTC , finish = 2025-09-03 12:28:38.734686743 UTC , thread_cap_info = ("ThreadId
| | F | | | | |  101", 0, False)}
| | F | | | | |  
| | | | S | | |  
| | | E   | | |  
| | | F   | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | F   | | |  = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size = 4 , total_length
| | | F   | | |  = 332} , self = 65 , parent = Nothing , duration = 0.909883949000 , status
| | | F   | | |  = Fail , start = 2025-09-03 12:28:38.189885907 UTC , finish = 2025-09-03
| | | F   | | |  12:28:39.099769856 UTC , thread_cap_info = ("ThreadId 106", 2, False)}
| | | F   | | |  
| | | | F | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | F | | |  = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size = 4 , total_length
| | | | F | | |  = 332} , self = 66 , parent = Nothing , duration = 1.390971847000 , status
| | | | F | | |  = Fail , start = 2025-09-03 12:28:38.190742562 UTC , finish = 2025-09-03
| | | | F | | |  12:28:39.581714409 UTC , thread_cap_info = ("ThreadId 107", 2, False)}
| | | | F | | |  
| F | | | | | |  
| S | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 23
| S | | | | | |  , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 11 , alphabet_size
| S | | | | | |  = 4 , total_length = 601} , self = 67 , parent = Nothing , duration = 1.379734589000
| S | | | | | |  , status = Success , start = 2025-09-03 12:28:38.579609592 UTC , finish
| S | | | | | |  = 2025-09-03 12:28:39.959344181 UTC , thread_cap_info = ("ThreadId 110",
| S | | | | | |  0, False)}
| S | | | | | |  
| | | | | | | S  
| | F | | | |    
| | E | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 23
| | E | | | |    , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 11 , alphabet_size
| | E | | | |    = 4 , total_length = 601} , self = 71 , parent = Nothing , duration = 1.486457311000
| | E | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:28:38.750766663
| | E | | | |    UTC , finish = 2025-09-03 12:28:40.237223974 UTC , thread_cap_info = ("ThreadId
| | E | | | |    115", 0, False)}
| | E | | | |    
| | | F | | |    
| | | F | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | |    = 13 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 ,
| | | F | | |    alphabet_size = 4 , total_length = 332} , self = 76 , parent = Nothing
| | | F | | |    , duration = 1.192798805000 , status = Fail , start = 2025-09-03 12:28:39.099793423
| | | F | | |    UTC , finish = 2025-09-03 12:28:40.292592228 UTC , thread_cap_info = ("ThreadId
| | | F | | |    119", 2, False)}
| | | F | | |    
| | | | F | |    
| | | | S | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | S | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size
| | | | S | |    = 4 , total_length = 332} , self = 72 , parent = Nothing , duration = 0.645398416000
| | | | S | |    , status = Success , start = 2025-09-03 12:28:39.592429336 UTC , finish
| | | | S | |    = 2025-09-03 12:28:40.237827752 UTC , thread_cap_info = ("ThreadId 121",
| | | | S | |    2, False)}
| | | | S | |    
| S | | | | |    
|   | | | E |    
|   | | |   E    
|   E | |        
|     | S        
|     F          
E                
