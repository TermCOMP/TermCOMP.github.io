last 954 length 4047
CNF 954 vars 4047 clauses
last 1173 length 4994
last 1540 length 6496
CNF 1540 vars 6496 clauses
CNF 1173 vars 4994 clauses
last 1921 length 8197
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2062, clauses: 7579
last 2062 length 7579
CNF 1921 vars 8197 clauses
CNF 2062 vars 7579 clauses
last 2450 length 10714
last 2856 length 12202
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3121, clauses: 12004
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7981, clauses: 33505
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2062, clauses: 7579, status: Satisfied, time: 0.221838538s
CNF 2450 vars 10714 clauses
CNF 2856 vars 12202 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10204, clauses: 42891
last 3121 length 12004
last 4122 length 19529
last 4628 length 21775
last 4745 length 22373
last 4515 length 20884
last 10204 length 42891
last 1161 length 4927
CNF 3121 vars 12004 clauses
CNF 4122 vars 19529 clauses
last 1021 length 4362
CNF 4628 vars 21775 clauses
CNF 4745 vars 22373 clauses
CNF 4515 vars 20884 clauses
CNF 10204 vars 42891 clauses
CNF 1161 vars 4927 clauses
CNF 1021 vars 4362 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3121, clauses: 12004, status: Satisfied, time: 0.21285193s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4542, clauses: 17009
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8044
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4431, clauses: 16802
last 4542 length 17009
last 2185 length 8044
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18315, clauses: 77239
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8567, clauses: 36019
last 1500 length 6466
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18021, clauses: 75969
last 4431 length 16802
CNF 2185 vars 8044 clauses
last 18315 length 77239
CNF 4542 vars 17009 clauses
last 8567 length 36019
last 1210 length 5108
last 18021 length 75969
CNF 1500 vars 6466 clauses
CNF 4431 vars 16802 clauses
CNF 18315 vars 77239 clauses
CNF 8567 vars 36019 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4542, clauses: 17009, status: Satisfied, time: 0.212625311s
CNF 1210 vars 5108 clauses
CNF 18021 vars 75969 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8044, status: Unsatisfied, time: 0.164011978s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4431, clauses: 16802, status: Satisfied, time: 0.129156143s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2287, clauses: 8662
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8567, clauses: 36019, status: Satisfied, time: 0.192653862s
last 3368 length 14574
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5174, clauses: 21500
last 3374 length 15332
last 2287 length 8662
last 3723 length 17314
last 3977 length 18387
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8321, clauses: 34975
**************************************************CNF 2287 vars 8662 clauses

last 8321 length 34975
CNF 3368 vars 14574 clauses
CNF 3374 vars 15332 clauses
CNF 3723 vars 17314 clauses
CNF 3977 vars 18387 clauses
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 13 strict rules and 4 weak rules on 4 letters       weights
SRS with 2 strict rules and 4 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b] -> [b, a, b, a] {- Input 0 -}
  [a, a, b, b] -> [a, a, a, b] {- Input 1 -}
  [a, a, a, b] -> [b, b, a, b] {- Input 2 -}
  [b, b, b, a] -> [b, a, b, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
  [a#, a, a, b] |-> [a#] {- DP (Top 3) (Input 0) -}
  [a#, a, a, b] |-> [a#, b, a] {- DP (Top 1) (Input 0) -}
  [a#, a, a, b] |-> [b#, a] {- DP (Top 2) (Input 0) -}
  [a#, a, a, b] |-> [b#, a, b] {- DP (Top 1) (Input 2) -}
  [a#, a, a, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a, b] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
  [a#, a, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, a, b, b] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [a#, a, b, b] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, a] |-> [a#, b, b] {- DP (Top 1) (Input 3) -}
  [b#, b, b, a] |-> [b#] {- DP (Top 3) (Input 3) -}
  [b#, b, b, a] |-> [b#, a, b, b] {- DP (Top 0) (Input 3) -}
  [b#, b, b, a] |-> [b#, b] {- DP (Top 2) (Input 3) -}
reason
  (a, 2/1)
  (b, 2/1)
  (a#, 2/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
  [a#, a, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [b#, b, b, a] |-> [b#, a, b, b] {- DP (Top 0) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 13A 15A 16A - \
        | 13A 15A 16A - |
        | 13A 15A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, b, b, a] |-> [b#, a, b, b] {- DP (Top 0) (Input 3) -}
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A -2A 1A \
        | 1A -   1A |
        \ -  -   0A / )
  ( b
  , Wk  / - -  0A \
        | - 0A 2A |
        \ - -  0A / )
  ( b#
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [a, a, a, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, a, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, a] ->= [b, a, b, b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee(13/4,4)\Weight(2/4,4)\EDG[(1/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[],(1/4,3)\Matrix{\ArcticBZ}{3}(0/4,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 8321 vars 34975 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.447283253000
  min duration 0.059876065000
  total durat. 1.635775486000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.453758929000
  min duration 0.041987896000
  total durat. 1.561215606000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.773370296000
  min duration 0.374673287000
  total durat. 2.491156374000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.779390422000
  min duration 0.403382146000
  total durat. 2.484551243000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.172993286000
  min duration 1.172993286000
  total durat. 1.172993286000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 32}
    , self = 105
    , parent = Nothing
    , duration = 1.172993286000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:19:45.888114302 UTC
    , finish = 2025-09-03 12:19:47.061107588 UTC
    , thread_cap_info = ("ThreadId 113", 3, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 32} , self
F                      = 46 , parent = Nothing , duration = 0.198502184000 , status = Fail , start
F                      = 2025-09-03 12:19:45.551318183 UTC , finish = 2025-09-03 12:19:45.749820367
F                      UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F                    = 9 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                    = 90} , self = 68 , parent = Nothing , duration = 0.453758929000 , status
| F                    = Fail , start = 2025-09-03 12:19:45.557274101 UTC , finish = 2025-09-03
| F                    12:19:46.01103303 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F                  = 9 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                  = 90} , self = 69 , parent = Nothing , duration = 0.447283253000 , status
| | F                  = Fail , start = 2025-09-03 12:19:45.568176694 UTC , finish = 2025-09-03
| | F                  12:19:46.015459947 UTC , thread_cap_info = ("ThreadId 60", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                = 64} , self = 45 , parent = Nothing , duration = 0.178623849000 , status
| | | F                = Fail , start = 2025-09-03 12:19:45.568179724 UTC , finish = 2025-09-03
| | | F                12:19:45.746803573 UTC , thread_cap_info = ("ThreadId 65", 0, False)}
| | | F                
| | | | F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F              = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | | F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | F              = 32} , self = 60 , parent = Nothing , duration = 0.292286015000 , status
| | | | F              = Fail , start = 2025-09-03 12:19:45.588469018 UTC , finish = 2025-09-03
| | | | F              12:19:45.880755033 UTC , thread_cap_info = ("ThreadId 78", 3, False)}
| | | | F              
| | | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S            = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | S            = 3 , total_length = 40} , self = 61 , parent = Nothing , duration = 0.403382146000
| | | | | S            , status = Success , start = 2025-09-03 12:19:45.599219629 UTC , finish
| | | | | S            = 2025-09-03 12:19:46.002601775 UTC , thread_cap_info = ("ThreadId 82",
| | | | | S            2, False)}
| | | | | S            
| | | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S          = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | S          = 4 , total_length = 64} , self = 76 , parent = Nothing , duration = 0.650799340000
| | | | | | S          , status = Success , start = 2025-09-03 12:19:45.617585695 UTC , finish
| | | | | | S          = 2025-09-03 12:19:46.268385035 UTC , thread_cap_info = ("ThreadId 85",
| | | | | | S          0, False)}
| | | | | | S          
| | | | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | E        = 3 , total_length = 40} , self = 63 , parent = Nothing , duration = 0.374673287000
| | | | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:45.628087181
| | | | | | | E        UTC , finish = 2025-09-03 12:19:46.002760468 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        88", 2, False)}
| | | | | | | E        
| | | F | | | |        
| | | E | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E | | | |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | E | | | |        = 4 , total_length = 64} , self = 78 , parent = Nothing , duration = 0.692832819000
| | | E | | | |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:45.746827657
| | | E | | | |        UTC , finish = 2025-09-03 12:19:46.439660476 UTC , thread_cap_info = ("ThreadId
| | | E | | | |        94", 0, False)}
| | | E | | | |        
F | | | | | | |        
F | | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F | | | | | | |        = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
F | | | | | | |        = 110} , self = 72 , parent = Nothing , duration = 0.336207492000 , status
F | | | | | | |        = Fail , start = 2025-09-03 12:19:45.773597686 UTC , finish = 2025-09-03
F | | | | | | |        12:19:46.109805178 UTC , thread_cap_info = ("ThreadId 107", 3, False)}
F | | | | | | |        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
| | | | | | | | F      = 110} , self = 73 , parent = Nothing , duration = 0.305200589000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 12:19:45.804661456 UTC , finish = 2025-09-03
| | | | | | | | F      12:19:46.109862045 UTC , thread_cap_info = ("ThreadId 108", 3, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
| | | | | | | | | F    = 110} , self = 71 , parent = Nothing , duration = 0.298660040000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 12:19:45.80714962 UTC , finish = 2025-09-03
| | | | | | | | | F    12:19:46.10580966 UTC , thread_cap_info = ("ThreadId 109", 3, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size = 5 , total_length
| | | | | | | | | | F  = 110} , self = 70 , parent = Nothing , duration = 0.251381648000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 12:19:45.827126761 UTC , finish = 2025-09-03
| | | | | | | | | | F  12:19:46.078508409 UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| | | | | | | | | | F  
| | | | F | | | | | |  
| | | | E | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E | | | | | |  = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | | E | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E | | | | | |  = 32} , self = 105 , parent = Nothing , duration = 1.172993286000 , status
| | | | E | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:19:45.888114302 UTC ,
| | | | E | | | | | |  finish = 2025-09-03 12:19:47.061107588 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | | |  113", 3, False)}
| | | | E | | | | | |  
| | | | | S | | | | |  
| | | | |   | E | | |  
| | | | | F |   | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F |   | | |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | F |   | | |  = 40} , self = 74 , parent = Nothing , duration = 0.185875132000 , status
| | | | | F |   | | |  = Fail , start = 2025-09-03 12:19:46.002920574 UTC , finish = 2025-09-03
| | | | | F |   | | |  12:19:46.188795706 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | | F |   | | |  
| F | | | | |   | | |  
|   F | | | |   | | |  
| F   | | | |   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F   | | | |   | | |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| F   | | | |   | | |  = 40} , self = 75 , parent = Nothing , duration = 0.233315139000 , status
| F   | | | |   | | |  = Fail , start = 2025-09-03 12:19:46.015508853 UTC , finish = 2025-09-03
| F   | | | |   | | |  12:19:46.248823992 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| F   | | | |   | | |  
| |   | | | |   | | F  
| | S | | | |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |   | |    = 11 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 ,
| | S | | | |   | |    alphabet_size = 5 , total_length = 110} , self = 84 , parent = Nothing
| | S | | | |   | |    , duration = 0.650979335000 , status = Success , start = 2025-09-03 12:19:46.078540596
| | S | | | |   | |    UTC , finish = 2025-09-03 12:19:46.729519931 UTC , thread_cap_info = ("ThreadId
| | S | | | |   | |    130", 3, False)}
| | S | | | |   | |    
| | | | | | |   | F    
| | | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | E |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size
| | | | | | | E |      = 5 , total_length = 110} , self = 87 , parent = Nothing , duration = 0.650279972000
| | | | | | | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:46.107536561
| | | | | | | E |      UTC , finish = 2025-09-03 12:19:46.757816533 UTC , thread_cap_info = ("ThreadId
| | | | | | | E |      131", 1, False)}
| | | | | | | E |      
F | | | | | | | |      
  | | | | | | | F      
S | | | | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | |        = 11 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 ,
S | | | | | | |        alphabet_size = 5 , total_length = 110} , self = 93 , parent = Nothing
S | | | | | | |        , duration = 0.779390422000 , status = Success , start = 2025-09-03 12:19:46.170230798
S | | | | | | |        UTC , finish = 2025-09-03 12:19:46.94962122 UTC , thread_cap_info = ("ThreadId
S | | | | | | |        132", 3, False)}
S | | | | | | |        
| | | | | F | |        
| | | | | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | E | |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 9 , alphabet_size
| | | | | E | |        = 5 , total_length = 110} , self = 95 , parent = Nothing , duration = 0.773370296000
| | | | | E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:46.189735919
| | | | | E | |        UTC , finish = 2025-09-03 12:19:46.963106215 UTC , thread_cap_info = ("ThreadId
| | | | | E | |        133", 3, False)}
| | | | | E | |        
| | | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F      = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | | F      = 3 , total_length = 40} , self = 92 , parent = Nothing , duration = 0.598820040000
| | | | | | | | F      , status = Fail , start = 2025-09-03 12:19:46.208310986 UTC , finish =
| | | | | | | | F      2025-09-03 12:19:46.807131026 UTC , thread_cap_info = ("ThreadId 134",
| | | | | | | | F      2, False)}
| | | | | | | | F      
| F | | | | | | |      
|   | | | | S | |      
| S | | | |   | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | |   | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | |   | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | |   | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | |   | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | |   | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S | | | |   | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| S | | | |   | |      = 3 , total_length = 40} , self = 100 , parent = Nothing , duration = 0.788988194000
| S | | | |   | |      , status = Success , start = 2025-09-03 12:19:46.26840559 UTC , finish
| S | | | |   | |      = 2025-09-03 12:19:47.057393784 UTC , thread_cap_info = ("ThreadId 135",
| S | | | |   | |      2, False)}
| S | | | |   | |      
| | | E | |   | |      
| | | F | |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F | |   | |      = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | F | |   | |      = 48} , self = 83 , parent = Nothing , duration = 0.129249655000 , status
| | | F | |   | |      = Fail , start = 2025-09-03 12:19:46.527158232 UTC , finish = 2025-09-03
| | | F | |   | |      12:19:46.656407887 UTC , thread_cap_info = ("ThreadId 140", 0, False)}
| | | F | |   | |      
| | | | | | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F | |      = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | F | |      = 48} , self = 86 , parent = Nothing , duration = 0.225502966000 , status
| | | | | | F | |      = Fail , start = 2025-09-03 12:19:46.532313492 UTC , finish = 2025-09-03
| | | | | | F | |      12:19:46.757816458 UTC , thread_cap_info = ("ThreadId 141", 0, False)}
| | | | | | F | |      
| | | F | | | | |      
| | S   | | | | |      
| |     | | F | |      
| |     | |   E |      
| |     | |     F      
| | E   | |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E   | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E   | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E   | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E   | |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | E   | |            = 3 , total_length = 40} , self = 102 , parent = Nothing , duration = 0.250455426000
| | E   | |            , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:46.807162097
| | E   | |            UTC , finish = 2025-09-03 12:19:47.057617523 UTC , thread_cap_info = ("ThreadId
| | E   | |            158", 2, False)}
| | E   | |            
S | |   | |            
  | |   | E            
  S |   |              
    E   |              
        E              
