last 2101 length 8761
CNF 2101 vars 8761 clauses
last 2048 length 8544
CNF 2048 vars 8544 clauses
last 4690 length 18939
CNF 4690 vars 18939 clauses
last 767 length 2998
CNF 767 vars 2998 clauses
last 626 length 2456
CNF 626 vars 2456 clauses
last 7952 length 32385
CNF 7952 vars 32385 clauses
last 754 length 2935
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2619, clauses: 9731
CNF 754 vars 2935 clauses
last 559 length 2185
last 5063 length 21038
last 6974 length 28833
last 2619 length 9731
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6744, clauses: 28023
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11848, clauses: 47509
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2297, clauses: 8541
CNF 559 vars 2185 clauses
CNF 5063 vars 21038 clauses
CNF 6974 vars 28833 clauses
CNF 2619 vars 9731 clauses
last 6744 length 28023
last 11848 length 47509
last 2297 length 8541
CNF 6744 vars 28023 clauses
CNF 11848 vars 47509 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2619, clauses: 9731, status: Satisfied, time: 0.441978601s
CNF 2297 vars 8541 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6113, clauses: 25360
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30064, clauses: 126493
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9963, clauses: 39560
last 639 length 2541
last 643 length 2567
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2297, clauses: 8541, status: Satisfied, time: 0.429696597s
last 6113 length 25360
last 30064 length 126493
last 9963 length 39560
CNF 643 vars 2567 clauses
CNF 639 vars 2541 clauses
CNF 9963 vars 39560 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11848, clauses: 47509, status: Satisfied, time: 0.561514884s
last 684 length 2670
CNF 30064 vars 126493 clauses
last 531 length 2091
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28118, clauses: 118225
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2398, clauses: 8767
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9963, clauses: 39560, status: Satisfied, time: 0.250409961s
last 28118 length 118225
last 2398 length 8767
CNF 531 vars 2091 clauses
CNF 684 vars 2670 clauses
**************************************************CNF 2398 vars 8767 clauses

summary
**************************************************
SRS with 3 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 12 rules on 4 letters       DP
SRS with 36 strict rules and 12 weak rules on 8 letters       EDG
SRS with 36 strict rules and 12 weak rules on 8 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 12 weak rules on 8 letters       weights
SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a] -> [b, b, a] {- Input 0 -}
  [b, b, b] -> [b, a] {- Input 1 -}
  [b, b] -> [a, a, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, a]] -> [ [a, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, a], [a, b]] -> [ [a, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, a]] -> [ [b, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b]] -> [ [b, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, a]] -> [ [a, a] , [a, a] , [a, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b], [b, b]] -> [ [a, a] , [a, a] , [a, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, b], [b, b], [b, a]] -> [ [b, a] , [a, a] , [a, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b], [b, b]] -> [ [b, a] , [a, a] , [a, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, a]] ->= [ [b, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a]] ->= [ [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, b]] ->= [ [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a]] ->= [ [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a]] |-> [ [b, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, b]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, b], [b, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a]] |-> [ [b, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a]] |-> [ [b, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a]] |-> [ [b, a]# , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, b], [b, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, b], [b, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, b]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, a]] ->= [ [b, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a]] ->= [ [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, b]] ->= [ [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a]] ->= [ [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 6A 6A - \
        | 3A 3A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 6A 6A 7A - \
        | 6A 6A 7A - |
        | 6A 6A 7A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 9A 11A 11A - \
        | 9A 11A 11A - |
        | 9A 11A 11A - |
        \ -  -   -   - / )
  ( [b, a]#
  , Wk  / 8A 9A 10A - \
        | 8A 9A 10A - |
        | 8A 9A 10A - |
        \ -  -  -   - / )
  ( [b, b]#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, a]] ->= [ [b, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a]] ->= [ [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, b]] ->= [ [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a]] ->= [ [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 0/1)
  ([b, a]#, 0/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, a]] ->= [ [b, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a]] ->= [ [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, b]] ->= [ [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a]] ->= [ [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  EDG

**************************************************
skeleton: (3,2)\TileAllAll{2}(12,4)\Deepee\EDG(36/12,8)\Matrix{\Arctic}{3}(3/12,8)\Weight(0/12,4)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2398, clauses: 8767, status: Satisfied, time: 0.041814883s
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6650, clauses: 27665
last 6650 length 27665
CNF 6650 vars 27665 clauses
CNF 28118 vars 118225 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.522339057000
  min duration 0.028683671000
  total durat. 1.288021367000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.478767435000
  min duration 0.039301209000
  total durat. 1.337401177000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.022260467000
  min duration 0.346169964000
  total durat. 2.071302783000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 36
      , num_top_rules = 36
      , num_weak_rules = 12
      , alphabet_size = 8
      , total_length = 308}
    , self = 83
    , parent = Nothing
    , duration = 1.022260467000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:22.195159577 UTC
    , finish = 2025-09-03 10:45:23.217420044 UTC
    , thread_cap_info = ("ThreadId 111", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.026971392000
  min duration 0.523996156000
  total durat. 2.962917893000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 36
      , num_top_rules = 36
      , num_weak_rules = 12
      , alphabet_size = 8
      , total_length = 308}
    , self = 81
    , parent = Nothing
    , duration = 1.026971392000
    , status = Success
    , start = 2025-09-03 10:45:22.154730243 UTC
    , finish = 2025-09-03 10:45:23.181701635 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.278335016000
  min duration 1.278335016000
  total durat. 1.278335016000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 86
    , parent = Nothing
    , duration = 1.278335016000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:21.942687472 UTC
    , finish = 2025-09-03 10:45:23.221022488 UTC
    , thread_cap_info = ("ThreadId 43", 3, False)}
**************************************************
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                  = 16} , self = 86 , parent = Nothing , duration = 1.278335016000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 10:45:21.942687472 UTC ,
E                  finish = 2025-09-03 10:45:23.221022488 UTC , thread_cap_info = ("ThreadId
E                  43", 3, False)}
E                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| F                = 36 , num_top_rules = 36 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| F                = 308} , self = 60 , parent = Nothing , duration = 0.231532440000 , status
| F                = Fail , start = 2025-09-03 10:45:21.958504274 UTC , finish = 2025-09-03
| F                10:45:22.190036714 UTC , thread_cap_info = ("ThreadId 76", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | F              = 36 , num_top_rules = 36 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | F              = 308} , self = 54 , parent = Nothing , duration = 0.121887820000 , status
| | F              = Fail , start = 2025-09-03 10:45:21.974727269 UTC , finish = 2025-09-03
| | F              10:45:22.096615089 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | | F            = 26 , num_top_rules = 26 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | F            = 246} , self = 64 , parent = Nothing , duration = 0.522339057000 , status
| | | F            = Fail , start = 2025-09-03 10:45:22.015209808 UTC , finish = 2025-09-03
| | | F            10:45:22.537548865 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | | | F          = 26 , num_top_rules = 26 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | F          = 246} , self = 63 , parent = Nothing , duration = 0.478767435000 , status
| | | | F          = Fail , start = 2025-09-03 10:45:22.058658253 UTC , finish = 2025-09-03
| | | | F          10:45:22.537425688 UTC , thread_cap_info = ("ThreadId 95", 2, False)}
| | | | F          
| | F | |          
| | F | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F | |          = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F | |          = 39} , self = 61 , parent = Nothing , duration = 0.282599510000 , status
| | F | |          = Fail , start = 2025-09-03 10:45:22.154080733 UTC , finish = 2025-09-03
| | F | |          10:45:22.436680243 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | F | |          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F        = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F        = 39} , self = 62 , parent = Nothing , duration = 0.380870034000 , status
| | | | | F        = Fail , start = 2025-09-03 10:45:22.154085737 UTC , finish = 2025-09-03
| | | | | F        10:45:22.534955771 UTC , thread_cap_info = ("ThreadId 107", 3, False)}
| | | | | F        
| | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S      = 48 , num_strict_rules = 36 , num_top_rules = 36 , num_weak_rules = 12
| | | | | | S      , alphabet_size = 8 , total_length = 308} , self = 81 , parent = Nothing
| | | | | | S      , duration = 1.026971392000 , status = Success , start = 2025-09-03 10:45:22.154730243
| | | | | | S      UTC , finish = 2025-09-03 10:45:23.181701635 UTC , thread_cap_info = ("ThreadId
| | | | | | S      109", 2, False)}
| | | | | | S      
| | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S    = 9 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| | | | | | | S    = 4 , total_length = 43} , self = 65 , parent = Nothing , duration = 0.724230040000
| | | | | | | S    , status = Success , start = 2025-09-03 10:45:22.175044669 UTC , finish
| | | | | | | S    = 2025-09-03 10:45:22.899274709 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | S    3, False)}
| | | | | | | S    
| F | | | | | |    
| E | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 48
| E | | | | | |    , num_strict_rules = 36 , num_top_rules = 36 , num_weak_rules = 12 , alphabet_size
| E | | | | | |    = 8 , total_length = 308} , self = 83 , parent = Nothing , duration = 1.022260467000
| E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.195159577
| E | | | | | |    UTC , finish = 2025-09-03 10:45:23.217420044 UTC , thread_cap_info = ("ThreadId
| E | | | | | |    111", 2, False)}
| E | | | | | |    
| | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | E  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| | | | | | | | E  = 4 , total_length = 43} , self = 67 , parent = Nothing , duration = 0.702872352000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.212536235
| | | | | | | | E  UTC , finish = 2025-09-03 10:45:22.915408587 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  113", 3, False)}
| | | | | | | | E  
| | F | | | | | |  
| | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | | |  = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | S | | | | | |  = 4 , total_length = 39} , self = 72 , parent = Nothing , duration = 0.523996156000
| | S | | | | | |  , status = Success , start = 2025-09-03 10:45:22.43670542 UTC , finish
| | S | | | | | |  = 2025-09-03 10:45:22.960701576 UTC , thread_cap_info = ("ThreadId 114",
| | S | | | | | |  3, False)}
| | S | | | | | |  
| | | | | F | | |  
| | | | F   | | |  
| | | F     | | |  
| | | S     | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S     | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S     | | |  = 38 , num_strict_rules = 26 , num_top_rules = 26 , num_weak_rules = 12
| | | S     | | |  , alphabet_size = 8 , total_length = 246} , self = 87 , parent = Nothing
| | | S     | | |  , duration = 0.687720305000 , status = Success , start = 2025-09-03 10:45:22.537594355
| | | S     | | |  UTC , finish = 2025-09-03 10:45:23.22531466 UTC , thread_cap_info = ("ThreadId
| | | S     | | |  119", 2, False)}
| | | S     | | |  
| | | | E   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | E   | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | E   | | |  = 4 , total_length = 39} , self = 74 , parent = Nothing , duration = 0.346169964000
| | | | E   | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.614729363
| | | | E   | | |  UTC , finish = 2025-09-03 10:45:22.960899327 UTC , thread_cap_info = ("ThreadId
| | | | E   | | |  121", 3, False)}
| | | | E   | | |  
| | | | |   | S |  
| | | | |   |   E  
| | | | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F |      = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F |      = 36} , self = 80 , parent = Nothing , duration = 0.263037247000 , status
| | | | | F |      = Fail , start = 2025-09-03 10:45:22.915839105 UTC , finish = 2025-09-03
| | | | | F |      10:45:23.178876352 UTC , thread_cap_info = ("ThreadId 130", 3, False)}
| | | | | F |      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | F    = 36} , self = 79 , parent = Nothing , duration = 0.154650405000 , status
| | | | | | | F    = Fail , start = 2025-09-03 10:45:22.921973152 UTC , finish = 2025-09-03
| | | | | | | F    10:45:23.076623557 UTC , thread_cap_info = ("ThreadId 129", 3, False)}
| | | | | | | F    
| | S | | | | |    
| |   | E | | |    
| |   |   | | F    
| |   |   F |      
| |   |     S      
| E   |            
E     |            
      S            
