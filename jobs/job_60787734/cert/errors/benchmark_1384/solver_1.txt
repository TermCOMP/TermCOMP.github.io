last 3769 length 22732
CNF 3769 vars 22732 clauses
last 3191 length 14542
CNF 3191 vars 14542 clauses
last 636 length 2558
CNF 636 vars 2558 clauses
last 631 length 2573
CNF 631 vars 2573 clauses
last 3629 length 15839
last 3925 length 19059
last 2784 length 14573
CNF 3629 vars 15839 clauses
CNF 2784 vars 14573 clauses
CNF 3925 vars 19059 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2399, clauses: 8556
last 2399 length 8556
last 3210 length 20575
CNF 3210 vars 20575 clauses
CNF 2399 vars 8556 clauses
last 659 length 2856
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7516, clauses: 27778
last 1339 length 6672
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7399, clauses: 27850
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8220, clauses: 34245
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2399, clauses: 8556, status: Unsatisfied, time: 0.261447764s
CNF 659 vars 2856 clauses
last 7516 length 27778
CNF 1339 vars 6672 clauses
last 7399 length 27850
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24636, clauses: 102822
last 8220 length 34245
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24046, clauses: 100396
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5123, clauses: 20668
CNF 7516 vars 27778 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2603, clauses: 9342
CNF 7399 vars 27850 clauses
last 24636 length 102822
CNF 8220 vars 34245 clauses
last 24046 length 100396
last 5123 length 20668
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9100, clauses: 37995
last 2603 length 9342
last 9100 length 37995
CNF 5123 vars 20668 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8220, clauses: 34245, status: Satisfied, time: 0.221532956s
CNF 24636 vars 102822 clauses
CNF 2603 vars 9342 clauses
CNF 24046 vars 100396 clauses
CNF 9100 vars 37995 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7399, clauses: 27850, status: Satisfied, time: 0.544011691s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2603, clauses: 9342, status: Unsatisfied, time: 0.356167442s
last 590 length 2388
CNF 590 vars 2388 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9100, clauses: 37995, status: Satisfied, time: 0.360963855s
last 624 length 2552
**************************************************
CNF 624 vars 2552 clauses
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       weights
SRS with 18 rules on 9 letters       mirror
SRS with 18 rules on 9 letters       DP
SRS with 23 strict rules and 18 weak rules on 15 letters       weights
SRS with 12 strict rules and 18 weak rules on 14 letters       EDG
4 sub-proofs
  1 SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  3 SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  4 SRS with 9 strict rules and 18 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 18 weak rules on 10 letters       EDG
  SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [b, c, c, b, a, a] {- Input 1 -}
  [b, c] -> [] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, c], [c, a]] -> [ [a, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, c], [c, b]] -> [ [a, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, c], [c, c]] -> [ [a, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, c], [c, a]] -> [ [b, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, c], [c, b]] -> [ [b, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, c], [c, c]] -> [ [b, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, c], [c, a]] -> [ [c, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, c], [c, b]] -> [ [c, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, c], [c, c]] -> [ [c, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, c], [c, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 1/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[a, a], [a, c], [c, b]] -> [ [a, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, c], [c, c]] -> [ [a, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, c], [c, b]] -> [ [b, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, c], [c, c]] -> [ [b, b] , [b, c] , [c, c] , [c, b] , [b, a] , [a, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[a, b], [b, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [a, a]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, b], [a, b], [a, a]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, c], [a, b], [a, a]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [b, a]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b], [a, b], [b, a]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, c], [a, b], [b, a]] -> [ [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [c, a]] -> [ [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, b], [a, c], [a, a]] -> [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[c, c], [a, c], [a, a]] -> [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, b], [a, c], [b, a]] -> [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[c, c], [a, c], [b, a]] -> [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [a, b]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, c], [b, c], [a, b]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, b], [b, c], [b, b]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[c, c], [b, c], [b, b]] -> [ [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [b, c], [c, b]] -> [ [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, b], [b, c], [c, b]] -> [ [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [b, c], [c, b]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[c, a]#, [b, c], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [c, c]# , [b, c] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [c, c]# , [b, c] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [c, c]# , [b, c] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [c, c]# , [b, c] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [b, c], [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([b, a]#, 0/1)
  ([b, b]#, 0/1)
  ([b, c]#, 0/1)
  ([c, a]#, 0/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24636, clauses: 102822, status: Satisfied, time: 0.536455192s

  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[c, a]#, [b, c], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [c, c]# , [b, c] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [c, c]# , [b, c] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [c, c]# , [b, c] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [c, c]# , [b, c] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([b, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[c, a]#, [b, c], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[c, a]#, [b, c], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
reason
  ([b, c], 1/1)
  ([c, b], 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[c, b]#, [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [a, a]] |-> [ [c, c]# , [b, c] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, b]#, [a, c], [b, a]] |-> [ [c, c]# , [b, c] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c]#, [a, c], [a, a]] |-> [ [c, c]# , [b, c] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [b, c] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [a, c], [b, a]] |-> [ [c, c]# , [b, c] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]#
  , Wk  / 15A 15A 18A - \
        | 15A 15A 18A - |
        | 15A 15A 18A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 15A 16A 17A - \
        | 15A 16A 17A - |
        | 15A 16A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[b, a], [a, b], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[c, c], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [b, a] , [c, b] , [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[c, b], [b, c], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, b], [b, c], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[c, a], [b, c], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [b, c], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([b, c], 1/1)
  ([c, b], 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Weight\Mirror(18,9)\Deepee(23/18,15)\Weight(12/18,14)\EDG[(1/18,10)\Usable(1,3)\Weight(0,0)\EDG[],(1/18,10)\Usable(1,3)\Weight(0,0)\EDG[],(1/18,10)\Usable(1,3)\Weight(0,0)\EDG[],(9/18,11)\Matrix{\Arctic}{3}\EDG(1/18,10)\Usable(1,3)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5641, clauses: 22864
last 5641 length 22864
CNF 5641 vars 22864 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.521710893000
  min duration 0.081039409000
  total durat. 1.055595867000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.553771644000
  min duration 0.021826526000
  total durat. 1.004450255000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.052696667000
  min duration 1.052696667000
  total durat. 1.052696667000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 18
      , alphabet_size = 11
      , total_length = 152}
    , self = 84
    , parent = Nothing
    , duration = 1.052696667000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:44:48.787035309 UTC
    , finish = 2025-09-03 11:44:49.839731976 UTC
    , thread_cap_info = ("ThreadId 112", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.056664267000
  min duration 1.056664267000
  total durat. 1.056664267000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 18
      , alphabet_size = 11
      , total_length = 152}
    , self = 80
    , parent = Nothing
    , duration = 1.056664267000
    , status = Success
    , start = 2025-09-03 11:44:48.735185254 UTC
    , finish = 2025-09-03 11:44:49.791849521 UTC
    , thread_cap_info = ("ThreadId 104", 3, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                = 12} , self = 70 , parent = Nothing , duration = 0.381131546000 , status
F                = Fail , start = 2025-09-03 11:44:48.587934813 UTC , finish = 2025-09-03
F                11:44:48.969066359 UTC , thread_cap_info = ("ThreadId 36", 2, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F              = 9 , num_top_rules = 9 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| F              = 144} , self = 65 , parent = Nothing , duration = 0.185532534000 , status
| F              = Fail , start = 2025-09-03 11:44:48.605424609 UTC , finish = 2025-09-03
| F              11:44:48.790957143 UTC , thread_cap_info = ("ThreadId 63", 3, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F            = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 96} , self = 66 , parent = Nothing , duration = 0.145433162000 , status
| | F            = Fail , start = 2025-09-03 11:44:48.645525269 UTC , finish = 2025-09-03
| | F            11:44:48.790958431 UTC , thread_cap_info = ("ThreadId 87", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F          = 9 , num_top_rules = 9 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | F          = 152} , self = 63 , parent = Nothing , duration = 0.121879869000 , status
| | | F          = Fail , start = 2025-09-03 11:44:48.645525763 UTC , finish = 2025-09-03
| | | F          11:44:48.767405632 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | F        = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F        = 96} , self = 69 , parent = Nothing , duration = 0.281416463000 , status
| | | | F        = Fail , start = 2025-09-03 11:44:48.666688046 UTC , finish = 2025-09-03
| | | | F        11:44:48.948104509 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| | | | F        
| | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S      = 27 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 18 ,
| | | | | S      alphabet_size = 11 , total_length = 152} , self = 80 , parent = Nothing
| | | | | S      , duration = 1.056664267000 , status = Success , start = 2025-09-03 11:44:48.735185254
| | | | | S      UTC , finish = 2025-09-03 11:44:49.791849521 UTC , thread_cap_info = ("ThreadId
| | | | | S      104", 3, False)}
| | | | | S      
| | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | F    = 4 , total_length = 39} , self = 71 , parent = Nothing , duration = 0.512000553000
| | | | | | F    , status = Fail , start = 2025-09-03 11:44:48.765506795 UTC , finish =
| | | | | | F    2025-09-03 11:44:49.277507348 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | F    1, False)}
| | | | | | F    
| | | F | | |    
| | | F | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F | | |    = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | F | | |    = 41} , self = 72 , parent = Nothing , duration = 0.521710893000 , status
| | | F | | |    = Fail , start = 2025-09-03 11:44:48.786873158 UTC , finish = 2025-09-03
| | | F | | |    11:44:49.308584051 UTC , thread_cap_info = ("ThreadId 110", 1, False)}
| | | F | | |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| | | | | | | E  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 18 , alphabet_size
| | | | | | | E  = 11 , total_length = 152} , self = 84 , parent = Nothing , duration =
| | | | | | | E  1.052696667000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:44:48.787035309 UTC , finish = 2025-09-03 11:44:49.839731976 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 112", 3, False)}
| | | | | | | E  
| F | | | | | |  
|   F | | | | |  
| F   | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F   | | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| F   | | | | |  = 41} , self = 73 , parent = Nothing , duration = 0.553771644000 , status
| F   | | | | |  = Fail , start = 2025-09-03 11:44:48.790981721 UTC , finish = 2025-09-03
| F   | | | | |  11:44:49.344753365 UTC , thread_cap_info = ("ThreadId 111", 1, False)}
| F   | | | | |  
| | S | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | S | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | S | | | | |  = 4 , total_length = 39} , self = 74 , parent = Nothing , duration = 0.904457459000
| | S | | | | |  , status = Success , start = 2025-09-03 11:44:48.825812967 UTC , finish
| | S | | | | |  = 2025-09-03 11:44:49.730270426 UTC , thread_cap_info = ("ThreadId 117",
| | S | | | | |  1, False)}
| | S | | | | |  
| | | | F | | |  
F | | |   | | |  
E | | |   | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | |   | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | |   | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | |   | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | |   | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | |   | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | |   | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | |   | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | |   | | |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E | | |   | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E | | |   | | |  = 12} , self = 89 , parent = Nothing , duration = 0.897931600000 , status
E | | |   | | |  = Except "AsyncCancelled" , start = 2025-09-03 11:44:48.969092873 UTC ,
E | | |   | | |  finish = 2025-09-03 11:44:49.867024473 UTC , thread_cap_info = ("ThreadId
E | | |   | | |  121", 2, False)}
E | | |   | | |  
| | | |   | F |  
| | | | E |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | E |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | E |   |  = 4 , total_length = 39} , self = 76 , parent = Nothing , duration = 0.455856243000
| | | | E |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:44:49.277552897
| | | | E |   |  UTC , finish = 2025-09-03 11:44:49.73340914 UTC , thread_cap_info = ("ThreadId
| | | | E |   |  125", 1, False)}
| | | | E |   |  
| | | F | |   |  
| | | F | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |   |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | F | |   |  = 4 , total_length = 41} , self = 81 , parent = Nothing , duration = 0.480635113000
| | | F | |   |  , status = Fail , start = 2025-09-03 11:44:49.311286172 UTC , finish =
| | | F | |   |  2025-09-03 11:44:49.791921285 UTC , thread_cap_info = ("ThreadId 126",
| | | F | |   |  1, False)}
| | | F | |   |  
| F | | | |   |  
|   S | | |   |  
|     | E |   |  
|     |   S   |  
|     F       |  
|             E  
E                
