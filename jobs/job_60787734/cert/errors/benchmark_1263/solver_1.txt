last 3897 length 17594
CNF 3897 vars 17594 clauses
last 4248 length 20856
CNF 4248 vars 20856 clauses
last 594 length 2437
CNF 594 vars 2437 clauses
last 520 length 2269
CNF 520 vars 2269 clauses
last 434 length 1821
last 447 length 1840
CNF 434 vars 1821 clauses
CNF 447 vars 1840 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1686, clauses: 6191
last 1686 length 6191
last 14693 length 83183
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1466, clauses: 5244
CNF 14693 vars 83183 clauses
CNF 1686 vars 6191 clauses
last 16039 length 97493
last 22715 length 110028
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4296, clauses: 17603
last 1466 length 5244
last 20976 length 98526
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 16181
CNF 16039 vars 97493 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1686, clauses: 6191, status: Unsatisfied, time: 0.404540631s
last 4296 length 17603
CNF 1466 vars 5244 clauses
CNF 22715 vars 110028 clauses
last 3956 length 16181
CNF 20976 vars 98526 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19502, clauses: 81042
CNF 4296 vars 17603 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1466, clauses: 5244, status: Unsatisfied, time: 0.607171451s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2708, clauses: 10840
CNF 3956 vars 16181 clauses
last 19502 length 81042
last 2708 length 10840
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4296, clauses: 17603, status: Satisfied, time: 0.801562231s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2459, clauses: 9844
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 16181, status: Unsatisfied, time: 1.001134833s
CNF 19502 vars 81042 clauses
last 2459 length 9844
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       DP
SRS with 5 strict rules and 3 weak rules on 5 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 4 letters       EDG
SRS with 1 strict rules and 3 weak rules on 4 letters       Usable
SRS with 1 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b, c] -> [c, a, c, a, a] {- Input 1 -}
  [c] -> [b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c] ->= [b] {- DP Nontop (Input 2) -}
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, c] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, b, c] |-> [a#, c, a, a] {- DP (Top 1) (Input 1) -}
  [a#, b, c] |-> [c#, a, a] {- DP (Top 2) (Input 1) -}
  [a#, b, c] |-> [c#, a, c, a, a] {- DP (Top 0) (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c] ->= [b] {- DP Nontop (Input 2) -}
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, c] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, b, c] |-> [a#, c, a, a] {- DP (Top 1) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, c] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, b, c] |-> [a#, c, a, a] {- DP (Top 1) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c] ->= [b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -1A 1A 1A \
        | -1A -  0A |
        \ -   -  0A / )
  ( b
  , Wk  / -1A - 1A \
        | -1A - 0A |
        \ -   - 0A / )
  ( c
  , Wk  / 1A  1A  2A \
        | -1A -1A 0A |
        \ -   -   0A / )
  ( a#
  , Wk  / - 1A 1A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c] ->= [b] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c] ->= [b] {- DP Nontop (Input 2) -}
reason
  remove un-usable
    SRS
      [a] ->= [b] {- DP Nontop (Input 0) -}
      [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
      [c] ->= [b] {- DP Nontop (Input 2) -}
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
reason
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\Deepee(5/3,5)\Weight\EDG(3/3,4)\Matrix{\ArcticBZ}{3}\EDG(1/3,4)\Usable(1,3)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 2459 vars 9844 clauses

Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19391, clauses: 80070
Faillast 19391 length 80070
 : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.481455405000
  min duration 0.046703598000
  total durat. 3.183224465000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 90
      , num_strict_rules = 63
      , num_top_rules = 63
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 588}
    , self = 64
    , parent = Nothing
    , duration = 1.466258539000
    , status = Fail
    , start = 2025-09-03 11:24:33.17708307 UTC
    , finish = 2025-09-03 11:24:34.643341609 UTC
    , thread_cap_info = ("ThreadId 78", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 90
      , num_strict_rules = 63
      , num_top_rules = 63
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 588}
    , self = 65
    , parent = Nothing
    , duration = 1.481455405000
    , status = Fail
    , start = 2025-09-03 11:24:33.206188265 UTC
    , finish = 2025-09-03 11:24:34.68764367 UTC
    , thread_cap_info = ("ThreadId 80", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.363652125000
  min duration 0.085295481000
  total durat. 2.580235441000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 90
      , num_strict_rules = 63
      , num_top_rules = 63
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 588}
    , self = 63
    , parent = Nothing
    , duration = 1.363652125000
    , status = Fail
    , start = 2025-09-03 11:24:33.225024933 UTC
    , finish = 2025-09-03 11:24:34.588677058 UTC
    , thread_cap_info = ("ThreadId 81", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.503243477000
  min duration 1.503243477000
  total durat. 1.503243477000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 28}
    , self = 67
    , parent = Nothing
    , duration = 1.503243477000
    , status = Success
    , start = 2025-09-03 11:24:33.74569045 UTC
    , finish = 2025-09-03 11:24:35.248933927 UTC
    , thread_cap_info = ("ThreadId 110", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.574383282000
  min duration 1.574383282000
  total durat. 1.574383282000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 22}
    , self = 74
    , parent = Nothing
    , duration = 1.574383282000
    , status = Fail
    , start = 2025-09-03 11:24:33.930572593 UTC
    , finish = 2025-09-03 11:24:35.504955875 UTC
    , thread_cap_info = ("ThreadId 114", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.098813361000
  min duration 0.820291027000
  total durat. 1.919104388000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 22}
    , self = 66
    , parent = Nothing
    , duration = 1.098813361000
    , status = Fail
    , start = 2025-09-03 11:24:33.846685919 UTC
    , finish = 2025-09-03 11:24:34.94549928 UTC
    , thread_cap_info = ("ThreadId 112", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.057392044000
  min duration 1.057392044000
  total durat. 1.057392044000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 61
    , parent = Nothing
    , duration = 1.057392044000
    , status = Fail
    , start = 2025-09-03 11:24:33.132346526 UTC
    , finish = 2025-09-03 11:24:34.18973857 UTC
    , thread_cap_info = ("ThreadId 34", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 2.372661961000
  min duration 2.372661961000
  total durat. 2.372661961000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 75
    , parent = Nothing
    , duration = 2.372661961000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:24:33.13235368 UTC
    , finish = 2025-09-03 11:24:35.505015641 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                    = 12} , self = 61 , parent = Nothing , duration = 1.057392044000 , status
F                    = Fail , start = 2025-09-03 11:24:33.132346526 UTC , finish = 2025-09-03
F                    11:24:34.18973857 UTC , thread_cap_info = ("ThreadId 34", 0, False)}
F                    
| E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                  = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
| E                  = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
| E                  = 75 , parent = Nothing , duration = 2.372661961000 , status = Except "AsyncCancelled"
| E                  , start = 2025-09-03 11:24:33.13235368 UTC , finish = 2025-09-03 11:24:35.505015641
| E                  UTC , thread_cap_info = ("ThreadId 22", 3, False)}
| E                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 162} , self = 42 , parent = Nothing , duration = 0.131255741000 , status
| | F                = Fail , start = 2025-09-03 11:24:33.138208932 UTC , finish = 2025-09-03
| | F                11:24:33.269464673 UTC , thread_cap_info = ("ThreadId 66", 1, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F              = 162} , self = 41 , parent = Nothing , duration = 0.112206893000 , status
| | | F              = Fail , start = 2025-09-03 11:24:33.144952631 UTC , finish = 2025-09-03
| | | F              11:24:33.257159524 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | F            = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | F            total_length = 588} , self = 64 , parent = Nothing , duration = 1.466258539000
| | | | F            , status = Fail , start = 2025-09-03 11:24:33.17708307 UTC , finish = 2025-09-03
| | | | F            11:24:34.643341609 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | | F          = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | F          total_length = 588} , self = 60 , parent = Nothing , duration = 0.921677811000
| | | | | F          , status = Fail , start = 2025-09-03 11:24:33.185329623 UTC , finish =
| | | | | F          2025-09-03 11:24:34.107007434 UTC , thread_cap_info = ("ThreadId 79", 2,
| | | | | F          False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | | | F        = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | F        total_length = 588} , self = 65 , parent = Nothing , duration = 1.481455405000
| | | | | | F        , status = Fail , start = 2025-09-03 11:24:33.206188265 UTC , finish =
| | | | | | F        2025-09-03 11:24:34.68764367 UTC , thread_cap_info = ("ThreadId 80", 2,
| | | | | | F        False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | | | | F      = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | F      total_length = 588} , self = 63 , parent = Nothing , duration = 1.363652125000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:24:33.225024933 UTC , finish =
| | | | | | | F      2025-09-03 11:24:34.588677058 UTC , thread_cap_info = ("ThreadId 81", 2,
| | | | | | | F      False)}
| | | | | | | F      
| | | F | | | |      
| | F   | | | |      
| | F   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | | | |      = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F   | | | |      = 4 , total_length = 28} , self = 62 , parent = Nothing , duration = 0.820291027000
| | F   | | | |      , status = Fail , start = 2025-09-03 11:24:33.724995168 UTC , finish =
| | F   | | | |      2025-09-03 11:24:34.545286195 UTC , thread_cap_info = ("ThreadId 108",
| | F   | | | |      3, False)}
| | F   | | | |      
| | | S | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | S | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | S | | | |      = 4 , total_length = 28} , self = 67 , parent = Nothing , duration = 1.503243477000
| | | S | | | |      , status = Success , start = 2025-09-03 11:24:33.74569045 UTC , finish
| | | S | | | |      = 2025-09-03 11:24:35.248933927 UTC , thread_cap_info = ("ThreadId 110",
| | | S | | | |      3, False)}
| | | S | | | |      
| | | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F    = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F    = 4 , total_length = 22} , self = 66 , parent = Nothing , duration = 1.098813361000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:24:33.846685919 UTC , finish =
| | | | | | | | F    2025-09-03 11:24:34.94549928 UTC , thread_cap_info = ("ThreadId 112", 3,
| | | | | | | | F    False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | F  = 4 , total_length = 22} , self = 74 , parent = Nothing , duration = 1.574383282000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:24:33.930572593 UTC , finish =
| | | | | | | | | F  2025-09-03 11:24:35.504955875 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| | | | | F | | | |  
F | | | |   | | | |  
  | F | |   | | | |  
E |   | |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |   | |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |   | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |   | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E |   | |   | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
E |   | |   | | | |  = 4 , total_length = 28} , self = 69 , parent = Nothing , duration = 0.840476150000
E |   | |   | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:24:34.553291518
E |   | |   | | | |  UTC , finish = 2025-09-03 11:24:35.393767668 UTC , thread_cap_info = ("ThreadId
E |   | |   | | | |  121", 3, False)}
E |   | |   | | | |  
| |   | |   | F | |  
| |   | F   |   | |  
| |   |     F   | |  
| |   |         F |  
| |   S           |  
E |               |  
  |               F  
  E                  
