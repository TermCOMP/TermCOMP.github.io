last 2099 length 9350
CNF 2099 vars 9350 clauses
last 1903 length 9302
CNF 1903 vars 9302 clauses
last 7715 length 37425
last 2249 length 12730
CNF 7715 vars 37425 clauses
last 1953 length 9979
CNF 2249 vars 12730 clauses
last 9248 length 44427
CNF 9248 vars 44427 clauses
CNF 1953 vars 9979 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5928, clauses: 22220
last 5928 length 22220
last 9260 length 46030
CNF 9260 vars 46030 clauses
CNF 5928 vars 22220 clauses
last 10586 length 56094
CNF 10586 vars 56094 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5069, clauses: 18756
last 5069 length 18756
CNF 5069 vars 18756 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5928, clauses: 22220, status: Satisfied, time: 0.478712304s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5069, clauses: 18756, status: Satisfied, time: 0.310057146s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13620, clauses: 55880
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17099, clauses: 62640
last 17099 length 62640
last 1095 length 4668
CNF 1095 vars 4668 clauses
CNF 17099 vars 62640 clauses
last 1792 length 9294
CNF 1792 vars 9294 clauses
last 2072 length 11904
last 1377 length 5893
CNF 2072 vars 11904 clauses
CNF 1377 vars 5893 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4861, clauses: 17533
last 4861 length 17533
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4463, clauses: 16437
last 4463 length 16437
CNF 4861 vars 17533 clauses
CNF 4463 vars 16437 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4861, clauses: 17533, status: Satisfied, time: 0.325659079s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4463, clauses: 16437, status: Satisfied, time: 0.351479291s
last 1061 length 4534
CNF 1061 vars 4534 clauses
last 1311 length 5641
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17099, clauses: 62640, status: Satisfied, time: 1.765131125s
CNF 1311 vars 5641 clauses
last 2046 length 11821
last 1748 length 9139
CNF 2046 vars 11821 clauses
CNF 1748 vars 9139 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4650, clauses: 16712
last 4650 length 16712
CNF 4650 vars 16712 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4252, clauses: 15601
last 4252 length 15601
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4650, clauses: 16712, status: Satisfied, time: 0.221898723s
CNF 4252 vars 15601 clauses
last 971 length 4293
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4252, clauses: 15601, status: Satisfied, time: 0.277282814s
CNF 971 vars 4293 clauses
last 1148 length 5218
CNF 1148 vars 5218 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3610, clauses: 12790
last 3610 length 12790
CNF 3610 vars 12790 clauses
last 1823 length 10510
CNF 1823 vars 10510 clauses
last 1536 length 8072
CNF 1536 vars 8072 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10660, clauses: 43650
last 10660 length 43650
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3610, clauses: 12790, status: Satisfied, time: 0.770261049s
CNF 10660 vars 43650 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4041, clauses: 14600
last 4041 length 14600
CNF 4041 vars 14600 clauses
last 9102 length 45277
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22307, clauses: 84210
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4041, clauses: 14600, status: Satisfied, time: 0.199878365s
last 10366 length 54953
last 22307 length 84210
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11629, clauses: 47719
CNF 9102 vars 45277 clauses

last 11629 length 47719
summaryCNF 10366 vars 54953 clauses
CNF 22307 vars 84210 clauses

**************************************************
SRS with 6 rules on 8 letters       DP
SRS with 15 strict rules and 6 weak rules on 13 letters       EDG
SRS with 15 strict rules and 6 weak rules on 13 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
CNF 11629 vars 47719 clauses
SRS with 10 strict rules and 6 weak rules on 13 letters       EDG
SRS with 10 strict rules and 6 weak rules on 13 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 9 strict rules and 6 weak rules on 13 letters       EDG
SRS with 9 strict rules and 6 weak rules on 13 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 6 weak rules on 12 letters       weights
SRS with 3 strict rules and 6 weak rules on 11 letters       EDG
SRS with 3 strict rules and 6 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 6 weak rules on 11 letters       weights
SRS with 0 strict rules and 6 weak rules on 8 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [t, o] -> [m, a] {- Input 0 -}
  [t, e] -> [n, s] {- Input 1 -}
  [a, l] -> [a, t] {- Input 2 -}
  [o, m, a] -> [t, e, n] {- Input 3 -}
  [s, a] -> [l, a, t, o, m, a, t, e] {- Input 4 -}
  [n, s] -> [a, l, a, t] {- Input 5 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
  [s#, a] |-> [t#, o, m, a, t, e] {- DP (Top 2) (Input 4) -}
  [s#, a] |-> [t#, e] {- DP (Top 6) (Input 4) -}
  [s#, a] |-> [a#, t, o, m, a, t, e] {- DP (Top 1) (Input 4) -}
  [s#, a] |-> [a#, t, e] {- DP (Top 5) (Input 4) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [t#, e] |-> [n#, s] {- DP (Top 0) (Input 1) -}
  [n#, s] |-> [t#] {- DP (Top 3) (Input 5) -}
  [n#, s] |-> [a#, t] {- DP (Top 2) (Input 5) -}
  [n#, s] |-> [a#, l, a, t] {- DP (Top 0) (Input 5) -}
  [a#, l] |-> [t#] {- DP (Top 1) (Input 2) -}
  [a#, l] |-> [a#, t] {- DP (Top 0) (Input 2) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [o#, m, a] |-> [n#] {- DP (Top 2) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, a] |-> [t#, o, m, a, t, e] {- DP (Top 2) (Input 4) -}
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [a#, l] |-> [t#] {- DP (Top 1) (Input 2) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [t#, e] {- DP (Top 6) (Input 4) -}
  [t#, e] |-> [n#, s] {- DP (Top 0) (Input 1) -}
  [n#, s] |-> [t#] {- DP (Top 3) (Input 5) -}
  [n#, s] |-> [a#, t] {- DP (Top 2) (Input 5) -}
  [a#, l] |-> [a#, t] {- DP (Top 0) (Input 2) -}
  [n#, s] |-> [a#, l, a, t] {- DP (Top 0) (Input 5) -}
  [s#, a] |-> [a#, t, o, m, a, t, e] {- DP (Top 1) (Input 4) -}
  [s#, a] |-> [a#, t, e] {- DP (Top 5) (Input 4) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [o#, m, a] |-> [n#] {- DP (Top 2) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  ( s
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( t
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( n
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( l
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( o
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( e
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( m
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( s#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( t#
  , Wk  / 20A 23A 23A - \
        | 20A 23A 23A - |
        | 20A 23A 23A - |
        \ -   -   -   - / )
  ( n#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 20A 23A 23A - \
        | 20A 23A 23A - |
        | 20A 23A 23A - |
        \ -   -   -   - / )
  ( o#
  , Wk  / 23A 24A 24A - \
        | 23A 24A 24A - |
        | 23A 24A 24A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [a#, l] |-> [t#] {- DP (Top 1) (Input 2) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [t#, e] {- DP (Top 6) (Input 4) -}
  [t#, e] |-> [n#, s] {- DP (Top 0) (Input 1) -}
  [n#, s] |-> [t#] {- DP (Top 3) (Input 5) -}
  [a#, l] |-> [a#, t] {- DP (Top 0) (Input 2) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [o#, m, a] |-> [n#] {- DP (Top 2) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [a#, l] |-> [t#] {- DP (Top 1) (Input 2) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [t#, e] {- DP (Top 6) (Input 4) -}
  [t#, e] |-> [n#, s] {- DP (Top 0) (Input 1) -}
  [n#, s] |-> [t#] {- DP (Top 3) (Input 5) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [o#, m, a] |-> [n#] {- DP (Top 2) (Input 3) -}
  [a#, l] |-> [a#, t] {- DP (Top 0) (Input 2) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  ( s
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( t
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( n
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( l
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( o
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( e
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( m
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( s#
  , Wk  / 21A 21A 24A - \
        | 21A 21A 24A - |
        | 21A 21A 24A - |
        \ -   -   -   - / )
  ( t#
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
  ( n#
  , Wk  / 18A 18A 21A - \
        | 18A 18A 21A - |
        | 18A 18A 21A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 20A 21A 21A - \
        | 20A 21A 21A - |
        | 20A 21A 21A - |
        \ -   -   -   - / )
  ( o#
  , Wk  / 21A 22A 23A - \
        | 21A 22A 23A - |
        | 21A 22A 23A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [a#, l] |-> [t#] {- DP (Top 1) (Input 2) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [t#, e] {- DP (Top 6) (Input 4) -}
  [t#, e] |-> [n#, s] {- DP (Top 0) (Input 1) -}
  [n#, s] |-> [t#] {- DP (Top 3) (Input 5) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [o#, m, a] |-> [n#] {- DP (Top 2) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [a#, l] |-> [t#] {- DP (Top 1) (Input 2) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [t#, e] {- DP (Top 6) (Input 4) -}
  [t#, e] |-> [n#, s] {- DP (Top 0) (Input 1) -}
  [n#, s] |-> [t#] {- DP (Top 3) (Input 5) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [o#, m, a] |-> [n#] {- DP (Top 2) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  ( s
  , Wk  / 3A 3A 6A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( t
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( n
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( l
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( o
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( e
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( m
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( s#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( t#
  , Wk  / 9A 10A 11A - \
        | 9A 10A 11A - |
        | 9A 10A 11A - |
        \ -  -   -   - / )
  ( n#
  , Wk  / 7A 7A 8A - \
        | 7A 7A 8A - |
        | 7A 7A 8A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 12A 12A 13A - \
        | 12A 12A 13A - |
        | 12A 12A 13A - |
        \ -   -   -   - / )
  ( o#
  , Wk  / 12A 12A 14A - \
        | 12A 12A 14A - |
        | 12A 12A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [t#, o] |-> [a#] {- DP (Top 1) (Input 0) -}
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (a, 0/1)
  (l, 0/1)
  (o, 0/1)
  (e, 0/1)
  (m, 0/1)
  (s#, 1/1)
  (t#, 1/1)
  (a#, 0/1)
  (o#, 1/1)
   property Termination
has value Just True
for SRS
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [s#, a] |-> [o#, m, a, t, e] {- DP (Top 3) (Input 4) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  ( s
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( t
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( n
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( l
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( o
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( e
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( m
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( s#
  , Wk  / 13A 14A 16A - \
        | 13A 14A 16A - |
        | 13A 14A 16A - |
        \ -   -   -   - / )
  ( t#
  , Wk  / 13A 14A 16A - \
        | 13A 14A 16A - |
        | 13A 14A 16A - |
        \ -   -   -   - / )
  ( o#
  , Wk  / 13A 15A 15A - \
        | 13A 15A 15A - |
        | 13A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [t#, e] |-> [s#] {- DP (Top 1) (Input 1) -}
  [o#, m, a] |-> [t#, e, n] {- DP (Top 0) (Input 3) -}
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (a, 0/1)
  (l, 0/1)
  (o, 0/1)
  (e, 0/1)
  (m, 0/1)
  (s#, 0/1)
  (t#, 1/1)
  (o#, 2/1)
   property Termination
has value Just True
for SRS
  [t, o] ->= [m, a] {- DP Nontop (Input 0) -}
  [t, e] ->= [n, s] {- DP Nontop (Input 1) -}
  [a, l] ->= [a, t] {- DP Nontop (Input 2) -}
  [o, m, a] ->= [t, e, n] {- DP Nontop (Input 3) -}
  [s, a] ->= [l, a, t, o, m, a, t, e] {- DP Nontop (Input 4) -}
  [n, s] ->= [a, l, a, t] {- DP Nontop (Input 5) -}
reason
  EDG

**************************************************
skeleton: (6,8)\Deepee\EDG(15/6,13)\Matrix{\Arctic}{3}\EDG(10/6,13)\Matrix{\Arctic}{3}\EDG(9/6,13)\Matrix{\Arctic}{3}(4/6,12)\Weight\EDG(3/6,11)\Matrix{\Arctic}{3}(2/6,11)\Weight(0/6,8)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11629, clauses: 47719, status: Satisfied, time: 0.211319252s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.877735198000
  min duration 0.097122367000
  total durat. 4.044651996000
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.031273256000
  min duration 3.031273256000
  total durat. 3.031273256000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 73
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 44
      , alphabet_size = 34
      , total_length = 495}
    , self = 100
    , parent = Nothing
    , duration = 3.031273256000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:33:15.471383242 UTC
    , finish = 2025-09-03 13:33:18.502656498 UTC
    , thread_cap_info = ("ThreadId 115", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.746152731000
  min duration 0.105735684000
  total durat. 3.320162281000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.010310150000
  min duration 3.010310150000
  total durat. 3.010310150000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 73
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 44
      , alphabet_size = 34
      , total_length = 495}
    , self = 101
    , parent = Nothing
    , duration = 3.010310150000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:33:15.492377013 UTC
    , finish = 2025-09-03 13:33:18.502687163 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 8
  max duration 2.739001512000
  min duration 0.522647434000
  total durat. 8.395813285000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 11
      , total_length = 50}
    , self = 139
    , parent = Nothing
    , duration = 1.047443331000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:19.853792277 UTC
    , finish = 2025-09-03 13:33:20.901235608 UTC
    , thread_cap_info = ("ThreadId 206", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 6
      , alphabet_size = 13
      , total_length = 107}
    , self = 77
    , parent = Nothing
    , duration = 1.049128258000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:15.741912087 UTC
    , finish = 2025-09-03 13:33:16.791040345 UTC
    , thread_cap_info = ("ThreadId 127", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 42
      , alphabet_size = 28
      , total_length = 362}
    , self = 112
    , parent = Nothing
    , duration = 2.739001512000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:16.311972462 UTC
    , finish = 2025-09-03 13:33:19.050973974 UTC
    , thread_cap_info = ("ThreadId 138", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.762348090000
  min duration 0.524863810000
  total durat. 8.685126045000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 6
      , alphabet_size = 13
      , total_length = 107}
    , self = 74
    , parent = Nothing
    , duration = 1.025938664000
    , status = Success
    , start = 2025-09-03 13:33:15.666930863 UTC
    , finish = 2025-09-03 13:33:16.692869527 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 6
      , alphabet_size = 13
      , total_length = 75}
    , self = 92
    , parent = Nothing
    , duration = 1.028078855000
    , status = Success
    , start = 2025-09-03 13:33:17.304716934 UTC
    , finish = 2025-09-03 13:33:18.332795789 UTC
    , thread_cap_info = ("ThreadId 155", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 42
      , alphabet_size = 28
      , total_length = 362}
    , self = 109
    , parent = Nothing
    , duration = 2.762348090000
    , status = Success
    , start = 2025-09-03 13:33:16.19100086 UTC
    , finish = 2025-09-03 13:33:18.95334895 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 5.661885442000
  min duration 5.661885442000
  total durat. 5.661885442000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 8
      , total_length = 34}
    , self = 142
    , parent = Nothing
    , duration = 5.661885442000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:15.369103488 UTC
    , finish = 2025-09-03 13:33:21.03098893 UTC
    , thread_cap_info = ("ThreadId 85", 1, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
E                      = 34} , self = 142 , parent = Nothing , duration = 5.661885442000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 13:33:15.369103488 UTC ,
E                      finish = 2025-09-03 13:33:21.03098893 UTC , thread_cap_info = ("ThreadId
E                      85", 1, False)}
E                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| F                    = 44 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 27 , total_length
| F                    = 312} , self = 69 , parent = Nothing , duration = 0.456792163000 , status
| F                    = Fail , start = 2025-09-03 13:33:15.398011521 UTC , finish = 2025-09-03
| F                    13:33:15.854803684 UTC , thread_cap_info = ("ThreadId 102", 3, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | F                  = 44 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 27 , total_length
| | F                  = 312} , self = 68 , parent = Nothing , duration = 0.300125492000 , status
| | F                  = Fail , start = 2025-09-03 13:33:15.410959382 UTC , finish = 2025-09-03
| | F                  13:33:15.711084874 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | F                = 8 , num_top_rules = 8 , num_weak_rules = 42 , alphabet_size = 28 , total_length
| | | F                = 362} , self = 73 , parent = Nothing , duration = 0.877735198000 , status
| | | F                = Fail , start = 2025-09-03 13:33:15.426130037 UTC , finish = 2025-09-03
| | | F                13:33:16.303865235 UTC , thread_cap_info = ("ThreadId 111", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | | F              = 8 , num_top_rules = 8 , num_weak_rules = 42 , alphabet_size = 28 , total_length
| | | | F              = 362} , self = 72 , parent = Nothing , duration = 0.746152731000 , status
| | | | F              = Fail , start = 2025-09-03 13:33:15.430972171 UTC , finish = 2025-09-03
| | | | F              13:33:16.177124902 UTC , thread_cap_info = ("ThreadId 112", 0, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | F            = 15 , num_top_rules = 15 , num_weak_rules = 6 , alphabet_size = 13 , total_length
| | | | | F            = 107} , self = 65 , parent = Nothing , duration = 0.126273135000 , status
| | | | | F            = Fail , start = 2025-09-03 13:33:15.430974216 UTC , finish = 2025-09-03
| | | | | F            13:33:15.557247351 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | F          = 15 , num_top_rules = 15 , num_weak_rules = 6 , alphabet_size = 13 , total_length
| | | | | | F          = 107} , self = 67 , parent = Nothing , duration = 0.212467797000 , status
| | | | | | F          = Fail , start = 2025-09-03 13:33:15.451495586 UTC , finish = 2025-09-03
| | | | | | F          13:33:15.663963383 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| | | | | | F          
| | | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | | | E        = 29 , num_top_rules = 29 , num_weak_rules = 44 , alphabet_size = 34 ,
| | | | | | | E        total_length = 495} , self = 100 , parent = Nothing , duration = 3.031273256000
| | | | | | | E        , status = Except "<<timeout>>" , start = 2025-09-03 13:33:15.471383242
| | | | | | | E        UTC , finish = 2025-09-03 13:33:18.502656498 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        115", 0, False)}
| | | | | | | E        
| | | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | | | | E      = 29 , num_top_rules = 29 , num_weak_rules = 44 , alphabet_size = 34 ,
| | | | | | | | E      total_length = 495} , self = 101 , parent = Nothing , duration = 3.010310150000
| | | | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-03 13:33:15.492377013
| | | | | | | | E      UTC , finish = 2025-09-03 13:33:18.502687163 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E      116", 0, False)}
| | | | | | | | E      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | F    = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 12 , total_length
| | | | | | | | | F    = 83} , self = 70 , parent = Nothing , duration = 0.339403728000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 13:33:15.515402004 UTC , finish = 2025-09-03
| | | | | | | | | F    13:33:15.854805732 UTC , thread_cap_info = ("ThreadId 120", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 12 , total_length
| | | | | | | | | | F  = 83} , self = 71 , parent = Nothing , duration = 0.362052037000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 13:33:15.515405776 UTC , finish = 2025-09-03
| | | | | | | | | | F  13:33:15.877457813 UTC , thread_cap_info = ("ThreadId 121", 1, False)}
| | | | | | | | | | F  
| | | | | F | | | | |  
| | | | |   F | | | |  
| | | | | S   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   | | | |  = 21 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 6
| | | | | S   | | | |  , alphabet_size = 13 , total_length = 107} , self = 74 , parent = Nothing
| | | | | S   | | | |  , duration = 1.025938664000 , status = Success , start = 2025-09-03 13:33:15.666930863
| | | | | S   | | | |  UTC , finish = 2025-09-03 13:33:16.692869527 UTC , thread_cap_info = ("ThreadId
| | | | | S   | | | |  125", 1, False)}
| | | | | S   | | | |  
| | F | | |   | | | |  
| | E | | |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | |   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | E | | |   | | | |  , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 6 , alphabet_size
| | E | | |   | | | |  = 13 , total_length = 107} , self = 77 , parent = Nothing , duration =
| | E | | |   | | | |  1.049128258000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | |   | | | |  13:33:15.741912087 UTC , finish = 2025-09-03 13:33:16.791040345 UTC , thread_cap_info
| | E | | |   | | | |  = ("ThreadId 127", 1, False)}
| | E | | |   | | | |  
| F | | | |   | | | |  
|   | | | |   | | F |  
|   | | | |   | |   F  
| S | | | |   | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |   | |      = 15 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 ,
| S | | | |   | |      alphabet_size = 12 , total_length = 83} , self = 76 , parent = Nothing
| S | | | |   | |      , duration = 0.807583407000 , status = Success , start = 2025-09-03 13:33:15.968496315
| S | | | |   | |      UTC , finish = 2025-09-03 13:33:16.776079722 UTC , thread_cap_info = ("ThreadId
| S | | | |   | |      131", 1, False)}
| S | | | |   | |      
| | | | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | | | | | E | |      , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size
| | | | | | E | |      = 12 , total_length = 83} , self = 80 , parent = Nothing , duration = 0.978845609000
| | | | | | E | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:15.992114408
| | | | | | E | |      UTC , finish = 2025-09-03 13:33:16.970960017 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |      132", 1, False)}
| | | | | | E | |      
| | | | F | | | |      
| | | | S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | |      = 50 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 42 ,
| | | | S | | | |      alphabet_size = 28 , total_length = 362} , self = 109 , parent = Nothing
| | | | S | | | |      , duration = 2.762348090000 , status = Success , start = 2025-09-03 13:33:16.19100086
| | | | S | | | |      UTC , finish = 2025-09-03 13:33:18.95334895 UTC , thread_cap_info = ("ThreadId
| | | | S | | | |      137", 0, False)}
| | | | S | | | |      
| | | F | | | | |      
| | | E | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 50
| | | E | | | | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 42 , alphabet_size
| | | E | | | | |      = 28 , total_length = 362} , self = 112 , parent = Nothing , duration =
| | | E | | | | |      2.739001512000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | | | |      13:33:16.311972462 UTC , finish = 2025-09-03 13:33:19.050973974 UTC , thread_cap_info
| | | E | | | | |      = ("ThreadId 138", 0, False)}
| | | E | | | | |      
| | | | | S | | |      
| S | | |   | | |      
|   E | |   | | |      
|     | |   E | |      
| F   | |     | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |     | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |     | |      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F   | |     | |      = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 13 , total_length
| F   | |     | |      = 75} , self = 88 , parent = Nothing , duration = 0.160059841000 , status
| F   | |     | |      = Fail , start = 2025-09-03 13:33:17.070990342 UTC , finish = 2025-09-03
| F   | |     | |      13:33:17.231050183 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| F   | |     | |      
| | F | |     | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |     | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |     | |      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F | |     | |      = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 13 , total_length
| | F | |     | |      = 75} , self = 91 , parent = Nothing , duration = 0.608974558000 , status
| | F | |     | |      = Fail , start = 2025-09-03 13:33:17.126373149 UTC , finish = 2025-09-03
| | F | |     | |      13:33:17.735347707 UTC , thread_cap_info = ("ThreadId 147", 1, False)}
| | F | |     | |      
| | | | | F   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | F   | |      = 7 , num_top_rules = 7 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| | | | | F   | |      = 73} , self = 89 , parent = Nothing , duration = 0.205673610000 , status
| | | | | F   | |      = Fail , start = 2025-09-03 13:33:17.130957926 UTC , finish = 2025-09-03
| | | | | F   | |      13:33:17.336631536 UTC , thread_cap_info = ("ThreadId 151", 1, False)}
| | | | | F   | |      
| | | | | | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | | F | |      = 7 , num_top_rules = 7 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| | | | | | F | |      = 73} , self = 90 , parent = Nothing , duration = 0.395191891000 , status
| | | | | | F | |      = Fail , start = 2025-09-03 13:33:17.191723393 UTC , finish = 2025-09-03
| | | | | | F | |      13:33:17.586915284 UTC , thread_cap_info = ("ThreadId 152", 1, False)}
| | | | | | F | |      
| F | | | | | | |      
| S | | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | |      = 16 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 6
| S | | | | | | |      , alphabet_size = 13 , total_length = 75} , self = 92 , parent = Nothing
| S | | | | | | |      , duration = 1.028078855000 , status = Success , start = 2025-09-03 13:33:17.304716934
| S | | | | | | |      UTC , finish = 2025-09-03 13:33:18.332795789 UTC , thread_cap_info = ("ThreadId
| S | | | | | | |      155", 1, False)}
| S | | | | | | |      
| | | | | F | | |      
| | | | | S | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | |      = 13 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 6 ,
| | | | | S | | |      alphabet_size = 11 , total_length = 73} , self = 93 , parent = Nothing
| | | | | S | | |      , duration = 0.955650909000 , status = Success , start = 2025-09-03 13:33:17.378021808
| | | | | S | | |      UTC , finish = 2025-09-03 13:33:18.333672717 UTC , thread_cap_info = ("ThreadId
| | | | | S | | |      157", 1, False)}
| | | | | S | | |      
| | | | | | F | |      
| | | | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | | | E | |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 6 , alphabet_size
| | | | | | E | |      = 11 , total_length = 73} , self = 97 , parent = Nothing , duration = 0.824269803000
| | | | | | E | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:17.658897329
| | | | | | E | |      UTC , finish = 2025-09-03 13:33:18.483167132 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |      159", 1, False)}
| | | | | | E | |      
| | F | | | | | |      
| | E | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | E | | | | | |      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size
| | E | | | | | |      = 13 , total_length = 75} , self = 96 , parent = Nothing , duration = 0.630670933000
| | E | | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:17.852466599
| | E | | | | | |      UTC , finish = 2025-09-03 13:33:18.483137532 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |      162", 1, False)}
| | E | | | | | |      
| S | | | | | | |      
|   | | | S | | |      
|   E | |   | | |      
|     | |   E | |      
|     | |     E |      
|     | |       E      
| F   | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F   | |              = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 13 , total_length
| F   | |              = 71} , self = 111 , parent = Nothing , duration = 0.414326061000 , status
| F   | |              = Fail , start = 2025-09-03 13:33:18.595102133 UTC , finish = 2025-09-03
| F   | |              13:33:19.009428194 UTC , thread_cap_info = ("ThreadId 174", 1, False)}
| F   | |              
| | F | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F | |              = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 13 , total_length
| | F | |              = 71} , self = 108 , parent = Nothing , duration = 0.218494485000 , status
| | F | |              = Fail , start = 2025-09-03 13:33:18.61293898 UTC , finish = 2025-09-03
| | F | |              13:33:18.831433465 UTC , thread_cap_info = ("ThreadId 175", 1, False)}
| | F | |              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F            = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| | | | | F            = 69} , self = 115 , parent = Nothing , duration = 0.425221163000 , status
| | | | | F            = Fail , start = 2025-09-03 13:33:18.711975419 UTC , finish = 2025-09-03
| | | | | F            13:33:19.137196582 UTC , thread_cap_info = ("ThreadId 178", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F          = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| | | | | | F          = 69} , self = 113 , parent = Nothing , duration = 0.356773258000 , status
| | | | | | F          = Fail , start = 2025-09-03 13:33:18.736534818 UTC , finish = 2025-09-03
| | | | | | F          13:33:19.093308076 UTC , thread_cap_info = ("ThreadId 179", 1, False)}
| | | | | | F          
| | F | | | |          
| | S | | | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |          = 15 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 ,
| | S | | | |          alphabet_size = 13 , total_length = 71} , self = 119 , parent = Nothing
| | S | | | |          , duration = 0.524863810000 , status = Success , start = 2025-09-03 13:33:18.932139176
| | S | | | |          UTC , finish = 2025-09-03 13:33:19.457002986 UTC , thread_cap_info = ("ThreadId
| | S | | | |          181", 1, False)}
| | S | | | |          
| | | | S | |          
| F | |   | |          
|   | E   | |          
| E |     | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |     | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |     | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |     | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| E |     | |          , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size
| E |     | |          = 13 , total_length = 71} , self = 121 , parent = Nothing , duration =
| E |     | |          0.522647434000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E |     | |          13:33:19.075155768 UTC , finish = 2025-09-03 13:33:19.597803202 UTC , thread_cap_info
| E |     | |          = ("ThreadId 185", 1, False)}
| E |     | |          
| | |     | F          
| | |     F            
| | | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S                = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | | S                alphabet_size = 11 , total_length = 69} , self = 126 , parent = Nothing
| | | S                , duration = 0.623791318000 , status = Success , start = 2025-09-03 13:33:19.154552069
| | | S                UTC , finish = 2025-09-03 13:33:19.778343387 UTC , thread_cap_info = ("ThreadId
| | | S                187", 1, False)}
| | | S                
| | | | E              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | E              , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | | E              = 11 , total_length = 69} , self = 129 , parent = Nothing , duration =
| | | | E              0.603806405000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E              13:33:19.22714638 UTC , finish = 2025-09-03 13:33:19.830952785 UTC , thread_cap_info
| | | | E              = ("ThreadId 188", 1, False)}
| | | | E              
| | S | |              
| E   | |              
| F   | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F   | |              = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| F   | |              = 50} , self = 130 , parent = Nothing , duration = 0.105735684000 , status
| F   | |              = Fail , start = 2025-09-03 13:33:19.725253348 UTC , finish = 2025-09-03
| F   | |              13:33:19.830989032 UTC , thread_cap_info = ("ThreadId 200", 1, False)}
| F   | |              
| |   S |              
| | S   |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   |              = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | S   |              = 11 , total_length = 50} , self = 137 , parent = Nothing , duration =
| | S   |              0.956870992000 , status = Success , start = 2025-09-03 13:33:19.815374196
| | S   |              UTC , finish = 2025-09-03 13:33:20.772245188 UTC , thread_cap_info = ("ThreadId
| | S   |              204", 1, False)}
| | S   |              
| | |   E              
| F |                  
| E |                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E |                  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| E |                  = 11 , total_length = 50} , self = 139 , parent = Nothing , duration =
| E |                  1.047443331000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E |                  13:33:19.853792277 UTC , finish = 2025-09-03 13:33:20.901235608 UTC , thread_cap_info
| E |                  = ("ThreadId 206", 1, False)}
| E |                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | F                = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| | | F                = 61} , self = 136 , parent = Nothing , duration = 0.493130013000 , status
| | | F                = Fail , start = 2025-09-03 13:33:20.035529663 UTC , finish = 2025-09-03
| | | F                13:33:20.528659676 UTC , thread_cap_info = ("ThreadId 210", 1, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F              = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size = 11 , total_length
| | | | F              = 61} , self = 135 , parent = Nothing , duration = 0.463109065000 , status
| | | | F              = Fail , start = 2025-09-03 13:33:20.052667777 UTC , finish = 2025-09-03
| | | | F              13:33:20.515776842 UTC , thread_cap_info = ("ThreadId 211", 1, False)}
| | | | F              
| | | | F              
| | | F                
| | S                  
| E                    
E                      
