last 575 length 2272
last 2638 length 11031
CNF 575 vars 2272 clauses
last 626 length 2512
last 3539 length 14545
CNF 2638 vars 11031 clauses
last 8351 length 36071
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2418, clauses: 8555
last 2418 length 8555
CNF 8351 vars 36071 clauses
CNF 626 vars 2512 clauses
CNF 3539 vars 14545 clauses
CNF 2418 vars 8555 clauses
last 647 length 2600
CNF 647 vars 2600 clauses
last 695 length 2762
CNF 695 vars 2762 clauses
last 9089 length 37718
CNF 9089 vars 37718 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2418, clauses: 8555, status: Unsatisfied, time: 0.215413844s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2418, clauses: 8591
last 2418 length 8591
CNF 2418 vars 8591 clauses
last 7561 length 32987
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2418, clauses: 8591, status: Unsatisfied, time: 0.350268123s
CNF 7561 vars 32987 clauses
last 8333 length 34491
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6865, clauses: 25438
last 6865 length 25438
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5324, clauses: 21248
last 5324 length 21248
CNF 8333 vars 34491 clauses
last 9304 length 40337
CNF 6865 vars 25438 clauses
CNF 5324 vars 21248 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8773, clauses: 36451
CNF 9304 vars 40337 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8773, clauses: 36441
last 3724 length 15455
last 3035 length 13286
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5324, clauses: 21304
last 9721 length 40508
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6865, clauses: 25438, status: Satisfied, time: 0.418495551s
last 8773 length 36451
last 8773 length 36441
CNF 3724 vars 15455 clauses
last 5324 length 21304
CNF 3035 vars 13286 clauses
CNF 8773 vars 36451 clauses
last 7561 length 32987
CNF 8773 vars 36441 clauses
CNF 5324 vars 21304 clauses
last 2561 length 10769
last 3344 length 13722
last 8333 length 34491
CNF 3344 vars 13722 clauses
CNF 2561 vars 10769 clauses
CNF 7561 vars 32987 clauses
CNF 8333 vars 34491 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8773, clauses: 36451, status: Satisfied, time: 0.725051148s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6541, clauses: 24052
last 6541 length 24052
CNF 6541 vars 24052 clauses
**************************************************
summary
**************************************************
SRS with 7 rules on 4 letters       weights
SRS with 6 rules on 4 letters       mirror
SRS with 6 rules on 4 letters       DP
SRS with 13 strict rules and 6 weak rules on 7 letters       weights
SRS with 8 strict rules and 6 weak rules on 7 letters       EDG
SRS with 1 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, d, b] -> [c, d, b] {- Input 0 -}
  [b, a, c] -> [b, c] {- Input 1 -}
  [a, d] -> [d, c] {- Input 2 -}
  [b, b, b] -> [a, b, c] {- Input 3 -}
  [d, c] -> [b, d] {- Input 4 -}
  [d, c] -> [d, b, d] {- Input 5 -}
  [d, a, c] -> [b, b] {- Input 6 -}
reason
  (d, 0/1)
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
   property Termination
has value Just True
for SRS
  [b, d, b] -> [c, d, b] {- Input 0 -}
  [a, d] -> [d, c] {- Input 2 -}
  [b, b, b] -> [a, b, c] {- Input 3 -}
  [d, c] -> [b, d] {- Input 4 -}
  [d, c] -> [d, b, d] {- Input 5 -}
  [d, a, c] -> [b, b] {- Input 6 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, d, b] -> [b, d, c] {- Mirror (Input 0) -}
  [d, a] -> [c, d] {- Mirror (Input 2) -}
  [b, b, b] -> [c, b, a] {- Mirror (Input 3) -}
  [c, d] -> [d, b] {- Mirror (Input 4) -}
  [c, d] -> [d, b, d] {- Mirror (Input 5) -}
  [c, a, d] -> [b, b] {- Mirror (Input 6) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, d, b] ->= [b, d, c] {- DP Nontop (Mirror (Input 0)) -}
  [d, a] ->= [c, d] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [c, d] ->= [d, b] {- DP Nontop (Mirror (Input 4)) -}
  [c, d] ->= [d, b, d] {- DP Nontop (Mirror (Input 5)) -}
  [c, a, d] ->= [b, b] {- DP Nontop (Mirror (Input 6)) -}
  [d#, a] |-> [d#] {- DP (Top 1) (Mirror (Input 2)) -}
  [d#, a] |-> [c#, d] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, d, b] |-> [d#, c] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, d, b] |-> [b#, d, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, d, b] |-> [c#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 1) (Mirror (Input 3)) -}
  [b#, b, b] |-> [c#, b, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#, d] |-> [d#, b] {- DP (Top 0) (Mirror (Input 4)) -}
  [c#, d] |-> [d#, b, d] {- DP (Top 0) (Mirror (Input 5)) -}
  [c#, d] |-> [b#] {- DP (Top 1) (Mirror (Input 4)) -}
  [c#, d] |-> [b#, d] {- DP (Top 1) (Mirror (Input 5)) -}
  [c#, a, d] |-> [b#] {- DP (Top 1) (Mirror (Input 6)) -}
  [c#, a, d] |-> [b#, b] {- DP (Top 0) (Mirror (Input 6)) -}
reason
  (d, 0/1)
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (d#, 0/1)
  (b#, 1/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, d, b] ->= [b, d, c] {- DP Nontop (Mirror (Input 0)) -}
  [d, a] ->= [c, d] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [c, d] ->= [d, b] {- DP Nontop (Mirror (Input 4)) -}
  [c, d] ->= [d, b, d] {- DP Nontop (Mirror (Input 5)) -}
  [c, a, d] ->= [b, b] {- DP Nontop (Mirror (Input 6)) -}
  [d#, a] |-> [c#, d] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, d, b] |-> [b#, d, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, b] |-> [c#, b, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#, d] |-> [d#, b] {- DP (Top 0) (Mirror (Input 4)) -}
  [c#, d] |-> [d#, b, d] {- DP (Top 0) (Mirror (Input 5)) -}
  [c#, d] |-> [b#] {- DP (Top 1) (Mirror (Input 4)) -}
  [c#, d] |-> [b#, d] {- DP (Top 1) (Mirror (Input 5)) -}
  [c#, a, d] |-> [b#, b] {- DP (Top 0) (Mirror (Input 6)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, d, b] |-> [b#, d, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, d, b] ->= [b, d, c] {- DP Nontop (Mirror (Input 0)) -}
  [d, a] ->= [c, d] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [c, d] ->= [d, b] {- DP Nontop (Mirror (Input 4)) -}
  [c, d] ->= [d, b, d] {- DP Nontop (Mirror (Input 5)) -}
  [c, a, d] ->= [b, b] {- DP Nontop (Mirror (Input 6)) -}
reason
  ( d
  , Wk  / 0A -1A 1A  \
        | -  -1A -1A |
        \ -  -   0A  / )
  ( a
  , Wk  / 1A -  2A \
        | 1A 0A 2A |
        \ -  -  0A / )
  ( b
  , Wk  / -1A -1A 0A \
        | 1A  0A  2A |
        \ -   -   0A / )
  ( c
  , Wk  / 0A - -   \
        | 0A - -1A |
        \ -  - 0A  / )
  ( b#
  , Wk  / 0A 1A 1A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [b, d, b] ->= [b, d, c] {- DP Nontop (Mirror (Input 0)) -}
  [d, a] ->= [c, d] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [c, d] ->= [d, b] {- DP Nontop (Mirror (Input 4)) -}
  [c, d] ->= [d, b, d] {- DP Nontop (Mirror (Input 5)) -}
  [c, a, d] ->= [b, b] {- DP Nontop (Mirror (Input 6)) -}
reason
  EDG

**************************************************
skeleton: (7,4)\Weight\Mirror(6,4)\Deepee(13/6,7)\Weight(8/6,7)\EDG(1/6,5)\Matrix{\ArcticBZ}{3}(0/6,4)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6541, clauses: 24052, status: Satisfied, time: 0.161381131s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8773, clauses: 36441, status: Satisfied, time: 1.120053228s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5324, clauses: 21248, status: Unsatisfied, time: 1.664901778s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.963048613000
  min duration 0.036083197000
  total durat. 1.855208510000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.381584586000
  min duration 0.472442992000
  total durat. 2.407934383000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 53
      , alphabet_size = 17
      , total_length = 398}
    , self = 97
    , parent = Nothing
    , duration = 1.381584586000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:25:49.178316125 UTC
    , finish = 2025-09-03 13:25:50.559900711 UTC
    , thread_cap_info = ("ThreadId 95", 2, False)}
Success : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.376357918000
  min duration 0.370499245000
  total durat. 3.223977816000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 53
      , alphabet_size = 17
      , total_length = 398}
    , self = 95
    , parent = Nothing
    , duration = 1.376357918000
    , status = Success
    , start = 2025-09-03 13:25:49.178327629 UTC
    , finish = 2025-09-03 13:25:50.554685547 UTC
    , thread_cap_info = ("ThreadId 96", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.007037783000
  min duration 0.146006931000
  total durat. 2.107698560000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 21
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 147}
    , self = 111
    , parent = Nothing
    , duration = 1.007037783000
    , status = Fail
    , start = 2025-09-03 13:25:50.069658122 UTC
    , finish = 2025-09-03 13:25:51.076695905 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.888507525000
  min duration 1.888507525000
  total durat. 1.888507525000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 36}
    , self = 114
    , parent = Nothing
    , duration = 1.888507525000
    , status = Success
    , start = 2025-09-03 13:25:49.548845087 UTC
    , finish = 2025-09-03 13:25:51.437352612 UTC
    , thread_cap_info = ("ThreadId 142", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.213817578000
  min duration 1.213817578000
  total durat. 1.213817578000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 20
      , alphabet_size = 9
      , total_length = 152}
    , self = 105
    , parent = Nothing
    , duration = 1.213817578000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:25:49.448840885 UTC
    , finish = 2025-09-03 13:25:50.662658463 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.530666450000
  min duration 1.530666450000
  total durat. 1.530666450000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 36}
    , self = 119
    , parent = Nothing
    , duration = 1.530666450000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:25:50.031364317 UTC
    , finish = 2025-09-03 13:25:51.562030767 UTC
    , thread_cap_info = ("ThreadId 149", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.144383369000
  min duration 1.144383369000
  total durat. 1.144383369000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 20
      , alphabet_size = 9
      , total_length = 152}
    , self = 103
    , parent = Nothing
    , duration = 1.144383369000
    , status = Success
    , start = 2025-09-03 13:25:49.447365269 UTC
    , finish = 2025-09-03 13:25:50.591748638 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.575115799000
  min duration 1.575115799000
  total durat. 1.575115799000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 30}
    , self = 102
    , parent = Nothing
    , duration = 1.575115799000
    , status = Fail
    , start = 2025-09-03 13:25:48.996300932 UTC
    , finish = 2025-09-03 13:25:50.571416731 UTC
    , thread_cap_info = ("ThreadId 36", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.082004551000
  min duration 1.082004551000
  total durat. 1.082004551000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 30}
    , self = 127
    , parent = Nothing
    , duration = 1.082004551000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:25:50.571439505 UTC
    , finish = 2025-09-03 13:25:51.653444056 UTC
    , thread_cap_info = ("ThreadId 189", 3, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                    = 30} , self = 102 , parent = Nothing , duration = 1.575115799000 , status
F                    = Fail , start = 2025-09-03 13:25:48.996300932 UTC , finish = 2025-09-03
F                    13:25:50.571416731 UTC , thread_cap_info = ("ThreadId 36", 3, False)}
F                    
| E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| E                  = 53 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| E                  = 370} , self = 67 , parent = Nothing , duration = 0.472442992000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-03 13:25:49.017174338 UTC ,
| E                  finish = 2025-09-03 13:25:49.48961733 UTC , thread_cap_info = ("ThreadId
| E                  57", 0, False)}
| E                  
| | S                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S                = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | S                = 53 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | S                = 370} , self = 62 , parent = Nothing , duration = 0.370499245000 , status
| | S                = Success , start = 2025-09-03 13:25:49.01718498 UTC , finish = 2025-09-03
| | S                13:25:49.387684225 UTC , thread_cap_info = ("ThreadId 59", 0, False)}
| | S                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | F              = 2 , num_top_rules = 2 , num_weak_rules = 20 , alphabet_size = 9 , total_length
| | | F              = 152} , self = 61 , parent = Nothing , duration = 0.248448887000 , status
| | | F              = Fail , start = 2025-09-03 13:25:49.129125566 UTC , finish = 2025-09-03
| | | F              13:25:49.377574453 UTC , thread_cap_info = ("ThreadId 90", 2, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 20 , alphabet_size = 9 , total_length
| | | | F            = 152} , self = 59 , parent = Nothing , duration = 0.207521582000 , status
| | | | F            = Fail , start = 2025-09-03 13:25:49.148850041 UTC , finish = 2025-09-03
| | | | F            13:25:49.356371623 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| | | | F            
| | | | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | E          = 4 , num_top_rules = 4 , num_weak_rules = 53 , alphabet_size = 17 , total_length
| | | | | E          = 398} , self = 97 , parent = Nothing , duration = 1.381584586000 , status
| | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 13:25:49.178316125 UTC ,
| | | | | E          finish = 2025-09-03 13:25:50.559900711 UTC , thread_cap_info = ("ThreadId
| | | | | E          95", 2, False)}
| | | | | E          
| | | | | | S        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | S        = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | S        = 4 , num_top_rules = 4 , num_weak_rules = 53 , alphabet_size = 17 , total_length
| | | | | | S        = 398} , self = 95 , parent = Nothing , duration = 1.376357918000 , status
| | | | | | S        = Success , start = 2025-09-03 13:25:49.178327629 UTC , finish = 2025-09-03
| | | | | | S        13:25:50.554685547 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| | | | | | S        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | | | F      = 35} , self = 58 , parent = Nothing , duration = 0.157775637000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:25:49.19065332 UTC , finish = 2025-09-03
| | | | | | | F      13:25:49.348428957 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F    = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | | F    = 5 , total_length = 35} , self = 77 , parent = Nothing , duration = 0.269439999000
| | | | | | | | F    , status = Fail , start = 2025-09-03 13:25:49.251757528 UTC , finish =
| | | | | | | | F    2025-09-03 13:25:49.521197527 UTC , thread_cap_info = ("ThreadId 103",
| | | | | | | | F    3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | | | | | F  = 36} , self = 63 , parent = Nothing , duration = 0.146006931000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 13:25:49.306194102 UTC , finish = 2025-09-03
| | | | | | | | | F  13:25:49.452201033 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| | | | | | | | | F  
| | | | | | | F | |  
| | | | F | |   | |  
| | | F   | |   | |  
| | S     | |   | |  
| | S     | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     | |   | |  = 22 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 20 ,
| | S     | |   | |  alphabet_size = 9 , total_length = 152} , self = 103 , parent = Nothing
| | S     | |   | |  , duration = 1.144383369000 , status = Success , start = 2025-09-03 13:25:49.447365269
| | S     | |   | |  UTC , finish = 2025-09-03 13:25:50.591748638 UTC , thread_cap_info = ("ThreadId
| | S     | |   | |  114", 2, False)}
| | S     | |   | |  
| | | E   | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | E   | |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 20 , alphabet_size
| | | E   | |   | |  = 9 , total_length = 152} , self = 105 , parent = Nothing , duration =
| | | E   | |   | |  1.213817578000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E   | |   | |  13:25:49.448840885 UTC , finish = 2025-09-03 13:25:50.662658463 UTC , thread_cap_info
| | | E   | |   | |  = ("ThreadId 115", 2, False)}
| | | E   | |   | |  
| | | | F | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | |   | |  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | F | |   | |  = 5 , total_length = 36} , self = 79 , parent = Nothing , duration = 0.490904203000
| | | | F | |   | |  , status = Fail , start = 2025-09-03 13:25:49.448841443 UTC , finish =
| | | | F | |   | |  2025-09-03 13:25:49.939745646 UTC , thread_cap_info = ("ThreadId 116",
| | | | F | |   | |  3, False)}
| | | | F | |   | |  
| | | | | | |   | F  
| E | | | | |   |    
| E | | | | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| E | | | | |   |    = 48 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| E | | | | |   |    = 338} , self = 91 , parent = Nothing , duration = 0.553906805000 , status
| E | | | | |   |    = Except "AsyncCancelled" , start = 2025-09-03 13:25:49.50312613 UTC ,
| E | | | | |   |    finish = 2025-09-03 13:25:50.057032935 UTC , thread_cap_info = ("ThreadId
| E | | | | |   |    137", 0, False)}
| E | | | | |   |    
| | | | | | | S |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | S |    = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | | | S |    = 48 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | | | S |    = 338} , self = 80 , parent = Nothing , duration = 0.528758405000 , status
| | | | | | | S |    = Success , start = 2025-09-03 13:25:49.503132936 UTC , finish = 2025-09-03
| | | | | | | S |    13:25:50.031891341 UTC , thread_cap_info = ("ThreadId 139", 0, False)}
| | | | | | | S |    
| | | | | | | | F    
| | | | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S    last 2638 length 11031
CNF 2638 vars 11031 clauses
, log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | S    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | | S    = 5 , total_length = 36} , self = 114 , parent = Nothing , duration = 1.888507525000
| | | | | | | | S    , status = Success , start = 2025-09-03 13:25:49.548845087 UTC , finish
| | | | | | | | S    = 2025-09-03 13:25:51.437352612 UTC , thread_cap_info = ("ThreadId 142",
| | | | | | | | S    3, False)}
| | | | | | | | S    
| | | | F | | | |    
| | | | E | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E | | | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | E | | | |    = 5 , total_length = 36} , self = 119 , parent = Nothing , duration = 1.530666450000
| | | | E | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:25:50.031364317
| | | | E | | | |    UTC , finish = 2025-09-03 13:25:51.562030767 UTC , thread_cap_info = ("ThreadId
| | | | E | | | |    149", 3, False)}
| | | | E | | | |    
| | | | | | | S |    
| | | | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | | F |    = 21 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F |    = 147} , self = 110 , parent = Nothing , duration = 0.963048613000 , status
| | | | | | | F |    = Fail , start = 2025-09-03 13:25:50.052982115 UTC , finish = 2025-09-03
| | | | | | | F |    13:25:51.016030728 UTC , thread_cap_info = ("ThreadId 171", 0, False)}
| | | | | | | F |    
| E | | | | | | |    
| F | | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| F | | | | | | |    = 21 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F | | | | | | |    = 147} , self = 111 , parent = Nothing , duration = 1.007037783000 , status
| F | | | | | | |    = Fail , start = 2025-09-03 13:25:50.069658122 UTC , finish = 2025-09-03
| F | | | | | | |    13:25:51.076695905 UTC , thread_cap_info = ("ThreadId 173", 0, False)}
| F | | | | | | |    
| | | | | | S | |    
| | | | | E   | |    
| | | | | S   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | S   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | S   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | S   | |    = 4 , num_top_rules = 4 , num_weak_rules = 44 , alphabet_size = 15 , total_length
| | | | | S   | |    = 338} , self = 118 , parent = Nothing , duration = 0.985419962000 , status
| | | | | S   | |    = Success , start = 2025-09-03 13:25:50.563086062 UTC , finish = 2025-09-03
| | | | | S   | |    13:25:51.548506024 UTC , thread_cap_info = ("ThreadId 187", 2, False)}
| | | | | S   | |    
| | | | | | S | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | S | |    = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | | S | |    = 4 , num_top_rules = 4 , num_weak_rules = 44 , alphabet_size = 15 , total_length
| | | | | | S | |    = 338} , self = 116 , parent = Nothing , duration = 0.948362248000 , status
| | | | | | S | |    = Success , start = 2025-09-03 13:25:50.563090329 UTC , finish = 2025-09-03
| | | | | | S | |    13:25:51.511452577 UTC , thread_cap_info = ("ThreadId 188", 2, False)}
| | | | | | S | |    
F | | | | | | | |    
E | | | | | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | | | | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | | | | |    = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
E | | | | | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
E | | | | | | | |    = 30} , self = 127 , parent = Nothing , duration = 1.082004551000 , status
E | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:25:50.571439505 UTC ,
E | | | | | | | |    finish = 2025-09-03 13:25:51.653444056 UTC , thread_cap_info = ("ThreadId
E | | | | | | | |    189", 3, False)}
E | | | | | | | |    
| | S | | | | | |    
| |   E | | | | |    
| | F   | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | F   | | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 20 , alphabet_size = 9 , total_length
| | F   | | | | |    = 144} , self = 112 , parent = Nothing , duration = 0.536110587000 , status
| | F   | | | | |    = Fail , start = 2025-09-03 13:25:50.733317659 UTC , finish = 2025-09-03
| | F   | | | | |    13:25:51.269428246 UTC , thread_cap_info = ("ThreadId 194", 2, False)}
| | F   | | | | |    
| | | F | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | F | | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 20 , alphabet_size = 9 , total_length
| | | F | | | | |    = 144} , self = 113 , parent = Nothing , duration = 0.589356627000 , status
| | | F | | | | |    = Fail , start = 2025-09-03 13:25:50.749449191 UTC , finish = 2025-09-03
| | | F | | | | |    13:25:51.338805818 UTC , thread_cap_info = ("ThreadId 195", 2, False)}
| | | F | | | | |    
| | | | | | | F |    
| F | | | | |   |    
|   F | | | |   |    
|     F | | |   |    
|       | | |   S    
|       | | S        
|       | S          
|       E            
E                    
