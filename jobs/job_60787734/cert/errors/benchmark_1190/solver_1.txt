last 503 length 2049
last 452 length 1760
CNF 503 vars 2049 clauses
CNF 452 vars 1760 clauses
last 462 length 1849
CNF 462 vars 1849 clauses
last 451 length 1764
CNF 451 vars 1764 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2155, clauses: 7630
last 2155 length 7630
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2052, clauses: 7310
CNF 2155 vars 7630 clauses
last 2052 length 7310
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6128, clauses: 25313
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6165, clauses: 25385
last 4963 length 24787
CNF 2052 vars 7310 clauses
last 6128 length 25313
last 6165 length 25385
CNF 4963 vars 24787 clauses
last 4109 length 18533
CNF 6128 vars 25313 clauses
CNF 4109 vars 18533 clauses
CNF 6165 vars 25385 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2155, clauses: 7630, status: Unsatisfied, time: 0.161281792s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2052, clauses: 7310, status: Unsatisfied, time: 0.14121504s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3865, clauses: 15167
last 3865 length 15167
CNF 3865 vars 15167 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3850, clauses: 15134
last 3850 length 15134
CNF 3850 vars 15134 clauses
last 6591 length 27027
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3850, clauses: 15134, status: Unsatisfied, time: 0.403644174s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6128, clauses: 25313, status: Unsatisfied, time: 0.908676628s
CNF 6591 vars 27027 clauses
last 13000 length 55084
last 8104 length 33670
CNF 13000 vars 55084 clauses
CNF 8104 vars 33670 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3345, clauses: 12657
last 9671 length 43987
last 3345 length 12657
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10550, clauses: 42601
CNF 3345 vars 12657 clauses
CNF 9671 vars 43987 clauses
last 10550 length 42601
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3865, clauses: 15167, status: Unsatisfied, time: 1.560984571s
CNF 10550 vars 42601 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3345, clauses: 12657, status: Unsatisfied, time: 0.57011698s
[Info] pool sizes (success) 35509 seen 19670 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15133, clauses: 58630
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20161, clauses: 80266
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3509, clauses: 13186
**************************************************last 15133 length 58630
last 20161 length 80266

last 3509 length 13186
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6259, clauses: 23458
CNF 15133 vars 58630 clauses
CNF 20161 vars 80266 clauses
summaryCNF 3509 vars 13186 clauses

last 6259 length 23458
**************************************************
SRS with 3 rules on 3 letters       looping derivation
from
  [b, c, b, c, b, c, b, c, a, b, c, c, b, b, c, c]
to
  [b, c, b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, c, b, b, c, c]
via 28 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, c, a, a] {- Input 1 -}
  [a, c, c] -> [b, a] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [b, c, b, c, b, c, b, c, a, b, c, c, b, b, c, c], via = [(Step   { rule = 1, position = 8}, [b, c, b, c, b, c, b, c, b, c, a, a, c, c, b, b, c, c]), (Step   { rule = 2, position = 11}, [b, c, b, c, b, c, b, c, b, c, a, b, a, b, b, c, c]), (Step   { rule = 1, position = 12}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, a, b, c, c]), (Step   { rule = 1, position = 15}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, c, a, a, c, c]), (Step   { rule = 2, position = 18}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, c, a, b, a]), (Step   { rule = 0, position = 19}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, c, a, b]), (Step   { rule = 1, position = 17}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, c, b, c, a, a]), (Step   { rule = 0, position = 19}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, c, b, c, a]), (Step   { rule = 0, position = 19}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, c, b, c]), (Step   { rule = 1, position = 14}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, c, a, a, c, b, c]), (Step   { rule = 0, position = 16}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, c, a, c, b, c]), (Step   { rule = 0, position = 16}, [b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, c, c, b, c]), (Step   { rule = 1, position = 10}, [b, c, b, c, b, c, b, c, b, c, b, c, a, a, b, c, b, c, c, b, c]), (Step   { rule = 1, position = 13}, [b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, a, a, c, b, c, c, b, c]), (Step   { rule = 0, position = 15}, [b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, a, c, b, c, c, b, c]), (Step   { rule = 0, position = 15}, [b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, c, b, c, c, b, c]), (Step   { rule = 1, position = 12}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, a, c, c, b, c, c, b, c]), (Step   { rule = 2, position = 15}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, a, b, c, c, b, c]), (Step   { rule = 1, position = 16}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, a, c, c, b, c]), (Step   { rule = 2, position = 19}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, b, c, a, b, a, b, c]), (Step   { rule = 0, position = 18}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, a, b, c]), (Step   { rule = 1, position = 19}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, b, c, a, a, c]), (Step   { rule = 0, position = 21}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, b, c, a, c]), (Step   { rule = 0, position = 21}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, b, c, b, b, c, c]), (Step   { rule = 1, position = 14}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, a, b, c, b, b, c, c]), (Step   { rule = 1, position = 17}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, a, a, c, b, b, c, c]), (Step   { rule = 0, position = 19}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, a, c, b, b, c, c]), (Step   { rule = 0, position = 19}, [b, c, b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, c, b, b, c, c])], to = [b, c, b, c, b, c, b, c, b, c, b, c, b, c, b, c, a, b, c, c, b, b, c, c]}

**************************************************
skeleton: (3,3)\Loop{28}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 6259 vars 23458 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.201939224000
  min duration 0.017401796000
  total durat. 2.633406596000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 90
      , num_strict_rules = 63
      , num_top_rules = 63
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 504}
    , self = 66
    , parent = Nothing
    , duration = 1.179744260000
    , status = Fail
    , start = 2025-09-03 11:14:10.903133082 UTC
    , finish = 2025-09-03 11:14:12.082877342 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 62
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 348}
    , self = 67
    , parent = Nothing
    , duration = 1.201939224000
    , status = Fail
    , start = 2025-09-03 11:14:10.929659864 UTC
    , finish = 2025-09-03 11:14:12.131599088 UTC
    , thread_cap_info = ("ThreadId 118", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.803552276000
  min duration 0.015577235000
  total durat. 2.865625992000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 90
      , num_strict_rules = 63
      , num_top_rules = 63
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 504}
    , self = 69
    , parent = Nothing
    , duration = 1.803552276000
    , status = Fail
    , start = 2025-09-03 11:14:10.924406533 UTC
    , finish = 2025-09-03 11:14:12.727958809 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.035904281000
  min duration 1.035904281000
  total durat. 1.035904281000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 64
    , parent = Nothing
    , duration = 1.035904281000
    , status = Fail
    , start = 2025-09-03 11:14:10.642316753 UTC
    , finish = 2025-09-03 11:14:11.678221034 UTC
    , thread_cap_info = ("ThreadId 76", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.927671229000
  min duration 0.744140528000
  total durat. 2.671811757000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 31}
    , self = 70
    , parent = Nothing
    , duration = 1.927671229000
    , status = Fail
    , start = 2025-09-03 11:14:10.834710994 UTC
    , finish = 2025-09-03 11:14:12.762382223 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.228580927000
  min duration 1.228580927000
  total durat. 1.228580927000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 71
    , parent = Nothing
    , duration = 1.228580927000
    , status = Fail
    , start = 2025-09-03 11:14:11.67373388 UTC
    , finish = 2025-09-03 11:14:12.902314807 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.671520437000
  min duration 1.671520437000
  total durat. 1.671520437000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 68
    , parent = Nothing
    , duration = 1.671520437000
    , status = Fail
    , start = 2025-09-03 11:14:10.66229613 UTC
    , finish = 2025-09-03 11:14:12.333816567 UTC
    , thread_cap_info = ("ThreadId 77", 3, False)}
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 162} , self = 45 , parent = Nothing , duration = 0.207250673000 , status
F                = Fail , start = 2025-09-03 11:14:10.612187687 UTC , finish = 2025-09-03
F                11:14:10.81943836 UTC , thread_cap_info = ("ThreadId 55", 0, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 162} , self = 51 , parent = Nothing , duration = 0.221382330000 , status
| F              = Fail , start = 2025-09-03 11:14:10.612193514 UTC , finish = 2025-09-03
| F              11:14:10.833575844 UTC , thread_cap_info = ("ThreadId 57", 0, False)}
| F              
| | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F            = 4 , total_length = 31} , self = 59 , parent = Nothing , duration = 0.256761181000
| | F            , status = Fail , start = 2025-09-03 11:14:10.638690117 UTC , finish =
| | F            2025-09-03 11:14:10.895451298 UTC , thread_cap_info = ("ThreadId 75", 1,
| | F            False)}
| | F            
| | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F          = 4 , total_length = 31} , self = 64 , parent = Nothing , duration = 1.035904281000
| | | F          , status = Fail , start = 2025-09-03 11:14:10.642316753 UTC , finish =
| | | F          2025-09-03 11:14:11.678221034 UTC , thread_cap_info = ("ThreadId 76", 1,
| | | F          False)}
| | | F          
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | F        = 5 , total_length = 31} , self = 53 , parent = Nothing , duration = 0.192273766000
| | | | F        , status = Fail , start = 2025-09-03 11:14:10.642412565 UTC , finish =
| | | | F        2025-09-03 11:14:10.834686331 UTC , thread_cap_info = ("ThreadId 79", 2,
| | | | F        False)}
| | | | F        
| | | | | F      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | F      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | F      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | F      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | F      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | F      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | F      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | F      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | F      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | F      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | F      = 12} , self = 68 , parent = Nothing , duration = 1.671520437000 , status
| | | | | F      = Fail , start = 2025-09-03 11:14:10.66229613 UTC , finish = 2025-09-03
| | | | | F      11:14:12.333816567 UTC , thread_cap_info = ("ThreadId 77", 3, False)}
| | | | | F      
F | | | | |      
  F | | | |      
    | | F |      
F   | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F   | |   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F   | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F   | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F   | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F   | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
F   | |   |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F   | |   |      = 5 , total_length = 31} , self = 70 , parent = Nothing , duration = 1.927671229000
F   | |   |      , status = Fail , start = 2025-09-03 11:14:10.834710994 UTC , finish =
F   | |   |      2025-09-03 11:14:12.762382223 UTC , thread_cap_info = ("ThreadId 107",
F   | |   |      2, False)}
F   | |   |      
|   F |   |      
| F   |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F   |   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F   |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F   |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| F   |   |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F   |   |      = 4 , total_length = 31} , self = 63 , parent = Nothing , duration = 0.744140528000
| F   |   |      , status = Fail , start = 2025-09-03 11:14:10.899379204 UTC , finish =
| F   |   |      2025-09-03 11:14:11.643519732 UTC , thread_cap_info = ("ThreadId 113",
| F   |   |      1, False)}
| F   |   |      
| | F |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | F |   |      = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 17 ,
| | F |   |      total_length = 504} , self = 66 , parent = Nothing , duration = 1.179744260000
| | F |   |      , status = Fail , start = 2025-09-03 11:14:10.903133082 UTC , finish =
| | F |   |      2025-09-03 11:14:12.082877342 UTC , thread_cap_info = ("ThreadId 114",
| | F |   |      1, False)}
| | F |   |      
| | | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | F |      = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | F |      total_length = 504} , self = 69 , parent = Nothing , duration = 1.803552276000
| | | | F |      , status = Fail , start = 2025-09-03 11:14:10.924406533 UTC , finish =
| | | | F |      2025-09-03 11:14:12.727958809 UTC , thread_cap_info = ("ThreadId 115",
| | | | F |      1, False)}
| | | | F |      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 62 , num_strict_rules
| | | | | | F    = 35 , num_top_rules = 35 , num_weak_rules = 27 , alphabet_size = 12 ,
| | | | | | F    total_length = 348} , self = 67 , parent = Nothing , duration = 1.201939224000
| | | | | | F    , status = Fail , start = 2025-09-03 11:14:10.929659864 UTC , finish =
| | | | | | F    2025-09-03 11:14:12.131599088 UTC , thread_cap_info = ("ThreadId 118",
| | | | | | F    2, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 62 , num_strict_rules
| | | | | | | F  = 35 , num_top_rules = 35 , num_weak_rules = 27 , alphabet_size = 12 ,
| | | | | | | F  total_length = 348} , self = 65 , parent = Nothing , duration = 0.783262850000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:14:10.944525527 UTC , finish =
| | | | | | | F  2025-09-03 11:14:11.727788377 UTC , thread_cap_info = ("ThreadId 119",
| | | | | | | F  2, False)}
| | | | | | | F  
| F | | | | | |  
| F | | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F | | | | | |  = 4 , total_length = 31} , self = 71 , parent = Nothing , duration = 1.228580927000
| F | | | | | |  , status = Fail , start = 2025-09-03 11:14:11.67373388 UTC , finish = 2025-09-03
| F | | | | | |  11:14:12.902314807 UTC , thread_cap_info = ("ThreadId 122", 1, False)}
| F | | | | | |  
| | | F | | | |  
| | |   | | | F  
| | F   | | |    
| |     | | F    
| |     | F      
| | S   |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | S   |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | S   |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | S   |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | S   |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | S   |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | S   |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | S   |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | S   |        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | S   |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | S   |        = 12} , self = 72 , parent = Nothing , duration = 0.588728957000 , status
| | S   |        = Success , start = 2025-09-03 11:14:12.333836057 UTC , finish = 2025-09-03
| | S   |        11:14:12.922565014 UTC , thread_cap_info = ("ThreadId 131", 3, False)}
| | S   |        
| | |   F        
F | |            
  F |            
    S            
