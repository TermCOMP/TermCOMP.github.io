last 718 length 2897
last 640 length 2768
CNF 718 vars 2897 clauses
CNF 640 vars 2768 clauses
last 550 length 2221
last 662 length 2612
CNF 550 vars 2221 clauses
CNF 662 vars 2612 clauses
last 4994 length 24628
CNF 4994 vars 24628 clauses
last 4344 length 19630
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2983, clauses: 10927
last 2983 length 10927
CNF 4344 vars 19630 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3085, clauses: 11281
last 3085 length 11281
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6930, clauses: 28483
last 6930 length 28483
CNF 2983 vars 10927 clauses
CNF 6930 vars 28483 clauses
CNF 3085 vars 11281 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6930, clauses: 28483, status: Satisfied, time: 0.071660954s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7224, clauses: 29733
last 7224 length 29733
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2983, clauses: 10927, status: Unsatisfied, time: 0.135504575s
CNF 7224 vars 29733 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3085, clauses: 11281, status: Unsatisfied, time: 0.160196567s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7224, clauses: 29733, status: Satisfied, time: 0.064051782s
last 633 length 2747
last 672 length 2727
CNF 633 vars 2747 clauses
CNF 672 vars 2727 clauses
last 615 length 2404
last 566 length 2297
CNF 566 vars 2297 clauses
CNF 615 vars 2404 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 10502
last 2877 length 10502
CNF 2877 vars 10502 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6884, clauses: 28307
last 6884 length 28307
CNF 6884 vars 28307 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3096, clauses: 11246
last 3096 length 11246
CNF 3096 vars 11246 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 10502, status: Unsatisfied, time: 0.145517711s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7763, clauses: 32038
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3096, clauses: 11246, status: Unsatisfied, time: 0.089659115s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6884, clauses: 28307, status: Satisfied, time: 0.166416228s
last 7763 length 32038
CNF 7763 vars 32038 clauses
last 15903 length 67909
last 11924 length 56023
CNF 15903 vars 67909 clauses
CNF 11924 vars 56023 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4899, clauses: 19355
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7763, clauses: 32038, status: Satisfied, time: 0.139449004s
last 391 length 1622
last 465 length 2074
last 4899 length 19355
CNF 465 vars 2074 clauses
CNF 391 vars 1622 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1941, clauses: 6878
last 1941 length 6878
CNF 1941 vars 6878 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 8 strict rules and 3 weak rules on 6 letters       EDG
SRS with 8 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 7 strict rules and 3 weak rules on 6 letters       EDG
SRS with 7 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 3 weak rules on 6 letters       weights
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 2 strict rules and 3 weak rules on 5 letters       Usable
SRS with 2 rules on 4 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [b, c] {- Input 0 -}
  [b, b] -> [a, c, c, c] {- Input 1 -}
  [c, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, b] {- Mirror (Input 0) -}
  [b, b] -> [c, c, c, a] {- Mirror (Input 1) -}
  [c, c] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A -1A 0A \
        | 2A  -   2A |
        \ -   -   0A / )
  ( b
  , Wk  / 1A -2A 1A \
        | -  -   1A |
        \ -  -   0A / )
  ( c
  , Wk  / 0A 0A -  \
        | -  -  1A |
        \ -  -  0A / )
  ( a#
  , Wk  / -1A -1A 0A \
        | -   -   -  |
        \ -   -   0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
  ( c#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A 2A 2A \
        | -2A -  -  |
        \ -   -  0A / )
  ( b
  , Wk  / -   0A 0A \
        | -2A 1A 1A |
        \ -   -  0A / )
  ( c
  , Wk  / -  0A  1A \
        | 0A -1A -  |
        \ -  -   0A / )
  ( a#
  , Wk  / -2A - 1A \
        | -   - -  |
        \ -   - 0A / )
  ( b#
  , Wk  / - 0A 0A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / -1A -1A 1A \
        | -   -   -  |
        \ -   -   0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b] |-> [c#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b] |-> [c#, c, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  remove un-usable
    SRS
      [a, a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
      [b, b] ->= [c, c, c, a] {- DP Nontop (Mirror (Input 1)) -}
      [c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee\EDG(8/3,6)\Matrix{\ArcticBZ}{3}\EDG(7/3,6)\Matrix{\ArcticBZ}{3}(6/3,6)\Weight\EDG(2/3,5)\Usable(2,4)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.331667348000
  min duration 0.224602056000
  total durat. 1.124113985000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.308575057000
  min duration 0.211584013000
  total durat. 1.024344878000
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                = 14} , self = 77 , parent = Nothing , duration = 0.464145631000 , status
F                = Fail , start = 2025-09-03 10:50:29.8521015 UTC , finish = 2025-09-03
F                10:50:30.316247131 UTC , thread_cap_info = ("ThreadId 42", 0, False)}
F                
| F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F              = 14} , self = 82 , parent = Nothing , duration = 0.700092686000 , status
| F              = Fail , start = 2025-09-03 10:50:29.860051348 UTC , finish = 2025-09-03
| F              10:50:30.560144034 UTC , thread_cap_info = ("ThreadId 34", 1, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 180} , self = 54 , parent = Nothing , duration = 0.205141632000 , status
| | F            = Fail , start = 2025-09-03 10:50:29.868126684 UTC , finish = 2025-09-03
| | F            10:50:30.073268316 UTC , thread_cap_info = ("ThreadId 70", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F          = 180} , self = 53 , parent = Nothing , duration = 0.191798884000 , status
| | | F          = Fail , start = 2025-09-03 10:50:29.868149222 UTC , finish = 2025-09-03
| | | F          10:50:30.059948106 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | | F          
| | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | S        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 , alphabet_size
| | | | S        = 6 , total_length = 46} , self = 58 , parent = Nothing , duration = 0.240386305000
| | | | S        , status = Success , start = 2025-09-03 10:50:29.930658228 UTC , finish
| | | | S        = 2025-09-03 10:50:30.171044533 UTC , thread_cap_info = ("ThreadId 83",
| | | | S        3, False)}
| | | | S        
| | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F      = 11 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 ,
| | | | | F      alphabet_size = 6 , total_length = 46} , self = 62 , parent = Nothing ,
| | | | | F      duration = 0.266682697000 , status = Fail , start = 2025-09-03 10:50:29.93362126
| | | | | F      UTC , finish = 2025-09-03 10:50:30.200303957 UTC , thread_cap_info = ("ThreadId
| | | | | F      82", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 11 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 ,
| | | | | | F    alphabet_size = 6 , total_length = 46} , self = 64 , parent = Nothing ,
| | | | | | F    duration = 0.211584013000 , status = Fail , start = 2025-09-03 10:50:30.030932743
| | | | | | F    UTC , finish = 2025-09-03 10:50:30.242516756 UTC , thread_cap_info = ("ThreadId
| | | | | | F    92", 3, False)}
| | | | | | F    
| | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | S  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 3 , alphabet_size
| | | | | | | S  = 6 , total_length = 46} , self = 67 , parent = Nothing , duration = 0.224602056000
| | | | | | | S  , status = Success , start = 2025-09-03 10:50:30.041119392 UTC , finish
| | | | | | | S  = 2025-09-03 10:50:30.265721448 UTC , thread_cap_info = ("ThreadId 93",
| | | | | | | S  3, False)}
| | | | | | | S  
| | | F | | | |  
| | F   | | | |  
| |     S | | |  
| |       F | |  
| |         F |  
| |           S  
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F            = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F            = 43} , self = 81 , parent = Nothing , duration = 0.105611331000 , status
| | F            = Fail , start = 2025-09-03 10:50:30.316124778 UTC , finish = 2025-09-03
| | F            10:50:30.421736109 UTC , thread_cap_info = ("ThreadId 130", 3, False)}
| | F            
F | |            
E | |            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | |            , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | |            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | |            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | |            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | |            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | |            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | |            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | |            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E | |            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E | |            Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1941, clauses: 6878, status: Unsatisfied, time: 0.062191657s
= 14} , self = 101 , parent = Nothing , duration = 0.523232923000 , status
E | |            = Except "AsyncCancelled" , start = 2025-09-03 10:50:30.316258323 UTC ,
E | |            finish = 2025-09-03 10:50:30.839491246 UTC , thread_cap_info = ("ThreadId
E | |            132", 0, False)}
E | |            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| | | F          alphabet_size = 6 , total_length = 43} , self = 83 , parent = Nothing ,
| | | F          duration = 0.308575057000 , status = Fail , start = 2025-09-03 10:50:30.332543784
| | | F          UTC , finish = 2025-09-03 10:50:30.641118841 UTC , thread_cap_info = ("ThreadId
| | | F          136", 3, False)}
| | | F          
| | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | S        , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | | | S        = 6 , total_length = 43} , self = 85 , parent = Nothing , duration = 0.327458276000
| | | | S        , status = Success , start = 2025-09-03 10:50:30.332552383 UTC , finish
| | | | S        = 2025-09-03 10:50:30.660010659 UTC , thread_cap_info = ("ThreadId 137",
| | | | S        3, False)}
| | | | S        
| | F | |        
| | F | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |        = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| | F | |        alphabet_size = 6 , total_length = 43} , self = 84 , parent = Nothing ,
| | F | |        duration = 0.237503111000 , status = Fail , start = 2025-09-03 10:50:30.421754737
| | F | |        UTC , finish = 2025-09-03 10:50:30.659257848 UTC , thread_cap_info = ("ThreadId
| | F | |        138", 3, False)}
| | F | |        
| | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | S      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | | | | S      = 6 , total_length = 43} , self = 92 , parent = Nothing , duration = 0.331667348000
| | | | | S      , status = Success , start = 2025-09-03 10:50:30.474260636 UTC , finish
| | | | | S      = 2025-09-03 10:50:30.805927984 UTC , thread_cap_info = ("ThreadId 140",
| | | | | S      3, False)}
| | | | | S      
| F | | | |      
|   | F | |      
| E |   | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E |   | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E |   | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E |   | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E |   | |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| E |   | |      = 6 , total_length = 43} , self = 87 , parent = Nothing , duration = 0.139152899000
| E |   | |      , status = Except "AsyncCancelled" , start = 2025-09-03 10:50:30.657938522
| E |   | |      UTC , finish = 2025-09-03 10:50:30.797091421 UTC , thread_cap_info = ("ThreadId
| E |   | |      144", 3, False)}
| E |   | |      
| | F   | |      
| |     S |      
| | E     |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E     |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E     |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E     |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E     |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E     |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E     |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | E     |      = 6 , total_length = 43} , self = 94 , parent = Nothing , duration = 0.137339723000
| | E     |      , status = Except "AsyncCancelled" , start = 2025-09-03 10:50:30.670733523
| | E     |      UTC , finish = 2025-09-03 10:50:30.808073246 UTC , thread_cap_info = ("ThreadId
| | E     |      147", 3, False)}
| | E     |      
| E |     |      
|   |     S      
|   E            
E                
last 11963 length 55997
