last 605 length 2433
last 590 length 2379
CNF 605 vars 2433 clauses
last 741 length 3168
last 734 length 2989
CNF 590 vars 2379 clauses
CNF 741 vars 3168 clauses
CNF 734 vars 2989 clauses
last 4044 length 18112
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2339, clauses: 8376
last 4427 length 22391
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2759, clauses: 9954
CNF 4044 vars 18112 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7676, clauses: 31923
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8095, clauses: 33575
last 2339 length 8376
CNF 4427 vars 22391 clauses
last 12793 length 54838
last 9033 length 41909
last 2759 length 9954
last 11582 length 49442
last 7676 length 31923
last 8095 length 33575
CNF 2339 vars 8376 clauses
last 10048 length 47478
CNF 2759 vars 9954 clauses
CNF 12793 vars 54838 clauses
CNF 7676 vars 31923 clauses
CNF 9033 vars 41909 clauses
CNF 8095 vars 33575 clauses
CNF 11582 vars 49442 clauses
CNF 10048 vars 47478 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2339, clauses: 8376, status: Unsatisfied, time: 0.393402136s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2759, clauses: 9954, status: Unsatisfied, time: 0.165011939s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7676, clauses: 31923, status: Unsatisfied, time: 0.289732925s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8095, clauses: 33575, status: Unsatisfied, time: 0.493020331s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4843, clauses: 19478
last 4843 length 19478
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3832, clauses: 14399
last 3832 length 14399
CNF 4843 vars 19478 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4502, clauses: 17140
CNF 3832 vars 14399 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5172, clauses: 20721
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20227, clauses: 79435
last 4502 length 17140
last 5172 length 20721
last 20227 length 79435
CNF 4502 vars 17140 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4502, clauses: 17140, status: Unsatisfied, time: 0.231917469s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3832, clauses: 14399, status: Unsatisfied, time: 0.44051316s
CNF 5172 vars 20721 clauses
CNF 20227 vars 79435 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4843, clauses: 19478, status: Unsatisfied, time: 0.483106397s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14244, clauses: 59491
last 14244 length 59491
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5172, clauses: 20721, status: Unsatisfied, time: 0.69689297s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20227, clauses: 79435, status: Satisfied, time: 0.697215398s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22008, clauses: 86804
last 22008 length 86804
CNF 14244 vars 59491 clauses
CNF 22008 vars 86804 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7163, clauses: 26666
last 7163 length 26666
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13687, clauses: 57320
last 13687 length 57320
CNF 7163 vars 26666 clauses
CNF 13687 vars 57320 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7163, clauses: 26666, status: Unsatisfied, time: 0.569509954s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8376, clauses: 31556
last 8376 length 31556
CNF 8376 vars 31556 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22008, clauses: 86804, status: Satisfied, time: 1.167441917s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8376, clauses: 31556, status: Unsatisfied, time: 0.556740309s
last 4905 length 22454
last 5669 length 28796
CNF 4905 vars 22454 clauses
CNF 5669 vars 28796 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16780, clauses: 78179
last 16780 length 78179
CNF 16780 vars 78179 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17263, clauses: 80267
last 17263 length 80267
last 5368 length 27615
CNF 17263 vars 80267 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9449, clauses: 34662
last 9449 length 34662
last 4862 length 21979
CNF 5368 vars 27615 clauses
CNF 9449 vars 34662 clauses
CNF 4862 vars 21979 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10036, clauses: 36955
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17263, clauses: 80267, status: Satisfied, time: 1.790042551s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9449, clauses: 34662, status: Satisfied, time: 1.44837091s
last 10036 length 36955
CNF 10036 vars 36955 clauses
last 725 length 3110
last 703 length 2872
CNF 703 vars 2872 clauses
CNF 725 vars 3110 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2653, clauses: 9529
last 2653 length 9529
CNF 2653 vars 9529 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2653, clauses: 9529, status: Unsatisfied, time: 0.126243717s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8049, clauses: 33399
last 8049 length 33399
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5097, clauses: 20435
last 5097 length 20435
CNF 8049 vars 33399 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10036, clauses: 36955, status: Satisfied, time: 0.81084892s
CNF 5097 vars 20435 clauses
last 4905 length 22454
CNF 4905 vars 22454 clauses
last 5669 length 28796
CNF 5669 vars 28796 clauses
last 5627 length 28751
last 5373 length 24015
CNF 5627 vars 28751 clauses
CNF 5373 vars 24015 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5097, clauses: 20435, status: Unsatisfied, time: 0.799441882s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8049, clauses: 33399, status: Unsatisfied, time: 0.987854126s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9449, clauses: 34662
last 9449 length 34662
CNF 9449 vars 34662 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4333, clauses: 16378
last 4333 length 16378
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9449, clauses: 34662, status: Satisfied, time: 0.37532593s
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       mirror
SRS with 36 rules on 9 letters       DP
SRS with 75 strict rules and 36 weak rules on 18 letters       weights
SRS with 64 strict rules and 36 weak rules on 16 letters       EDG
SRS with 64 strict rules and 36 weak rules on 16 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 13 strict rules and 36 weak rules on 15 letters       weights
SRS with 8 strict rules and 36 weak rules on 13 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 36 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 36 weak rules on 9 letters       EDG

  2 SRS with 4 strict rules and 36 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 36 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, c, b, a] {- Input 1 -}
  [b] -> [a] {- Input 2 -}
  [c, c, c] -> [] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [ [a, b] , [b, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [ [a, b] , [b, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [ [a, b] , [b, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [ [b, b] , [b, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [ [b, b] , [b, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [ [b, b] , [b, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [ [c, b] , [b, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [ [c, b] , [b, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [ [c, b] , [b, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, a], [a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, a], [a, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a], [a, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, a], [a, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, a], [a, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, c], [c, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, c], [c, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, c], [c, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, c], [c, c], [c, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, c], [c, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, c], [c, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, c], [c, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, c], [c, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, c], [c, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [a, a]] -> [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [a, a]] -> [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a]] -> [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a]] -> [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [b, a]] -> [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [c, a]] -> [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [ [a, a] , [a, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [a, b]] -> [ [a, b] , [a, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [a, b]] -> [ [a, c] , [a, a] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b]] -> [ [a, a] , [b, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b]] -> [ [a, b] , [b, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b]] -> [ [a, c] , [b, a] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [c, b]] -> [ [a, a] , [c, a] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [c, b]] -> [ [a, b] , [c, a] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [c, b]] -> [ [a, c] , [c, a] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [c, c], [a, c]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c], [a, c]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c], [a, c]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [c, c], [b, c]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c], [b, c]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c], [b, c]] -> [ [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [c, c], [c, c]] -> [ [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c], [c, c]] -> [ [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c], [c, c]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10798, clauses: 40117
last 10798 length 40117

CNF 4333 vars 16378 clauses
  CNF 10798 vars 40117 clauses
[[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b]] |-> [ [a, c]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [a, c]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [a, c]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [c, c], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b]] |-> [ [a, c]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [a, c]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [a, c]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [a, c]# , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, b]#, [c, c], [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [a, c]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [a, c]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 6A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 6A 6A 9A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 9A 10A 10A - \
        | 9A 10A 10A - |
        | 9A 10A 10A - |
        \ -  -   -   - / )
  ( [a, c]#
  , Wk  / 8A 11A 11A - \
        | 8A 11A 11A - |
        | 8A 11A 11A - |
        \ -  -   -   - / )
  ( [b, a]#
  , Wk  / 11A 13A 13A - \
        | 11A 13A 13A - |
        | 11A 13A 13A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 11A 14A 14A - \
        | 11A 14A 14A - |
        | 11A 14A 14A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 7A 7A 7A - \
        | 7A 7A 7A - |
        | 7A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 2/1)
  ([a, c]#, 0/1)
  ([b, a]#, 1/1)
  ([b, b]#, 2/1)
  ([b, c]#, 0/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, b]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 6A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 3A 5A 6A - \
        | 3A 5A 6A - |
        | 3A 5A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 6A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4333, clauses: 16378, status: Unsatisfied, time: 0.378124701s

  ( [b, b]
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
  ( [b, c]#
  , Wk  / 3A 5A 6A - \
        | 3A 5A 6A - |
        | 3A 5A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [a, a] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [a, b] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [a, c] , [b, a] , [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}\Mirror(36,9)\Deepee(75/36,18)\Weight\EDG(64/36,16)\Matrix{\Arctic}{3}(13/36,15)\Weight(8/36,13)\EDG[(4/36,11)\Matrix{\Arctic}{3}(0/36,9)\EDG[],(4/36,11)\Matrix{\Arctic}{3}(0/36,9)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14147, clauses: 59096
last 14147 length 59096
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10798, clauses: 40117, status: Satisfied, time: 0.370643167s
CNF 14147 vars 59096 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.205339424000
  min duration 0.029267476000
  total durat. 5.641144022000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 207}
    , self = 84
    , parent = Nothing
    , duration = 1.184860422000
    , status = Fail
    , start = 2025-09-03 11:15:09.72822456 UTC
    , finish = 2025-09-03 11:15:10.913084982 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 215}
    , self = 92
    , parent = Nothing
    , duration = 1.205339424000
    , status = Fail
    , start = 2025-09-03 11:15:11.04484749 UTC
    , finish = 2025-09-03 11:15:12.250186914 UTC
    , thread_cap_info = ("ThreadId 159", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.204832848000
  min duration 0.025722082000
  total durat. 5.453294551000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 215}
    , self = 91
    , parent = Nothing
    , duration = 1.062616918000
    , status = Fail
    , start = 2025-09-03 11:15:11.058218012 UTC
    , finish = 2025-09-03 11:15:12.12083493 UTC
    , thread_cap_info = ("ThreadId 160", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 207}
    , self = 87
    , parent = Nothing
    , duration = 1.204832848000
    , status = Fail
    , start = 2025-09-03 11:15:09.733317231 UTC
    , finish = 2025-09-03 11:15:10.938150079 UTC
    , thread_cap_info = ("ThreadId 147", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.399763539000
  min duration 0.944501606000
  total durat. 3.352875466000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 40}
    , self = 67
    , parent = Nothing
    , duration = 1.008610321000
    , status = Fail
    , start = 2025-09-03 11:15:07.326432626 UTC
    , finish = 2025-09-03 11:15:08.335042947 UTC
    , thread_cap_info = ("ThreadId 85", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 44}
    , self = 122
    , parent = Nothing
    , duration = 1.399763539000
    , status = Fail
    , start = 2025-09-03 11:15:13.683367511 UTC
    , finish = 2025-09-03 11:15:15.08313105 UTC
    , thread_cap_info = ("ThreadId 179", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 2.694473040000
  min duration 1.039626199000
  total durat. 9.789588210000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 207}
    , self = 125
    , parent = Nothing
    , duration = 1.039626199000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:15:14.513617817 UTC
    , finish = 2025-09-03 11:15:15.553244016 UTC
    , thread_cap_info = ("ThreadId 198", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 100
      , num_strict_rules = 64
      , num_top_rules = 64
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 508}
    , self = 75
    , parent = Nothing
    , duration = 1.400823938000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:15:08.153541757 UTC
    , finish = 2025-09-03 11:15:09.554365695 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 215}
    , self = 112
    , parent = Nothing
    , duration = 2.035184917000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:15:12.272954406 UTC
    , finish = 2025-09-03 11:15:14.308139323 UTC
    , thread_cap_info = ("ThreadId 167", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 110
      , num_strict_rules = 74
      , num_top_rules = 74
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 558}
    , self = 85
    , parent = Nothing
    , duration = 2.619480116000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:15:08.293618452 UTC
    , finish = 2025-09-03 11:15:10.913098568 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 207}
    , self = 102
    , parent = Nothing
    , duration = 2.694473040000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:15:10.95730019 UTC
    , finish = 2025-09-03 11:15:13.65177323 UTC
    , thread_cap_info = ("ThreadId 157", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.699926261000
  min duration 2.699926261000
  total durat. 2.699926261000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 47}
    , self = 93
    , parent = Nothing
    , duration = 2.699926261000
    , status = Success
    , start = 2025-09-03 11:15:10.780938798 UTC
    , finish = 2025-09-03 11:15:13.480865059 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.079454644000
  min duration 1.004983506000
  total durat. 3.125564454000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 44}
    , self = 120
    , parent = Nothing
    , duration = 1.004983506000
    , status = Fail
    , start = 2025-09-03 11:15:13.928208465 UTC
    , finish = 2025-09-03 11:15:14.933191971 UTC
    , thread_cap_info = ("ThreadId 186", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 40}
    , self = 71
    , parent = Nothing
    , duration = 1.041126304000
    , status = Fail
    , start = 2025-09-03 11:15:08.174621938 UTC
    , finish = 2025-09-03 11:15:09.215748242 UTC
    , thread_cap_info = ("ThreadId 124", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 47}
    , self = 72
    , parent = Nothing
    , duration = 1.079454644000
    , status = Fail
    , start = 2025-09-03 11:15:08.354291721 UTC
    , finish = 2025-09-03 11:15:09.433746365 UTC
    , thread_cap_info = ("ThreadId 126", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.597145029000
  min duration 4.597145029000
  total durat. 4.597145029000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 47}
    , self = 97
    , parent = Nothing
    , duration = 4.597145029000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:15:08.966742948 UTC
    , finish = 2025-09-03 11:15:13.563887977 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.788672635000
  min duration 1.134739108000
  total durat. 10.113953869000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 207}
    , self = 123
    , parent = Nothing
    , duration = 1.134739108000
    , status = Success
    , start = 2025-09-03 11:15:14.384593571 UTC
    , finish = 2025-09-03 11:15:15.519332679 UTC
    , thread_cap_info = ("ThreadId 197", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 100
      , num_strict_rules = 64
      , num_top_rules = 64
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 508}
    , self = 73
    , parent = Nothing
    , duration = 1.445803232000
    , status = Success
    , start = 2025-09-03 11:15:07.998204561 UTC
    , finish = 2025-09-03 11:15:09.444007793 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 215}
    , self = 110
    , parent = Nothing
    , duration = 2.132828744000
    , status = Success
    , start = 2025-09-03 11:15:12.120876984 UTC
    , finish = 2025-09-03 11:15:14.253705728 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 36
      , alphabet_size = 11
      , total_length = 207}
    , self = 95
    , parent = Nothing
    , duration = 2.611910150000
    , status = Success
    , start = 2025-09-03 11:15:10.914671028 UTC
    , finish = 2025-09-03 11:15:13.526581178 UTC
    , thread_cap_info = ("ThreadId 154", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 110
      , num_strict_rules = 74
      , num_top_rules = 74
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 558}
    , self = 82
    , parent = Nothing
    , duration = 2.788672635000
    , status = Success
    , start = 2025-09-03 11:15:08.008053631 UTC
    , finish = 2025-09-03 11:15:10.796726266 UTC
    , thread_cap_info = ("ThreadId 122", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.920791505000
  min duration 0.208069960000
  total durat. 1.970626257000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.561759281000
  min duration 0.485796166000
  total durat. 1.047555447000
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.205678912000
  min duration 0.880065668000
  total durat. 2.085744580000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 47}
    , self = 81
    , parent = Nothing
    , duration = 1.205678912000
    , status = Fail
    , start = 2025-09-03 11:15:09.554388195 UTC
    , finish = 2025-09-03 11:15:10.760067107 UTC
    , thread_cap_info = ("ThreadId 140", 0, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
F                    = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 180} , self = 60 , parent = Nothing , duration = 0.619393603000 , status
F                    = Fail , start = 2025-09-03 11:15:07.262140053 UTC , finish = 2025-09-03
F                    11:15:07.881533656 UTC , thread_cap_info = ("ThreadId 57", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 180} , self = 59 , parent = Nothing , duration = 0.602238332000 , status
| F                  = Fail , start = 2025-09-03 11:15:07.262144792 UTC , finish = 2025-09-03
| F                  11:15:07.864383124 UTC , thread_cap_info = ("ThreadId 55", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | F                = 47} , self = 56 , parent = Nothing , duration = 0.120087805000 , status
| | F                = Fail , start = 2025-09-03 11:15:07.29137887 UTC , finish = 2025-09-03
| | F                11:15:07.411466675 UTC , thread_cap_info = ("ThreadId 80", 0, False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | F              alphabet_size = 4 , total_length = 40} , self = 64 , parent = Nothing ,
| | | F              duration = 0.841764792000 , status = Fail , start = 2025-09-03 11:15:07.31174911
| | | F              UTC , finish = 2025-09-03 11:15:08.153513902 UTC , thread_cap_info = ("ThreadId
| | | F              83", 0, False)}
| | | F              
| | | | F            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | F            = 4 , total_length = 40} , self = 67 , parent = Nothing , duration = 1.008610321000
| | | | F            , status = Fail , start = 2025-09-03 11:15:07.326432626 UTC , finish =
| | | | F            2025-09-03 11:15:08.335042947 UTC , thread_cap_info = ("ThreadId 85", 0,
| | | | F            False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 100 , num_strict_rules
| | | | | F          = 64 , num_top_rules = 64 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | F          total_length = 508} , self = 63 , parent = Nothing , duration = 0.769238476000
| | | | | F          , status = Fail , start = 2025-09-03 11:15:07.367620751 UTC , finish =
| | | | | F          2025-09-03 11:15:08.136859227 UTC , thread_cap_info = ("ThreadId 102",
| | | | | F          3, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 100 , num_strict_rules
| | | | | | F        = 64 , num_top_rules = 64 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | | | F        total_length = 508} , self = 61 , parent = Nothing , duration = 0.624949517000
| | | | | | F        , status = Fail , start = 2025-09-03 11:15:07.373208166 UTC , finish =
| | | | | | F        2025-09-03 11:15:07.998157683 UTC , thread_cap_info = ("ThreadId 103",
| | | | | | F        3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | | F      alphabet_size = 5 , total_length = 47} , self = 66 , parent = Nothing ,
| | | | | | | F      duration = 0.920791505000 , status = Fail , start = 2025-09-03 11:15:07.373843537
| | | | | | | F      UTC , finish = 2025-09-03 11:15:08.294635042 UTC , thread_cap_info = ("ThreadId
| | | | | | | F      104", 0, False)}
| | | | | | | F      
| | F | | | | |      
| | F | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | F | | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | F | | | | |      = 5 , total_length = 47} , self = 68 , parent = Nothing , duration = 0.944501606000
| | F | | | | |      , status = Fail , start = 2025-09-03 11:15:07.413069807 UTC , finish =
| | F | | | | |      2025-09-03 11:15:08.357571413 UTC , thread_cap_info = ("ThreadId 105",
| | F | | | | |      0, False)}
| | F | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 110 , num_strict_rules
| | | | | | | | F    = 74 , num_top_rules = 74 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | F    total_length = 558} , self = 62 , parent = Nothing , duration = 0.554179654000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:15:07.453850156 UTC , finish =
| | | | | | | | F    2025-09-03 11:15:08.00802981 UTC , thread_cap_info = ("ThreadId 108", 3,
| | | | | | | | F    False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 110 , num_strict_rules
| | | | | | | | | F  = 74 , num_top_rules = 74 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | | F  total_length = 558} , self = 65 , parent = Nothing , duration = 0.706161662000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:15:07.473927179 UTC , finish =
| | | | | | | | | F  2025-09-03 11:15:08.180088841 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| F | | | | | | | |  
F   | | | | | | | |  
    | | | | F | | |  
S   | | | |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | | |   | | |  = 100 , num_strict_rules = 64 , num_top_rules = 64 , num_weak_rules = 36
S   | | | |   | | |  , alphabet_size = 16 , total_length = 508} , self = 73 , parent = Nothing
S   | | | |   | | |  , duration = 1.445803232000 , status = Success , start = 2025-09-03 11:15:07.998204561
S   | | | |   | | |  UTC , finish = 2025-09-03 11:15:09.444007793 UTC , thread_cap_info = ("ThreadId
S   | | | |   | | |  121", 3, False)}
S   | | | |   | | |  
|   | | | |   | F |  
| S | | | |   |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |   |   |  = 110 , num_strict_rules = 74 , num_top_rules = 74 , num_weak_rules = 36
| S | | | |   |   |  , alphabet_size = 17 , total_length = 558} , self = 82 , parent = Nothing
| S | | | |   |   |  , duration = 2.788672635000 , status = Success , start = 2025-09-03 11:15:08.008053631
| S | | | |   |   |  UTC , finish = 2025-09-03 11:15:10.796726266 UTC , thread_cap_info = ("ThreadId
| S | | | |   |   |  122", 3, False)}
| S | | | |   |   |  
| | | | | F   |   |  
| | | F |     |   |  
| | | E |     |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |     |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |     |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |     |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |     |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |     |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 100
| | | E |     |   |  , num_strict_rules = 64 , num_top_rules = 64 , num_weak_rules = 36 , alphabet_size
| | | E |     |   |  = 16 , total_length = 508} , self = 75 , parent = Nothing , duration =
| | | E |     |   |  1.400823938000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E |     |   |  11:15:08.153541757 UTC , finish = 2025-09-03 11:15:09.554365695 UTC , thread_cap_info
| | | E |     |   |  = ("ThreadId 123", 3, False)}
| | | E |     |   |  
| | | | | F   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F   |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | F   |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | F   |   |  = 4 , total_length = 40} , self = 71 , parent = Nothing , duration = 1.041126304000
| | | | | F   |   |  , status = Fail , start = 2025-09-03 11:15:08.174621938 UTC , finish =
| | | | | F   |   |  2025-09-03 11:15:09.215748242 UTC , thread_cap_info = ("ThreadId 124",
| | | | | F   |   |  0, False)}
| | | | | F   |   |  
| | | | | |   |   F  
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 110
| | | | | | E |      , num_strict_rules = 74 , num_top_rules = 74 , num_weak_rules = 36 , alphabet_size
| | | | | | E |      = 17 , total_length = 558} , self = 85 , parent = Nothing , duration =
| | | | | | E |      2.619480116000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |      11:15:08.293618452 UTC , finish = 2025-09-03 11:15:10.913098568 UTC , thread_cap_info
| | | | | | E |      = ("ThreadId 125", 3, False)}
| | | | | | E |      
| | | | | | | F      
| | | | F | |        
| | | | F | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | F | |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | F | |        = 5 , total_length = 47} , self = 72 , parent = Nothing , duration = 1.079454644000
| | | | F | |        , status = Fail , start = 2025-09-03 11:15:08.354291721 UTC , finish =
| | | | F | |        2025-09-03 11:15:09.433746365 UTC , thread_cap_info = ("ThreadId 126",
| | | | F | |        0, False)}
| | | | F | |        
| | F | | | |        
| | F | | | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | |        = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | F | | | |        alphabet_size = 4 , total_length = 40} , self = 70 , parent = Nothing ,
| | F | | | |        duration = 0.561759281000 , status = Fail , start = 2025-09-03 11:15:08.413063666
| | F | | | |        UTC , finish = 2025-09-03 11:15:08.974822947 UTC , thread_cap_info = ("ThreadId
| | F | | | |        127", 0, False)}
| | F | | | |        
| | | | | | | F      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | | F      alphabet_size = 5 , total_length = 47} , self = 69 , parent = Nothing ,
| | | | | | | F      duration = 0.485796166000 , status = Fail , start = 2025-09-03 11:15:08.448867157
| | | | | | | F      UTC , finish = 2025-09-03 11:15:08.934663323 UTC , thread_cap_info = ("ThreadId
| | | | | | | F      128", 0, False)}
| | | | | | | F      
| | | | | | | F      
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | E      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | | | E      = 5 , total_length = 47} , self = 97 , parent = Nothing , duration = 4.597145029000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 11:15:08.966742948
| | | | | | | E      UTC , finish = 2025-09-03 11:15:13.563887977 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      134", 0, False)}
| | | | | | | E      
| | F | | | | |      
| |   | | F | |      
| | F | |   | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |   | |      = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | F | |   | |      alphabet_size = 4 , total_length = 40} , self = 80 , parent = Nothing ,
| | F | |   | |      duration = 0.880065668000 , status = Fail , start = 2025-09-03 11:15:09.313065996
| | F | |   | |      UTC , finish = 2025-09-03 11:15:10.193131664 UTC , thread_cap_info = ("ThreadId
| | F | |   | |      136", 0, False)}
| | F | |   | |      
| | | | F   | |      
S | | |     | |      
  | | E     | |      
F | |       | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | |       | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |       | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |       | |      = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
F | |       | |      alphabet_size = 5 , total_length = 47} , self = 81 , parent = Nothing ,
F | |       | |      duration = 1.205678912000 , status = Fail , start = 2025-09-03 11:15:09.554388195
F | |       | |      UTC , finish = 2025-09-03 11:15:10.760067107 UTC , thread_cap_info = ("ThreadId
F | |       | |      140", 0, False)}
F | |       | |      
| | | F     | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     | |      = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | F     | |      = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | | F     | |      = 207} , self = 84 , parent = Nothing , duration = 1.184860422000 , status
| | | F     | |      = Fail , start = 2025-09-03 11:15:09.72822456 UTC , finish = 2025-09-03
| | | F     | |      11:15:10.913084982 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
| | | F     | |      
| | | | F   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | F   | |      = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | | | F   | |      = 207} , self = 87 , parent = Nothing , duration = 1.204832848000 , status
| | | | F   | |      = Fail , start = 2025-09-03 11:15:09.733317231 UTC , finish = 2025-09-03
| | | | F   | |      11:15:10.938150079 UTC , thread_cap_info = ("ThreadId 147", 3, False)}
| | | | F   | |      
| | F | |   | |      
F |   | |   | |      
S |   | |   | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
S |   | |   | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |   | |   | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S |   | |   | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   | |   | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   | |   | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
S |   | |   | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
S |   | |   | |      = 5 , total_length = 47} , self = 93 , parent = Nothing , duration = 2.699926261000
S |   | |   | |      , status = Success , start = 2025-09-03 11:15:10.780938798 UTC , finish
S |   | |   | |      = 2025-09-03 11:15:13.480865059 UTC , thread_cap_info = ("ThreadId 150",
S |   | |   | |      0, False)}
S |   | |   | |      
| S   | |   | |      
|     F |   | |      
|       |   E |      
| S     |     |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S     |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S     |     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S     |     |      = 40 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 36 ,
| S     |     |      alphabet_size = 11 , total_length = 207} , self = 95 , parent = Nothing
| S     |     |      , duration = 2.611910150000 , status = Success , start = 2025-09-03 11:15:10.914671028
| S     |     |      UTC , finish = 2025-09-03 11:15:13.526581178 UTC , thread_cap_info = ("ThreadId
| S     |     |      154", 3, False)}
| S     |     |      
| |     F     |      
| | E         |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E         |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E         |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E         |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E         |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E         |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 40
| | E         |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size
| | E         |      = 11 , total_length = 207} , self = 102 , parent = Nothing , duration =
| | E         |      2.694473040000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E         |      11:15:10.95730019 UTC , finish = 2025-09-03 11:15:13.65177323 UTC , thread_cap_info
| | E         |      = ("ThreadId 157", 3, False)}
| | E         |      
| | | F       |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F       |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F       |      = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | F       |      = 6 , num_top_rules = 6 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | | F       |      = 215} , self = 92 , parent = Nothing , duration = 1.205339424000 , status
| | | F       |      = Fail , start = 2025-09-03 11:15:11.04484749 UTC , finish = 2025-09-03
| | | F       |      11:15:12.250186914 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | F       |      
| | | | F     |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F     |      = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | | F     |      = 6 , num_top_rules = 6 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | | | F     |      = 215} , self = 91 , parent = Nothing , duration = 1.062616918000 , status
| | | | F     |      = Fail , start = 2025-09-03 11:15:11.058218012 UTC , finish = 2025-09-03
| | | | F     |      11:15:12.12083493 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | F     |      
| | | | F     |      
| | | | S     |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S     |      = 42 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 36 ,
| | | | S     |      alphabet_size = 11 , total_length = 215} , self = 110 , parent = Nothing
| | | | S     |      , duration = 2.132828744000 , status = Success , start = 2025-09-03 11:15:12.120876984
| | | | S     |      UTC , finish = 2025-09-03 11:15:14.253705728 UTC , thread_cap_info = ("ThreadId
| | | | S     |      166", 3, False)}
| | | | S     |      
| | | F |     |      
| | | E |     |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |     |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |     |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |     |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |     |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |     |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 42
| | | E |     |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 36 , alphabet_size
| | | E |     |      = 11 , total_length = 215} , self = 112 , parent = Nothing , duration =
| | | E |     |      2.035184917000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E |     |      11:15:12.272954406 UTC , finish = 2025-09-03 11:15:14.308139323 UTC , thread_cap_info
| | | E |     |      = ("ThreadId 167", 3, False)}
| | | E |     |      
S | | | |     |      
  S | | |     |      
    | | |     E      
    E | |            
F     | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F     | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F     | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F     | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F     | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F     | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
F     | |            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
F     | |            = 5 , total_length = 44} , self = 122 , parent = Nothing , duration = 1.399763539000
F     | |            , status = Fail , start = 2025-09-03 11:15:13.683367511 UTC , finish =
F     | |            2025-09-03 11:15:15.08313105 UTC , thread_cap_info = ("ThreadId 179", 0,
F     | |            False)}
F     | |            
| F   | |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |            = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
| F   | |            alphabet_size = 5 , total_length = 44} , self = 109 , parent = Nothing
| F   | |            , duration = 0.208069960000 , status = Fail , start = 2025-09-03 11:15:13.693057912
| F   | |            UTC , finish = 2025-09-03 11:15:13.901127872 UTC , thread_cap_info = ("ThreadId
| F   | |            178", 0, False)}
| F   | |            
| | F | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |            = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | F | |            = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | F | |            = 207} , self = 115 , parent = Nothing , duration = 0.486194126000 , status
| | F | |            = Fail , start = 2025-09-03 11:15:13.85011739 UTC , finish = 2025-09-03
| | F | |            11:15:14.336311516 UTC , thread_cap_info = ("ThreadId 184", 3, False)}
| | F | |            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | | | | F          = 207} , self = 118 , parent = Nothing , duration = 0.622358954000 , status
| | | | | F          = Fail , start = 2025-09-03 11:15:13.85459496 UTC , finish = 2025-09-03
| | | | | F          11:15:14.476953914 UTC , thread_cap_info = ("ThreadId 185", 3, False)}
| | | | | F          
| F | | | |          
| F | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| F | | | |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
| F | | | |          = 5 , total_length = 44} , self = 120 , parent = Nothing , duration = 1.004983506000
| F | | | |          , status = Fail , start = 2025-09-03 11:15:13.928208465 UTC , finish =
| F | | | |          2025-09-03 11:15:14.933191971 UTC , thread_cap_info = ("ThreadId 186",
| F | | | |          0, False)}
| F | | | |          
| | | | S |          
| | | E   |          
| | F     |          
| | F     |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     |          = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | F     |          = 9 , num_top_rules = 9 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | F     |          = 233} , self = 119 , parent = Nothing , duration = 0.498506592000 , status
| | F     |          = Fail , start = 2025-09-03 11:15:14.337030025 UTC , finish = 2025-09-03
| | F     |          11:15:14.835536617 UTC , thread_cap_info = ("ThreadId 196", 0, False)}
| | F     |          
| | | F   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |          = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F   |          = 9 , num_top_rules = 9 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| | | F   |          = 233} , self = 121 , parent = Nothing , duration = 0.634606132000 , status
| | | F   |          = Fail , start = 2025-09-03 11:15:14.357435988 UTC , finish = 2025-09-03
| | | F   |          11:15:14.99204212 UTC , thread_cap_info = ("ThreadId 195", 0, False)}
| | | F   |          
| | | | S |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |          = 40 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 36 ,
| | | | S |          alphabet_size = 11 , total_length = 207} , self = 123 , parent = Nothing
| | | | S |          , duration = 1.134739108000 , status = Success , start = 2025-09-03 11:15:14.384593571
| | | | S |          UTC , finish = 2025-09-03 11:15:15.519332679 UTC , thread_cap_info = ("ThreadId
| | | | S |          197", 3, False)}
| | | | S |          
| | | | | F          
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 40
| | | | | E          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 36 , alphabet_size
| | | | | E          = 11 , total_length = 207} , self = 125 , parent = Nothing , duration =
| | | | | E          1.039626199000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E          11:15:14.513617817 UTC , finish = 2025-09-03 11:15:15.553244016 UTC , thread_cap_info
| | | | | E          = ("ThreadId 198", 3, False)}
| | | | | E          
| | F | | |          
| F   | | |          
|     F | |          
F       | |          
        S |          
          E          
