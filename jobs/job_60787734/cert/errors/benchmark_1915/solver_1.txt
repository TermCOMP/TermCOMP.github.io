last 5700 length 23745
last 352 length 1404
CNF 352 vars 1404 clauses
CNF 5700 vars 23745 clauses
last 5531 length 22860
last 5459 length 22593
last 424 length 1708
last 379 length 1552
last 449 length 1802
last 6363 length 26421
last 5803 length 24191
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1793, clauses: 6321
last 5268 length 21740
CNF 5531 vars 22860 clauses
CNF 424 vars 1708 clauses
CNF 379 vars 1552 clauses
CNF 449 vars 1802 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12789, clauses: 47372
CNF 5459 vars 22593 clauses
last 1793 length 6321
CNF 5803 vars 24191 clauses
CNF 6363 vars 26421 clauses
CNF 5268 vars 21740 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1781, clauses: 6276
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6286, clauses: 26041
last 12789 length 47372
CNF 1793 vars 6321 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12855, clauses: 47411
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6284, clauses: 26035
last 1781 length 6276
last 6286 length 26041
CNF 12789 vars 47372 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1793, clauses: 6321, status: Unsatisfied, time: 0.595358207s
last 12855 length 47411
last 6284 length 26035
CNF 1781 vars 6276 clauses
CNF 6286 vars 26041 clauses
CNF 6284 vars 26035 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1781, clauses: 6276, status: Unsatisfied, time: 0.805431266s
CNF 12855 vars 47411 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3808, clauses: 15050
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6286, clauses: 26041, status: Satisfied, time: 0.887001987s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6284, clauses: 26035, status: Satisfied, time: 0.674562245s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12855, clauses: 47411, status: Satisfied, time: 0.747144655s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3802, clauses: 15024
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12789, clauses: 47372, status: Satisfied, time: 1.796272139s

last 3802 length 15024
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 54623, clauses: 230930
last 54623 length 230930
summary
**************************************************
SRS with 4 rules on 3 letters       DP
SRS with 9 strict rules and 4 weak rules on 6 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       EDG
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a] -> [a, b, c] {- Input 0 -}
  [c, a] -> [a, c] {- Input 1 -}
  [c, b] -> [b, a] {- Input 2 -}
  [a, a] -> [a, b, a] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [c, b] ->= [b, a] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 3) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 3) -}
  [a#, a] |-> [b#, a] {- DP (Top 1) (Input 3) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, a, a] |-> [b#, c] {- DP (Top 1) (Input 0) -}
  [b#, a, a] |-> [c#] {- DP (Top 2) (Input 0) -}
  [c#, a] |-> [a#, c] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [c#] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [a#] {- DP (Top 1) (Input 2) -}
  [c#, b] |-> [b#, a] {- DP (Top 0) (Input 2) -}
reason
  (a, 2/1)
  (b, 0/1)
  (c, 2/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 3/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [c, b] ->= [b, a] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 3) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 3) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [c, b] ->= [b, a] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / - -  0A \
        | - 1A 1A |
        \ - -  0A / )
  ( b
  , Wk  / 0A -   -   \
        | -  -1A -1A |
        \ -  -   0A  / )
  ( c
  , Wk  / 1A -  2A \
        | -  1A 1A |
        \ -  -  0A / )
  ( a#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [c, b] ->= [b, a] {- DP Nontop (Input 2) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Deepee(9/4,6)\Weight\EDG(1/4,4)\Matrix{\ArcticBZ}{3}(0/4,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 3802 vars 15024 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 5271 length 21897

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.691291396000
  min duration 0.025305603000
  total durat. 1.717647477000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.626364445000
  min duration 0.304135823000
  total durat. 2.487117663000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.740407858000
  min duration 1.504207121000
  total durat. 3.244614979000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 24}
    , self = 67
    , parent = Nothing
    , duration = 1.504207121000
    , status = Success
    , start = 2025-09-03 13:37:30.940698814 UTC
    , finish = 2025-09-03 13:37:32.444905935 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 24}
    , self = 72
    , parent = Nothing
    , duration = 1.740407858000
    , status = Success
    , start = 2025-09-03 13:37:31.076276779 UTC
    , finish = 2025-09-03 13:37:32.816684637 UTC
    , thread_cap_info = ("ThreadId 117", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.364013464000
  min duration 1.298236627000
  total durat. 2.662250091000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 24}
    , self = 65
    , parent = Nothing
    , duration = 1.298236627000
    , status = Fail
    , start = 2025-09-03 13:37:30.678037252 UTC
    , finish = 2025-09-03 13:37:31.976273879 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 24}
    , self = 66
    , parent = Nothing
    , duration = 1.364013464000
    , status = Fail
    , start = 2025-09-03 13:37:30.934158964 UTC
    , finish = 2025-09-03 13:37:32.298172428 UTC
    , thread_cap_info = ("ThreadId 113", 2, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
F                    = 3 , num_top_rules = 3 , num_weak_rules = 36 , alphabet_size = 10 , total_length
F                    = 264} , self = 54 , parent = Nothing , duration = 0.235829554000 , status
F                    = Fail , start = 2025-09-03 13:37:30.456308913 UTC , finish = 2025-09-03
F                    13:37:30.692138467 UTC , thread_cap_info = ("ThreadId 65", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| F                  = 3 , num_top_rules = 3 , num_weak_rules = 36 , alphabet_size = 10 , total_length
| F                  = 264} , self = 59 , parent = Nothing , duration = 0.490168521000 , status
| F                  = Fail , start = 2025-09-03 13:37:30.470072648 UTC , finish = 2025-09-03
| F                  13:37:30.960241169 UTC , thread_cap_info = ("ThreadId 69", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | F                = 3 , num_top_rules = 3 , num_weak_rules = 36 , alphabet_size = 10 , total_length
| | F                = 264} , self = 63 , parent = Nothing , duration = 0.626364445000 , status
| | F                = Fail , start = 2025-09-03 13:37:30.476269441 UTC , finish = 2025-09-03
| | F                13:37:31.102633886 UTC , thread_cap_info = ("ThreadId 66", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | F              = 3 , num_top_rules = 3 , num_weak_rules = 36 , alphabet_size = 10 , total_length
| | | F              = 264} , self = 62 , parent = Nothing , duration = 0.626341560000 , status
| | | F              = Fail , start = 2025-09-03 13:37:30.476273529 UTC , finish = 2025-09-03
| | | F              13:37:31.102615089 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | F            = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 243} , self = 64 , parent = Nothing , duration = 0.691291396000 , status
| | | | F            = Fail , start = 2025-09-03 13:37:30.528462839 UTC , finish = 2025-09-03
| | | | F            13:37:31.219754235 UTC , thread_cap_info = ("ThreadId 81", 3, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | F          = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F          = 243} , self = 61 , parent = Nothing , duration = 0.549069163000 , status
| | | | | F          = Fail , start = 2025-09-03 13:37:30.536262094 UTC , finish = 2025-09-03
| | | | | F          13:37:31.085331257 UTC , thread_cap_info = ("ThreadId 83", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F        = 24} , self = 58 , parent = Nothing , duration = 0.304135823000 , status
| | | | | | F        = Fail , start = 2025-09-03 13:37:30.636524919 UTC , finish = 2025-09-03
| | | | | | F        13:37:30.940660742 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | F      = 24} , self = 57 , parent = Nothing , duration = 0.275052403000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:37:30.656466403 UTC , finish = 2025-09-03
| | | | | | | F      13:37:30.931518806 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | F    = 24} , self = 60 , parent = Nothing , duration = 0.381206672000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:37:30.659013637 UTC , finish = 2025-09-03
| | | | | | | | F    13:37:31.040220309 UTC , thread_cap_info = ("ThreadId 98", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | F  = 4 , total_length = 24} , self = 65 , parent = Nothing , duration = 1.298236627000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 13:37:30.678037252 UTC , finish =
| | | | | | | | | F  2025-09-03 13:37:31.976273879 UTC , thread_cap_info = ("ThreadId 99", 1,
| | | | | | | | | F  False)}
| | | | | | | | | F  
F | | | | | | | | |  
  | | | | | | F | |  
F | | | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | |   | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F | | | | | |   | |  = 4 , total_length = 24} , self = 66 , parent = Nothing , duration = 1.364013464000
F | | | | | |   | |  , status = Fail , start = 2025-09-03 13:37:30.934158964 UTC , finish =
F | | | | | |   | |  2025-09-03 13:37:32.298172428 UTC , thread_cap_info = ("ThreadId 113",
F | | | | | |   | |  2, False)}
F | | | | | |   | |  
| | | | | | F   | |  
| | | | | | S   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | S   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | S   | |  = 4 , total_length = 24} , self = 67 , parent = Nothing , duration = 1.504207121000
| | | | | | S   | |  , status = Success , start = 2025-09-03 13:37:30.940698814 UTC , finish
| | | | | | S   | |  = 2025-09-03 13:37:32.444905935 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | S   | |  1, False)}
| | | | | | S   | |  
| F | | | | |   | |  
|   | | | | |   F |  
| S | | | | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | | |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S | | | | |     |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| S | | | | |     |  = 4 , total_length = 24} , self = 72 , parent = Nothing , duration = 1.740407858000
| S | | | | |     |  , status = Success , start = 2025-09-03 13:37:31.076276779 UTC , finish
| S | | | | |     |  = 2025-09-03 13:37:32.816684637 UTC , thread_cap_info = ("ThreadId 117",
| S | | | | |     |  2, False)}
| S | | | | |     |  
| | | | | F |     |  
| | | F |   |     |  
| | F   |   |     |  
| |     F   |     |  
| |         |     F  
| | E       |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E       |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E       |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E       |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E       |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E       |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E       |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | E       |        = 4 , total_length = 24} , self = 69 , parent = Nothing , duration = 0.502120606000
| | E       |        , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:31.996347081
| | E       |        UTC , finish = 2025-09-03 13:37:32.498467687 UTC , thread_cap_info = ("ThreadId
| | E       |        125", 1, False)}
| | E       |        
F | |       |        
  | |       S        
  | E                
  S                  
