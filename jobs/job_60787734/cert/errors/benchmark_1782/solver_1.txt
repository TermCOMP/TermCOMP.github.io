last 586 length 2379
last 668 length 2669
CNF 668 vars 2669 clauses
CNF 586 vars 2379 clauses
last 327 length 1276
CNF 327 vars 1276 clauses
last 299 length 1191
last 2281 length 9678
CNF 2281 vars 9678 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2982, clauses: 10868
last 2982 length 10868
CNF 299 vars 1191 clauses
CNF 2982 vars 10868 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7177, clauses: 29574
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5829
last 2511 length 11167
last 7177 length 29574
last 1652 length 5829
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2982, clauses: 10868, status: Satisfied, time: 0.0594238s
last 2259 length 10408
last 2139 length 8920
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5126, clauses: 21107
CNF 2511 vars 11167 clauses
last 5500 length 22788
last 4486 length 19039
CNF 1652 vars 5829 clauses
CNF 2259 vars 10408 clauses
last 463 length 1907
last 433 length 1760
CNF 2139 vars 8920 clauses
last 5126 length 21107
CNF 5500 vars 22788 clauses
CNF 4486 vars 19039 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5829, status: Unsatisfied, time: 0.454823788s
CNF 463 vars 1907 clauses
CNF 433 vars 1760 clauses
CNF 5126 vars 21107 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5512, clauses: 20011
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5126, clauses: 21107, status: Satisfied, time: 0.502673649s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3145, clauses: 12392
last 5512 length 20011
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2140, clauses: 7609
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11331, clauses: 43316
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6371, clauses: 26299
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21625, clauses: 90469
**************************************************last 2140 length 7609
last 11331 length 43316
CNF 5512 vars 20011 clauses

last 6371 length 26299
last 21625 length 90469
summaryCNF 2140 vars 7609 clauses
CNF 11331 vars 43316 clauses

CNF 6371 vars 26299 clauses
CNF 21625 vars 90469 clauses
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2140, clauses: 7609, status: Satisfied, time: 0.073340012s

Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6371, clauses: 26299, status: Satisfied, time: 0.094380707s
SRS with 3 rules on 3 letters       DP
SRS with 6 strict rules and 3 weak rules on 5 letters       weights
SRS with 5 strict rules and 3 weak rules on 5 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 3 weak rules on 4 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 2 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [b, c, a] {- Input 0 -}
  [b, c] -> [c, b, b] {- Input 1 -}
  [b, a] -> [a, c, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Input 2) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, c, a] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, c, b] {- DP (Top 0) (Input 2) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Input 2) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
reason
  (a, 1/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Input 2) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, c, a] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, c, b] {- DP (Top 0) (Input 2) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Input 2) -}
reason
  remove un-usable
    SRS
      [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
      [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
      [b, a] ->= [a, c, b] {- DP Nontop (Input 2) -}
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
reason
  (b, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / - 0A 1A  \
        | - 0A -1A |
        \ - -  0A  / )
  ( b
  , Wk  / 0A  -  -  \
        | -2A 1A 2A |
        \ -   -  0A / )
  ( c
  , Wk  / 1A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, c, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Deepee(6/3,5)\Weight(5/3,5)\EDG[(1/3,4)\Usable(1,2)\Weight(0,0)\EDG[],(2/3,4)\Matrix{\ArcticBZ}{3}(0/3,3)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.533964723000
  min duration 0.019251881000
  total durat. 1.702518944000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.530881942000
  min duration 0.014828029000
  total durat. 2.000168792000
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 15} , self
F                    = 71 , parent = Nothing , duration = 0.629893063000 , status = Fail , start
F                    = 2025-09-03 13:08:17.651090181 UTC , finish = 2025-09-03 13:08:18.280983244
F                    UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                    
| S                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S                  = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| S                  alphabet_size = 6 , total_length = 44} , self = 63 , parent = Nothing ,
| S                  duration = 0.387749067000 , status = Success , start = 2025-09-03 13:08:17.681364031
| S                  UTC , finish = 2025-09-03 13:08:18.069113098 UTC , thread_cap_info = ("ThreadId
| S                  71", 3, False)}
| S                  
| | E                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E                , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | E                = 6 , total_length = 44} , self = 65 , parent = Nothing , duration = 0.400508432000
| | E                , status = Except "AsyncCancelled" , start = 2025-09-03 13:08:17.686631959
| | E                UTC , finish = 2025-09-03 13:08:18.087140391 UTC , thread_cap_info = ("ThreadId
| | E                73", 3, False)}
| | E                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | F              = 15 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F              = 105} , self = 54 , parent = Nothing , duration = 0.100300870000 , status
| | | F              = Fail , start = 2025-09-03 13:08:17.706041548 UTC , finish = 2025-09-03
| | | F              13:08:17.806342418 UTC , thread_cap_info = ("ThreadId 82", 1, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | F            = 15 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 105} , self = 70 , parent = Nothing , duration = 0.426673227000 , status
| | | | F            = Fail , start = 2025-09-03 13:08:17.726277712 UTC , finish = 2025-09-03
| | | | F            13:08:18.152950939 UTC , thread_cap_info = ("ThreadId 84", 1, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F          = 22} , self = 61 , parent = Nothing , duration = 0.112802567000 , status
| | | | | F          = Fail , start = 2025-09-03 13:08:17.728196449 UTC , finish = 2025-09-03
| | | | | F          13:08:17.840999016 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | F        = 4 , total_length = 22} , self = 76 , parent = Nothing , duration = 0.695728684000
| | | | | | F        , status = Fail , start = 2025-09-03 13:08:17.791179275 UTC , finish =
| | | | | | F        2025-09-03 13:08:18.486907959 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | F        3, False)}
| | | | | | F        
| | | F | | |        
| | | F | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | F | | |        = 24 , num_top_rules = 24 , num_weak_rules = 15 , alphabet_size = 13 ,
| | | F | | |        total_length = 235} , self = 74 , parent = Nothing , duration = 0.533964723000
| | | F | | |        , status = Fail , start = 2025-09-03 13:08:17.81289465 UTC , finish = 2025-09-03
| | | F | | |        13:08:18.346859373 UTC , thread_cap_info = ("ThreadId 107", 2, False)}
| | | F | | |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | F      = 24 , num_top_rules = 24 , num_weak_rules = 15 , alphabet_size = 13 ,
| | | | | | | F      total_length = 235} , self = 75 , parent = Nothing , duration = 0.530881942000
| | | | | | | F      , status = Fail , start = 2025-09-03 13:08:17.837417152 UTC , finish =
| | | | | | | F      2025-09-03 13:08:18.368299094 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | F      2, False)}
| | | | | | | F      
| | | | | F | |      
| | | | | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F | |      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | F | |      = 94} , self = 73 , parent = Nothing , duration = 0.482518453000 , status
| | | | | F | |      = Fail , start = 2025-09-03 13:08:17.846437923 UTC , finish = 2025-09-03
| | | | | F | |      13:08:18.328956376 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| | | | | F | |      
| | | | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | S    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | | S    = 4 , total_length = 22} , self = 79 , parent = Nothing , duration = 0.932817846000
| | | | | | | | S    , status = Success , start = 2025-09-03 13:08:17.846469164 UTC , finish
| | | | | | | | S    = 2025-09-03 13:08:18.77928701 UTC , thread_cap_info = ("ThreadId 113",
| | | | | | | | S    3, False)}
| | | | | | | | S    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | F  = 94} , self = 72 , parent = Nothing , duration = 0.424029339000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 13:08:17.866039505 UTC , finish = 2025-09-03
| | | | | | | | | F  13:08:18.290068844 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | | | | | | | F  
| S | | | | | | | |  
|   E | | | | | | |  
| F   | | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F   | | | | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| F   | | | | | | |  = 28} , self = 78 , parent = Nothing , duration = 0.506729310000 , status
| F   | | | | | | |  = Fail , start = 2025-09-03 13:08:18.087485428 UTC , finish = 2025-09-03
| F   | | | | | | |  13:08:18.594214738 UTC , thread_cap_info = ("ThreadId 122", 3, False)}
| F   | | | | | | |  
| | F | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F | | | | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | F | | | | | | |  = 28} , self = 77 , parent = Nothing , duration = 0.490953688000 , status
| | F | | | | | | |  = Fail , start = 2025-09-03 13:08:18.08748878 UTC , finish = 2025-09-03
| | F | | | | | | |  13:08:18.578442468 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| | F | | | | | | |  
| | | | F | | | | |  
F | | |   | | | | |  
  | | |   | | | | F  
  | | |   F | | |    
  | | F     | | |    
  | |       | F |    
  | |       F   |    
E | |           |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | |           |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | |           |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | |           |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |           |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |           |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | |           |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
E | |           |    = 4 , total_length = 22} , self = 81 , parent = Nothing , duration = 0.271297464000
E | |           |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:08:18.508093998
E | |           |    UTC , finish = 2025-09-03 13:08:18.779391462 UTC , thread_cap_info = ("ThreadId
E | |           |    136", 3, False)}
E | |           |    
| | F           |    
| F             |    
|               S    
E                    
