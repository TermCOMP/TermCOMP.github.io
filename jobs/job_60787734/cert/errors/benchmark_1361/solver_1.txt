last 3025 length 13257
CNF 3025 vars 13257 clauses
last 2955 length 12632
CNF 2955 vars 12632 clauses
last 515 length 2143
last 532 length 2152
CNF 515 vars 2143 clauses
CNF 532 vars 2152 clauses
last 571 length 2242
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1915, clauses: 6934
CNF 571 vars 2242 clauses
last 472 length 1852
last 1915 length 6934
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21224
CNF 472 vars 1852 clauses
last 5164 length 21224
CNF 1915 vars 6934 clauses
last 6809 length 28785
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2229, clauses: 8114
CNF 5164 vars 21224 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5550, clauses: 22816
last 5640 length 22834
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1915, clauses: 6934, status: Unsatisfied, time: 0.254144422s
last 8524 length 35900
last 2229 length 8114
CNF 6809 vars 28785 clauses
last 5550 length 22816
last 9065 length 37247
CNF 5640 vars 22834 clauses
CNF 8524 vars 35900 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3160, clauses: 12685
CNF 2229 vars 8114 clauses
CNF 5550 vars 22816 clauses
CNF 9065 vars 37247 clauses
last 3160 length 12685
CNF 3160 vars 12685 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12151, clauses: 48103
last 12151 length 48103
CNF 12151 vars 48103 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2229, clauses: 8114, status: Unsatisfied, time: 0.536624487s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3484, clauses: 13926
last 3484 length 13926
CNF 3484 vars 13926 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12151, clauses: 48103, status: Satisfied, time: 0.631796183s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5164, clauses: 21224, status: Unsatisfied, time: 1.404263387s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3484, clauses: 13926, status: Unsatisfied, time: 0.552140616s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3160, clauses: 12685, status: Unsatisfied, time: 1.128857961s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13258, clauses: 53014
last 13258 length 53014
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5550, clauses: 22816, status: Unsatisfied, time: 1.419252546s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3113, clauses: 12174
last 3113 length 12174
**************************************************
summary
**************************************************
SRS with 2 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 18 rules on 9 letters       weights
SRS with 15 rules on 8 letters       DP
SRS with 48 strict rules and 15 weak rules on 14 letters       EDG
SRS with 30 strict rules and 15 weak rules on 14 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 10 strict rules and 15 weak rules on 14 letters       weights
SRS with 0 strict rules and 15 weak rules on 8 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [b, b, b, c] {- Input 0 -}
  [b, c, b] -> [a, b, c] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, b], [b, c], [c, b], [b, a]] -> [ [a, a] , [a, b] , [b, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, c], [c, b], [b, b]] -> [ [a, a] , [a, b] , [b, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, c], [c, b], [b, c]] -> [ [a, a] , [a, b] , [b, c] , [ c , c ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, c], [c, b], [b, a]] -> [ [b, a] , [a, b] , [b, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, c], [c, b], [b, b]] -> [ [b, a] , [a, b] , [b, c] , [ c , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, c], [c, b], [b, c]] -> [ [b, a] , [a, b] , [b, c] , [ c , c ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, b], [b, c], [c, b], [b, a]] -> [ [c, a] , [a, b] , [b, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b], [b, c], [c, b], [b, b]] -> [ [c, a] , [a, b] , [b, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, b], [b, c], [c, b], [b, c]] -> [ [c, a] , [a, b] , [b, c] , [ c , c ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 1/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, b], [b, c], [c, b], [b, a]] -> [ [a, a] , [a, b] , [b, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, c], [c, b], [b, b]] -> [ [a, a] , [a, b] , [b, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, c], [c, b], [b, c]] -> [ [a, a] , [a, b] , [b, c] , [ c , c ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, c], [c, b], [b, a]] -> [ [b, a] , [a, b] , [b, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, c], [c, b], [b, b]] -> [ [b, a] , [a, b] , [b, c] , [ c , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, c], [c, b], [b, c]] -> [ [b, a] , [a, b] , [b, c] , [ c , c ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, b], [b, c], [c, b], [b, a]] -> [ [c, a] , [a, b] , [b, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b], [b, c], [c, b], [b, b]] -> [ [c, a] , [a, b] , [b, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, b], [b, c], [c, b], [b, c]] -> [ [c, a] , [a, b] , [b, c] , [ c , c ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, b]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[c, a], [a, a], [a, a]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, a], [a, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, b], [b, c], [c, b], [b, a]] ->= [ [a, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, b]] ->= [ [a, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, c]] ->= [ [a, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, a]] ->= [ [b, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, b]] ->= [ [b, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, c]] ->= [ [b, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, a]] ->= [ [c, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, b]] ->= [ [c, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, c]] ->= [ [c, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, c] , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [a, b]# , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, c]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , c ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, c]] |-> [ [a, b]# , [b, c] , [ c , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 1))) -}
CNF 13258 vars 53014 clauses
CNF 3113 vars 12174 clauses
  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3619, clauses: 14226
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8423, clauses: 35128
[[b, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}last 3619 length 14226

  last 8423 length 35128
CNF 3619 vars 14226 clauses
[[b, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, a]] |-> [ [a, b]# , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, c]] |-> [ [a, b]# , [b, c] , [ c , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, c] , [ c , c ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, b] , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, c] , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, a]] |-> [ [c, b]# , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, b] , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a]#, [a, a], [a, b]] |-> [ [c, b]# , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [a, b]# , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, c]] |-> [ [a, b]# , [b, c] , [ c , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, c]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , c ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, c] , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, a]] |-> [ [a, b]# , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, c] , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, a]] |-> [ [b, b]# , [b, c] , [ c , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [a, b]# , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [a, b]# , [b, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, b]] |-> [ [b, b]# , [b, c] , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, a], [a, a]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, b]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[c, a], [a, a], [a, a]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, a], [a, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, b], [b, c], [c, b], [b, a]] ->= [ [a, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, b]] ->= [ [a, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, c]] ->= [ [a, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, a]] ->= [ [b, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, b]] ->= [ [b, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, c]] ->= [ [b, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, a]] ->= [ [c, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, b]] ->= [ [c, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, c]] ->= [ [c, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 2A 4A 5A - \
        | 2A 4A 5A - |
        | 2A 4A 5A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 1A 3A 3A - \
        | 1A 3A 3A - |
        | 1A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 1A 2A 2A - \
        | 1A 2A 2A - |
        | 1A 2A 2A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
  ( [c, a]#
  , Wk  / 2A 5A 5A - \
        | 2A 5A 5A - |
        | 2A 5A 5A - |
        \ -  -  -  - / )
  ( [c, b]#
  , Wk  / 2A 4A 4A - \
        | 2A 4A 4A - |
        | 2A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [a, b]# , [b, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, a]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b]#, [b, c], [c, b], [b, b]] |-> [ [c, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, c], [c, b], [b, b]] |-> [ [ c , b ]# ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b]] |-> [ [ c , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [a, a], [a, a]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, b]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[c, a], [a, a], [a, a]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, a], [a, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, b], [b, c], [c, b], [b, a]] ->= [ [a, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, b]] ->= [ [a, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, c]] ->= [ [a, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, a]] ->= [ [b, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, b]] ->= [ [b, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, c]] ->= [ [b, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, a]] ->= [ [c, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, b]] ->= [ [c, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, c]] ->= [ [c, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 2/1)
  ([b, a]#, 2/1)
  ([b, b]#, 3/1)
  ([c, a]#, 0/1)
  ([c, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, b]] ->= [ [b, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[c, a], [a, a], [a, a]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, a], [a, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, b], [b, c], [c, b], [b, a]] ->= [ [a, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, c], [c, b], [b, b]] ->= [ [a, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}CNF 8423 vars 35128 clauses

Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8974, clauses: 37289
  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3113, clauses: 12174, status: Satisfied, time: 0.219768498s
[[a, b], [b, c], [c, b], [b, c]] ->= [ [a, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}last 8974 length 37289

  [[b, b], [b, c], [c, b], [b, a]] ->= [ [b, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, b]] ->= [ [b, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [b, c], [c, b], [b, c]] ->= [ [b, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, a]] ->= [ [c, a] , [a, b] , [b, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, b]] ->= [ [c, a] , [a, b] , [b, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, b], [b, c], [c, b], [b, c]] ->= [ [c, a] , [a, b] , [b, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
reason
  EDG

**************************************************
skeleton: (2,3)\TileAllAll{2}(18,9)\Weight(15,8)\Deepee(48/15,14)\EDG(30/15,14)\Matrix{\Arctic}{3}(10/15,14)\Weight(0/15,8)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 8974 vars 37289 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.538075152000
  min duration 0.030209896000
  total durat. 1.247732634000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.448027834000
  min duration 0.011778851000
  total durat. 1.008864237000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.630336414000
  min duration 1.445854761000
  total durat. 3.076191175000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 27}
    , self = 71
    , parent = Nothing
    , duration = 1.445854761000
    , status = Fail
    , start = 2025-09-03 11:43:10.220985752 UTC
    , finish = 2025-09-03 11:43:11.666840513 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 33}
    , self = 77
    , parent = Nothing
    , duration = 1.630336414000
    , status = Fail
    , start = 2025-09-03 11:43:10.303534936 UTC
    , finish = 2025-09-03 11:43:11.93387135 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.077641354000
  min duration 1.077641354000
  total durat. 1.077641354000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 300}
    , self = 72
    , parent = Nothing
    , duration = 1.077641354000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:43:10.647276228 UTC
    , finish = 2025-09-03 11:43:11.724917582 UTC
    , thread_cap_info = ("ThreadId 126", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.289967556000
  min duration 0.631840934000
  total durat. 1.921808490000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 27}
    , self = 75
    , parent = Nothing
    , duration = 1.289967556000
    , status = Fail
    , start = 2025-09-03 11:43:10.519487942 UTC
    , finish = 2025-09-03 11:43:11.809455498 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.038125510000
  min duration 1.038125510000
  total durat. 1.038125510000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 300}
    , self = 69
    , parent = Nothing
    , duration = 1.038125510000
    , status = Success
    , start = 2025-09-03 11:43:10.573032857 UTC
    , finish = 2025-09-03 11:43:11.611158367 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.854527746000
  min duration 0.314456113000
  total durat. 1.168983859000
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
F                = 30 , num_top_rules = 30 , num_weak_rules = 15 , alphabet_size = 14 ,
F                total_length = 300} , self = 66 , parent = Nothing , duration = 0.538075152000
F                , status = Fail , start = 2025-09-03 11:43:10.105441492 UTC , finish =
F                2025-09-03 11:43:10.643516644 UTC , thread_cap_info = ("ThreadId 76", 2,
F                False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| F              = 30 , num_top_rules = 30 , num_weak_rules = 15 , alphabet_size = 14 ,
| F              total_length = 300} , self = 64 , parent = Nothing , duration = 0.448027834000
| F              , status = Fail , start = 2025-09-03 11:43:10.124984487 UTC , finish =
| F              2025-09-03 11:43:10.573012321 UTC , thread_cap_info = ("ThreadId 77", 2,
| F              False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F            = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size = 5 , total_length
| | F            = 33} , self = 62 , parent = Nothing , duration = 0.112411612000 , status
| | F            = Fail , start = 2025-09-03 11:43:10.190164305 UTC , finish = 2025-09-03
| | F            11:43:10.302575917 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| | F            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | F          = 5 , total_length = 27} , self = 63 , parent = Nothing , duration = 0.314456113000
| | | F          , status = Fail , start = 2025-09-03 11:43:10.20500718 UTC , finish = 2025-09-03
| | | F          11:43:10.519463293 UTC , thread_cap_info = ("ThreadId 108", 3, False)}
| | | F          
| | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | F        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | F        = 5 , total_length = 27} , self = 71 , parent = Nothing , duration = 1.445854761000
| | | | F        , status = Fail , start = 2025-09-03 11:43:10.220985752 UTC , finish =
| | | | F        2025-09-03 11:43:11.666840513 UTC , thread_cap_info = ("ThreadId 111",
| | | | F        3, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | F      = 37 , num_top_rules = 37 , num_weak_rules = 15 , alphabet_size = 13 ,
| | | | | F      total_length = 334} , self = 67 , parent = Nothing , duration = 0.520008398000
| | | | | F      , status = Fail , start = 2025-09-03 11:43:10.224979649 UTC , finish =
| | | | | F      2025-09-03 11:43:10.744988047 UTC , thread_cap_info = ("ThreadId 109",
| | | | | F      2, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | | F    = 37 , num_top_rules = 37 , num_weak_rules = 15 , alphabet_size = 13 ,
| | | | | | F    total_length = 334} , self = 65 , parent = Nothing , duration = 0.382867806000
| | | | | | F    , status = Fail , start = 2025-09-03 11:43:10.244988444 UTC , finish =
| | | | | | F    2025-09-03 11:43:10.62785625 UTC , thread_cap_info = ("ThreadId 110", 2,
| | | | | | F    False)}
| | | | | | F    
| | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F  = 7 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | | | | F  = 5 , total_length = 33} , self = 68 , parent = Nothing , duration = 0.854527746000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:43:10.265068779 UTC , finish =
| | | | | | | F  2025-09-03 11:43:11.119596525 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | | F  3, False)}
| | | | | | | F  
| | F | | | | |  
| | F | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F | | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | F | | | | |  = 5 , total_length = 33} , self = 77 , parent = Nothing , duration = 1.630336414000
| | F | | | | |  , status = Fail , start = 2025-09-03 11:43:10.303534936 UTC , finish =
| | F | | | | |  2025-09-03 11:43:11.93387135 UTC , thread_cap_info = ("ThreadId 115", 3,
| | F | | | | |  False)}
| | F | | | | |  
| | | F | | | |  
| | | F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | F | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | F | | | |  = 5 , total_length = 27} , self = 75 , parent = Nothing , duration = 1.289967556000
| | | F | | | |  , status = Fail , start = 2025-09-03 11:43:10.519487942 UTC , finish =
| | | F | | | |  2025-09-03 11:43:11.809455498 UTC , thread_cap_info = ("ThreadId 119",
| | | F | | | |  3, False)}
| | | F | | | |  
| F | | | | | |  
| S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |  = 45 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 15
| S | | | | | |  , alphabet_size = 14 , total_length = 300} , self = 69 , parent = Nothing
| S | | | | | |  , duration = 1.038125510000 , status = Success , start = 2025-09-03 11:43:10.573032857
| S | | | | | |  UTC , finish = 2025-09-03 11:43:11.611158367 UTC , thread_cap_info = ("ThreadId
| S | | | | | |  124", 2, False)}
| S | | | | | |  
| | | | | | F |  
F | | | | |   |  
E | | | | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 45
E | | | | |   |  , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 15 , alphabet_size
E | | | | |   |  = 14 , total_length = 300} , self = 72 , parent = Nothing , duration =
E | | | | |   |  1.077641354000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | | |   |  11:43:10.647276228 UTC , finish = 2025-09-03 11:43:11.724917582 UTC , thread_cap_info
E | | | | |   |  = ("ThreadId 126", 2, False)}
E | | | | |   |  
| | | | | F   |  
| | | | |     F  
| | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | | F      = 5 , total_length = 33} , self = 73 , parent = Nothing , duration = 0.631840934000
| | | | | F      , status = Fail , start = 2025-09-03 11:43:11.123006366 UTC , finish =
| | | | | F      2025-09-03 11:43:11.7548473 UTC , thread_cap_info = ("ThreadId 130", 3,
| | | | | F      False)}
| | | | | F      
| S | | | |      
|   | | F |      
E   | |   |      
    | |   F      
    | F          
    F            
