last 623 length 2639
CNF 623 vars 2639 clauses
last 672 length 2722
CNF 672 vars 2722 clauses
last 1734 length 7879
CNF 1734 vars 7879 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873
last 1826 length 6873
last 672 length 2722
last 623 length 2639
last 1667 length 7665
CNF 1826 vars 6873 clauses
CNF 1667 vars 7665 clauses
CNF 672 vars 2722 clauses
CNF 623 vars 2639 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873, status: Unsatisfied, time: 0.111644731s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873
last 5405 length 22505
last 5962 length 26324
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505
last 4497 length 19864
last 1826 length 6873
CNF 5405 vars 22505 clauses
last 7537 length 35017
CNF 5962 vars 26324 clauses
last 3387 length 13895
last 5405 length 22505
CNF 4497 vars 19864 clauses
CNF 1826 vars 6873 clauses
CNF 7537 vars 35017 clauses
last 9942 length 45672
CNF 3387 vars 13895 clauses
CNF 5405 vars 22505 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873, status: Unsatisfied, time: 0.263186868s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5730, clauses: 22721
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7100, clauses: 28857
last 5730 length 22721
last 7100 length 28857
CNF 7100 vars 28857 clauses
CNF 5730 vars 22721 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505, status: Unsatisfied, time: 0.662386656s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895, status: Unsatisfied, time: 0.371445547s
CNF 9942 vars 45672 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505, status: Unsatisfied, time: 0.575814841s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895
last 3387 length 13895
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3009, clauses: 12084
[Info] pool sizes (success) 103989 seen 69382 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 3387 vars 13895 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3009, clauses: 12084
last 3009 length 12084
**************************************************Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9235, clauses: 39613

Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17056, clauses: 71509
last 3009 length 12084
CNF 3009 vars 12084 clauses
last 9235 length 39613
last 17056 length 71509
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895, status: Unsatisfied, time: 0.369373273s
summaryCNF 3009 vars 12084 clauses

**************************************************
SRS with 2 rules on 2 letters       looping derivation
from
  [a, a, a, a, b, b, b, b, b, b, a, b, b, b]
to
  [b, b, b, b, b, b, b, b, b, a, a, a, a, b, b, b, b, b, b, a, b, b, b]
via 18 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a, a, b, b] -> [b, b, b, a, a, a] {- Input 0 -}
  [a] -> [] {- Input 1 -}
reason
  Nontermination
    Derive   { from = [a, a, a, a, b, b, b, b, b, b, a, b, b, b], via = [(Step   { rule = 0, position = 2}, [a, a, b, b, b, a, a, a, b, b, b, b, a, b, b, b]), (Step   { rule = 1, position = 5}, [a, a, b, b, b, a, a, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 5}, [a, a, b, b, b, b, b, b, a, a, a, b, b, a, b, b, b]), (Step   { rule = 0, position = 9}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, a, a, b, b, b]), (Step   { rule = 0, position = 14}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, a, a, a, b]), (Step   { rule = 1, position = 17}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, a, a, b]), (Step   { rule = 1, position = 17}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, a, b]), (Step   { rule = 1, position = 17}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, b]), (Step   { rule = 0, position = 12}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, a, a, b, b]), (Step   { rule = 0, position = 16}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b, a, a, a]), (Step   { rule = 1, position = 19}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b, a, a]), (Step   { rule = 1, position = 19}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b, a]), (Step   { rule = 1, position = 19}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 0}, [b, b, b, a, a, a, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 1, position = 3}, [b, b, b, a, a, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 3}, [b, b, b, b, b, b, a, a, a, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 1, position = 6}, [b, b, b, b, b, b, a, a, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 6}, [b, b, b, b, b, b, b, b, b, a, a, a, a, b, b, b, b, b, b, a, b, b, b])], to = [b, b, b, b, b, b, b, b, b, a, a, a, a, b, b, b, b, b, b, a, b, b, b]}

**************************************************
skeleton: (2,2)\Loop{18}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19163, clauses: 80269
last 19163 length 80269
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.254587951000
  min duration 0.043330760000
  total durat. 2.217895456000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 20
      , num_top_rules = 20
      , num_weak_rules = 8
      , alphabet_size = 7
      , total_length = 210}
    , self = 71
    , parent = Nothing
    , duration = 1.254587951000
    , status = Fail
    , start = 2025-09-03 13:35:05.593373263 UTC
    , finish = 2025-09-03 13:35:06.847961214 UTC
    , thread_cap_info = ("ThreadId 93", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.719062770000
  min duration 0.030518656000
  total durat. 1.715405443000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.972382834000
  min duration 0.936218415000
  total durat. 1.908601249000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.734413562000
  min duration 0.303043989000
  total durat. 1.037457551000
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.226095851000
  min duration 1.226095851000
  total durat. 1.226095851000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 11}
    , self = 72
    , parent = Nothing
    , duration = 1.226095851000
    , status = Success
    , start = 2025-09-03 13:35:05.798220041 UTC
    , finish = 2025-09-03 13:35:07.024315892 UTC
    , thread_cap_info = ("ThreadId 113", 2, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 11} , self
F                      = 63 , parent = Nothing , duration = 0.555055218000 , status = Fail , start
F                      = 2025-09-03 13:35:05.575312294 UTC , finish = 2025-09-03 13:35:06.130367512
F                      UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F                    = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                    = 60} , self = 58 , parent = Nothing , duration = 0.187636188000 , status
| F                    = Fail , start = 2025-09-03 13:35:05.579578881 UTC , finish = 2025-09-03
| F                    13:35:05.767215069 UTC , thread_cap_info = ("ThreadId 83", 1, False)}
| F                    
| | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                  = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                  = 11} , self = 60 , parent = Nothing , duration = 0.214977307000 , status
| | F                  = Fail , start = 2025-09-03 13:35:05.582893005 UTC , finish = 2025-09-03
| | F                  13:35:05.797870312 UTC , thread_cap_info = ("ThreadId 59", 2, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | F                = 20 , num_top_rules = 20 , num_weak_rules = 8 , alphabet_size = 7 , total_length
| | | F                = 210} , self = 71 , parent = Nothing , duration = 1.254587951000 , status
| | | F                = Fail , start = 2025-09-03 13:35:05.593373263 UTC , finish = 2025-09-03
| | | F                13:35:06.847961214 UTC , thread_cap_info = ("ThreadId 93", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | F              = 20 , num_top_rules = 20 , num_weak_rules = 8 , alphabet_size = 7 , total_length
| | | | F              = 210} , self = 64 , parent = Nothing , duration = 0.719062770000 , status
| | | | F              = Fail , start = 2025-09-03 13:35:05.604708604 UTC , finish = 2025-09-03
| | | | F              13:35:06.323771374 UTC , thread_cap_info = ("ThreadId 94", 0, False)}
| | | | F              
| | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F            = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | F            = 3 , total_length = 34} , self = 62 , parent = Nothing , duration = 0.303043989000
| | | | | F            , status = Fail , start = 2025-09-03 13:35:05.616763768 UTC , finish =
| | | | | F            2025-09-03 13:35:05.919807757 UTC , thread_cap_info = ("ThreadId 99", 3,
| | | | | F            False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F          = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | F          = 34} , self = 59 , parent = Nothing , duration = 0.145334835000 , status
| | | | | | F          = Fail , start = 2025-09-03 13:35:05.638322346 UTC , finish = 2025-09-03
| | | | | | F          13:35:05.783657181 UTC , thread_cap_info = ("ThreadId 100", 3, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F        = 34} , self = 61 , parent = Nothing , duration = 0.157130150000 , status
| | | | | | | F        = Fail , start = 2025-09-03 13:35:05.648826921 UTC , finish = 2025-09-03
| | | | | | | F        13:35:05.805957071 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F      = 3 , total_length = 34} , self = 68 , parent = Nothing , duration = 0.936218415000
| | | | | | | | F      , status = Fail , start = 2025-09-03 13:35:05.654215208 UTC , finish =
| | | | | | | | F      2025-09-03 13:35:06.590433623 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | | F      3, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | | | | F    = 13 , num_top_rules = 13 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | | F    = 157} , self = 66 , parent = Nothing , duration = 0.694587559000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 13:35:05.703712378 UTC , finish = 2025-09-03
| | | | | | | | | F    13:35:06.398299937 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | | | | | F  = 13 , num_top_rules = 13 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | | | F  = 157} , self = 65 , parent = Nothing , duration = 0.621057679000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 13:35:05.724754252 UTC , finish = 2025-09-03
| | | | | | | | | | F  13:35:06.345811931 UTC , thread_cap_info = ("ThreadId 110", 0, False)}
| | | | | | | | | | F  
| F | | | | | | | | |  
|   | | | | F | | | |  
|   F | | |   | | | |  
| S   | | |   | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| S   | | |   | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| S   | | |   | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| S   | | |   | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| S   | | |   | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| S   | | |   | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| S   | | |   | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| S   | | |   | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| S   | | |   | | | |  = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| S   | | |   | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| S   | | |   | | | |  = 11} , self = 72 , parent = Nothing , duration = 1.226095851000 , status
| S   | | |   | | | |  = Success , start = 2025-09-03 13:35:05.798220041 UTC , finish = 2025-09-03
| S   | | |   | | | |  13:35:07.024315892 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| S   | | |   | | | |  
| | F | | |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |   | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F | | |   | | | |  = 3 , total_length = 34} , self = 67 , parent = Nothing , duration = 0.734413562000
| | F | | |   | | | |  , status = Fail , start = 2025-09-03 13:35:05.802994419 UTC , finish =
| | F | | |   | | | |  2025-09-03 13:35:06.537407981 UTC , thread_cap_info = ("ThreadId 114",
| | F | | |   | | | |  3, False)}
| | F | | |   | | | |  
| | | | | |   F | | |  
| | | | | | F   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | F   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | F   | | |  = 3 , total_length = 34} , self = 70 , parent = Nothing , duration = 0.972382834000
| | | | | | F   | | |  , status = Fail , start = 2025-09-03 13:35:05.863480973 UTC , finish =
| | | | | | F   | | |  2025-09-03 13:35:06.835863807 UTC , thread_cap_info = ("ThreadId 115",
| | | | | | F   | | |  3, False)}
| | | | | | F   | | |  
| | | | | F |   | | |  
| | | | | F |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | F |   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | F |   | | |  = 3 , total_length = 34} , self = 69 , parent = Nothing , duration = 0.663173900000
| | | | | F |   | | |  , status = Fail , start = 2025-09-03 13:35:05.962893088 UTC , finish =
| | | | | F |   | | |  2025-09-03 13:35:06.626066988 UTC , thread_cap_info = ("ThreadId 116",
| | | | | F |   | | |  3, False)}
| | | | | F |   | | |  
F | | | | | |   | | |  
  | | | F | |   | | |  
  | | |   | |   | | F  
  | | |   | |   | F    
  | F |   | |   |      
  |   |   | |   F      
  |   |   F |          
  |   |     F          
  |   F                
  S                    
