last 3557 length 27136
last 2398 length 9691
last 4884 length 38495
CNF 3557 vars 27136 clauses
CNF 2398 vars 9691 clauses
CNF 4884 vars 38495 clauses
last 4061 length 20732
CNF 4061 vars 20732 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8711, clauses: 31311
last 8711 length 31311
CNF 8711 vars 31311 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13919, clauses: 49728
last 13919 length 49728
CNF 13919 vars 49728 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13919, clauses: 49728, status: Satisfied, time: 0.327614616s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28210, clauses: 116449
last 28210 length 116449
last 2332 length 9439
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8711, clauses: 31311, status: Satisfied, time: 0.931380837s
CNF 2332 vars 9439 clauses
CNF 28210 vars 116449 clauses
last 4027 length 20598
CNF 4027 vars 20598 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13708, clauses: 48907
last 13708 length 48907
CNF 13708 vars 48907 clauses
last 2847 length 20298
last 3847 length 28350
CNF 2847 vars 20298 clauses
CNF 3847 vars 28350 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13708, clauses: 48907, status: Satisfied, time: 0.403244826s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8491, clauses: 30211
last 8491 length 30211
CNF 8491 vars 30211 clauses
last 2266 length 9187
CNF 2266 vars 9187 clauses
last 3993 length 20464
CNF 3993 vars 20464 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13497, clauses: 48086
last 13497 length 48086
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27871, clauses: 115016
last 27871 length 115016
CNF 13497 vars 48086 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8491, clauses: 30211, status: Unsatisfied, time: 1.277352799s
CNF 27871 vars 115016 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17297, clauses: 67328
last 17297 length 67328
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35538, clauses: 146379
CNF 17297 vars 67328 clauses
last 35538 length 146379
CNF 35538 vars 146379 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13497, clauses: 48086, status: Unsatisfied, time: 1.997502358s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35538, clauses: 146379, status: Satisfied, time: 0.817357623s
last 2176 length 8843
CNF 2176 vars 8843 clauses
last 3928 length 20211
CNF 3928 vars 20211 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13087, clauses: 46528
last 13087 length 46528
CNF 13087 vars 46528 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17297, clauses: 67328, status: Unsatisfied, time: 2.558024455s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13778, clauses: 51637
last 13778 length 51637
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34862, clauses: 143553
CNF 13778 vars 51637 clauses
last 34862 length 143553
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13087, clauses: 46528, status: Unsatisfied, time: 1.774476267s
CNF 34862 vars 143553 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22188, clauses: 85922
last 22188 length 85922
CNF 22188 vars 85922 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34862, clauses: 143553, status: Satisfied, time: 3.189847622s
[Info] pool sizes (success) 16512 seen 7052 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 24 rules on 15 letters       looping derivation
from
  [B, b, a, a, a, b, a]
to
  [BA, BA, BA, B, B, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]
via 42 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BAA] {- Input 2 -}
  [BA, b] -> [BA, B] {- Input 3 -}
  [BAA, a] -> [BAA, A] {- Input 4 -}
  [BAA, b] -> [BAAB] {- Input 5 -}
  [BAAB, a] -> [BAABA] {- Input 6 -}
  [BAAB, b] -> [BAAB, B] {- Input 7 -}
  [BAABA, a] -> [BAABA, A] {- Input 8 -}
  [BAABA, b] -> [BAABAB] {- Input 9 -}
  [BAABAB, a] -> [BAABAB, A] {- Input 10 -}
  [BAABAB, b] -> [BAABABB] {- Input 11 -}
  [BAABABB, a] -> [BAABABB, A] {- Input 12 -}
  [BAABABB, b] -> [BAABABBB] {- Input 13 -}
  [BAABABBB, a] -> [BAABABBBA] {- Input 14 -}
  [BAABABBB, b] -> [BAABABBB, B] {- Input 15 -}
  [BAABABBBA, a] -> [BAABABBBAA] {- Input 16 -}
  [BAABABBBA, b] -> [BAABABBBA, B] {- Input 17 -}
  [BAABABBBAA] -> [a, b, a] {- Input 18 -}
  [A, a] -> [A, A] {- Input 19 -}
  [A, b] -> [AB] {- Input 20 -}
  [AB, a] -> [ABA] {- Input 21 -}
  [AB, b] -> [AB, B] {- Input 22 -}
  [ABA] -> [b, a, a, b, a, b, b, b, a, a] {- Input 23 -}
reason
  Nontermination
    Derive   { from = [B, b, a, a, a, b, a], via = [(Step   { rule = 1, position = 0}, [B, B, a, a, a, b, a]), (Step   { rule = 0, position = 1}, [B, BA, a, a, b, a]), (Step   { rule = 2, position = 1}, [B, BAA, a, b, a]), (Step   { rule = 4, position = 1}, [B, BAA, A, b, a]), (Step   { rule = 20, position = 2}, [B, BAA, AB, a]), (Step   { rule = 21, position = 2}, [B, BAA, ABA]), (Step   { rule = 23, position = 2}, [B, BAA, b, a, a, b, a, b, b, b, a, a]), (Step   { rule = 5, position = 1}, [B, BAAB, a, a, b, a, b, b, b, a, a]), (Step   { rule = 6, position = 1}, [B, BAABA, a, b, a, b, b, b, a, a]), (Step   { rule = 8, position = 1}, [B, BAABA, A, b, a, b, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAABA, AB, a, b, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABA, ABA, b, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAABA, b, a, a, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 9, position = 1}, [B, BAABAB, a, a, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 10, position = 1}, [B, BAABAB, A, a, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAABAB, A, A, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 3}, [B, BAABAB, A, AB, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAABAB, A, ABA, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 3}, [B, BAABAB, A, b, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAABAB, AB, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABAB, ABA, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAABAB, b, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 11, position = 1}, [B, BAABABB, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 12, position = 1}, [B, BAABABB, A, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAABABB, A, A, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 3}, [B, BAABABB, A, AB, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAABABB, A, ABA, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 3}, [B, BAABABB, A, b, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAABABB, AB, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABABB, ABA, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAABABB, b, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 13, position = 1}, [B, BAABABBB, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 14, position = 1}, [B, BAABABBBA, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 16, position = 1}, [B, BAABABBBAA, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 18, position = 1}, [B, a, b, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 0, position = 0}, [BA, b, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 3, position = 0}, [BA, B, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 0, position = 1}, [BA, BA, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 3, position = 1}, [BA, BA, B, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 0, position = 2}, [BA, BA, BA, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 3, position = 2}, [BA, BA, BA, B, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 1, position = 3}, [BA, BA, BA, B, B, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a])], to = [BA, BA, BA, B, B, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]}

**************************************************
skeleton: (24,15)\Loop{42}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))last 2110 length 8591
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 2110 vars 8591 clauses
last 3894 length 20077
CNF 3894 vars 20077 clauses

Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 9
  max duration 3.800010104000
  min duration 0.000131860000
  total durat. 7.321337156000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 1148
      , num_strict_rules = 382
      , num_top_rules = 382
      , num_weak_rules = 766
      , alphabet_size = 257
      , total_length = 7548}
    , self = 95
    , parent = Nothing
    , duration = 3.497355386000
    , status = Success
    , start = 2025-09-03 11:12:21.751568921 UTC
    , finish = 2025-09-03 11:12:25.248924307 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 1330
      , num_strict_rules = 564
      , num_top_rules = 564
      , num_weak_rules = 766
      , alphabet_size = 377
      , total_length = 8000}
    , self = 98
    , parent = Nothing
    , duration = 3.800010104000
    , status = Success
    , start = 2025-09-03 11:12:21.727586289 UTC
    , finish = 2025-09-03 11:12:25.527596393 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.434892453000
  min duration 0.141356831000
  total durat. 1.523639879000
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.027668786000
  min duration 3.009190923000
  total durat. 6.036859709000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 744
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 722
      , alphabet_size = 209
      , total_length = 4694}
    , self = 104
    , parent = Nothing
    , duration = 3.009190923000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:12:25.356541162 UTC
    , finish = 2025-09-03 11:12:28.365732085 UTC
    , thread_cap_info = ("ThreadId 158", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 949
      , num_strict_rules = 319
      , num_top_rules = 319
      , num_weak_rules = 630
      , alphabet_size = 208
      , total_length = 5725}
    , self = 107
    , parent = Nothing
    , duration = 3.027668786000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:12:26.764510825 UTC
    , finish = 2025-09-03 11:12:29.792179611 UTC
    , thread_cap_info = ("ThreadId 164", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.041655962000
  min duration 3.041655962000
  total durat. 3.041655962000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 766
      , num_strict_rules = 766
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 212
      , total_length = 4850}
    , self = 83
    , parent = Nothing
    , duration = 3.041655962000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:21.131567444 UTC
    , finish = 2025-09-03 11:12:24.173223406 UTC
    , thread_cap_info = ("ThreadId 118", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.526964246000
  min duration 0.182420088000
  total durat. 1.913009583000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.028165121000
  min duration 3.021971067000
  total durat. 6.050136188000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 949
      , num_strict_rules = 319
      , num_top_rules = 319
      , num_weak_rules = 630
      , alphabet_size = 208
      , total_length = 5725}
    , self = 106
    , parent = Nothing
    , duration = 3.021971067000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:12:26.73405876 UTC
    , finish = 2025-09-03 11:12:29.756029827 UTC
    , thread_cap_info = ("ThreadId 165", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 744
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 722
      , alphabet_size = 209
      , total_length = 4694}
    , self = 103
    , parent = Nothing
    , duration = 3.028165121000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:12:25.332760755 UTC
    , finish = 2025-09-03 11:12:28.360925876 UTC
    , thread_cap_info = ("ThreadId 159", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.092005100000
  min duration 3.092005100000
  total durat. 3.092005100000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 766
      , num_strict_rules = 766
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 212
      , total_length = 4850}
    , self = 84
    , parent = Nothing
    , duration = 3.092005100000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:21.119608092 UTC
    , finish = 2025-09-03 11:12:24.211613192 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 5.232374138000
  min duration 2.453839749000
  total durat. 7.686213887000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 188}
    , self = 86
    , parent = Nothing
    , duration = 2.453839749000
    , status = Success
    , start = 2025-09-03 11:12:22.295269571 UTC
    , finish = 2025-09-03 11:12:24.74910932 UTC
    , thread_cap_info = ("ThreadId 136", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 27
      , num_top_rules = 27
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 181}
    , self = 108
    , parent = Nothing
    , duration = 5.232374138000
    , status = Success
    , start = 2025-09-03 11:12:25.024078033 UTC
    , finish = 2025-09-03 11:12:30.256452171 UTC
    , thread_cap_info = ("ThreadId 155", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.501408698000
  min duration 0.826582563000
  total durat. 3.254501136000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 138}
    , self = 55
    , parent = Nothing
    , duration = 1.501408698000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:19.35277945 UTC
    , finish = 2025-09-03 11:12:20.854188148 UTC
    , thread_cap_info = ("ThreadId 81", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.218787845000
  min duration 3.218787845000
  total durat. 3.218787845000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 128}
    , self = 99
    , parent = Nothing
    , duration = 3.218787845000
    , status = Fail
    , start = 2025-09-03 11:12:23.051581771 UTC
    , finish = 2025-09-03 11:12:26.270369616 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.020557516000
  min duration 0.128986504000
  total durat. 3.149544020000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 27
      , num_top_rules = 27
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 181}
    , self = 110
    , parent = Nothing
    , duration = 3.020557516000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:27.311588614 UTC
    , finish = 2025-09-03 11:12:30.33214613 UTC
    , thread_cap_info = ("ThreadId 168", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.298804069000
  min duration 0.825881391000
  total durat. 3.083558005000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 138}
    , self = 50
    , parent = Nothing
    , duration = 1.298804069000
    , status = Success
    , start = 2025-09-03 11:12:19.311464367 UTC
    , finish = 2025-09-03 11:12:20.610268436 UTC
    , thread_cap_info = ("ThreadId 79", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.612756609000
  min duration 1.423942824000
  total durat. 6.342006402000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 128}
    , self = 82
    , parent = Nothing
    , duration = 1.423942824000
    , status = Fail
    , start = 2025-09-03 11:12:21.531627166 UTC
    , finish = 2025-09-03 11:12:22.95556999 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 27
      , num_top_rules = 27
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 181}
    , self = 102
    , parent = Nothing
    , duration = 2.305306969000
    , status = Fail
    , start = 2025-09-03 11:12:25.005434486 UTC
    , finish = 2025-09-03 11:12:27.310741455 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 188}
    , self = 85
    , parent = Nothing
    , duration = 2.612756609000
    , status = Fail
    , start = 2025-09-03 11:12:22.035131508 UTC
    , finish = 2025-09-03 11:12:24.647888117 UTC
    , thread_cap_info = ("ThreadId 134", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 10.344200927000
  min duration 10.344200927000
  total durat. 10.344200927000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 92}
    , self = 105
    , parent = Nothing
    , duration = 10.344200927000
    , status = Fail
    , start = 2025-09-03 11:12:18.992622692 UTC
    , finish = 2025-09-03 11:12:29.336823619 UTC
    , thread_cap_info = ("ThreadId 35", 3, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.018568829000
  min duration 1.018568829000
  total durat. 1.018568829000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 92}
    , self = 112
    , parent = Nothing
    , duration = 1.018568829000
    , status = Success
    , start = 2025-09-03 11:12:29.336843663 UTC
    , finish = 2025-09-03 11:12:30.355412492 UTC
    , thread_cap_info = ("ThreadId 174", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 6
  max duration 1.674225099000
  min duration 0.003961778000
  total durat. 4.584795841000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5400
      , num_strict_rules = 5400
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 31500}
    , self = 48
    , parent = Nothing
    , duration = 1.525096093000
    , status = Success
    , start = 2025-09-03 11:12:19.081496657 UTC
    , finish = 2025-09-03 11:12:20.60659275 UTC
    , thread_cap_info = ("ThreadId 65", 0, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5400
      , num_strict_rules = 5400
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 31500}
    , self = 52
    , parent = Nothing
    , duration = 1.674225099000
    , status = Success
    , start = 2025-09-03 11:12:19.083945787 UTC
    , finish = 2025-09-03 11:12:20.758170886 UTC
    , thread_cap_info = ("ThreadId 66", 2, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 22
  max duration 1.206307012000
  min duration 0.000004520000
  total durat. 1.400157983000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 949
      , num_strict_rules = 319
      , num_top_rules = 319
      , num_weak_rules = 630
      , alphabet_size = 208
      , total_length = 5725}
    , self = 100
    , parent = Nothing
    , duration = 1.206307012000
    , status = Fail
    , start = 2025-09-03 11:12:25.527614804 UTC
    , finish = 2025-09-03 11:12:26.733921816 UTC
    , thread_cap_info = ("ThreadId 160", 0, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
F                  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
F                  = 92} , self = 105 , parent = Nothing , duration = 10.344200927000 , status
F                  = Fail , start = 2025-09-03 11:12:18.992622692 UTC , finish = 2025-09-03
F                  11:12:29.336823619 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F                = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| F                = 138} , self = 37 , parent = Nothing , duration = 0.260071929000 , status
| F                = Fail , start = 2025-09-03 11:12:19.033759265 UTC , finish = 2025-09-03
| F                11:12:19.293831194 UTC , thread_cap_info = ("ThreadId 61", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | F              = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | F              = 138} , self = 39 , parent = Nothing , duration = 0.265847666000 , status
| | F              = Fail , start = 2025-09-03 11:12:19.051579243 UTC , finish = 2025-09-03
| | F              11:12:19.317426909 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | F              
| | | S            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S            = Size { num_rules = 5400 , num_strict_rules = 5400 , num_top_rules = 0
| | | S            , num_weak_rules = 0 , alphabet_size = 225 , total_length = 31500} , self
| | | S            = 48 , parent = Nothing , duration = 1.525096093000 , status = Success
| | | S            , start = 2025-09-03 11:12:19.081496657 UTC , finish = 2025-09-03 11:12:20.60659275
| | | S            UTC , thread_cap_info = ("ThreadId 65", 0, False)}
| | | S            
| | | | S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S          = Size { num_rules = 5400 , num_strict_rules = 5400 , num_top_rules = 0
| | | | S          , num_weak_rules = 0 , alphabet_size = 225 , total_length = 31500} , self
| | | | S          = 52 , parent = Nothing , duration = 1.674225099000 , status = Success
| | | | S          , start = 2025-09-03 11:12:19.083945787 UTC , finish = 2025-09-03 11:12:20.758170886
| | | | S          UTC , thread_cap_info = ("ThreadId 66", 2, False)}
| | | | S          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | | | F        = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | F        total_length = 196} , self = 38 , parent = Nothing , duration = 0.165528114000
| | | | | F        , status = Fail , start = 2025-09-03 11:12:19.147871007 UTC , finish =
| | | | | F        2025-09-03 11:12:19.313399121 UTC , thread_cap_info = ("ThreadId 72", 1,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | | | | F      = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | | F      total_length = 196} , self = 40 , parent = Nothing , duration = 0.182420088000
| | | | | | F      , status = Fail , start = 2025-09-03 11:12:19.151575399 UTC , finish =
| | | | | | F      2025-09-03 11:12:19.333995487 UTC , thread_cap_info = ("ThreadId 73", 1,
| | | | | | F      False)}
| | | | | | F      
| F | | | | |      
| S | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | |      = 33 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 ,
| S | | | | |      alphabet_size = 18 , total_length = 138} , self = 50 , parent = Nothing
| S | | | | |      , duration = 1.298804069000 , status = Success , start = 2025-09-03 11:12:19.311464367
| S | | | | |      UTC , finish = 2025-09-03 11:12:20.610268436 UTC , thread_cap_info = ("ThreadId
| S | | | | |      79", 1, False)}
| S | | | | |      
| | | | | F |      
| | F | |   |      
| | S | |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |   |      = 55 , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24
| | S | |   |      , alphabet_size = 26 , total_length = 196} , self = 41 , parent = Nothing
| | S | |   |      , duration = 0.958872545000 , status = Success , start = 2025-09-03 11:12:19.33161987
| | S | |   |      UTC , finish = 2025-09-03 11:12:20.290492415 UTC , thread_cap_info = ("ThreadId
| | S | |   |      80", 1, False)}
| | S | |   |      
| | | | |   F      
| | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | | E        , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size
| | | | | E        = 18 , total_length = 138} , self = 55 , parent = Nothing , duration =
| | | | | E        1.501408698000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E        11:12:19.35277945 UTC , finish = 2025-09-03 11:12:20.854188148 UTC , thread_cap_info
| | | | | E        = ("ThreadId 81", 1, False)}
| | | | | E        
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| | | | | | E      , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size
| | | | | | E      = 26 , total_length = 196} , self = 43 , parent = Nothing , duration =
| | | | | | E      0.926509875000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E      11:12:19.452664612 UTC , finish = 2025-09-03 11:12:20.379174487 UTC , thread_cap_info
| | | | | | E      = ("ThreadId 82", 1, False)}
| | | | | | E      
| | S | | | |      
| |   | | | E      
| | F | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | F | | |        = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size = 26 ,
| | F | | |        total_length = 192} , self = 54 , parent = Nothing , duration = 0.353378448000
| | F | | |        , status = Fail , start = 2025-09-03 11:12:20.457367265 UTC , finish =
| | F | | |        2025-09-03 11:12:20.810745713 UTC , thread_cap_info = ("ThreadId 90", 1,
| | F | | |        False)}
| | F | | |        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | F      = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | | F      total_length = 192} , self = 53 , parent = Nothing , duration = 0.318528995000
| | | | | | F      , status = Fail , start = 2025-09-03 11:12:20.473464016 UTC , finish =
| | | | | | F      2025-09-03 11:12:20.791993011 UTC , thread_cap_info = ("ThreadId 89", 1,
| | | | | | F      False)}
| | | | | | F      
| | | S | | |      
| S |   | | |      
|   |   S | |      
| F |     | |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| F |     | |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| F |     | |      num_rules = 766 , num_strict_rules = 766 , num_top_rules = 0 , num_weak_rules
| F |     | |      = 0 , alphabet_size = 212 , total_length = 4850} , self = 66 , parent =
| F |     | |      Nothing , duration = 0.333160905000 , status = Fail , start = 2025-09-03
| F |     | |      11:12:20.758195151 UTC , finish = 2025-09-03 11:12:21.091356056 UTC , thread_cap_info
| F |     | |      = ("ThreadId 96", 2, False)}
| F |     | |      
| | |     | F      
| | F     |        
| | S     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     |        = 54 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 24
| | S     |        , alphabet_size = 26 , total_length = 192} , self = 70 , parent = Nothing
| | S     |        , duration = 0.825881391000 , status = Success , start = 2025-09-03 11:12:20.810761606
| | S     |        UTC , finish = 2025-09-03 11:12:21.636642997 UTC , thread_cap_info = ("ThreadId
| | S     |        97", 1, False)}
| | S     |        
| | | E   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 54
| | | E   |        , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size
| | | E   |        = 26 , total_length = 192} , self = 73 , parent = Nothing , duration =
| | | E   |        0.826582563000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E   |        11:12:20.851615071 UTC , finish = 2025-09-03 11:12:21.678197634 UTC , thread_cap_info
| | | E   |        = ("ThreadId 98", 1, False)}
| | | E   |        
| | | |   E        
| | | | S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S          = Size { num_rules = 1939 , num_strict_rules = 1173 , num_top_rules = 1173
| | | | S          , num_weak_rules = 766 , alphabet_size = 388 , total_length = 10682} ,
| | | | S          self = 74 , parent = Nothing , duration = 0.678465323000 , status = Success
| | | | S          , start = 2025-09-03 11:12:21.03342187 UTC , finish = 2025-09-03 11:12:21.711887193
| | | | S          UTC , thread_cap_info = ("ThreadId 111", 0, False)}
| | | | S          
| | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | S        = Size { num_rules = 1951 , num_strict_rules = 1185 , num_top_rules = 1185
| | | | | S        , num_weak_rules = 766 , alphabet_size = 259 , total_length = 13400} ,
| | | | | S        self = 76 , parent = Nothing , duration = 0.698656933000 , status = Success
| | | | | S        , start = 2025-09-03 11:12:21.051828464 UTC , finish = 2025-09-03 11:12:21.750485397
| | | | | S        UTC , thread_cap_info = ("ThreadId 113", 0, False)}
| | | | | S        
| F | | | |        
| F | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| F | | | |        = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| F | | | |        = 128} , self = 69 , parent = Nothing , duration = 0.434892453000 , status
| F | | | |        = Fail , start = 2025-09-03 11:12:21.091589289 UTC , finish = 2025-09-03
| F | | | |        11:12:21.526481742 UTC , thread_cap_info = ("ThreadId 114", 1, False)}
| F | | | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | | F      = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | | F      = 128} , self = 71 , parent = Nothing , duration = 0.526964246000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:12:21.112657852 UTC , finish = 2025-09-03
| | | | | | F      11:12:21.639622098 UTC , thread_cap_info = ("ThreadId 115", 1, False)}
| | | | | | F      
| | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 766 , num_strict_rules
| | | | | | | E    = 766 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 212 ,
| | | | | | | E    total_length = 4850} , self = 84 , parent = Nothing , duration = 3.092005100000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 11:12:21.119608092
| | | | | | | E    UTC , finish = 2025-09-03 11:12:24.211613192 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    120", 2, False)}
| | | | | | | E    
| | | | | | | | E  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 766 , num_strict_rules
| | | | | | | | E  = 766 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 212 ,
| | | | | | | | E  total_length = 4850} , self = 83 , parent = Nothing , duration = 3.041655962000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 11:12:21.131567444
| | | | | | | | E  UTC , finish = 2025-09-03 11:12:24.173223406 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  118", 2, False)}
| | | | | | | | E  
| F | | | | | | |  
| F | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | | |  = 32 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 ,
| F | | | | | | |  alphabet_size = 18 , total_length = 128} , self = 82 , parent = Nothing
| F | | | | | | |  , duration = 1.423942824000 , status = Fail , start = 2025-09-03 11:12:21.531627166
| F | | | | | | |  UTC , finish = 2025-09-03 11:12:22.95556999 UTC , thread_cap_info = ("ThreadId
| F | | | | | | |  124", 1, False)}
| F | | | | | | |  
| | S | | | | | |  
| |   | | | F | |  
| |   E | |   | |  
| |     S |   | |  
| | S     |   | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S     |   | |  verbose = False}" , input_size = Size { num_rules = 1330 , num_strict_rules
| | S     |   | |  = 564 , num_top_rules = 564 , num_weak_rules = 766 , alphabet_size = 377
| | S     |   | |  , total_length = 8000} , self = 98 , parent = Nothing , duration = 3.800010104000
| | S     |   | |  , status = Success , start = 2025-09-03 11:12:21.727586289 UTC , finish
| | S     |   | |  = 2025-09-03 11:12:25.527596393 UTC , thread_cap_info = ("ThreadId 105",
| | S     |   | |  0, False)}
| | S     |   | |  
| | |     S   | |  
| | | S       | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | S       | |  verbose = False}" , input_size = Size { num_rules = 1148 , num_strict_rules
| | | S       | |  = 382 , num_top_rules = 382 , num_weak_rules = 766 , alphabet_size = 257
| | | S       | |  , total_length = 7548} , self = 95 , parent = Nothing , duration = 3.497355386000
| | | S       | |  , status = Success , start = 2025-09-03 11:12:21.751568921 UTC , finish
| | | S       | |  = 2025-09-03 11:12:25.248924307 UTC , thread_cap_info = ("ThreadId 107",
| | | S       | |  0, False)}
| | | S       | |  
| | | | F     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | | | F     | |  = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | F     | |  total_length = 188} , self = 80 , parent = Nothing , duration = 0.141356831000
| | | | F     | |  , status = Fail , start = 2025-09-03 11:12:21.833545543 UTC , finish =
| | | | F     | |  2025-09-03 11:12:21.974902374 UTC , thread_cap_info = ("ThreadId 131",
| | | | F     | |  1, False)}
| | | | F     | |  
| | | | | F   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | | | | F   | |  = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | F   | |  total_length = 188} , self = 81 , parent = Nothing , duration = 0.367112869000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:12:21.871944498 UTC , finish =
| | | | | F   | |  2025-09-03 11:12:22.239057367 UTC , thread_cap_info = ("ThreadId 132",
| | | | | F   | |  1, False)}
| | | | | F   | |  
| | | | F |   | |  
| | | | F |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F |   | |  = 53 , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24
| | | | F |   | |  , alphabet_size = 26 , total_length = 188} , self = 85 , parent = Nothing
| | | | F |   | |  , duration = 2.612756609000 , status = Fail , start = 2025-09-03 11:12:22.035131508
| | | | F |   | |  UTC , finish = 2025-09-03 11:12:24.647888117 UTC , thread_cap_info = ("ThreadId
| | | | F |   | |  134", 1, False)}
| | | | F |   | |  
| | | | | F   | |  
| | | | | S   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 53
| | | | | S   | |  , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size
| | | | | S   | |  = 26 , total_length = 188} , self = 86 , parent = Nothing , duration =
| | | | | S   | |  2.453839749000 , status = Success , start = 2025-09-03 11:12:22.295269571
| | | | | S   | |  UTC , finish = 2025-09-03 11:12:24.74910932 UTC , thread_cap_info = ("ThreadId
| | | | | S   | |  136", 1, False)}
| | | | | S   | |  
| F | | | |   | |  
| F | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| F | | | |   | |  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size
| F | | | |   | |  = 18 , total_length = 128} , self = 99 , parent = Nothing , duration =
| F | | | |   | |  3.218787845000 , status = Fail , start = 2025-09-03 11:12:23.051581771
| F | | | |   | |  UTC , finish = 2025-09-03 11:12:26.270369616 UTC , thread_cap_info = ("ThreadId
| F | | | |   | |  139", 1, False)}
| F | | | |   | |  
| | | | | |   | E  
| | | | | |   E    
| | | | F |        
| | | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 53
| | | | E |        , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size
| | | | E |        = 26 , total_length = 188} , self = 88 , parent = Nothing , duration =
| | | | E |        0.128986504000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E |        11:12:24.647915914 UTC , finish = 2025-09-03 11:12:24.776902418 UTC , thread_cap_info
| | | | E |        = ("ThreadId 145", 1, False)}
| | | | E |        
| | | | | S        
| | | | E          
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | F          = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | F          total_length = 181} , self = 93 , parent = Nothing , duration = 0.203261557000
| | | | F          , status = Fail , start = 2025-09-03 11:12:24.792134599 UTC , finish =
| | | | F          2025-09-03 11:12:24.995396156 UTC , thread_cap_info = ("ThreadId 150",
| | | | F          1, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | | F        = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | F        total_length = 181} , self = 94 , parent = Nothing , duration = 0.217286266000
| | | | | F        , status = Fail , start = 2025-09-03 11:12:24.792168889 UTC , finish =
| | | | | F        2025-09-03 11:12:25.009455155 UTC , thread_cap_info = ("ThreadId 151",
| | | | | F        1, False)}
| | | | | F        
| | | | F |        
| | | | F |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F |        = 51 , num_strict_rules = 27 , num_top_rules = 27 , num_weak_rules = 24
| | | | F |        , alphabet_size = 26 , total_length = 181} , self = 102 , parent = Nothing
| | | | F |        , duration = 2.305306969000 , status = Fail , start = 2025-09-03 11:12:25.005434486
| | | | F |        UTC , finish = 2025-09-03 11:12:27.310741455 UTC , thread_cap_info = ("ThreadId
| | | | F |        154", 1, False)}
| | | | F |        
| | | | | F        
| | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 51
| | | | | S        , num_strict_rules = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size
| | | | | S        = 26 , total_length = 181} , self = 108 , parent = Nothing , duration =
| | | | | S        5.232374138000 , status = Success , start = 2025-09-03 11:12:25.024078033
| | | | | S        UTC , finish = 2025-09-03 11:12:30.256452171 UTC , thread_cap_info = ("ThreadId
| | | | | S        155", 1, False)}
| | | | | S        
| | | S | |        
| | | E | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | |        = False\n , verbose = False}" , input_size = Size { num_rules = 744 , num_strict_rules
| | | E | |        = 22 , num_top_rules = 22 , num_weak_rules = 722 , alphabet_size = 209
| | | E | |        , total_length = 4694} , self = 103 , parent = Nothing , duration = 3.028165121000
| | | E | |        , status = Except "<<timeout>>" , start = 2025-09-03 11:12:25.332760755
| | | E | |        UTC , finish = 2025-09-03 11:12:28.360925876 UTC , thread_cap_info = ("ThreadId
| | | E | |        159", 2, False)}
| | | E | |        
| | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 744 , num_strict_rules
| | | | | | E      = 22 , num_top_rules = 22 , num_weak_rules = 722 , alphabet_size = 209
| | | | | | E      , total_length = 4694} , self = 104 , parent = Nothing , duration = 3.009190923000
| | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-03 11:12:25.356541162
| | | | | | E      UTC , finish = 2025-09-03 11:12:28.365732085 UTC , thread_cap_info = ("ThreadId
| | | | | | E      158", 2, False)}
| | | | | | E      
| | S | | | |      
| | F | | | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F | | | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F | | | |      = Size { num_rules = 949 , num_strict_rules = 319 , num_top_rules = 319
| | F | | | |      , num_weak_rules = 630 , alphabet_size = 208 , total_length = 5725} , self
| | F | | | |      = 100 , parent = Nothing , duration = 1.206307012000 , status = Fail ,
| | F | | | |      start = 2025-09-03 11:12:25.527614804 UTC , finish = 2025-09-03 11:12:26.733921816
| | F | | | |      UTC , thread_cap_info = ("ThreadId 160", 0, False)}
| | F | | | |      
| F | | | | |      
|   F | | | |      
| E   | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 949 , num_strict_rules
| E   | | | |      = 319 , num_top_rules = 319 , num_weak_rules = 630 , alphabet_size = 208
| E   | | | |      , total_length = 5725} , self = 106 , parent = Nothing , duration = 3.021971067000
| E   | | | |      , status = Except "<<timeout>>" , start = 2025-09-03 11:12:26.73405876
| E   | | | |      UTC , finish = 2025-09-03 11:12:29.756029827 UTC , thread_cap_info = ("ThreadId
| E   | | | |      165", 0, False)}
| E   | | | |      
| | E | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 949 , num_strict_rules
| | E | | | |      = 319 , num_top_rules = 319 , num_weak_rules = 630 , alphabet_size = 208
| | E | | | |      , total_length = 5725} , self = 107 , parent = Nothing , duration = 3.027668786000
| | E | | | |      , status = Except "<<timeout>>" , start = 2025-09-03 11:12:26.764510825
| | E | | | |      UTC , finish = 2025-09-03 11:12:29.792179611 UTC , thread_cap_info = ("ThreadId
| | E | | | |      164", 0, False)}
| | E | | | |      
| | | | F | |      
| | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 51
| | | | E | |      , num_strict_rules = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size
| | | | E | |      = 26 , total_length = 181} , self = 110 , parent = Nothing , duration =
| | | | E | |      3.020557516000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | |      11:12:27.311588614 UTC , finish = 2025-09-03 11:12:30.33214613 UTC , thread_cap_info
| | | | E | |      = ("ThreadId 168", 1, False)}
| | | | E | |      
| | | E | | |      
| | |   | | E      
F | |   | |        
S | |   | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S | |   | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
S | |   | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S | |   | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S | |   | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S | |   | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S | |   | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S | |   | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S | |   | |        = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
S | |   | |        , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
S | |   | |        = 92} , self = 112 , parent = Nothing , duration = 1.018568829000 , status
S | |   | |        = Success , start = 2025-09-03 11:12:29.336843663 UTC , finish = 2025-09-03
S | |   | |        11:12:30.355412492 UTC , thread_cap_info = ("ThreadId 174", 3, False)}
S | |   | |        
| E |   | |        
|   E   | |        
|       | S        
|       E          
S                  
