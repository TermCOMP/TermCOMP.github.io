last 544 length 2192
CNF 544 vars 2192 clauses
last 539 length 2340
last 418 length 1686
CNF 539 vars 2340 clauses
CNF 418 vars 1686 clauses
last 468 length 1939
CNF 468 vars 1939 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2342, clauses: 8418
last 2342 length 8418
CNF 2342 vars 8418 clauses
last 4277 length 21448
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2342, clauses: 8418, status: Unsatisfied, time: 0.053353292s
last 3883 length 17573
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1922, clauses: 6834
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6259, clauses: 25769
CNF 4277 vars 21448 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5838, clauses: 24111
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4020, clauses: 15897
CNF 3883 vars 17573 clauses
last 12551 length 53669
last 1922 length 6834
last 6259 length 25769
last 9364 length 44082
last 5838 length 24111
last 4020 length 15897
CNF 1922 vars 6834 clauses
CNF 6259 vars 25769 clauses
CNF 9364 vars 44082 clauses
last 9346 length 44036
CNF 12551 vars 53669 clauses
CNF 4020 vars 15897 clauses
CNF 5838 vars 24111 clauses
last 12589 length 53811
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1922, clauses: 6834, status: Unsatisfied, time: 0.151018356s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6259, clauses: 25769, status: Satisfied, time: 0.18327529s
CNF 9346 vars 44036 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5838, clauses: 24111, status: Satisfied, time: 0.154619456s
CNF 12589 vars 53811 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3685, clauses: 14628
last 3685 length 14628
CNF 3685 vars 14628 clauses
last 513 length 2075
last 523 length 2282
CNF 513 vars 2075 clauses
CNF 523 vars 2282 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23857, clauses: 93451
last 23857 length 93451
CNF 23857 vars 93451 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       mirror
SRS with 4 rules on 3 letters       context
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 6 strict rules and 6 weak rules on 6 letters       weights
SRS with 2 strict rules and 6 weak rules on 4 letters       EDG
SRS with 2 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b] -> [b, a, c, a] {- Input 1 -}
  [b] -> [c] {- Input 2 -}
  [c, c] -> [] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [b, a] -> [a, c, a, b] {- Mirror (Input 1) -}
  [b] -> [c] {- Mirror (Input 2) -}
  [c, c] -> [] {- Mirror (Input 3) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [b, a] -> [a, c, a, b] {- Mirror (Input 1) -}
  [b] -> [c] {- Mirror (Input 2) -}
  [a, c, c] -> [a] {- Mirror (Input 3) -}
  [b, c, c] -> [b] {- Mirror (Input 3) -}
  [c, c, c] -> [c] {- Mirror (Input 3) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b] -> [b, a, c, a] {- Input 1 -}
  [b] -> [c] {- Input 2 -}
  [c, c, a] -> [a] {- Input 3 -}
  [c, c, b] -> [b] {- Input 3 -}
  [c, c, c] -> [c] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b] ->= [b, a, c, a] {- DP Nontop (Input 1) -}
  [b] ->= [c] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 3) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 3) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 3) -}
  [a#] |-> [b#] {- DP (Top 0) (Input 0) -}
  [a#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, b] |-> [a#, c, a] {- DP (Top 1) (Input 1) -}
  [a#, b] |-> [b#, a, c, a] {- DP (Top 0) (Input 1) -}
  [a#, b] |-> [c#, a] {- DP (Top 2) (Input 1) -}
  [b#] |-> [c#] {- DP (Top 0) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 2/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b] ->= [b, a, c, a] {- DP Nontop (Input 1) -}
  [b] ->= [c] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 3) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 3) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 3) -}
  [a#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, b] |-> [a#, c, a] {- DP (Top 1) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, b] |-> [a#, c, a] {- DP (Top 1) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b] ->= [b, a, c, a] {- DP Nontop (Input 1) -}
  [b] ->= [c] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 3) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 3) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 1A 0A  1A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( b
  , Wk  / 1A 0A  1A \
        | 0A -2A 0A |
        \ -  -   0A / )
  ( c
  , Wk  / -1A 0A 0A \
        | 0A  -  -  |
        \ -   -  0A / )
  ( a#
  , Wk  / 1A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b] ->= [b, a, c, a] {- DP Nontop (Input 1) -}
  [b] ->= [c] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 3) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 3) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: \Mirror(4,3)\Context\Mirror(6,3)\Deepee(6/6,6)\Weight\EDG(2/6,4)\Matrix{\ArcticBZ}{3}(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.003099051000
  min duration 0.015262070000
  total durat. 2.101151666000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 117
      , num_strict_rules = 81
      , num_top_rules = 81
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 579}
    , self = 77
    , parent = Nothing
    , duration = 1.003099051000
    , status = Fail
    , start = 2025-09-03 11:23:35.704613227 UTC
    , finish = 2025-09-03 11:23:36.707712278 UTC
    , thread_cap_info = ("ThreadId 96", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.863537813000
  min duration 0.029389081000
  total durat. 1.920811679000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.772389546000
  min duration 0.721715859000
  total durat. 1.494105405000
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                    = 57 , parent = Nothing , duration = 0.105947862000 , status = Fail , start
F                    = 2025-09-03 11:23:35.667067234 UTC , finish = 2025-09-03 11:23:35.773015096
F                    UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 180} , self = 61 , parent = Nothing , duration = 0.488059320000 , status
| F                  = Fail , start = 2025-09-03 11:23:35.67284622 UTC , finish = 2025-09-03
| F                  11:23:36.16090554 UTC , thread_cap_info = ("ThreadId 76", 0, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 180} , self = 60 , parent = Nothing , duration = 0.479085623000 , status
| | F                = Fail , start = 2025-09-03 11:23:35.672853253 UTC , finish = 2025-09-03
| | F                11:23:36.151938876 UTC , thread_cap_info = ("ThreadId 78", 0, False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
| | | F              alphabet_size = 5 , total_length = 37} , self = 59 , parent = Nothing ,
| | | F              duration = 0.220849716000 , status = Fail , start = 2025-09-03 11:23:35.697226212
| | | F              UTC , finish = 2025-09-03 11:23:35.918075928 UTC , thread_cap_info = ("ThreadId
| | | F              92", 2, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 117 , num_strict_rules
| | | | F            = 81 , num_top_rules = 81 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | F            total_length = 579} , self = 77 , parent = Nothing , duration = 1.003099051000
| | | | F            , status = Fail , start = 2025-09-03 11:23:35.704613227 UTC , finish =
| | | | F            2025-09-03 11:23:36.707712278 UTC , thread_cap_info = ("ThreadId 96", 3,
| | | | F            False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 117 , num_strict_rules
| | | | | F          = 81 , num_top_rules = 81 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | F          total_length = 579} , self = 68 , parent = Nothing , duration = 0.863537813000
| | | | | F          , status = Fail , start = 2025-09-03 11:23:35.723928273 UTC , finish =
| | | | | F          2025-09-03 11:23:36.587466086 UTC , thread_cap_info = ("ThreadId 97", 3,
| | | | | F          False)}
| | | | | F          
| | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | S        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | | | | S        = 5 , total_length = 37} , self = 65 , parent = Nothing , duration = 0.721715859000
| | | | | | S        , status = Success , start = 2025-09-03 11:23:35.723934323 UTC , finish
| | | | | | S        = 2025-09-03 11:23:36.445650182 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | S        2, False)}
| | | | | | S        
| | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | | | | F      = 4 , total_length = 30} , self = 64 , parent = Nothing , duration = 0.692642133000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:23:35.732119905 UTC , finish =
| | | | | | | F      2025-09-03 11:23:36.424762038 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | F      2, False)}
| | | | | | | F      
F | | | | | | |      
F | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 117 , num_strict_rules
F | | | | | | |      = 81 , num_top_rules = 81 , num_weak_rules = 36 , alphabet_size = 17 ,
F | | | | | | |      total_length = 579} , self = 63 , parent = Nothing , duration = 0.509349024000
F | | | | | | |      , status = Fail , start = 2025-09-03 11:23:35.7840817 UTC , finish = 2025-09-03
F | | | | | | |      11:23:36.293430724 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
F | | | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 117 , num_strict_rules
| | | | | | | | F    = 81 , num_top_rules = 81 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | F    total_length = 579} , self = 62 , parent = Nothing , duration = 0.448828733000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:23:35.79805504 UTC , finish = 2025-09-03
| | | | | | | | F    11:23:36.246883773 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | | | | | | | F    
| | | | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | | S  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | S  = 4 , total_length = 30} , self = 67 , parent = Nothing , duration = 0.772389546000
| | | | | | | | | S  , status = Success , start = 2025-09-03 11:23:35.812193908 UTC , finish
| | | | | | | | | S  = 2025-09-03 11:23:36.584583454 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | S  2, False)}
| | | | | | | | | S  
| | | F | | | | | |  
| | | E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | E | | | | | |  = 5 , total_length = 37} , self = 69 , parent = Nothing , duration = 0.685799861000
| | | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:23:35.918141279
| | | E | | | | | |  UTC , finish = 2025-09-03 11:23:36.60394114 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | |  111", 2, False)}
| | | E | | | | | |  
| | F | | | | | | |  
| F   | | | | | | |  
|     | | | | | F |  
F     | | | | |   |  
      | | | | F   |  
      | | | S     |  
E     | | |       |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E     | | |       |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E     | | |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E     | | |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     | | |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     | | |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E     | | |       |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
E     | | |       |  = 4 , total_length = 30} , self = 74 , parent = Nothing , duration = 0.156339398000
E     | | |       |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:23:36.511748956
E     | | |       |  UTC , finish = 2025-09-03 11:23:36.668088354 UTC , thread_cap_info = ("ThreadId
E     | | |       |  126", 2, False)}
E     | | |       |  
|     | | |       S  
|     | | F          
|     E |            
E       |            
        F            
