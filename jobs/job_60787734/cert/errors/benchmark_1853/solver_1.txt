last 601 length 2459
last 742 length 3078
CNF 601 vars 2459 clauses
CNF 742 vars 3078 clauses
last 624 length 2595
last 731 length 2986
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1871, clauses: 6672
last 1871 length 6672
CNF 624 vars 2595 clauses
CNF 731 vars 2986 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6830, clauses: 28431
CNF 1871 vars 6672 clauses
last 7336 length 32269
last 5744 length 25106
last 9051 length 41091
last 5914 length 24922
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2186, clauses: 7857
last 11115 length 54709
last 8664 length 39366
last 6830 length 28431
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7759, clauses: 32358
CNF 7336 vars 32269 clauses
CNF 5744 vars 25106 clauses
CNF 9051 vars 41091 clauses
last 2186 length 7857
CNF 5914 vars 24922 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1871, clauses: 6672, status: Unsatisfied, time: 0.507982562s
CNF 6830 vars 28431 clauses
CNF 11115 vars 54709 clauses
CNF 8664 vars 39366 clauses
last 7759 length 32358
CNF 2186 vars 7857 clauses
CNF 7759 vars 32358 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6830, clauses: 28431, status: Satisfied, time: 0.338418908s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4088, clauses: 16622
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11325, clauses: 42290
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2186, clauses: 7857, status: Unsatisfied, time: 0.570277056s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11478, clauses: 42617
last 11325 length 42290
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7759, clauses: 32358, status: Satisfied, time: 0.730726627s
last 11478 length 42617
**************************************************
CNF 11325 vars 42290 clauses
CNF 11478 vars 42617 clauses
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 6 strict rules and 3 weak rules on 5 letters       weights
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [a, c, a, b] {- Input 0 -}
  [a, c] -> [c, c, a] {- Input 1 -}
  [c, c, c] -> [b, c, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b, a] -> [b, a, c, a] {- Mirror (Input 0) -}
  [c, a] -> [a, c, c] {- Mirror (Input 1) -}
  [c, c, c] -> [b, c, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, c, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, b, b, a] |-> [a#, c, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, b, b, a] |-> [c#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a] |-> [c#] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c, c] |-> [c#, b] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  (a, 2/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, c, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, b, b, a] |-> [a#, c, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [c#, c, c] |-> [c#, b] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b, a] |-> [a#, c, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, b, b, a] ->= [b, a, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, c, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A -2A 0A \
        | 1A  0A  -  |
        \ -   -   0A / )
  ( b
  , Wk  / 1A -2A 0A \
        | -  -   -  |
        \ -  -   0A / )
  ( c
  , Wk  / -  -1A 0A \
        | 1A 0A  2A |
        \ -  -   0A / )
  ( a#
  , Wk  / 0A -1A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a, b, b, a] ->= [b, a, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, c, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee(6/3,5)\Weight(2/3,5)\EDG(1/3,4)\Matrix{\ArcticBZ}{3}(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.784778697000
  min duration 0.018236787000
  total durat. 2.204413271000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.677643524000
  min duration 0.032492308000
  total durat. 2.123437229000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.135841698000
  min duration 1.135841698000
  total durat. 1.135841698000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 26}
    , self = 68
    , parent = Nothing
    , duration = 1.135841698000
    , status = Success
    , start = 2025-09-03 13:23:41.839142732 UTC
    , finish = 2025-09-03 13:23:42.97498443 UTC
    , thread_cap_info = ("ThreadId 91", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.068218620000
  min duration 0.676603267000
  total durat. 1.744821887000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 30}
    , self = 73
    , parent = Nothing
    , duration = 1.068218620000
    , status = Fail
    , start = 2025-09-03 13:23:42.093393524 UTC
    , finish = 2025-09-03 13:23:43.161612144 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.492542457000
  min duration 1.492542457000
  total durat. 1.492542457000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 19}
    , self = 74
    , parent = Nothing
    , duration = 1.492542457000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:23:41.786469635 UTC
    , finish = 2025-09-03 13:23:43.279012092 UTC
    , thread_cap_info = ("ThreadId 71", 1, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 19} , self = 74 , parent = Nothing , duration = 1.492542457000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 13:23:41.786469635 UTC ,
E                      finish = 2025-09-03 13:23:43.279012092 UTC , thread_cap_info = ("ThreadId
E                      71", 1, False)}
E                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| F                    = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| F                    = 252} , self = 63 , parent = Nothing , duration = 0.627404882000 , status
| F                    = Fail , start = 2025-09-03 13:23:41.798254018 UTC , finish = 2025-09-03
| F                    13:23:42.4256589 UTC , thread_cap_info = ("ThreadId 83", 2, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                  = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F                  = 30} , self = 57 , parent = Nothing , duration = 0.242013604000 , status
| | F                  = Fail , start = 2025-09-03 13:23:41.799216106 UTC , finish = 2025-09-03
| | F                  13:23:42.04122971 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F                = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F                = 30} , self = 59 , parent = Nothing , duration = 0.326858017000 , status
| | | F                = Fail , start = 2025-09-03 13:23:41.80631784 UTC , finish = 2025-09-03
| | | F                13:23:42.133175857 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | F              = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | F              = 252} , self = 62 , parent = Nothing , duration = 0.603147252000 , status
| | | | F              = Fail , start = 2025-09-03 13:23:41.819006212 UTC , finish = 2025-09-03
| | | | F              13:23:42.422153464 UTC , thread_cap_info = ("ThreadId 84", 2, False)}
| | | | F              
| | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F            = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | F            = 4 , total_length = 26} , self = 65 , parent = Nothing , duration = 0.676603267000
| | | | | F            , status = Fail , start = 2025-09-03 13:23:41.824683467 UTC , finish =
| | | | | F            2025-09-03 13:23:42.501286734 UTC , thread_cap_info = ("ThreadId 88", 0,
| | | | | F            False)}
| | | | | F            
| | | | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | S          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | S          = 4 , total_length = 26} , self = 68 , parent = Nothing , duration = 1.135841698000
| | | | | | S          , status = Success , start = 2025-09-03 13:23:41.839142732 UTC , finish
| | | | | | S          = 2025-09-03 13:23:42.97498443 UTC , thread_cap_info = ("ThreadId 91",
| | | | | | S          0, False)}
| | | | | | S          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F        = 225} , self = 64 , parent = Nothing , duration = 0.531979301000 , status
| | | | | | | F        = Fail , start = 2025-09-03 13:23:41.910702281 UTC , finish = 2025-09-03
| | | | | | | F        13:23:42.442681582 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | | F      = 225} , self = 61 , parent = Nothing , duration = 0.483296128000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 13:23:41.918790015 UTC , finish = 2025-09-03
| | | | | | | | F      13:23:42.402086143 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | | | | F    = 255} , self = 66 , parent = Nothing , duration = 0.677643524000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 13:23:41.926239302 UTC , finish = 2025-09-03
| | | | | | | | | F    13:23:42.603882826 UTC , thread_cap_info = ("ThreadId 103", 2, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | | | | | F  = 255} , self = 67 , parent = Nothing , duration = 0.784778697000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 13:23:41.938243347 UTC , finish = 2025-09-03
| | | | | | | | | | F  13:23:42.723022044 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | | | | | | | | | F  
| | F | | | | | | | |  
| | F | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | | | | |  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F | | | | | | | |  = 4 , total_length = 30} , self = 73 , parent = Nothing , duration = 1.068218620000
| | F | | | | | | | |  , status = Fail , start = 2025-09-03 13:23:42.093393524 UTC , finish =
| | F | | | | | | | |  2025-09-03 13:23:43.161612144 UTC , thread_cap_info = ("ThreadId 107",
| | F | | | | | | | |  0, False)}
| | F | | | | | | | |  
| | | F | | | | | | |  
| | |   | | | | F | |  
| | |   F | | |   | |  
| F |     | | |   | |  
|   |     | | F   | |  
|   |     F |     | |  
| E |       |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E |       |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E |       |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E |       |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |       |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |       |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E |       |     | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| E |       |     | |  = 4 , total_length = 26} , self = 70 , parent = Nothing , duration = 0.526806750000
| E |       |     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:23:42.536066291
| E |       |     | |  UTC , finish = 2025-09-03 13:23:43.062873041 UTC , thread_cap_info = ("ThreadId
| E |       |     | |  124", 0, False)}
| E |       |     | |  
| | |       |     F |  
| | |       |       F  
| | |       S          
| E |                  
|   F                  
E                      
