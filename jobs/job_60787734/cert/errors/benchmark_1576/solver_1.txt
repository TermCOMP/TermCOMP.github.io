last 1675 length 7678
CNF 1675 vars 7678 clauses
last 1864 length 8663
CNF 1864 vars 8663 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1756, clauses: 7075
last 1756 length 7075
last 4282 length 19207
CNF 1756 vars 7075 clauses
CNF 4282 vars 19207 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1756, clauses: 7075, status: Unsatisfied, time: 0.215225241s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5863, clauses: 24603
last 5863 length 24603
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3530, clauses: 15224
last 3530 length 15224
CNF 5863 vars 24603 clauses
CNF 3530 vars 15224 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3530, clauses: 15224, status: Unsatisfied, time: 0.165041878s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5863, clauses: 24603, status: Unsatisfied, time: 0.248903804s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3376, clauses: 14221
last 3376 length 14221
last 8760 length 42435
CNF 3376 vars 14221 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2928, clauses: 12370
CNF 8760 vars 42435 clauses
last 2928 length 12370
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3376, clauses: 14221, status: Unsatisfied, time: 0.400205141s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9942, clauses: 45770
CNF 2928 vars 12370 clauses
last 9942 length 45770
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9650, clauses: 40624
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6038, clauses: 25728
CNF 9942 vars 45770 clauses
last 9650 length 40624
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2928, clauses: 12370, status: Satisfied, time: 0.620502377s
last 6038 length 25728
CNF 9650 vars 40624 clauses
CNF 6038 vars 25728 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9650, clauses: 40624, status: Satisfied, time: 0.560406413s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       DP
SRS with 12 strict rules and 1 weak rules on 3 letters       EDG
SRS with 2 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a, a, a, a, a, a, a] -> [ a , a , a , a , a , a , a , a , a , b , a , a , a , b ] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, a, a, a, a, a, a, a] ->= [ a , a , a , a , a , a , a , a , a , b , a , a , a , b ] {- DP Nontop (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , a , a , a , a , a , a , b , a , a , a , b ] {- DP (Top 0) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , a , a , a , a , a , b , a , a , a , b ] {- DP (Top 1) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , a , a , a , a , b , a , a , a , b ] {- DP (Top 2) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , a , a , a , b , a , a , a , b ] {- DP (Top 3) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , a , a , b , a , a , a , b ] {- DP (Top 4) (Input 0) -}last 9734 length 68734

  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , a , b , a , a , a , b ] {- DP (Top 5) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [a#, a, a, b] {- DP (Top 10) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , a , b , a , a , a , b ] {- DP (Top 6) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [a#, a, b] {- DP (Top 11) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , a , b , a , a , a , b ] {- DP (Top 7) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [a#, b] {- DP (Top 12) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , b , a , a , a , b ] {- DP (Top 8) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a, a, a, a, a, a, a] |-> [ a# , b , a , a , a , b ] {- DP (Top 8) (Input 0) -}
  [a#, b, a, a, a, a, a, a, a, a] |-> [a#, b] {- DP (Top 12) (Input 0) -}
  [a, b, a, a, a, a, a, a, a, a] ->= [ a , a , a , a , a , a , a , a , a , b , a , a , a , b ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( a#
  , Wk  / 10A 11A 13A 13A - \
        | 10A 11A 13A 13A - |
        | 10A 11A 13A 13A - |
        | 10A 11A 13A 13A - |
        \ -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, b, a, a, a, a, a, a, a, a] ->= [ a , a , a , a , a , a , a , a , a , b , a , a , a , b ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,2)\Deepee(12/1,3)\EDG(2/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.681320515000
  min duration 0.461806674000
  total durat. 2.143127189000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 148}
    , self = 62
    , parent = Nothing
    , duration = 1.681320515000
    , status = Fail
    , start = 2025-09-03 12:18:03.736569424 UTC
    , finish = 2025-09-03 12:18:05.417889939 UTC
    , thread_cap_info = ("ThreadId 86", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.426293659000
  min duration 1.426293659000
  total durat. 1.426293659000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 52}
    , self = 66
    , parent = Nothing
    , duration = 1.426293659000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:18:04.937267351 UTC
    , finish = 2025-09-03 12:18:06.36356101 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.950799274000
  min duration 0.305516986000
  total durat. 1.256316260000
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.302016667000
  min duration 1.302016667000
  total durat. 1.302016667000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 52}
    , self = 64
    , parent = Nothing
    , duration = 1.302016667000
    , status = Success
    , start = 2025-09-03 12:18:04.896567315 UTC
    , finish = 2025-09-03 12:18:06.198583982 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 2.866899223000
  min duration 2.866899223000
  total durat. 2.866899223000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 71
    , parent = Nothing
    , duration = 2.866899223000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:18:03.690798618 UTC
    , finish = 2025-09-03 12:18:06.557697841 UTC
    , thread_cap_info = ("ThreadId 22", 0, False)}
**************************************************
E          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E          = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
E          = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
E          = 71 , parent = Nothing , duration = 2.866899223000 , status = Except "AsyncCancelled"
E          , start = 2025-09-03 12:18:03.690798618 UTC , finish = 2025-09-03 12:18:06.557697841
E          UTC , thread_cap_info = ("ThreadId 22", 0, False)}
E          
| F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F        = 8 , num_top_rules = 8 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F        = 148} , self = 62 , parent = Nothing , duration = 1.681320515000 , status
| F        = Fail , start = 2025-09-03 12:18:03.736569424 UTC , finish = 2025-09-03
| F        12:18:05.417889939 UTC , thread_cap_info = ("ThreadId 86", 1, False)}
| F        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F      = 52} , self = 57 , parent = Nothing , duration = 0.461806674000 , status
| | F      = Fail , start = 2025-09-03 12:18:03.756579204 UTC , finish = 2025-09-03
| | F      12:18:04.218385878 UTC , thread_cap_info = ("ThreadId 87", 1, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F    = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F    = 52} , self = 54 , parent = Nothing , duration = 0.242916354000 , status
| | | F    = Fail , start = 2025-09-03 12:18:03.756584814 UTC , finish = 2025-09-03
| | | F    12:18:03.999501168 UTC , thread_cap_info = ("ThreadId 88", 1, False)}
| | | F    
| | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F  = 8 , num_top_rules = 8 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | F  = 148} , self = 59 , parent = Nothing , duration = 0.620104355000 , status
| | | | F  = Fail , start = 2025-09-03 12:18:03.817381023 UTC , finish = 2025-09-03
| | | | F  12:18:04.437485378 UTC , thread_cap_info = ("ThreadId 91", 1, False)}
| | | | F  
| | | F |  
| | | F |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | F |  = 3 , total_length = 52} , self = 58 , parent = Nothing , duration = 0.305516986000
| | | F |  , status = Fail , start = 2025-09-03 12:18:04.078132563 UTC , finish =
| | | F |  2025-09-03 12:18:04.383649549 UTC , thread_cap_info = ("ThreadId 102",
| | | F |  1, False)}
| | | F |  
| | F | |  
| | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | F | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | F | |  = 3 , total_length = 52} , self = 61 , parent = Nothing , duration = 0.616518968000
| | F | |  , status = Fail , start = 2025-09-03 12:18:04.264157065 UTC , finish =
| | F | |  2025-09-03 12:18:04.880676033 UTC , thread_cap_info = ("ThreadId 107",
| | F | |  1, False)}
| | F | |  
| | | F |  
| | |   F  
| | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | F    = 3 , total_length = 52} , self = 60 , parent = Nothing , duration = 0.323781976000
| | | F    , status = Fail , start = 2025-09-03 12:18:04.47657036 UTC , finish = 2025-09-03
| | | F    12:18:04.800352336 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| | | F    
| | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F  = 9 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 1 , alphabet_size
| | | | F  = 3 , total_length = 148} , self = 63 , parent = Nothing , duration = 0.950799274000
| | | | F  , status = Fail , start = 2025-09-03 12:18:04.605757132 UTC , finish =
| | | | F  2025-09-03 12:18:05.556556406 UTC , thread_cap_info = ("ThreadId 110",
| | | | F  1, False)}
| | | | F  
| | | F |  
| | F   |  
| | S   |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | S   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | S   |  = 3 , total_length = 52} , self = 64 , parent = Nothing , duration = 1.302016667000
| | S   |  , status = Success , start = 2025-09-03 12:18:04.896567315 UTC , finish
| | S   |  = 2025-09-03 12:18:06.198583982 UTC , thread_cap_info = ("ThreadId 113",
| | S   |  1, False)}
| | S   |  
| | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | E |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | E |  = 3 , total_length = 52} , self = 66 , parent = Nothing , duration = 1.426293659000
| | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:18:04.937267351
| | | E |  UTC , finish = 2025-09-03 12:18:06.36356101 UTC , thread_cap_info = ("ThreadId
| | | E |  115", 1, False)}
| | | E |  
| F | | |  
| S | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| S | | |  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 1 , alphabet_size
| S | | |  = 3 , total_length = 148} , self = 69 , parent = Nothing , duration = 0.982294124000
| S | | |  , status = Success , start = 2025-09-03 12:18:05.436634323 UTC , finish
| S | | |  = 2025-09-03 12:18:06.418928447 UTC , thread_cap_info = ("ThreadId 117",
| S | | |  1, False)}
| S | | |  
| | | | F  
| | S |    
| |   E    
| S        
E          
