last 503 length 1959
last 612 length 2434
CNF 503 vars 1959 clauses
last 470 length 1819
last 548 length 2158
CNF 612 vars 2434 clauses
CNF 548 vars 2158 clauses
CNF 470 vars 1819 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2210, clauses: 7896
last 2210 length 7896
CNF 2210 vars 7896 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2630, clauses: 9465
last 2630 length 9465
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2210, clauses: 7896, status: Unsatisfied, time: 0.096606513s
CNF 2630 vars 9465 clauses
last 3841 length 16328
CNF 3841 vars 16328 clauses
last 4575 length 20697
CNF 4575 vars 20697 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2630, clauses: 9465, status: Unsatisfied, time: 0.145419993s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4489, clauses: 17576
last 4489 length 17576
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7213, clauses: 29771
last 7213 length 29771
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7086, clauses: 29343
CNF 4489 vars 17576 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4648, clauses: 18205
last 7086 length 29343
CNF 7213 vars 29771 clauses
last 4648 length 18205
CNF 7086 vars 29343 clauses
CNF 4648 vars 18205 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7086, clauses: 29343, status: Satisfied, time: 0.139361061s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7213, clauses: 29771, status: Satisfied, time: 0.217962539s
last 466 length 1824
last 409 length 1593
CNF 466 vars 1824 clauses
CNF 409 vars 1593 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 7431
last 2102 length 7431
CNF 2102 vars 7431 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7038, clauses: 29163
last 7038 length 29163
last 596 length 2364
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 7431, status: Unsatisfied, time: 0.086619426s
last 529 length 2071
CNF 596 vars 2364 clauses
CNF 529 vars 2071 clauses
last 7929 length 34020
CNF 7038 vars 29163 clauses
CNF 7929 vars 34020 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2419, clauses: 8680
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4412, clauses: 17286
last 4412 length 17286
last 2419 length 8680
CNF 2419 vars 8680 clauses
CNF 4412 vars 17286 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7038, clauses: 29163, status: Unsatisfied, time: 0.306703964s
last 9911 length 42706
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2419, clauses: 8680, status: Unsatisfied, time: 0.223094526s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3433, clauses: 12789
last 3433 length 12789
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6875, clauses: 28361
last 10243 length 42605
CNF 9911 vars 42706 clauses
CNF 3433 vars 12789 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4412, clauses: 17286, status: Unsatisfied, time: 0.229952917s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4403, clauses: 17259
last 6875 length 28361
last 13653 length 56761
CNF 10243 vars 42605 clauses
last 4403 length 17259
CNF 6875 vars 28361 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3433, clauses: 12789, status: Unsatisfied, time: 0.409022178s
CNF 13653 vars 56761 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16195, clauses: 64222
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12514, clauses: 50159
CNF 4403 vars 17259 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6875, clauses: 28361, status: Satisfied, time: 0.624824926s
last 16195 length 64222
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6440, clauses: 23840
last 12514 length 50159
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22131, clauses: 89141
last 6440 length 23840
last 22131 length 89141
CNF 16195 vars 64222 clauses
CNF 12514 vars 50159 clauses
**************************************************CNF 6440 vars 23840 clauses

CNF 22131 vars 89141 clauses
summary
**************************************************
SRS with 4 rules on 3 letters       context
SRS with 8 rules on 3 letters       mirror
SRS with 8 rules on 3 letters       DP
SRS with 6 strict rules and 8 weak rules on 6 letters       weights
SRS with 4 strict rules and 8 weak rules on 5 letters       EDG
SRS with 4 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 8 weak rules on 5 letters       EDG
SRS with 3 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 8 weak rules on 5 letters       weights
SRS with 0 strict rules and 8 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a] -> [b, b, c] {- Input 1 -}
  [a, c, b] -> [c, a, a] {- Input 2 -}
  [c] -> [] {- Input 3 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a] -> [b, b, c] {- Input 1 -}
  [a, c, b] -> [c, a, a] {- Input 2 -}
  [a, c] -> [a] {- Input 3 -}
  [b, c] -> [b] {- Input 3 -}
  [c, c] -> [c] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [a] -> [c, b, b] {- Mirror (Input 1) -}
  [b, c, a] -> [a, a, c] {- Mirror (Input 2) -}
  [c, a] -> [a] {- Mirror (Input 3) -}
  [c, b] -> [b] {- Mirror (Input 3) -}
  [c, c] -> [c] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, a] |-> [a#, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c, a] |-> [c#] {- DP (Top 2) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, a] |-> [a#, c] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A  0A 1A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( b
  , Wk  / -1A -   0A  \
        | 0A  -1A -1A |
        \ -   -   0A  / )
  ( c
  , Wk  / -1A 1A 1A \
        | -2A 0A -  |
        \ -   -  0A / )
  ( a#
  , Wk  / 0A 1A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( b#
  , Wk  / 0A -1A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, a] |-> [a#, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, a] |-> [a#, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A 0A 1A \
        | 0A 1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / -1A - 0A \
        | 0A  - -  |
        \ -   - 0A / )
  ( c
  , Wk  / 0A 1A -  \
        | -  0A -  |
        \ -  -  0A / )
  ( a#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
  ( b#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 2)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [c, b] ->= [b] {- DP Nontop (Mirror (Input 3)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Context\Mirror(8,3)\Deepee(6/8,6)\Weight\EDG(4/8,5)\Matrix{\ArcticBZ}{3}\EDG(3/8,5)\Matrix{\ArcticBZ}{3}(1/8,5)\Weight(0/8,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.800995279000
  min duration 0.020861854000
  total durat. 3.817586358000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 78
      , num_strict_rules = 42
      , num_top_rules = 42
      , num_weak_rules = 36
      , alphabet_size = 14
      , total_length = 408}
    , self = 87
    , parent = Nothing
    , duration = 1.635576004000
    , status = Fail
    , start = 2025-09-03 11:25:09.153011846 UTC
    , finish = 2025-09-03 11:25:10.78858785 UTC
    , thread_cap_info = ("ThreadId 88", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 110
      , num_strict_rules = 74
      , num_top_rules = 74
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 567}
    , self = 89
    , parent = Nothing
    , duration = 1.800995279000
    , status = Fail
    , start = 2025-09-03 11:25:09.285163304 UTC
    , finish = 2025-09-03 11:25:11.086158583 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.147757336000
  min duration 0.015512466000
  total durat. 2.431661953000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 110
      , num_strict_rules = 74
      , num_top_rules = 74
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 567}
    , self = 85
    , parent = Nothing
    , duration = 1.147757336000
    , status = Fail
    , start = 2025-09-03 11:25:09.305484517 UTC
    , finish = 2025-09-03 11:25:10.453241853 UTC
    , thread_cap_info = ("ThreadId 105", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.379245378000
  min duration 0.498627244000
  total durat. 2.409472883000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 41}
    , self = 90
    , parent = Nothing
    , duration = 1.379245378000
    , status = Success
    , start = 2025-09-03 11:25:09.946418003 UTC
    , finish = 2025-09-03 11:25:11.325663381 UTC
    , thread_cap_info = ("ThreadId 144", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.168028077000
  min duration 0.272974613000
  total durat. 1.839812342000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 41}
    , self = 92
    , parent = Nothing
    , duration = 1.168028077000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:25:10.242333862 UTC
    , finish = 2025-09-03 11:25:11.410361939 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.409714917000
  min duration 2.409714917000
  total durat. 2.409714917000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 95
    , parent = Nothing
    , duration = 2.409714917000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:25:09.115437877 UTC
    , finish = 2025-09-03 11:25:11.525152794 UTC
    , thread_cap_info = ("ThreadId 39", 0, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 12} , self = 95 , parent = Nothing , duration = 2.409714917000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 11:25:09.115437877 UTC ,
E                      finish = 2025-09-03 11:25:11.525152794 UTC , thread_cap_info = ("ThreadId
E                      39", 0, False)}
E                      
| F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                    = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| F                    alphabet_size = 4 , total_length = 37} , self = 55 , parent = Nothing ,
| F                    duration = 0.117557394000 , status = Fail , start = 2025-09-03 11:25:09.146710403
| F                    UTC , finish = 2025-09-03 11:25:09.264267797 UTC , thread_cap_info = ("ThreadId
| F                    85", 3, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | F                  = 42 , num_top_rules = 42 , num_weak_rules = 36 , alphabet_size = 14 ,
| | F                  total_length = 408} , self = 87 , parent = Nothing , duration = 1.635576004000
| | F                  , status = Fail , start = 2025-09-03 11:25:09.153011846 UTC , finish =
| | F                  2025-09-03 11:25:10.78858785 UTC , thread_cap_info = ("ThreadId 88", 1,
| | F                  False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | | F                = 42 , num_top_rules = 42 , num_weak_rules = 36 , alphabet_size = 14 ,
| | | F                total_length = 408} , self = 82 , parent = Nothing , duration = 0.903602641000
| | | F                , status = Fail , start = 2025-09-03 11:25:09.165682332 UTC , finish =
| | | F                2025-09-03 11:25:10.069284973 UTC , thread_cap_info = ("ThreadId 89", 1,
| | | F                False)}
| | | F                
| | | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | S              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | S              = 4 , total_length = 37} , self = 63 , parent = Nothing , duration = 0.531600261000
| | | | S              , status = Success , start = 2025-09-03 11:25:09.169804162 UTC , finish
| | | | S              = 2025-09-03 11:25:09.701404423 UTC , thread_cap_info = ("ThreadId 97",
| | | | S              3, False)}
| | | | S              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | F            = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F            = 180} , self = 58 , parent = Nothing , duration = 0.211206539000 , status
| | | | | F            = Fail , start = 2025-09-03 11:25:09.19258737 UTC , finish = 2025-09-03
| | | | | F            11:25:09.403793909 UTC , thread_cap_info = ("ThreadId 92", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F          = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | F          alphabet_size = 5 , total_length = 44} , self = 59 , parent = Nothing ,
| | | | | | F          duration = 0.219914965000 , status = Fail , start = 2025-09-03 11:25:09.192603994
| | | | | | F          UTC , finish = 2025-09-03 11:25:09.412518959 UTC , thread_cap_info = ("ThreadId
| | | | | | F          98", 3, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | F        = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F        = 180} , self = 61 , parent = Nothing , duration = 0.221987315000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:25:09.20680853 UTC , finish = 2025-09-03
| | | | | | | F        11:25:09.428795845 UTC , thread_cap_info = ("ThreadId 94", 0, False)}
| | | | | | | F        
| | | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | | S      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | | | | S      = 5 , total_length = 44} , self = 70 , parent = Nothing , duration = 0.498627244000
| | | | | | | | S      , status = Success , start = 2025-09-03 11:25:09.209051474 UTC , finish
| | | | | | | | S      = 2025-09-03 11:25:09.707678718 UTC , thread_cap_info = ("ThreadId 99",
| | | | | | | | S      3, False)}
| | | | | | | | S      
| F | | | | | | |      
| F | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 110 , num_strict_rules
| F | | | | | | |      = 74 , num_top_rules = 74 , num_weak_rules = 36 , alphabet_size = 17 ,
| F | | | | | | |      total_length = 567} , self = 89 , parent = Nothing , duration = 1.800995279000
| F | | | | | | |      , status = Fail , start = 2025-09-03 11:25:09.285163304 UTC , finish =
| F | | | | | | |      2025-09-03 11:25:11.086158583 UTC , thread_cap_info = ("ThreadId 104",
| F | | | | | | |      1, False)}
| F | | | | | | |      
| | | | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | | E    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | | E    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | | | | | E    = 4 , total_length = 37} , self = 65 , parent = Nothing , duration = 0.398809652000
| | | | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 11:25:09.305167838
| | | | | | | | | E    UTC , finish = 2025-09-03 11:25:09.70397749 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E    106", 3, False)}
| | | | | | | | | E    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 110 , num_strict_rules
| | | | | | | | | | F  = 74 , num_top_rules = 74 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | | | F  total_length = 567} , self = 85 , parent = Nothing , duration = 1.147757336000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:25:09.305484517 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:25:10.453241853 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | | | F  1, False)}
| | | | | | | | | | F  
| | | | | F | | | | |  
| | | | |   F | | | |  
| | | | |     F | | |  
| | | | | E     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E     | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | E     | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | E     | | |  = 5 , total_length = 44} , self = 73 , parent = Nothing , duration = 0.272974613000
| | | | | E     | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:25:09.448427517
| | | | | E     | | |  UTC , finish = 2025-09-03 11:25:09.72140213 UTC , thread_cap_info = ("ThreadId
| | | | | E     | | |  115", 3, False)}
| | | | | E     | | |  
| | | | S |     | | |  
| | | |   |     | E |  
| | | |   |     S   |  
| | | | F |         |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F |         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F |         |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F |         |  = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | | F |         |  = 4 , total_length = 33} , self = 79 , parent = Nothing , duration = 0.120299352000
| | | | F |         |  , status = Fail , start = 2025-09-03 11:25:09.719834222 UTC , finish =
| | | | F |         |  2025-09-03 11:25:09.840133574 UTC , thread_cap_info = ("ThreadId 130",
| | | | F |         |  3, False)}
| | | | F |         |  
| | | | | E         |  
| | | | | F         |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F         |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | F         |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | | | F         |  = 4 , total_length = 33} , self = 83 , parent = Nothing , duration = 0.403304175000
| | | | | F         |  , status = Fail , start = 2025-09-03 11:25:09.739001493 UTC , finish =
| | | | | F         |  2025-09-03 11:25:10.142305668 UTC , thread_cap_info = ("ThreadId 132",
| | | | | F         |  3, False)}
| | | | | F         |  
| | | | F |         |  
| | | | F |         |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F |         |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | F |         |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | | F |         |  = 4 , total_length = 33} , self = 86 , parent = Nothing , duration = 0.600142660000
| | | | F |         |  , status = Fail , start = 2025-09-03 11:25:09.885009936 UTC , finish =
| | | | F |         |  2025-09-03 11:25:10.485152596 UTC , thread_cap_info = ("ThreadId 140",
| | | | F |         |  3, False)}
| | | | F |         |  
| | | | | | F       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F       |  = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
| | | | | | F       |  alphabet_size = 5 , total_length = 41} , self = 84 , parent = Nothing ,
| | | | | | F       |  duration = 0.308122332000 , status = Fail , start = 2025-09-03 11:25:09.927485645
| | | | | | F       |  UTC , finish = 2025-09-03 11:25:10.235607977 UTC , thread_cap_info = ("ThreadId
| | | | | | F       |  143", 3, False)}
| | | | | | F       |  
| | | | | | | S     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | S     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
| | | | | | | S     |  = 5 , total_length = 41} , self = 90 , parent = Nothing , duration = 1.379245378000
| | | | | | | S     |  , status = Success , start = 2025-09-03 11:25:09.946418003 UTC , finish
| | | | | | | S     |  = 2025-09-03 11:25:11.325663381 UTC , thread_cap_info = ("ThreadId 144",
| | | | | | | S     |  3, False)}
| | | | | | | S     |  
| | | F | | | |     |  
| | |   | F | |     |  
| | | F |   | |     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |   | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |   | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |   | |     |  = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | F |   | |     |  = 4 , total_length = 33} , self = 88 , parent = Nothing , duration = 0.859399717000
| | | F |   | |     |  , status = Fail , start = 2025-09-03 11:25:10.147768013 UTC , finish =
| | | F |   | |     |  2025-09-03 11:25:11.00716773 UTC , thread_cap_info = ("ThreadId 148", 3,
| | | F |   | |     |  False)}
| | | F |   | |     |  
| | | | |   F |     |  
| | | | | E   |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E   |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E   |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E   |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E   |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E   |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | E   |     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
| | | | | E   |     |  = 5 , total_length = 41} , self = 92 , parent = Nothing , duration = 1.168028077000
| | | | | E   |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:25:10.242333862
| | | | | E   |     |  UTC , finish = 2025-09-03 11:25:11.410361939 UTC , thread_cap_info = ("ThreadId
| | | | | E   |     |  150", 3, False)}
| | | | | E   |     |  
| | | | | |   |     F  
| | | | F |   |        
| | F |   |   |        
| |   F   |   |        
| F       |   |        
|         |   S        
|         E            
E                      
