last 1045 length 4740
CNF 1045 vars 4740 clauses
last 781 length 3412
CNF 781 vars 3412 clauses
last 1368 length 7485
CNF 1368 vars 7485 clauses
last 954 length 4423
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2615, clauses: 9537
CNF 954 vars 4423 clauses
last 2615 length 9537
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2417, clauses: 8754
last 2417 length 8754
last 5101 length 27886
CNF 5101 vars 27886 clauses
CNF 2417 vars 8754 clauses
CNF 2615 vars 9537 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9098, clauses: 38019
last 9098 length 38019
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8224, clauses: 34287
last 8224 length 34287
CNF 8224 vars 34287 clauses
CNF 9098 vars 38019 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2417, clauses: 8754, status: Unsatisfied, time: 0.253401045s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2615, clauses: 9537, status: Unsatisfied, time: 0.351040441s
last 6098 length 41828
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8224, clauses: 34287, status: Satisfied, time: 0.056519866s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9098, clauses: 38019, status: Satisfied, time: 0.09851384s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5131, clauses: 20868
CNF 6098 vars 41828 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5635, clauses: 23016
last 1363 length 7468
last 6438 length 35959
last 904 length 4233
last 894 length 4018
last 654 length 2835
last 6961 length 33060
CNF 904 vars 4233 clauses
CNF 894 vars 4018 clauses
CNF 654 vars 2835 clauses
CNF 6438 vars 35959 clauses
CNF 6961 vars 33060 clauses
last 8032 length 55196
CNF 1363 vars 7468 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2309, clauses: 8325
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2297, clauses: 8289
CNF 8032 vars 55196 clauses
last 17247 length 92122
last 2309 length 8325
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8174, clauses: 34101
last 2297 length 8289
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8176, clauses: 34107
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8328, clauses: 30371
last 8174 length 34101
CNF 17247 vars 92122 clauses
CNF 2309 vars 8325 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15347, clauses: 60276
last 8176 length 34107
CNF 2297 vars 8289 clauses
last 8328 length 30371
CNF 8174 vars 34101 clauses
last 15347 length 60276
CNF 8176 vars 34107 clauses
CNF 8328 vars 30371 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2309, clauses: 8325, status: Unsatisfied, time: 0.500694376s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2297, clauses: 8289, status: Unsatisfied, time: 0.478114826s
CNF 15347 vars 60276 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8174, clauses: 34101, status: Satisfied, time: 0.503694225s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 32868, clauses: 138001
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5054, clauses: 20578
last 32868 length 138001
last 5054 length 20578
CNF 5054 vars 20578 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 7 rules on 3 letters       mirror
SRS with 7 rules on 3 letters       DP
SRS with 4 strict rules and 7 weak rules on 5 letters       weights
SRS with 2 strict rules and 7 weak rules on 4 letters       EDG
SRS with 2 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 7 weak rules on 4 letters       EDG
SRS with 1 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [a, b, b, c, c, a] {- Input 1 -}
  [b, c] -> [] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b] -> [a] {- Input 0 -}
  [b, a, b] -> [b] {- Input 0 -}
  [c, a, b] -> [c] {- Input 0 -}
  [a, c] -> [a, b, b, c, c, a] {- Input 1 -}
  [a, b, c] -> [a] {- Input 2 -}
  [b, b, c] -> [b] {- Input 2 -}
  [c, b, c] -> [c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b] -> [b] {- Mirror (Input 0) -}
  [b, a, c] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [a, c, c, b, b, a] {- Mirror (Input 1) -}
  [c, b, a] -> [a] {- Mirror (Input 2) -}
  [c, b, b] -> [b] {- Mirror (Input 2) -}
  [c, b, c] -> [c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [b#, a] {- DP (Top 4) (Mirror (Input 1)) -}
  [c#, a] |-> [b#, b, a] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, b, b, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [c#, b, b, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, b, b, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -  -  0A \
        | 0A 1A 0A |
        \ -  -  0A / )
  ( b
  , Wk  / 0A  0A  -  \
        | -2A -1A -  |
        \ -   -   0A / )
  ( c
  , Wk  / -   2A 1A \
        | -2A 1A -  |
        \ -   -  0A / )
  ( c#
  , Wk  / 0A 1A -1A \
        | -  -  -   |
        \ -  -  0A  / )
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, c, b, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, c, b, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -   -  0A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( b
  , Wk  / - -   0A \
        | - -1A -  |
        \ - -   0A / )
  ( c
  , Wk  / -  -  0A  \
        | 0A 1A -1A |
        \ -  -  0A  / )
  ( c#
  , Wk  / - 0A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(7,3)\Deepee(4/7,5)\Weight\EDG(2/7,4)\Matrix{\ArcticBZ}{3}\EDG(1/7,4)\Matrix{\ArcticBZ}{3}(0/7,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.354845229000
  min duration 0.061536945000
  total durat. 2.830938067000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 442}
    , self = 87
    , parent = Nothing
    , duration = 1.354845229000
    , status = Fail
    , start = 2025-09-03 11:41:40.027185915 UTC
    , finish = 2025-09-03 11:41:41.382031144 UTC
    , thread_cap_info = ("ThreadId 98", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.090109272000
  min duration 0.026806382000
  total durat. 2.777112687000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 27
      , alphabet_size = 10
      , total_length = 192}
    , self = 86
    , parent = Nothing
    , duration = 1.090109272000
    , status = Fail
    , start = 2025-09-03 11:41:39.98724246 UTC
    , finish = 2025-09-03 11:41:41.077351732 UTC
    , thread_cap_info = ("ThreadId 96", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.181827971000
  min duration 0.421353786000
  total durat. 2.164496193000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 90
    , parent = Nothing
    , duration = 1.181827971000
    , status = Success
    , start = 2025-09-03 11:41:40.748889808 UTC
    , finish = 2025-09-03 11:41:41.930717779 UTC
    , thread_cap_info = ("ThreadId 140", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.047938100000
  min duration 0.334390070000
  total durat. 2.882998658000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 89
    , parent = Nothing
    , duration = 1.026147408000
    , status = Fail
    , start = 2025-09-03 11:41:40.699517172 UTC
    , finish = 2025-09-03 11:41:41.72566458 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 88
    , parent = Nothing
    , duration = 1.047938100000
    , status = Fail
    , start = 2025-09-03 11:41:40.677639681 UTC
    , finish = 2025-09-03 11:41:41.725577781 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.264222958000
  min duration 1.264222958000
  total durat. 1.264222958000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 96
    , parent = Nothing
    , duration = 1.264222958000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:41:40.767536453 UTC
    , finish = 2025-09-03 11:41:42.031759411 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.102253070000
  min duration 2.102253070000
  total durat. 2.102253070000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 95
    , parent = Nothing
    , duration = 2.102253070000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:41:39.926090258 UTC
    , finish = 2025-09-03 11:41:42.028343328 UTC
    , thread_cap_info = ("ThreadId 47", 3, False)}
**************************************************
F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                        = 12} , self = 83 , parent = Nothing , duration = 0.841507584000 , status
F                        = Fail , start = 2025-09-03 11:41:39.926013632 UTC , finish = 2025-09-03
F                        11:41:40.767521216 UTC , thread_cap_info = ("ThreadId 34", 2, False)}
F                        
| E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E                      = 12} , self = 95 , parent = Nothing , duration = 2.102253070000 , status
| E                      = Except "AsyncCancelled" , start = 2025-09-03 11:41:39.926090258 UTC ,
| E                      finish = 2025-09-03 11:41:42.028343328 UTC , thread_cap_info = ("ThreadId
| E                      47", 3, False)}
| E                      
| | F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                    = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F                    = 4 , total_length = 45} , self = 63 , parent = Nothing , duration = 0.474523080000
| | F                    , status = Fail , start = 2025-09-03 11:41:39.972883837 UTC , finish =
| | F                    2025-09-03 11:41:40.447406917 UTC , thread_cap_info = ("ThreadId 89", 1,
| | F                    False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | F                  = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | F                  = 192} , self = 84 , parent = Nothing , duration = 0.814570792000 , status
| | | F                  = Fail , start = 2025-09-03 11:41:39.972956961 UTC , finish = 2025-09-03
| | | F                  11:41:40.787527753 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F                = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | F                = 43} , self = 57 , parent = Nothing , duration = 0.121119475000 , status
| | | | F                = Fail , start = 2025-09-03 11:41:39.980899378 UTC , finish = 2025-09-03
| | | | F                11:41:40.102018853 UTC , thread_cap_info = ("ThreadId 69", 1, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F              = 162} , self = 59 , parent = Nothing , duration = 0.251919439000 , status
| | | | | F              = Fail , start = 2025-09-03 11:41:39.987176671 UTC , finish = 2025-09-03
| | | | | F              11:41:40.23909611 UTC , thread_cap_info = ("ThreadId 85", 3, False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | F            = 192} , self = 86 , parent = Nothing , duration = 1.090109272000 , status
| | | | | | F            = Fail , start = 2025-09-03 11:41:39.98724246 UTC , finish = 2025-09-03
| | | | | | F            11:41:41.077351732 UTC , thread_cap_info = ("ThreadId 96", 0, False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F          = 162} , self = 75 , parent = Nothing , duration = 0.602450846000 , status
| | | | | | | F          = Fail , start = 2025-09-03 11:41:40.007182702 UTC , finish = 2025-09-03
| | | | | | | F          11:41:40.609633548 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | | | | F          
| | | | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | S        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | | S        = 4 , total_length = 45} , self = 66 , parent = Nothing , duration = 0.561314436000
| | | | | | | | S        , status = Success , start = 2025-09-03 11:41:40.007874169 UTC , finish
| | | | | | | | S        = 2025-09-03 11:41:40.569188605 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | | S        1, False)}
| | | | | | | | S        
| | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | | F      = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | | | F      total_length = 442} , self = 87 , parent = Nothing , duration = 1.354845229000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 11:41:40.027185915 UTC , finish =
| | | | | | | | | F      2025-09-03 11:41:41.382031144 UTC , thread_cap_info = ("ThreadId 98", 0,
| | | | | | | | | F      False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | | | F    = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | | | | F    total_length = 442} , self = 82 , parent = Nothing , duration = 0.704776836000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 11:41:40.047483955 UTC , finish =
| | | | | | | | | | F    2025-09-03 11:41:40.752260791 UTC , thread_cap_info = ("ThreadId 99", 0,
| | | | | | | | | | F    False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | | F  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | | | | | F  = 4 , total_length = 43} , self = 61 , parent = Nothing , duration = 0.334390070000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:41:40.047486092 UTC , finish =
| | | | | | | | | | | F  2025-09-03 11:41:40.381876162 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | | | | F  1, False)}
| | | | | | | | | | | F  
| | | | F | | | | | | |  
| | | | S | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | S | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | S | | | | | | |  = 4 , total_length = 43} , self = 64 , parent = Nothing , duration = 0.421353786000
| | | | S | | | | | | |  , status = Success , start = 2025-09-03 11:41:40.127326183 UTC , finish
| | | | S | | | | | | |  = 2025-09-03 11:41:40.548679969 UTC , thread_cap_info = ("ThreadId 105",
| | | | S | | | | | | |  1, False)}
| | | | S | | | | | | |  
| | | | | F | | | | | |  
| | | | |   | | | | | F  
| | | | | E | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | E | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | E | | | | |    = 4 , total_length = 43} , self = 67 , parent = Nothing , duration = 0.187311029000
| | | | | E | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:41:40.381904708
| | | | | E | | | | |    UTC , finish = 2025-09-03 11:41:40.569215737 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | | |    114", 1, False)}
| | | | | E | | | | |    
| | F | | | | | | | |    
| | E | | | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E | | | | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | E | | | | | | | |    = 4 , total_length = 45} , self = 73 , parent = Nothing , duration = 0.122392454000
| | E | | | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:41:40.447470957
| | E | | | | | | | |    UTC , finish = 2025-09-03 11:41:40.569863411 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | |    116", 1, False)}
| | E | | | | | | | |    
| | | | S | | | | | |    
| | | |   | | | S | |    
| | | |   E | |   | |    
| | | | F   | |   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F   | |   | |    = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | F   | |   | |    = 40} , self = 79 , parent = Nothing , duration = 0.107768251000 , status
| | | | F   | |   | |    = Fail , start = 2025-09-03 11:41:40.569846129 UTC , finish = 2025-09-03
| | | | F   | |   | |    11:41:40.67761438 UTC , thread_cap_info = ("ThreadId 123", 1, False)}
| | | | F   | |   | |    
| | | | | F | |   | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F | |   | |    = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | F | |   | |    = 40} , self = 85 , parent = Nothing , duration = 0.220129660000 , status
| | | | | F | |   | |    = Fail , start = 2025-09-03 11:41:40.569848439 UTC , finish = 2025-09-03
| | | | | F | |   | |    11:41:40.789978099 UTC , thread_cap_info = ("ThreadId 124", 1, False)}
| | | | | F | |   | |    
| | E | | | | |   | |    
| |   | | | | F   | |    
| | F | | | |     | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F | | | |     | |    = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F | | | |     | |    = 39} , self = 81 , parent = Nothing , duration = 0.119177936000 , status
| | F | | | |     | |    = Fail , start = 2025-09-03 11:41:40.609773542 UTC , finish = 2025-09-03
| | F | | | |     | |    11:41:40.728951478 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | F | | | |     | |    
| | | | F | |     | |    
| | | | F | |     | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | |     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | |     | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | |     | |    = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | F | |     | |    = 4 , total_length = 40} , self = 88 , parent = Nothing , duration = 1.047938100000
| | | | F | |     | |    , status = Fail , start = 2025-09-03 11:41:40.677639681 UTC , finish =
| | | | F | |     | |    2025-09-03 11:41:41.725577781 UTC , thread_cap_info = ("ThreadId 138",
| | | | F | |     | |    1, False)}
| | | | F | |     | |    
| | | | | | | F   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F   | |    = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | | | | F   | |    = 4 , total_length = 39} , self = 89 , parent = Nothing , duration = 1.026147408000
| | | | | | | F   | |    , status = Fail , start = 2025-09-03 11:41:40.699517172 UTC , finish =
| | | | | | | F   | |    2025-09-03 11:41:41.72566458 UTC , thread_cap_info = ("ThreadId 139", 1,
| | | | | | | F   | |    False)}
| | | | | | | F   | |    
| | F | | | | |   | |    
| | S | | | | |   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | | | | |   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | | | |   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | |   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | |   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | |   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S | | | | |   | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | S | | | | |   | |    = 4 , total_length = 39} , self = 90 , parent = Nothing , duration = 1.181827971000
| | S | | | | |   | |    , status = Success , start = 2025-09-03 11:41:40.748889808 UTC , finish
| | S | | | | |   | |    = 2025-09-03 11:41:41.930717779 UTC , thread_cap_info = ("ThreadId 140",
| | S | | | | |   | |    1, False)}
| | S | | | | |   | |    
| | | | | | | |   | F    
F | | | | | | |   |      
E | | | | | | |   |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | | | |   |      , closure = Backward\n , start_strict_only = True\n , max_closure_length
E | | | | | | |   |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | | | |   |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | | | |   |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | | | |   |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | | | |   |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | | | |   |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | | | |   |      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E | | | | | | |   |      Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15347, clauses: 60276, status: Satisfied, time: 0.739023189s
num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E | | | | | | |   |      = 12} , self = 96 , parent = Nothing , duration = 1.264222958000 , status
E | | | | | | |   |      = Except "AsyncCancelled" , start = 2025-09-03 11:41:40.767536453 UTC ,
E | | | | | | |   |      finish = 2025-09-03 11:41:42.031759411 UTC , thread_cap_info = ("ThreadId
E | | | | | | |   |      143", 2, False)}
E | | | | | | |   |      
| | | F | | | |   |      
| | |   | F | |   |      
| | |   |   F |   |      
| | |   |     |   F      
| | |   F     |          
| | |         F          
| | | E                  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | E                  = 4 , total_length = 39} , self = 92 , parent = Nothing , duration = 0.223066120000
| | | E                  , status = Except "AsyncCancelled" , start = 2025-09-03 11:41:41.747223324
| | | E                  UTC , finish = 2025-09-03 11:41:41.970289444 UTC , thread_cap_info = ("ThreadId
| | | E                  156", 1, False)}
| | | E                  
| | S |                  
| |   E                  
| E                      
E                        
