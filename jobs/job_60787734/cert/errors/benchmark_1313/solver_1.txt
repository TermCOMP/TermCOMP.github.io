last 4035 length 16643
CNF 4035 vars 16643 clauses
last 4629 length 18733
CNF 4629 vars 18733 clauses
last 4077 length 16686
last 323 length 1217
last 288 length 1090
CNF 323 vars 1217 clauses
CNF 288 vars 1090 clauses
CNF 4077 vars 16686 clauses
last 341 length 1287
last 309 length 1177
last 3167 length 13220
last 4770 length 19202
last 3756 length 15211
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1650, clauses: 5813
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9571, clauses: 35632
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4283, clauses: 17435
CNF 341 vars 1287 clauses
CNF 3167 vars 13220 clauses
CNF 309 vars 1177 clauses
CNF 4770 vars 19202 clauses
CNF 3756 vars 15211 clauses
last 1650 length 5813
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10550, clauses: 39402
last 9571 length 35632
last 4283 length 17435
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1952, clauses: 6873
CNF 1650 vars 5813 clauses
last 10550 length 39402
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 36267, clauses: 152327
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4656, clauses: 18911
CNF 9571 vars 35632 clauses
CNF 4283 vars 17435 clauses
last 1952 length 6873
last 36267 length 152327
last 4656 length 18911
CNF 10550 vars 39402 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1650, clauses: 5813, status: Unsatisfied, time: 0.422690979s
CNF 1952 vars 6873 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9571, clauses: 35632, status: Satisfied, time: 0.677558704s
CNF 4656 vars 18911 clauses
CNF 36267 vars 152327 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4283, clauses: 17435, status: Unsatisfied, time: 0.764630992s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1952, clauses: 6873, status: Satisfied, time: 0.556853365s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2638, clauses: 10225
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37329, clauses: 156710
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10550, clauses: 39402, status: Satisfied, time: 0.780876612s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2660, clauses: 10112
last 3969 length 16379
last 2638 length 10225
last 37329 length 156710
last 2660 length 10112
**************************************************last 4477 length 18117

CNF 2660 vars 10112 clauses
CNF 2638 vars 10225 clauses
CNF 3969 vars 16379 clauses
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 6 strict rules and 3 weak rules on 6 letters       weights
SRS with 3 strict rules and 3 weak rules on 6 letters       EDGCNF 4477 vars 18117 clauses

SRS with 3 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 6 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, b] -> [c, a] {- Input 1 -}
  [c, c, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [b, a] -> [a, c] {- Mirror (Input 1) -}
  [c, c, c] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 1/1)
  (b, 1/2)
  (c, 1/2)
  (a#, 1/2)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [c#, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 6A 9A 9A  - |
        \ -  -  -   - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 18A 18A 21A - \
        | 18A 18A 21A - |
        | 18A 18A 21A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 11A 12A 14A - \
        | 11A 12A 14A - |
        | 11A 12A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [c#, c, c] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [a#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee(6/3,6)\Weight\EDG(3/3,6)\Matrix{\Arctic}{3}(2/3,6)\Weight(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.726547642000
  min duration 0.061580049000
  total durat. 2.143980564000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.620372348000
  min duration 0.100760930000
  total durat. 1.766232705000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.185611642000
  min duration 1.185611642000
  total durat. 1.185611642000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 5
      , total_length = 21}
    , self = 73
    , parent = Nothing
    , duration = 1.185611642000
    , status = Fail
    , start = 2025-09-03 11:33:42.007499636 UTC
    , finish = 2025-09-03 11:33:43.193111278 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.292154915000
  min duration 0.865697014000
  total durat. 2.157851929000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 201}
    , self = 68
    , parent = Nothing
    , duration = 1.292154915000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:33:41.889646217 UTC
    , finish = 2025-09-03 11:33:43.181801132 UTC
    , thread_cap_info = ("ThreadId 107", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.365091896000
  min duration 0.870644693000
  total durat. 3.457319144000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 216}
    , self = 77
    , parent = Nothing
    , duration = 1.221582555000
    , status = Success
    , start = 2025-09-03 11:33:42.07758946 UTC
    , finish = 2025-09-03 11:33:43.299172015 UTC
    , thread_cap_info = ("ThreadId 110", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 201}
    , self = 66
    , parent = Nothing
    , duration = 1.365091896000
    , status = Success
    , start = 2025-09-03 11:33:41.805531959 UTC
    , finish = 2025-09-03 11:33:43.170623855 UTC
    , thread_cap_info = ("ThreadId 93", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.137974456000
  min duration 1.137974456000
  total durat. 1.137974456000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 5
      , total_length = 21}
    , self = 65
    , parent = Nothing
    , duration = 1.137974456000
    , status = Fail
    , start = 2025-09-03 11:33:41.910630995 UTC
    , finish = 2025-09-03 11:33:43.048605451 UTC
    , thread_cap_info = ("ThreadId 108", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.631101533000
  min duration 1.631101533000
  total durat. 1.631101533000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 81
    , parent = Nothing
    , duration = 1.631101533000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:33:41.675565243 UTC
    , finish = 2025-09-03 11:33:43.306666776 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 12} , self = 81 , parent = Nothing , duration = 1.631101533000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 11:33:41.675565243 UTC ,
E                      finish = 2025-09-03 11:33:43.306666776 UTC , thread_cap_info = ("ThreadId
E                      35", 0, False)}
E                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F                    = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| F                    = 201} , self = 55 , parent = Nothing , duration = 0.184454806000 , status
| F                    = Fail , start = 2025-09-03 11:33:41.68591377 UTC , finish = 2025-09-03
| F                    11:33:41.870368576 UTC , thread_cap_info = ("ThreadId 69", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | F                  = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | F                  = 201} , self = 45 , parent = Nothing , duration = 0.100760930000 , status
| | F                  = Fail , start = 2025-09-03 11:33:41.688599124 UTC , finish = 2025-09-03
| | F                  11:33:41.789360054 UTC , thread_cap_info = ("ThreadId 70", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F                = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | F                = 216} , self = 63 , parent = Nothing , duration = 0.726547642000 , status
| | | F                = Fail , start = 2025-09-03 11:33:41.693800758 UTC , finish = 2025-09-03
| | | F                11:33:42.4203484 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | F              = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | | F              = 216} , self = 59 , parent = Nothing , duration = 0.368947589000 , status
| | | | F              = Fail , start = 2025-09-03 11:33:41.708602049 UTC , finish = 2025-09-03
| | | | F              11:33:42.077549638 UTC , thread_cap_info = ("ThreadId 76", 0, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F            = 162} , self = 64 , parent = Nothing , duration = 0.663712499000 , status
| | | | | F            = Fail , start = 2025-09-03 11:33:41.768600568 UTC , finish = 2025-09-03
| | | | | F            11:33:42.432313067 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F          = 162} , self = 61 , parent = Nothing , duration = 0.620372348000 , status
| | | | | | F          = Fail , start = 2025-09-03 11:33:41.789292211 UTC , finish = 2025-09-03
| | | | | | F          11:33:42.409664559 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| | | | | | F          
| | F | | | |          
| | S | | | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |          = 33 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 ,
| | S | | | |          alphabet_size = 11 , total_length = 201} , self = 66 , parent = Nothing
| | S | | | |          , duration = 1.365091896000 , status = Success , start = 2025-09-03 11:33:41.805531959
| | S | | | |          UTC , finish = 2025-09-03 11:33:43.170623855 UTC , thread_cap_info = ("ThreadId
| | S | | | |          93", 1, False)}
| | S | | | |          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | F        = 21} , self = 58 , parent = Nothing , duration = 0.138846795000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:33:41.868629108 UTC , finish = 2025-09-03
| | | | | | | F        11:33:42.007475903 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | | | F        
| F | | | | | |        
| F | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F | | | | | |        = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F | | | | | |        = 24} , self = 60 , parent = Nothing , duration = 0.507685568000 , status
| F | | | | | |        = Fail , start = 2025-09-03 11:33:41.872805521 UTC , finish = 2025-09-03
| F | | | | | |        11:33:42.380491089 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| F | | | | | |        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | | F      = 24} , self = 62 , parent = Nothing , duration = 0.537305043000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 11:33:41.875551885 UTC , finish = 2025-09-03
| | | | | | | | F      11:33:42.412856928 UTC , thread_cap_info = ("ThreadId 106", 2, False)}
| | | | | | | | F      
| | | | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | | | | | | E    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size
| | | | | | | | | E    = 11 , total_length = 201} , self = 68 , parent = Nothing , duration =
| | | | | | | | | E    1.292154915000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | | | E    11:33:41.889646217 UTC , finish = 2025-09-03 11:33:43.181801132 UTC , thread_cap_info
| | | | | | | | | E    = ("ThreadId 107", 1, False)}
| | | | | | | | | E    
| | | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | F  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | | F  = 5 , total_length = 21} , self = 65 , parent = Nothing , duration = 1.137974456000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:33:41.910630995 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:33:43.048605451 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | | F  2, False)}
| | | | | | | | | | F  
| | | | | | | F | | |  
| | | | | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | F | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | F | | |  = 5 , total_length = 21} , self = 73 , parent = Nothing , duration = 1.185611642000
| | | | | | | F | | |  , status = Fail , start = 2025-09-03 11:33:42.007499636 UTC , finish =
| | | | | | | F | | |  2025-09-03 11:33:43.193111278 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | | F | | |  2, False)}
| | | | | | | F | | |  
| | | | F | | | | | |  
| | | | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | | | |  = 36 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 27 ,
| | | | S | | | | | |  alphabet_size = 12 , total_length = 216} , self = 77 , parent = Nothing
| | | | S | | | | | |  , duration = 1.221582555000 , status = Success , start = 2025-09-03 11:33:42.07758946
| | | | S | | | | | |  UTC , finish = 2025-09-03 11:33:43.299172015 UTC , thread_cap_info = ("ThreadId
| | | | S | | | | | |  110", 0, False)}
| | | | S | | | | | |  
| F | | | | | | | | |  
| S | | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| S | | | | | | | | |  = 6 , total_length = 24} , self = 74 , parent = Nothing , duration = 0.870644693000
| S | | | | | | | | |  , status = Success , start = 2025-09-03 11:33:42.380515494 UTC , finish
| S | | | | | | | | |  = 2025-09-03 11:33:43.251160187 UTC , thread_cap_info = ("ThreadId 116",
| S | | | | | | | | |  2, False)}
| S | | | | | | | | |  
| | | | | | F | | | |  
| | | | | |   | F | |  
| | | F | |   |   | |  
| | | E | |   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E | |   |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | E | |   |   | |  = 6 , total_length = 24} , self = 76 , parent = Nothing , duration = 0.865697014000
| | | E | |   |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:42.429579153
| | | E | |   |   | |  UTC , finish = 2025-09-03 11:33:43.295276167 UTC , thread_cap_info = ("ThreadId
| | | E | |   |   | |  118", 2, False)}
| | | E | |   |   | |  
| | | | | F   |   | |  
| | | | |     |   | F  
| | S | |     |   |    
| |   | |     |   E    
| |   | |     F        
| S   | |              
|     E |              
|       S              
E                      
