last 547 length 2176
last 501 length 1963
CNF 547 vars 2176 clauses
last 590 length 2264
last 654 length 2558
CNF 590 vars 2264 clauses
CNF 501 vars 1963 clauses
CNF 654 vars 2558 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2700, clauses: 9833
last 2700 length 9833
last 2887 length 12764
CNF 2887 vars 12764 clauses
CNF 2700 vars 9833 clauses
last 2791 length 11636
CNF 2791 vars 11636 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2595, clauses: 9401
last 2595 length 9401
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2700, clauses: 9833, status: Unsatisfied, time: 0.154616677s
CNF 2595 vars 9401 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2595, clauses: 9401, status: Unsatisfied, time: 0.134525286s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4712, clauses: 18820
last 4712 length 18820
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7140, clauses: 29512
CNF 4712 vars 18820 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7432, clauses: 30762
last 7140 length 29512
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4542, clauses: 18070
last 7432 length 30762
last 4542 length 18070
CNF 7140 vars 29512 clauses
last 7184 length 30258
CNF 4542 vars 18070 clauses
CNF 7432 vars 30762 clauses
last 6640 length 27876
last 10201 length 41520
CNF 7184 vars 30258 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4542, clauses: 18070, status: Unsatisfied, time: 0.332019447s
CNF 10201 vars 41520 clauses
CNF 6640 vars 27876 clauses
last 9377 length 38002
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7432, clauses: 30762, status: Satisfied, time: 0.540312562s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7140, clauses: 29512, status: Satisfied, time: 0.585383387s
CNF 9377 vars 38002 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4227, clauses: 16522
last 4227 length 16522
CNF 4227 vars 16522 clauses
last 608 length 2401
last 523 length 2093
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 608 vars 2401 clauses
CNF 523 vars 2093 clauses
last 369 length 1412
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2489, clauses: 8997
last 2489 length 8997
last 389 length 1529
CNF 2489 vars 8997 clauses
CNF 369 vars 1412 clauses
CNF 389 vars 1529 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18374, clauses: 73386
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7093, clauses: 29343
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17716, clauses: 70384
last 18374 length 73386
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2489, clauses: 8997, status: Unsatisfied, time: 0.327005598s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6540
last 7093 length 29343
last 17716 length 70384
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6334, clauses: 26245
last 1856 length 6540
CNF 7093 vars 29343 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4464, clauses: 17825
CNF 18374 vars 73386 clauses
last 6334 length 26245
CNF 17716 vars 70384 clauses
CNF 1856 vars 6540 clauses
last 4464 length 17825
CNF 6334 vars 26245 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6540, status: Unsatisfied, time: 0.628640832s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18374, clauses: 73386, status: Satisfied, time: 0.763585572s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6334, clauses: 26245, status: Satisfied, time: 0.615677735s
CNF 4464 vars 17825 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 5 strict rules and 5 weak rules on 5 letters       EDG
SRS with 5 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [] {- Input 0 -}
  [b, b] -> [a, b, c] {- Input 1 -}
  [c, c] -> [b, b, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [] {- Mirror (Input 0) -}
  [b, b] -> [c, b, a] {- Mirror (Input 1) -}
  [c, c] -> [b, b, b] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, a] -> [b] {- Mirror (Input 0) -}
  [c, a, a] -> [c] {- Mirror (Input 0) -}
  [b, b] -> [c, b, a] {- Mirror (Input 1) -}
  [c, c] -> [b, b, b] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Input 0 -}
  [a, a, b] -> [b] {- Input 0 -}
  [a, a, c] -> [c] {- Input 0 -}
  [b, b] -> [a, b, c] {- Input 1 -}
  [c, c] -> [b, b, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
  [b#, b] |-> [a#, b, c] {- DP (Top 0) (Input 1) -}
  [b#, b] |-> [b#, c] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [c#] {- DP (Top 2) (Input 1) -}
  [c#, c] |-> [b#] {- DP (Top 2) (Input 2) -}
  [c#, c] |-> [b#, b] {- DP (Top 1) (Input 2) -}
  [c#, c] |-> [b#, b, b] {- DP (Top 0) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
  [b#, b] |-> [b#, c] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [c#] {- DP (Top 2) (Input 1) -}
  [c#, c] |-> [b#] {- DP (Top 2) (Input 2) -}
  [c#, c] |-> [b#, b] {- DP (Top 1) (Input 2) -}
  [c#, c] |-> [b#, b, b] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b] |-> [b#, c] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [c#] {- DP (Top 2) (Input 1) -}
  [c#, c] |-> [b#] {- DP (Top 2) (Input 2) -}
  [c#, c] |-> [b#, b] {- DP (Top 1) (Input 2) -}
  [c#, c] |-> [b#, b, b] {- DP (Top 0) (Input 2) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -   2A 0A  \
        | -2A -  -1A |
        \ -   -  0A  / )
  ( b
  , Wk  / 0A  1A 1A \
        | -1A -  -  |
        \ -   -  0A / )
  ( c
  , Wk  / -1A 0A 0A \
        | 0A  1A 1A |
        \ -   -  0A / )
  ( b#
  , Wk  / -1A -1A 0A \
        | -   -   -  |
        \ -   -   0A / )
  ( c#
  , Wk  / - 0A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b#, b] |-> [b#, c] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [c#] {- DP (Top 2) (Input 1) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b#, b] |-> [b#, c] {- DP (Top 1) (Input 1) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b] |-> [b#, c] {- DP (Top 1) (Input 1) -}
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -   2A 0A  \
        | -2A -  -1A |
        \ -   -  0A  / )
  ( b
  , Wk  / 0A  1A 1A  \
        | -1A -  -1A |
        \ -   -  0A  / )
  ( c
  , Wk  / -  0A 0A \
        | 0A 1A 1A |
        \ -  -  0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, c] ->= [c] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, b, c] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, b, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(5/5,5)\Matrix{\ArcticBZ}{3}(2/5,5)\Weight\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.144123787000
  min duration 0.033836365000
  total durat. 3.035557235000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 81
      , num_strict_rules = 60
      , num_top_rules = 60
      , num_weak_rules = 21
      , alphabet_size = 15
      , total_length = 459}
    , self = 67
    , parent = Nothing
    , duration = 1.128170862000
    , status = Fail
    , start = 2025-09-03 11:33:20.385001915 UTC
    , finish = 2025-09-03 11:33:21.513172777 UTC
    , thread_cap_info = ("ThreadId 94", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 77
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 22
      , alphabet_size = 16
      , total_length = 428}
    , self = 74
    , parent = Nothing
    , duration = 1.144123787000
    , status = Fail
    , start = 2025-09-03 11:33:20.508136279 UTC
    , finish = 2025-09-03 11:33:21.652260066 UTC
    , thread_cap_info = ("ThreadId 104", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.051189733000
  min duration 0.027509668000
  total durat. 2.760275993000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 81
      , num_strict_rules = 60
      , num_top_rules = 60
      , num_weak_rules = 21
      , alphabet_size = 15
      , total_length = 459}
    , self = 65
    , parent = Nothing
    , duration = 1.051189733000
    , status = Fail
    , start = 2025-09-03 11:33:20.388144519 UTC
    , finish = 2025-09-03 11:33:21.439334252 UTC
    , thread_cap_info = ("ThreadId 95", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.083421500000
  min duration 0.882138127000
  total durat. 3.023749273000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 41}
    , self = 71
    , parent = Nothing
    , duration = 1.058189646000
    , status = Success
    , start = 2025-09-03 11:33:20.494214788 UTC
    , finish = 2025-09-03 11:33:21.552404434 UTC
    , thread_cap_info = ("ThreadId 102", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 43}
    , self = 68
    , parent = Nothing
    , duration = 1.083421500000
    , status = Success
    , start = 2025-09-03 11:33:20.433728996 UTC
    , finish = 2025-09-03 11:33:21.517150496 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.882976096000
  min duration 0.135751702000
  total durat. 1.018727798000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.314343264000
  min duration 2.314343264000
  total durat. 2.314343264000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 81
      , num_strict_rules = 60
      , num_top_rules = 60
      , num_weak_rules = 21
      , alphabet_size = 15
      , total_length = 459}
    , self = 91
    , parent = Nothing
    , duration = 2.314343264000
    , status = Success
    , start = 2025-09-03 11:33:21.449761638 UTC
    , finish = 2025-09-03 11:33:23.764104902 UTC
    , thread_cap_info = ("ThreadId 126", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.847062192000
  min duration 0.232597609000
  total durat. 2.120644381000
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 12} , self = 63 , parent = Nothing , duration = 0.926361314000 , status
F                      = Fail , start = 2025-09-03 11:33:20.341933541 UTC , finish = 2025-09-03
F                      11:33:21.268294855 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 81 , num_strict_rules
| F                    = 60 , num_top_rules = 60 , num_weak_rules = 21 , alphabet_size = 15 ,
| F                    total_length = 459} , self = 67 , parent = Nothing , duration = 1.128170862000
| F                    , status = Fail , start = 2025-09-03 11:33:20.385001915 UTC , finish =
| F                    2025-09-03 11:33:21.513172777 UTC , thread_cap_info = ("ThreadId 94", 0,
| F                    False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 81 , num_strict_rules
| | F                  = 60 , num_top_rules = 60 , num_weak_rules = 21 , alphabet_size = 15 ,
| | F                  total_length = 459} , self = 65 , parent = Nothing , duration = 1.051189733000
| | F                  , status = Fail , start = 2025-09-03 11:33:20.388144519 UTC , finish =
| | F                  2025-09-03 11:33:21.439334252 UTC , thread_cap_info = ("ThreadId 95", 0,
| | F                  False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | F                = 22 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 133} , self = 60 , parent = Nothing , duration = 0.193143855000 , status
| | | F                = Fail , start = 2025-09-03 11:33:20.395211196 UTC , finish = 2025-09-03
| | | F                11:33:20.588355051 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| | | F                
| | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F              = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | F              alphabet_size = 5 , total_length = 43} , self = 61 , parent = Nothing ,
| | | | F              duration = 0.232597609000 , status = Fail , start = 2025-09-03 11:33:20.396869159
| | | | F              UTC , finish = 2025-09-03 11:33:20.629466768 UTC , thread_cap_info = ("ThreadId
| | | | F              97", 2, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | F            = 22 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F            = 133} , self = 57 , parent = Nothing , duration = 0.147965419000 , status
| | | | | F            = Fail , start = 2025-09-03 11:33:20.408200986 UTC , finish = 2025-09-03
| | | | | F            11:33:20.556166405 UTC , thread_cap_info = ("ThreadId 86", 3, False)}
| | | | | F            
| | | | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | S          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | S          = 5 , total_length = 43} , self = 68 , parent = Nothing , duration = 1.083421500000
| | | | | | S          , status = Success , start = 2025-09-03 11:33:20.433728996 UTC , finish
| | | | | | S          = 2025-09-03 11:33:21.517150496 UTC , thread_cap_info = ("ThreadId 98",
| | | | | | S          2, False)}
| | | | | | S          
| | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F        = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | | | | F        alphabet_size = 5 , total_length = 41} , self = 62 , parent = Nothing ,
| | | | | | | F        duration = 0.311666014000 , status = Fail , start = 2025-09-03 11:33:20.448115121
| | | | | | | F        UTC , finish = 2025-09-03 11:33:20.759781135 UTC , thread_cap_info = ("ThreadId
| | | | | | | F        99", 2, False)}
| | | | | | | F        
| | | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | S      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | | | S      = 5 , total_length = 41} , self = 71 , parent = Nothing , duration = 1.058189646000
| | | | | | | | S      , status = Success , start = 2025-09-03 11:33:20.494214788 UTC , finish
| | | | | | | | S      = 2025-09-03 11:33:21.552404434 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | S      2, False)}
| | | | | | | | S      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 77 , num_strict_rules
| | | | | | | | | F    = 55 , num_top_rules = 55 , num_weak_rules = 22 , alphabet_size = 16 ,
| | | | | | | | | F    total_length = 428} , self = 74 , parent = Nothing , duration = 1.144123787000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 11:33:20.508136279 UTC , finish =
| | | | | | | | | F    2025-09-03 11:33:21.652260066 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | | | F    0, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 77 , num_strict_rules
| | | | | | | | | | F  = 55 , num_top_rules = 55 , num_weak_rules = 22 , alphabet_size = 16 ,
| | | | | | | | | | F  total_length = 428} , self = 66 , parent = Nothing , duration = 0.965106138000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:33:20.528367966 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:33:21.493474104 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | | | F  0, False)}
| | | | | | | | | | F  
| | | | | F | | | | |  
| | | F |   | | | | |  
| | |   F   | | | | |  
| | | E     | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E     | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E     | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E     | | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | E     | | | | |  = 5 , total_length = 43} , self = 70 , parent = Nothing , duration = 0.882976096000
| | | E     | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:20.668127628
| | | E     | | | | |  UTC , finish = 2025-09-03 11:33:21.551103724 UTC , thread_cap_info = ("ThreadId
| | | E     | | | | |  115", 2, False)}
| | | E     | | | | |  
| | | |     | F | | |  
| | | | F   |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F   |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F   |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F   |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F   |   | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | F   |   | | |  = 5 , total_length = 41} , self = 64 , parent = Nothing , duration = 0.437626403000
| | | | F   |   | | |  , status = Fail , start = 2025-09-03 11:33:20.860091708 UTC , finish =
| | | | F   |   | | |  2025-09-03 11:33:21.297718111 UTC , thread_cap_info = ("ThreadId 116",
| | | | F   |   | | |  2, False)}
| | | | F   |   | | |  
F | | | |   |   | | |  
  | | | F   |   | | |  
F | | |     |   | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | |     |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |     |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |     |   | | |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
F | | |     |   | | |  alphabet_size = 5 , total_length = 41} , self = 78 , parent = Nothing ,
F | | |     |   | | |  duration = 0.573000287000 , status = Fail , start = 2025-09-03 11:33:21.428973391
F | | |     |   | | |  UTC , finish = 2025-09-03 11:33:22.001973678 UTC , thread_cap_info = ("ThreadId
F | | |     |   | | |  125", 2, False)}
F | | |     |   | | |  
| | F |     |   | | |  
| | S |     |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S |     |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S |     |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S |     |   | | |  = 81 , num_strict_rules = 60 , num_top_rules = 60 , num_weak_rules = 21
| | S |     |   | | |  , alphabet_size = 15 , total_length = 459} , self = 91 , parent = Nothing
| | S |     |   | | |  , duration = 2.314343264000 , status = Success , start = 2025-09-03 11:33:21.449761638
| | S |     |   | | |  UTC , finish = 2025-09-03 11:33:23.764104902 UTC , thread_cap_info = ("ThreadId
| | S |     |   | | |  126", 0, False)}
| | S |     |   | | |  
| | | |     |   | | F  
| F | |     |   | |    
|   | |     S   | |    
|   | E         | |    
|   |           S |    
|   |             F    
| F |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |                  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F |                  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F |                  = 39} , self = 80 , parent = Nothing , duration = 0.163592083000 , status
| F |                  = Fail , start = 2025-09-03 11:33:21.949773865 UTC , finish = 2025-09-03
| F |                  11:33:22.113365948 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
| F |                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F                = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F                = 39} , self = 82 , parent = Nothing , duration = 0.192623636000 , status
| | | F                = Fail , start = 2025-09-03 11:33:21.959444335 UTC , finish = 2025-09-03
| | | F                11:33:22.152067971 UTC , thread_cap_info = ("ThreadId 138", 2, False)}
| | | F                
F | | |                
  F | |                
    | F                
F   |                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |                  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
F   |                  = 5 , total_length = 39} , self = 87 , parent = Nothing , duration = 0.729318566000
F   |                  , status = Fail , start = 2025-09-03 11:33:22.170259531 UTC , finish =
F   |                  2025-09-03 11:33:22.899578097 UTC , thread_cap_info = ("ThreadId 143",
F   |                  2, False)}
F   |                  
| F |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F |                  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F |                  = 26} , self = 85 , parent = Nothing , duration = 0.302691918000 , status
| F |                  = Fail , start = 2025-09-03 11:33:22.449014444 UTC , finish = 2025-09-03
| F |                  11:33:22.751706362 UTC , thread_cap_info = ("ThreadId 146", 2, False)}
| F |                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F                = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F                = 26} , self = 86 , parent = Nothing , duration = 0.335985390000 , status
| | | F                = Fail , start = 2025-09-03 11:33:22.453566594 UTC , finish = 2025-09-03
| | | F                11:33:22.789551984 UTC , thread_cap_info = ("ThreadId 147", 2, False)}
| | | F                
| F | |                
| F | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |                = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F | |                = 4 , total_length = 26} , self = 88 , parent = Nothing , duration = 0.847062192000
| F | |                , status = Fail , start = 2025-09-03 11:33:22.751844001 UTC , finish =
| F | |                2025-09-03 11:33:23.598906193 UTC , thread_cap_info = ("ThreadId 151",
| F | |                2, False)}
| F | |                
| | | F                
| | | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | S                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | S                = 4 , total_length = 26} , self = 89 , parent = Nothing , duration = 0.882138127000
| | | S                , status = Success , start = 2025-09-03 11:33:22.790476801 UTC , finish
| | | S                = 2025-09-03 11:33:23.672614928 UTC , thread_cap_info = ("ThreadId 152",
| | | S                2, False)}
| | | S                
F | | |                
  F | |                
E   | |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   | |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E   | |                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
E   | |                = 4 , total_length = 26} , self = 92 , parent = Nothing , duration = 0.135751702000
E   | |                , status = Except "AsyncCancelled" , start = 2025-09-03 11:33:23.630663199
E   | |                UTC , finish = 2025-09-03 11:33:23.766414901 UTC , thread_cap_info = ("ThreadId
E   | |                160", 2, False)}
E   | |                
|   | S                
|   S                  
E                      
