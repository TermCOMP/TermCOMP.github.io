last 565 length 2208
CNF 565 vars 2208 clauses
last 512 length 2026
last 605 length 2599
last 638 length 2605
CNF 512 vars 2026 clauses
CNF 605 vars 2599 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2804, clauses: 10050
last 3816 length 17295
CNF 638 vars 2605 clauses
last 4418 length 22037
last 2804 length 10050
last 10196 length 48648
CNF 3816 vars 17295 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8089, clauses: 33461
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2606, clauses: 9408
CNF 4418 vars 22037 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7211, clauses: 29757
last 9438 length 43018
CNF 2804 vars 10050 clauses
last 12954 length 54918
last 13633 length 58470
last 8089 length 33461
last 2606 length 9408
CNF 10196 vars 48648 clauses
last 7211 length 29757
CNF 9438 vars 43018 clauses
CNF 13633 vars 58470 clauses
CNF 12954 vars 54918 clauses
CNF 8089 vars 33461 clauses
CNF 2606 vars 9408 clauses
CNF 7211 vars 29757 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2804, clauses: 10050, status: Unsatisfied, time: 0.52008047s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8089, clauses: 33461, status: Satisfied, time: 0.301666448s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2606, clauses: 9408, status: Satisfied, time: 0.360197017s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7211, clauses: 29757, status: Satisfied, time: 0.406485955s
last 368 length 1426
last 404 length 1595
CNF 404 vars 1595 clauses
CNF 368 vars 1426 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23991, clauses: 94850
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23538, clauses: 92675
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 7395
last 23991 length 94850
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7038, clauses: 29139
last 23538 length 92675
last 508 length 1995
last 418 length 1642
last 2102 length 7395
last 7038 length 29139
CNF 508 vars 1995 clauses
CNF 418 vars 1642 clauses
CNF 23991 vars 94850 clauses
CNF 2102 vars 7395 clauses
CNF 23538 vars 92675 clauses
CNF 7038 vars 29139 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2302, clauses: 8209
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 57785, clauses: 241843
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 7395, status: Unsatisfied, time: 0.762872506s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6291, clauses: 25869
last 2302 length 8209
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 57929, clauses: 242559
last 57785 length 241843
last 6291 length 25869
last 57929 length 242559
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7038, clauses: 29139, status: Satisfied, time: 0.768207179s
CNF 2302 vars 8209 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4412, clauses: 17152
CNF 6291 vars 25869 clauses
last 4412 length 17152
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2302, clauses: 8209, status: Unsatisfied, time: 0.230160569s
CNF 4412 vars 17152 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23991, clauses: 94850, status: Satisfied, time: 1.412498277s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6291, clauses: 25869, status: Satisfied, time: 0.353019769s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4063, clauses: 15799
last 4063 length 15799
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       context
SRS with 8 rules on 3 letters       mirror
SRS with 8 rules on 3 letters       DP
SRS with 6 strict rules and 8 weak rules on 6 letters       weights
SRS with 4 strict rules and 8 weak rules on 5 letters       EDG
SRS with 4 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 8 weak rules on 5 letters       weights
SRS with 2 strict rules and 8 weak rules on 5 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 8 weak rules on 4 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 8 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, c] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, c] -> [a, c, b, a] {- Input 3 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, b] -> [b, c] {- Input 1 -}
  [a, b] -> [a] {- Input 2 -}
  [b, b] -> [b] {- Input 2 -}
  [c, b] -> [c] {- Input 2 -}
  [c, c] -> [a, c, b, a] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b, a] -> [c, b] {- Mirror (Input 1) -}
  [b, a] -> [a] {- Mirror (Input 2) -}
  [b, b] -> [b] {- Mirror (Input 2) -}
  [b, c] -> [c] {- Mirror (Input 2) -}
  [c, c] -> [a, b, c, a] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c] |-> [a#] {- DP (Top 3) (Mirror (Input 3)) -}
  [c#, c] |-> [a#, b, c, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#, c] |-> [b#, c, a] {- DP (Top 1) (Mirror (Input 3)) -}
  [c#, c] |-> [c#, a] {- DP (Top 2) (Mirror (Input 3)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c] |-> [b#, c, a] {- DP (Top 1) (Mirror (Input 3)) -}
  [c#, c] |-> [c#, a] {- DP (Top 2) (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c] |-> [b#, c, a] {- DP (Top 1) (Mirror (Input 3)) -}
  [c#, c] |-> [c#, a] {- DP (Top 2) (Mirror (Input 3)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 1A -1A 1A \
        | -  0A  -  |
        \ -  -   0A / )
  ( b
  , Wk  / 0A - -  \
        | 1A - -  |
        \ -  - 0A / )
  ( c
  , Wk  / - 0A 0A \
        | - 1A 1A |
        \ - -  0A / )
  ( b#
  , Wk  / 1A 0A 1A \
        | -  -  -  |
        \ -  -  0A / )
  ( c#
  , Wk  / - 1A 2A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c] |-> [c#, a] {- DP (Top 2) (Mirror (Input 3)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [c#, a] {- DP (Top 2) (Mirror (Input 3)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  remove un-usable
    SRS
      [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
      [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
      [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
      [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
      [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
      [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
      [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
      [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [c#, c] |-> [c#, a] {- DP (Top 2) (Mirror (Input 3)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A -  0A \
        | 0A 1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / -   1A 1A  \
        | -1A 0A -1A |
        \ -   -  0A  / )
  ( c
  , Wk  / 1A - 1A \
        | 0A - 0A |
        \ -  - 0A / )
  ( c#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [a, b, c, a] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Context\Mirror(8,3)\Deepee(6/8,6)\Weight\EDG(4/8,5)\Matrix{\ArcticBZ}{3}(3/8,5)\Weight(2/8,5)\EDG[(1/8,4)\Usable(1,2)\Weight(0,0)\EDG[],(1/8,4)\Matrix{\ArcticBZ}{3}(0/8,3)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 4063 vars 15799 clauses
CNF 57929 vars 242559 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.740016476000
  min duration 0.014388750000
  total durat. 3.109471938000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.715319695000
  min duration 0.019007366000
  total durat. 2.787340565000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.284485951000
  min duration 0.710394984000
  total durat. 4.177731212000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 44}
    , self = 66
    , parent = Nothing
    , duration = 1.082344819000
    , status = Success
    , start = 2025-09-03 11:12:23.704178351 UTC
    , finish = 2025-09-03 11:12:24.78652317 UTC
    , thread_cap_info = ("ThreadId 103", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 45}
    , self = 72
    , parent = Nothing
    , duration = 1.100505458000
    , status = Success
    , start = 2025-09-03 11:12:23.904177855 UTC
    , finish = 2025-09-03 11:12:25.004683313 UTC
    , thread_cap_info = ("ThreadId 109", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 32}
    , self = 88
    , parent = Nothing
    , duration = 1.284485951000
    , status = Success
    , start = 2025-09-03 11:12:25.145082608 UTC
    , finish = 2025-09-03 11:12:26.429568559 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.462108385000
  min duration 1.140692297000
  total durat. 3.602800682000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 45}
    , self = 69
    , parent = Nothing
    , duration = 1.140692297000
    , status = Success
    , start = 2025-09-03 11:12:23.825304311 UTC
    , finish = 2025-09-03 11:12:24.965996608 UTC
    , thread_cap_info = ("ThreadId 107", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 116
      , num_strict_rules = 80
      , num_top_rules = 80
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 600}
    , self = 95
    , parent = Nothing
    , duration = 2.462108385000
    , status = Success
    , start = 2025-09-03 11:12:24.304169984 UTC
    , finish = 2025-09-03 11:12:26.766278369 UTC
    , thread_cap_info = ("ThreadId 122", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.189980132000
  min duration 0.523897901000
  total durat. 2.721947434000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 44}
    , self = 65
    , parent = Nothing
    , duration = 1.008069401000
    , status = Fail
    , start = 2025-09-03 11:12:23.57609388 UTC
    , finish = 2025-09-03 11:12:24.584163281 UTC
    , thread_cap_info = ("ThreadId 82", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 32}
    , self = 87
    , parent = Nothing
    , duration = 1.189980132000
    , status = Fail
    , start = 2025-09-03 11:12:25.12528851 UTC
    , finish = 2025-09-03 11:12:26.315268642 UTC
    , thread_cap_info = ("ThreadId 138", 2, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F                    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
F                    = 44} , self = 54 , parent = Nothing , duration = 0.137260739000 , status
F                    = Fail , start = 2025-09-03 11:12:23.561859422 UTC , finish = 2025-09-03
F                    11:12:23.699120161 UTC , thread_cap_info = ("ThreadId 65", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 180} , self = 59 , parent = Nothing , duration = 0.617996846000 , status
| F                  = Fail , start = 2025-09-03 11:12:23.56187195 UTC , finish = 2025-09-03
| F                  11:12:24.179868796 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 180} , self = 60 , parent = Nothing , duration = 0.625214015000 , status
| | F                = Fail , start = 2025-09-03 11:12:23.561876782 UTC , finish = 2025-09-03
| | F                11:12:24.187090797 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F              = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F              = 45} , self = 58 , parent = Nothing , duration = 0.317110884000 , status
| | | F              = Fail , start = 2025-09-03 11:12:23.568756639 UTC , finish = 2025-09-03
| | | F              11:12:23.885867523 UTC , thread_cap_info = ("ThreadId 79", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F            = 45} , self = 57 , parent = Nothing , duration = 0.156802156000 , status
| | | | F            = Fail , start = 2025-09-03 11:12:23.568759909 UTC , finish = 2025-09-03
| | | | F            11:12:23.725562065 UTC , thread_cap_info = ("ThreadId 80", 3, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | F          alphabet_size = 5 , total_length = 44} , self = 65 , parent = Nothing ,
| | | | | F          duration = 1.008069401000 , status = Fail , start = 2025-09-03 11:12:23.57609388
| | | | | F          UTC , finish = 2025-09-03 11:12:24.584163281 UTC , thread_cap_info = ("ThreadId
| | | | | F          82", 2, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 116 , num_strict_rules
| | | | | | F        = 80 , num_top_rules = 80 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | F        total_length = 600} , self = 63 , parent = Nothing , duration = 0.740016476000
| | | | | | F        , status = Fail , start = 2025-09-03 11:12:23.637414396 UTC , finish =
| | | | | | F        2025-09-03 11:12:24.377430872 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | F        3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 116 , num_strict_rules
| | | | | | | F      = 80 , num_top_rules = 80 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | F      total_length = 600} , self = 61 , parent = Nothing , duration = 0.641720733000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:12:23.644313538 UTC , finish =
| | | | | | | F      2025-09-03 11:12:24.286034271 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | F      3, False)}
| | | | | | | F      
F | | | | | | |      
S | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S | | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
S | | | | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
S | | | | | | |      = 5 , total_length = 44} , self = 66 , parent = Nothing , duration = 1.082344819000
S | | | | | | |      , status = Success , start = 2025-09-03 11:12:23.704178351 UTC , finish
S | | | | | | |      = 2025-09-03 11:12:24.78652317 UTC , thread_cap_info = ("ThreadId 103",
S | | | | | | |      2, False)}
S | | | | | | |      
| | | | F | | |      
| | | | F | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 113 , num_strict_rules
| | | | F | | |      = 77 , num_top_rules = 77 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | F | | |      total_length = 582} , self = 64 , parent = Nothing , duration = 0.700628003000
| | | | F | | |      , status = Fail , start = 2025-09-03 11:12:23.744166467 UTC , finish =
| | | | F | | |      2025-09-03 11:12:24.44479447 UTC , thread_cap_info = ("ThreadId 105", 3,
| | | | F | | |      False)}
| | | | F | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 113 , num_strict_rules
| | | | | | | | F    = 77 , num_top_rules = 77 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | F    total_length = 582} , self = 62 , parent = Nothing , duration = 0.492015861000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:12:23.811667427 UTC , finish =
| | | | | | | | F    2025-09-03 11:12:24.303683288 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | F    3, False)}
| | | | | | | | F    
| | | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S  = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | | | | S  alphabet_size = 5 , total_length = 45} , self = 69 , parent = Nothing ,
| | | | | | | | | S  duration = 1.140692297000 , status = Success , start = 2025-09-03 11:12:23.825304311
| | | | | | | | | S  UTC , finish = 2025-09-03 11:12:24.965996608 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S  107", 3, False)}
| | | | | | | | | S  
| | | F | | | | | |  
| | | S | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | S | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | S | | | | | |  = 5 , total_length = 45} , self = 72 , parent = Nothing , duration = 1.100505458000
| | | S | | | | | |  , status = Success , start = 2025-09-03 11:12:23.904177855 UTC , finish
| | | S | | | | | |  = 2025-09-03 11:12:25.004683313 UTC , thread_cap_info = ("ThreadId 109",
| | | S | | | | | |  3, False)}
| | | S | | | | | |  
| F | | | | | | | |  
|   F | | | | | | |  
|     | | | | F | |  
|     | | | |   F |  
| S   | | | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   | | | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   | | | |     |  = 116 , num_strict_rules = 80 , num_top_rules = 80 , num_weak_rules = 36
| S   | | | |     |  , alphabet_size = 17 , total_length = 600} , self = 95 , parent = Nothing
| S   | | | |     |  , duration = 2.462108385000 , status = Success , start = 2025-09-03 11:12:24.304169984
| S   | | | |     |  UTC , finish = 2025-09-03 11:12:26.766278369 UTC , thread_cap_info = ("ThreadId
| S   | | | |     |  122", 0, False)}
| S   | | | |     |  
| |   | | | F     |  
| |   | F |       |  
| |   |   F       |  
| | E |           |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |           |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |           |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |           |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |           |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |           |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E |           |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | E |           |  = 5 , total_length = 44} , self = 68 , parent = Nothing , duration = 0.341396662000
| | E |           |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:12:24.624172834
| | E |           |  UTC , finish = 2025-09-03 11:12:24.965569496 UTC , thread_cap_info = ("ThreadId
| | E |           |  125", 2, False)}
| | E |           |  
S | | |           |  
  | E |           |  
  |   |           S  
  |   S              
F |                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |                  = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
F |                  = 4 , total_length = 32} , self = 87 , parent = Nothing , duration = 1.189980132000
F |                  , status = Fail , start = 2025-09-03 11:12:25.12528851 UTC , finish = 2025-09-03
F |                  11:12:26.315268642 UTC , thread_cap_info = ("ThreadId 138", 2, False)}
F |                  
| | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | S                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | S                = 4 , total_length = 32} , self = 88 , parent = Nothing , duration = 1.284485951000
| | S                , status = Success , start = 2025-09-03 11:12:25.145082608 UTC , finish
| | S                = 2025-09-03 11:12:26.429568559 UTC , thread_cap_info = ("ThreadId 139",
| | S                2, False)}
| | S                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | F              = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F              = 39} , self = 85 , parent = Nothing , duration = 0.699399369000 , status
| | | F              = Fail , start = 2025-09-03 11:12:25.285194613 UTC , finish = 2025-09-03
| | | F              11:12:25.984593982 UTC , thread_cap_info = ("ThreadId 142", 2, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F            = 39} , self = 86 , parent = Nothing , duration = 0.715319695000 , status
| | | | F            = Fail , start = 2025-09-03 11:12:25.290209026 UTC , finish = 2025-09-03
| | | | F            11:12:26.005528721 UTC , thread_cap_info = ("ThreadId 143", 2, False)}
| | | | F            
| | | F |            
| | |   F            
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
| | | F              alphabet_size = 5 , total_length = 39} , self = 90 , parent = Nothing ,
| | | F              duration = 0.523897901000 , status = Fail , start = 2025-09-03 11:12:26.005549953
| | | F              UTC , finish = 2025-09-03 11:12:26.529447854 UTC , thread_cap_info = ("ThreadId
| | | F              150", 2, False)}
| | | F              
| | | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | S            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
| | | | S            = 5 , total_length = 39} , self = 94 , parent = Nothing , duration = 0.710394984000
| | | | S            , status = Success , start = 2025-09-03 11:12:26.038143461 UTC , finish
| | | | S            = 2025-09-03 11:12:26.748538445 UTC , thread_cap_info = ("ThreadId 151",
| | | | S            2, False)}
| | | | S            
F | | | |            
E | | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | | |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
E | | | |            = 4 , total_length = 32} , self = 91 , parent = Nothing , duration = 0.294232389000
E | | | |            , status = Except "AsyncCancelled" , start = 2025-09-03 11:12:26.315304394
E | | | |            UTC , finish = 2025-09-03 11:12:26.609536783 UTC , thread_cap_info = ("ThreadId
E | | | |            152", 2, False)}
E | | | |            
| | S | |            
| |   F |            
E |     |            
  |     S            
  S                  
