last 491 length 2084
CNF 491 vars 2084 clauses
last 665 length 2751
CNF 665 vars 2751 clauses
last 526 length 2088
CNF 526 vars 2088 clauses
last 739 length 3046
CNF 739 vars 3046 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1889, clauses: 6825
last 1889 length 6825
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2558, clauses: 9234
last 2558 length 9234
CNF 2558 vars 9234 clauses
CNF 1889 vars 6825 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2558, clauses: 9234, status: Unsatisfied, time: 0.091498491s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5506, clauses: 22717
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1889, clauses: 6825, status: Unsatisfied, time: 0.109563088s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7671, clauses: 31781
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4790, clauses: 19039
last 5506 length 22717
last 5512 length 29595
last 6106 length 41770
last 7671 length 31781
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3456, clauses: 13764
last 4790 length 19039
CNF 5506 vars 22717 clauses
CNF 5512 vars 29595 clauses
CNF 6106 vars 41770 clauses
CNF 7671 vars 31781 clauses
last 3456 length 13764
CNF 4790 vars 19039 clauses
last 23058 length 108898
last 7312 length 33042
last 9393 length 40517
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5506, clauses: 22717, status: Unsatisfied, time: 0.595339587s
CNF 3456 vars 13764 clauses
CNF 7312 vars 33042 clauses
CNF 9393 vars 40517 clauses
last 15736 length 90269
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3100, clauses: 11859
CNF 23058 vars 108898 clauses
last 3100 length 11859
CNF 3100 vars 11859 clauses
CNF 15736 vars 90269 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3456, clauses: 13764, status: Unsatisfied, time: 0.987025737s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4790, clauses: 19039, status: Unsatisfied, time: 1.360282246s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3100, clauses: 11859, status: Unsatisfied, time: 0.493262322s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4174, clauses: 15916
last 4174 length 15916
CNF 4174 vars 15916 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12494, clauses: 48729
last 12494 length 48729
CNF 12494 vars 48729 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4174, clauses: 15916, status: Unsatisfied, time: 0.509757252s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21829, clauses: 89623
last 21829 length 89623
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12494, clauses: 48729, status: Satisfied, time: 0.490480491s
CNF 21829 vars 89623 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21829, clauses: 89623, status: Satisfied, time: 0.090361539s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9429, clauses: 38906
last 9429 length 38906
CNF 9429 vars 38906 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5768, clauses: 21856
last 5768 length 21856
CNF 5768 vars 21856 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7671, clauses: 31781, status: Unsatisfied, time: 2.339039955s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13125, clauses: 53809
last 13125 length 53809
CNF 13125 vars 53809 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7816, clauses: 29441
last 7816 length 29441
CNF 7816 vars 29441 clauses
last 6400 length 29667
CNF 6400 vars 29667 clauses
last 7302 length 31769
CNF 7302 vars 31769 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5768, clauses: 21856, status: Unsatisfied, time: 1.542419645s
last 22483 length 106649
CNF 22483 vars 106649 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11440, clauses: 52859
last 11440 length 52859
CNF 11440 vars 52859 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7816, clauses: 29441, status: Unsatisfied, time: 1.944387347s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10833, clauses: 41255
last 10833 length 41255
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11440, clauses: 52859, status: Satisfied, time: 0.257560849s
CNF 10833 vars 41255 clauses
last 415 length 1658
CNF 415 vars 1658 clauses
last 472 length 2017
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15955, clauses: 74243
last 15427 length 89148
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1781, clauses: 6342
CNF 472 vars 2017 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10833, clauses: 41255, status: Satisfied, time: 0.430523s
last 15955 length 74243
last 1781 length 6342
CNF 15955 vars 74243 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5458, clauses: 22537
CNF 1781 vars 6342 clauses
last 5458 length 22537
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1781, clauses: 6342, status: Unsatisfied, time: 0.567769525s
CNF 5458 vars 22537 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20588, clauses: 84657
last 20588 length 84657
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15955, clauses: 74243, status: Satisfied, time: 0.773475143s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3379, clauses: 13471
last 3379 length 13471
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5458, clauses: 22537, status: Unsatisfied, time: 0.253346259s
CNF 20588 vars 84657 clauses
CNF 3379 vars 13471 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2929, clauses: 10997
last 2929 length 10997
CNF 2929 vars 10997 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20588, clauses: 84657, status: Satisfied, time: 0.264864324s
last 651 length 2728
last 549 length 2314
CNF 549 vars 2314 clauses
CNF 651 vars 2728 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2057, clauses: 7365
last 2057 length 7365
CNF 2057 vars 7365 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2929, clauses: 10997, status: Unsatisfied, time: 0.210374997s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6960, clauses: 28889
last 6960 length 28889
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2057, clauses: 7365, status: Unsatisfied, time: 0.111889192s
CNF 6960 vars 28889 clauses
last 6273 length 32912
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4291, clauses: 17112
last 4291 length 17112
CNF 4291 vars 17112 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3379, clauses: 13471, status: Unsatisfied, time: 0.586269989s
CNF 6273 vars 32912 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9330, clauses: 38504
last 9330 length 38504
CNF 9330 vars 38504 clauses
last 7572 length 47969
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5465, clauses: 20400
last 5465 length 20400
CNF 7572 vars 47969 clauses
CNF 5465 vars 20400 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4291, clauses: 17112, status: Unsatisfied, time: 0.757453998s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6960, clauses: 28889, status: Unsatisfied, time: 1.322979467s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3372, clauses: 12643
last 3372 length 12643
CNF 3372 vars 12643 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9054, clauses: 33113
last 9054 length 33113
CNF 9054 vars 33113 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3372, clauses: 12643, status: Unsatisfied, time: 0.646951384s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5465, clauses: 20400, status: Unsatisfied, time: 1.81832533s
last 15320 length 88751
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6328, clauses: 23496
last 6328 length 23496
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12217, clauses: 50231
last 12217 length 50231
CNF 15320 vars 88751 clauses
CNF 6328 vars 23496 clauses
CNF 12217 vars 50231 clauses
last 22307 length 105957
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11382, clauses: 52643
last 11382 length 52643
CNF 22307 vars 105957 clauses
CNF 11382 vars 52643 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35810, clauses: 150361
last 35810 length 150361
CNF 35810 vars 150361 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6328, clauses: 23496, status: Unsatisfied, time: 1.260544477s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20178, clauses: 83027
last 20178 length 83027
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15136, clauses: 70547
last 15136 length 70547
CNF 20178 vars 83027 clauses
CNF 15136 vars 70547 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20178, clauses: 83027, status: Satisfied, time: 0.464420284s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       mirror
SRS with 27 rules on 9 letters       DP
SRS with 78 strict rules and 27 weak rules on 18 letters       weights
SRS with 75 strict rules and 27 weak rules on 17 letters       EDG
SRS with 75 strict rules and 27 weak rules on 17 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 69 strict rules and 27 weak rules on 17 letters       weights
SRS with 68 strict rules and 27 weak rules on 16 letters       EDG
SRS with 68 strict rules and 27 weak rules on 16 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 66 strict rules and 27 weak rules on 16 letters       EDG
SRS with 66 strict rules and 27 weak rules on 16 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 16 strict rules and 27 weak rules on 14 letters       weights
SRS with 1 strict rules and 27 weak rules on 10 letters       EDG
SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
SRS with 1 rules on 2 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [c] {- Input 1 -}
  [a, c, c] -> [c, b, a, c, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [[a, c], [c, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [[a, c], [c, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c], [c, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [[b, c], [c, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [[b, c], [c, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c], [c, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [[c, c], [c, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [[c, c], [c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c], [c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, c], [c, a]] -> [ [a, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, b]] -> [ [a, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, c]] -> [ [a, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, a]] -> [ [b, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, b]] -> [ [b, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, c]] -> [ [b, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, a]] -> [ [c, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, b]] -> [ [c, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, c]] -> [ [c, c] , [c, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [a, a]] -> [ [c, a] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [a, a]] -> [ [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [c, c] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a]] -> [ [c, a] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a]] -> [ [c, b] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [b, a]] -> [ [c, c] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [c, a]] -> [ [c, a] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [c, c] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a], [c, c], [a, c], [a, a]] -> [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [a, a]] -> [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [a, a]] -> [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [a, c], [b, a]] -> [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [b, a]] -> [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [b, a]] -> [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [a, c], [c, a]] -> [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [c, a]] -> [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [c, a]] -> [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, a]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, a]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, a]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 23A 24A 24A - \
        | 23A 24A 24A - |
        | 23A 24A 24A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 24A 24A 24A - \
        | 24A 24A 24A - |
        | 24A 24A 24A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 0/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 23A 24A 24A - \
        | 23A 24A 24A - |
        | 23A 24A 24A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 23A 23A 23A - \
        | 23A 23A 23A - |
        | 23A 23A 23A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, a]# , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [b, a]# , [c, b] , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [c, b]# , [ b , c ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, a]# , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, c]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]#
  , Wk  / 12A 13A 14A - \
        | 12A 13A 14A - |
        | 12A 13A 14A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 14A 14A 17A - \
        | 14A 14A 17A - |
        | 14A 14A 17A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 13A 16A 16A - \
        | 13A 16A 16A - |
        | 13A 16A 16A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 14A 15A 17A - \
        | 14A 15A 17A - |
        | 14A 15A 17A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 13A 15A 16A - \
        | 13A 15A 16A - |
        | 13A 15A 16A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 13A 14A 15A - \
        | 13A 14A 15A - |
        | 13A 14A 15A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 13A 14A 16A - \
        | 13A 14A 16A - |
        | 13A 14A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [b, a]] |-> [ [ b , c ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 3/1)
  ([a, c]#, 1/1)
  ([b, c]#, 0/1)
  ([c, b]#, 2/1)
  ([c, c]#, 3/1)
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c], [b, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [b, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [b, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [b, a] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}\Mirror(27,9)\Deepee(78/27,18)\Weight\EDG(75/27,17)\Matrix{\Arctic}{3}(69/27,17)\Weight\EDG(68/27,16)\Matrix{\Arctic}{3}\EDG(66/27,16)\Matrix{\Arctic}{3}(16/27,14)\Weight\EDG(1/27,10)\Usable(1,2)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 2.964165244000
  min duration 0.018218854000
  total durat. 10.721312304000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 636}
    , self = 70
    , parent = Nothing
    , duration = 1.083107965000
    , status = Fail
    , start = 2025-09-03 11:16:11.478438656 UTC
    , finish = 2025-09-03 11:16:12.561546621 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 41
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 253}
    , self = 93
    , parent = Nothing
    , duration = 1.689519055000
    , status = Fail
    , start = 2025-09-03 11:16:13.674863958 UTC
    , finish = 2025-09-03 11:16:15.364383013 UTC
    , thread_cap_info = ("ThreadId 153", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 95
      , num_strict_rules = 68
      , num_top_rules = 68
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 606}
    , self = 94
    , parent = Nothing
    , duration = 2.352682990000
    , status = Fail
    , start = 2025-09-03 11:16:13.609281751 UTC
    , finish = 2025-09-03 11:16:15.961964741 UTC
    , thread_cap_info = ("ThreadId 149", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 93
      , num_strict_rules = 66
      , num_top_rules = 66
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 597}
    , self = 143
    , parent = Nothing
    , duration = 2.964165244000
    , status = Fail
    , start = 2025-09-03 11:16:17.996100629 UTC
    , finish = 2025-09-03 11:16:20.960265873 UTC
    , thread_cap_info = ("ThreadId 215", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 2.556557778000
  min duration 0.012111342000
  total durat. 7.790790479000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 636}
    , self = 71
    , parent = Nothing
    , duration = 1.121538514000
    , status = Fail
    , start = 2025-09-03 11:16:11.488942284 UTC
    , finish = 2025-09-03 11:16:12.610480798 UTC
    , thread_cap_info = ("ThreadId 113", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 27
      , alphabet_size = 10
      , total_length = 186}
    , self = 137
    , parent = Nothing
    , duration = 1.158758591000
    , status = Fail
    , start = 2025-09-03 11:16:17.248837625 UTC
    , finish = 2025-09-03 11:16:18.407596216 UTC
    , thread_cap_info = ("ThreadId 188", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 93
      , num_strict_rules = 66
      , num_top_rules = 66
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 597}
    , self = 142
    , parent = Nothing
    , duration = 2.556557778000
    , status = Fail
    , start = 2025-09-03 11:16:18.030555213 UTC
    , finish = 2025-09-03 11:16:20.587112991 UTC
    , thread_cap_info = ("ThreadId 216", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.026036516000
  min duration 3.026036516000
  total durat. 3.026036516000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 95
      , num_strict_rules = 68
      , num_top_rules = 68
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 606}
    , self = 104
    , parent = Nothing
    , duration = 3.026036516000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:16:13.61206706 UTC
    , finish = 2025-09-03 11:16:16.638103576 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 2.551604398000
  min duration 0.438087762000
  total durat. 5.417643606000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 139
    , parent = Nothing
    , duration = 1.481880339000
    , status = Fail
    , start = 2025-09-03 11:16:17.633554619 UTC
    , finish = 2025-09-03 11:16:19.115434958 UTC
    , thread_cap_info = ("ThreadId 204", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 90
    , parent = Nothing
    , duration = 2.551604398000
    , status = Fail
    , start = 2025-09-03 11:16:11.259250954 UTC
    , finish = 2025-09-03 11:16:13.810855352 UTC
    , thread_cap_info = ("ThreadId 85", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 2.320369737000
  min duration 0.976390903000
  total durat. 7.111306639000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 95
      , num_strict_rules = 68
      , num_top_rules = 68
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 606}
    , self = 129
    , parent = Nothing
    , duration = 1.071675158000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:16:16.674509906 UTC
    , finish = 2025-09-03 11:16:17.746185064 UTC
    , thread_cap_info = ("ThreadId 178", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 314}
    , self = 80
    , parent = Nothing
    , duration = 1.085708417000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:16:12.507577169 UTC
    , finish = 2025-09-03 11:16:13.593285586 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 41
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 253}
    , self = 108
    , parent = Nothing
    , duration = 1.657162424000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:16:15.436687415 UTC
    , finish = 2025-09-03 11:16:17.093849839 UTC
    , thread_cap_info = ("ThreadId 162", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 93
      , num_strict_rules = 66
      , num_top_rules = 66
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 597}
    , self = 147
    , parent = Nothing
    , duration = 2.320369737000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:16:21.018452827 UTC
    , finish = 2025-09-03 11:16:23.338822564 UTC
    , thread_cap_info = ("ThreadId 235", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.323965176000
  min duration 0.973148270000
  total durat. 2.297113446000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 116
    , parent = Nothing
    , duration = 1.323965176000
    , status = Success
    , start = 2025-09-03 11:16:16.056543264 UTC
    , finish = 2025-09-03 11:16:17.38050844 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.471701070000
  min duration 0.700157807000
  total durat. 4.335985094000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 30}
    , self = 72
    , parent = Nothing
    , duration = 1.317990666000
    , status = Fail
    , start = 2025-09-03 11:16:11.460771411 UTC
    , finish = 2025-09-03 11:16:12.778762077 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 73
    , parent = Nothing
    , duration = 1.471701070000
    , status = Fail
    , start = 2025-09-03 11:16:11.371684126 UTC
    , finish = 2025-09-03 11:16:12.843385196 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.981321233000
  min duration 3.406869469000
  total durat. 7.388190702000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 30}
    , self = 98
    , parent = Nothing
    , duration = 3.406869469000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:16:12.851666101 UTC
    , finish = 2025-09-03 11:16:16.25853557 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 119
    , parent = Nothing
    , duration = 3.981321233000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:16:13.474266317 UTC
    , finish = 2025-09-03 11:16:17.45558755 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.732533249000
  min duration 1.003698339000
  total durat. 8.866714871000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 636}
    , self = 78
    , parent = Nothing
    , duration = 1.003698339000
    , status = Success
    , start = 2025-09-03 11:16:12.568594714 UTC
    , finish = 2025-09-03 11:16:13.572293053 UTC
    , thread_cap_info = ("ThreadId 132", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 314}
    , self = 76
    , parent = Nothing
    , duration = 1.130351562000
    , status = Success
    , start = 2025-09-03 11:16:12.39287947 UTC
    , finish = 2025-09-03 11:16:13.523231032 UTC
    , thread_cap_info = ("ThreadId 129", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 95
      , num_strict_rules = 68
      , num_top_rules = 68
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 606}
    , self = 126
    , parent = Nothing
    , duration = 1.626054246000
    , status = Success
    , start = 2025-09-03 11:16:16.037964626 UTC
    , finish = 2025-09-03 11:16:17.664018872 UTC
    , thread_cap_info = ("ThreadId 165", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 41
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 253}
    , self = 106
    , parent = Nothing
    , duration = 2.374077475000
    , status = Success
    , start = 2025-09-03 11:16:14.602594399 UTC
    , finish = 2025-09-03 11:16:16.976671874 UTC
    , thread_cap_info = ("ThreadId 160", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 93
      , num_strict_rules = 66
      , num_top_rules = 66
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 597}
    , self = 145
    , parent = Nothing
    , duration = 2.732533249000
    , status = Success
    , start = 2025-09-03 11:16:20.602644206 UTC
    , finish = 2025-09-03 11:16:23.335177455 UTC
    , thread_cap_info = ("ThreadId 233", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.822008611000
  min duration 0.120806614000
  total durat. 1.372986925000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.119301523000
  min duration 0.279525198000
  total durat. 2.728189176000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 140
    , parent = Nothing
    , duration = 1.119301523000
    , status = Fail
    , start = 2025-09-03 11:16:18.715846341 UTC
    , finish = 2025-09-03 11:16:19.835147864 UTC
    , thread_cap_info = ("ThreadId 223", 2, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.232417631000
  min duration 1.768155104000
  total durat. 8.253249284000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 144
    , parent = Nothing
    , duration = 1.768155104000
    , status = Fail
    , start = 2025-09-03 11:16:19.881977983 UTC
    , finish = 2025-09-03 11:16:21.650133087 UTC
    , thread_cap_info = ("ThreadId 227", 2, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 26}
    , self = 141
    , parent = Nothing
    , duration = 2.051575524000
    , status = Fail
    , start = 2025-09-03 11:16:17.994446953 UTC
    , finish = 2025-09-03 11:16:20.046022477 UTC
    , thread_cap_info = ("ThreadId 217", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 30}
    , self = 92
    , parent = Nothing
    , duration = 2.201101025000
    , status = Fail
    , start = 2025-09-03 11:16:13.000749292 UTC
    , finish = 2025-09-03 11:16:15.201850317 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 95
    , parent = Nothing
    , duration = 2.232417631000
    , status = Fail
    , start = 2025-09-03 11:16:13.814984657 UTC
    , finish = 2025-09-03 11:16:16.047402288 UTC
    , thread_cap_info = ("ThreadId 155", 2, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                    = 45 , parent = Nothing , duration = 0.120838603000 , status = Fail , start
F                    = 2025-09-03 11:16:11.203814605 UTC , finish = 2025-09-03 11:16:11.324653208
F                    UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                    
| F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                  = 12} , self = 55 , parent = Nothing , duration = 0.240177113000 , status
| F                  = Fail , start = 2025-09-03 11:16:11.203824204 UTC , finish = 2025-09-03
| F                  11:16:11.444001317 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
| F                  
| | F                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F                = 4 , total_length = 30} , self = 67 , parent = Nothing , duration = 0.946071107000
| | F                , status = Fail , start = 2025-09-03 11:16:11.226921362 UTC , finish =
| | F                2025-09-03 11:16:12.172992469 UTC , thread_cap_info = ("ThreadId 76", 0,
| | F                False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F              = 5 , total_length = 39} , self = 47 , parent = Nothing , duration = 0.120806614000
| | | F              , status = Fail , start = 2025-09-03 11:16:11.231057695 UTC , finish =
| | | F              2025-09-03 11:16:11.351864309 UTC , thread_cap_info = ("ThreadId 78", 2,
| | | F              False)}
| | | F              
| | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F            = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | F            = 4 , total_length = 30} , self = 58 , parent = Nothing , duration = 0.228099767000
| | | | F            , status = Fail , start = 2025-09-03 11:16:11.232641541 UTC , finish =
| | | | F            2025-09-03 11:16:11.460741308 UTC , thread_cap_info = ("ThreadId 75", 0,
| | | | F            False)}
| | | | F            
| | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | F          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | F          = 5 , total_length = 39} , self = 90 , parent = Nothing , duration = 2.551604398000
| | | | | F          , status = Fail , start = 2025-09-03 11:16:11.259250954 UTC , finish =
| | | | | F          2025-09-03 11:16:13.810855352 UTC , thread_cap_info = ("ThreadId 85", 2,
| | | | | F          False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F        = 162} , self = 65 , parent = Nothing , duration = 0.643179426000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:16:11.312077905 UTC , finish = 2025-09-03
| | | | | | F        11:16:11.955257331 UTC , thread_cap_info = ("ThreadId 89", 0, False)}
| | | | | | F        
F | | | | | |        
F | | | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F | | | | | |        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F | | | | | |        = 162} , self = 66 , parent = Nothing , duration = 0.647063935000 , status
F | | | | | |        = Fail , start = 2025-09-03 11:16:11.33165317 UTC , finish = 2025-09-03
F | | | | | |        11:16:11.978717105 UTC , thread_cap_info = ("ThreadId 91", 0, False)}
F | | | | | |        
| | | F | | |        
| | | F | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | F | | |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F | | |        = 5 , total_length = 39} , self = 73 , parent = Nothing , duration = 1.471701070000
| | | F | | |        , status = Fail , start = 2025-09-03 11:16:11.371684126 UTC , finish =
| | | F | | |        2025-09-03 11:16:12.843385196 UTC , thread_cap_info = ("ThreadId 97", 2,
| | | F | | |        False)}
| | | F | | |        
| F | | | | |        
|   | | F | |        
| F | |   | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |   | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |   | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |   | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |   | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |   | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F | |   | |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | |   | |        = 4 , total_length = 30} , self = 72 , parent = Nothing , duration = 1.317990666000
| F | |   | |        , status = Fail , start = 2025-09-03 11:16:11.460771411 UTC , finish =
| F | |   | |        2025-09-03 11:16:12.778762077 UTC , thread_cap_info = ("ThreadId 107",
| F | |   | |        0, False)}
| F | |   | |        
| | | | F | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | F | |        = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | F | |        total_length = 636} , self = 70 , parent = Nothing , duration = 1.083107965000
| | | | F | |        , status = Fail , start = 2025-09-03 11:16:11.478438656 UTC , finish =
| | | | F | |        2025-09-03 11:16:12.561546621 UTC , thread_cap_info = ("ThreadId 111",
| | | | F | |        3, False)}
| | | | F | |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | | F      = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | F      total_length = 636} , self = 71 , parent = Nothing , duration = 1.121538514000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:16:11.488942284 UTC , finish =
| | | | | | | F      2025-09-03 11:16:12.610480798 UTC , thread_cap_info = ("ThreadId 113",
| | | | | | | F      3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | | | | | F    = 24 , num_top_rules = 24 , num_weak_rules = 27 , alphabet_size = 12 ,
| | | | | | | | F    total_length = 314} , self = 69 , parent = Nothing , duration = 0.845013334000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:16:11.557961096 UTC , finish =
| | | | | | | | F    2025-09-03 11:16:12.40297443 UTC , thread_cap_info = ("ThreadId 115", 3,
| | | | | | | | F    False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | | | | | | F  = 24 , num_top_rules = 24 , num_weak_rules = 27 , alphabet_size = 12 ,
| | | | | | | | | F  total_length = 314} , self = 68 , parent = Nothing , duration = 0.783062685000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:16:11.591820061 UTC , finish =
| | | | | | | | | F  2025-09-03 11:16:12.374882746 UTC , thread_cap_info = ("ThreadId 116",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| | | | | | F | | |  
F | | | | |   | | |  
  | F | | |   | | |  
F |   | | |   | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F |   | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   | | |   | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F |   | | |   | | |  = 4 , total_length = 30} , self = 74 , parent = Nothing , duration = 0.719423574000
F |   | | |   | | |  , status = Fail , start = 2025-09-03 11:16:12.180223568 UTC , finish =
F |   | | |   | | |  2025-09-03 11:16:12.899647142 UTC , thread_cap_info = ("ThreadId 127",
F |   | | |   | | |  0, False)}
F |   | | |   | | |  
| |   | | |   | | F  
| | S | | |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | |   | |    = 51 , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 27
| | S | | |   | |    , alphabet_size = 12 , total_length = 314} , self = 76 , parent = Nothing
| | S | | |   | |    , duration = 1.130351562000 , status = Success , start = 2025-09-03 11:16:12.39287947
| | S | | |   | |    UTC , finish = 2025-09-03 11:16:13.523231032 UTC , thread_cap_info = ("ThreadId
| | S | | |   | |    129", 3, False)}
| | S | | |   | |    
| | | | | |   | F    
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 51
| | | | | | E |      , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 27 , alphabet_size
| | | | | | E |      = 12 , total_length = 314} , self = 80 , parent = Nothing , duration =
| | | | | | E |      1.085708417000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |      11:16:12.507577169 UTC , finish = 2025-09-03 11:16:13.593285586 UTC , thread_cap_info
| | | | | | E |      = ("ThreadId 130", 3, False)}
| | | | | | E |      
| | | | F | | |      
| | | | S | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | |      = 102 , num_strict_rules = 75 , num_top_rules = 75 , num_weak_rules = 27
| | | | S | | |      , alphabet_size = 17 , total_length = 636} , self = 78 , parent = Nothing
| | | | S | | |      , duration = 1.003698339000 , status = Success , start = 2025-09-03 11:16:12.568594714
| | | | S | | |      UTC , finish = 2025-09-03 11:16:13.572293053 UTC , thread_cap_info = ("ThreadId
| | | | S | | |      132", 3, False)}
| | | | S | | |      
| | | | | | | F      
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 102
| | | | | | | E      , num_strict_rules = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size
| | | | | | | E      = 17 , total_length = 636} , self = 81 , parent = Nothing , duration =
| | | | | | | E      0.976390903000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E      11:16:12.61710871 UTC , finish = 2025-09-03 11:16:13.593499613 UTC , thread_cap_info
| | | | | | | E      = ("ThreadId 133", 3, False)}
| | | | | | | E      
| F | | | | | |      
|   | F | | | |      
| E |   | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E |   | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E |   | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E |   | | | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E |   | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| E |   | | | |      = 4 , total_length = 30} , self = 98 , parent = Nothing , duration = 3.406869469000
| E |   | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:16:12.851666101
| E |   | | | |      UTC , finish = 2025-09-03 11:16:16.25853557 UTC , thread_cap_info = ("ThreadId
| E |   | | | |      134", 0, False)}
| E |   | | | |      
| | | F | | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | |      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F | | | |      = 5 , total_length = 39} , self = 75 , parent = Nothing , duration = 0.609938881000
| | | F | | | |      , status = Fail , start = 2025-09-03 11:16:12.851667295 UTC , finish =
| | | F | | | |      2025-09-03 11:16:13.461606176 UTC , thread_cap_info = ("ThreadId 135",
| | | F | | | |      2, False)}
| | | F | | | |      
F | | | | | | |      
F | | | | | | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | | | | | |      = 4 , total_length = 30} , self = 92 , parent = Nothing , duration = 2.201101025000
F | | | | | | |      , status = Fail , start = 2025-09-03 11:16:13.000749292 UTC , finish =
F | | | | | | |      2025-09-03 11:16:15.201850317 UTC , thread_cap_info = ("ThreadId 137",
F | | | | | | |      0, False)}
F | | | | | | |      
| | | F | | | |      
| | | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | | | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | E | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | E | | | |      = 5 , total_length = 39} , self = 119 , parent = Nothing , duration = 3.981321233000
| | | E | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:16:13.474266317
| | | E | | | |      UTC , finish = 2025-09-03 11:16:17.45558755 UTC , thread_cap_info = ("ThreadId
| | | E | | | |      140", 2, False)}
| | | E | | | |      
| | S | | | | |      
| |   | S | | |      
| |   |   | E |      
| |   |   |   E      
| | F |   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   |          = False\n , verbose = False}" , input_size = Size { num_rules = 95 , num_strict_rules
| | F |   |          = 68 , num_top_rules = 68 , num_weak_rules = 27 , alphabet_size = 16 ,
| | F |   |          total_length = 606} , self = 94 , parent = Nothing , duration = 2.352682990000
| | F |   |          , status = Fail , start = 2025-09-03 11:16:13.609281751 UTC , finish =
| | F |   |          2025-09-03 11:16:15.961964741 UTC , thread_cap_info = ("ThreadId 149",
| | F |   |          3, False)}
| | F |   |          
| | | | E |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E |          = False\n , verbose = False}" , input_size = Size { num_rules = 95 , num_strict_rules
| | | | E |          = 68 , num_top_rules = 68 , num_weak_rules = 27 , alphabet_size = 16 ,
| | | | E |          total_length = 606} , self = 104 , parent = Nothing , duration = 3.026036516000
| | | | E |          , status = Except "<<timeout>>" , start = 2025-09-03 11:16:13.61206706
| | | | E |          UTC , finish = 2025-09-03 11:16:16.638103576 UTC , thread_cap_info = ("ThreadId
| | | | E |          150", 3, False)}
| | | | E |          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 41 , num_strict_rules
| | | | | | F        = 14 , num_top_rules = 14 , num_weak_rules = 27 , alphabet_size = 11 ,
| | | | | | F        total_length = 253} , self = 93 , parent = Nothing , duration = 1.689519055000
| | | | | | F        , status = Fail , start = 2025-09-03 11:16:13.674863958 UTC , finish =
| | | | | | F        2025-09-03 11:16:15.364383013 UTC , thread_cap_info = ("ThreadId 153",
| | | | | | F        3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 41 , num_strict_rules
| | | | | | | F      = 14 , num_top_rules = 14 , num_weak_rules = 27 , alphabet_size = 11 ,
| | | | | | | F      total_length = 253} , self = 91 , parent = Nothing , duration = 0.866493459000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:16:13.691740425 UTC , finish =
| | | | | | | F      2025-09-03 11:16:14.558233884 UTC , thread_cap_info = ("ThreadId 154",
| | | | | | | F      3, False)}
| | | | | | | F      
| | | | | F | |      
| | | | | F | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | |      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | F | |      = 5 , total_length = 39} , self = 95 , parent = Nothing , duration = 2.232417631000
| | | | | F | |      , status = Fail , start = 2025-09-03 11:16:13.814984657 UTC , finish =
| | | | | F | |      2025-09-03 11:16:16.047402288 UTC , thread_cap_info = ("ThreadId 155",
| | | | | F | |      2, False)}
| | | | | F | |      
| | | | | | | F      
| | | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S      = 41 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 27
| | | | | | | S      , alphabet_size = 11 , total_length = 253} , self = 106 , parent = Nothing
| | | | | | | S      , duration = 2.374077475000 , status = Success , start = 2025-09-03 11:16:14.602594399
| | | | | | | S      UTC , finish = 2025-09-03 11:16:16.976671874 UTC , thread_cap_info = ("ThreadId
| | | | | | | S      160", 3, False)}
| | | | | | | S      
F | | | | | | |      
S | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
S | | | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | | | | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S | | | | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
S | | | | | | |      = 4 , total_length = 30} , self = 96 , parent = Nothing , duration = 0.973148270000
S | | | | | | |      , status = Success , start = 2025-09-03 11:16:15.211673225 UTC , finish
S | | | | | | |      = 2025-09-03 11:16:16.184821495 UTC , thread_cap_info = ("ThreadId 161",
S | | | | | | |      0, False)}
S | | | | | | |      
| | | | | | F |      
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 41
| | | | | | E |      , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 27 , alphabet_size
| | | | | | E |      = 11 , total_length = 253} , self = 108 , parent = Nothing , duration =
| | | | | | E |      1.657162424000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |      11:16:15.436687415 UTC , finish = 2025-09-03 11:16:17.093849839 UTC , thread_cap_info
| | | | | | E |      = ("ThreadId 162", 3, False)}
| | | | | | E |      
| | F | | | | |      
| | S | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | |      = 95 , num_strict_rules = 68 , num_top_rules = 68 , num_weak_rules = 27
| | S | | | | |      , alphabet_size = 16 , total_length = 606} , self = 126 , parent = Nothing
| | S | | | | |      , duration = 1.626054246000 , status = Success , start = 2025-09-03 11:16:16.037964626
| | S | | | | |      UTC , finish = 2025-09-03 11:16:17.664018872 UTC , thread_cap_info = ("ThreadId
| | S | | | | |      165", 3, False)}
| | S | | | | |      
| | | | | F | |      
| | | | | S | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | | | | S | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | S | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | S | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | S | |      = 5 , total_length = 39} , self = 116 , parent = Nothing , duration = 1.323965176000
| | | | | S | |      , status = Success , start = 2025-09-03 11:16:16.056543264 UTC , finish
| | | | | S | |      = 2025-09-03 11:16:17.38050844 UTC , thread_cap_info = ("ThreadId 166",
| | | | | S | |      2, False)}
| | | | | S | |      
S | | | | | | |      
  E | | | | | |      
F   | | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
F   | | | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F   | | | | | |      = 26} , self = 105 , parent = Nothing , duration = 0.546538245000 , status
F   | | | | | |      = Fail , start = 2025-09-03 11:16:16.367919967 UTC , finish = 2025-09-03
F   | | | | | |      11:16:16.914458212 UTC , thread_cap_info = ("ThreadId 173", 0, False)}
F   | | | | | |      
| F | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F | | | | | |      = 4 , total_length = 26} , self = 115 , parent = Nothing , duration = 0.822008611000
| F | | | | | |      , status = Fail , start = 2025-09-03 11:16:16.437835212 UTC , finish =
| F | | | | | |      2025-09-03 11:16:17.259843823 UTC , thread_cap_info = ("ThreadId 175",
| F | | | | | |      0, False)}
| F | | | | | |      
| | | | E | | |      
| | | | E | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 95
| | | | E | | |      , num_strict_rules = 68 , num_top_rules = 68 , num_weak_rules = 27 , alphabet_size
| | | | E | | |      = 16 , total_length = 606} , self = 129 , parent = Nothing , duration =
| | | | E | | |      1.071675158000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | | |      11:16:16.674509906 UTC , finish = 2025-09-03 11:16:17.746185064 UTC , thread_cap_info
| | | | E | | |      = ("ThreadId 178", 3, False)}
| | | | E | | |      
F | | | | | | |      
F | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
F | | | | | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F | | | | | | |      = 4 , total_length = 26} , self = 117 , parent = Nothing , duration = 0.438087762000
F | | | | | | |      , status = Fail , start = 2025-09-03 11:16:16.95194614 UTC , finish = 2025-09-03
F | | | | | | |      11:16:17.390033902 UTC , thread_cap_info = ("ThreadId 179", 0, False)}
F | | | | | | |      
| | | | | | | S      
| | | | | | E        
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | F        = 186} , self = 136 , parent = Nothing , duration = 0.979663879000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:16:17.191720219 UTC , finish = 2025-09-03
| | | | | | F        11:16:18.171384098 UTC , thread_cap_info = ("ThreadId 187", 3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 27 , alphabet_size = 10 , total_length
| | | | | | | F      = 186} , self = 137 , parent = Nothing , duration = 1.158758591000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:16:17.248837625 UTC , finish = 2025-09-03
| | | | | | | F      11:16:18.407596216 UTC , thread_cap_info = ("ThreadId 188", 3, False)}
| | | | | | | F      
| F | | | | | |      
| F | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F | | | | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F | | | | | |      = 4 , total_length = 26} , self = 135 , parent = Nothing , duration = 0.700157807000
| F | | | | | |      , status = Fail , start = 2025-09-03 11:16:17.276131316 UTC , finish =
| F | | | | | |      2025-09-03 11:16:17.976289123 UTC , thread_cap_info = ("ThreadId 190",
| F | | | | | |      0, False)}
| F | | | | | |      
| | | | | S | |      
F | | | |   | |      
F | | | |   | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | |   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | |   | |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F | | | |   | |      = 4 , total_length = 26} , self = 128 , parent = Nothing , duration = 0.279525198000
F | | | |   | |      , status = Fail , start = 2025-09-03 11:16:17.418389332 UTC , finish =
F | | | |   | |      2025-09-03 11:16:17.69791453 UTC , thread_cap_info = ("ThreadId 194", 0,
F | | | |   | |      False)}
F | | | |   | |      
| | | E |   | |      
| | | F |   | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |   | |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F |   | |      = 4 , total_length = 31} , self = 131 , parent = Nothing , duration = 0.202071933000
| | | F |   | |      , status = Fail , start = 2025-09-03 11:16:17.594082871 UTC , finish =
| | | F |   | |      2025-09-03 11:16:17.796154804 UTC , thread_cap_info = ("ThreadId 202",
| | | F |   | |      2, False)}
| | | F |   | |      
| | | | | F | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | F | |      = 4 , total_length = 31} , self = 139 , parent = Nothing , duration = 1.481880339000
| | | | | F | |      , status = Fail , start = 2025-09-03 11:16:17.633554619 UTC , finish =
| | | | | F | |      2025-09-03 11:16:19.115434958 UTC , thread_cap_info = ("ThreadId 204",
| | | | | F | |      2, False)}
| | | | | F | |      
| | S | | | | |      
F |   | | | | |      
  |   | E | | |      
  |   F   | | |      
F |       | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F |       | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |       | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |       | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |       | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |       | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F |       | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F |       | | |      = 4 , total_length = 31} , self = 138 , parent = Nothing , duration = 0.846135551000
F |       | | |      , status = Fail , start = 2025-09-03 11:16:17.805719052 UTC , finish =
F |       | | |      2025-09-03 11:16:18.651854603 UTC , thread_cap_info = ("ThreadId 210",
F |       | | |      2, False)}
F |       | | |      
| F       | | |      
| F       | | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F       | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F       | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F       | | |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F       | | |      = 4 , total_length = 26} , self = 141 , parent = Nothing , duration = 2.051575524000
| F       | | |      , status = Fail , start = 2025-09-03 11:16:17.994446953 UTC , finish =
| F       | | |      2025-09-03 11:16:20.046022477 UTC , thread_cap_info = ("ThreadId 217",
| F       | | |      0, False)}
| F       | | |      
| | F     | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F     | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 93 , num_strict_rules
| | F     | | |      = 66 , num_top_rules = 66 , num_weak_rules = 27 , alphabet_size = 16 ,
| | F     | | |      total_length = 597} , self = 143 , parent = Nothing , duration = 2.964165244000
| | F     | | |      , status = Fail , start = 2025-09-03 11:16:17.996100629 UTC , finish =
| | F     | | |      2025-09-03 11:16:20.960265873 UTC , thread_cap_info = ("ThreadId 215",
| | F     | | |      3, False)}
| | F     | | |      
| | | F   | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 93 , num_strict_rules
| | | F   | | |      = 66 , num_top_rules = 66 , num_weak_rules = 27 , alphabet_size = 16 ,
| | | F   | | |      total_length = 597} , self = 142 , parent = Nothing , duration = 2.556557778000
| | | F   | | |      , status = Fail , start = 2025-09-03 11:16:18.030555213 UTC , finish =
| | | F   | | |      2025-09-03 11:16:20.587112991 UTC , thread_cap_info = ("ThreadId 216",
| | | F   | | |      3, False)}
| | | F   | | |      
| | | |   | F |      
| | | |   |   F      
F | | |   |          
F | | |   |          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |   |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |   |          = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | |   |          = 4 , total_length = 31} , self = 140 , parent = Nothing , duration = 1.119301523000
F | | |   |          , status = Fail , start = 2025-09-03 11:16:18.715846341 UTC , finish =
F | | |   |          2025-09-03 11:16:19.835147864 UTC , thread_cap_info = ("ThreadId 223",
F | | |   |          2, False)}
F | | |   |          
| | | |   F          
F | | |              
F | | |              Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |              = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | |              = 4 , total_length = 31} , self = 144 , parent = Nothing , duration = 1.768155104000
F | | |              , status = Fail , start = 2025-09-03 11:16:19.881977983 UTC , finish =
F | | |              2025-09-03 11:16:21.650133087 UTC , thread_cap_info = ("ThreadId 227",
F | | |              2, False)}
F | | |              
| F | |              
|   | F              
| S |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |                = 93 , num_strict_rules = 66 , num_top_rules = 66 , num_weak_rules = 27
| S |                , alphabet_size = 16 , total_length = 597} , self = 145 , parent = Nothing
| S |                , duration = 2.732533249000 , status = Success , start = 2025-09-03 11:16:20.602644206
| S |                UTC , finish = 2025-09-03 11:16:23.335177455 UTC , thread_cap_info = ("ThreadId
| S |                233", 3, False)}
| S |                
| | F                
| | E                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 93
| | E                , num_strict_rules = 66 , num_top_rules = 66 , num_weak_rules = 27 , alphabet_size
| | E                = 16 , total_length = 597} , self = 147 , parent = Nothing , duration =
| | E                2.320369737000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E                11:16:21.018452827 UTC , finish = 2025-09-03 11:16:23.338822564 UTC , thread_cap_info
| | E                = ("ThreadId 235", 3, False)}
| | E                
F | |                
  S |                
    E                
