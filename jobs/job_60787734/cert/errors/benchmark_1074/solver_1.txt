last 488 length 1957
last 449 length 1800
CNF 488 vars 1957 clauses
last 702 length 3145
last 520 length 2209
CNF 449 vars 1800 clauses
CNF 702 vars 3145 clauses
CNF 520 vars 2209 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1754, clauses: 6249
last 1754 length 6249
CNF 1754 vars 6249 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1766, clauses: 6336
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1754, clauses: 6249, status: Satisfied, time: 0.089899903s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5208, clauses: 21449
last 5373 length 29125
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5208, clauses: 21459
last 1766 length 6336
last 5756 length 40382
last 355 length 1434
last 484 length 1962
last 5208 length 21459
CNF 1766 vars 6336 clauses
CNF 5373 vars 29125 clauses
CNF 5756 vars 40382 clauses
CNF 355 vars 1434 clauses
CNF 484 vars 1962 clauses
CNF 5208 vars 21459 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1766, clauses: 6336, status: Satisfied, time: 0.154638175s
last 7676 length 34053
last 11475 length 48931
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1646, clauses: 5784
last 16132 length 97716
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21269
CNF 7676 vars 34053 clauses
last 708 length 3182
last 426 length 1863
CNF 11475 vars 48931 clauses
last 1646 length 5784
CNF 16132 vars 97716 clauses
last 23463 length 112971
last 5160 length 21269
CNF 426 vars 1863 clauses
CNF 708 vars 3182 clauses
CNF 1646 vars 5784 clauses
CNF 23463 vars 112971 clauses
CNF 5160 vars 21269 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1658, clauses: 5871
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1646, clauses: 5784, status: Satisfied, time: 0.408526725s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14367, clauses: 57590
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21279
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37090, clauses: 154803
last 1658 length 5871
last 14367 length 57590
last 5160 length 21279
last 37090 length 154803
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20266, clauses: 83905

CNF 1658 vars 5871 clauses
CNF 5160 vars 21279 clauses
last 20266 length 83905
CNF 14367 vars 57590 clauses
summary
CNF 37090 vars 154803 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1658, clauses: 5871, status: Unsatisfied, time: 0.191130058s
CNF 20266 vars 83905 clauses
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [b] -> [a] {- Input 1 -}
  [b, a, c] -> [c, c, b, a, b] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [b] -> [a] {- Input 1 -}
  [b, a, c] -> [c, c, b, a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b] -> [a] {- Mirror (Input 1) -}
  [c, a, b] -> [b, a, b, c, c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [b, a, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [b#] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, b] |-> [a#, b, c, c] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, a, b] |-> [b#, a, b, c, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, b] |-> [b#, c, c] {- DP (Top 2) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [b, a, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, b] |-> [c#] {- DP (Top 4) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [b, a, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c#
  , Wk  / 6A 6A 7A - \
        | 6A 6A 7A - |
        | 6A 6A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, a, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [b, a, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, b] |-> [c#, c] {- DP (Top 3) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [b, a, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c#
  , Wk  / 2A 3A 5A - \
        | 2A 3A 5A - |
        | 2A 3A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [b, a, b, c, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(2/5,4)\Matrix{\Arctic}{3}\EDG(1/5,4)\Matrix{\Arctic}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.222024629000
  min duration 0.063212360000
  total durat. 3.151428863000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 99
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 618}
    , self = 84
    , parent = Nothing
    , duration = 1.222024629000
    , status = Fail
    , start = 2025-09-03 10:52:54.259080495 UTC
    , finish = 2025-09-03 10:52:55.481105124 UTC
    , thread_cap_info = ("ThreadId 119", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.663102283000
  min duration 0.028978314000
  total durat. 2.794472137000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.799091269000
  min duration 0.126777117000
  total durat. 1.533066010000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.861877091000
  min duration 0.157730610000
  total durat. 1.639402695000
**************************************************
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                      = 153} , self = 67 , parent = Nothing , duration = 0.402303296000 , status
F                      = Fail , start = 2025-09-03 10:52:54.018983343 UTC , finish = 2025-09-03
F                      10:52:54.421286639 UTC , thread_cap_info = ("ThreadId 72", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                    = 153} , self = 68 , parent = Nothing , duration = 0.562551055000 , status
| F                    = Fail , start = 2025-09-03 10:52:54.019032653 UTC , finish = 2025-09-03
| F                    10:52:54.581583708 UTC , thread_cap_info = ("ThreadId 74", 0, False)}
| F                    
| | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                  = 11} , self = 66 , parent = Nothing , duration = 0.276159517000 , status
| | F                  = Fail , start = 2025-09-03 10:52:54.021007298 UTC , finish = 2025-09-03
| | F                  10:52:54.297166815 UTC , thread_cap_info = ("ThreadId 46", 3, False)}
| | F                  
| | | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S                = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | S                = 4 , total_length = 28} , self = 46 , parent = Nothing , duration = 0.157730610000
| | | S                , status = Success , start = 2025-09-03 10:52:54.053518613 UTC , finish
| | | S                = 2025-09-03 10:52:54.211249223 UTC , thread_cap_info = ("ThreadId 83",
| | | S                2, False)}
| | | S                
| | | | E              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | E              = 4 , total_length = 28} , self = 48 , parent = Nothing , duration = 0.126777117000
| | | | E              , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:54.084563255
| | | | E              UTC , finish = 2025-09-03 10:52:54.211340372 UTC , thread_cap_info = ("ThreadId
| | | | E              86", 2, False)}
| | | | E              
| | | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S            = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | S            = 4 , total_length = 29} , self = 71 , parent = Nothing , duration = 0.619794994000
| | | | | S            , status = Success , start = 2025-09-03 10:52:54.100222116 UTC , finish
| | | | | S            = 2025-09-03 10:52:54.72001711 UTC , thread_cap_info = ("ThreadId 87",
| | | | | S            2, False)}
| | | | | S            
| | | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | E          = 4 , total_length = 29} , self = 73 , parent = Nothing , duration = 0.607197624000
| | | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:54.13904702
| | | | | | E          UTC , finish = 2025-09-03 10:52:54.746244644 UTC , thread_cap_info = ("ThreadId
| | | | | | E          90", 2, False)}
| | | | | | E          
| | | S | | |          
| | |   E | |          
| | | F   | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F   | |          = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F   | |          = 24} , self = 69 , parent = Nothing , duration = 0.389883740000 , status
| | | F   | |          = Fail , start = 2025-09-03 10:52:54.211427025 UTC , finish = 2025-09-03
| | | F   | |          10:52:54.601310765 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | F   | |          
| | | | F | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F | |          = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F | |          = 24} , self = 70 , parent = Nothing , duration = 0.466141052000 , status
| | | | F | |          = Fail , start = 2025-09-03 10:52:54.213954717 UTC , finish = 2025-09-03
| | | | F | |          10:52:54.680095769 UTC , thread_cap_info = ("ThreadId 100", 0, False)}
| | | | F | |          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 68 , num_strict_rules
| | | | | | | F        = 41 , num_top_rules = 41 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | F        total_length = 391} , self = 78 , parent = Nothing , duration = 0.656089282000
| | | | | | | F        , status = Fail , start = 2025-09-03 10:52:54.230120426 UTC , finish =
| | | | | | | F        2025-09-03 10:52:54.886209708 UTC , thread_cap_info = ("ThreadId 116",
| | | | | | | F        0, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 68 , num_strict_rules
| | | | | | | | F      = 41 , num_top_rules = 41 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | | F      total_length = 391} , self = 79 , parent = Nothing , duration = 0.677249662000
| | | | | | | | F      , status = Fail , start = 2025-09-03 10:52:54.245697503 UTC , finish =
| | | | | | | | F      2025-09-03 10:52:54.922947165 UTC , thread_cap_info = ("ThreadId 115",
| | | | | | | | F      0, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 99 , num_strict_rules
| | | | | | | | | F    = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | | F    total_length = 618} , self = 84 , parent = Nothing , duration = 1.222024629000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 10:52:54.259080495 UTC , finish =
| | | | | | | | | F    2025-09-03 10:52:55.481105124 UTC , thread_cap_info = ("ThreadId 119",
| | | | | | | | | F    2, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 99 , num_strict_rules
| | | | | | | | | | F  = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | | | F  total_length = 618} , self = 80 , parent = Nothing , duration = 0.663102283000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 10:52:54.279050911 UTC , finish =
| | | | | | | | | | F  2025-09-03 10:52:54.942153194 UTC , thread_cap_info = ("ThreadId 120",
| | | | | | | | | | F  2, False)}
| | | | | | | | | | F  
| | F | | | | | | | |  
F |   | | | | | | | |  
  F   | | | | | | | |  
      F | | | | | | |  
S       | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S       | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S       | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S       | | | | | | |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
S       | | | | | | |  = 4 , total_length = 24} , self = 83 , parent = Nothing , duration = 0.861877091000
S       | | | | | | |  , status = Success , start = 2025-09-03 10:52:54.619073868 UTC , finish
S       | | | | | | |  = 2025-09-03 10:52:55.480950959 UTC , thread_cap_info = ("ThreadId 124",
S       | | | | | | |  2, False)}
S       | | | | | | |  
|       F | | | | | |  
| E       | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E       | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E       | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E       | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E       | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E       | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| E       | | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| E       | | | | | |  = 4 , total_length = 24} , self = 86 , parent = Nothing , duration = 0.799091269000
| E       | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:54.68209119
| E       | | | | | |  UTC , finish = 2025-09-03 10:52:55.481182459 UTC , thread_cap_info = ("ThreadId
| E       | | | | | |  126", 2, False)}
| E       | | | | | |  
| |       S | | | | |  
| |         E | | | |  
| | F         | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F         | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F         | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F         | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F         | | | |  = 25} , self = 82 , parent = Nothing , duration = 0.372548210000 , status
| | F         | | | |  = Fail , start = 2025-09-03 10:52:54.747906198 UTC , finish = 2025-09-03
| | F         | | | |  10:52:55.120454408 UTC , thread_cap_info = ("ThreadId 133", 2, False)}
| | F         | | | |  
| | | F       | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F       | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F       | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F       | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F       | | | |  = 25} , self = 81 , parent = Nothing , duration = 0.325374303000 , status
| | | F       | | | |  = Fail , start = 2025-09-03 10:52:54.754764461 UTC , finish = 2025-09-03
| | | F       | | | |  10:52:55.080138764 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
| | | F       | | | |  
| | | |       F | | |  
| | | |         F | |  
| | | |           | F  
| | | F           |    
| | F             |    
S |               |    
  |               F    
  E                    
