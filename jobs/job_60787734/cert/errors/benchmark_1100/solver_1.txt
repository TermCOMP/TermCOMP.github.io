last 4262 length 20196
last 701 length 2952
CNF 4262 vars 20196 clauses
CNF 701 vars 2952 clauses
last 889 length 3866
last 4617 length 22908
CNF 4617 vars 22908 clauses
CNF 889 vars 3866 clauses
last 711 length 2908
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2375, clauses: 8541
CNF 711 vars 2908 clauses
last 661 length 2683
last 2375 length 8541
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8218, clauses: 34239
CNF 2375 vars 8541 clauses
last 8218 length 34239
CNF 661 vars 2683 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2201, clauses: 7974
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2375, clauses: 8541, status: Unsatisfied, time: 0.222481129s
CNF 8218 vars 34239 clauses
last 6837 length 27449
last 14163 length 60029
last 9331 length 39988
last 11126 length 46819
last 2201 length 7974
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7052, clauses: 29309
CNF 6837 vars 27449 clauses
CNF 11126 vars 46819 clauses
CNF 14163 vars 60029 clauses
CNF 2201 vars 7974 clauses
last 7052 length 29309
CNF 9331 vars 39988 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5117, clauses: 20632
CNF 7052 vars 29309 clauses
last 5117 length 20632
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2201, clauses: 7974, status: Unsatisfied, time: 0.306847659s
CNF 5117 vars 20632 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8218, clauses: 34239, status: Unsatisfied, time: 1.35422018s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4443, clauses: 18024
last 4443 length 18024
CNF 4443 vars 18024 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14213, clauses: 56610
last 14213 length 56610
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16196, clauses: 66942
last 16196 length 66942
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7052, clauses: 29309, status: Unsatisfied, time: 1.242410678s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3904, clauses: 14711
last 3904 length 14711
CNF 14213 vars 56610 clauses
CNF 16196 vars 66942 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5117, clauses: 20632, status: Unsatisfied, time: 1.122422018s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4443, clauses: 18024, status: Unsatisfied, time: 0.506428322s
CNF 3904 vars 14711 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3620, clauses: 13803
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14213, clauses: 56610, status: Satisfied, time: 0.538142967s
last 3620 length 13803
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41845, clauses: 175096
CNF 3620 vars 13803 clauses
last 41845 length 175096
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3904, clauses: 14711, status: Unsatisfied, time: 0.868881697s
**************************************************
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12511, clauses: 53039
last 12511 length 53039
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14608, clauses: 61133
Config last 14608 length 61133
  { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       DP
SRS with 50 strict rules and 27 weak rules on 15 letters       weights
SRS with 49 strict rules and 27 weak rules on 14 letters       EDG
SRS with 37 strict rules and 27 weak rules on 14 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 27 weak rules on 13 letters       weights
SRS with 0 strict rules and 27 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b] -> [b, a, b, a, c, a] {- Input 1 -}
  [c, b] -> [] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, b], [b, c]] -> [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, b], [b, c]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, b], [b, a]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, b], [b, b]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, b], [b, c]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, c], [c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, c]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, c]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, c]] |-> [[b, c]#] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, c]] |-> [[c, c]#] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, c]#, 0/1)
  ([c, a]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, c]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, c]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 1) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, c]] |-> [[c, c]#] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, c]#, [c, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 6) (Semlab 2 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [a, c]# , [c, a] , [ a , a ] ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [a, c]# , [c, a] , [ a , b ] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, c]] |-> [[c, c]#] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, b], [b, a]] |-> [ [ c , a ]# ] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [a, c]# , [c, a] , [ a , c ] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [b, a]# , [a, c] , [c, a] , [ a , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, a], [a, b], [b, c]] |-> [ [c, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, c]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, c]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 12A 15A 15A - \
        | 12A 15A 15A - |
        | 12A 15A 15A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 13A 14A 16A - \
        | 13A 14A 16A - |
        | 13A 14A 16A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 14A 16A 17A - \
        | 14A 16A 17A - |
        | 14A 16A 17A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 15A 15A 15A - \
        | 15A 15A 15A - |
        | 15A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, c]#, [c, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, a], [a, b], [b, a]] |-> [ [c, a]# , [ a , a ] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, c]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, c]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
CNF 12511 vars 53039 clauses
  [[a, c], [c, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, a], [a, b], [b, c]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, a], [a, b], [b, c]] ->= [ [c, b] , [b, a] , [a, b] , [b, a] , [a, c] , [c, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, a]] ->= [ [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Deepee(50/27,15)\Weight(49/27,14)\EDG(37/27,14)\Matrix{\Arctic}{3}(2/27,13)\Weight(0/27,9)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 14608 vars 61133 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3620, clauses: 13803, status: Unsatisfied, time: 0.451928345s
CNF 41845 vars 175096 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.805186333000
  min duration 0.041071350000
  total durat. 1.942195770000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.836236531000
  min duration 0.032424828000
  total durat. 2.088975668000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.484714735000
  min duration 1.427026098000
  total durat. 2.911740833000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 69
    , parent = Nothing
    , duration = 1.427026098000
    , status = Fail
    , start = 2025-09-03 11:00:28.641543058 UTC
    , finish = 2025-09-03 11:00:30.068569156 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 68
    , parent = Nothing
    , duration = 1.484714735000
    , status = Fail
    , start = 2025-09-03 11:00:28.230704552 UTC
    , finish = 2025-09-03 11:00:29.715419287 UTC
    , thread_cap_info = ("ThreadId 108", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.888553576000
  min duration 1.888553576000
  total durat. 1.888553576000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 388}
    , self = 74
    , parent = Nothing
    , duration = 1.888553576000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:00:28.982722898 UTC
    , finish = 2025-09-03 11:00:30.871276474 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.706534785000
  min duration 1.065503238000
  total durat. 2.772038023000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 71
    , parent = Nothing
    , duration = 1.065503238000
    , status = Fail
    , start = 2025-09-03 11:00:29.462147879 UTC
    , finish = 2025-09-03 11:00:30.527651117 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 70
    , parent = Nothing
    , duration = 1.706534785000
    , status = Fail
    , start = 2025-09-03 11:00:28.795614343 UTC
    , finish = 2025-09-03 11:00:30.502149128 UTC
    , thread_cap_info = ("ThreadId 116", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.876377817000
  min duration 1.876377817000
  total durat. 1.876377817000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 388}
    , self = 72
    , parent = Nothing
    , duration = 1.876377817000
    , status = Success
    , start = 2025-09-03 11:00:28.920183081 UTC
    , finish = 2025-09-03 11:00:30.796560898 UTC
    , thread_cap_info = ("ThreadId 122", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.053338522000
  min duration 0.581108277000
  total durat. 1.634446799000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 67
    , parent = Nothing
    , duration = 1.053338522000
    , status = Fail
    , start = 2025-09-03 11:00:28.355837419 UTC
    , finish = 2025-09-03 11:00:29.409175941 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                  = 42 , parent = Nothing , duration = 0.142348024000 , status = Fail , start
F                  = 2025-09-03 11:00:28.023017069 UTC , finish = 2025-09-03 11:00:28.165365093
F                  UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                = 12} , self = 59 , parent = Nothing , duration = 0.285408340000 , status
| F                = Fail , start = 2025-09-03 11:00:28.023044257 UTC , finish = 2025-09-03
| F                11:00:28.308452597 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 56 , parent = Nothing , duration = 0.189826962000 , status
| | F              = Fail , start = 2025-09-03 11:00:28.024529759 UTC , finish = 2025-09-03
| | F              11:00:28.214356721 UTC , thread_cap_info = ("ThreadId 55", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F            = 162} , self = 53 , parent = Nothing , duration = 0.167584025000 , status
| | | F            = Fail , start = 2025-09-03 11:00:28.024537774 UTC , finish = 2025-09-03
| | | F            11:00:28.192121799 UTC , thread_cap_info = ("ThreadId 57", 2, False)}
| | | F            
F | | |            
F | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
F | | |            = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 14 ,
F | | |            total_length = 388} , self = 64 , parent = Nothing , duration = 0.770841381000
F | | |            , status = Fail , start = 2025-09-03 11:00:28.18571288 UTC , finish = 2025-09-03
F | | |            11:00:28.956554261 UTC , thread_cap_info = ("ThreadId 96", 3, False)}
F | | |            
| | | F            
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | F            = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | F            total_length = 388} , self = 63 , parent = Nothing , duration = 0.719102634000
| | | F            , status = Fail , start = 2025-09-03 11:00:28.201052649 UTC , finish =
| | | F            2025-09-03 11:00:28.920155283 UTC , thread_cap_info = ("ThreadId 97", 3,
| | | F            False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | F          = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | F          total_length = 486} , self = 65 , parent = Nothing , duration = 0.805186333000
| | | | F          , status = Fail , start = 2025-09-03 11:00:28.20286018 UTC , finish = 2025-09-03
| | | | F          11:00:29.008046513 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | F          
| | F | |          
| | F | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |          = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F | |          = 4 , total_length = 40} , self = 62 , parent = Nothing , duration = 0.581108277000
| | F | |          , status = Fail , start = 2025-09-03 11:00:28.214448323 UTC , finish =
| | F | |          2025-09-03 11:00:28.7955566 UTC , thread_cap_info = ("ThreadId 105", 1,
| | F | |          False)}
| | F | |          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | F        = 40} , self = 60 , parent = Nothing , duration = 0.135269744000 , status
| | | | | F        = Fail , start = 2025-09-03 11:00:28.220536781 UTC , finish = 2025-09-03
| | | | | F        11:00:28.355806525 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | F      = 40} , self = 61 , parent = Nothing , duration = 0.333627650000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:00:28.226927446 UTC , finish = 2025-09-03
| | | | | | F      11:00:28.560555096 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | F    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | F    = 4 , total_length = 40} , self = 68 , parent = Nothing , duration = 1.484714735000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:00:28.230704552 UTC , finish =
| | | | | | | F    2025-09-03 11:00:29.715419287 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | F    1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | | F  = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | | F  total_length = 486} , self = 66 , parent = Nothing , duration = 0.836236531000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:00:28.240730779 UTC , finish =
| | | | | | | | F  2025-09-03 11:00:29.07696731 UTC , thread_cap_info = ("ThreadId 99", 3,
| | | | | | | | F  False)}
| | | | | | | | F  
| F | | | | | | |  
|   | | | F | | |  
| F | | |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   | | |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| F | | |   | | |  = 4 , total_length = 40} , self = 67 , parent = Nothing , duration = 1.053338522000
| F | | |   | | |  , status = Fail , start = 2025-09-03 11:00:28.355837419 UTC , finish =
| F | | |   | | |  2025-09-03 11:00:29.409175941 UTC , thread_cap_info = ("ThreadId 113",
| F | | |   | | |  1, False)}
| F | | |   | | |  
| | | | |   F | |  
| | | | | F   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | F   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | F   | |  = 4 , total_length = 40} , self = 69 , parent = Nothing , duration = 1.427026098000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:00:28.641543058 UTC , finish =
| | | | | F   | |  2025-09-03 11:00:30.068569156 UTC , thread_cap_info = ("ThreadId 115",
| | | | | F   | |  1, False)}
| | | | | F   | |  
| | F | | |   | |  
| | F | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | F | | |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F | | |   | |  = 4 , total_length = 40} , self = 70 , parent = Nothing , duration = 1.706534785000
| | F | | |   | |  , status = Fail , start = 2025-09-03 11:00:28.795614343 UTC , finish =
| | F | | |   | |  2025-09-03 11:00:30.502149128 UTC , thread_cap_info = ("ThreadId 116",
| | F | | |   | |  1, False)}
| | F | | |   | |  
| | | F | |   | |  
| | | S | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |   | |  = 64 , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 27
| | | S | |   | |  , alphabet_size = 14 , total_length = 388} , self = 72 , parent = Nothing
| | | S | |   | |  , duration = 1.876377817000 , status = Success , start = 2025-09-03 11:00:28.920183081
| | | S | |   | |  UTC , finish = 2025-09-03 11:00:30.796560898 UTC , thread_cap_info = ("ThreadId
| | | S | |   | |  122", 3, False)}
| | | S | |   | |  
F | | | | |   | |  
E | | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 64
E | | | | |   | |  , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size
E | | | | |   | |  = 14 , total_length = 388} , self = 74 , parent = Nothing , duration =
E | | | | |   | |  1.888553576000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | | |   | |  11:00:28.982722898 UTC , finish = 2025-09-03 11:00:30.871276474 UTC , thread_cap_info
E | | | | |   | |  = ("ThreadId 124", 1, False)}
E | | | | |   | |  
| | | | F |   | |  
| | | |   |   | F  
| F | |   |   |    
| F | |   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |   |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| F | |   |   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| F | |   |   |    = 4 , total_length = 40} , self = 71 , parent = Nothing , duration = 1.065503238000
| F | |   |   |    , status = Fail , start = 2025-09-03 11:00:29.462147879 UTC , finish =
| F | |   |   |    2025-09-03 11:00:30.527651117 UTC , thread_cap_info = ("ThreadId 128",
| F | |   |   |    1, False)}
| F | |   |   |    
| | | |   |   F    
| | | |   F        
| | F |            
| F   |            
|     S            
E                  
