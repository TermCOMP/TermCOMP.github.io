last 4816 length 20429
CNF 4816 vars 20429 clauses
last 4077 length 16999
CNF 4077 vars 16999 clauses
last 4240 length 17565
last 356 length 1433
CNF 356 vars 1433 clauses
last 472 length 1893
CNF 4240 vars 17565 clauses
CNF 472 vars 1893 clauses
last 4292 length 17922
last 4018 length 16519
CNF 4292 vars 17922 clauses
last 318 length 1227
last 4683 length 19903
CNF 4018 vars 16519 clauses
CNF 4683 vars 19903 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1965, clauses: 6863
CNF 318 vars 1227 clauses
last 401 length 1567
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6933, clauses: 28617
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10558, clauses: 38278
last 1965 length 6863
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10537, clauses: 38233
CNF 401 vars 1567 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1974, clauses: 6869
last 6933 length 28617
last 10558 length 38278
CNF 1965 vars 6863 clauses
last 10537 length 38233
last 1974 length 6869
CNF 6933 vars 28617 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 43065, clauses: 180890
CNF 1974 vars 6869 clauses
CNF 10537 vars 38233 clauses
last 43065 length 180890
CNF 10558 vars 38278 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6933, clauses: 28617, status: Satisfied, time: 0.584111934s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6937, clauses: 28619
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 43697, clauses: 183475
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10537, clauses: 38233, status: Satisfied, time: 0.499563641s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10558, clauses: 38278, status: Satisfied, time: 0.587039106s
last 6937 length 28619
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1974, clauses: 6869, status: Unsatisfied, time: 0.485271532s
CNF 43065 vars 180890 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 4 letters       DP
SRS with 7 strict rules and 4 weak rules on 7 letters       weights
SRS with 2 strict rules and 4 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 5 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, l] -> [l, a] {- Input 0 -}
  [r, a, a] -> [a, a, r] {- Input 1 -}
  [b, l] -> [b, a, r] {- Input 2 -}
  [r, b] -> [l, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [r, a, a] ->= [a, a, r] {- DP Nontop (Input 1) -}
  [b, l] ->= [b, a, r] {- DP Nontop (Input 2) -}
  [r, b] ->= [l, b] {- DP Nontop (Input 3) -}
  [a#, l] |-> [a#] {- DP (Top 1) (Input 0) -}
  [b#, l] |-> [a#, r] {- DP (Top 1) (Input 2) -}
  [b#, l] |-> [b#, a, r] {- DP (Top 0) (Input 2) -}
  [b#, l] |-> [r#] {- DP (Top 2) (Input 2) -}
  [r#, a, a] |-> [a#, a, r] {- DP (Top 0) (Input 1) -}
  [r#, a, a] |-> [a#, r] {- DP (Top 1) (Input 1) -}
  [r#, a, a] |-> [r#] {- DP (Top 2) (Input 1) -}
reason
  (a, 0/1)
  (l, 1/1)
  (b, 0/1)
  (r, 1/1)
  (a#, 0/1)
  (b#, 2/1)
  (r#, 2/1)
   property Termination
has value Just True
for SRS
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [r, a, a] ->= [a, a, r] {- DP Nontop (Input 1) -}
  [b, l] ->= [b, a, r] {- DP Nontop (Input 2) -}
  [r, b] ->= [l, b] {- DP Nontop (Input 3) -}
  [b#, l] |-> [b#, a, r] {- DP (Top 0) (Input 2) -}
  [r#, a, a] |-> [r#] {- DP (Top 2) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, l] |-> [b#, a, r] {- DP (Top 0) (Input 2) -}
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [r, a, a] ->= [a, a, r] {- DP Nontop (Input 1) -}
  [b, l] ->= [b, a, r] {- DP Nontop (Input 2) -}
  [r, b] ->= [l, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / -  0A  0A \
        | 0A -1A -  |
        \ -  -   0A / )
  ( l
  , Wk  / 0A  -1A 1A \
        | -1A 0A  1A |
        \ -   -   0A / )
  ( b
  , Wk  / 1A - 2A \
        | -  - 0A |
        \ -  - 0A / )
  ( r
  , Wk  / 0A  -1A 1A \
        | -1A -2A 0A |
        \ -   -   0A / )
  ( b#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [r, a, a] ->= [a, a, r] {- DP Nontop (Input 1) -}
  [b, l] ->= [b, a, r] {- DP Nontop (Input 2) -}
  [r, b] ->= [l, b] {- DP Nontop (Input 3) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [r#, a, a] |-> [r#] {- DP (Top 2) (Input 1) -}
  [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
  [r, a, a] ->= [a, a, r] {- DP Nontop (Input 1) -}
  [b, l] ->= [b, a, r] {- DP Nontop (Input 2) -}
  [r, b] ->= [l, b] {- DP Nontop (Input 3) -}
reason
  remove un-usable
    SRS
      [a, l] ->= [l, a] {- DP Nontop (Input 0) -}
      [r, a, a] ->= [a, a, r] {- DP Nontop (Input 1) -}
      [b, l] ->= [b, a, r] {- DP Nontop (Input 2) -}
      [r, b] ->= [l, b] {- DP Nontop (Input 3) -}
   property Termination
has value Just True
for SRS
  [r#, a, a] |-> [r#] {- DP (Top 2) (Input 1) -}
reason
  (a, 1/1)
  (r#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,4)\Deepee(7/4,7)\Weight(2/4,6)\EDG[(1/4,5)\Matrix{\ArcticBZ}{3}(0/4,4)\EDG[],(1/4,5)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 6937 vars 28619 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.319192228000
  min duration 0.019136765000
  total durat. 1.046124706000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.736835916000
  min duration 0.038261752000
  total durat. 1.519016822000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.155338369000
  min duration 1.155338369000
  total durat. 1.155338369000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 24}
    , self = 69
    , parent = Nothing
    , duration = 1.155338369000
    , status = Success
    , start = 2025-09-03 13:20:41.250938445 UTC
    , finish = 2025-09-03 13:20:42.406276814 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.239814930000
  min duration 1.186757086000
  total durat. 2.426572016000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 196}
    , self = 77
    , parent = Nothing
    , duration = 1.186757086000
    , status = Success
    , start = 2025-09-03 13:20:41.308697063 UTC
    , finish = 2025-09-03 13:20:42.495454149 UTC
    , thread_cap_info = ("ThreadId 118", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 26
      , alphabet_size = 14
      , total_length = 191}
    , self = 85
    , parent = Nothing
    , duration = 1.239814930000
    , status = Success
    , start = 2025-09-03 13:20:41.25905829 UTC
    , finish = 2025-09-03 13:20:42.49887322 UTC
    , thread_cap_info = ("ThreadId 113", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.278058825000
  min duration 0.930795570000
  total durat. 2.208854395000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 24}
    , self = 71
    , parent = Nothing
    , duration = 1.278058825000
    , status = Fail
    , start = 2025-09-03 13:20:41.210136991 UTC
    , finish = 2025-09-03 13:20:42.488195816 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.407314987000
  min duration 1.407314987000
  total durat. 1.407314987000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 19}
    , self = 76
    , parent = Nothing
    , duration = 1.407314987000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:20:41.083896204 UTC
    , finish = 2025-09-03 13:20:42.491211191 UTC
    , thread_cap_info = ("ThreadId 91", 0, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                    = 19} , self = 64 , parent = Nothing , duration = 0.301968379000 , status
F                    = Fail , start = 2025-09-03 13:20:40.997702605 UTC , finish = 2025-09-03
F                    13:20:41.299670984 UTC , thread_cap_info = ("ThreadId 35", 1, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| F                  = 182} , self = 60 , parent = Nothing , duration = 0.205336493000 , status
| F                  = Fail , start = 2025-09-03 13:20:41.008305742 UTC , finish = 2025-09-03
| F                  13:20:41.213642235 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | F                = 182} , self = 55 , parent = Nothing , duration = 0.128718876000 , status
| | F                = Fail , start = 2025-09-03 13:20:41.02711032 UTC , finish = 2025-09-03
| | F                13:20:41.155829196 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | F              = 3 , num_top_rules = 3 , num_weak_rules = 26 , alphabet_size = 14 , total_length
| | | F              = 191} , self = 65 , parent = Nothing , duration = 0.319192228000 , status
| | | F              = Fail , start = 2025-09-03 13:20:41.029591552 UTC , finish = 2025-09-03
| | | F              13:20:41.34878378 UTC , thread_cap_info = ("ThreadId 80", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 26 , alphabet_size = 14 , total_length
| | | | F            = 191} , self = 62 , parent = Nothing , duration = 0.200050509000 , status
| | | | F            = Fail , start = 2025-09-03 13:20:41.047056282 UTC , finish = 2025-09-03
| | | | F            13:20:41.247106791 UTC , thread_cap_info = ("ThreadId 81", 3, False)}
| | | | F            
| | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E          = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | E          = 19} , self = 76 , parent = Nothing , duration = 1.407314987000 , status
| | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 13:20:41.083896204 UTC ,
| | | | | E          finish = 2025-09-03 13:20:42.491211191 UTC , thread_cap_info = ("ThreadId
| | | | | E          91", 0, False)}
| | | | | E          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 27 , alphabet_size = 15 , total_length
| | | | | | F        = 196} , self = 63 , parent = Nothing , duration = 0.200029681000 , status
| | | | | | F        = Fail , start = 2025-09-03 13:20:41.087059716 UTC , finish = 2025-09-03
| | | | | | F        13:20:41.287089397 UTC , thread_cap_info = ("ThreadId 82", 3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 27 , alphabet_size = 15 , total_length
| | | | | | | F      = 196} , self = 66 , parent = Nothing , duration = 0.415149769000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:20:41.11372816 UTC , finish = 2025-09-03
| | | | | | | F      13:20:41.528877929 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| | | | | | | F      
| | F | | | | |      
| | F | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |      = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | F | | | | |      = 5 , total_length = 24} , self = 71 , parent = Nothing , duration = 1.278058825000
| | F | | | | |      , status = Fail , start = 2025-09-03 13:20:41.210136991 UTC , finish =
| | F | | | | |      2025-09-03 13:20:42.488195816 UTC , thread_cap_info = ("ThreadId 105",
| | F | | | | |      0, False)}
| | F | | | | |      
| F | | | | | |      
| F | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F | | | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| F | | | | | |      = 23} , self = 67 , parent = Nothing , duration = 0.302429539000 , status
| F | | | | | |      = Fail , start = 2025-09-03 13:20:41.247095833 UTC , finish = 2025-09-03
| F | | | | | |      13:20:41.549525372 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| F | | | | | |      
| | | | F | | |      
| | | | S | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | S | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | S | | |      = 5 , total_length = 24} , self = 69 , parent = Nothing , duration = 1.155338369000
| | | | S | | |      , status = Success , start = 2025-09-03 13:20:41.250938445 UTC , finish
| | | | S | | |      = 2025-09-03 13:20:42.406276814 UTC , thread_cap_info = ("ThreadId 111",
| | | | S | | |      0, False)}
| | | | S | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | | F    = 23} , self = 68 , parent = Nothing , duration = 0.736835916000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:20:41.25513671 UTC , finish = 2025-09-03
| | | | | | | | F    13:20:41.991972626 UTC , thread_cap_info = ("ThreadId 114", 0, False)}
| | | | | | | | F    
| | | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S  = 29 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 26 ,
| | | | | | | | | S  alphabet_size = 14 , total_length = 191} , self = 85 , parent = Nothing
| | | | | | | | | S  , duration = 1.239814930000 , status = Success , start = 2025-09-03 13:20:41.25905829
| | | | | | | | | S  UTC , finish = 2025-09-03 13:20:42.49887322 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S  113", 3, False)}
| | | | | | | | | S  
| | | | | | F | | |  
F | | | | |   | | |  
S | | | | |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | |   | | |  = 29 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 27 ,
S | | | | |   | | |  alphabet_size = 15 , total_length = 196} , self = 77 , parent = Nothing
S | | | | |   | | |  , duration = 1.186757086000 , status = Success , start = 2025-09-03 13:20:41.308697063
S | | | | |   | | |  UTC , finish = 2025-09-03 13:20:42.495454149 UTC , thread_cap_info = ("ThreadId
S | | | | |   | | |  118", 3, False)}
S | | | | |   | | |  
| | | F | |   | | |  
| | |   | |   F | |  
| | | E | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
| | | E | |     | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 27 , alphabet_size
| | | E | |     | |  = 15 , total_length = 196} , self = 79 , parent = Nothing , duration =
| | | E | |     | |  0.953828140000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | |     | |  13:20:41.543968415 UTC , finish = 2025-09-03 13:20:42.497796555 UTC , thread_cap_info
| | | E | |     | |  = ("ThreadId 120", 3, False)}
| | | E | |     | |  
| F | | | |     | |  
| F | | | |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | |     | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| F | | | |     | |  = 5 , total_length = 23} , self = 82 , parent = Nothing , duration = 0.930795570000
| F | | | |     | |  , status = Fail , start = 2025-09-03 13:20:41.567638908 UTC , finish =
| F | | | |     | |  2025-09-03 13:20:42.498434478 UTC , thread_cap_info = ("ThreadId 121",
| F | | | |     | |  0, False)}
| F | | | |     | |  
| | | | | |     F |  
| | | | S |       |  
| | F |   |       |  
| |   |   E       |  
S |   |           |  
  |   E           |  
  F               |  
                  S  
