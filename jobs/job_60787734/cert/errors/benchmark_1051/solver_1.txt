last 863 length 3752
CNF 863 vars 3752 clauses
last 1017 length 4462
CNF 1017 vars 4462 clauses
last 918 length 3844
CNF 918 vars 3844 clauses
last 1403 length 7092
CNF 1403 vars 7092 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1687, clauses: 6259
last 1687 length 6259
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1901, clauses: 7134
last 2769 length 18656
CNF 1687 vars 6259 clauses
last 1901 length 7134
last 2905 length 15368
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5983, clauses: 24965
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5647, clauses: 23535
CNF 2769 vars 18656 clauses
CNF 2905 vars 15368 clauses
CNF 1901 vars 7134 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1687, clauses: 6259, status: Unsatisfied, time: 0.21980802s
last 5983 length 24965
last 5647 length 23535
last 6802 length 34727
last 6171 length 33162
last 8166 length 44373
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1901, clauses: 7134, status: Unsatisfied, time: 0.600292836s
CNF 5983 vars 24965 clauses
last 14170 length 68369
CNF 5647 vars 23535 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3471, clauses: 14136
CNF 6171 vars 33162 clauses
CNF 6802 vars 34727 clauses
CNF 8166 vars 44373 clauses
CNF 14170 vars 68369 clauses
last 3471 length 14136
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3712, clauses: 15204
last 3712 length 15204
CNF 3471 vars 14136 clauses
CNF 3712 vars 15204 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5647, clauses: 23535, status: Unsatisfied, time: 1.001557394s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4862, clauses: 18966
last 4862 length 18966
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5983, clauses: 24965, status: Unsatisfied, time: 1.189814724s
CNF 4862 vars 18966 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7743, clauses: 31745
last 7743 length 31745
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15406, clauses: 64513
last 15406 length 64513
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3471, clauses: 14136, status: Unsatisfied, time: 0.704209022s
CNF 7743 vars 31745 clauses
CNF 15406 vars 64513 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3712, clauses: 15204, status: Unsatisfied, time: 0.619700322s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3129, clauses: 12404
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2788, clauses: 10886
last 3129 length 12404
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7743, clauses: 31745, status: Satisfied, time: 0.362833592s
last 2788 length 10886
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4862, clauses: 18966, status: Satisfied, time: 0.770454836s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9826, clauses: 41636
CNF 3129 vars 12404 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10268, clauses: 43960
CNF 2788 vars 10886 clauses
last 9826 length 41636
last 10268 length 43960
last 5753 length 38172
last 3479 length 18285
last 7423 length 61114
CNF 9826 vars 41636 clauses
last 4347 length 25981
CNF 10268 vars 43960 clauses
CNF 5753 vars 38172 clauses
CNF 3479 vars 18285 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2788, clauses: 10886, status: Unsatisfied, time: 0.832502252s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3129, clauses: 12404, status: Unsatisfied, time: 1.08784126s
CNF 7423 vars 61114 clauses
CNF 4347 vars 25981 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3681, clauses: 13571
last 3681 length 13571
CNF 3681 vars 13571 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3901, clauses: 14308
last 3901 length 14308
CNF 3901 vars 14308 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3681, clauses: 13571, status: Satisfied, time: 0.173912777s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5212, clauses: 20070
last 5212 length 20070
CNF 5212 vars 20070 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5843, clauses: 22742
last 5843 length 22742
CNF 5843 vars 22742 clauses
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 rules on 4 letters       mirror
SRS with 8 rules on 4 letters       DP
SRS with 30 strict rules and 8 weak rules on 8 letters       weights
SRS with 24 strict rules and 8 weak rules on 7 letters       EDG
SRS with 24 strict rules and 8 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 8 weak rules on 7 letters       weights
SRS with 3 strict rules and 8 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 8 weak rules on 5 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 2 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b, b] -> [b, b, a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, a], [a, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3901, clauses: 14308, status: Satisfied, time: 0.352293708s
[[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 15A 16A 16A - \
        | 15A 16A 16A - |
        | 15A 16A 16A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 13A 16A 16A - \
        | 13A 16A 16A - |
        | 13A 16A 16A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 13A 15A 16A - \
        | 13A 15A 16A - |
        | 13A 15A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, b]#, 2/1)
  ([b, a]#, 0/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [b, b], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]#
  , Wk  / 13A 13A 16A - \
        | 13A 13A 16A - |
        | 13A 13A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [b, b], [a, b], [a, a], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG

**************************************************
skeleton: (2,2)\TileAllAll{2}\Mirror(8,4)\Deepee(30/8,8)\Weight\EDG(24/8,7)\Matrix{\Arctic}{3}(6/8,7)\Weight(3/8,6)\EDG[(1/8,5)\Usable(1,2)\Weight(0,0)\EDG[],(2/8,5)\Matrix{\Arctic}{3}(0/8,4)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14219, clauses: 59635
last 14219 length 59635
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.085804770000
  min duration 0.047679671000
  total durat. 4.057839228000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 8
      , alphabet_size = 7
      , total_length = 258}
    , self = 68
    , parent = Nothing
    , duration = 1.085804770000
    , status = Fail
    , start = 2025-09-03 10:51:56.64631962 UTC
    , finish = 2025-09-03 10:51:57.73212439 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.921643816000
  min duration 0.072032504000
  total durat. 4.219738238000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.453043367000
  min duration 1.388356545000
  total durat. 2.841399912000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 29}
    , self = 69
    , parent = Nothing
    , duration = 1.388356545000
    , status = Fail
    , start = 2025-09-03 10:51:56.515334604 UTC
    , finish = 2025-09-03 10:51:57.903691149 UTC
    , thread_cap_info = ("ThreadId 87", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 36}
    , self = 70
    , parent = Nothing
    , duration = 1.453043367000
    , status = Fail
    , start = 2025-09-03 10:51:56.502475772 UTC
    , finish = 2025-09-03 10:51:57.955519139 UTC
    , thread_cap_info = ("ThreadId 85", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.347580608000
  min duration 0.115730909000
  total durat. 2.526667905000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 8
      , alphabet_size = 7
      , total_length = 258}
    , self = 75
    , parent = Nothing
    , duration = 1.063356388000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:57.76208125 UTC
    , finish = 2025-09-03 10:51:58.825437638 UTC
    , thread_cap_info = ("ThreadId 130", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 129}
    , self = 84
    , parent = Nothing
    , duration = 1.347580608000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:57.601912482 UTC
    , finish = 2025-09-03 10:51:58.94949309 UTC
    , thread_cap_info = ("ThreadId 127", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.999874808000
  min duration 0.859395657000
  total durat. 1.859270465000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.285020864000
  min duration 0.273134007000
  total durat. 2.785231202000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 8
      , alphabet_size = 7
      , total_length = 258}
    , self = 73
    , parent = Nothing
    , duration = 1.227076331000
    , status = Success
    , start = 2025-09-03 10:51:57.595625559 UTC
    , finish = 2025-09-03 10:51:58.82270189 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 129}
    , self = 82
    , parent = Nothing
    , duration = 1.285020864000
    , status = Success
    , start = 2025-09-03 10:51:57.580496174 UTC
    , finish = 2025-09-03 10:51:58.865517038 UTC
    , thread_cap_info = ("ThreadId 125", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.950608640000
  min duration 0.691247549000
  total durat. 1.641856189000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.632729692000
  min duration 1.539967865000
  total durat. 3.172697557000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 36}
    , self = 92
    , parent = Nothing
    , duration = 1.539967865000
    , status = Fail
    , start = 2025-09-03 10:51:58.073768732 UTC
    , finish = 2025-09-03 10:51:59.613736597 UTC
    , thread_cap_info = ("ThreadId 133", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 29}
    , self = 91
    , parent = Nothing
    , duration = 1.632729692000
    , status = Fail
    , start = 2025-09-03 10:51:57.964457135 UTC
    , finish = 2025-09-03 10:51:59.597186827 UTC
    , thread_cap_info = ("ThreadId 132", 1, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.096029918000
  min duration 1.096029918000
  total durat. 1.096029918000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 11}
    , self = 64
    , parent = Nothing
    , duration = 1.096029918000
    , status = Fail
    , start = 2025-09-03 10:51:56.41370038 UTC
    , finish = 2025-09-03 10:51:57.509730298 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
**************************************************
F                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                        = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
F                        = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 11} , self
F                        = 64 , parent = Nothing , duration = 1.096029918000 , status = Fail , start
F                        = 2025-09-03 10:51:56.41370038 UTC , finish = 2025-09-03 10:51:57.509730298
F                        UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                        
| F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                      = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F                      = 29} , self = 41 , parent = Nothing , duration = 0.100582361000 , status
| F                      = Fail , start = 2025-09-03 10:51:56.41472679 UTC , finish = 2025-09-03
| F                      10:51:56.515309151 UTC , thread_cap_info = ("ThreadId 59", 2, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                    = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                    = 60} , self = 60 , parent = Nothing , duration = 0.687593927000 , status
| | F                    = Fail , start = 2025-09-03 10:51:56.41489124 UTC , finish = 2025-09-03
| | F                    10:51:57.102485167 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                  = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                  = 60} , self = 59 , parent = Nothing , duration = 0.607215522000 , status
| | | F                  = Fail , start = 2025-09-03 10:51:56.414894094 UTC , finish = 2025-09-03
| | | F                  10:51:57.022109616 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | F                  
| | | | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F                = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | F                = 11} , self = 61 , parent = Nothing , duration = 0.689175429000 , status
| | | | F                = Fail , start = 2025-09-03 10:51:56.434942558 UTC , finish = 2025-09-03
| | | | F                10:51:57.124117987 UTC , thread_cap_info = ("ThreadId 41", 3, False)}
| | | | F                
| | | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F              = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | F              = 3 , total_length = 36} , self = 63 , parent = Nothing , duration = 0.950608640000
| | | | | F              , status = Fail , start = 2025-09-03 10:51:56.474502305 UTC , finish =
| | | | | F              2025-09-03 10:51:57.425110945 UTC , thread_cap_info = ("ThreadId 82", 1,
| | | | | F              False)}
| | | | | F              
| | | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F            = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | F            = 3 , total_length = 29} , self = 62 , parent = Nothing , duration = 0.691247549000
| | | | | | F            , status = Fail , start = 2025-09-03 10:51:56.490882407 UTC , finish =
| | | | | | F            2025-09-03 10:51:57.182129956 UTC , thread_cap_info = ("ThreadId 83", 2,
| | | | | | F            False)}
| | | | | | F            
| | | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | F          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | F          = 3 , total_length = 36} , self = 70 , parent = Nothing , duration = 1.453043367000
| | | | | | | F          , status = Fail , start = 2025-09-03 10:51:56.502475772 UTC , finish =
| | | | | | | F          2025-09-03 10:51:57.955519139 UTC , thread_cap_info = ("ThreadId 85", 1,
| | | | | | | F          False)}
| | | | | | | F          
| F | | | | | |          
| F | | | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | | | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F | | | | | |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| F | | | | | |          = 3 , total_length = 29} , self = 69 , parent = Nothing , duration = 1.388356545000
| F | | | | | |          , status = Fail , start = 2025-09-03 10:51:56.515334604 UTC , finish =
| F | | | | | |          2025-09-03 10:51:57.903691149 UTC , thread_cap_info = ("ThreadId 87", 2,
| F | | | | | |          False)}
| F | | | | | |          
| | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | F        = 9 , num_top_rules = 9 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | F        = 129} , self = 65 , parent = Nothing , duration = 0.921643816000 , status
| | | | | | | | F        = Fail , start = 2025-09-03 10:51:56.643126164 UTC , finish = 2025-09-03
| | | | | | | | F        10:51:57.56476998 UTC , thread_cap_info = ("ThreadId 108", 2, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | | | | | F      = 24 , num_top_rules = 24 , num_weak_rules = 8 , alphabet_size = 7 , total_length
| | | | | | | | | F      = 258} , self = 68 , parent = Nothing , duration = 1.085804770000 , status
| | | | | | | | | F      = Fail , start = 2025-09-03 10:51:56.64631962 UTC , finish = 2025-09-03
| | | | | | | | | F      10:51:57.73212439 UTC , thread_cap_info = ("ThreadId 110", 1, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | | | | | | F    = 24 , num_top_rules = 24 , num_weak_rules = 8 , alphabet_size = 7 , total_length
| | | | | | | | | | F    = 258} , self = 67 , parent = Nothing , duration = 0.908936399000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 10:51:56.686663519 UTC , finish = 2025-09-03
| | | | | | | | | | F    10:51:57.595599918 UTC , thread_cap_info = ("ThreadId 111", 1, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | | | | F  = 129} , self = 66 , parent = Nothing , duration = 0.904296003000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-03 10:51:56.691115569 UTC , finish = 2025-09-03
| | | | | | | | | | | F  10:51:57.595411572 UTC , thread_cap_info = ("ThreadId 107", 2, False)}
| | | | | | | | | | | F  
| | | F | | | | | | | |  
| | F   | | | | | | | |  
| |     F | | | | | | |  
| |       | F | | | | |  
| | F     |   | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F     |   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F     |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F     |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F     |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F     |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | F     |   | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F     |   | | | | |  = 3 , total_length = 29} , self = 71 , parent = Nothing , duration = 0.999874808000
| | F     |   | | | | |  , status = Fail , start = 2025-09-03 10:51:57.22187283 UTC , finish = 2025-09-03
| | F     |   | | | | |  10:51:58.221747638 UTC , thread_cap_info = ("ThreadId 117", 2, False)}
| | F     |   | | | | |  
| | |     F   | | | | |  
| | | F       | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F       | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F       | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F       | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F       | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F       | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F       | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | F       | | | | |  = 3 , total_length = 36} , self = 72 , parent = Nothing , duration = 0.859395657000
| | | F       | | | | |  , status = Fail , start = 2025-09-03 10:51:57.434185228 UTC , finish =
| | | F       | | | | |  2025-09-03 10:51:58.293580885 UTC , thread_cap_info = ("ThreadId 123",
| | | F       | | | | |  1, False)}
| | | F       | | | | |  
F | | |       | | | | |  
  | | |       | F | | |  
S | | |       |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |       |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |       |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |       |   | | |  = 17 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 8 ,
S | | |       |   | | |  alphabet_size = 6 , total_length = 129} , self = 82 , parent = Nothing
S | | |       |   | | |  , duration = 1.285020864000 , status = Success , start = 2025-09-03 10:51:57.580496174
S | | |       |   | | |  UTC , finish = 2025-09-03 10:51:58.865517038 UTC , thread_cap_info = ("ThreadId
S | | |       |   | | |  125", 2, False)}
S | | |       |   | | |  
| | | |       |   | | F  
| | | |       |   | F    
| | | | S     |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S     |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S     |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S     |   |      = 32 , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 8
| | | | S     |   |      , alphabet_size = 7 , total_length = 258} , self = 73 , parent = Nothing
| | | | S     |   |      , duration = 1.227076331000 , status = Success , start = 2025-09-03 10:51:57.595625559
| | | | S     |   |      UTC , finish = 2025-09-03 10:51:58.82270189 UTC , thread_cap_info = ("ThreadId
| | | | S     |   |      126", 1, False)}
| | | | S     |   |      
| | | | | E   |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E   |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E   |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E   |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E   |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E   |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | | | E   |   |      , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 8 , alphabet_size
| | | | | E   |   |      = 6 , total_length = 129} , self = 84 , parent = Nothing , duration = 1.347580608000
| | | | | E   |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:57.601912482
| | | | | E   |   |      UTC , finish = 2025-09-03 10:51:58.94949309 UTC , thread_cap_info = ("ThreadId
| | | | | E   |   |      127", 2, False)}
| | | | | E   |   |      
| | | | | |   |   F      
| | | | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| | | | | | E |          , num_strict_rules = 24 , num_top_rules = 24 , num_weak_rules = 8 , alphabet_size
| | | | | | E |          = 7 , total_length = 258} , self = 75 , parent = Nothing , duration = 1.063356388000
| | | | | | E |          , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:57.76208125
| | | | | | E |          UTC , finish = 2025-09-03 10:51:58.825437638 UTC , thread_cap_info = ("ThreadId
| | | | | | E |          130", 1, False)}
| | | | | | E |          
| F | | | | | |          
|   | | | | | F          
| F | | | | |            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | |            = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| F | | | | |            = 3 , total_length = 29} , self = 91 , parent = Nothing , duration = 1.632729692000
| F | | | | |            , status = Fail , start = 2025-09-03 10:51:57.964457135 UTC , finish =
| F | | | | |            2025-09-03 10:51:59.597186827 UTC , thread_cap_info = ("ThreadId 132",
| F | | | | |            1, False)}
| F | | | | |            
| | | | | | | F          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F          = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | F          = 3 , total_length = 36} , self = 92 , parent = Nothing , duration = 1.539967865000
| | | | | | | F          , status = Fail , start = 2025-09-03 10:51:58.073768732 UTC , finish =
| | | | | | | F          2025-09-03 10:51:59.613736597 UTC , thread_cap_info = ("ThreadId 133",
| | | | | | | F          1, False)}
| | | | | | | F          
| | F | | | | |          
| |   F | | | |          
| |     S | | |          
| |       | E |          
| | F     |   |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F     |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     |   |          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F     |   |          = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | F     |   |          = 82} , self = 94 , parent = Nothing , duration = 0.917929392000 , status
| | F     |   |          = Fail , start = 2025-09-03 10:51:58.828493114 UTC , finish = 2025-09-03
| | F     |   |          10:51:59.746422506 UTC , thread_cap_info = ("ThreadId 145", 1, False)}
| | F     |   |          
| | | F   |   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |   |          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F   |   |          = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F   |   |          = 82} , self = 89 , parent = Nothing , duration = 0.704254830000 , status
| | | F   |   |          = Fail , start = 2025-09-03 10:51:58.844307903 UTC , finish = 2025-09-03
| | | F   |   |          10:51:59.548562733 UTC , thread_cap_info = ("ThreadId 144", 1, False)}
| | | F   |   |          
S | | |   |   |          
  | | |   E   |          
F | | |       |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | |       |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |       |          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F | | |       |          = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size = 5 , total_length
F | | |       |          = 83} , self = 93 , parent = Nothing , duration = 0.691398244000 , status
F | | |       |          = Fail , start = 2025-09-03 10:51:59.01747222 UTC , finish = 2025-09-03
F | | |       |          10:51:59.708870464 UTC , thread_cap_info = ("ThreadId 152", 2, False)}
F | | |       |          
| | | | F     |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F     |          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F     |          = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F     |          = 83} , self = 90 , parent = Nothing , duration = 0.561023215000 , status
| | | | F     |          = Fail , start = 2025-09-03 10:51:59.024238639 UTC , finish = 2025-09-03
| | | | F     |          10:51:59.585261854 UTC , thread_cap_info = ("ThreadId 151", 2, False)}
| | | | F     |          
| | | F |     |          
| | | S |     |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |     |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |     |          = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | S |     |          alphabet_size = 5 , total_length = 82} , self = 95 , parent = Nothing ,
| | | S |     |          duration = 0.273134007000 , status = Success , start = 2025-09-03 10:51:59.568137338
| | | S |     |          UTC , finish = 2025-09-03 10:51:59.841271345 UTC , thread_cap_info = ("ThreadId
| | | S |     |          159", 2, False)}
| | | S |     |          
| | | | F     |          
| F | |       |          
|   | |       F          
F   | |                  
    F |                  
E     |                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E     |                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E     |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E     |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E     |                  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
E     |                  = 5 , total_length = 82} , self = 97 , parent = Nothing , duration = 0.115730909000
E     |                  , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:59.812639365
E     |                  UTC , finish = 2025-09-03 10:51:59.928370274 UTC , thread_cap_info = ("ThreadId
E     |                  166", 1, False)}
E     |                  
|     S                  
E                        
