last 456 length 1796
last 423 length 1753
CNF 456 vars 1796 clauses
CNF 423 vars 1753 clauses
last 423 length 1753
last 456 length 1796
CNF 456 vars 1796 clauses
CNF 423 vars 1753 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1871, clauses: 6660
last 1871 length 6660
CNF 1871 vars 6660 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1871, clauses: 6660
last 1984 length 8602
last 2240 length 10364
last 1871 length 6660
CNF 1984 vars 8602 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1871, clauses: 6660, status: Unsatisfied, time: 0.061356338s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5796, clauses: 23931
CNF 2240 vars 10364 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5796, clauses: 23931
CNF 1871 vars 6660 clauses
last 2057 length 8748
last 2023 length 8333
last 3246 length 14044
last 3160 length 14282
last 5796 length 23931
last 5796 length 23931
CNF 2057 vars 8748 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3619, clauses: 14302
CNF 3246 vars 14044 clauses
CNF 2023 vars 8333 clauses
CNF 3160 vars 14282 clauses
CNF 5796 vars 23931 clauses
CNF 5796 vars 23931 clauses
last 3619 length 14302
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1871, clauses: 6660, status: Unsatisfied, time: 0.262356031s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5939, clauses: 21321
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5796, clauses: 23931, status: Satisfied, time: 0.223490895s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7457, clauses: 27729
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5796, clauses: 23931, status: Satisfied, time: 0.317517169s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22484, clauses: 93893
CNF 3619 vars 14302 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3619, clauses: 14302
last 5939 length 21321
last 7457 length 27729
last 416 length 1732
last 410 length 1626
last 22484 length 93893
last 416 length 1732
last 410 length 1626
CNF 5939 vars 21321 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24911, clauses: 103948
CNF 416 vars 1732 clauses
CNF 7457 vars 27729 clauses
CNF 410 vars 1626 clauses
CNF 410 vars 1626 clauses
CNF 416 vars 1732 clauses
last 24911 length 103948
CNF 22484 vars 93893 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6231
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6231
CNF 24911 vars 103948 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23751
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7457, clauses: 27729, status: Satisfied, time: 0.22106194s
last 1763 length 6231
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23751
last 1763 length 6231
last 5748 length 23751
CNF 1763 vars 6231 clauses
last 5748 length 23751
CNF 1763 vars 6231 clauses
CNF 5748 vars 23751 clauses
CNF 5748 vars 23751 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23751, status: Satisfied, time: 0.230753671s
last 3004 length 12860
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6231, status: Unsatisfied, time: 0.358524551s
CNF 3004 vars 12860 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6231, status: Unsatisfied, time: 0.305052513s
last 2908 length 12834
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 4 strict rules and 5 weak rules on 5 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [c, c] {- Input 1 -}
  [b, c] -> [a, a, b, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a] -> [] {- Mirror (Input 0) -}
  [c, a] -> [c, c] {- Mirror (Input 1) -}
  [c, b] -> [b, b, a, a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a] {- Mirror (Input 0) -}
  [b, b, a] -> [b] {- Mirror (Input 0) -}
  [c, b, a] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [c, c] {- Mirror (Input 1) -}
  [c, b] -> [b, b, a, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a] {- Input 0 -}
  [a, b, b] -> [b] {- Input 0 -}
  [a, b, c] -> [c] {- Input 0 -}
  [a, c] -> [c, c] {- Input 1 -}
  [b, c] -> [a, a, b, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, c] {- DP Nontop (Input 1) -}
  [b, c] ->= [a, a, b, b] {- DP Nontop (Input 2) -}
  [b#, c] |-> [a#, a, b, b] {- DP (Top 0) (Input 2) -}
  [b#, c] |-> [a#, b, b] {- DP (Top 1) (Input 2) -}
  [b#, c] |-> [b#] {- DP (Top 3) (Input 2) -}
  [b#, c] |-> [b#, b] {- DP (Top 2) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, c] {- DP Nontop (Input 1) -}
  [b, c] ->= [a, a, b, b] {- DP Nontop (Input 2) -}
  [b#, c] |-> [b#] {- DP (Top 3) (Input 2) -}
  [b#, c] |-> [b#, b] {- DP (Top 2) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, c] |-> [b#] {- DP (Top 3) (Input 2) -}
  [b#, c] |-> [b#, b] {- DP (Top 2) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, c] {- DP Nontop (Input 1) -}
  [b, c] ->= [a, a, b, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  2A 2A  \
        | -2A 1A -1A |
        \ -   -  0A  / )
  ( b
  , Wk  / 0A 1A  -  \
        | -  -1A -  |
        \ -  -   0A / )
  ( c
  , Wk  / 1A -  -  \
        | 0A 1A 1A |
        \ -  -  0A / )
  ( b#
  , Wk  / 0A 0A -1A \
        | -  -  -   |CNF 2908 vars 12834 clauses

        \ -  -  0A  / )
   property Termination
has value Just True
for SRS
  [b#, c] |-> [b#, b] {- DP (Top 2) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, c] {- DP Nontop (Input 1) -}
  [b, c] ->= [a, a, b, b] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, c] |-> [b#, b] {- DP (Top 2) (Input 2) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, c] {- DP Nontop (Input 1) -}
  [b, c] ->= [a, a, b, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 1A 1A  \
        | -  1A -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / 0A -   -   \
        | -  -1A -2A |
        \ -  -   0A  / )
  ( c
  , Wk  / 1A 0A 1A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( b#
  , Wk  / 1A -1A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, c] ->= [c, c] {- DP Nontop (Input 1) -}
  [b, c] ->= [a, a, b, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(4/5,5)\Weight\EDG(2/5,4)\Matrix{\ArcticBZ}{3}\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.715270435000
  min duration 0.441476096000
  total durat. 1.865926672000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.653636452000
  min duration 0.235827285000
  total durat. 1.908420451000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.343547657000
  min duration 1.343547657000
  total durat. 1.343547657000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 103
    , parent = Nothing
    , duration = 1.343547657000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:48:46.496414419 UTC
    , finish = 2025-09-03 11:48:47.839962076 UTC
    , thread_cap_info = ("ThreadId 86", 3, False)}
**************************************************
F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
F                        = 17 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                        = 92} , self = 65 , parent = Nothing , duration = 0.248367829000 , status
F                        = Fail , start = 2025-09-03 11:48:46.463375329 UTC , finish = 2025-09-03
F                        11:48:46.711743158 UTC , thread_cap_info = ("ThreadId 66", 0, False)}
F                        
| F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F                      = 4 , total_length = 29} , self = 64 , parent = Nothing , duration = 0.235827285000
| F                      , status = Fail , start = 2025-09-03 11:48:46.473558234 UTC , finish =
| F                      2025-09-03 11:48:46.709385519 UTC , thread_cap_info = ("ThreadId 77", 2,
| F                      False)}
| F                      
| | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | F                    = 17 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                    = 92} , self = 66 , parent = Nothing , duration = 0.259306930000 , status
| | F                    = Fail , start = 2025-09-03 11:48:46.476281059 UTC , finish = 2025-09-03
| | F                    11:48:46.735587989 UTC , thread_cap_info = ("ThreadId 68", 0, False)}
| | F                    
| | | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | F                  = 12} , self = 72 , parent = Nothing , duration = 0.714889372000 , status
| | | F                  = Fail , start = 2025-09-03 11:48:46.482594407 UTC , finish = 2025-09-03
| | | F                  11:48:47.197483779 UTC , thread_cap_info = ("ThreadId 78", 3, False)}
| | | F                  
| | | | F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F                = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | F                = 4 , total_length = 29} , self = 71 , parent = Nothing , duration = 0.653636452000
| | | | F                , status = Fail , start = 2025-09-03 11:48:46.484432874 UTC , finish =
| | | | F                2025-09-03 11:48:47.138069326 UTC , thread_cap_info = ("ThreadId 81", 1,
| | | | F                False)}
| | | | F                
| | | | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | S              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | S              = 4 , total_length = 29} , self = 73 , parent = Nothing , duration = 0.709180141000
| | | | | S              , status = Success , start = 2025-09-03 11:48:46.489960683 UTC , finish
| | | | | S              = 2025-09-03 11:48:47.199140824 UTC , thread_cap_info = ("ThreadId 82",
| | | | | S              2, False)}
| | | | | S              
| | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | | E            = 12} , self = 103 , parent = Nothing , duration = 1.343547657000 , status
| | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 11:48:46.496414419 UTC ,
| | | | | | E            finish = 2025-09-03 11:48:47.839962076 UTC , thread_cap_info = ("ThreadId
| | | | | | E            86", 3, False)}
| | | | | | E            
| | | | | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | S          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | S          = 4 , total_length = 29} , self = 75 , parent = Nothing , duration = 0.715270435000
| | | | | | | S          , status = Success , start = 2025-09-03 11:48:46.503778761 UTC , finish
| | | | | | | S          = 2025-09-03 11:48:47.219049196 UTC , thread_cap_info = ("ThreadId 87",
| | | | | | | S          1, False)}
| | | | | | | S          
| | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 17 , alphabet_size = 10 , total_length
| | | | | | | | F        = 104} , self = 67 , parent = Nothing , duration = 0.159308272000 , status
| | | | | | | | F        = Fail , start = 2025-09-03 11:48:46.60931786 UTC , finish = 2025-09-03
| | | | | | | | F        11:48:46.768626132 UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | | | F      = 9 , num_top_rules = 9 , num_weak_rules = 17 , alphabet_size = 12 , total_length
| | | | | | | | | F      = 144} , self = 68 , parent = Nothing , duration = 0.200818735000 , status
| | | | | | | | | F      = Fail , start = 2025-09-03 11:48:46.609671906 UTC , finish = 2025-09-03
| | | | | | | | | F      11:48:46.810490641 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 17 , alphabet_size = 10 , total_length
| | | | | | | | | | F    = 104} , self = 69 , parent = Nothing , duration = 0.202405082000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 11:48:46.61556273 UTC , finish = 2025-09-03
| | | | | | | | | | F    11:48:46.817967812 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 17 , alphabet_size = 12 , total_length
| | | | | | | | | | | F  = 144} , self = 70 , parent = Nothing , duration = 0.226355430000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-03 11:48:46.630288838 UTC , finish = 2025-09-03
| | | | | | | | | | | F  11:48:46.856644268 UTC , thread_cap_info = ("ThreadId 114", 2, False)}
| | | | | | | | | | | F  
| F | | | | | | | | | |  
| E | | | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E | | | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| E | | | | | | | | | |  = 4 , total_length = 29} , self = 82 , parent = Nothing , duration = 0.527305141000
| E | | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:46.709415216
| E | | | | | | | | | |  UTC , finish = 2025-09-03 11:48:47.236720357 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | | |  116", 2, False)}
| E | | | | | | | | | |  
F | | | | | | | | | | |  
  | F | | | | | | | | |  
  |   | | | | | F | | |  
  |   | | | | |   F | |  
  |   | | | | |     F |  
S |   | | | | |       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | | | | |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | | | | |       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | | | | |       |  = 26 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 17 ,
S |   | | | | |       |  alphabet_size = 12 , total_length = 144} , self = 91 , parent = Nothing
S |   | | | | |       |  , duration = 0.729087233000 , status = Success , start = 2025-09-03 11:48:46.833310572
S |   | | | | |       |  UTC , finish = 2025-09-03 11:48:47.562397805 UTC , thread_cap_info = ("ThreadId
S |   | | | | |       |  126", 2, False)}
S |   | | | | |       |  
| |   | | | | |       F  
| | E | | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 26
| | E | | | | |          , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 17 , alphabet_size
| | E | | | | |          = 12 , total_length = 144} , self = 93 , parent = Nothing , duration =
| | E | | | | |          0.677693579000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | | | |          11:48:46.890320346 UTC , finish = 2025-09-03 11:48:47.568013925 UTC , thread_cap_info
| | E | | | | |          = ("ThreadId 128", 2, False)}
| | E | | | | |          
| | | | F | | |          
| | | F   | | |          
| | |     S | |          
| | |       | S          
| | | F     |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     |            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F     |            = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F     |            = 26} , self = 88 , parent = Nothing , duration = 0.109455883000 , status
| | | F     |            = Fail , start = 2025-09-03 11:48:47.224661832 UTC , finish = 2025-09-03
| | | F     |            11:48:47.334117715 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
| | | F     |            
| E | |     |            
| F | |     |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |     |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |     |            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F | |     |            = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F | |     |            = 26} , self = 90 , parent = Nothing , duration = 0.121892986000 , status
| F | |     |            = Fail , start = 2025-09-03 11:48:47.241886681 UTC , finish = 2025-09-03
| F | |     |            11:48:47.363779667 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| F | |     |            
| | | | F   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F   |            = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | F   |            = 4 , total_length = 26} , self = 99 , parent = Nothing , duration = 0.513743428000
| | | | F   |            , status = Fail , start = 2025-09-03 11:48:47.302973471 UTC , finish =
| | | | F   |            2025-09-03 11:48:47.816716899 UTC , thread_cap_info = ("ThreadId 151",
| | | | F   |            2, False)}
| | | | F   |            
| | | F |   |            
| | | F |   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |   |            = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F |   |            = 4 , total_length = 26} , self = 104 , parent = Nothing , duration = 0.505213286000
| | | F |   |            , status = Fail , start = 2025-09-03 11:48:47.33475265 UTC , finish = 2025-09-03
| | | F |   |            11:48:47.839965936 UTC , thread_cap_info = ("ThreadId 153", 2, False)}
| | | F |   |            
| | | | | S |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | S |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | S |            = 4 , total_length = 26} , self = 98 , parent = Nothing , duration = 0.441476096000
| | | | | S |            , status = Success , start = 2025-09-03 11:48:47.337047928 UTC , finish
| | | | | S |            = 2025-09-03 11:48:47.778524024 UTC , thread_cap_info = ("ThreadId 152",
| | | | | S |            3, False)}
| | | | | S |            
| F | | | | |            
S   | | | | |            
    E | | | |            
      | | S |            
      | F   |            
      |     E            
      F                  
