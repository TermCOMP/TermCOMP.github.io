last 657 length 2628
CNF 657 vars 2628 clauses
last 1888 length 7955
CNF 1888 vars 7955 clauses
last 605 length 2452
last 2100 length 9445
CNF 2100 vars 9445 clauses
CNF 605 vars 2452 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3075, clauses: 11180
last 3075 length 11180
last 2088 length 8607
CNF 2088 vars 8607 clauses
last 641 length 2561
CNF 3075 vars 11180 clauses
CNF 641 vars 2561 clauses
last 641 length 2611
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 2205 length 9458
last 1962 length 8247
last 1985 length 8320
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6122, clauses: 21855
last 595 length 2431
last 540 length 2176
last 595 length 2431
last 540 length 2176
CNF 1962 vars 8247 clauses
last 6122 length 21855
CNF 2205 vars 9458 clauses
CNF 1985 vars 8320 clauses
CNF 540 vars 2176 clauses
CNF 595 vars 2431 clauses
CNF 595 vars 2431 clauses
CNF 540 vars 2176 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6227, clauses: 22305
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2851, clauses: 10231
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2851, clauses: 10231
last 2500 length 10491
last 2496 length 10483
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7960, clauses: 32915
last 6227 length 22305
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25197, clauses: 105540
last 2851 length 10231
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7960, clauses: 32915
last 2851 length 10231
CNF 2500 vars 10491 clauses
CNF 2496 vars 10483 clauses
last 7960 length 32915
last 25197 length 105540
CNF 2851 vars 10231 clauses
CNF 6227 vars 22305 clauses
last 7960 length 32915
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 2851 vars 10231 clauses
CNF 7960 vars 32915 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2851, clauses: 10231, status: Satisfied, time: 0.221759333s
CNF 25197 vars 105540 clauses
CNF 7960 vars 32915 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2851, clauses: 10231, status: Satisfied, time: 0.251412903s
last 2329 length 9914
last 2029 length 8600
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7960, clauses: 32915, status: Satisfied, time: 0.485929306s
CNF 2329 vars 9914 clauses
CNF 2029 vars 8600 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       DP
SRS with 9 strict rules and 3 weak rules on 6 letters       weights
SRS with 7 strict rules and 3 weak rules on 6 letters       EDG
SRS with 7 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 3 weak rules on 6 letters       EDG
SRS with 5 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 3 weak rules on 6 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       EDG
SRS with 1 strict rules and 3 weak rules on 4 letters       Usable
SRS with 1 rules on 2 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [b, b, a] {- Input 0 -}
  [b, c] -> [c, b, b] {- Input 1 -}
  [c, a] -> [a, c, c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [a#, b] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, c] |-> [c#, b, b] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Input 2) -}
  [c#, a] |-> [c#] {- DP (Top 2) (Input 2) -}
  [c#, a] |-> [c#, c] {- DP (Top 1) (Input 2) -}
reason
  (a, 1/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [a#, b] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, c] |-> [c#, b, b] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [b#, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, c] |-> [c#, b, b] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Input 2) -}
  [a#, b] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( b
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( a#
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( b#
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( c#
  , Ek 2  / 1 1 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [b#, c] |-> [c#, b, b] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Input 2) -}
  [a#, b] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [b#, c] |-> [c#, b, b] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Input 2) -}
  [a#, b] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 9A 9A 9A - \
        | 6A 9A 9A - |
        | 6A 9A 9A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 19A 22A 22A - \
        | 19A 22A 22A - |
        | 19A 22A 22A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 11A 13A 13A - \
        | 11A 13A 13A - |
        | 11A 13A 13A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a#, b] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [c#, a] |-> [a#, c, c] {- DP (Top 0) (Input 2) -}
  [a#, b] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
  [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
reason
  remove un-usable
    SRS
      [a, b] ->= [b, b, a] {- DP Nontop (Input 0) -}
      [b, c] ->= [c, b, b] {- DP Nontop (Input 1) -}
      [c, a] ->= [a, c, c] {- DP Nontop (Input 2) -}
   property Termination
has value Just True
for SRS
  [a#, b] |-> [a#] {- DP (Top 2) (Input 0) -}
reason
  (b, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\Deepee(9/3,6)\Weight\EDG(7/3,6)\Matrix{\Natural}{2}\EDG(5/3,6)\Matrix{\Arctic}{3}(4/3,6)\Weight\EDG(1/3,4)\Usable(1,2)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.297288284000
  min duration 0.036768789000
  total durat. 1.089055038000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.427652818000
  min duration 0.051031160000
  total durat. 1.445886612000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.883438132000
  min duration 0.776485993000
  total durat. 1.659924125000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.861568121000
  min duration 0.808518814000
  total durat. 1.670086935000
**************************************************
F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
F                alphabet_size = 6 , total_length = 44} , self = 62 , parent = Nothing ,
F                duration = 0.193033594000 , status = Fail , start = 2025-09-03 13:06:43.675919963
F                UTC , finish = 2025-09-03 13:06:43.868953557 UTC , thread_cap_info = ("ThreadId
F                88", 0, False)}
F                
| S              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| S              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| S              = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| S              = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 10 , total_length
| S              = 94} , self = 74 , parent = Nothing , duration = 0.270702544000 , status
| S              = Success , start = 2025-09-03 13:06:43.696245791 UTC , finish = 2025-09-03
| S              13:06:43.966948335 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| S              
| | S            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | S            = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | S            = 44} , self = 67 , parent = Nothing , duration = 0.188322467000 , status
| | S            = Success , start = 2025-09-03 13:06:43.707526755 UTC , finish = 2025-09-03
| | S            13:06:43.895849222 UTC , thread_cap_info = ("ThreadId 99", 0, False)}
| | S            
| | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | E          = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | E          = 44} , self = 69 , parent = Nothing , duration = 0.188779270000 , status
| | | E          = Except "AsyncCancelled" , start = 2025-09-03 13:06:43.707536089 UTC ,
| | | E          finish = 2025-09-03 13:06:43.896315359 UTC , thread_cap_info = ("ThreadId
| | | E          100", 0, False)}
| | | E          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 10 , total_length
| | | | F        = 94} , self = 77 , parent = Nothing , duration = 0.255053710000 , status
| | | | F        = Fail , start = 2025-09-03 13:06:43.759857931 UTC , finish = 2025-09-03
| | | | F        13:06:44.014911641 UTC , thread_cap_info = ("ThreadId 112", 3, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 10 , total_length
| | | | | F      = 94} , self = 76 , parent = Nothing , duration = 0.209145763000 , status
| | | | | F      = Fail , start = 2025-09-03 13:06:43.768861082 UTC , finish = 2025-09-03
| | | | | F      13:06:43.978006845 UTC , thread_cap_info = ("ThreadId 113", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | | | F    alphabet_size = 10 , total_length = 94} , self = 80 , parent = Nothing
| | | | | | F    , duration = 0.282016523000 , status = Fail , start = 2025-09-03 13:06:43.789556527
| | | | | | F    UTC , finish = 2025-09-03 13:06:44.07157305 UTC , thread_cap_info = ("ThreadId
| | | | | | F    114", 3, False)}
| | | | | | F    
F | | | | | |    
F | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | | | | | |    = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
F | | | | | |    = 37} , self = 79 , parent = Nothing , duration = 0.180452965000 , status
F | | | | | |    = Fail , start = 2025-09-03 13:06:43.869367185 UTC , finish = 2025-09-03
F | | | | | |    13:06:44.04982015 UTC , thread_cap_info = ("ThreadId 119", 0, False)}
F | | | | | |    
| | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | F  = 37} , self = 78 , parent = Nothing , duration = 0.157453770000 , status
| | | | | | | F  = Fail , start = 2025-09-03 13:06:43.873939011 UTC , finish = 2025-09-03
| | | | | | | F  13:06:44.031392781 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| | | | | | | F  
| | S | | | | |  
| |   E | | | |  
| | F   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F   | | | |  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F   | | | |  = 37} , self = 82 , parent = Nothing , duration = 0.234056408000 , status
| | F   | | | |  = Fail , start = 2025-09-03 13:06:43.89701514 UTC , finish = 2025-09-03
| | F   | | | |  13:06:44.131071548 UTC , thread_cap_info = ("ThreadId 126", 0, False)}
| | F   | | | |  
| | | F | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F | | | |  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | F | | | |  = 37} , self = 86 , parent = Nothing , duration = 0.268062774000 , status
| | | F | | | |  = Fail , start = 2025-09-03 13:06:43.9029617 UTC , finish = 2025-09-03
| | | F | | | |  13:06:44.171024474 UTC , thread_cap_info = ("ThreadId 125", 0, False)}
| | | F | | | |  
| S | | | | | |  
|   | | | F | |  
|   | | F   | |  
|   | |     | F  
| S | |     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |     |    = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| S | |     |    = 6 , total_length = 37} , self = 95 , parent = Nothing , duration = 0.861568121000
| S | |     |    , status = Success , start = 2025-09-03 13:06:44.048854909 UTC , finish
| S | |     |    = 2025-09-03 13:06:44.91042303 UTC , thread_cap_info = ("ThreadId 137",
| S | |     |    0, False)}
| S | |     |    
F | | |     |    
  | | |     F    
E | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E | | |          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
E | | |          = 6 , total_length = 37} , self = 97 , parent = Nothing , duration = 0.883438132000
E | | |          , status = Except "AsyncCancelled" , start = 2025-09-03 13:06:44.108819471
E | | |          UTC , finish = 2025-09-03 13:06:44.992257603 UTC , thread_cap_info = ("ThreadId
E | | |          138", 0, False)}
E | | |          
| | F |          
| | S |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S |          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | S |          = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 11 , total_length
| | S |          = 112} , self = 87 , parent = Nothing , duration = 0.475131675000 , status
| | S |          = Success , start = 2025-09-03 13:06:44.170011923 UTC , finish = 2025-09-03
| | S |          13:06:44.645143598 UTC , thread_cap_info = ("ThreadId 143", 3, False)}
| | S |          
| | | F          
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | F          = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 11 , total_length
| | | F          = 112} , self = 88 , parent = Nothing , duration = 0.427652818000 , status
| | | F          = Fail , start = 2025-09-03 13:06:44.219780553 UTC , finish = 2025-09-03
| | | F          13:06:44.647433371 UTC , thread_cap_info = ("ThreadId 144", 3, False)}
| | | F          
| | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S        = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | S        = 6 , total_length = 37} , self = 99 , parent = Nothing , duration = 0.808518814000
| | | | S        , status = Success , start = 2025-09-03 13:06:44.219858051 UTC , finish
| | | | S        = 2025-09-03 13:06:45.028376865 UTC , thread_cap_info = ("ThreadId 141",
| | | | S        0, False)}
| | | | S        
| | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | E      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | E      = 6 , total_length = 37} , self = 101 , parent = Nothing , duration = 0.776485993000
| | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:06:44.270201248
| | | | | E      UTC , finish = 2025-09-03 13:06:45.046687241 UTC , thread_cap_info = ("ThreadId
| | | | | E      145", 0, False)}
| | | | | E      
| | S | | |      
| |   F | |      
| | F   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F   | |      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 10 , total_length
| | F   | |      = 94} , self = 107 , parent = Nothing , duration = 0.297288284000 , status
| | F   | |      = Fail , start = 2025-09-03 13:06:44.767505426 UTC , finish = 2025-09-03
| | F   | |      13:06:45.06479371 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | F   | |      
| | | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F | |      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 10 , total_length
| | | F | |      = 94} , self = 106 , parent = Nothing , duration = 0.274158209000 , status
| | | F | |      = Fail , start = 2025-09-03 13:06:44.790619674 UTC , finish = 2025-09-03
| | | F | |      13:06:45.064777883 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | F | |      
| S | | | |      
E   | | | |      
    | | S |      
    | |   E      
    | F          
    F            
