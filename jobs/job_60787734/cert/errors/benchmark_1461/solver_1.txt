last 2168 length 9397
last 1253 length 5210
last 1619 length 6928
last 1219 length 5185
CNF 2168 vars 9397 clauses
last 4907 length 21473
last 5516 length 25235
last 7261 length 33020
last 6097 length 26754
CNF 1619 vars 6928 clauses
CNF 1253 vars 5210 clauses
last 7551 length 33280
CNF 1219 vars 5185 clauses
CNF 4907 vars 21473 clauses
last 9280 length 41709
CNF 5516 vars 25235 clauses
CNF 7261 vars 33020 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3718, clauses: 13978
CNF 6097 vars 26754 clauses
CNF 7551 vars 33280 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2707, clauses: 9967
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13420, clauses: 56617
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10081, clauses: 42483
last 3718 length 13978
CNF 9280 vars 41709 clauses
last 2707 length 9967
last 13420 length 56617
last 10081 length 42483
CNF 3718 vars 13978 clauses
CNF 2707 vars 9967 clauses
CNF 13420 vars 56617 clauses
CNF 10081 vars 42483 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3718, clauses: 13978, status: Unsatisfied, time: 0.361801078s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2707, clauses: 9967, status: Unsatisfied, time: 0.33402239s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8552, clauses: 32505
last 8552 length 32505
CNF 8552 vars 32505 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9970, clauses: 38842
last 9970 length 38842
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10081, clauses: 42483, status: Unsatisfied, time: 1.113774657s
CNF 9970 vars 38842 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6116, clauses: 25677
last 6116 length 25677
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8142, clauses: 34293
last 8142 length 34293
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8552, clauses: 32505, status: Satisfied, time: 0.365214793s
CNF 8142 vars 34293 clauses
CNF 6116 vars 25677 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4476, clauses: 17374
last 4476 length 17374
CNF 4476 vars 17374 clauses
last 5044 length 21910
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4476, clauses: 17374, status: Satisfied, time: 0.374330628s
CNF 5044 vars 21910 clauses
last 1024 length 4313
CNF 1024 vars 4313 clauses
last 1198 length 5132
last 4961 length 21309
CNF 1198 vars 5132 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2392, clauses: 8740
last 2392 length 8740
CNF 2392 vars 8740 clauses
CNF 4961 vars 21309 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2392, clauses: 8740, status: Satisfied, time: 0.275667528s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9970, clauses: 38842, status: Satisfied, time: 1.287447279s
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 16 strict rules and 4 weak rules on 4 letters       weights
SRS with 3 strict rules and 4 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 2 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a] -> [a, b, b, b] {- Input 0 -}
  [b, b, b, b] -> [b, b, a, a] {- Input 1 -}
  [a, a, b, b] -> [a, b, b, a] {- Input 2 -}
  [b, a, a, a] -> [a, b, a, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b, b] ->= [b, b, a, a] {- DP Nontop (Input 1) -}
  [a, a, b, b] ->= [a, b, b, a] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, b, a, b] {- DP Nontop (Input 3) -}
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [a#, a, b, b] |-> [a#] {- DP (Top 3) (Input 2) -}
  [a#, a, b, b] |-> [a#, b, b, a] {- DP (Top 0) (Input 2) -}
  [a#, a, b, b] |-> [b#, a] {- DP (Top 2) (Input 2) -}
  [a#, a, b, b] |-> [b#, b, a] {- DP (Top 1) (Input 2) -}
  [b#, a, a, a] |-> [a#, b] {- DP (Top 2) (Input 3) -}
  [b#, a, a, a] |-> [a#, b, a, b] {- DP (Top 0) (Input 3) -}
  [b#, a, a, a] |-> [b#] {- DP (Top 3) (Input 3) -}
  [b#, a, a, a] |-> [b#, a, b] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [b#, a, a] {- DP (Top 1) (Input 1) -}
  [b#, b, b, b] |-> [b#, b, a, a] {- DP (Top 0) (Input 1) -}
reason
  (a, 2/1)
  (b, 2/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b, b] ->= [b, b, a, a] {- DP Nontop (Input 1) -}
  [a, a, b, b] ->= [a, b, b, a] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, b, a, b] {- DP Nontop (Input 3) -}
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, b] |-> [a#, b, b, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b, b] |-> [b#, b, a, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, b] |-> [a#, b, b, a] {- DP (Top 0) (Input 2) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b, b] ->= [b, b, a, a] {- DP Nontop (Input 1) -}
  [a, a, b, b] ->= [a, b, b, a] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, b, a, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 4A 4A 4A 4A - \
        | 4A 4A 4A 4A - |
        | 0A 4A 4A 4A - |
        | 0A 0A 4A 4A - |
        \ -  -  -  -  - / )
  ( b
  , Wk  / 4A 4A 4A 4A - \
        | 0A 0A 0A 4A - |
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        \ -  -  -  -  - / )
  ( a#
  , Wk  / 1A 2A 4A 4A - \
        | 1A 2A 4A 4A - |
        | 1A 2A 4A 4A - |
        | 1A 2A 4A 4A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b, b] ->= [b, b, a, a] {- DP Nontop (Input 1) -}
  [a, a, b, b] ->= [a, b, b, a] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, b, a, b] {- DP Nontop (Input 3) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, b, b, b] |-> [b#, b, a, a] {- DP (Top 0) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b, b] ->= [b, b, a, a] {- DP Nontop (Input 1) -}
  [a, a, b, b] ->= [a, b, b, a] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, b, a, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 3A 4A 4A - \
        | 3A 4A 4A - |
        | 3A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b, b] ->= [b, b, a, a] {- DP Nontop (Input 1) -}
  [a, a, b, b] ->= [a, b, b, a] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, b, a, b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee(16/4,4)\Weight(3/4,4)\EDG[(2/4,3)\Matrix{\Arctic}{4}(0/4,2)\EDG[],(1/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.959466718000
  min duration 0.093540886000
  total durat. 4.204840235000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.779036205000
  min duration 0.216782552000
  total durat. 3.643344853000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.443684199000
  min duration 1.443684199000
  total durat. 1.443684199000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 48}
    , self = 68
    , parent = Nothing
    , duration = 1.443684199000
    , status = Fail
    , start = 2025-09-03 11:56:13.188828926 UTC
    , finish = 2025-09-03 11:56:14.632513125 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.302900216000
  min duration 0.274387930000
  total durat. 1.577288146000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 16
      , alphabet_size = 5
      , total_length = 200}
    , self = 71
    , parent = Nothing
    , duration = 1.302900216000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:56:13.494234656 UTC
    , finish = 2025-09-03 11:56:14.797134872 UTC
    , thread_cap_info = ("ThreadId 119", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.005616567000
  min duration 1.005616567000
  total durat. 1.005616567000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 48}
    , self = 78
    , parent = Nothing
    , duration = 1.005616567000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:56:14.338940864 UTC
    , finish = 2025-09-03 11:56:15.344557431 UTC
    , thread_cap_info = ("ThreadId 127", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.262686488000
  min duration 0.391688502000
  total durat. 1.654374990000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 16
      , alphabet_size = 5
      , total_length = 200}
    , self = 69
    , parent = Nothing
    , duration = 1.262686488000
    , status = Success
    , start = 2025-09-03 11:56:13.493796003 UTC
    , finish = 2025-09-03 11:56:14.756482491 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.906770635000
  min duration 0.866961424000
  total durat. 1.773732059000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.036490884000
  min duration 3.036490884000
  total durat. 3.036490884000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 32}
    , self = 92
    , parent = Nothing
    , duration = 3.036490884000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:56:12.85775486 UTC
    , finish = 2025-09-03 11:56:15.894245744 UTC
    , thread_cap_info = ("ThreadId 102", 0, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 32} , self
F                      = 48 , parent = Nothing , duration = 0.164788970000 , status = Fail , start
F                      = 2025-09-03 11:56:12.575296706 UTC , finish = 2025-09-03 11:56:12.740085676
F                      UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                      
| F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                    = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                    = 32} , self = 55 , parent = Nothing , duration = 0.282344353000 , status
| F                    = Fail , start = 2025-09-03 11:56:12.575390209 UTC , finish = 2025-09-03
| F                    11:56:12.857734562 UTC , thread_cap_info = ("ThreadId 37", 0, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F                  = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                  = 160} , self = 60 , parent = Nothing , duration = 0.752172274000 , status
| | F                  = Fail , start = 2025-09-03 11:56:12.614243394 UTC , finish = 2025-09-03
| | F                  11:56:13.366415668 UTC , thread_cap_info = ("ThreadId 65", 0, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | F                = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | F                = 200} , self = 62 , parent = Nothing , duration = 0.797463199000 , status
| | | F                = Fail , start = 2025-09-03 11:56:12.617612599 UTC , finish = 2025-09-03
| | | F                11:56:13.415075798 UTC , thread_cap_info = ("ThreadId 74", 1, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | F              = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | F              = 200} , self = 63 , parent = Nothing , duration = 0.779036205000 , status
| | | | F              = Fail , start = 2025-09-03 11:56:12.636199322 UTC , finish = 2025-09-03
| | | | F              11:56:13.415235527 UTC , thread_cap_info = ("ThreadId 75", 1, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F            = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F            = 160} , self = 61 , parent = Nothing , duration = 0.749037081000 , status
| | | | | F            = Fail , start = 2025-09-03 11:56:12.637390569 UTC , finish = 2025-09-03
| | | | | F            11:56:13.38642765 UTC , thread_cap_info = ("ThreadId 67", 0, False)}
| | | | | F            
F | | | | |            
F | | | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | | | | |            = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F | | | | |            = 64} , self = 57 , parent = Nothing , duration = 0.437150749000 , status
F | | | | |            = Fail , start = 2025-09-03 11:56:12.740437387 UTC , finish = 2025-09-03
F | | | | |            11:56:13.177588136 UTC , thread_cap_info = ("ThreadId 93", 3, False)}
F | | | | |            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F          = 64} , self = 56 , parent = Nothing , duration = 0.313085804000 , status
| | | | | | F          = Fail , start = 2025-09-03 11:56:12.754615964 UTC , finish = 2025-09-03
| | | | | | F          11:56:13.067701768 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | F        = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | | F        = 240} , self = 64 , parent = Nothing , duration = 0.762488476000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:56:12.754616778 UTC , finish = 2025-09-03
| | | | | | | F        11:56:13.517105254 UTC , thread_cap_info = ("ThreadId 89", 1, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | | F      = 48} , self = 59 , parent = Nothing , duration = 0.402557933000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 11:56:12.786238308 UTC , finish = 2025-09-03
| | | | | | | | F      11:56:13.188796241 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | | F    = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | | | | F    = 240} , self = 65 , parent = Nothing , duration = 0.750358757000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 11:56:12.786239124 UTC , finish = 2025-09-03
| | | | | | | | | F    11:56:13.536597881 UTC , thread_cap_info = ("ThreadId 90", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | | | | F  = 48} , self = 58 , parent = Nothing , duration = 0.388466137000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 11:56:12.794245789 UTC , finish = 2025-09-03
| | | | | | | | | | F  11:56:13.182711926 UTC , thread_cap_info = ("ThreadId 97", 2, False)}
| | | | | | | | | | F  
| F | | | | | | | | |  
| E | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | | |  = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| E | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | | |  = 32} , self = 92 , parent = Nothing , duration = 3.036490884000 , status
| E | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 11:56:12.85775486 UTC ,
| E | | | | | | | | |  finish = 2025-09-03 11:56:15.894245744 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | |  102", 0, False)}
| E | | | | | | | | |  
| | | | | | F | | | |  
| | | | | | F | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F | | | |  = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | F | | | |  = 4 , total_length = 64} , self = 66 , parent = Nothing , duration = 0.906770635000
| | | | | | F | | | |  , status = Fail , start = 2025-09-03 11:56:13.067733644 UTC , finish =
| | | | | | F | | | |  2025-09-03 11:56:13.974504279 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | F | | | |  3, False)}
| | | | | | F | | | |  
F | | | | | | | | | |  
  | | | | | | | | | F  
  | | | | | | | F |    
F | | | | | | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | |   |    = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
F | | | | | | |   |    = 3 , total_length = 48} , self = 67 , parent = Nothing , duration = 0.866961424000
F | | | | | | |   |    , status = Fail , start = 2025-09-03 11:56:13.188820888 UTC , finish =
F | | | | | | |   |    2025-09-03 11:56:14.055782312 UTC , thread_cap_info = ("ThreadId 113",
F | | | | | | |   |    2, False)}
F | | | | | | |   |    
| | | | | | | | F |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | F |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | | | F |    = 3 , total_length = 48} , self = 68 , parent = Nothing , duration = 1.443684199000
| | | | | | | | F |    , status = Fail , start = 2025-09-03 11:56:13.188828926 UTC , finish =
| | | | | | | | F |    2025-09-03 11:56:14.632513125 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | | | F |    2, False)}
| | | | | | | | F |    
| | F | | | | | | |    
| |   | | F | | | |    
| |   F |   | | | |    
| |     F   | | | |    
| | S       | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S       | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S       | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S       | | | |    = 20 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 16 ,
| | S       | | | |    alphabet_size = 5 , total_length = 200} , self = 69 , parent = Nothing
| | S       | | | |    , duration = 1.262686488000 , status = Success , start = 2025-09-03 11:56:13.493796003
| | S       | | | |    UTC , finish = 2025-09-03 11:56:14.756482491 UTC , thread_cap_info = ("ThreadId
| | S       | | | |    118", 1, False)}
| | S       | | | |    
| | | E     | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E     | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E     | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E     | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| | | E     | | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size
| | | E     | | | |    = 5 , total_length = 200} , self = 71 , parent = Nothing , duration = 1.302900216000
| | | E     | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:56:13.494234656
| | | E     | | | |    UTC , finish = 2025-09-03 11:56:14.797134872 UTC , thread_cap_info = ("ThreadId
| | | E     | | | |    119", 1, False)}
| | | E     | | | |    
| | | |     | F | |    
| | | |     |   | F    
| | | |     F   |      
F | | |         |      
E | | |         |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |         |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |         |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |         |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |         |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |         |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E | | |         |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
E | | |         |      = 3 , total_length = 48} , self = 78 , parent = Nothing , duration = 1.005616567000
E | | |         |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:56:14.338940864
E | | |         |      UTC , finish = 2025-09-03 11:56:15.344557431 UTC , thread_cap_info = ("ThreadId
E | | |         |      127", 2, False)}
E | | |         |      
| | | |         F      
| | | | S              Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S              = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | S              = 3 , total_length = 48} , self = 76 , parent = Nothing , duration = 0.602370304000
| | | | S              , status = Success , start = 2025-09-03 11:56:14.706349434 UTC , finish
| | | | S              = 2025-09-03 11:56:15.308719738 UTC , thread_cap_info = ("ThreadId 130",
| | | | S              2, False)}
| | | | S              
| | S | |              
| |   E |              
| | F   |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   |              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F   |              = 2 , num_top_rules = 2 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | F   |              = 180} , self = 86 , parent = Nothing , duration = 0.959466718000 , status
| | F   |              = Fail , start = 2025-09-03 11:56:14.879676115 UTC , finish = 2025-09-03
| | F   |              11:56:15.839142833 UTC , thread_cap_info = ("ThreadId 137", 1, False)}
| | F   |              
| | | F |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | F |              = 2 , num_top_rules = 2 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | F |              = 180} , self = 80 , parent = Nothing , duration = 0.446578317000 , status
| | | F |              = Fail , start = 2025-09-03 11:56:14.90023933 UTC , finish = 2025-09-03
| | | F |              11:56:15.346817647 UTC , thread_cap_info = ("ThreadId 138", 1, False)}
| | | F |              
| | | | S              
E | | |                
  | | F                
F | |                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F | |                  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
F | |                  = 40} , self = 85 , parent = Nothing , duration = 0.216782552000 , status
F | |                  = Fail , start = 2025-09-03 11:56:15.383169684 UTC , finish = 2025-09-03
F | |                  11:56:15.599952236 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
F | |                  
| | | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S                = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | S                = 3 , total_length = 40} , self = 87 , parent = Nothing , duration = 0.391688502000
| | | S                , status = Success , start = 2025-09-03 11:56:15.454253398 UTC , finish
| | | S                = 2025-09-03 11:56:15.8459419 UTC , thread_cap_info = ("ThreadId 149",
| | | S                3, False)}
| | | S                
F | | |                
E | | |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | | |                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
E | | |                = 3 , total_length = 40} , self = 89 , parent = Nothing , duration = 0.274387930000
E | | |                , status = Except "AsyncCancelled" , start = 2025-09-03 11:56:15.599984501
E | | |                UTC , finish = 2025-09-03 11:56:15.874372431 UTC , thread_cap_info = ("ThreadId
E | | |                153", 3, False)}
E | | |                
| | F |                
| |   S                
E |                    
  E                    
