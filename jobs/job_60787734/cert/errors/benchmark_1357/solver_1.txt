last 634 length 2720
last 707 length 2875
CNF 707 vars 2875 clauses
last 522 length 2018
CNF 634 vars 2720 clauses
CNF 522 vars 2018 clauses
last 517 length 2090
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2583, clauses: 9413
CNF 517 vars 2090 clauses
last 2583 length 9413
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8490
last 2372 length 8490
last 4175 length 18633
CNF 2583 vars 9413 clauses
CNF 2372 vars 8490 clauses
last 4939 length 25763
CNF 4175 vars 18633 clauses
last 3812 length 19760
last 5361 length 24163
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7137, clauses: 29513
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28083
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2583, clauses: 9413, status: Satisfied, time: 0.194902622s
last 4312 length 19191
last 3980 length 20390
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8490, status: Satisfied, time: 0.174035825s
CNF 4939 vars 25763 clauses
last 6801 length 28083
CNF 3812 vars 19760 clauses
CNF 5361 vars 24163 clauses
CNF 4312 vars 19191 clauses
CNF 3980 vars 20390 clauses
last 676 length 2758
last 618 length 2662
last 474 length 1832
last 508 length 2055
CNF 676 vars 2758 clauses
CNF 618 vars 2662 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8613, clauses: 32225
CNF 474 vars 1832 clauses
CNF 508 vars 2055 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2477, clauses: 8988
last 8613 length 32225
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7091, clauses: 29337
last 2477 length 8988
CNF 8613 vars 32225 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7865, clauses: 28803
last 2266 length 8065
last 7091 length 29337
CNF 2477 vars 8988 clauses
last 6755 length 27907
last 7865 length 28803
CNF 2266 vars 8065 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31690, clauses: 133067
CNF 7091 vars 29337 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8613, clauses: 32225, status: Satisfied, time: 0.60491641s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2477, clauses: 8988, status: Satisfied, time: 0.471967949s
CNF 6755 vars 27907 clauses
CNF 7865 vars 28803 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31006, clauses: 130093
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065, status: Satisfied, time: 0.467578932s
last 547 length 2231
last 541 length 2332
last 31006 length 130093
CNF 547 vars 2231 clauses
CNF 541 vars 2332 clauses
CNF 31006 vars 130093 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7706
last 2160 length 7706
CNF 2160 vars 7706 clauses
last 4939 length 25763
last 5361 length 24163
CNF 4939 vars 25763 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7706, status: Satisfied, time: 0.12555956s
last 377 length 1469
CNF 377 vars 1469 clauses
last 456 length 1871
CNF 456 vars 1871 clauses
CNF 5361 vars 24163 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6540
last 1856 length 6540
CNF 1856 vars 6540 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 5 strict rules and 5 weak rules on 5 letters       EDG
SRS with 5 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [b, a, c, b] {- Input 0 -}
  [b, b] -> [a, a] {- Input 1 -}
  [c, a] -> [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [b, c, a, b] {- Mirror (Input 0) -}
  [b, b] -> [a, a] {- Mirror (Input 1) -}
  [a, c] -> [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [b, c, a, b] {- Mirror (Input 0) -}
  [b, b] -> [a, a] {- Mirror (Input 1) -}
  [a, a, c] -> [a] {- Mirror (Input 2) -}
  [b, a, c] -> [b] {- Mirror (Input 2) -}
  [c, a, c] -> [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [b, a, c, b] {- Input 0 -}
  [b, b] -> [a, a] {- Input 1 -}
  [c, a, a] -> [a] {- Input 2 -}
  [c, a, b] -> [b] {- Input 2 -}
  [c, a, c] -> [c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
  [a#, a] |-> [a#, c, b] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [c#, b] {- DP (Top 2) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
  [a#, a] |-> [a#, c, b] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, c, b] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 5A 7A - \
        | 4A 5A 7A - |
        | 4A 5A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, c, b] {- DP (Top 1) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, c, b] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 13A 16A 16A - \
        | 13A 16A 16A - |
        | 13A 16A 16A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 16A 16A 17A - \
        | 16A 16A 17A - |
        | 16A 16A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a, c, b] {- DP (Top 0) (Input 0) -}
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a, c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [a, a] {- DP Nontop (Input 1) -}
  [c, a, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, a, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, a, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(5/5,5)\Matrix{\Arctic}{3}\EDG(4/5,5)\Matrix{\Arctic}{3}\EDG(2/5,5)\Matrix{\Arctic}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6540, status: Unsatisfied, time: 0.058029509s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.371539585000
  min duration 0.018603109000
  total durat. 1.613035149000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.342808839000
  min duration 0.054649318000
  total durat. 1.924589828000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 6
  max duration 0.785205963000
  min duration 0.154741546000
  total durat. 2.708722306000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.781344136000
  min duration 0.169553299000
  total durat. 2.906301221000
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F                    = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
F                    = 36} , self = 55 , parent = Nothing , duration = 0.104953440000 , status
F                    = Fail , start = 2025-09-03 11:48:12.548736035 UTC , finish = 2025-09-03
F                    11:48:12.653689475 UTC , thread_cap_info = ("ThreadId 80", 2, False)}
F                    
| S                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S                  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| S                  alphabet_size = 5 , total_length = 43} , self = 65 , parent = Nothing ,
| S                  duration = 0.290730827000 , status = Success , start = 2025-09-03 11:48:12.553146263
| S                  UTC , finish = 2025-09-03 11:48:12.84387709 UTC , thread_cap_info = ("ThreadId
| S                  84", 2, False)}
| S                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | F                = 6 , num_top_rules = 6 , num_weak_rules = 24 , alphabet_size = 10 , total_length
| | F                = 192} , self = 80 , parent = Nothing , duration = 0.371539585000 , status
| | F                = Fail , start = 2025-09-03 11:48:12.554413031 UTC , finish = 2025-09-03
| | F                11:48:12.925952616 UTC , thread_cap_info = ("ThreadId 86", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | F              = 6 , num_top_rules = 6 , num_weak_rules = 24 , alphabet_size = 10 , total_length
| | | F              = 192} , self = 79 , parent = Nothing , duration = 0.342546488000 , status
| | | F              = Fail , start = 2025-09-03 11:48:12.573712331 UTC , finish = 2025-09-03
| | | F              11:48:12.916258819 UTC , thread_cap_info = ("ThreadId 87", 0, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | F            = 25 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 154} , self = 64 , parent = Nothing , duration = 0.268432265000 , status
| | | | F            = Fail , start = 2025-09-03 11:48:12.573736403 UTC , finish = 2025-09-03
| | | | F            11:48:12.842168668 UTC , thread_cap_info = ("ThreadId 92", 3, False)}
| | | | F            
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | E          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | E          = 5 , total_length = 43} , self = 67 , parent = Nothing , duration = 0.266323903000
| | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:12.579583742
| | | | | E          UTC , finish = 2025-09-03 11:48:12.845907645 UTC , thread_cap_info = ("ThreadId
| | | | | E          97", 2, False)}
| | | | | E          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | | | F        = 25 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F        = 154} , self = 82 , parent = Nothing , duration = 0.342808839000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:48:12.593624501 UTC , finish = 2025-09-03
| | | | | | F        11:48:12.93643334 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | | | | F        
| | | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | S      = 5 , total_length = 36} , self = 72 , parent = Nothing , duration = 0.284718327000
| | | | | | | S      , status = Success , start = 2025-09-03 11:48:12.613794635 UTC , finish
| | | | | | | S      = 2025-09-03 11:48:12.898512962 UTC , thread_cap_info = ("ThreadId 99",
| | | | | | | S      2, False)}
| | | | | | | S      
F | | | | | | |      
E | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | | | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
E | | | | | | |      = 5 , total_length = 36} , self = 74 , parent = Nothing , duration = 0.236951628000
E | | | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:12.662751718
E | | | | | | |      UTC , finish = 2025-09-03 11:48:12.899703346 UTC , thread_cap_info = ("ThreadId
E | | | | | | |      103", 2, False)}
E | | | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 25 , alphabet_size = 10 , total_length
| | | | | | | | F    = 166} , self = 83 , parent = Nothing , duration = 0.248186938000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 11:48:12.70715912 UTC , finish = 2025-09-03
| | | | | | | | F    11:48:12.955346058 UTC , thread_cap_info = ("ThreadId 111", 0, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 25 , alphabet_size = 10 , total_length
| | | | | | | | | F  = 166} , self = 81 , parent = Nothing , duration = 0.196782432000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 11:48:12.736896323 UTC , finish = 2025-09-03
| | | | | | | | | F  11:48:12.933678755 UTC , thread_cap_info = ("ThreadId 110", 0, False)}
| | | | | | | | | F  
| | | | F | | | | |  
| S | |   | | | | |  
|   | |   E | | | |  
| F | |     | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | |     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |     | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F | |     | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F | |     | | | |  = 40} , self = 84 , parent = Nothing , duration = 0.167003395000 , status
| F | |     | | | |  = Fail , start = 2025-09-03 11:48:12.846301908 UTC , finish = 2025-09-03
| F | |     | | | |  11:48:13.013305303 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| F | |     | | | |  
| | | | F   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F   | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F   | | | |  = 40} , self = 86 , parent = Nothing , duration = 0.186416134000 , status
| | | | F   | | | |  = Fail , start = 2025-09-03 11:48:12.852107748 UTC , finish = 2025-09-03
| | | | F   | | | |  11:48:13.038523882 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | | F   | | | |  
| | | | |   | S | |  
E | | | |   |   | |  
F | | | |   |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | | | |   |   | |  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
F | | | |   |   | |  = 33} , self = 85 , parent = Nothing , duration = 0.138512552000 , status
F | | | |   |   | |  = Fail , start = 2025-09-03 11:48:12.900002593 UTC , finish = 2025-09-03
F | | | |   |   | |  11:48:13.038515145 UTC , thread_cap_info = ("ThreadId 130", 2, False)}
F | | | |   |   | |  
| | | | | F |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F |   | |  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F |   | |  = 33} , self = 87 , parent = Nothing , duration = 0.250833091000 , status
| | | | | F |   | |  = Fail , start = 2025-09-03 11:48:12.902825221 UTC , finish = 2025-09-03
| | | | | F |   | |  11:48:13.153658312 UTC , thread_cap_info = ("ThreadId 131", 2, False)}
| | | | | F |   | |  
| | | F | | |   | |  
| | | S | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | |   | |  = 30 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 24 ,
| | | S | | |   | |  alphabet_size = 10 , total_length = 192} , self = 88 , parent = Nothing
| | | S | | |   | |  , duration = 0.781344136000 , status = Success , start = 2025-09-03 11:48:12.916281278
| | | S | | |   | |  UTC , finish = 2025-09-03 11:48:13.697625414 UTC , thread_cap_info = ("ThreadId
| | | S | | |   | |  132", 0, False)}
| | | S | | |   | |  
| | F | | | |   | |  
| | E | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 30
| | E | | | |   | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 24 , alphabet_size
| | E | | | |   | |  = 10 , total_length = 192} , self = 92 , parent = Nothing , duration =
| | E | | | |   | |  0.785205963000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | | |   | |  11:48:12.925981094 UTC , finish = 2025-09-03 11:48:13.711187057 UTC , thread_cap_info
| | E | | | |   | |  = ("ThreadId 133", 0, False)}
| | E | | | |   | |  
| | | | | | |   | F  
| | | | | | F   |    
| | | | | |     F    
| F | | | |          
| S | | | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |          = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| S | | | |          = 5 , total_length = 40} , self = 90 , parent = Nothing , duration = 0.685229348000
| S | | | |          , status = Success , start = 2025-09-03 11:48:13.013333072 UTC , finish
| S | | | |          = 2025-09-03 11:48:13.69856242 UTC , thread_cap_info = ("ThreadId 142",
| S | | | |          2, False)}
| S | | | |          
F | | | | |          
  | | | F |          
S | | |   |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |   |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |   |          = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
S | | |   |          = 5 , total_length = 33} , self = 102 , parent = Nothing , duration = 0.694725284000
S | | |   |          , status = Success , start = 2025-09-03 11:48:13.038549861 UTC , finish
S | | |   |          = 2025-09-03 11:48:13.733275145 UTC , thread_cap_info = ("ThreadId 143",
S | | |   |          2, False)}
S | | |   |          
| | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | E |          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | E |          = 5 , total_length = 40} , self = 93 , parent = Nothing , duration = 0.672702983000
| | | | E |          , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:13.038554206
| | | | E |          UTC , finish = 2025-09-03 11:48:13.711257189 UTC , thread_cap_info = ("ThreadId
| | | | E |          144", 2, False)}
| | | | E |          
| | | | | F          
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | E          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | E          = 5 , total_length = 33} , self = 104 , parent = Nothing , duration = 0.592796283000
| | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:13.16573239
| | | | | E          UTC , finish = 2025-09-03 11:48:13.758528673 UTC , thread_cap_info = ("ThreadId
| | | | | E          145", 2, False)}
| | | | | E          
| | | S | |          
| S |   | |          
|   E   | |          
|       E |          
| F       |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F       |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F       |          = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| F       |          = 6 , num_top_rules = 6 , num_weak_rules = 24 , alphabet_size = 10 , total_length
| F       |          = 192} , self = 113 , parent = Nothing , duration = 0.267746260000 , status
| F       |          = Fail , start = 2025-09-03 11:48:13.72165925 UTC , finish = 2025-09-03
| F       |          11:48:13.98940551 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| F       |          
S |       |          
F |       |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |       |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |       |          = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
F |       |          = 6 , num_top_rules = 6 , num_weak_rules = 24 , alphabet_size = 10 , total_length
F |       |          = 192} , self = 119 , parent = Nothing , duration = 0.305433177000 , status
F |       |          = Fail , start = 2025-09-03 11:48:13.736274371 UTC , finish = 2025-09-03
F |       |          11:48:14.041707548 UTC , thread_cap_info = ("ThreadId 162", 0, False)}
F |       |          
| |       E          
| | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S                = 5 , total_length = 32} , self = 111 , parent = Nothing , duration = 0.169553299000
| | S                , status = Success , start = 2025-09-03 11:48:13.793802355 UTC , finish
| | S                = 2025-09-03 11:48:13.963355654 UTC , thread_cap_info = ("ThreadId 169",
| | S                2, False)}
| | S                
| | | E              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | E              = 5 , total_length = 32} , self = 115 , parent = Nothing , duration = 0.154741546000
| | | E              , status = Except "AsyncCancelled" , start = 2025-09-03 11:48:13.838880992
| | | E              UTC , finish = 2025-09-03 11:48:13.993622538 UTC , thread_cap_info = ("ThreadId
| | | E              170", 2, False)}
| | | E              
| | S |              
| F   |              
|     E              
F                    
