last 2560 length 10364
CNF 2560 vars 10364 clauses
last 2748 length 11229
CNF 2748 vars 11229 clauses
last 4645 length 19378
last 10364 length 45345
last 4837 length 20200
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5478, clauses: 22913
CNF 4645 vars 19378 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 24924
CNF 4837 vars 20200 clauses
last 5478 length 22913
last 15728 length 69256
CNF 10364 vars 45345 clauses
last 6011 length 24924
CNF 5478 vars 22913 clauses
CNF 15728 vars 69256 clauses
CNF 6011 vars 24924 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12662, clauses: 53031
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13925, clauses: 58410
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5478, clauses: 22913, status: Unsatisfied, time: 0.831385633s
last 12662 length 53031
last 13925 length 58410
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 24924, status: Unsatisfied, time: 1.064280872s
CNF 12662 vars 53031 clauses
CNF 13925 vars 58410 clauses
last 47470 length 204722
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8308, clauses: 35387
last 8308 length 35387
CNF 8308 vars 35387 clauses
last 28057 length 120161
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9150, clauses: 39115
last 9150 length 39115
CNF 28057 vars 120161 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8308, clauses: 35387, status: Unsatisfied, time: 0.42088026s
CNF 9150 vars 39115 clauses
CNF 47470 vars 204722 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9150, clauses: 39115, status: Satisfied, time: 0.331948006s
last 24969 length 102649
CNF 24969 vars 102649 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8954, clauses: 40993
last 8954 length 40993
last 1402 length 5828
CNF 1402 vars 5828 clauses
last 1197 length 5055
CNF 1197 vars 5055 clauses
CNF 8954 vars 40993 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2760, clauses: 10265
last 2760 length 10265
CNF 2760 vars 10265 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2760, clauses: 10265, status: Unsatisfied, time: 0.060540643s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12662, clauses: 53031, status: Unsatisfied, time: 2.412254747s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5705, clauses: 24298
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8954, clauses: 40993, status: Unsatisfied, time: 0.752889117s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9348, clauses: 39188
last 5705 length 24298
last 9348 length 39188
CNF 5705 vars 24298 clauses
CNF 9348 vars 39188 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5705, clauses: 24298, status: Satisfied, time: 0.441633835s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20346, clauses: 92519
last 20346 length 92519
**************************************************
summary
**************************************************
SRS with 5 rules on 3 letters       DP
SRS with 22 strict rules and 5 weak rules on 6 letters       weights
SRS with 18 strict rules and 5 weak rules on 6 letters       EDG
SRS with 18 strict rules and 5 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, a] -> [b, b] {- Input 0 -}
  [b, b, a, a] -> [a, a, b, b] {- Input 1 -}
  [b, b, b, b, c, c] -> [c, c, a, a] {- Input 2 -}
  [b, b, b, b] -> [a, a, a, a, a, a] {- Input 3 -}
  [c, c, a, a] -> [b, b, a, a, c, c] {- Input 4 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 5) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 4) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, b, b, c, c] |-> [a#] {- DP (Top 3) (Input 2) -}
  [b#, b, b, b, c, c] |-> [a#, a] {- DP (Top 2) (Input 2) -}
  [b#, b, b, b, c, c] |-> [c#, a, a] {- DP (Top 1) (Input 2) -}
  [b#, b, b, b, c, c] |-> [c#, c, a, a] {- DP (Top 0) (Input 2) -}
  [c#, c, a, a] |-> [a#, a, c, c] {- DP (Top 2) (Input 4) -}
  [c#, c, a, a] |-> [a#, c, c] {- DP (Top 3) (Input 4) -}
  [c#, c, a, a] |-> [b#, a, a, c, c] {- DP (Top 1) (Input 4) -}
  [c#, c, a, a] |-> [b#, b, a, a, c, c] {- DP (Top 0) (Input 4) -}
  [c#, c, a, a] |-> [c#] {- DP (Top 5) (Input 4) -}
  [c#, c, a, a] |-> [c#, c] {- DP (Top 4) (Input 4) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 5) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 4) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, b, b, c, c] |-> [c#, c, a, a] {- DP (Top 0) (Input 2) -}
  [c#, c, a, a] |-> [a#, a, c, c] {- DP (Top 2) (Input 4) -}
  [c#, c, a, a] |-> [a#, c, c] {- DP (Top 3) (Input 4) -}
  [c#, c, a, a] |-> [b#, a, a, c, c] {- DP (Top 1) (Input 4) -}
  [c#, c, a, a] |-> [b#, b, a, a, c, c] {- DP (Top 0) (Input 4) -}
  [c#, c, a, a] |-> [c#, c] {- DP (Top 4) (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 5) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 4) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, b, b, c, c] |-> [c#, c, a, a] {- DP (Top 0) (Input 2) -}
  [c#, c, a, a] |-> [a#, a, c, c] {- DP (Top 2) (Input 4) -}
  [c#, c, a, a] |-> [a#, c, c] {- DP (Top 3) (Input 4) -}
  [c#, c, a, a] |-> [b#, a, a, c, c] {- DP (Top 1) (Input 4) -}
  [c#, c, a, a] |-> [b#, b, a, a, c, c] {- DP (Top 0) (Input 4) -}
  [c#, c, a, a] |-> [c#, c] {- DP (Top 4) (Input 4) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  ( a
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 1 2 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 3 0 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 1 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 3 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  ( a
  , Wk  / 0 1 0 \
        | 1 0 2 |
        \ 0 0 1 / )
  ( b
  , Wk  / 0 1 3 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 3 0 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 0 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 0 1 3 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  EDG

**************************************************
skeleton: (5,3)\Deepee(22/5,6)\Weight\EDG(18/5,6)\Matrix{\Natural}{3}\EDG(2/5,5)\Matrix{\Natural}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 20346 vars 92519 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.455424898000
  min duration 0.068031211000
  total durat. 4.790596669000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 45
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 486}
    , self = 61
    , parent = Nothing
    , duration = 1.295577912000
    , status = Fail
    , start = 2025-09-03 10:46:55.703677392 UTC
    , finish = 2025-09-03 10:46:56.999255304 UTC
    , thread_cap_info = ("ThreadId 64", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 159
      , num_strict_rules = 114
      , num_top_rules = 114
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1500}
    , self = 69
    , parent = Nothing
    , duration = 2.455424898000
    , status = Fail
    , start = 2025-09-03 10:46:56.182524877 UTC
    , finish = 2025-09-03 10:46:58.637949775 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.148864040000
  min duration 3.148864040000
  total durat. 3.148864040000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 171
      , num_strict_rules = 126
      , num_top_rules = 126
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1602}
    , self = 78
    , parent = Nothing
    , duration = 3.148864040000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:56.118307897 UTC
    , finish = 2025-09-03 10:46:59.267171937 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.840223373000
  min duration 0.058868038000
  total durat. 6.303131031000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 159
      , num_strict_rules = 114
      , num_top_rules = 114
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1500}
    , self = 67
    , parent = Nothing
    , duration = 2.426935048000
    , status = Fail
    , start = 2025-09-03 10:46:56.186641198 UTC
    , finish = 2025-09-03 10:46:58.613576246 UTC
    , thread_cap_info = ("ThreadId 108", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 171
      , num_strict_rules = 126
      , num_top_rules = 126
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1602}
    , self = 77
    , parent = Nothing
    , duration = 2.840223373000
    , status = Fail
    , start = 2025-09-03 10:46:56.127177077 UTC
    , finish = 2025-09-03 10:46:58.96740045 UTC
    , thread_cap_info = ("ThreadId 100", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.259706554000
  min duration 3.259706554000
  total durat. 3.259706554000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 80
    , parent = Nothing
    , duration = 3.259706554000
    , status = Fail
    , start = 2025-09-03 10:46:56.227482272 UTC
    , finish = 2025-09-03 10:46:59.487188826 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.402152965000
  min duration 1.282521536000
  total durat. 3.684674501000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 58}
    , self = 84
    , parent = Nothing
    , duration = 1.282521536000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:58.908311107 UTC
    , finish = 2025-09-03 10:47:00.190832643 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 176}
    , self = 68
    , parent = Nothing
    , duration = 2.402152965000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:56.229519729 UTC
    , finish = 2025-09-03 10:46:58.631672694 UTC
    , thread_cap_info = ("ThreadId 111", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.029632847000
  min duration 0.812915765000
  total durat. 1.842548612000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 58}
    , self = 82
    , parent = Nothing
    , duration = 1.029632847000
    , status = Success
    , start = 2025-09-03 10:46:58.967189855 UTC
    , finish = 2025-09-03 10:46:59.996822702 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.088324224000
  min duration 1.088324224000
  total durat. 1.088324224000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 64
    , parent = Nothing
    , duration = 1.088324224000
    , status = Fail
    , start = 2025-09-03 10:46:57.189288874 UTC
    , finish = 2025-09-03 10:46:58.277613098 UTC
    , thread_cap_info = ("ThreadId 116", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.596292730000
  min duration 0.161812379000
  total durat. 3.058264026000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 62
    , parent = Nothing
    , duration = 1.300158917000
    , status = Fail
    , start = 2025-09-03 10:46:55.8672226 UTC
    , finish = 2025-09-03 10:46:57.167381517 UTC
    , thread_cap_info = ("ThreadId 85", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 176}
    , self = 63
    , parent = Nothing
    , duration = 1.596292730000
    , status = Fail
    , start = 2025-09-03 10:46:56.030877094 UTC
    , finish = 2025-09-03 10:46:57.627169824 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.356655068000
  min duration 1.356655068000
  total durat. 1.356655068000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 81
    , parent = Nothing
    , duration = 1.356655068000
    , status = Fail
    , start = 2025-09-03 10:46:58.292168746 UTC
    , finish = 2025-09-03 10:46:59.648823814 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.650376259000
  min duration 3.650376259000
  total durat. 3.650376259000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 44}
    , self = 79
    , parent = Nothing
    , duration = 3.650376259000
    , status = Fail
    , start = 2025-09-03 10:46:55.691389057 UTC
    , finish = 2025-09-03 10:46:59.341765316 UTC
    , thread_cap_info = ("ThreadId 35", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.379310128000
  min duration 4.379310128000
  total durat. 4.379310128000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 44}
    , self = 87
    , parent = Nothing
    , duration = 4.379310128000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:56.167887346 UTC
    , finish = 2025-09-03 10:47:00.547197474 UTC
    , thread_cap_info = ("ThreadId 103", 1, False)}
**************************************************
F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                        = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                        = 44} , self = 79 , parent = Nothing , duration = 3.650376259000 , status
F                        = Fail , start = 2025-09-03 10:46:55.691389057 UTC , finish = 2025-09-03
F                        10:46:59.341765316 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                        
| F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                      = True}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules
| F                      = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 44} , self
| F                      = 49 , parent = Nothing , duration = 0.316016405000 , status = Fail , start
| F                      = 2025-09-03 10:46:55.691435421 UTC , finish = 2025-09-03 10:46:56.007451826
| F                      UTC , thread_cap_info = ("ThreadId 22", 2, False)}
| F                      
| | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                    = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| | F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                    = 44} , self = 54 , parent = Nothing , duration = 0.426848274000 , status
| | F                    = Fail , start = 2025-09-03 10:46:55.691442851 UTC , finish = 2025-09-03
| | F                    10:46:56.118291125 UTC , thread_cap_info = ("ThreadId 43", 1, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F                  = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                  = 486} , self = 61 , parent = Nothing , duration = 1.295577912000 , status
| | | F                  = Fail , start = 2025-09-03 10:46:55.703677392 UTC , finish = 2025-09-03
| | | F                  10:46:56.999255304 UTC , thread_cap_info = ("ThreadId 64", 0, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | F                = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F                = 486} , self = 60 , parent = Nothing , duration = 0.586760310000 , status
| | | | F                = Fail , start = 2025-09-03 10:46:55.703683752 UTC , finish = 2025-09-03
| | | | F                10:46:56.290444062 UTC , thread_cap_info = ("ThreadId 66", 0, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | F              = 16 , num_top_rules = 16 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | F              = 163} , self = 58 , parent = Nothing , duration = 0.510198492000 , status
| | | | | F              = Fail , start = 2025-09-03 10:46:55.705955095 UTC , finish = 2025-09-03
| | | | | F              10:46:56.216153587 UTC , thread_cap_info = ("ThreadId 72", 2, False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | | | F            = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | | F            = 176} , self = 59 , parent = Nothing , duration = 0.461364156000 , status
| | | | | | F            = Fail , start = 2025-09-03 10:46:55.766080922 UTC , finish = 2025-09-03
| | | | | | F            10:46:56.227445078 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | | | | F          = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | | | F          = 176} , self = 51 , parent = Nothing , duration = 0.259729855000 , status
| | | | | | | F          = Fail , start = 2025-09-03 10:46:55.767820502 UTC , finish = 2025-09-03
| | | | | | | F          10:46:56.027550357 UTC , thread_cap_info = ("ThreadId 82", 2, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F        = 21 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5
| | | | | | | | F        , alphabet_size = 6 , total_length = 163} , self = 62 , parent = Nothing
| | | | | | | | F        , duration = 1.300158917000 , status = Fail , start = 2025-09-03 10:46:55.8672226
| | | | | | | | F        UTC , finish = 2025-09-03 10:46:57.167381517 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F        85", 2, False)}
| | | | | | | | F        
| | | | | | | | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | S      = Size { num_rules = 288 , num_strict_rules = 243 , num_top_rules = 243
| | | | | | | | | S      , num_weak_rules = 45 , alphabet_size = 18 , total_length = 2619} , self
| | | | | | | | | S      = 48 , parent = Nothing , duration = 0.111449258000 , status = Success
| | | | | | | | | S      , start = 2025-09-03 10:46:55.878918445 UTC , finish = 2025-09-03 10:46:55.990367703
| | | | | | | | | S      UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | | | | | | | S      
| | | | | | | | | | S    Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | | | | S    verbose = False}" , input_size = Size { num_rules = 186 , num_strict_rules
| | | | | | | | | | S    = 141 , num_top_rules = 141 , num_weak_rules = 45 , alphabet_size = 18
| | | | | | | | | | S    , total_length = 1764} , self = 50 , parent = Nothing , duration = 0.102611394000
| | | | | | | | | | S    , status = Success , start = 2025-09-03 10:46:55.919643453 UTC , finish
| | | | | | | | | | S    = 2025-09-03 10:46:56.022254847 UTC , thread_cap_info = ("ThreadId 88",
| | | | | | | | | | S    1, False)}
| | | | | | | | | | S    
| | | | | | | | | S |    
| F | | | | | | |   |    
|   | | | | | | |   S    
|   | | | | | F |        
| F | | | | |   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | |   |        = 23 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 5
| F | | | | |   |        , alphabet_size = 6 , total_length = 176} , self = 63 , parent = Nothing
| F | | | | |   |        , duration = 1.596292730000 , status = Fail , start = 2025-09-03 10:46:56.030877094
| F | | | | |   |        UTC , finish = 2025-09-03 10:46:57.627169824 UTC , thread_cap_info = ("ThreadId
| F | | | | |   |        97", 2, False)}
| F | | | | |   |        
| | | | | | | S |        Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | S |        verbose = False}" , input_size = Size { num_rules = 174 , num_strict_rules
| | | | | | | S |        = 129 , num_top_rules = 129 , num_weak_rules = 45 , alphabet_size = 18
| | | | | | | S |        , total_length = 1662} , self = 55 , parent = Nothing , duration = 0.128994015000
| | | | | | | S |        , status = Success , start = 2025-09-03 10:46:56.035448998 UTC , finish
| | | | | | | S |        = 2025-09-03 10:46:56.164443013 UTC , thread_cap_info = ("ThreadId 90",
| | | | | | | S |        1, False)}
| | | | | | | S |        
| | F | | | | | |        
| | E | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 171 , num_strict_rules
| | E | | | | | |        = 126 , num_top_rules = 126 , num_weak_rules = 45 , alphabet_size = 15
| | E | | | | | |        , total_length = 1602} , self = 78 , parent = Nothing , duration = 3.148864040000
| | E | | | | | |        , status = Except "<<timeout>>" , start = 2025-09-03 10:46:56.118307897
| | E | | | | | |        UTC , finish = 2025-09-03 10:46:59.267171937 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |        99", 1, False)}
| | E | | | | | |        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 171 , num_strict_rules
| | | | | | | | | F      = 126 , num_top_rules = 126 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | | F      , total_length = 1602} , self = 77 , parent = Nothing , duration = 2.840223373000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 10:46:56.127177077 UTC , finish =
| | | | | | | | | F      2025-09-03 10:46:58.96740045 UTC , thread_cap_info = ("ThreadId 100", 1,
| | | | | | | | | F      False)}
| | | | | | | | | F      
| | | | | | | S | |      
| | | | | | | E | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | E | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | E | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | E | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | E | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | E | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | E | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | E | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | E | |      = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| | | | | | | E | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | | | E | |      = 44} , self = 87 , parent = Nothing , duration = 4.379310128000 , status
| | | | | | | E | |      = Except "AsyncCancelled" , start = 2025-09-03 10:46:56.167887346 UTC ,
| | | | | | | E | |      finish = 2025-09-03 10:47:00.547197474 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |      103", 1, False)}
| | | | | | | E | |      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 159 , num_strict_rules
| | | | | | | | | | F    = 114 , num_top_rules = 114 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | | | F    , total_length = 1500} , self = 69 , parent = Nothing , duration = 2.455424898000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 10:46:56.182524877 UTC , finish =
| | | | | | | | | | F    2025-09-03 10:46:58.637949775 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | | | | F    0, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 159 , num_strict_rules
| | | | | | | | | | | F  = 114 , num_top_rules = 114 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | | | | F  , total_length = 1500} , self = 67 , parent = Nothing , duration = 2.426935048000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 10:46:56.186641198 UTC , finish =
| | | | | | | | | | | F  2025-09-03 10:46:58.613576246 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | | | F  2, False)}
| | | | | | | | | | | F  
| | | | | F | | | | | |  
| | | | |   F | | | | |  
| | | | | F   | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | | | | F   | | | | |  , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5 , alphabet_size
| | | | | F   | | | | |  = 6 , total_length = 163} , self = 80 , parent = Nothing , duration = 3.259706554000
| | | | | F   | | | | |  , status = Fail , start = 2025-09-03 10:46:56.227482272 UTC , finish =
| | | | | F   | | | | |  2025-09-03 10:46:59.487188826 UTC , thread_cap_info = ("ThreadId 109",
| | | | | F   | | | | |  2, False)}
| | | | | F   | | | | |  
| | | | | | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 23
| | | | | | E | | | | |  , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size
| | | | | | E | | | | |  = 6 , total_length = 176} , self = 68 , parent = Nothing , duration = 2.402152965000
| | | | | | E | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:56.229519729
| | | | | | E | | | | |  UTC , finish = 2025-09-03 10:46:58.631672694 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | | | |  111", 2, False)}
| | | | | | E | | | | |  
| | | | F | | | | | | |  
| | | F   | | | | | | |  
| | |     | | | F | | |  
| | | F   | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F   | | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F   | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F   | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | | F   | | |   | | |  , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5 , alphabet_size
| | | F   | | |   | | |  = 6 , total_length = 163} , self = 64 , parent = Nothing , duration = 1.088324224000
| | | F   | | |   | | |  , status = Fail , start = 2025-09-03 10:46:57.189288874 UTC , finish =
| | | F   | | |   | | |  2025-09-03 10:46:58.277613098 UTC , thread_cap_info = ("ThreadId 116",
| | | F   | | |   | | |  2, False)}
| | | F   | | |   | | |  
| F | |   | | |   | | |  
| S | |   | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S | |   | | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | |   | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S | |   | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |   | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |   | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 23
| S | |   | | |   | | |  , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size
| S | |   | | |   | | |  = 6 , total_length = 176} , self = 65 , parent = Nothing , duration = 0.812915765000
| S | |   | | |   | | |  , status = Success , start = 2025-09-03 10:46:57.688364461 UTC , finish
| S | |   | | |   | | |  = 2025-09-03 10:46:58.501280226 UTC , thread_cap_info = ("ThreadId 119",
| S | |   | | |   | | |  2, False)}
| S | |   | | |   | | |  
| | | F   | | |   | | |  
| | | F   | | |   | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   | | |   | | |  = 21 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5
| | | F   | | |   | | |  , alphabet_size = 6 , total_length = 163} , self = 81 , parent = Nothing
| | | F   | | |   | | |  , duration = 1.356655068000 , status = Fail , start = 2025-09-03 10:46:58.292168746
| | | F   | | |   | | |  UTC , finish = 2025-09-03 10:46:59.648823814 UTC , thread_cap_info = ("ThreadId
| | | F   | | |   | | |  124", 2, False)}
| | | F   | | |   | | |  
| S | |   | | |   | | |  
|   | |   | | |   | | F  
|   | |   | E |   | |    
|   | |   |   |   | F    
| F | |   |   |   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |   |   |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |   |   |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F | |   |   |   |      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F | |   |   |   |      = 58} , self = 75 , parent = Nothing , duration = 0.130614407000 , status
| F | |   |   |   |      = Fail , start = 2025-09-03 10:46:58.74960288 UTC , finish = 2025-09-03
| F | |   |   |   |      10:46:58.880217287 UTC , thread_cap_info = ("ThreadId 133", 2, False)}
| F | |   |   |   |      
| | | | F |   |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F |   |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F |   |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F |   |   |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | F |   |   |      = 5 , total_length = 58} , self = 76 , parent = Nothing , duration = 0.161812379000
| | | | F |   |   |      , status = Fail , start = 2025-09-03 10:46:58.800111321 UTC , finish =
| | | | F |   |   |      2025-09-03 10:46:58.9619237 UTC , thread_cap_info = ("ThreadId 137", 2,
| | | | F |   |   |      False)}
| | | | F |   |   |      
| F | | | |   |   |      
| E | | | |   |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | |   |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | |   |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | |   |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | |   |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | |   |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E | | | |   |   |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| E | | | |   |   |      = 5 , total_length = 58} , self = 84 , parent = Nothing , duration = 1.282521536000
| E | | | |   |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:58.908311107
| E | | | |   |   |      UTC , finish = 2025-09-03 10:47:00.190832643 UTC , thread_cap_info = ("ThreadId
| E | | | |   |   |      139", 2, False)}
| E | | | |   |   |      
| | | | F |   |   |      
| | | | S |   |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | S |   |   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S |   |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S |   |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |   |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |   |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | S |   |   |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | S |   |   |      = 5 , total_length = 58} , self = 82 , parent = Nothing , duration = 1.029632847000
| | | | S |   |   |      , status = Success , start = 2025-09-03 10:46:58.967189855 UTC , finish
| | | | S |   |   |      = 2025-09-03 10:46:59.996822702 UTC , thread_cap_info = ("ThreadId 140",
| | | | S |   |   |      2, False)}
| | | | S |   |   |      
| | | | | |   |   F      
| | E | | |   |          
F |   | | |   |          
  |   | | F   |          
  |   F |     |          
  |     S     |          
  E           |          
              E          
