last 3639 length 21287
CNF 3639 vars 21287 clauses
last 3540 length 18116
CNF 3540 vars 18116 clauses
last 1790 length 8374
last 2530 length 11817
CNF 1790 vars 8374 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2264, clauses: 8373
CNF 2530 vars 11817 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2070, clauses: 8138
last 2264 length 8373
last 2070 length 8138
CNF 2264 vars 8373 clauses
CNF 2070 vars 8138 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7684, clauses: 32183
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6267, clauses: 26116
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2264, clauses: 8373, status: Satisfied, time: 0.109169098s
last 7684 length 32183
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2070, clauses: 8138, status: Unsatisfied, time: 0.171430408s
last 6267 length 26116
CNF 6267 vars 26116 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3797, clauses: 16111
last 3797 length 16111
CNF 3797 vars 16111 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 3 letters       DP
SRS with 9 strict rules and 1 weak rules on 4 letters       EDG
SRS with 2 strict rules and 1 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a, c, a, a, a] -> [ a , a , a , a , a , b , a , c , a , a , b , a , c ] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b, a, c, a, a, a] ->= [ a , a , a , a , a , b , a , c , a , a , b , a , c ] {- DP Nontop (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [ a# , a , a , a , a , b , a , c , a , a , b , a , c ] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [ a# , a , a , a , b , a , c , a , a , b , a , c ] {- DP (Top 1) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [ a# , a , a , b , a , c , a , a , b , a , c ] {- DP (Top 2) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [a#, a, b, a, c] {- DP (Top 8) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [ a# , a , b , a , c , a , a , b , a , c ] {- DP (Top 3) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [a#, b, a, c] {- DP (Top 9) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [ a# , b , a , c , a , a , b , a , c ] {- DP (Top 4) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [a#, c] {- DP (Top 11) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [a#, c, a, a, b, a, c] {- DP (Top 6) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a, c, a, a, a] |-> [ a# , a , b , a , c , a , a , b , a , c ] {- DP (Top 3) (Input 0) -}
  [a#, a, b, a, c, a, a, a] |-> [a#, a, b, a, c] {- DP (Top 8) (Input 0) -}
  [a, a, b, a, c, a, a, a] ->= [ a , a , a , a , a , b , a , c , a , a , b , a , c ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 3A 4A 5A - \
        | 3A 4A 5A - |
        | 3A 4A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, a, b, a, c, a, a, a] ->= [ a , a , a , a , a , b , a , c , a , a , b , a , c ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,3)\Deepee(9/1,4)\EDG(2/1,4)\Matrix{\Arctic}{3}(0/1,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.348735542000
  min duration 1.348735542000
  total durat. 1.348735542000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 21}
    , self = 67
    , parent = Nothing
    , duration = 1.348735542000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:36.522114558 UTC
    , finish = 2025-09-03 12:15:37.8708501 UTC
    , thread_cap_info = ("ThreadId 54", 2, False)}
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F            = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 21} , self
F            = 58 , parent = Nothing , duration = 0.628438133000 , status = Fail , start
F            = 2025-09-03 12:15:36.517661823 UTC , finish = 2025-09-03 12:15:37.146099956
F            UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F            
| E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E          = 21} , self = 67 , parent = Nothing , duration = 1.348735542000 , status
| E          = Except "AsyncCancelled" , start = 2025-09-03 12:15:36.522114558 UTC ,
| E          finish = 2025-09-03 12:15:37.8708501 UTC , thread_cap_info = ("ThreadId
| E          54", 2, False)}
| E          
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F        = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | F        = 52} , self = 57 , parent = Nothing , duration = 0.294109832000 , status
| | F        = Fail , start = 2025-09-03 12:15:36.675833785 UTC , finish = 2025-09-03
| | F        12:15:36.969943617 UTC , thread_cap_info = ("ThreadId 87", 2, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | F      = 52} , self = 56 , parent = Nothing , duration = 0.221725775000 , status
| | | F      = Fail , start = 2025-09-03 12:15:36.688471648 UTC , finish = 2025-09-03
| | | F      12:15:36.910197423 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | F    = 57} , self = 60 , parent = Nothing , duration = 0.285479582000 , status
| | | | F    = Fail , start = 2025-09-03 12:15:36.893749264 UTC , finish = 2025-09-03
| | | | F    12:15:37.179228846 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | F    
| | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | F  = 57} , self = 59 , parent = Nothing , duration = 0.252215645000 , status
| | | | | F  = Fail , start = 2025-09-03 12:15:36.900843656 UTC , finish = 2025-09-03
| | | | | F  12:15:37.153059301 UTC , thread_cap_info = ("ThreadId 101", 2, False)}
| | | | | F  
| | | F | |  
| | F   | |  
| | S   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | S   | |  = 4 , total_length = 52} , self = 61 , parent = Nothing , duration = 0.520671377000
| | S   | |  , status = Success , start = 2025-09-03 12:15:36.989006114 UTC , finish
| | S   | |  = 2025-09-03 12:15:37.509677491 UTC , thread_cap_info = ("ThreadId 105",
| | S   | |  2, False)}
| | S   | |  
| | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | E | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | E | |  = 4 , total_length = 52} , self = 63 , parent = Nothing , duration = 0.560095219000
| | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.048470268
| | | E | |  UTC , finish = 2025-09-03 12:15:37.608565487 UTC , thread_cap_info = ("ThreadId
| | | E | |  107", 2, False)}
| | | E | |  
F | | | | |  
  | | | | F  
F | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | |    = 4 , total_length = 57} , self = 64 , parent = Nothing , duration = 0.455482824000
F | | | |    , status = Fail , start = 2025-09-03 12:15:37.153082827 UTC , finish =
F | | | |    2025-09-03 12:15:37.608565651 UTC , thread_cap_info = ("ThreadId 109",
F | | | |    2, False)}
F | | | |    
| | | | F    
| | S |      
| |   E      
F |          
  E          
