last 1492 length 6476
last 1484 length 6318
CNF 1492 vars 6476 clauses
CNF 1484 vars 6318 clauses
last 1429 length 6204
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2625, clauses: 9926
last 2625 length 9926
CNF 1429 vars 6204 clauses
CNF 2625 vars 9926 clauses
last 1359 length 5651
CNF 1359 vars 5651 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2625, clauses: 9926, status: Unsatisfied, time: 0.105862229s
last 3579 length 16682
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8945, clauses: 37543
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2637, clauses: 9923
last 5444 length 25333
CNF 3579 vars 16682 clauses
last 6119 length 28772
last 8945 length 37543
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 22673
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8946, clauses: 37543
last 5620 length 25484
last 2637 length 9923
last 7997 length 38171
CNF 5444 vars 25333 clauses
last 7664 length 36506
CNF 6119 vars 28772 clauses
last 5433 length 22673
CNF 8945 vars 37543 clauses
last 8946 length 37543
CNF 2637 vars 9923 clauses
CNF 5620 vars 25484 clauses
CNF 7997 vars 38171 clauses
CNF 7664 vars 36506 clauses
CNF 5433 vars 22673 clauses
CNF 8946 vars 37543 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2637, clauses: 9923, status: Unsatisfied, time: 0.307893537s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6908, clauses: 26700
last 6908 length 26700
CNF 6908 vars 26700 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22691
last 5439 length 22691
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6821, clauses: 26301
last 6821 length 26301
CNF 5439 vars 22691 clauses
CNF 6821 vars 26301 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6908, clauses: 26700, status: Satisfied, time: 0.92169755s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6821, clauses: 26301, status: Satisfied, time: 0.803720527s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8945, clauses: 37543, status: Unsatisfied, time: 1.77750011s
last 6906 length 32688
CNF 6906 vars 32688 clauses
last 4990 length 22022
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 22673, status: Unsatisfied, time: 1.795972982s
CNF 4990 vars 22022 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4329, clauses: 17337
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8946, clauses: 37543, status: Unsatisfied, time: 2.017707873s
last 5620 length 25484
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22691, status: Unsatisfied, time: 1.558678763s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6066, clauses: 23273
last 7664 length 36506
last 4329 length 17337
CNF 5620 vars 25484 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4349, clauses: 17309
last 6066 length 23273
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15212, clauses: 66548
CNF 4329 vars 17337 clauses
CNF 7664 vars 36506 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23840, clauses: 100711
last 4349 length 17309
CNF 6066 vars 23273 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15221, clauses: 66575
last 15212 length 66548
last 23840 length 100711
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6821, clauses: 26301
last 15221 length 66575
CNF 4349 vars 17309 clauses
last 6821 length 26301
CNF 15212 vars 66548 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4329, clauses: 17337, status: Unsatisfied, time: 1.128219432s
CNF 6821 vars 26301 clauses
CNF 15221 vars 66575 clauses
CNF 23840 vars 100711 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4349, clauses: 17309, status: Unsatisfied, time: 0.742282583s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6821, clauses: 26301, status: Satisfied, time: 0.689695267s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 12 rules on 4 letters       mirror
SRS with 12 rules on 4 letters       DP
SRS with 60 strict rules and 12 weak rules on 8 letters       weights
SRS with 12 strict rules and 12 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 6 strict rules and 12 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 12 weak rules on 6 letters       weights
  SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

  2 SRS with 6 strict rules and 12 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 12 weak rules on 6 letters       weights
  SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a] -> [b, b, b, b] {- Input 0 -}
  [b, b, a, b] -> [a, b, a, a] {- Input 1 -}
  [b, a, b, b] -> [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, a], [a, a]] -> [ [a, b] , [b, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, a], [a, a], [a, b]] -> [ [a, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, a], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, a], [a, b]] -> [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, b], [b, a]] -> [ [a, a] , [a, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, a], [a, b], [b, b]] -> [ [a, a] , [a, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, b], [b, a]] -> [ [b, a] , [a, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, b], [b, b]] -> [ [b, a] , [a, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, b], [b, a], [a, b], [b, b], [b, a]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b], [b, b]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, b], [b, a]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, b], [b, b]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [b, a], [a, b], [a, a]] -> [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] -> [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] -> [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] -> [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] -> [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] -> [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] -> [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, a]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [b, a]# , [a, b] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, a]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, a]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [b, a]# , [a, b] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, a]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 2/1)
  ([a, b], 2/1)
  ([b, a], 2/1)
  ([b, b], 2/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 3A 6A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 7A 7A 8A - \
        | 7A 7A 8A - |
        | 7A 7A 8A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([b, a]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8134, clauses: 32048
last 8134 length 32048

  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, b]#, [a, a], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 3A 6A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 7A 7A 8A - \
        | 7A 7A 8A - |
        | 7A 7A 8A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, b]#, [a, b], [b, a], [b, b], [a, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [b, b], [b, b]] |-> [ [a, b]# , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, b]#, 0/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [a, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, a] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a], [b, b], [b, b]] ->= [ [a, b] , [a, a] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [a, b], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG

**************************************************
skeleton: (3,2)\TileAllAll{2}\Mirror(12,4)\Deepee(60/12,8)\Weight(12/12,8)\EDG[(6/12,6)\Matrix{\Arctic}{3}(2/12,6)\Weight(0/12,4)\EDG[],(6/12,6)\Matrix{\Arctic}{3}(2/12,6)\Weight(0/12,4)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 8134 vars 32048 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8164, clauses: 31983
last 8164 length 31983
CNF 8164 vars 31983 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.457250972000
  min duration 0.059048093000
  total durat. 4.153224340000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 90
    , parent = Nothing
    , duration = 1.457250972000
    , status = Fail
    , start = 2025-09-03 12:04:35.70307701 UTC
    , finish = 2025-09-03 12:04:37.160327982 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.289814097000
  min duration 0.093815966000
  total durat. 3.857156579000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 89
    , parent = Nothing
    , duration = 1.289814097000
    , status = Fail
    , start = 2025-09-03 12:04:35.714810598 UTC
    , finish = 2025-09-03 12:04:37.004624695 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.660607422000
  min duration 2.143254521000
  total durat. 4.803861943000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 83
    , parent = Nothing
    , duration = 2.143254521000
    , status = Fail
    , start = 2025-09-03 12:04:33.645873406 UTC
    , finish = 2025-09-03 12:04:35.789127927 UTC
    , thread_cap_info = ("ThreadId 85", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 87
    , parent = Nothing
    , duration = 2.660607422000
    , status = Fail
    , start = 2025-09-03 12:04:33.785879199 UTC
    , finish = 2025-09-03 12:04:36.446486621 UTC
    , thread_cap_info = ("ThreadId 101", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.065533826000
  min duration 0.761119490000
  total durat. 2.880696630000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 78
    , parent = Nothing
    , duration = 1.054043314000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:04:34.551802466 UTC
    , finish = 2025-09-03 12:04:35.60584578 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 71
    , parent = Nothing
    , duration = 1.065533826000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:04:34.525863405 UTC
    , finish = 2025-09-03 12:04:35.591397231 UTC
    , thread_cap_info = ("ThreadId 127", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.195875849000
  min duration 2.137802736000
  total durat. 4.333678585000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 88
    , parent = Nothing
    , duration = 2.137802736000
    , status = Fail
    , start = 2025-09-03 12:04:34.568886683 UTC
    , finish = 2025-09-03 12:04:36.706689419 UTC
    , thread_cap_info = ("ThreadId 129", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 85
    , parent = Nothing
    , duration = 2.195875849000
    , status = Fail
    , start = 2025-09-03 12:04:33.865960697 UTC
    , finish = 2025-09-03 12:04:36.061836546 UTC
    , thread_cap_info = ("ThreadId 108", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.207986644000
  min duration 0.878801550000
  total durat. 3.268582294000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 69
    , parent = Nothing
    , duration = 1.181794100000
    , status = Success
    , start = 2025-09-03 12:04:34.352484577 UTC
    , finish = 2025-09-03 12:04:35.534278677 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 72
    , parent = Nothing
    , duration = 1.207986644000
    , status = Success
    , start = 2025-09-03 12:04:34.391550184 UTC
    , finish = 2025-09-03 12:04:35.599536828 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.842063542000
  min duration 0.250562944000
  total durat. 1.092626486000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.720198512000
  min duration 1.288710666000
  total durat. 3.008909178000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 92
    , parent = Nothing
    , duration = 1.288710666000
    , status = Fail
    , start = 2025-09-03 12:04:36.485861962 UTC
    , finish = 2025-09-03 12:04:37.774572628 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 91
    , parent = Nothing
    , duration = 1.720198512000
    , status = Fail
    , start = 2025-09-03 12:04:35.795888512 UTC
    , finish = 2025-09-03 12:04:37.516087024 UTC
    , thread_cap_info = ("ThreadId 145", 3, False)}
**************************************************
F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                        = 24} , self = 61 , parent = Nothing , duration = 0.511367475000 , status
F                        = Fail , start = 2025-09-03 12:04:33.540053524 UTC , finish = 2025-09-03
F                        12:04:34.051420999 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                        
| F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                      = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
| F                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
| F                      = 54 , parent = Nothing , duration = 0.276850592000 , status = Fail , start
| F                      = 2025-09-03 12:04:33.540067679 UTC , finish = 2025-09-03 12:04:33.816918271
| F                      UTC , thread_cap_info = ("ThreadId 22", 1, False)}
| F                      
| | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                    = 24} , self = 60 , parent = Nothing , duration = 0.377706233000 , status
| | F                    = Fail , start = 2025-09-03 12:04:33.54010445 UTC , finish = 2025-09-03
| | F                    12:04:33.917810683 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F                  = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                  = 120} , self = 63 , parent = Nothing , duration = 0.743980790000 , status
| | | F                  = Fail , start = 2025-09-03 12:04:33.570513902 UTC , finish = 2025-09-03
| | | F                  12:04:34.314494692 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F                = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F                = 120} , self = 62 , parent = Nothing , duration = 0.610501718000 , status
| | | | F                = Fail , start = 2025-09-03 12:04:33.586408629 UTC , finish = 2025-09-03
| | | | F                12:04:34.196910347 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F              = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F              = 48} , self = 49 , parent = Nothing , duration = 0.100637133000 , status
| | | | | F              = Fail , start = 2025-09-03 12:04:33.605883949 UTC , finish = 2025-09-03
| | | | | F              12:04:33.706521082 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | | | | F              
| | | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F            = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | F            = 4 , total_length = 48} , self = 56 , parent = Nothing , duration = 0.250562944000
| | | | | | F            , status = Fail , start = 2025-09-03 12:04:33.611882477 UTC , finish =
| | | | | | F            2025-09-03 12:04:33.862445421 UTC , thread_cap_info = ("ThreadId 83", 3,
| | | | | | F            False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | F          = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | F          = 48} , self = 52 , parent = Nothing , duration = 0.100433883000 , status
| | | | | | | F          = Fail , start = 2025-09-03 12:04:33.631559788 UTC , finish = 2025-09-03
| | | | | | | F          12:04:33.731993671 UTC , thread_cap_info = ("ThreadId 79", 2, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | F        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F        = 4 , total_length = 48} , self = 83 , parent = Nothing , duration = 2.143254521000
| | | | | | | | F        , status = Fail , start = 2025-09-03 12:04:33.645873406 UTC , finish =
| | | | | | | | F        2025-09-03 12:04:35.789127927 UTC , thread_cap_info = ("ThreadId 85", 3,
| | | | | | | | F        False)}
| | | | | | | | F        
| | | | | F | | |        
| | | | | F | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | | |        = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | F | | |        = 4 , total_length = 48} , self = 68 , parent = Nothing , duration = 0.842063542000
| | | | | F | | |        , status = Fail , start = 2025-09-03 12:04:33.726794089 UTC , finish =
| | | | | F | | |        2025-09-03 12:04:34.568857631 UTC , thread_cap_info = ("ThreadId 98", 2,
| | | | | F | | |        False)}
| | | | | F | | |        
| | | | | | | F |        
| | | | | | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | F |        = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | F |        = 180} , self = 67 , parent = Nothing , duration = 0.758053207000 , status
| | | | | | | F |        = Fail , start = 2025-09-03 12:04:33.755696375 UTC , finish = 2025-09-03
| | | | | | | F |        12:04:34.513749582 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | F |        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | | F      = 180} , self = 64 , parent = Nothing , duration = 0.561412139000 , status
| | | | | | | | | F      = Fail , start = 2025-09-03 12:04:33.766742552 UTC , finish = 2025-09-03
| | | | | | | | | F      12:04:34.328154691 UTC , thread_cap_info = ("ThreadId 100", 1, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | | F    = 4 , total_length = 48} , self = 87 , parent = Nothing , duration = 2.660607422000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 12:04:33.785879199 UTC , finish =
| | | | | | | | | | F    2025-09-03 12:04:36.446486621 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | | | F    2, False)}
| | | | | | | | | | F    
| F | | | | | | | | |    
|   | | | | F | | | |    
| F | | | |   | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |   | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F | | | |   | | | |    = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| F | | | |   | | | |    = 180} , self = 66 , parent = Nothing , duration = 0.647569753000 , status
| F | | | |   | | | |    = Fail , start = 2025-09-03 12:04:33.86249229 UTC , finish = 2025-09-03
| F | | | |   | | | |    12:04:34.510062043 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| F | | | |   | | | |    
| | | | | | F | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F | | | |    = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | F | | | |    = 180} , self = 65 , parent = Nothing , duration = 0.509587346000 , status
| | | | | | F | | | |    = Fail , start = 2025-09-03 12:04:33.865858905 UTC , finish = 2025-09-03
| | | | | | F | | | |    12:04:34.375446251 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
| | | | | | F | | | |    
| | | | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | | | F  = 4 , total_length = 48} , self = 85 , parent = Nothing , duration = 2.195875849000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 12:04:33.865960697 UTC , finish =
| | | | | | | | | | | F  2025-09-03 12:04:36.061836546 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | | | F  3, False)}
| | | | | | | | | | | F  
| | F | | | | | | | | |  
F |   | | | | | | | | |  
  |   | F | | | | | | |  
  |   F   | | | | | | |  
  |       | | | | F | |  
S |       | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |       | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |       | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |       | | | |   | |  = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
S |       | | | |   | |  alphabet_size = 6 , total_length = 180} , self = 69 , parent = Nothing
S |       | | | |   | |  , duration = 1.181794100000 , status = Success , start = 2025-09-03 12:04:34.352484577
S |       | | | |   | |  UTC , finish = 2025-09-03 12:04:35.534278677 UTC , thread_cap_info = ("ThreadId
S |       | | | |   | |  125", 1, False)}
S |       | | | |   | |  
| |       | F | |   | |  
| | S     |   | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     |   | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     |   | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     |   | |   | |  = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| | S     |   | |   | |  alphabet_size = 6 , total_length = 180} , self = 72 , parent = Nothing
| | S     |   | |   | |  , duration = 1.207986644000 , status = Success , start = 2025-09-03 12:04:34.391550184
| | S     |   | |   | |  UTC , finish = 2025-09-03 12:04:35.599536828 UTC , thread_cap_info = ("ThreadId
| | S     |   | |   | |  126", 1, False)}
| | S     |   | |   | |  
| F |     |   | |   | |  
|   |     |   F |   | |  
| E |     |     |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |     |     |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |     |     |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |     |     |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     |     |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     |     |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| E |     |     |   | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
| E |     |     |   | |  = 6 , total_length = 180} , self = 71 , parent = Nothing , duration = 1.065533826000
| E |     |     |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:34.525863405
| E |     |     |   | |  UTC , finish = 2025-09-03 12:04:35.591397231 UTC , thread_cap_info = ("ThreadId
| E |     |     |   | |  127", 1, False)}
| E |     |     |   | |  
| | | E   |     |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |     |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |     |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |     |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |     |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |     |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | E   |     |   | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
| | | E   |     |   | |  = 6 , total_length = 180} , self = 78 , parent = Nothing , duration = 1.054043314000
| | | E   |     |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:34.551802466
| | | E   |     |   | |  UTC , finish = 2025-09-03 12:04:35.60584578 UTC , thread_cap_info = ("ThreadId
| | | E   |     |   | |  128", 1, False)}
| | | E   |     |   | |  
| | | |   F     |   | |  
| | | | F       |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F       |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F       |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F       |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F       |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F       |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | F       |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | F       |   | |  = 4 , total_length = 48} , self = 88 , parent = Nothing , duration = 2.137802736000
| | | | F       |   | |  , status = Fail , start = 2025-09-03 12:04:34.568886683 UTC , finish =
| | | | F       |   | |  2025-09-03 12:04:36.706689419 UTC , thread_cap_info = ("ThreadId 129",
| | | | F       |   | |  2, False)}
| | | | F       |   | |  
S | | | |       |   | |  
  E | | |       |   | |  
    S | |       |   | |  
F     | |       |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F     | |       |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     | |       |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F     | |       |   | |  = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 6 , total_length
F     | |       |   | |  = 160} , self = 86 , parent = Nothing , duration = 0.691591430000 , status
F     | |       |   | |  = Fail , start = 2025-09-03 12:04:35.600473819 UTC , finish = 2025-09-03
F     | |       |   | |  12:04:36.292065249 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
F     | |       |   | |  
|     E |       |   | |  
| F     |       |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F     |       |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F     |       |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F     |       |   | |  = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| F     |       |   | |  = 160} , self = 84 , parent = Nothing , duration = 0.386684392000 , status
| F     |       |   | |  = Fail , start = 2025-09-03 12:04:35.609171523 UTC , finish = 2025-09-03
| F     |       |   | |  12:04:35.995855915 UTC , thread_cap_info = ("ThreadId 138", 2, False)}
| F     |       |   | |  
| | F   |       |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   |       |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   |       |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F   |       |   | |  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | F   |       |   | |  = 180} , self = 90 , parent = Nothing , duration = 1.457250972000 , status
| | F   |       |   | |  = Fail , start = 2025-09-03 12:04:35.70307701 UTC , finish = 2025-09-03
| | F   |       |   | |  12:04:37.160327982 UTC , thread_cap_info = ("ThreadId 143", 1, False)}
| | F   |       |   | |  
| | | F |       |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |       |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |       |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | F |       |   | |  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | F |       |   | |  = 180} , self = 89 , parent = Nothing , duration = 1.289814097000 , status
| | | F |       |   | |  = Fail , start = 2025-09-03 12:04:35.714810598 UTC , finish = 2025-09-03
| | | F |       |   | |  12:04:37.004624695 UTC , thread_cap_info = ("ThreadId 144", 1, False)}
| | | F |       |   | |  
| | | | |       F   | |  
| | | | | F         | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F         | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F         | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F         | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | F         | |  = 4 , total_length = 48} , self = 91 , parent = Nothing , duration = 1.720198512000
| | | | | F         | |  , status = Fail , start = 2025-09-03 12:04:35.795888512 UTC , finish =
| | | | | F         | |  2025-09-03 12:04:37.516087024 UTC , thread_cap_info = ("ThreadId 145",
| | | | | F         | |  3, False)}
| | | | | F         | |  
| F | | | |         | |  
|   | | | |         | F  
F   | | | |         |    
    | | | |         F    
F   | | | |              Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F   | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | | | |              = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
F   | | | |              = 4 , total_length = 48} , self = 92 , parent = Nothing , duration = 1.288710666000
F   | | | |              , status = Fail , start = 2025-09-03 12:04:36.485861962 UTC , finish =
F   | | | |              2025-09-03 12:04:37.774572628 UTC , thread_cap_info = ("ThreadId 151",
F   | | | |              2, False)}
F   | | | |              
|   | | F |              
|   | F   |              
| S |     |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |     |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |     |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |     |              = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| S |     |              alphabet_size = 6 , total_length = 180} , self = 93 , parent = Nothing
| S |     |              , duration = 0.878801550000 , status = Success , start = 2025-09-03 12:04:37.004751573
| S |     |              UTC , finish = 2025-09-03 12:04:37.883553123 UTC , thread_cap_info = ("ThreadId
| S |     |              156", 1, False)}
| S |     |              
| | F     |              
| | E     |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E     |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E     |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E     |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E     |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E     |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | E     |              , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
| | E     |              = 6 , total_length = 180} , self = 95 , parent = Nothing , duration = 0.761119490000
| | E     |              , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:37.167835895
| | E     |              UTC , finish = 2025-09-03 12:04:37.928955385 UTC , thread_cap_info = ("ThreadId
| | E     |              160", 1, False)}
| | E     |              
| | |     F              
F | |                    
  S |                    
    E                    
