last 386 length 1621
last 330 length 1333
CNF 386 vars 1621 clauses
last 486 length 2119
CNF 330 vars 1333 clauses
last 340 length 1381
last 4858 length 24365
last 3954 length 17852
last 6288 length 31589
last 5240 length 23814
last 4982 length 22770
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1823, clauses: 6411
CNF 486 vars 2119 clauses
CNF 340 vars 1381 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1749, clauses: 6200
CNF 4858 vars 24365 clauses
last 6660 length 33030
CNF 3954 vars 17852 clauses
CNF 5240 vars 23814 clauses
CNF 6288 vars 31589 clauses
last 1823 length 6411
CNF 4982 vars 22770 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4362, clauses: 17697
last 1749 length 6200
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4579, clauses: 18723
CNF 6660 vars 33030 clauses
CNF 1823 vars 6411 clauses
last 4362 length 17697
CNF 1749 vars 6200 clauses
last 4579 length 18723
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10143, clauses: 37274
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11438, clauses: 42132
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1823, clauses: 6411, status: Satisfied, time: 0.37557649s
CNF 4362 vars 17697 clauses
CNF 4579 vars 18723 clauses
last 10143 length 37274
last 11438 length 42132
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1749, clauses: 6200, status: Unsatisfied, time: 0.64332406s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 40585, clauses: 170477
**************************************************
last 40585 length 170477
CNF 10143 vars 37274 clauses
CNF 11438 vars 42132 clauses
summary
**************************************************
SRS with 4 rules on 3 letters       weights
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 6 strict rules and 3 weak rules on 6 letters       weights
SRS with 3 strict rules and 3 weak rules on 6 letters       EDG
SRS with 3 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 6 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, c] -> [b] {- Input 0 -}
  [c, b, b] -> [a] {- Input 1 -}
  [c] -> [b] {- Input 2 -}
  [a, a] -> [c, b, a, c] {- Input 3 -}
reason
  (a, 1/1)
  (b, 1/3)
  (c, 1/3)
   property Termination
has value Just True
for SRS
  [c, b, b] -> [a] {- Input 1 -}
  [c] -> [b] {- Input 2 -}
  [a, a] -> [c, b, a, c] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b, c] -> [a] {- Mirror (Input 1) -}
  [c] -> [b] {- Mirror (Input 2) -}
  [a, a] -> [c, a, b, c] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, c] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, a] ->= [c, a, b, c] {- DP Nontop (Mirror (Input 3)) -}
  [a#, a] |-> [a#, b, c] {- DP (Top 1) (Mirror (Input 3)) -}
  [a#, a] |-> [b#, c] {- DP (Top 2) (Mirror (Input 3)) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Mirror (Input 3)) -}
  [a#, a] |-> [c#, a, b, c] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, b, c] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#] |-> [b#] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 1/1)
  (b, 1/3)
  (c, 1/3)
  (a#, 2/3)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, c] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, a] ->= [c, a, b, c] {- DP Nontop (Mirror (Input 3)) -}
  [a#, a] |-> [c#, a, b, c] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, b, c] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#] |-> [b#] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [c#, a, b, c] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#] |-> [b#] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, c] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, b, c] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, a] ->= [c, a, b, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 6A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 17A 17A 19A - \
        | 17A 17A 19A - |
        | 17A 17A 19A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 14A 14A 17A - \
        | 14A 14A 17A - |
        | 14A 14A 17A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 14A 14A 17A - \
        | 14A 14A 17A - |
        | 14A 14A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [c#, a, b, c] {- DP (Top 0) (Mirror (Input 3)) -}
  [c#] |-> [b#] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, b, c] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, a] ->= [c, a, b, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 2/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, b, c] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [a, a] ->= [c, a, b, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Weight\Mirror(3,3)\Deepee(6/3,6)\Weight\EDG(3/3,6)\Matrix{\Arctic}{3}(2/3,6)\Weight(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.365904059000
  min duration 0.120027661000
  total durat. 1.314006196000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.462455852000
  min duration 0.210479774000
  total durat. 1.638893123000
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 12} , self = 56 , parent = Nothing , duration = 0.210695732000 , status
F                      = Fail , start = 2025-09-03 13:42:50.948374874 UTC , finish = 2025-09-03
F                      13:42:51.159070606 UTC , thread_cap_info = ("ThreadId 37", 3, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                    = 162} , self = 61 , parent = Nothing , duration = 0.365904059000 , status
| F                    = Fail , start = 2025-09-03 13:42:50.955480912 UTC , finish = 2025-09-03
| F                    13:42:51.321384971 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                  = 162} , self = 60 , parent = Nothing , duration = 0.352183480000 , status
| | F                  = Fail , start = 2025-09-03 13:42:50.955486338 UTC , finish = 2025-09-03
| | F                  13:42:51.307669818 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | F                = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | F                = 198} , self = 63 , parent = Nothing , duration = 0.361469895000 , status
| | | F                = Fail , start = 2025-09-03 13:42:50.97469132 UTC , finish = 2025-09-03
| | | F                13:42:51.336161215 UTC , thread_cap_info = ("ThreadId 89", 1, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | F              = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | F              = 198} , self = 62 , parent = Nothing , duration = 0.353639990000 , status
| | | | F              = Fail , start = 2025-09-03 13:42:50.979826654 UTC , finish = 2025-09-03
| | | | F              13:42:51.333466644 UTC , thread_cap_info = ("ThreadId 90", 1, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | F            = 24} , self = 55 , parent = Nothing , duration = 0.120027661000 , status
| | | | | F            = Fail , start = 2025-09-03 13:42:50.999235366 UTC , finish = 2025-09-03
| | | | | F            13:42:51.119263027 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F          = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | F          = 24} , self = 58 , parent = Nothing , duration = 0.210479774000 , status
| | | | | | F          = Fail , start = 2025-09-03 13:42:51.002702554 UTC , finish = 2025-09-03
| | | | | | F          13:42:51.213182328 UTC , thread_cap_info = ("ThreadId 94", 2, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | F        = 22} , self = 57 , parent = Nothing , duration = 0.165783139000 , status
| | | | | | | F        = Fail , start = 2025-09-03 13:42:51.002709132 UTC , finish = 2025-09-03
| | | | | | | F        13:42:51.168492271 UTC , thread_cap_info = ("ThreadId 95", 2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | | F      = 22} , self = 59 , parent = Nothing , duration = 0.260134027000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 13:42:51.005461511 UTC , finish = 2025-09-03
| | | | | | | | F      13:42:51.265595538 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | | F    = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | | | | | | | F    = 216} , self = 64 , parent = Nothing , duration = 0.300821442000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 13:42:51.039790387 UTC , finish = 2025-09-03
| | | | | | | | | F    13:42:51.340611829 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | | | | | | | | F  = 216} , self = 65 , parent = Nothing , duration = 0.462455852000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 13:42:51.098468196 UTC , finish = 2025-09-03
| | | | | | | | | | F  13:42:51.560924048 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | | | | | | | | | F  
| | | | | F | | | | |  
| | | | | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S | | | | |  = 6 , total_length = 24} , self = 66 , parent = Nothing , duration = 0.841002026000
| | | | | S | | | | |  , status = Success , start = 2025-09-03 13:42:51.139728258 UTC , finish
| | | | | S | | | | |  = 2025-09-03 13:42:51.980730284 UTC , thread_cap_info = ("ThreadId 103",
| | | | | S | | | | |  2, False)}
| | | | | S | | | | |  
F | | | | | | | | | |  
  | | | | | | F | | |  
  | | | | | F   | | |  
E | | | | |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |     | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E | | | | |     | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
E | | | | |     | | |  = 6 , total_length = 24} , self = 68 , parent = Nothing , duration = 0.800198627000
E | | | | |     | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:51.213208726
E | | | | |     | | |  UTC , finish = 2025-09-03 13:42:52.013407353 UTC , thread_cap_info = ("ThreadId
E | | | | |     | | |  113", 2, False)}
E | | | | |     | | |  
| | | | | |     F | |  
| | F | | |       | |  
| F   | | |       | |  
|     | F |       | |  
|     F   |       | |  
|         |       F |  
|         |         F  
|         S            
E                      
