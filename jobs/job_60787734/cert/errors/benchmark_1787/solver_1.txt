last 5377 length 24602
CNF 5377 vars 24602 clauses
last 1028 length 4210
CNF 1028 vars 4210 clauses
last 5778 length 27515
last 891 length 3604
CNF 891 vars 3604 clauses
CNF 5778 vars 27515 clauses
last 876 length 3679
last 731 length 2959
CNF 876 vars 3679 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3008, clauses: 11205
CNF 731 vars 2959 clauses
last 8308 length 35891
last 3008 length 11205
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2691, clauses: 9836
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8020, clauses: 33306
last 10598 length 44318
last 9538 length 44429
last 9521 length 51354
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7928, clauses: 32922
CNF 8308 vars 35891 clauses
last 2691 length 9836
CNF 3008 vars 11205 clauses
last 8020 length 33306
CNF 10598 vars 44318 clauses
CNF 9538 vars 44429 clauses
CNF 9521 vars 51354 clauses
last 7928 length 32922
CNF 2691 vars 9836 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3008, clauses: 11205, status: Satisfied, time: 0.496158337s
CNF 8020 vars 33306 clauses
CNF 7928 vars 32922 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2691, clauses: 9836, status: Satisfied, time: 0.2126485s
last 676 length 2842
last 804 length 3313
CNF 676 vars 2842 clauses
CNF 804 vars 3313 clauses
last 761 length 3306
CNF 761 vars 3306 clauses
last 746 length 3049
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2573, clauses: 9291
CNF 746 vars 3049 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2621, clauses: 9588
last 2573 length 9291
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7881, clauses: 32753
last 2621 length 9588
last 7881 length 32753
CNF 2573 vars 9291 clauses
CNF 2621 vars 9588 clauses
CNF 7881 vars 32753 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2573, clauses: 9291, status: Satisfied, time: 0.079229465s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7889, clauses: 32787
last 7889 length 32787
last 479 length 2021
CNF 7889 vars 32787 clauses
last 572 length 2358
CNF 479 vars 2021 clauses
CNF 572 vars 2358 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1862, clauses: 6603
last 1862 length 6603
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7889, clauses: 32787, status: Satisfied, time: 0.127373278s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2621, clauses: 9588, status: Unsatisfied, time: 0.275763088s
CNF 1862 vars 6603 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6294, clauses: 26123
last 520 length 2093
last 573 length 2296
last 6294 length 26123
CNF 520 vars 2093 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1862, clauses: 6603, status: Satisfied, time: 0.075963732s
CNF 573 vars 2296 clauses
CNF 6294 vars 26123 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 7816
last 2185 length 7816
CNF 2185 vars 7816 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       DP
SRS with 7 strict rules and 3 weak rules on 5 letters       EDG
SRS with 7 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 3 weak rules on 5 letters       EDG
SRS with 4 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 3 weak rules on 5 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       EDG
SRS with 2 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b] -> [b, a, b] {- Input 0 -}
  [b, a] -> [a, b, b] {- Input 1 -}
  [b, c, a] -> [c, c, a, a, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 2) (Input 2) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 3) (Input 2) -}
  [b#, c, a] |-> [b#] {- DP (Top 4) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 2) (Input 2) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 3) (Input 2) -}
  [b#, c, a] |-> [b#] {- DP (Top 4) (Input 2) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 2A 2A 4A - \
        | 2A 2A 4A - |
        | 2A 2A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 2A 2A 4A - \
        | 2A 2A 4A - |
        | 2A 2A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, a] |-> [a#, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, a] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 10A 10A 11A - \
        | 10A 10A 11A - |
        | 10A 10A 11A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b, b] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [c, c, a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Deepee\EDG(7/3,5)\Matrix{\Arctic}{3}\EDG(4/3,5)\Matrix{\Arctic}{3}(3/3,5)\Weight\EDG(2/3,4)\Matrix{\Arctic}{3}(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.924320399000
  min duration 0.014725834000
  total durat. 2.453448783000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.862014059000
  min duration 0.021621336000
  total durat. 2.466357045000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.753382133000
  min duration 0.162292669000
  total durat. 1.659480794000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.771351245000
  min duration 0.125157789000
  total durat. 1.837980591000
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.620209359000
  min duration 1.620209359000
  total durat. 1.620209359000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 19}
    , self = 100
    , parent = Nothing
    , duration = 1.620209359000
    , status = Fail
    , start = 2025-09-03 13:30:14.15871989 UTC
    , finish = 2025-09-03 13:30:15.778929249 UTC
    , thread_cap_info = ("ThreadId 22", 2, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 7816, status: Unsatisfied, time: 0.15494307s
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 19} , self = 49 , parent = Nothing , duration = 0.118447136000 , status
F                  = Fail , start = 2025-09-03 13:30:14.15865558 UTC , finish = 2025-09-03
F                  13:30:14.277102716 UTC , thread_cap_info = ("ThreadId 34", 1, False)}
F                  
| F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
| F                = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 19} , self
| F                = 100 , parent = Nothing , duration = 1.620209359000 , status = Fail ,
| F                start = 2025-09-03 13:30:14.15871989 UTC , finish = 2025-09-03 13:30:15.778929249
| F                UTC , thread_cap_info = ("ThreadId 22", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | F              = 24 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 195} , self = 57 , parent = Nothing , duration = 0.242280210000 , status
| | F              = Fail , start = 2025-09-03 13:30:14.1922842 UTC , finish = 2025-09-03
| | F              13:30:14.43456441 UTC , thread_cap_info = ("ThreadId 64", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | F            = 32 , num_top_rules = 32 , num_weak_rules = 24 , alphabet_size = 13 ,
| | | F            total_length = 399} , self = 63 , parent = Nothing , duration = 0.924320399000
| | | F            , status = Fail , start = 2025-09-03 13:30:14.200136013 UTC , finish =
| | | F            2025-09-03 13:30:15.124456412 UTC , thread_cap_info = ("ThreadId 74", 0,
| | | F            False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | F          = 24 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F          = 195} , self = 59 , parent = Nothing , duration = 0.261275881000 , status
| | | | F          = Fail , start = 2025-09-03 13:30:14.212284328 UTC , finish = 2025-09-03
| | | | F          13:30:14.473560209 UTC , thread_cap_info = ("ThreadId 66", 1, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | F        = 32 , num_top_rules = 32 , num_weak_rules = 24 , alphabet_size = 13 ,
| | | | | F        total_length = 399} , self = 62 , parent = Nothing , duration = 0.862014059000
| | | | | F        , status = Fail , start = 2025-09-03 13:30:14.212291227 UTC , finish =
| | | | | F        2025-09-03 13:30:15.074305286 UTC , thread_cap_info = ("ThreadId 75", 0,
| | | | | F        False)}
| | | | | F        
F | | | | |        
F | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
F | | | | |        = 20 , num_top_rules = 20 , num_weak_rules = 24 , alphabet_size = 13 ,
F | | | | |        total_length = 303} , self = 64 , parent = Nothing , duration = 0.850326670000
F | | | | |        , status = Fail , start = 2025-09-03 13:30:14.292293152 UTC , finish =
F | | | | |        2025-09-03 13:30:15.142619822 UTC , thread_cap_info = ("ThreadId 87", 0,
F | | | | |        False)}
F | | | | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | | | F      = 20 , num_top_rules = 20 , num_weak_rules = 24 , alphabet_size = 13 ,
| | | | | | F      total_length = 303} , self = 66 , parent = Nothing , duration = 0.848482613000
| | | | | | F      , status = Fail , start = 2025-09-03 13:30:14.318128981 UTC , finish =
| | | | | | F      2025-09-03 13:30:15.166611594 UTC , thread_cap_info = ("ThreadId 88", 0,
| | | | | | F      False)}
| | | | | | F      
| | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S    = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| | | | | | | S    alphabet_size = 5 , total_length = 52} , self = 65 , parent = Nothing ,
| | | | | | | S    duration = 0.771351245000 , status = Success , start = 2025-09-03 13:30:14.394094307
| | | | | | | S    UTC , finish = 2025-09-03 13:30:15.165445552 UTC , thread_cap_info = ("ThreadId
| | | | | | | S    103", 3, False)}
| | | | | | | S    
| | F | | | | |    
| | E | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E | | | | |    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | E | | | | |    = 5 , total_length = 52} , self = 69 , parent = Nothing , duration = 0.753382133000
| | E | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:14.441355285
| | E | | | | |    UTC , finish = 2025-09-03 13:30:15.194737418 UTC , thread_cap_info = ("ThreadId
| | E | | | | |    106", 3, False)}
| | E | | | | |    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | | F  = 43} , self = 61 , parent = Nothing , duration = 0.301987813000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 13:30:14.45228461 UTC , finish = 2025-09-03
| | | | | | | | F  13:30:14.754272423 UTC , thread_cap_info = ("ThreadId 108", 3, False)}
| | | | | | | | F  
| | | | F | | | |  
| | | | S | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | |  = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | S | | | |  = 5 , total_length = 43} , self = 68 , parent = Nothing , duration = 0.602414790000
| | | | S | | | |  , status = Success , start = 2025-09-03 13:30:14.592304979 UTC , finish
| | | | S | | | |  = 2025-09-03 13:30:15.194719769 UTC , thread_cap_info = ("ThreadId 113",
| | | | S | | | |  3, False)}
| | | | S | | | |  
| | | | | | | | F  
| | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | E  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | | | | E  = 5 , total_length = 43} , self = 74 , parent = Nothing , duration = 0.423219666000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:14.772639498
| | | | | | | | E  UTC , finish = 2025-09-03 13:30:15.195859164 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  114", 3, False)}
| | | | | | | | E  
| | | | | F | | |  
| | | F |   | | |  
F | |   |   | | |  
  | |   |   | S |  
  | |   |   F   |  
  | |   S       |  
  | E           |  
  |             E  
F |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F |                = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 5 , total_length
F |                = 39} , self = 83 , parent = Nothing , duration = 0.216954392000 , status
F |                = Fail , start = 2025-09-03 13:30:15.22612808 UTC , finish = 2025-09-03
F |                13:30:15.443082472 UTC , thread_cap_info = ("ThreadId 138", 3, False)}
F |                
| | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S              = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | S              = 5 , total_length = 37} , self = 84 , parent = Nothing , duration = 0.339056767000
| | S              , status = Success , start = 2025-09-03 13:30:15.233087124 UTC , finish
| | S              = 2025-09-03 13:30:15.572143891 UTC , thread_cap_info = ("ThreadId 141",
| | S              3, False)}
| | S              
| | | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E            , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | E            = 5 , total_length = 37} , self = 86 , parent = Nothing , duration = 0.320586326000
| | | E            , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:15.253158426
| | | E            UTC , finish = 2025-09-03 13:30:15.573744752 UTC , thread_cap_info = ("ThreadId
| | | E            143", 3, False)}
| | | E            
| | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F          = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | F          = 5 , total_length = 39} , self = 95 , parent = Nothing , duration = 0.431227805000
| | | | F          , status = Fail , start = 2025-09-03 13:30:15.328984925 UTC , finish =
| | | | F          2025-09-03 13:30:15.76021273 UTC , thread_cap_info = ("ThreadId 144", 3,
| | | | F          False)}
| | | | F          
F | | | |          
S | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S | | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S | | | |          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
S | | | |          = 5 , total_length = 39} , self = 93 , parent = Nothing , duration = 0.306925580000
S | | | |          , status = Success , start = 2025-09-03 13:30:15.451266189 UTC , finish
S | | | |          = 2025-09-03 13:30:15.758191769 UTC , thread_cap_info = ("ThreadId 149",
S | | | |          3, False)}
S | | | |          
| | S | |          
| |   E |          
| | E   |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E   |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E   |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | E   |          = 4 , total_length = 26} , self = 105 , parent = Nothing , duration = 0.162292669000
| | E   |          , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:15.643165999
| | E   |          UTC , finish = 2025-09-03 13:30:15.805458668 UTC , thread_cap_info = ("ThreadId
| | E   |          160", 3, False)}
| | E   |          
| | | S |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |          = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | S |          = 4 , total_length = 26} , self = 101 , parent = Nothing , duration = 0.125157789000
| | | S |          , status = Success , start = 2025-09-03 13:30:15.654093544 UTC , finish
| | | S |          = 2025-09-03 13:30:15.779251333 UTC , thread_cap_info = ("ThreadId 159",
| | | S |          3, False)}
| | | S |          
S | | | |          
  | | | F          
  F | |            
    | S            
    E              
