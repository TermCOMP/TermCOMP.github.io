last 4969 length 42684
CNF 4969 vars 42684 clauses
last 8744 length 86020
CNF 8744 vars 86020 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5137, clauses: 18580
last 5137 length 18580
CNF 5137 vars 18580 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5137, clauses: 18580, status: Unsatisfied, time: 0.253234578s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6277, clauses: 23242
last 6277 length 23242
CNF 6277 vars 23242 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6277, clauses: 23242, status: Satisfied, time: 0.222565786s
last 18373 length 159130
CNF 18373 vars 159130 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21892, clauses: 92345
last 21892 length 92345
CNF 21892 vars 92345 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13180, clauses: 55694
last 13180 length 55694
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21892, clauses: 92345, status: Unsatisfied, time: 1.01566571s
CNF 13180 vars 55694 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13180, clauses: 55694, status: Unsatisfied, time: 0.5647205s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8629, clauses: 32331
last 8629 length 32331
CNF 8629 vars 32331 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8629, clauses: 32331, status: Unsatisfied, time: 0.710948338s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16232, clauses: 60487
last 16232 length 60487
CNF 16232 vars 60487 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5964, clauses: 21992
last 5964 length 21992
CNF 5964 vars 21992 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5964, clauses: 21992, status: Unsatisfied, time: 0.364929577s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 39325, clauses: 175250
last 39325 length 175250
CNF 39325 vars 175250 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23796, clauses: 100429
last 23796 length 100429
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14457, clauses: 61320
last 14457 length 61320
CNF 23796 vars 100429 clauses
CNF 14457 vars 61320 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23796, clauses: 100429, status: Satisfied, time: 0.406806007s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16232, clauses: 60487, status: Unsatisfied, time: 3.649284524s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 39610, clauses: 157990
last 39610 length 157990
CNF 39610 vars 157990 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5185, clauses: 18673
last 5185 length 18673
CNF 5185 vars 18673 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5185, clauses: 18673, status: Unsatisfied, time: 0.480095773s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21070, clauses: 88781
last 21070 length 88781
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12763, clauses: 53762
last 12763 length 53762
CNF 21070 vars 88781 clauses
CNF 12763 vars 53762 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 49428, clauses: 233483
last 49428 length 233483
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12763, clauses: 53762, status: Satisfied, time: 1.129546377s
CNF 49428 vars 233483 clauses
**************************************************
summary
**************************************************
SRS with 8 rules on 5 letters       weights
SRS with 6 rules on 5 letters       context
SRS with 10 rules on 5 letters       mirror
SRS with 10 rules on 5 letters       DP
SRS with 37 strict rules and 10 weak rules on 7 letters       weights
SRS with 14 strict rules and 10 weak rules on 7 letters       EDG
2 sub-proofs
  1 SRS with 5 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 4 strict rules and 10 weak rules on 6 letters       EDG
  SRS with 4 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 10 weak rules on 5 letters       EDG

  2 SRS with 2 strict rules and 10 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 10 weak rules on 6 letters       EDG
  SRS with 1 strict rules and 10 weak rules on 6 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [twoto, 0] -> [p, p, s, s, s, p, p, p, s, s, s, 0, p, p, s, s] {- Input 0 -}
  [twoto, s] -> [ p , p , s , s , p , p , p , s , s , s , twice , p , p , s , s , p , p , p , s , s , s , twoto , p , s , p , s ] {- Input 1 -}
  [twice, 0] -> [p, s, p, s, 0, s, p, s, s, s, s, p, s] {- Input 2 -}
  [twice, s] -> [ s , p , p , p , p , s , s , s , s , s , twice , p , s , p , s , p , s , p , s ] {- Input 3 -}
  [p, p, s] -> [p] {- Input 4 -}
  [p, s] -> [] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s, p, s] {- Input 6 -}
  [0] -> [] {- Input 7 -}
reason
  (s, 0/1)
  (p, 0/1)
  (0, 1/1)
  (twice, 0/1)
  (twoto, 1/1)
   property Termination
has value Just True
for SRS
  [twoto, s] -> [ p , p , s , s , p , p , p , s , s , s , twice , p , p , s , s , p , p , p , s , s , s , twoto , p , s , p , s ] {- Input 1 -}
  [twice, 0] -> [p, s, p, s, 0, s, p, s, s, s, s, p, s] {- Input 2 -}
  [twice, s] -> [ s , p , p , p , p , s , s , s , s , s , twice , p , s , p , s , p , s , p , s ] {- Input 3 -}
  [p, p, s] -> [p] {- Input 4 -}
  [p, s] -> [] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s, p, s] {- Input 6 -}
reason
  context
   property Termination
has value Just True
for SRS
  [twoto, s] -> [ p , p , s , s , p , p , p , s , s , s , twice , p , p , s , s , p , p , p , s , s , s , twoto , p , s , p , s ] {- Input 1 -}
  [twice, 0] -> [p, s, p, s, 0, s, p, s, s, s, s, p, s] {- Input 2 -}
  [twice, s] -> [ s , p , p , p , p , s , s , s , s , s , twice , p , s , p , s , p , s , p , s ] {- Input 3 -}
  [p, p, s] -> [p] {- Input 4 -}
  [s, p, s] -> [s] {- Input 5 -}
  [p, p, s] -> [p] {- Input 5 -}
  [0, p, s] -> [0] {- Input 5 -}
  [twice, p, s] -> [twice] {- Input 5 -}
  [twoto, p, s] -> [twoto] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s, p, s] {- Input 6 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [s, twoto] -> [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- Mirror (Input 1) -}
  [0, twice] -> [s, p, s, s, s, s, p, s, 0, s, p, s, p] {- Mirror (Input 2) -}
  [s, twice] -> [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- Mirror (Input 3) -}
  [s, p, p] -> [p] {- Mirror (Input 4) -}
  [s, p, s] -> [s] {- Mirror (Input 5) -}
  [s, p, p] -> [p] {- Mirror (Input 5) -}
  [s, p, 0] -> [0] {- Mirror (Input 5) -}
  [s, p, twice] -> [twice] {- Mirror (Input 5) -}
  [s, p, twoto] -> [twoto] {- Mirror (Input 5) -}
  [0, p] -> [s, p, s, s, s, s, 0] {- Mirror (Input 6) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
  [s#, twice] |-> [s#] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , s , p , p , p , p , s ] {- DP (Top 9) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , p , p , p , p , s ] {- DP (Top 10) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, s, p, p, p, p, s] {- DP (Top 11) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, p, p, p, p, s] {- DP (Top 12) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 0) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 4) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, p, p, p, p, s] {- DP (Top 13) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 6) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , s , p , p ] {- DP (Top 16) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 5) (Mirror (Input 1)) -}
  [s#, twoto] |-> [s#, s, p, p] {- DP (Top 22) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , s , p , p , p , s , s , p , p ] {- DP (Top 17) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 6) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 11) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 0) (Mirror (Input 1)) -}
  [s#, twoto] |-> [s#, p, p] {- DP (Top 23) (Mirror (Input 1)) -}
  [s#, twoto] |-> [s#, p, p, p, s, s, p, p] {- DP (Top 18) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 7) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 12) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 2) (Mirror (Input 1)) -}
  [0#, p] |-> [s#, s, s, s, 0] {- DP (Top 2) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, s, 0] {- DP (Top 3) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, s, 0] {- DP (Top 4) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, p, s, s, s, s, 0] {- DP (Top 0) (Mirror (Input 6)) -}
  [0#, p] |-> [s#, 0] {- DP (Top 5) (Mirror (Input 6)) -}
  [0#, p] |-> [0#] {- DP (Top 6) (Mirror (Input 6)) -}
  [0#, twice] |-> [ s# , s , s , s , p , s , 0 , s , p , s , p ] {- DP (Top 2) (Mirror (Input 2)) -}
  [0#, twice] |-> [ s# , s , s , p , s , 0 , s , p , s , p ] {- DP (Top 3) (Mirror (Input 2)) -}
  [0#, twice] |-> [s#, s, p, s, 0, s, p, s, p] {- DP (Top 4) (Mirror (Input 2)) -}
  [0#, twice] |-> [s#, p] {- DP (Top 11) (Mirror (Input 2)) -}
  [0#, twice] |-> [ s# , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP (Top 0) (Mirror (Input 2)) -}
  [0#, twice] |-> [s#, p, s, p] {- DP (Top 9) (Mirror (Input 2)) -}
  [0#, twice] |-> [s#, p, s, 0, s, p, s, p] {- DP (Top 5) (Mirror (Input 2)) -}
  [0#, twice] |-> [s#, 0, s, p, s, p] {- DP (Top 7) (Mirror (Input 2)) -}
  [0#, twice] |-> [0#, s, p, s, p] {- DP (Top 8) (Mirror (Input 2)) -}
reason
  (s, 0/1)
  (p, 0/1)
  (0, 0/1)
  (twice, 0/1)
  (twoto, 1/1)
  (s#, 0/1)
  (0#, 1/1)
   property Termination
has value Just True
for SRS
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
  [s#, twice] |-> [s#] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , s , p , p , p , p , s ] {- DP (Top 9) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , p , p , p , p , s ] {- DP (Top 10) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, s, p, p, p, p, s] {- DP (Top 11) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, p, p, p, p, s] {- DP (Top 12) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 0) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 2) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 4) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, p, p, p, p, s] {- DP (Top 13) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP (Top 6) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 0) (Mirror (Input 1)) -}
  [s#, twoto] |-> [ s# , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP (Top 2) (Mirror (Input 1)) -}
  [0#, p] |-> [0#] {- DP (Top 6) (Mirror (Input 6)) -}
  [0#, twice] |-> [0#, s, p, s, p] {- DP (Top 8) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , s , p , p , p , p , s ] {- DP (Top 9) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , p , p , p , p , s ] {- DP (Top 10) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, s, p, p, p, p, s] {- DP (Top 11) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, p, p, p, p, s] {- DP (Top 12) (Mirror (Input 3)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  ( s
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( twice
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( twoto
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( s#
  , Wk  / 10A 10A 13A - \
        | 10A 10A 13A - |
        | 10A 10A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , s , p , p , p , p , s ] {- DP (Top 9) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , p , p , p , p , s ] {- DP (Top 10) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, s, p, p, p, p, s] {- DP (Top 11) (Mirror (Input 3)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , s , p , p , p , p , s ] {- DP (Top 9) (Mirror (Input 3)) -}
  [s#, twice] |-> [ s# , s , s , s , p , p , p , p , s ] {- DP (Top 10) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, s, p, p, p, p, s] {- DP (Top 11) (Mirror (Input 3)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  ( s
  , Wk  / 0A -  -   \
        | -  0A -2A |
        \ -  -  0A  / )
  ( p
  , Wk  / 0A  -  -   \
        | -2A 0A -2A |
        \ -   -  0A  / )
  ( 0
  , Wk  / 0A 2A -  \
        | -  2A -  |
        \ -  -  0A / )
  ( twice
  , Wk  / 2A 0A 2A \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( twoto
  , Wk  / - - 0A \
        | - - 2A |
        \ - - 0A / )
  ( s#
  , Wk  / 0A -1A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 6) (Mirror (Input 6)) -}
  [0#, twice] |-> [0#, s, p, s, p] {- DP (Top 8) (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  ( s
  , Wk  / 0 1 0 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( p
  , Wk  / 0 1 0 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( 0
  , Wk  / 0 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( twice
  , Wk  / 4 2 2 \
        | 4 2 2 |
        \ 0 0 1 / )
  ( twoto
  , Wk  / 0 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( 0#
  , Wk  / 2 2 5 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 6) (Mirror (Input 6)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 6) (Mirror (Input 6)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
  [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
  [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
reason
  remove un-usable
    SRS
      [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , s , p , p , twice , s , s , s , p , p , p , s , s , p , p ] {- DP Nontop (Mirror (Input 1)) -}
      [0, twice] ->= [ s , p , s , s , s , s , p , s , 0 , s , p , s , p ] {- DP Nontop (Mirror (Input 2)) -}
      [s, twice] ->= [ s , p , s , p , s , p , s , p , twice , s , s , s , s , s , p , p , p , p , s ] {- DP Nontop (Mirror (Input 3)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 4)) -}
      [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 5)) -}
      [0, p] ->= [s, p, s, s, s, s, 0] {- DP Nontop (Mirror (Input 6)) -}
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 6) (Mirror (Input 6)) -}
reason
  (p, 1/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (8,5)\Weight(6,5)\Context\Mirror(10,5)\Deepee(37/10,7)\Weight(14/10,7)\EDG[(5/10,6)\Matrix{\Arctic}{3}\EDG(4/10,6)\Matrix{\ArcticBZ}{3}(0/10,5)\EDG[],(2/10,6)\Matrix{\Natural}{3}\EDG(1/10,6)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 10
  max duration 0.712370052000
  min duration 0.000004577000
  total durat. 1.554899380000
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.894720172000
  min duration 0.588686230000
  total durat. 1.483406402000
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.041928354000
  min duration 3.022170209000
  total durat. 12.131139024000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 133}
    , self = 81
    , parent = Nothing
    , duration = 3.022170209000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:42.895752906 UTC
    , finish = 2025-09-03 13:43:45.917923115 UTC
    , thread_cap_info = ("ThreadId 117", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 92
    , parent = Nothing
    , duration = 3.025871887000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:48.160252966 UTC
    , finish = 2025-09-03 13:43:51.186124853 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 151
      , num_strict_rules = 77
      , num_top_rules = 77
      , num_weak_rules = 74
      , alphabet_size = 21
      , total_length = 2294}
    , self = 79
    , parent = Nothing
    , duration = 3.041168574000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:42.614974 UTC
    , finish = 2025-09-03 13:43:45.656142574 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 309
      , num_strict_rules = 223
      , num_top_rules = 223
      , num_weak_rules = 86
      , alphabet_size = 29
      , total_length = 5216}
    , self = 78
    , parent = Nothing
    , duration = 3.041928354000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:42.174683079 UTC
    , finish = 2025-09-03 13:43:45.216611433 UTC
    , thread_cap_info = ("ThreadId 104", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.314868082000
  min duration 3.314868082000
  total durat. 3.314868082000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 100
      , num_strict_rules = 100
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 23
      , total_length = 1566}
    , self = 73
    , parent = Nothing
    , duration = 3.314868082000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:43:41.060307374 UTC
    , finish = 2025-09-03 13:43:44.375175456 UTC
    , thread_cap_info = ("ThreadId 74", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.875191968000
  min duration 1.875191968000
  total durat. 1.875191968000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 108}
    , self = 71
    , parent = Nothing
    , duration = 1.875191968000
    , status = Fail
    , start = 2025-09-03 13:43:41.174682917 UTC
    , finish = 2025-09-03 13:43:43.049874885 UTC
    , thread_cap_info = ("ThreadId 85", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.081621086000
  min duration 3.021928691000
  total durat. 12.198991780000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 309
      , num_strict_rules = 223
      , num_top_rules = 223
      , num_weak_rules = 86
      , alphabet_size = 29
      , total_length = 5216}
    , self = 77
    , parent = Nothing
    , duration = 3.021928691000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:42.194681466 UTC
    , finish = 2025-09-03 13:43:45.216610157 UTC
    , thread_cap_info = ("ThreadId 105", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 151
      , num_strict_rules = 77
      , num_top_rules = 77
      , num_weak_rules = 74
      , alphabet_size = 21
      , total_length = 2294}
    , self = 80
    , parent = Nothing
    , duration = 3.040007021000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:42.634676305 UTC
    , finish = 2025-09-03 13:43:45.674683326 UTC
    , thread_cap_info = ("ThreadId 112", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 93
    , parent = Nothing
    , duration = 3.055434982000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:48.180500459 UTC
    , finish = 2025-09-03 13:43:51.235935441 UTC
    , thread_cap_info = ("ThreadId 152", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 133}
    , self = 82
    , parent = Nothing
    , duration = 3.081621086000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:42.914680432 UTC
    , finish = 2025-09-03 13:43:45.996301518 UTC
    , thread_cap_info = ("ThreadId 118", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.321386982000
  min duration 1.534201148000
  total durat. 4.855588130000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 142}
    , self = 66
    , parent = Nothing
    , duration = 1.534201148000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:43:41.055290629 UTC
    , finish = 2025-09-03 13:43:42.589491777 UTC
    , thread_cap_info = ("ThreadId 61", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 100
      , num_strict_rules = 100
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 23
      , total_length = 1566}
    , self = 74
    , parent = Nothing
    , duration = 3.321386982000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:43:41.074674115 UTC
    , finish = 2025-09-03 13:43:44.396061097 UTC
    , thread_cap_info = ("ThreadId 76", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.017020170000
  min duration 2.017020170000
  total durat. 2.017020170000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 133}
    , self = 84
    , parent = Nothing
    , duration = 2.017020170000
    , status = Success
    , start = 2025-09-03 13:43:46.109822752 UTC
    , finish = 2025-09-03 13:43:48.126842922 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.644803925000
  min duration 1.644803925000
  total durat. 1.644803925000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 108}
    , self = 72
    , parent = Nothing
    , duration = 1.644803925000
    , status = Fail
    , start = 2025-09-03 13:43:42.255529184 UTC
    , finish = 2025-09-03 13:43:43.900333109 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.658618213000
  min duration 9.047905651000
  total durat. 18.706523864000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 309
      , num_strict_rules = 223
      , num_top_rules = 223
      , num_weak_rules = 86
      , alphabet_size = 29
      , total_length = 5216}
    , self = 96
    , parent = Nothing
    , duration = 9.047905651000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:45.31468126 UTC
    , finish = 2025-09-03 13:43:54.362586911 UTC
    , thread_cap_info = ("ThreadId 132", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 151
      , num_strict_rules = 77
      , num_top_rules = 77
      , num_weak_rules = 74
      , alphabet_size = 21
      , total_length = 2294}
    , self = 97
    , parent = Nothing
    , duration = 9.658618213000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:43:45.716061352 UTC
    , finish = 2025-09-03 13:43:55.374679565 UTC
    , thread_cap_info = ("ThreadId 136", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.398365871000
  min duration 4.398365871000
  total durat. 4.398365871000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 101
    , parent = Nothing
    , duration = 4.398365871000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:43:51.304789537 UTC
    , finish = 2025-09-03 13:43:55.703155408 UTC
    , thread_cap_info = ("ThreadId 158", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.384367696000
  min duration 3.384367696000
  total durat. 3.384367696000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 107}
    , self = 99
    , parent = Nothing
    , duration = 3.384367696000
    , status = Success
    , start = 2025-09-03 13:43:52.225105729 UTC
    , finish = 2025-09-03 13:43:55.609473425 UTC
    , thread_cap_info = ("ThreadId 160", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.267927499000
  min duration 1.267927499000
  total durat. 1.267927499000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 108}
    , self = 75
    , parent = Nothing
    , duration = 1.267927499000
    , status = Fail
    , start = 2025-09-03 13:43:43.134683945 UTC
    , finish = 2025-09-03 13:43:44.402611444 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.224347310000
  min duration 1.224347310000
  total durat. 1.224347310000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 133}
    , self = 86
    , parent = Nothing
    , duration = 1.224347310000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:43:46.935764544 UTC
    , finish = 2025-09-03 13:43:48.160111854 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 9.734914704000
  min duration 0.383697401000
  total durat. 20.962704223000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 309
      , num_strict_rules = 223
      , num_top_rules = 223
      , num_weak_rules = 86
      , alphabet_size = 29
      , total_length = 5216}
    , self = 95
    , parent = Nothing
    , duration = 9.046899404000
    , status = Fail
    , start = 2025-09-03 13:43:45.234766094 UTC
    , finish = 2025-09-03 13:43:54.281665498 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 151
      , num_strict_rules = 77
      , num_top_rules = 77
      , num_weak_rules = 74
      , alphabet_size = 21
      , total_length = 2294}
    , self = 98
    , parent = Nothing
    , duration = 9.734914704000
    , status = Fail
    , start = 2025-09-03 13:43:45.696187101 UTC
    , finish = 2025-09-03 13:43:55.431101805 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.226328885000
  min duration 1.226328885000
  total durat. 1.226328885000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 108}
    , self = 76
    , parent = Nothing
    , duration = 1.226328885000
    , status = Fail
    , start = 2025-09-03 13:43:43.975530207 UTC
    , finish = 2025-09-03 13:43:45.201859092 UTC
    , thread_cap_info = ("ThreadId 122", 2, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 4.475237506000
  min duration 4.475237506000
  total durat. 4.475237506000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 10
      , alphabet_size = 6
      , total_length = 108}
    , self = 91
    , parent = Nothing
    , duration = 4.475237506000
    , status = Fail
    , start = 2025-09-03 13:43:45.294685224 UTC
    , finish = 2025-09-03 13:43:49.76992273 UTC
    , thread_cap_info = ("ThreadId 131", 2, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
F                    = 5 , num_top_rules = 5 , num_weak_rules = 10 , alphabet_size = 6 , total_length
F                    = 142} , self = 54 , parent = Nothing , duration = 0.894720172000 , status
F                    = Fail , start = 2025-09-03 13:43:41.042233094 UTC , finish = 2025-09-03
F                    13:43:41.936953266 UTC , thread_cap_info = ("ThreadId 60", 2, False)}
F                    
| E                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| E                  = 5 , num_top_rules = 5 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| E                  = 142} , self = 66 , parent = Nothing , duration = 1.534201148000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-03 13:43:41.055290629 UTC ,
| E                  finish = 2025-09-03 13:43:42.589491777 UTC , thread_cap_info = ("ThreadId
| E                  61", 2, False)}
| E                  
| | E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                = False\n , verbose = False}" , input_size = Size { num_rules = 100 , num_strict_rules
| | E                = 100 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 23 , total_length
| | E                = 1566} , self = 73 , parent = Nothing , duration = 3.314868082000 , status
| | E                = Except "AsyncCancelled" , start = 2025-09-03 13:43:41.060307374 UTC ,
| | E                finish = 2025-09-03 13:43:44.375175456 UTC , thread_cap_info = ("ThreadId
| | E                74", 0, False)}
| | E                
| | | E              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 100 , num_strict_rules
| | | E              = 100 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 23 , total_length
| | | E              = 1566} , self = 74 , parent = Nothing , duration = 3.321386982000 , status
| | | E              = Except "AsyncCancelled" , start = 2025-09-03 13:43:41.074674115 UTC ,
| | | E              finish = 2025-09-03 13:43:44.396061097 UTC , thread_cap_info = ("ThreadId
| | | E              76", 0, False)}
| | | E              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F            = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | F            = 108} , self = 53 , parent = Nothing , duration = 0.588686230000 , status
| | | | F            = Fail , start = 2025-09-03 13:43:41.15540881 UTC , finish = 2025-09-03
| | | | F            13:43:41.74409504 UTC , thread_cap_info = ("ThreadId 84", 2, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | F          = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | F          = 108} , self = 71 , parent = Nothing , duration = 1.875191968000 , status
| | | | | F          = Fail , start = 2025-09-03 13:43:41.174682917 UTC , finish = 2025-09-03
| | | | | F          13:43:43.049874885 UTC , thread_cap_info = ("ThreadId 85", 2, False)}
| | | | | F          
| | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S        = Size { num_rules = 705 , num_strict_rules = 605 , num_top_rules = 605
| | | | | | S        , num_weak_rules = 100 , alphabet_size = 38 , total_length = 11122} , self
| | | | | | S        = 51 , parent = Nothing , duration = 0.134806521000 , status = Success
| | | | | | S        , start = 2025-09-03 13:43:41.195332671 UTC , finish = 2025-09-03 13:43:41.330139192
| | | | | | S        UTC , thread_cap_info = ("ThreadId 93", 3, False)}
| | | | | | S        
| | | | | | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | S      = Size { num_rules = 679 , num_strict_rules = 579 , num_top_rules = 579
| | | | | | | S      , num_weak_rules = 100 , alphabet_size = 29 , total_length = 10713} , self
| | | | | | | S      = 52 , parent = Nothing , duration = 0.234099817000 , status = Success
| | | | | | | S      , start = 2025-09-03 13:43:41.214671712 UTC , finish = 2025-09-03 13:43:41.448771529
| | | | | | | S      UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | | | | | S      
| | | | | | S |      
| | | | | | S |      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S |      verbose = False}" , input_size = Size { num_rules = 479 , num_strict_rules
| | | | | | S |      = 379 , num_top_rules = 379 , num_weak_rules = 100 , alphabet_size = 38
| | | | | | S |      , total_length = 7834} , self = 55 , parent = Nothing , duration = 0.712370052000
| | | | | | S |      , status = Success , start = 2025-09-03 13:43:41.355298154 UTC , finish
| | | | | | S |      = 2025-09-03 13:43:42.067668206 UTC , thread_cap_info = ("ThreadId 89",
| | | | | | S |      3, False)}
| | | | | | S |      
| | | | | | | S      
| | | | | | | S      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | S      verbose = False}" , input_size = Size { num_rules = 283 , num_strict_rules
| | | | | | | S      = 183 , num_top_rules = 183 , num_weak_rules = 100 , alphabet_size = 29
| | | | | | | S      , total_length = 4748} , self = 57 , parent = Nothing , duration = 0.662232664000
| | | | | | | S      , status = Success , start = 2025-09-03 13:43:41.474682325 UTC , finish
| | | | | | | S      = 2025-09-03 13:43:42.136914989 UTC , thread_cap_info = ("ThreadId 91",
| | | | | | | S      3, False)}
| | | | | | | S      
| | | | F | | |      
| | | | F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |      = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
| | | | F | | |      alphabet_size = 6 , total_length = 108} , self = 59 , parent = Nothing
| | | | F | | |      , duration = 0.383697401000 , status = Fail , start = 2025-09-03 13:43:41.83469022
| | | | F | | |      UTC , finish = 2025-09-03 13:43:42.218387621 UTC , thread_cap_info = ("ThreadId
| | | | F | | |      98", 2, False)}
| | | | F | | |      
F | | | | | | |      
S | | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | |      = 15 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 10 ,
S | | | | | | |      alphabet_size = 6 , total_length = 142} , self = 62 , parent = Nothing
S | | | | | | |      , duration = 0.418903630000 , status = Success , start = 2025-09-03 13:43:42.041542852
S | | | | | | |      UTC , finish = 2025-09-03 13:43:42.460446482 UTC , thread_cap_info = ("ThreadId
S | | | | | | |      100", 2, False)}
S | | | | | | |      
| | | | | | S |      
| | | | | |   S      
| | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 309 , num_strict_rules
| | | | | | E        = 223 , num_top_rules = 223 , num_weak_rules = 86 , alphabet_size = 29
| | | | | | E        , total_length = 5216} , self = 78 , parent = Nothing , duration = 3.041928354000
| | | | | | E        , status = Except "<<timeout>>" , start = 2025-09-03 13:43:42.174683079
| | | | | | E        UTC , finish = 2025-09-03 13:43:45.216611433 UTC , thread_cap_info = ("ThreadId
| | | | | | E        104", 3, False)}
| | | | | | E        
| | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 309 , num_strict_rules
| | | | | | | E      = 223 , num_top_rules = 223 , num_weak_rules = 86 , alphabet_size = 29
| | | | | | | E      , total_length = 5216} , self = 77 , parent = Nothing , duration = 3.021928691000
| | | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-03 13:43:42.194681466
| | | | | | | E      UTC , finish = 2025-09-03 13:43:45.216610157 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      105", 3, False)}
| | | | | | | E      
| | | | F | | |      
| | | | F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | F | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
| | | | F | | |      = 6 , total_length = 108} , self = 72 , parent = Nothing , duration = 1.644803925000
| | | | F | | |      , status = Fail , start = 2025-09-03 13:43:42.255529184 UTC , finish =
| | | | F | | |      2025-09-03 13:43:43.900333109 UTC , thread_cap_info = ("ThreadId 107",
| | | | F | | |      2, False)}
| | | | F | | |      
| | | | | | | | S    Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | | S    verbose = False}" , input_size = Size { num_rules = 151 , num_strict_rules
| | | | | | | | S    = 77 , num_top_rules = 77 , num_weak_rules = 74 , alphabet_size = 21 ,
| | | | | | | | S    total_length = 2294} , self = 61 , parent = Nothing , duration = 0.178763776000
| | | | | | | | S    , status = Success , start = 2025-09-03 13:43:42.274693528 UTC , finish
| | | | | | | | S    = 2025-09-03 13:43:42.453457304 UTC , thread_cap_info = ("ThreadId 91",
| | | | | | | | S    3, False)}
| | | | | | | | S    
| | | | | | | | S    
S | | | | | | |      
  E | | | | | |      
E   | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E   | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E   | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 151 , num_strict_rules
E   | | | | | |      = 77 , num_top_rules = 77 , num_weak_rules = 74 , alphabet_size = 21 ,
E   | | | | | |      total_length = 2294} , self = 79 , parent = Nothing , duration = 3.041168574000
E   | | | | | |      , status = Except "<<timeout>>" , start = 2025-09-03 13:43:42.614974 UTC
E   | | | | | |      , finish = 2025-09-03 13:43:45.656142574 UTC , thread_cap_info = ("ThreadId
E   | | | | | |      111", 3, False)}
E   | | | | | |      
| E | | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 151 , num_strict_rules
| E | | | | | |      = 77 , num_top_rules = 77 , num_weak_rules = 74 , alphabet_size = 21 ,
| E | | | | | |      total_length = 2294} , self = 80 , parent = Nothing , duration = 3.040007021000
| E | | | | | |      , status = Except "<<timeout>>" , start = 2025-09-03 13:43:42.634676305
| E | | | | | |      UTC , finish = 2025-09-03 13:43:45.674683326 UTC , thread_cap_info = ("ThreadId
| E | | | | | |      112", 3, False)}
| E | | | | | |      
| | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | E    = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | | | | E    = 133} , self = 81 , parent = Nothing , duration = 3.022170209000 , status
| | | | | | | | E    = Except "<<timeout>>" , start = 2025-09-03 13:43:42.895752906 UTC , finish
| | | | | | | | E    = 2025-09-03 13:43:45.917923115 UTC , thread_cap_info = ("ThreadId 117",
| | | | | | | | E    2, False)}
| | | | | | | | E    
| | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | E  = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | | | | | E  = 133} , self = 82 , parent = Nothing , duration = 3.081621086000 , status
| | | | | | | | | E  = Except "<<timeout>>" , start = 2025-09-03 13:43:42.914680432 UTC , finish
| | | | | | | | | E  = 2025-09-03 13:43:45.996301518 UTC , thread_cap_info = ("ThreadId 118",
| | | | | | | | | E  2, False)}
| | | | | | | | | E  
| | | | | F | | | |  
| | | | | F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | F | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 , alphabet_size
| | | | | F | | | |  = 6 , total_length = 108} , self = 75 , parent = Nothing , duration = 1.267927499000
| | | | | F | | | |  , status = Fail , start = 2025-09-03 13:43:43.134683945 UTC , finish =
| | | | | F | | | |  2025-09-03 13:43:44.402611444 UTC , thread_cap_info = ("ThreadId 120",
| | | | | F | | | |  2, False)}
| | | | | F | | | |  
| | | | F | | | | |  
| | | | F | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | | | |  = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
| | | | F | | | | |  alphabet_size = 6 , total_length = 108} , self = 76 , parent = Nothing
| | | | F | | | | |  , duration = 1.226328885000 , status = Fail , start = 2025-09-03 13:43:43.975530207
| | | | F | | | | |  UTC , finish = 2025-09-03 13:43:45.201859092 UTC , thread_cap_info = ("ThreadId
| | | | F | | | | |  122", 2, False)}
| | | | F | | | | |  
| | E | | | | | | |  
| |   E | | | | | |  
| |     | F | | | |  
| |     F   | | | |  
| |         | E | |  
| |         E   | |  
| | F           | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F           | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F           | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F           | |  = 309 , num_strict_rules = 223 , num_top_rules = 223 , num_weak_rules =
| | F           | |  86 , alphabet_size = 29 , total_length = 5216} , self = 95 , parent = Nothing
| | F           | |  , duration = 9.046899404000 , status = Fail , start = 2025-09-03 13:43:45.234766094
| | F           | |  UTC , finish = 2025-09-03 13:43:54.281665498 UTC , thread_cap_info = ("ThreadId
| | F           | |  130", 3, False)}
| | F           | |  
| | | F         | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F         | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F         | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F         | |  = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
| | | F         | |  alphabet_size = 6 , total_length = 108} , self = 91 , parent = Nothing
| | | F         | |  , duration = 4.475237506000 , status = Fail , start = 2025-09-03 13:43:45.294685224
| | | F         | |  UTC , finish = 2025-09-03 13:43:49.76992273 UTC , thread_cap_info = ("ThreadId
| | | F         | |  131", 2, False)}
| | | F         | |  
| | | | E       | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E       | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 309
| | | | E       | |  , num_strict_rules = 223 , num_top_rules = 223 , num_weak_rules = 86 ,
| | | | E       | |  alphabet_size = 29 , total_length = 5216} , self = 96 , parent = Nothing
| | | | E       | |  , duration = 9.047905651000 , status = Except "<<timeout>>" , start = 2025-09-03
| | | | E       | |  13:43:45.31468126 UTC , finish = 2025-09-03 13:43:54.362586911 UTC , thread_cap_info
| | | | E       | |  = ("ThreadId 132", 3, False)}
| | | | E       | |  
E | | | |       | |  
  E | | |       | |  
F   | | |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | | |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | | |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | | |       | |  = 151 , num_strict_rules = 77 , num_top_rules = 77 , num_weak_rules = 74
F   | | |       | |  , alphabet_size = 21 , total_length = 2294} , self = 98 , parent = Nothing
F   | | |       | |  , duration = 9.734914704000 , status = Fail , start = 2025-09-03 13:43:45.696187101
F   | | |       | |  UTC , finish = 2025-09-03 13:43:55.431101805 UTC , thread_cap_info = ("ThreadId
F   | | |       | |  135", 3, False)}
F   | | |       | |  
| E | | |       | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | |       | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | |       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | |       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 151
| E | | |       | |  , num_strict_rules = 77 , num_top_rules = 77 , num_weak_rules = 74 , alphabet_size
| E | | |       | |  = 21 , total_length = 2294} , self = 97 , parent = Nothing , duration =
| E | | |       | |  9.658618213000 , status = Except "<<timeout>>" , start = 2025-09-03 13:43:45.716061352
| E | | |       | |  UTC , finish = 2025-09-03 13:43:55.374679565 UTC , thread_cap_info = ("ThreadId
| E | | |       | |  136", 3, False)}
| E | | |       | |  
| | | | |       E |  
| | | | |         E  
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 14 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 10 ,
| | | | | F          alphabet_size = 6 , total_length = 133} , self = 83 , parent = Nothing
| | | | | F          , duration = 0.851157969000 , status = Fail , start = 2025-09-03 13:43:46.03689402
| | | | | F          UTC , finish = 2025-09-03 13:43:46.888051989 UTC , thread_cap_info = ("ThreadId
| | | | | F          139", 2, False)}
| | | | | F          
| | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | S        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size
| | | | | | S        = 6 , total_length = 133} , self = 84 , parent = Nothing , duration = 2.017020170000
| | | | | | S        , status = Success , start = 2025-09-03 13:43:46.109822752 UTC , finish
| | | | | | S        = 2025-09-03 13:43:48.126842922 UTC , thread_cap_info = ("ThreadId 140",
| | | | | | S        2, False)}
| | | | | | S        
| | | | | F |        
| | | | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | E |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 10 , alphabet_size
| | | | | E |        = 6 , total_length = 133} , self = 86 , parent = Nothing , duration = 1.224347310000
| | | | | E |        , status = Except "AsyncCancelled" , start = 2025-09-03 13:43:46.935764544
| | | | | E |        UTC , finish = 2025-09-03 13:43:48.160111854 UTC , thread_cap_info = ("ThreadId
| | | | | E |        143", 2, False)}
| | | | | E |        
| | | | | | S        
| | | | | E          
| | | | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | E          = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | E          = 107} , self = 92 , parent = Nothing , duration = 3.025871887000 , status
| | | | | E          = Except "<<timeout>>" , start = 2025-09-03 13:43:48.160252966 UTC , finish
| | | | | E          = 2025-09-03 13:43:51.186124853 UTC , thread_cap_info = ("ThreadId 151",
| | | | | E          2, False)}
| | | | | E          
| | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | E        = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 6 , total_length
| | | | | | E        = 107} , self = 93 , parent = Nothing , duration = 3.055434982000 , status
| | | | | | E        = Except "<<timeout>>" , start = 2025-09-03 13:43:48.180500459 UTC , finish
| | | | | | E        = 2025-09-03 13:43:51.235935441 UTC , thread_cap_info = ("ThreadId 152",
| | | | | | E        2, False)}
| | | | | | E        
| | | F | | |        
| | |   | E |        
| | |   |   E        
| | | F |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |            = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | | F |            alphabet_size = 6 , total_length = 107} , self = 94 , parent = Nothing
| | | F |            , duration = 0.946034745000 , status = Fail , start = 2025-09-03 13:43:51.235974528
| | | F |            UTC , finish = 2025-09-03 13:43:52.182009273 UTC , thread_cap_info = ("ThreadId
| | | F |            157", 2, False)}
| | | F |            
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | E          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | | | | E          = 6 , total_length = 107} , self = 101 , parent = Nothing , duration =
| | | | | E          4.398365871000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E          13:43:51.304789537 UTC , finish = 2025-09-03 13:43:55.703155408 UTC , thread_cap_info
| | | | | E          = ("ThreadId 158", 2, False)}
| | | | | E          
| | | F | |          
| | | S | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | S | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | S | |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | | S | |          = 6 , total_length = 107} , self = 99 , parent = Nothing , duration = 3.384367696000
| | | S | |          , status = Success , start = 2025-09-03 13:43:52.225105729 UTC , finish
| | | S | |          = 2025-09-03 13:43:55.609473425 UTC , thread_cap_info = ("ThreadId 160",
| | | S | |          2, False)}
| | | S | |          
| | F | | |          
| |   | E |          
| E   |   |          
F     |   |          
      S   |          
          E          
