last 1095 length 4704
CNF 1095 vars 4704 clauses
last 1199 length 5310
CNF 1199 vars 5310 clauses
last 1457 length 5839
last 1465 length 5725
CNF 1457 vars 5839 clauses
CNF 1465 vars 5725 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6207, clauses: 22076
last 6207 length 22076
CNF 6207 vars 22076 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8844, clauses: 31535
last 8844 length 31535
CNF 8844 vars 31535 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18513, clauses: 76086
last 18513 length 76086
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8844, clauses: 31535, status: Satisfied, time: 0.18640337s
CNF 18513 vars 76086 clauses
last 1423 length 5705
last 1399 length 5473
CNF 1399 vars 5473 clauses
CNF 1423 vars 5705 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18513, clauses: 76086, status: Satisfied, time: 0.34632161s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8633, clauses: 30714
last 8633 length 30714
CNF 8633 vars 30714 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 767 length 3164
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8633, clauses: 30714, status: Satisfied, time: 0.19397268s
last 968 length 3953
CNF 767 vars 3164 clauses
CNF 968 vars 3953 clauses
last 965 length 3835
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5133, clauses: 17807
CNF 965 vars 3835 clauses
last 1121 length 4553
last 5133 length 17807
CNF 1121 vars 4553 clauses
CNF 5133 vars 17807 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5133, clauses: 17807, status: Satisfied, time: 0.30024325s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17367, clauses: 71373
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6506, clauses: 22770
last 6506 length 22770
CNF 6506 vars 22770 clauses
**************************************************
summary
**************************************************
SRS with 16 rules on 11 letters       mirror
SRS with 16 rules on 11 letters       DP
SRS with 11 strict rules and 16 weak rules on 15 letters       weights
SRS with 8 strict rules and 16 weak rules on 14 letters       EDG
SRS with 8 strict rules and 16 weak rules on 14 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 16 weak rules on 14 letters       weights
SRS with 3 strict rules and 16 weak rules on 13 letters       EDG
SRS with 3 strict rules and 16 weak rules on 13 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 16 weak rules on 13 letters       EDG
SRS with 2 strict rules and 16 weak rules on 13 letters       Usable
SRS with 2 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BAA] {- Input 2 -}
  [BA, b] -> [BA, B] {- Input 3 -}
  [BAA, a] -> [BAA, A] {- Input 4 -}
  [BAA, b] -> [BAAB] {- Input 5 -}
  [BAAB, a] -> [BAABA] {- Input 6 -}
  [BAAB, b] -> [BAAB, B] {- Input 7 -}
  [BAABA, a] -> [BAABAA] {- Input 8 -}
  [BAABA, b] -> [BAABA, B] {- Input 9 -}
  [BAABAA] -> [a, b, a] {- Input 10 -}
  [A, a] -> [A, A] {- Input 11 -}
  [A, b] -> [AB] {- Input 12 -}
  [AB, a] -> [ABA] {- Input 13 -}
  [AB, b] -> [AB, B] {- Input 14 -}
  [ABA] -> [b, a, a, b, a, a] {- Input 15 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, B] -> [BA] {- Mirror (Input 0) -}
  [b, B] -> [B, B] {- Mirror (Input 1) -}
  [a, BA] -> [BAA] {- Mirror (Input 2) -}
  [b, BA] -> [B, BA] {- Mirror (Input 3) -}
  [a, BAA] -> [A, BAA] {- Mirror (Input 4) -}
  [b, BAA] -> [BAAB] {- Mirror (Input 5) -}
  [a, BAAB] -> [BAABA] {- Mirror (Input 6) -}
  [b, BAAB] -> [B, BAAB] {- Mirror (Input 7) -}
  [a, BAABA] -> [BAABAA] {- Mirror (Input 8) -}
  [b, BAABA] -> [B, BAABA] {- Mirror (Input 9) -}
  [BAABAA] -> [a, b, a] {- Mirror (Input 10) -}
  [a, A] -> [A, A] {- Mirror (Input 11) -}
  [b, A] -> [AB] {- Mirror (Input 12) -}
  [a, AB] -> [ABA] {- Mirror (Input 13) -}
  [b, AB] -> [B, AB] {- Mirror (Input 14) -}
  [ABA] -> [a, a, b, a, a, b] {- Mirror (Input 15) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [BAABAA#] |-> [b#, a] {- DP (Top 1) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [ABA#] |-> [a#, a, b] {- DP (Top 3) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, a, b, a, a, b] {- DP (Top 0) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b] {- DP (Top 4) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b, a, a, b] {- DP (Top 1) (Mirror (Input 15)) -}
  [ABA#] |-> [b#] {- DP (Top 5) (Mirror (Input 15)) -}
  [ABA#] |-> [b#, a, a, b] {- DP (Top 2) (Mirror (Input 15)) -}
reason
  (BAAB, 0/1)
  (BAABAA, 0/1)
  (BAABA, 0/1)
  (a, 0/1)
  (B, 0/1)
  (b, 0/1)
  (ABA, 0/1)
  (BA, 0/1)
  (AB, 0/1)
  (BAA, 0/1)
  (A, 0/1)
  (BAABAA#, 1/1)
  (a#, 1/1)
  (b#, 0/1)
  (ABA#, 1/1)
   property Termination
has value Just True
for SRS
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [ABA#] |-> [a#, a, b] {- DP (Top 3) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, a, b, a, a, b] {- DP (Top 0) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b] {- DP (Top 4) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b, a, a, b] {- DP (Top 1) (Mirror (Input 15)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [ABA#] |-> [a#, a, b] {- DP (Top 3) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, a, b, a, a, b] {- DP (Top 0) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b] {- DP (Top 4) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b, a, a, b] {- DP (Top 1) (Mirror (Input 15)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  ( BAAB
  , Wk  / 0A 2A  2A \
        | -  -2A -  |
        \ -  -   0A / )
  ( BAABAA
  , Wk  / 0A  2A 2A \
        | -1A 0A 0A |
        \ -   -  0A / )
  ( BAABA
  , Wk  / 0A  2A  2A \
        | -2A -2A -  |
        \ -   -   0A / )
  ( a
  , Wk  / 0A  -  -  \
        | -2A 1A -  |
        \ -   -  0A / )
  ( B
  , Wk  / 0A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( b
  , Wk  / 0A 1A  -  \
        | -  -2A -  |
        \ -  -   0A / )
  ( ABA
  , Wk  / 2A 1A 2A \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( BA
  , Wk  / 0A  2A 2A \
        | -2A 0A 0A |
        \ -   -  0A / )
  ( AB
  , Wk  / 2A  2A 2A \
        | -1A -  -  |
        \ -   -  0A / )
  ( BAA
  , Wk  / -   -  0A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( A
  , Wk  / -  -  0A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( BAABAA#
  , Wk  / 0A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( a#
  , Wk  / 0A 0A -2A \
        | -  -  -   |
        \ -  -  0A  / )
  ( ABA#
  , Wk  / 2A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  (BAAB, 0/1)
  (BAABAA, 0/1)
  (BAABA, 0/1)
  (a, 0/1)
  (B, 0/1)
  (b, 0/1)
  (ABA, 0/1)
  (BA, 0/1)
  (AB, 0/1)
  (BAA, 0/1)
  (A, 0/1)
  (BAABAA#, 1/1)
  (a#, 1/1)
  (ABA#, 0/1)
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  ( BAAB
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( BAABAA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( BAABA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( B
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( ABA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( BA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( AB
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( BAA
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( A
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( BAABAA#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 10A 12A 12A - \
        | 10A 12A 12A - |
        | 10A 12A 12A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  remove un-usable
    SRS
      [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
      [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
      [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
      [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
      [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
      [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
      [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
      [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
      [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
      [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
      [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
      [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
      [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
      [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
      [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
      [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
reason
  (BAABA, 2/1)
  (BAABAA#, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(16,11)\Deepee(11/16,15)\Weight\EDG(8/16,14)\Matrix{\ArcticBZ}{3}(4/16,14)\Weight\EDG(3/16,13)\Matrix{\Arctic}{3}\EDG(2/16,13)\Usable(2,3)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.527316675000
  min duration 0.461283563000
  total durat. 1.508744629000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.460807081000
  min duration 0.406921417000
  total durat. 1.287774021000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.066074112000
  min duration 1.066074112000
  total durat. 1.066074112000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 16
      , alphabet_size = 14
      , total_length = 92}
    , self = 81
    , parent = Nothing
    , duration = 1.066074112000
    , status = Fail
    , start = 2025-09-03 11:09:07.648467706 UTC
    , finish = 2025-09-03 11:09:08.714541818 UTC
    , thread_cap_info = ("ThreadId 69", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 10
  max duration 0.347319210000
  min duration 0.000047545000
  total durat. 1.222910276000
**************************************************
S              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S              = Size { num_rules = 1936 , num_strict_rules = 1936 , num_top_rules = 0
S              , num_weak_rules = 0 , alphabet_size = 121 , total_length = 11132} , self
S              = 41 , parent = Nothing , duration = 0.296556047000 , status = Success
S              , start = 2025-09-03 11:09:07.619900408 UTC , finish = 2025-09-03 11:09:07.916456455
S              UTC , thread_cap_info = ("ThreadId 61", 1, False)}
S              
| S            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S            = Size { num_rules = 1936 , num_strict_rules = 1936 , num_top_rules = 0
| S            , num_weak_rules = 0 , alphabet_size = 121 , total_length = 11132} , self
| S            = 43 , parent = Nothing , duration = 0.319578464000 , status = Success
| S            , start = 2025-09-03 11:09:07.624260839 UTC , finish = 2025-09-03 11:09:07.943839303
| S            UTC , thread_cap_info = ("ThreadId 62", 3, False)}
| S            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 35 , num_strict_rules
| | F          = 19 , num_top_rules = 19 , num_weak_rules = 16 , alphabet_size = 18 ,
| | F          total_length = 124} , self = 38 , parent = Nothing , duration = 0.128385761000
| | F          , status = Fail , start = 2025-09-03 11:09:07.631127184 UTC , finish =
| | F          2025-09-03 11:09:07.759512945 UTC , thread_cap_info = ("ThreadId 67", 2,
| | F          False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 35 , num_strict_rules
| | | F        = 19 , num_top_rules = 19 , num_weak_rules = 16 , alphabet_size = 18 ,
| | | F        total_length = 124} , self = 39 , parent = Nothing , duration = 0.121141237000
| | | F        , status = Fail , start = 2025-09-03 11:09:07.638394437 UTC , finish =
| | | F        2025-09-03 11:09:07.759535674 UTC , thread_cap_info = ("ThreadId 68", 2,
| | | F        False)}
| | | F        
| | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F      = 24 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 ,
| | | | F      alphabet_size = 14 , total_length = 92} , self = 81 , parent = Nothing
| | | | F      , duration = 1.066074112000 , status = Fail , start = 2025-09-03 11:09:07.648467706
| | | | F      UTC , finish = 2025-09-03 11:09:08.714541818 UTC , thread_cap_info = ("ThreadId
| | | | F      69", 2, False)}
| | | | F      
| | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | | | | S    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size
| | | | | S    = 14 , total_length = 92} , self = 79 , parent = Nothing , duration = 0.852556972000
| | | | | S    , status = Success , start = 2025-09-03 11:09:07.677473649 UTC , finish
| | | | | S    = 2025-09-03 11:09:08.530030621 UTC , thread_cap_info = ("ThreadId 72",
| | | | | S    2, False)}
| | | | | S    
| | F | | |    
| |   F | |    
| | S   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | |    = 35 , num_strict_rules = 19 , num_top_rules = 19 , num_weak_rules = 16
| | S   | |    , alphabet_size = 18 , total_length = 124} , self = 59 , parent = Nothing
| | S   | |    , duration = 0.406921417000 , status = Success , start = 2025-09-03 11:09:07.777470706
| | S   | |    UTC , finish = 2025-09-03 11:09:08.184392123 UTC , thread_cap_info = ("ThreadId
| | S   | |    81", 2, False)}
| | S   | |    
| | | E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 35
| | | E | |    , num_strict_rules = 19 , num_top_rules = 19 , num_weak_rules = 16 , alphabet_size
| | | E | |    = 18 , total_length = 124} , self = 68 , parent = Nothing , duration =
| | | E | |    0.520144391000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | |    11:09:07.797469964 UTC , finish = 2025-09-03 11:09:08.317614355 UTC , thread_cap_info
| | | E | |    = ("ThreadId 82", 2, False)}
| | | E | |    
S | | | | |    
  S | | | |    
S   | | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S   | | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S   | | | |    = Size { num_rules = 412 , num_strict_rules = 242 , num_top_rules = 242
S   | | | |    , num_weak_rules = 170 , alphabet_size = 121 , total_length = 2434} , self
S   | | | |    = 56 , parent = Nothing , duration = 0.116565898000 , status = Success
S   | | | |    , start = 2025-09-03 11:09:08.009098346 UTC , finish = 2025-09-03 11:09:08.125664244
S   | | | |    UTC , thread_cap_info = ("ThreadId 96", 1, False)}
S   | | | |    
| S | | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | | | |    = Size { num_rules = 394 , num_strict_rules = 224 , num_top_rules = 224
| S | | | |    , num_weak_rules = 170 , alphabet_size = 141 , total_length = 2164} , self
| S | | | |    = 57 , parent = Nothing , duration = 0.119468917000 , status = Success
| S | | | |    , start = 2025-09-03 11:09:08.017995874 UTC , finish = 2025-09-03 11:09:08.137464791
| S | | | |    UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| S | | | |    
| | | | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S  = Size { num_rules = 1573 , num_strict_rules = 1573 , num_top_rules = 0
| | | | | | S  , num_weak_rules = 0 , alphabet_size = 121 , total_length = 8954} , self
| | | | | | S  = 75 , parent = Nothing , duration = 0.347319210000 , status = Success
| | | | | | S  , start = 2025-09-03 11:09:08.048983508 UTC , finish = 2025-09-03 11:09:08.396302718
| | | | | | S  UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | | | | | S  
S | | | | | |  
  S | | | | |  
S   | | | | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
S   | | | | |  verbose = False}" , input_size = Size { num_rules = 274 , num_strict_rules
S   | | | | |  = 104 , num_top_rules = 104 , num_weak_rules = 170 , alphabet_size = 120
S   | | | | |  , total_length = 1668} , self = 63 , parent = Nothing , duration = 0.146834002000
S   | | | | |  , status = Success , start = 2025-09-03 11:09:08.13747597 UTC , finish
S   | | | | |  = 2025-09-03 11:09:08.284309972 UTC , thread_cap_info = ("ThreadId 93",
S   | | | | |  1, False)}
S   | | | | |  
| S | | | | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| S | | | | |  verbose = False}" , input_size = Size { num_rules = 256 , num_strict_rules
| S | | | | |  = 86 , num_top_rules = 86 , num_weak_rules = 170 , alphabet_size = 135
| S | | | | |  , total_length = 1522} , self = 62 , parent = Nothing , duration = 0.137325477000
| S | | | | |  , status = Success , start = 2025-09-03 11:09:08.137481762 UTC , finish
| S | | | | |  = 2025-09-03 11:09:08.274807239 UTC , thread_cap_info = ("ThreadId 91",
| S | | | | |  1, False)}
| S | | | | |  
| | S | | | |  
| S   | | | |  
S     | | | |  
      E | | |  
S       | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S       | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S       | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S       | | |  = 34 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 16
S       | | |  , alphabet_size = 18 , total_length = 120} , self = 86 , parent = Nothing
S       | | |  , duration = 0.460807081000 , status = Success , start = 2025-09-03 11:09:08.373210414
S       | | |  UTC , finish = 2025-09-03 11:09:08.834017495 UTC , thread_cap_info = ("ThreadId
S       | | |  133", 2, False)}
S       | | |  
|       | | S  
| E     | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E     | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E     | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E     | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E     | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E     | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| E     | |    , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 16 , alphabet_size
| E     | |    = 18 , total_length = 120} , self = 88 , parent = Nothing , duration =
| E     | |    0.461283563000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E     | |    11:09:08.397481821 UTC , finish = 2025-09-03 11:09:08.858765384 UTC , thread_cap_info
| E     | |    = ("ThreadId 135", 2, False)}
| E     | |    
| |     | S    
| |     F      
S |            
  E            
S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S              = 19 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 16 ,
S              alphabet_size = 13 , total_length = 69} , self = 97 , parent = Nothing
S              , duration = 0.420045523000 , status = Success , start = 2025-09-03 11:09:08.863358602
S              UTC , finish = 2025-09-03 11:09:09.283404125 UTC , thread_cap_info = ("ThreadId
S              154", 2, False)}
S              
| E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| E            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 16 , alphabet_size
| E            = 13 , total_length = 69} , self = 99 , parent = Nothing , duration = 0.527316675000
| E            , status = Except "AsyncCancelled" , start = 2025-09-03 11:09:08.897815246
| E            UTC , finish = 2025-09-03 11:09:09.425131921 UTC , thread_cap_info = ("ThreadId
| E            156", 2, False)}
| E            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | F          = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 16 , total_length
| | F          = 86} , self = 95 , parent = Nothing , duration = 0.270980847000 , status
| | F          = Fail , start = 2025-09-03 11:09:08.917473762 UTC , finish = 2025-09-03
| | F          11:09:09.188454609 UTC , thread_cap_info = ("ThreadId 157", 2, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | F        = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 16 , total_length
| | | F        = 86} , self = 96 , parent = Nothing , duration = 0.311884262000 , status
| | | F        = Fail , start = 2025-09-03 11:09:08.929716819 UTC , finish = 2025-09-03
| | | F        11:09:09.241601081 UTC , thread_cap_info = ("ThreadId 158", 2, False)}
| | | F        
| | F |        
| |   F        
S |            
  E            
