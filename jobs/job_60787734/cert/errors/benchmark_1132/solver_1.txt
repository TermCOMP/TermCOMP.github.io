last 492 length 1937
last 460 length 1829
CNF 492 vars 1937 clauses
CNF 460 vars 1829 clauses
last 597 length 2390
last 639 length 2596
CNF 597 vars 2390 clauses
CNF 639 vars 2596 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2216, clauses: 7920
last 2216 length 7920
CNF 2216 vars 7920 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2216, clauses: 7920, status: Unsatisfied, time: 0.11358889s
last 4231 length 19054
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2705, clauses: 9699
last 2705 length 9699
CNF 4231 vars 19054 clauses
CNF 2705 vars 9699 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6794, clauses: 28115
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7795, clauses: 32239
last 4963 length 24615
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4319, clauses: 16950
last 7908 length 35642
last 6794 length 28115
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2705, clauses: 9699, status: Unsatisfied, time: 0.253035332s
last 10992 length 46814
last 7795 length 32239
CNF 4963 vars 24615 clauses
last 4319 length 16950
last 9603 length 44097
CNF 7908 vars 35642 clauses
last 12656 length 53920
CNF 6794 vars 28115 clauses
CNF 10992 vars 46814 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4982, clauses: 19533
CNF 7795 vars 32239 clauses
CNF 4319 vars 16950 clauses
CNF 9603 vars 44097 clauses
CNF 12656 vars 53920 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6794, clauses: 28115, status: Satisfied, time: 0.39391617s
last 4982 length 19533
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7795, clauses: 32239, status: Satisfied, time: 0.358931469s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17449, clauses: 68530
last 430 length 1707
last 422 length 1669
last 17449 length 68530
CNF 422 vars 1669 clauses
CNF 430 vars 1707 clauses
CNF 17449 vars 68530 clauses
last 496 length 2005
last 593 length 2416
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20580, clauses: 81326
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2003, clauses: 7095
CNF 496 vars 2005 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6454, clauses: 26695
CNF 593 vars 2416 clauses
last 20580 length 81326
last 2003 length 7095
last 6454 length 26695
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2388, clauses: 8453
CNF 2003 vars 7095 clauses
CNF 20580 vars 81326 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17449, clauses: 68530, status: Satisfied, time: 0.925040073s
CNF 6454 vars 26695 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 30647
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 45215, clauses: 189041
last 2388 length 8453
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2003, clauses: 7095, status: Unsatisfied, time: 0.616378778s
**************************************************last 7411 length 30647
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20580, clauses: 81326, status: Satisfied, time: 0.748450512s

CNF 2388 vars 8453 clauses
summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       mirror
SRS with 36 rules on 9 letters       DP
SRS with 56 strict rules and 36 weak rules on 15 letters       EDG
SRS with 50 strict rules and 36 weak rules on 15 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 21 strict rules and 36 weak rules on 15 letters       weights
SRS with 4 strict rules and 36 weak rules on 13 letters       EDG
4 sub-proofs
  1 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  3 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  4 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, a, a, c] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, c, a] -> [b] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [ [a, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [ [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [ [c, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [ [c, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [ [c, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, c], [c, a], [a, a]] -> [ [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, c], [c, a], [a, b]] -> [ [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, c], [c, a], [a, c]] -> [ [a, b] , [ b , c ] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, c], [c, a], [a, a]] -> [ [b, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, c], [c, a], [a, b]] -> [ [b, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, c], [c, a], [a, c]] -> [ [b, b] , [ b , c ] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, c], [c, a], [a, a]] -> [ [c, b] , [ b , a ] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, c], [c, a], [a, b]] -> [ [c, b] , [ b , b ] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, c], [c, a], [a, c]] -> [ [c, b] , [ b , c ] ] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [a, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [a, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [b, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [c, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [a, b]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [a, b]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [c, b]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [c, b]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [c, b]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a], [c, a], [c, c], [a, c]] -> [ [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[a, b], [c, a], [c, c], [a, c]] -> [ [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[a, c], [c, a], [c, c], [a, c]] -> [ [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[a, a], [c, a], [c, c], [b, c]] -> [ [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[a, b], [c, a], [c, c], [b, c]] -> [ [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[a, c], [c, a], [c, c], [b, c]] -> [ [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[a, a], [c, a], [c, c], [c, c]] -> [ [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[a, b], [c, a], [c, c], [c, c]] -> [ [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[a, c], [c, a], [c, c], [c, c]] -> [ [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a]#, [c, a], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, a]#, [c, a], [c, c], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, a]#, [c, a], [c, c], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, a]#, [c, a], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, a]#, [c, a], [c, c], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, b]#, [c, a], [c, c], [a, c]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, b]#, [c, a], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, b]#, [c, a], [c, c], [b, c]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, b]#, [c, a], [c, c], [c, c]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, c]#, [c, a], [c, c], [a, c]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, c]#, [c, a], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, c]#, [c, a], [c, c], [b, c]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, c]#, [c, a], [c, c], [c, c]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [c, a], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}CNF 7411 vars 30647 clauses

  [[b, b]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a]#, [c, a], [c, c], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [c, a], [c, c], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [c, a], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [c, a], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, b]#, [c, a], [c, c], [a, c]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [c, a], [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, b]#, [c, a], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b]#, [c, a], [c, c], [b, c]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c]#, [c, a], [c, c], [a, c]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [c, a], [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, c]#, [c, a], [c, c], [b, c]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, c]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, c]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 8A 9A 9A - \
        | 8A 9A 9A - |
        | 8A 9A 9A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 8A 8A 11A - \
        | 8A 8A 11A - |
        | 8A 8A 11A - |
        \ -  -  -   - / )
  ( [a, c]#
  , Wk  / 8A 8A 8A - \
        | 8A 8A 8A - |
        | 8A 8A 8A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 8A 8A 11A - \
        | 8A 8A 11A - |
        | 8A 8A 11A - |
        \ -  -  -   - / )
  ( [b, b]#
  , Wk  / 8A 8A 8A - \
        | 8A 8A 8A - |
        | 8A 8A 8A - |
        \ -  -  -  - / )
  ( [b, c]#
  , Wk  / 8A 10A 10A - \
        | 8A 10A 10A - |
        | 8A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 0/1)
  ([a, c]#, 0/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2388, clauses: 8453, status: Unsatisfied, time: 0.271905006s
  Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 50071, clauses: 209287
[[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}last 50071 length 209287

  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
reason
  ([b, b], 1/1)
  ([b, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[a, a], [c, a], [c, c], [a, c]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [a, c]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [a, c]] ->= [ [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [b, c]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [b, c]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [b, c]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[a, a], [c, a], [c, c], [c, c]] ->= [ [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[a, b], [c, a], [c, c], [c, c]] ->= [ [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[a, c], [c, a], [c, c], [c, c]] ->= [ [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
reason
  ([b, b], 1/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}\Mirror(36,9)\Deepee(56/36,15)\EDG(50/36,15)\Matrix{\Arctic}{3}(21/36,15)\Weight(4/36,13)\EDG[(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 30647, status: Satisfied, time: 0.154942156s
CNF 50071 vars 209287 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.006922111000
  min duration 0.011751345000
  total durat. 3.008943015000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 17
      , total_length = 525}
    , self = 73
    , parent = Nothing
    , duration = 1.006922111000
    , status = Fail
    , start = 2025-09-03 11:02:47.18795445 UTC
    , finish = 2025-09-03 11:02:48.194876561 UTC
    , thread_cap_info = ("ThreadId 103", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.770283704000
  min duration 0.014924810000
  total durat. 3.204783790000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.097256542000
  min duration 1.079044682000
  total durat. 2.176301224000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 44}
    , self = 74
    , parent = Nothing
    , duration = 1.079044682000
    , status = Success
    , start = 2025-09-03 11:02:47.134817055 UTC
    , finish = 2025-09-03 11:02:48.213861737 UTC
    , thread_cap_info = ("ThreadId 100", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 37}
    , self = 66
    , parent = Nothing
    , duration = 1.097256542000
    , status = Success
    , start = 2025-09-03 11:02:47.082469256 UTC
    , finish = 2025-09-03 11:02:48.179725798 UTC
    , thread_cap_info = ("ThreadId 89", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.606786947000
  min duration 1.606786947000
  total durat. 1.606786947000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 86
      , num_strict_rules = 50
      , num_top_rules = 50
      , num_weak_rules = 36
      , alphabet_size = 15
      , total_length = 441}
    , self = 87
    , parent = Nothing
    , duration = 1.606786947000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:47.913982266 UTC
    , finish = 2025-09-03 11:02:49.520769213 UTC
    , thread_cap_info = ("ThreadId 125", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.934990954000
  min duration 0.656781612000
  total durat. 1.591772566000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.700447867000
  min duration 1.700447867000
  total durat. 1.700447867000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 86
      , num_strict_rules = 50
      , num_top_rules = 50
      , num_weak_rules = 36
      , alphabet_size = 15
      , total_length = 441}
    , self = 85
    , parent = Nothing
    , duration = 1.700447867000
    , status = Success
    , start = 2025-09-03 11:02:47.816479187 UTC
    , finish = 2025-09-03 11:02:49.516927054 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 86 , num_strict_rules
F                    = 50 , num_top_rules = 50 , num_weak_rules = 36 , alphabet_size = 15 ,
F                    total_length = 441} , self = 64 , parent = Nothing , duration = 0.854155656000
F                    , status = Fail , start = 2025-09-03 11:02:47.053217145 UTC , finish =
F                    2025-09-03 11:02:47.907372801 UTC , thread_cap_info = ("ThreadId 84", 2,
F                    False)}
F                    
| F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                  = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| F                  alphabet_size = 4 , total_length = 37} , self = 56 , parent = Nothing ,
| F                  duration = 0.140004751000 , status = Fail , start = 2025-09-03 11:02:47.05856014
| F                  UTC , finish = 2025-09-03 11:02:47.198564891 UTC , thread_cap_info = ("ThreadId
| F                  87", 0, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 86 , num_strict_rules
| | F                = 50 , num_top_rules = 50 , num_weak_rules = 36 , alphabet_size = 15 ,
| | F                total_length = 441} , self = 63 , parent = Nothing , duration = 0.742837946000
| | F                , status = Fail , start = 2025-09-03 11:02:47.073612228 UTC , finish =
| | F                2025-09-03 11:02:47.816450174 UTC , thread_cap_info = ("ThreadId 85", 2,
| | F                False)}
| | F                
| | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | S              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | S              = 4 , total_length = 37} , self = 66 , parent = Nothing , duration = 1.097256542000
| | | S              , status = Success , start = 2025-09-03 11:02:47.082469256 UTC , finish
| | | S              = 2025-09-03 11:02:48.179725798 UTC , thread_cap_info = ("ThreadId 89",
| | | S              0, False)}
| | | S              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | F            = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 180} , self = 58 , parent = Nothing , duration = 0.212205826000 , status
| | | | F            = Fail , start = 2025-09-03 11:02:47.11314082 UTC , finish = 2025-09-03
| | | | F            11:02:47.325346646 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | F          alphabet_size = 5 , total_length = 44} , self = 61 , parent = Nothing ,
| | | | | F          duration = 0.586867573000 , status = Fail , start = 2025-09-03 11:02:47.113161044
| | | | | F          UTC , finish = 2025-09-03 11:02:47.700028617 UTC , thread_cap_info = ("ThreadId
| | | | | F          99", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | F        = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F        = 180} , self = 62 , parent = Nothing , duration = 0.635010401000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:02:47.13314014 UTC , finish = 2025-09-03
| | | | | | F        11:02:47.768150541 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | F        
| | | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | S      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | | | S      = 5 , total_length = 44} , self = 74 , parent = Nothing , duration = 1.079044682000
| | | | | | | S      , status = Success , start = 2025-09-03 11:02:47.134817055 UTC , finish
| | | | | | | S      = 2025-09-03 11:02:48.213861737 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | S      0, False)}
| | | | | | | S      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | | | | F    = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | F    total_length = 525} , self = 73 , parent = Nothing , duration = 1.006922111000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:02:47.18795445 UTC , finish = 2025-09-03
| | | | | | | | F    11:02:48.194876561 UTC , thread_cap_info = ("ThreadId 103", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | | | | | F  = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | | F  total_length = 525} , self = 65 , parent = Nothing , duration = 0.770283704000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:02:47.193493844 UTC , finish =
| | | | | | | | | F  2025-09-03 11:02:47.963777548 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | | | F  2, False)}
| | | | | | | | | F  
| F | | | | | | | |  
| E | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| E | | | | | | | |  = 4 , total_length = 37} , self = 68 , parent = Nothing , duration = 0.934990954000
| E | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:02:47.244808367
| E | | | | | | | |  UTC , finish = 2025-09-03 11:02:48.179799321 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | |  107", 0, False)}
| E | | | | | | | |  
| | | | F | | | | |  
| | | |   F | | | |  
| | | | E   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | E   | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | E   | | | |  = 5 , total_length = 44} , self = 76 , parent = Nothing , duration = 0.656781612000
| | | | E   | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:02:47.700053472
| | | | E   | | | |  UTC , finish = 2025-09-03 11:02:48.356835084 UTC , thread_cap_info = ("ThreadId
| | | | E   | | | |  116", 0, False)}
| | | | E   | | | |  
| | | | |   F | | |  
| | F | |     | | |  
| | S | |     | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |     | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |     | | |  = 86 , num_strict_rules = 50 , num_top_rules = 50 , num_weak_rules = 36
| | S | |     | | |  , alphabet_size = 15 , total_length = 441} , self = 85 , parent = Nothing
| | S | |     | | |  , duration = 1.700447867000 , status = Success , start = 2025-09-03 11:02:47.816479187
| | S | |     | | |  UTC , finish = 2025-09-03 11:02:49.516927054 UTC , thread_cap_info = ("ThreadId
| | S | |     | | |  124", 2, False)}
| | S | |     | | |  
F | | | |     | | |  
E | | | |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | |     | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 86
E | | | |     | | |  , num_strict_rules = 50 , num_top_rules = 50 , num_weak_rules = 36 , alphabet_size
E | | | |     | | |  = 15 , total_length = 441} , self = 87 , parent = Nothing , duration =
E | | | |     | | |  1.606786947000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | |     | | |  11:02:47.913982266 UTC , finish = 2025-09-03 11:02:49.520769213 UTC , thread_cap_info
E | | | |     | | |  = ("ThreadId 125", 2, False)}
E | | | |     | | |  
| | | | |     | | F  
| | | S |     | |    
| E |   |     | |    
| F |   |     | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |   |     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   |     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F |   |     | |    = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| F |   |     | |    = 33} , self = 82 , parent = Nothing , duration = 0.379186184000 , status
| F |   |     | |    = Fail , start = 2025-09-03 11:02:48.179906065 UTC , finish = 2025-09-03
| F |   |     | |    11:02:48.559092249 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| F |   |     | |    
| | | F |     | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F |     | |    = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | F |     | |    = 33} , self = 81 , parent = Nothing , duration = 0.352924466000 , status
| | | F |     | |    = Fail , start = 2025-09-03 11:02:48.185582334 UTC , finish = 2025-09-03
| | | F |     | |    11:02:48.5385068 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
| | | F |     | |    
| | | | |     | F    
| | | | |     S      
| | | | E            
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F            = 37} , self = 83 , parent = Nothing , duration = 0.524201817000 , status
| | | | F            = Fail , start = 2025-09-03 11:02:48.453726765 UTC , finish = 2025-09-03
| | | | F            11:02:48.977928582 UTC , thread_cap_info = ("ThreadId 142", 0, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | F          = 37} , self = 84 , parent = Nothing , duration = 0.619717704000 , status
| | | | | F          = Fail , start = 2025-09-03 11:02:48.458715093 UTC , finish = 2025-09-03
| | | | | F          11:02:49.078432797 UTC , thread_cap_info = ("ThreadId 143", 0, False)}
| | | | | F          
| | | F | |          
| F |   | |          
|   |   F |          
|   |     F          
|   S                
E                    
