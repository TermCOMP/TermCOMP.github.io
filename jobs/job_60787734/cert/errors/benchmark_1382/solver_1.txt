last 4103 length 18437
last 3855 length 19800
CNF 4103 vars 18437 clauses
CNF 3855 vars 19800 clauses
last 573 length 2269
CNF 573 vars 2269 clauses
last 481 length 1926
CNF 481 vars 1926 clauses
last 5828 length 23758
CNF 5828 vars 23758 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8616
last 2384 length 8616
last 505 length 2092
last 480 length 1934
CNF 505 vars 2092 clauses
CNF 2384 vars 8616 clauses
last 9521 length 39301
last 10992 length 47979
CNF 480 vars 1934 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6510, clauses: 26872
last 8930 length 43854
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15177, clauses: 60206
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1976, clauses: 7083
CNF 10992 vars 47979 clauses
CNF 9521 vars 39301 clauses
last 6510 length 26872
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8616, status: Unsatisfied, time: 0.345767065s
CNF 8930 vars 43854 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6088, clauses: 25201
last 15177 length 60206
last 1976 length 7083
CNF 6510 vars 26872 clauses
last 6088 length 25201
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4127, clauses: 16486
CNF 1976 vars 7083 clauses
last 4127 length 16486
CNF 6088 vars 25201 clauses
CNF 15177 vars 60206 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6510, clauses: 26872, status: Satisfied, time: 0.240693722s
CNF 4127 vars 16486 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1976, clauses: 7083, status: Unsatisfied, time: 0.386495507s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6088, clauses: 25201, status: Satisfied, time: 0.277448274s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15177, clauses: 60206, status: Satisfied, time: 0.631868874s
last 523 length 2079
last 476 length 1909
CNF 476 vars 1909 clauses
last 410 length 1666
CNF 523 vars 2079 clauses
last 475 length 1970
CNF 475 vars 1970 clauses
CNF 410 vars 1666 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8191
last 2278 length 8191
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6258
last 1763 length 6258
CNF 2278 vars 8191 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17619, clauses: 69176
CNF 1763 vars 6258 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23781
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6464, clauses: 26696
last 3914 length 16589
last 2753 length 11359
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8191, status: Unsatisfied, time: 0.258702323s
last 17619 length 69176
last 5748 length 23781
last 6464 length 26696
CNF 3914 vars 16589 clauses
CNF 2753 vars 11359 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6258, status: Unsatisfied, time: 0.286477345s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4052, clauses: 16200
CNF 17619 vars 69176 clauses
CNF 6464 vars 26696 clauses
CNF 5748 vars 23781 clauses
last 4052 length 16200
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3542, clauses: 14172
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23781, status: Satisfied, time: 0.256166144s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6464, clauses: 26696, status: Satisfied, time: 0.259391356s
last 3542 length 14172
CNF 3542 vars 14172 clauses
CNF 4052 vars 16200 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17619, clauses: 69176, status: Satisfied, time: 0.482211675s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 4 strict rules and 5 weak rules on 5 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [b, c, c, a] {- Input 1 -}
  [b, c] -> [a, b] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b] -> [a] {- Input 0 -}
  [b, a, b] -> [b] {- Input 0 -}
  [c, a, b] -> [c] {- Input 0 -}
  [a, c] -> [b, c, c, a] {- Input 1 -}
  [b, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b] -> [b] {- Mirror (Input 0) -}
  [b, a, c] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [a, c, c, b] {- Mirror (Input 1) -}
  [c, b] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [c#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 0A 1A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / -   -1A 0A \
        | -1A -1A -  |
        \ -   -   0A / )
  ( c
  , Wk  / -  1A 1A \
        | 0A 1A -  |
        \ -  -  0A / )
  ( c#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / - 1A 1A \
        | - 1A 1A |
        \ - -  0A / )
  ( b
  , Wk  / - -1A 0A \
        | - -1A -  |
        \ - -   0A / )
  ( c
  , Wk  / 0A 1A -   \
        | 0A 1A -2A |
        \ -  -  0A  / )
  ( c#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(4/5,5)\Weight\EDG(2/5,4)\Matrix{\ArcticBZ}{3}\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.639299724000
  min duration 0.020773161000
  total durat. 2.066420554000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.661780348000
  min duration 0.023162039000
  total durat. 1.597465392000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.796279896000
  min duration 0.507198294000
  total durat. 2.566224683000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.603510830000
  min duration 0.018997238000
  total durat. 1.415981246000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.008173753000
  min duration 1.008173753000
  total durat. 1.008173753000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 400}
    , self = 73
    , parent = Nothing
    , duration = 1.008173753000
    , status = Success
    , start = 2025-09-03 11:43:49.58875293 UTC
    , finish = 2025-09-03 11:43:50.596926683 UTC
    , thread_cap_info = ("ThreadId 112", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.778098831000
  min duration 0.288772494000
  total durat. 1.945865457000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.136971093000
  min duration 2.136971093000
  total durat. 2.136971093000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 107
    , parent = Nothing
    , duration = 2.136971093000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:43:49.293217642 UTC
    , finish = 2025-09-03 11:43:51.430188735 UTC
    , thread_cap_info = ("ThreadId 44", 0, False)}
**************************************************
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                  = 12} , self = 107 , parent = Nothing , duration = 2.136971093000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 11:43:49.293217642 UTC ,
E                  finish = 2025-09-03 11:43:51.430188735 UTC , thread_cap_info = ("ThreadId
E                  44", 0, False)}
E                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                = 162} , self = 53 , parent = Nothing , duration = 0.118026201000 , status
| F                = Fail , start = 2025-09-03 11:43:49.294638981 UTC , finish = 2025-09-03
| F                11:43:49.412665182 UTC , thread_cap_info = ("ThreadId 70", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 52 , parent = Nothing , duration = 0.116431557000 , status
| | F              = Fail , start = 2025-09-03 11:43:49.294641098 UTC , finish = 2025-09-03
| | F              11:43:49.411072655 UTC , thread_cap_info = ("ThreadId 72", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | F            = 44 , num_top_rules = 44 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | F            total_length = 400} , self = 62 , parent = Nothing , duration = 0.623503671000
| | | F            , status = Fail , start = 2025-09-03 11:43:49.320473926 UTC , finish =
| | | F            2025-09-03 11:43:49.943977597 UTC , thread_cap_info = ("ThreadId 80", 3,
| | | F            False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | F          = 44 , num_top_rules = 44 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | F          total_length = 400} , self = 59 , parent = Nothing , duration = 0.202185156000
| | | | F          , status = Fail , start = 2025-09-03 11:43:49.32829794 UTC , finish = 2025-09-03
| | | | F          11:43:49.530483096 UTC , thread_cap_info = ("ThreadId 81", 3, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | | | F        = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | F        total_length = 442} , self = 64 , parent = Nothing , duration = 0.639299724000
| | | | | F        , status = Fail , start = 2025-09-03 11:43:49.390285914 UTC , finish =
| | | | | F        2025-09-03 11:43:50.029585638 UTC , thread_cap_info = ("ThreadId 92", 3,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | | | | F      = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | F      total_length = 442} , self = 65 , parent = Nothing , duration = 0.661780348000
| | | | | | F      , status = Fail , start = 2025-09-03 11:43:49.410587793 UTC , finish =
| | | | | | F      2025-09-03 11:43:50.072368141 UTC , thread_cap_info = ("ThreadId 93", 3,
| | | | | | F      False)}
| | | | | | F      
| | F | | | |      
| F   | | | |      
| F   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | | | |      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F   | | | |      = 5 , total_length = 38} , self = 63 , parent = Nothing , duration = 0.459998545000
| F   | | | |      , status = Fail , start = 2025-09-03 11:43:49.48830801 UTC , finish = 2025-09-03
| F   | | | |      11:43:49.948306555 UTC , thread_cap_info = ("ThreadId 104", 0, False)}
| F   | | | |      
| | F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | | | |      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F | | | |      = 31} , self = 61 , parent = Nothing , duration = 0.301846534000 , status
| | F | | | |      = Fail , start = 2025-09-03 11:43:49.528315524 UTC , finish = 2025-09-03
| | F | | | |      11:43:49.830162058 UTC , thread_cap_info = ("ThreadId 107", 0, False)}
| | F | | | |      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | F    = 31} , self = 60 , parent = Nothing , duration = 0.261859302000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:43:49.528318407 UTC , finish = 2025-09-03
| | | | | | | F    11:43:49.790177709 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| | | | | | | F    
| | | | F | | |    
| | | | S | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | S | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | S | | |    = 5 , total_length = 38} , self = 66 , parent = Nothing , duration = 0.796279896000
| | | | S | | |    , status = Success , start = 2025-09-03 11:43:49.553202757 UTC , finish
| | | | S | | |    = 2025-09-03 11:43:50.349482653 UTC , thread_cap_info = ("ThreadId 109",
| | | | S | | |    0, False)}
| | | | S | | |    
| | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S  = 71 , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 27
| | | | | | | | S  , alphabet_size = 14 , total_length = 400} , self = 73 , parent = Nothing
| | | | | | | | S  , duration = 1.008173753000 , status = Success , start = 2025-09-03 11:43:49.58875293
| | | | | | | | S  UTC , finish = 2025-09-03 11:43:50.596926683 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S  112", 3, False)}
| | | | | | | | S  
| | | | | | | F |  
| | | | | | | F |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | F |  = 4 , total_length = 31} , self = 69 , parent = Nothing , duration = 0.778098831000
| | | | | | | F |  , status = Fail , start = 2025-09-03 11:43:49.790201184 UTC , finish =
| | | | | | | F |  2025-09-03 11:43:50.568300015 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | | F |  0, False)}
| | | | | | | F |  
| | F | | | | | |  
| | S | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S | | | | | |  = 4 , total_length = 31} , self = 70 , parent = Nothing , duration = 0.738674269000
| | S | | | | | |  , status = Success , start = 2025-09-03 11:43:49.830194021 UTC , finish
| | S | | | | | |  = 2025-09-03 11:43:50.56886829 UTC , thread_cap_info = ("ThreadId 117",
| | S | | | | | |  3, False)}
| | S | | | | | |  
| | | F | | | | |  
| | | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 71
| | | E | | | | |  , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 27 , alphabet_size
| | | E | | | | |  = 14 , total_length = 400} , self = 82 , parent = Nothing , duration =
| | | E | | | | |  0.706239624000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | | | |  11:43:49.944062027 UTC , finish = 2025-09-03 11:43:50.650301651 UTC , thread_cap_info
| | | E | | | | |  = ("ThreadId 119", 3, False)}
| | | E | | | | |  
| F | | | | | | |  
| E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E | | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| E | | | | | | |  = 5 , total_length = 38} , self = 68 , parent = Nothing , duration = 0.603510830000
| E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:49.948362057
| E | | | | | | |  UTC , finish = 2025-09-03 11:43:50.551872887 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |  121", 0, False)}
| E | | | | | | |  
| | | | | F | | |  
| | | | |   F | |  
| | | | S     | |  
| E | |       | |  
|   | |       F |  
|   S |         |  
|     |         S  
|     E            
| F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F                = 5 , total_length = 35} , self = 92 , parent = Nothing , duration = 0.288772494000
| F                , status = Fail , start = 2025-09-03 11:43:50.663488181 UTC , finish =
| F                2025-09-03 11:43:50.952260675 UTC , thread_cap_info = ("ThreadId 146",
| F                0, False)}
| F                
| | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F              = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F              = 4 , total_length = 27} , self = 95 , parent = Nothing , duration = 0.418995587000
| | F              , status = Fail , start = 2025-09-03 11:43:50.686530608 UTC , finish =
| | F              2025-09-03 11:43:51.105526195 UTC , thread_cap_info = ("ThreadId 148",
| | F              0, False)}
| | F              
| | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | S            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | S            = 5 , total_length = 35} , self = 97 , parent = Nothing , duration = 0.524072224000
| | | S            , status = Success , start = 2025-09-03 11:43:50.688835768 UTC , finish
| | | S            = 2025-09-03 11:43:51.212907992 UTC , thread_cap_info = ("ThreadId 147",
| | | S            0, False)}
| | | S            
| | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | S          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | S          = 4 , total_length = 27} , self = 96 , parent = Nothing , duration = 0.507198294000
| | | | S          , status = Success , start = 2025-09-03 11:43:50.70519083 UTC , finish
| | | | S          = 2025-09-03 11:43:51.212389124 UTC , thread_cap_info = ("ThreadId 149",
| | | | S          0, False)}
| | | | S          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| | | | | F        = 4 , num_top_rules = 4 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | F        = 182} , self = 93 , parent = Nothing , duration = 0.269276459000 , status
| | | | | F        = Fail , start = 2025-09-03 11:43:50.809663093 UTC , finish = 2025-09-03
| | | | | F        11:43:51.078939552 UTC , thread_cap_info = ("ThreadId 155", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | | F      = 182} , self = 94 , parent = Nothing , duration = 0.262999991000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:43:50.828303149 UTC , finish = 2025-09-03
| | | | | | F      11:43:51.09130314 UTC , thread_cap_info = ("ThreadId 156", 3, False)}
| | | | | | F      
| F | | | | |      
| E | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E | | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| E | | | | |      = 5 , total_length = 35} , self = 101 , parent = Nothing , duration = 0.469185598000
| E | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:50.960681573
| E | | | | |      UTC , finish = 2025-09-03 11:43:51.429867171 UTC , thread_cap_info = ("ThreadId
| E | | | | |      159", 0, False)}
| E | | | | |      
| | | | | F |      
| | | | |   F      
| | F | |          
| | E | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E | |          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | E | |          = 4 , total_length = 27} , self = 100 , parent = Nothing , duration = 0.324287580000
| | E | |          , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:51.105566465
| | E | |          UTC , finish = 2025-09-03 11:43:51.429854045 UTC , thread_cap_info = ("ThreadId
| | E | |          164", 0, False)}
| | E | |          
| | | | S          
| | | S            
| | E              
| E                
E                  
