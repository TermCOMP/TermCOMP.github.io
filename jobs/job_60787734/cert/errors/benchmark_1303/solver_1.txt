last 640 length 2512
CNF 640 vars 2512 clauses
last 565 length 2219
last 2067 length 8882
CNF 2067 vars 8882 clauses
CNF 565 vars 2219 clauses
last 2161 length 9112
last 605 length 2391
last 591 length 2342
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2292, clauses: 8324
CNF 2161 vars 9112 clauses
CNF 605 vars 2391 clauses
CNF 591 vars 2342 clauses
last 2292 length 8324
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7304, clauses: 30343
last 7304 length 30343
CNF 7304 vars 30343 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2585, clauses: 9276
CNF 2292 vars 8324 clauses
last 2585 length 9276
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7304, clauses: 30343, status: Satisfied, time: 0.065842603s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2292, clauses: 8324, status: Unsatisfied, time: 0.162339451s
CNF 2585 vars 9276 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7675, clauses: 31807
last 7675 length 31807
CNF 7675 vars 31807 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2585, clauses: 9276, status: Unsatisfied, time: 0.200996312s
last 5892 length 25374
last 7415 length 31013
last 537 length 2125
CNF 5892 vars 25374 clauses
last 570 length 2243
CNF 7415 vars 31013 clauses
CNF 537 vars 2125 clauses
last 4298 length 17973
last 3360 length 14231
CNF 570 vars 2243 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4800, clauses: 19149
CNF 4298 vars 17973 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2186, clauses: 7863
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12514, clauses: 49234
CNF 3360 vars 14231 clauses
last 4800 length 19149
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7675, clauses: 31807, status: Unsatisfied, time: 0.63547995s
last 2186 length 7863
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7258, clauses: 30167
last 12514 length 49234
CNF 4800 vars 19149 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7617, clauses: 29186
last 7258 length 30167
CNF 2186 vars 7863 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 33631, clauses: 140512
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4214, clauses: 15980
CNF 12514 vars 49234 clauses
last 7617 length 29186
last 33631 length 140512
last 4214 length 15980
CNF 7258 vars 30167 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2186, clauses: 7863, status: Unsatisfied, time: 0.46179335s
CNF 7617 vars 29186 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24248, clauses: 101365
CNF 4214 vars 15980 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12514, clauses: 49234, status: Satisfied, time: 0.508391175s
CNF 33631 vars 140512 clauses
last 24248 length 101365
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4475, clauses: 17962
last 4475 length 17962
CNF 4475 vars 17962 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4800, clauses: 19149, status: Unsatisfied, time: 0.900074701s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4214, clauses: 15980, status: Unsatisfied, time: 0.483344261s
CNF 24248 vars 101365 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7617, clauses: 29186, status: Satisfied, time: 0.595816294s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4475, clauses: 17962, status: Unsatisfied, time: 0.277912s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       weights
SRS with 16 rules on 9 letters       mirror
SRS with 16 rules on 9 letters       DP
SRS with 35 strict rules and 16 weak rules on 14 letters       EDG
SRS with 33 strict rules and 16 weak rules on 14 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 16 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, b, c] {- Input 0 -}
  [a, b] -> [] {- Input 1 -}
  [a, c, b] -> [a, a, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [ [a, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [ [a, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [ [a, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [ [b, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [ [b, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [ [b, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [ [c, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [ [c, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [ [c, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, b], [b, a]] -> [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, b], [b, c]] -> [ [a, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, c], [c, b], [b, a]] -> [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, a]] -> [ [c, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [ [a, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [ [a, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [ [a, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [ [c, b] , [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [ [c, b] , [b, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [ [c, b] , [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, b], [b, c]] -> [ [a, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [ [c, a] , [b, c] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [ [c, b] , [b, c] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [ [c, c] , [b, c] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [ [c, a] , [b, c] , [b, b] , [c, b] ] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [ [c, b] , [b, c] , [b, b] , [c, b] ] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [ [c, c] , [b, c] , [b, b] , [c, b] ] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, b], [a, b], [a, a]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, b], [c, b], [a, c], [a, a]] -> [ [a, b] , [a, a] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [a, c], [a, a]] -> [ [a, c] , [a, a] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, b], [c, b], [a, c], [b, a]] -> [ [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [a, c], [b, a]] -> [ [a, c] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, b], [c, b], [a, c], [c, a]] -> [ [a, b] , [a, a] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [a, c], [c, a]] -> [ [a, c] , [a, a] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [a, a] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [a, a] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, c]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, a]#, [c, a]] |-> [ [b, c]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, c]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [b, c]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [b, c]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [b, c]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, c]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7258, clauses: 30167, status: Unsatisfied, time: 0.723915012s

  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, c]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, c]# , [a, a] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [b, c]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [b, c]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, a]#, [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [c, a]] |-> [ [b, c]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, a]#, [c, a]] |-> [ [b, c]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, c]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [b, c]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, c]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [b, c]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, c]# , [a, a] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [a, a] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [a, a] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 6A 6A 9A  - |
        \ -  -  -   - / )
  ( [b, a]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 2A 2A 5A - \
        | 2A 2A 5A - |
        | 2A 2A 5A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 2A 2A 5A - \
        | 2A 2A 5A - |
        | 2A 2A 5A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [b, c]#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3580, clauses: 13619
[[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
last 3580 length 13619
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [a, a] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [a, a] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Weight\Mirror(16,9)\Deepee(35/16,14)\EDG(33/16,14)\Matrix{\Arctic}{3}(0/16,9)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 3580 vars 13619 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13140, clauses: 54325
last 13140 length 54325
CNF 13140 vars 54325 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.639464502000
  min duration 0.009502648000
  total durat. 1.650381845000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.614818847000
  min duration 0.043693155000
  total durat. 1.298841603000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.200410720000
  min duration 1.200410720000
  total durat. 1.200410720000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 33
      , num_top_rules = 33
      , num_weak_rules = 16
      , alphabet_size = 14
      , total_length = 285}
    , self = 80
    , parent = Nothing
    , duration = 1.200410720000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:33:52.051060145 UTC
    , finish = 2025-09-03 11:33:53.251470865 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.242172181000
  min duration 0.475898311000
  total durat. 1.718070492000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 38}
    , self = 79
    , parent = Nothing
    , duration = 1.242172181000
    , status = Fail
    , start = 2025-09-03 11:33:51.890888761 UTC
    , finish = 2025-09-03 11:33:53.133060942 UTC
    , thread_cap_info = ("ThreadId 120", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.068874853000
  min duration 1.022440060000
  total durat. 2.091314913000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 14
      , alphabet_size = 10
      , total_length = 162}
    , self = 84
    , parent = Nothing
    , duration = 1.022440060000
    , status = Success
    , start = 2025-09-03 11:33:52.372045632 UTC
    , finish = 2025-09-03 11:33:53.394485692 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 33
      , num_top_rules = 33
      , num_weak_rules = 16
      , alphabet_size = 14
      , total_length = 285}
    , self = 77
    , parent = Nothing
    , duration = 1.068874853000
    , status = Success
    , start = 2025-09-03 11:33:51.968799088 UTC
    , finish = 2025-09-03 11:33:53.037673941 UTC
    , thread_cap_info = ("ThreadId 127", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.873629434000
  min duration 0.228987439000
  total durat. 1.342230118000
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F                = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 100} , self = 57 , parent = Nothing , duration = 0.155171255000 , status
F                = Fail , start = 2025-09-03 11:33:51.431031861 UTC , finish = 2025-09-03
F                11:33:51.586203116 UTC , thread_cap_info = ("ThreadId 52", 1, False)}
F                
| F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F              = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F              = 4 , total_length = 37} , self = 63 , parent = Nothing , duration = 0.239613245000
| F              , status = Fail , start = 2025-09-03 11:33:51.454347158 UTC , finish =
| F              2025-09-03 11:33:51.693960403 UTC , thread_cap_info = ("ThreadId 78", 3,
| F              False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F            = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F            = 38} , self = 56 , parent = Nothing , duration = 0.110275381000 , status
| | F            = Fail , start = 2025-09-03 11:33:51.475773531 UTC , finish = 2025-09-03
| | F            11:33:51.586048912 UTC , thread_cap_info = ("ThreadId 87", 1, False)}
| | F            
| | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | S          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | S          = 4 , total_length = 37} , self = 59 , parent = Nothing , duration = 0.143312655000
| | | S          , status = Success , start = 2025-09-03 11:33:51.493729956 UTC , finish
| | | S          = 2025-09-03 11:33:51.637042611 UTC , thread_cap_info = ("ThreadId 89",
| | | S          3, False)}
| | | S          
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | F        = 5 , total_length = 38} , self = 65 , parent = Nothing , duration = 0.228987439000
| | | | F        , status = Fail , start = 2025-09-03 11:33:51.566173023 UTC , finish =
| | | | F        2025-09-03 11:33:51.795160462 UTC , thread_cap_info = ("ThreadId 100",
| | | | F        1, False)}
| | | | F        
| | F | |        
F |   | |        
F |   | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F |   | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F |   | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F |   | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
F |   | |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
F |   | |        = 5 , total_length = 38} , self = 75 , parent = Nothing , duration = 0.963866987000
F |   | |        , status = Fail , start = 2025-09-03 11:33:51.587162975 UTC , finish =
F |   | |        2025-09-03 11:33:52.551029962 UTC , thread_cap_info = ("ThreadId 108",
F |   | |        1, False)}
F |   | |        
| | F | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | F | |        = 33 , num_top_rules = 33 , num_weak_rules = 16 , alphabet_size = 14 ,
| | F | |        total_length = 285} , self = 71 , parent = Nothing , duration = 0.445480348000
| | F | |        , status = Fail , start = 2025-09-03 11:33:51.59116914 UTC , finish = 2025-09-03
| | F | |        11:33:52.036649488 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | F | |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | | | F      = 33 , num_top_rules = 33 , num_weak_rules = 16 , alphabet_size = 14 ,
| | | | | F      total_length = 285} , self = 69 , parent = Nothing , duration = 0.353561577000
| | | | | F      , status = Fail , start = 2025-09-03 11:33:51.61285493 UTC , finish = 2025-09-03
| | | | | F      11:33:51.966416507 UTC , thread_cap_info = ("ThreadId 107", 3, False)}
| | | | | F      
| | | S | |      
| F |   | |      
| F |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| F |   | |      = 12 , num_top_rules = 12 , num_weak_rules = 14 , alphabet_size = 10 ,
| F |   | |      total_length = 162} , self = 73 , parent = Nothing , duration = 0.639464502000
| F |   | |      , status = Fail , start = 2025-09-03 11:33:51.712986176 UTC , finish =
| F |   | |      2025-09-03 11:33:52.352450678 UTC , thread_cap_info = ("ThreadId 115",
| F |   | |      3, False)}
| F |   | |      
| | | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | F | |      = 12 , num_top_rules = 12 , num_weak_rules = 14 , alphabet_size = 10 ,
| | | F | |      total_length = 162} , self = 74 , parent = Nothing , duration = 0.614818847000
| | | F | |      , status = Fail , start = 2025-09-03 11:33:51.777096026 UTC , finish =
| | | F | |      2025-09-03 11:33:52.391914873 UTC , thread_cap_info = ("ThreadId 118",
| | | F | |      3, False)}
| | | F | |      
| | | | F |      
| | | | F |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | F |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | F |      = 5 , total_length = 38} , self = 79 , parent = Nothing , duration = 1.242172181000
| | | | F |      , status = Fail , start = 2025-09-03 11:33:51.890888761 UTC , finish =
| | | | F |      2025-09-03 11:33:53.133060942 UTC , thread_cap_info = ("ThreadId 120",
| | | | F |      1, False)}
| | | | F |      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F    = 33} , self = 72 , parent = Nothing , duration = 0.322526002000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:33:51.909224204 UTC , finish = 2025-09-03
| | | | | | F    11:33:52.231750206 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | F  = 33} , self = 70 , parent = Nothing , duration = 0.106650486000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:33:51.911565753 UTC , finish = 2025-09-03
| | | | | | | F  11:33:52.018216239 UTC , thread_cap_info = ("ThreadId 124", 3, False)}
| | | | | | | F  
| | | | | F | |  
| | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | |  = 49 , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 16
| | | | | S | |  , alphabet_size = 14 , total_length = 285} , self = 77 , parent = Nothing
| | | | | S | |  , duration = 1.068874853000 , status = Success , start = 2025-09-03 11:33:51.968799088
| | | | | S | |  UTC , finish = 2025-09-03 11:33:53.037673941 UTC , thread_cap_info = ("ThreadId
| | | | | S | |  127", 3, False)}
| | | | | S | |  
| | | | | | | F  
| | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | F  = 4 , total_length = 33} , self = 76 , parent = Nothing , duration = 0.873629434000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:33:52.019547842 UTC , finish =
| | | | | | | F  2025-09-03 11:33:52.893177276 UTC , thread_cap_info = ("ThreadId 129",
| | | | | | | F  3, False)}
| | | | | | | F  
| | F | | | | |  
| | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 49
| | E | | | | |  , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 16 , alphabet_size
| | E | | | | |  = 14 , total_length = 285} , self = 80 , parent = Nothing , duration =
| | E | | | | |  1.200410720000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | | | |  11:33:52.051060145 UTC , finish = 2025-09-03 11:33:53.251470865 UTC , thread_cap_info
| | E | | | | |  = ("ThreadId 130", 3, False)}
| | E | | | | |  
| | | | | | F |  
| F | | | |   |  
| S | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |   |  = 26 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 14
| S | | | |   |  , alphabet_size = 10 , total_length = 162} , self = 84 , parent = Nothing
| S | | | |   |  , duration = 1.022440060000 , status = Success , start = 2025-09-03 11:33:52.372045632
| S | | | |   |  UTC , finish = 2025-09-03 11:33:53.394485692 UTC , thread_cap_info = ("ThreadId
| S | | | |   |  134", 3, False)}
| S | | | |   |  
| | | F | |   |  
F | |   | |   |  
F | |   | |   |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | |   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | |   |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
F | |   | |   |  = 5 , total_length = 38} , self = 81 , parent = Nothing , duration = 0.711616965000
F | |   | |   |  , status = Fail , start = 2025-09-03 11:33:52.571441414 UTC , finish =
F | |   | |   |  2025-09-03 11:33:53.283058379 UTC , thread_cap_info = ("ThreadId 137",
F | |   | |   |  1, False)}
F | |   | |   |  
| | |   | |   F  
| | | F | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F | |      = 4 , total_length = 33} , self = 85 , parent = Nothing , duration = 0.475898311000
| | | F | |      , status = Fail , start = 2025-09-03 11:33:52.918664626 UTC , finish =
| | | F | |      2025-09-03 11:33:53.394562937 UTC , thread_cap_info = ("ThreadId 144",
| | | F | |      3, False)}
| | | F | |      
| | | | | S      
| | | | F        
| | E |          
F |   |          
  S   |          
      F          
