last 972 length 4083
CNF 972 vars 4083 clauses
last 959 length 3993
CNF 959 vars 3993 clauses
last 1832 length 7789
CNF 1832 vars 7789 clauses
last 1927 length 8238
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2296, clauses: 8437
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3325, clauses: 12676
last 2296 length 8437
CNF 1927 vars 8238 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9157, clauses: 38565
last 3325 length 12676
last 9157 length 38565
last 5675 length 26097
last 5326 length 23546
CNF 2296 vars 8437 clauses
CNF 3325 vars 12676 clauses
CNF 9157 vars 38565 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11376, clauses: 47889
CNF 5675 vars 26097 clauses
last 8596 length 39820
CNF 5326 vars 23546 clauses
last 5402 length 23416
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2296, clauses: 8437, status: Unsatisfied, time: 0.35112593s
last 4645 length 20040
last 8014 length 35498
last 11376 length 47889
CNF 5402 vars 23416 clauses
CNF 8596 vars 39820 clauses
CNF 4645 vars 20040 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3325, clauses: 12676, status: Satisfied, time: 0.404682962s
CNF 8014 vars 35498 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5528, clauses: 23204
CNF 11376 vars 47889 clauses
last 5528 length 23204
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9157, clauses: 38565, status: Unsatisfied, time: 0.621706148s
CNF 5528 vars 23204 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6831, clauses: 25811
last 6831 length 25811
CNF 6831 vars 25811 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8797, clauses: 35152
last 8797 length 35152
CNF 8797 vars 35152 clauses
last 1038 length 4353
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3813, clauses: 14732
last 3813 length 14732
CNF 1038 vars 4353 clauses
last 1113 length 4714
CNF 3813 vars 14732 clauses
CNF 1113 vars 4714 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5528, clauses: 23204, status: Unsatisfied, time: 0.589297706s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8797, clauses: 35152, status: Satisfied, time: 0.272202678s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8050
last 2185 length 8050
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3813, clauses: 14732, status: Unsatisfied, time: 0.299086419s
CNF 2185 vars 8050 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8050, status: Satisfied, time: 0.100618028s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6831, clauses: 25811, status: Unsatisfied, time: 0.759433127s
last 6966 length 30823
last 7412 length 34382
CNF 7412 vars 34382 clauses
CNF 6966 vars 30823 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7179, clauses: 27494
last 7179 length 27494
CNF 7179 vars 27494 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7870, clauses: 30874
last 7870 length 30874
CNF 7870 vars 30874 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7870, clauses: 30874, status: Satisfied, time: 0.140728891s
last 1038 length 4353
last 1115 length 4706
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29157, clauses: 123569
CNF 1038 vars 4353 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16219, clauses: 71501
CNF 1115 vars 4706 clauses
last 29157 length 123569
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17761, clauses: 76044
last 16219 length 71501
last 17761 length 76044
last 6222 length 28683
last 5606 length 24823
CNF 29157 vars 123569 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8050
CNF 16219 vars 71501 clauses
last 2185 length 8050
CNF 6222 vars 28683 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8569, clauses: 36065
CNF 5606 vars 24823 clauses
CNF 17761 vars 76044 clauses
last 8569 length 36065
CNF 8569 vars 36065 clauses
CNF 2185 vars 8050 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2185, clauses: 8050, status: Satisfied, time: 0.409119979s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6621, clauses: 25313
last 6621 length 25313
CNF 6621 vars 25313 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 12 strict rules and 4 weak rules on 4 letters       weights
SRS with 4 strict rules and 4 weak rules on 4 letters       EDG
SRS with 4 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 4 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, a] -> [b, b, a, b] {- Input 0 -}
  [a, b, a, b] -> [b, a, b, b] {- Input 1 -}
  [a, a, b, a] -> [a, b, a, b] {- Input 2 -}
  [b, b, b, b] -> [a, b, b, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
  [a#, a, b, a] |-> [a#, b] {- DP (Top 2) (Input 2) -}
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Input 2) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 2) -}
  [a#, a, b, a] |-> [b#, a, b] {- DP (Top 1) (Input 2) -}
  [a#, b, a, b] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [a#, b, a, b] |-> [b#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, b, a, b] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, a, a, a] |-> [a#, b] {- DP (Top 2) (Input 0) -}
  [b#, a, a, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, a, a, a] |-> [b#, a, b] {- DP (Top 1) (Input 0) -}
  [b#, a, a, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b#, b, b, b] |-> [a#, b, b, b] {- DP (Top 0) (Input 3) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Input 2) -}
  [a#, b, a, b] |-> [b#, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a, a, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b#, b, b, b] |-> [a#, b, b, b] {- DP (Top 0) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Input 2) -}
  [a#, b, a, b] |-> [b#, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a, a, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b#, b, b, b] |-> [a#, b, b, b] {- DP (Top 0) (Input 3) -}
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 12A 14A 15A - \
        | 12A 14A 15A - |
        | 12A 14A 15A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Input 2) -}
  [b#, a, a, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Input 2) -}
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, a, a, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b, a, a, a] ->= [b, b, a, b] {- DP Nontop (Input 0) -}
  [a, b, a, b] ->= [b, a, b, b] {- DP Nontop (Input 1) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee(12/4,4)\Weight\EDG(4/4,4)\Matrix{\Arctic}{3}(2/4,4)\EDG[(1/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[],(1/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6621, clauses: 25313, status: Satisfied, time: 0.231186916s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.836502121000
  min duration 0.105977626000
  total durat. 3.842934081000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.921145107000
  min duration 0.031900373000
  total durat. 3.870596894000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 0.922063248000
  min duration 0.486314263000
  total durat. 3.364703227000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.854744763000
  min duration 0.382082263000
  total durat. 2.968696662000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.124494041000
  min duration 0.602644074000
  total durat. 1.727138115000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 16
      , alphabet_size = 5
      , total_length = 180}
    , self = 89
    , parent = Nothing
    , duration = 1.124494041000
    , status = Fail
    , start = 2025-09-03 11:52:34.766639341 UTC
    , finish = 2025-09-03 11:52:35.891133382 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.616894276000
  min duration 1.616894276000
  total durat. 1.616894276000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 32}
    , self = 86
    , parent = Nothing
    , duration = 1.616894276000
    , status = Fail
    , start = 2025-09-03 11:52:33.996341263 UTC
    , finish = 2025-09-03 11:52:35.613235539 UTC
    , thread_cap_info = ("ThreadId 35", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.924923745000
  min duration 3.924923745000
  total durat. 3.924923745000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 32}
    , self = 113
    , parent = Nothing
    , duration = 3.924923745000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:52:34.018217882 UTC
    , finish = 2025-09-03 11:52:37.943141627 UTC
    , thread_cap_info = ("ThreadId 67", 0, False)}
**************************************************
F                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                        = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                        = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 32} , self
F                        = 45 , parent = Nothing , duration = 0.144067563000 , status = Fail , start
F                        = 2025-09-03 11:52:33.996336593 UTC , finish = 2025-09-03 11:52:34.140404156
F                        UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                        
| F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                      = 32} , self = 86 , parent = Nothing , duration = 1.616894276000 , status
| F                      = Fail , start = 2025-09-03 11:52:33.996341263 UTC , finish = 2025-09-03
| F                      11:52:35.613235539 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | F                    = 40} , self = 41 , parent = Nothing , duration = 0.105977626000 , status
| | F                    = Fail , start = 2025-09-03 11:52:34.001641742 UTC , finish = 2025-09-03
| | F                    11:52:34.107619368 UTC , thread_cap_info = ("ThreadId 60", 2, False)}
| | F                    
| | | E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E                  = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                  = 32} , self = 113 , parent = Nothing , duration = 3.924923745000 , status
| | | E                  = Except "AsyncCancelled" , start = 2025-09-03 11:52:34.018217882 UTC ,
| | | E                  finish = 2025-09-03 11:52:37.943141627 UTC , thread_cap_info = ("ThreadId
| | | E                  67", 0, False)}
| | | E                  
| | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | F                = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F                = 160} , self = 62 , parent = Nothing , duration = 0.663417032000 , status
| | | | F                = Fail , start = 2025-09-03 11:52:34.026169809 UTC , finish = 2025-09-03
| | | | F                11:52:34.689586841 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F              = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F              = 64} , self = 54 , parent = Nothing , duration = 0.150332938000 , status
| | | | | F              = Fail , start = 2025-09-03 11:52:34.038081319 UTC , finish = 2025-09-03
| | | | | F              11:52:34.188414257 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F            = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | F            = 160} , self = 61 , parent = Nothing , duration = 0.624142474000 , status
| | | | | | F            = Fail , start = 2025-09-03 11:52:34.046611085 UTC , finish = 2025-09-03
| | | | | | F            11:52:34.670753559 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | F          = 64} , self = 58 , parent = Nothing , duration = 0.241901654000 , status
| | | | | | | F          = Fail , start = 2025-09-03 11:52:34.046639398 UTC , finish = 2025-09-03
| | | | | | | F          11:52:34.288541052 UTC , thread_cap_info = ("ThreadId 79", 2, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F        = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | | F        = 3 , total_length = 40} , self = 60 , parent = Nothing , duration = 0.602644074000
| | | | | | | | F        , status = Fail , start = 2025-09-03 11:52:34.065907984 UTC , finish =
| | | | | | | | F        2025-09-03 11:52:34.668552058 UTC , thread_cap_info = ("ThreadId 82", 2,
| | | | | | | | F        False)}
| | | | | | | | F        
| | F | | | | | |        
F |   | | | | | |        
F |   | | | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F |   | | | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F |   | | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F |   | | | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   | | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   | | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
F |   | | | | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F |   | | | | | |        = 3 , total_length = 40} , self = 69 , parent = Nothing , duration = 0.823342384000
F |   | | | | | |        , status = Fail , start = 2025-09-03 11:52:34.14257618 UTC , finish = 2025-09-03
F |   | | | | | |        11:52:34.965918564 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
F |   | | | | | |        
| | F | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | F | | | | | |        = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | F | | | | | |        = 240} , self = 68 , parent = Nothing , duration = 0.711037581000 , status
| | F | | | | | |        = Fail , start = 2025-09-03 11:52:34.148614613 UTC , finish = 2025-09-03
| | F | | | | | |        11:52:34.859652194 UTC , thread_cap_info = ("ThreadId 98", 1, False)}
| | F | | | | | |        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | | F      = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | | | | F      = 240} , self = 65 , parent = Nothing , duration = 0.638408246000 , status
| | | | | | | | | F      = Fail , start = 2025-09-03 11:52:34.165899644 UTC , finish = 2025-09-03
| | | | | | | | | F      11:52:34.80430789 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | | | F      
| | | | | F | | | |      
| | | | | S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | | |      = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | S | | | |      = 4 , total_length = 64} , self = 64 , parent = Nothing , duration = 0.587190926000
| | | | | S | | | |      , status = Success , start = 2025-09-03 11:52:34.208899279 UTC , finish
| | | | | S | | | |      = 2025-09-03 11:52:34.796090205 UTC , thread_cap_info = ("ThreadId 101",
| | | | | S | | | |      2, False)}
| | | | | S | | | |      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | | | | | | | F    = 180} , self = 63 , parent = Nothing , duration = 0.478299398000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 11:52:34.28616017 UTC , finish = 2025-09-03
| | | | | | | | | | F    11:52:34.764459568 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | | | | | | F    
| | | | | | | F | | |    
| | | | | | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | | E | | |    = 4 , total_length = 64} , self = 70 , parent = Nothing , duration = 0.679241176000
| | | | | | | E | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:52:34.288562281
| | | | | | | E | | |    UTC , finish = 2025-09-03 11:52:34.967803457 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | | |    109", 2, False)}
| | | | | | | E | | |    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | | | | | | | | F  = 180} , self = 67 , parent = Nothing , duration = 0.516316448000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-03 11:52:34.305907139 UTC , finish = 2025-09-03
| | | | | | | | | | | F  11:52:34.822223587 UTC , thread_cap_info = ("ThreadId 105", 1, False)}
| | | | | | | | | | | F  
| | | | | | | | F | | |  
| | | | | | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | F | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | | F | | |  = 3 , total_length = 40} , self = 77 , parent = Nothing , duration = 0.777582281000
| | | | | | | | F | | |  , status = Fail , start = 2025-09-03 11:52:34.668580727 UTC , finish =
| | | | | | | | F | | |  2025-09-03 11:52:35.446163008 UTC , thread_cap_info = ("ThreadId 117",
| | | | | | | | F | | |  2, False)}
| | | | | | | | F | | |  
| | | | | | F | | | | |  
| | | | F |   | | | | |  
| | | |   |   | | | F |  
| | | | F |   | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F |   | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F |   | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F |   | | |   |  = 18 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 16 ,
| | | | F |   | | |   |  alphabet_size = 5 , total_length = 180} , self = 89 , parent = Nothing
| | | | F |   | | |   |  , duration = 1.124494041000 , status = Fail , start = 2025-09-03 11:52:34.766639341
| | | | F |   | | |   |  UTC , finish = 2025-09-03 11:52:35.891133382 UTC , thread_cap_info = ("ThreadId
| | | | F |   | | |   |  122", 1, False)}
| | | | F |   | | |   |  
| | | | | S   | | |   |  
| | | | |     | | F   |  
| | | | | S   | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   | |     |  = 24 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 ,
| | | | | S   | |     |  alphabet_size = 6 , total_length = 240} , self = 78 , parent = Nothing
| | | | | S   | |     |  , duration = 0.667061643000 , status = Success , start = 2025-09-03 11:52:34.813519916
| | | | | S   | |     |  UTC , finish = 2025-09-03 11:52:35.480581559 UTC , thread_cap_info = ("ThreadId
| | | | | S   | |     |  125", 1, False)}
| | | | | S   | |     |  
| | | | | |   | |     F  
| | F | | |   | |        
| | E | | |   | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | |   | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |   | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |   | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |   | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |   | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | E | | |   | |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size
| | E | | |   | |        = 6 , total_length = 240} , self = 80 , parent = Nothing , duration = 0.701636954000
| | E | | |   | |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:52:34.905921944
| | E | | |   | |        UTC , finish = 2025-09-03 11:52:35.607558898 UTC , thread_cap_info = ("ThreadId
| | E | | |   | |        127", 1, False)}
| | E | | |   | |        
F | | | | |   | |        
  | | | | |   E |        
F | | | | |     |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | |     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |     |        = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F | | | | |     |        = 3 , total_length = 40} , self = 85 , parent = Nothing , duration = 0.503540597000
F | | | | |     |        , status = Fail , start = 2025-09-03 11:52:35.106643697 UTC , finish =
F | | | | |     |        2025-09-03 11:52:35.610184294 UTC , thread_cap_info = ("ThreadId 129",
F | | | | |     |        2, False)}
F | | | | |     |        
| | | | | | F   |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F   |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F   |        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | F   |        = 40} , self = 75 , parent = Nothing , duration = 0.120934958000 , status
| | | | | | F   |        = Fail , start = 2025-09-03 11:52:35.287363134 UTC , finish = 2025-09-03
| | | | | | F   |        11:52:35.408298092 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
| | | | | | F   |        
| | | | | | | F |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F |        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | F |        = 40} , self = 76 , parent = Nothing , duration = 0.133964153000 , status
| | | | | | | F |        = Fail , start = 2025-09-03 11:52:35.299330674 UTC , finish = 2025-09-03
| | | | | | | F |        11:52:35.433294827 UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| | | | | | | F |        
| | | | | | F | |        
| | | | | |   F |        
| | | | | |     F        
| | | | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S            = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | S            = 3 , total_length = 40} , self = 87 , parent = Nothing , duration = 0.382082263000
| | | | | | S            , status = Success , start = 2025-09-03 11:52:35.449600455 UTC , finish
| | | | | | S            = 2025-09-03 11:52:35.831682718 UTC , thread_cap_info = ("ThreadId 140",
| | | | | | S            2, False)}
| | | | | | S            
| | | | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | E          = 3 , total_length = 40} , self = 90 , parent = Nothing , duration = 0.575447586000
| | | | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:52:35.472020829
| | | | | | | E          UTC , finish = 2025-09-03 11:52:36.047468415 UTC , thread_cap_info = ("ThreadId
| | | | | | | E          141", 2, False)}
| | | | | | | E          
| | | | | S | |          
| | E | |   | |          
| | F | |   | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | F | |   | |          = 5 , num_top_rules = 5 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | F | |   | |          = 210} , self = 91 , parent = Nothing , duration = 0.472051975000 , status
| | F | |   | |          = Fail , start = 2025-09-03 11:52:35.608308795 UTC , finish = 2025-09-03
| | F | |   | |          11:52:36.08036077 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | F | |   | |          
| | | | | F | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | F | |          = 5 , num_top_rules = 5 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | F | |          = 210} , self = 92 , parent = Nothing , duration = 0.480979437000 , status
| | | | | F | |          = Fail , start = 2025-09-03 11:52:35.610118926 UTC , finish = 2025-09-03
| | | | | F | |          11:52:36.091098363 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | | | | F | |          
F | | | | | | |          
  F | | | | | |          
    | | | | S |          
    | | F |   |          
    | |   |   E          
    F |   |              
S     |   |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S     |   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |   |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |   |              = 21 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 16 ,
S     |   |              alphabet_size = 6 , total_length = 210} , self = 97 , parent = Nothing
S     |   |              , duration = 0.477617067000 , status = Success , start = 2025-09-03 11:52:36.080392596
S     |   |              UTC , finish = 2025-09-03 11:52:36.558009663 UTC , thread_cap_info = ("ThreadId
S     |   |              156", 1, False)}
S     |   |              
|     |   F              
| E   |                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   |                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| E   |                  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 16 , alphabet_size
| E   |                  = 6 , total_length = 210} , self = 99 , parent = Nothing , duration = 0.486314263000
| E   |                  , status = Except "AsyncCancelled" , start = 2025-09-03 11:52:36.105921222
| E   |                  UTC , finish = 2025-09-03 11:52:36.592235485 UTC , thread_cap_info = ("ThreadId
| E   |                  157", 1, False)}
| E   |                  
| | F |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F |                  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | F |                  = 40} , self = 105 , parent = Nothing , duration = 0.304380452000 , status
| | F |                  = Fail , start = 2025-09-03 11:52:36.546730877 UTC , finish = 2025-09-03
| | F |                  11:52:36.851111329 UTC , thread_cap_info = ("ThreadId 163", 2, False)}
| | F |                  
S | | |                  
F | | |                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F | | |                  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
F | | |                  = 40} , self = 104 , parent = Nothing , duration = 0.281839002000 , status
F | | |                  = Fail , start = 2025-09-03 11:52:36.566925431 UTC , finish = 2025-09-03
F | | |                  11:52:36.848764433 UTC , thread_cap_info = ("ThreadId 164", 2, False)}
F | | |                  
| E | |                  
| F | |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| F | |                  = 1 , num_top_rules = 1 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| F | |                  = 170} , self = 106 , parent = Nothing , duration = 0.836502121000 , status
| F | |                  = Fail , start = 2025-09-03 11:52:36.592856638 UTC , finish = 2025-09-03
| F | |                  11:52:37.429358759 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| F | |                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | F                = 1 , num_top_rules = 1 , num_weak_rules = 16 , alphabet_size = 5 , total_length
| | | | F                = 170} , self = 107 , parent = Nothing , duration = 0.921145107000 , status
| | | | F                = Fail , start = 2025-09-03 11:52:36.592859025 UTC , finish = 2025-09-03
| | | | F                11:52:37.514004132 UTC , thread_cap_info = ("ThreadId 170", 1, False)}
| | | | F                
F | | | |                
S | | | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |                = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
S | | | |                = 3 , total_length = 40} , self = 108 , parent = Nothing , duration = 0.854744763000
S | | | |                , status = Success , start = 2025-09-03 11:52:36.848807449 UTC , finish
S | | | |                = 2025-09-03 11:52:37.703552212 UTC , thread_cap_info = ("ThreadId 174",
S | | | |                2, False)}
S | | | |                
| | F | |                
| | E | |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E | |                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | E | |                = 3 , total_length = 40} , self = 110 , parent = Nothing , duration = 0.922063248000
| | E | |                , status = Except "AsyncCancelled" , start = 2025-09-03 11:52:36.87177374
| | E | |                UTC , finish = 2025-09-03 11:52:37.793836988 UTC , thread_cap_info = ("ThreadId
| | E | |                175", 2, False)}
| | E | |                
| F | | |                
|   | | F                
S   | |                  
    E |                  
      E                  
