last 2123 length 9044
CNF 2123 vars 9044 clauses
last 2087 length 8934
last 2717 length 11938
CNF 2087 vars 8934 clauses
last 1890 length 8446
CNF 2717 vars 11938 clauses
CNF 1890 vars 8446 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3195, clauses: 12542
last 3195 length 12542
CNF 3195 vars 12542 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3582, clauses: 14198
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3195, clauses: 12542, status: Satisfied, time: 0.138860022s
last 3582 length 14198
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10138, clauses: 42271
last 10138 length 42271
CNF 10138 vars 42271 clauses
CNF 3582 vars 14198 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3582, clauses: 14198, status: Satisfied, time: 0.300711405s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10138, clauses: 42271, status: Satisfied, time: 0.201310888s
last 1782 length 7544
last 1438 length 6311
CNF 1438 vars 6311 clauses
CNF 1782 vars 7544 clauses
last 1904 length 8232
CNF 1904 vars 8232 clauses
last 2243 length 9856
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2879, clauses: 11064
last 2879 length 11064
CNF 2243 vars 9856 clauses
CNF 2879 vars 11064 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3362, clauses: 12993
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9095, clauses: 37965
last 3362 length 12993
last 9095 length 37965
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2879, clauses: 11064, status: Unsatisfied, time: 0.357673195s
last 19433 length 108608
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10090, clauses: 42073
CNF 3362 vars 12993 clauses
CNF 9095 vars 37965 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5564, clauses: 23441
last 10090 length 42073
CNF 19433 vars 108608 clauses
last 5564 length 23441
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3362, clauses: 12993, status: Satisfied, time: 0.883434129s
CNF 10090 vars 42073 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9095, clauses: 37965, status: Satisfied, time: 1.043930957s
CNF 5564 vars 23441 clauses
last 1492 length 6413
last 1627 length 7255
CNF 1492 vars 6413 clauses
CNF 1627 vars 7255 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2835, clauses: 10604
last 2835 length 10604
last 1481 length 6407
CNF 2835 vars 10604 clauses
last 1642 length 7296
CNF 1481 vars 6407 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8830, clauses: 36733
last 8830 length 36733
CNF 1642 vars 7296 clauses
CNF 8830 vars 36733 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8830, clauses: 36733, status: Satisfied, time: 0.096141942s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2835, clauses: 10604, status: Unsatisfied, time: 0.345821521s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2770, clauses: 10426
last 2770 length 10426
CNF 2770 vars 10426 clauses
last 992 length 4341
CNF 992 vars 4341 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9342, clauses: 39040
last 9342 length 39040
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2770, clauses: 10426, status: Unsatisfied, time: 0.177818423s
CNF 9342 vars 39040 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2322, clauses: 8363
last 2322 length 8363
last 1218 length 5353
CNF 2322 vars 8363 clauses
CNF 1218 vars 5353 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2322, clauses: 8363, status: Unsatisfied, time: 0.155198013s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5660, clauses: 23891
last 5660 length 23891
CNF 5660 vars 23891 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9342, clauses: 39040, status: Satisfied, time: 0.401044577s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4883, clauses: 20372
last 4883 length 20372
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8119, clauses: 33815
last 8119 length 33815
CNF 4883 vars 20372 clauses
CNF 8119 vars 33815 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4883, clauses: 20372, status: Satisfied, time: 0.224611058s
last 1411 length 6142
last 1614 length 7202
CNF 1614 vars 7202 clauses
CNF 1411 vars 6142 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 4 letters       mirror
SRS with 3 rules on 4 letters       DP
SRS with 8 strict rules and 3 weak rules on 6 letters       EDG
SRS with 7 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 3 weak rules on 6 letters       EDG
SRS with 6 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 3 weak rules on 6 letters       EDG
SRS with 4 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 3 weak rules on 6 letters       weights
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 2 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, d, b, d, a] -> [a, a, c, a, a, b, d] {- Input 0 -}
  [a, a, c] -> [c, c, a, a] {- Input 1 -}
  [c, c, c] -> [b, d, c, b, d] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, d, b, d, b, a, a] -> [d, b, a, a, c, a, a] {- Mirror (Input 0) -}
  [c, a, a] -> [a, a, c, c] {- Mirror (Input 1) -}
  [c, c, c] -> [d, b, c, d, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, d, b, d, b, a, a] |-> [a#, a, c, a, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, d, b, d, b, a, a] |-> [a#, c, a, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [a#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, c, c] |-> [c#, d, b] {- DP (Top 2) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, d, b, d, b, a, a] |-> [a#, a, c, a, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, d, b, d, b, a, a] |-> [a#, c, a, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [a#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( d
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 1A 2A 2A - \
        | 1A 2A 2A - |
        | 1A 2A 2A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 2A 2A 2A - \
        | 2A 2A 2A - |
        | 2A 2A 2A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, d, b, d, b, a, a] |-> [a#, c, a, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [a#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, d, b, d, b, a, a] |-> [a#, c, a, a] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [a#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( d
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 13A 13A 14A - \
        | 13A 13A 14A - |
        | 13A 13A 14A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 14A 14A 14A - \
        | 14A 14A 14A - |
        | 14A 14A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( d
  , Wk  / -2A -1A 0A  \
        | -   -   -1A |
        \ -   -   0A  / )
  ( a
  , Wk  / 0A -2A -  \
        | -  -1A 0A |
        \ -  -   0A / )
  ( b
  , Wk  / -1A -1A 2A \
        | 2A  2A  -  |
        \ -   -   0A / )
  ( c
  , Wk  / - 1A 0A \
        | - -  0A |
        \ - -  0A / )
  ( a#
  , Wk  / 0A - -2A \
        | -  - -   |
        \ -  - 0A  / )
  ( c#
  , Wk  / - - 2A \
        | - - -  |
        \ - - 0A / )
   property Termination
has value Just True
for SRS
  [a#, d, b, d, b, a, a] |-> [c#, a, a] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  (d, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( d
  , Wk  / 0 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( a
  , Wk  / 1 2 3 \
        | 0 3 0 |
        \ 0 0 1 / )
  ( b
  , Wk  / 0 0 7 \
        | 0 0 7 |
        \ 0 0 1 / )
  ( c
  , Wk  / 1 4 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 1 1 5 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a, d, b, d, b, a, a] ->= [ d , b , a , a , c , a , a ] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, a] ->= [a, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [d, b, c, d, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,4)\Deepee(8/3,6)\EDG(7/3,6)\Matrix{\Arctic}{3}\EDG(6/3,6)\Matrix{\Arctic}{3}\EDG(4/3,6)\Matrix{\ArcticBZ}{3}(3/3,6)\Weight\EDG(2/3,5)\Matrix{\Natural}{3}(0/3,4)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.910137244000
  min duration 0.083449519000
  total durat. 4.311864532000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 30
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 11
      , total_length = 363}
    , self = 83
    , parent = Nothing
    , duration = 2.910137244000
    , status = Fail
    , start = 2025-09-03 10:46:48.701950989 UTC
    , finish = 2025-09-03 10:46:51.612088233 UTC
    , thread_cap_info = ("ThreadId 87", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.021530208000
  min duration 3.016449470000
  total durat. 6.037979678000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 30
      , alphabet_size = 17
      , total_length = 1053}
    , self = 95
    , parent = Nothing
    , duration = 3.016449470000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:48.846039889 UTC
    , finish = 2025-09-03 10:46:51.862489359 UTC
    , thread_cap_info = ("ThreadId 101", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 114
      , num_strict_rules = 87
      , num_top_rules = 87
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 1203}
    , self = 91
    , parent = Nothing
    , duration = 3.021530208000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:48.701954785 UTC
    , finish = 2025-09-03 10:46:51.723484993 UTC
    , thread_cap_info = ("ThreadId 92", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.301687090000
  min duration 0.138595838000
  total durat. 1.392165282000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.021408088000
  min duration 3.000578289000
  total durat. 6.021986377000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 30
      , alphabet_size = 17
      , total_length = 1053}
    , self = 96
    , parent = Nothing
    , duration = 3.000578289000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:48.861942605 UTC
    , finish = 2025-09-03 10:46:51.862520894 UTC
    , thread_cap_info = ("ThreadId 102", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 114
      , num_strict_rules = 87
      , num_top_rules = 87
      , num_weak_rules = 27
      , alphabet_size = 16
      , total_length = 1203}
    , self = 92
    , parent = Nothing
    , duration = 3.021408088000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:48.721950863 UTC
    , finish = 2025-09-03 10:46:51.743358951 UTC
    , thread_cap_info = ("ThreadId 93", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.080352184000
  min duration 3.080352184000
  total durat. 3.080352184000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 30
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 11
      , total_length = 363}
    , self = 93
    , parent = Nothing
    , duration = 3.080352184000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:48.721937354 UTC
    , finish = 2025-09-03 10:46:51.802289538 UTC
    , thread_cap_info = ("ThreadId 89", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.820524724000
  min duration 0.434046244000
  total durat. 3.628154617000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 3
      , alphabet_size = 5
      , total_length = 63}
    , self = 86
    , parent = Nothing
    , duration = 1.820524724000
    , status = Success
    , start = 2025-09-03 10:46:49.842590196 UTC
    , finish = 2025-09-03 10:46:51.66311492 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.380900808000
  min duration 0.440000727000
  total durat. 2.392786257000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 72}
    , self = 84
    , parent = Nothing
    , duration = 1.380900808000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:50.242013972 UTC
    , finish = 2025-09-03 10:46:51.62291478 UTC
    , thread_cap_info = ("ThreadId 135", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.003711363000
  min duration 0.411653682000
  total durat. 1.415365045000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 3
      , alphabet_size = 5
      , total_length = 63}
    , self = 94
    , parent = Nothing
    , duration = 1.003711363000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:50.841982182 UTC
    , finish = 2025-09-03 10:46:51.845693545 UTC
    , thread_cap_info = ("ThreadId 138", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.502140082000
  min duration 0.566405501000
  total durat. 2.691565509000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 72}
    , self = 81
    , parent = Nothing
    , duration = 1.502140082000
    , status = Success
    , start = 2025-09-03 10:46:50.062543212 UTC
    , finish = 2025-09-03 10:46:51.564683294 UTC
    , thread_cap_info = ("ThreadId 133", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.041566022000
  min duration 0.224017649000
  total durat. 2.040245258000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 3
      , alphabet_size = 5
      , total_length = 63}
    , self = 80
    , parent = Nothing
    , duration = 1.041566022000
    , status = Fail
    , start = 2025-09-03 10:46:49.781971052 UTC
    , finish = 2025-09-03 10:46:50.823537074 UTC
    , thread_cap_info = ("ThreadId 129", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.672206861000
  min duration 4.672206861000
  total durat. 4.672206861000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 29}
    , self = 128
    , parent = Nothing
    , duration = 4.672206861000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:48.611170348 UTC
    , finish = 2025-09-03 10:46:53.283377209 UTC
    , thread_cap_info = ("ThreadId 50", 1, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.597135397000
  min duration 1.597135397000
  total durat. 1.597135397000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 29}
    , self = 78
    , parent = Nothing
    , duration = 1.597135397000
    , status = Fail
    , start = 2025-09-03 10:46:48.608853807 UTC
    , finish = 2025-09-03 10:46:50.205989204 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
**************************************************
F                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                        = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                        = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length = 29} , self
F                        = 78 , parent = Nothing , duration = 1.597135397000 , status = Fail , start
F                        = 2025-09-03 10:46:48.608853807 UTC , finish = 2025-09-03 10:46:50.205989204
F                        UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                        
| E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| E                      = 29} , self = 128 , parent = Nothing , duration = 4.672206861000 , status
| E                      = Except "AsyncCancelled" , start = 2025-09-03 10:46:48.611170348 UTC ,
| E                      finish = 2025-09-03 10:46:53.283377209 UTC , thread_cap_info = ("ThreadId
| E                      50", 1, False)}
| E                      
| | S                    Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S                    verbose = False}" , input_size = Size { num_rules = 135 , num_strict_rules
| | S                    = 105 , num_top_rules = 105 , num_weak_rules = 30 , alphabet_size = 17
| | S                    , total_length = 1365} , self = 50 , parent = Nothing , duration = 0.121268202000
| | S                    , status = Success , start = 2025-09-03 10:46:48.629772441 UTC , finish
| | S                    = 2025-09-03 10:46:48.751040643 UTC , thread_cap_info = ("ThreadId 60",
| | S                    2, False)}
| | S                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | F                  = 76} , self = 52 , parent = Nothing , duration = 0.101225190000 , status
| | | F                  = Fail , start = 2025-09-03 10:46:48.681961279 UTC , finish = 2025-09-03
| | | F                  10:46:48.783186469 UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F                = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | F                = 84} , self = 54 , parent = Nothing , duration = 0.161160119000 , status
| | | | F                = Fail , start = 2025-09-03 10:46:48.70078679 UTC , finish = 2025-09-03
| | | | F                10:46:48.861946909 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | F              = 30 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 11 , total_length
| | | | | F              = 363} , self = 83 , parent = Nothing , duration = 2.910137244000 , status
| | | | | F              = Fail , start = 2025-09-03 10:46:48.701950989 UTC , finish = 2025-09-03
| | | | | F              10:46:51.612088233 UTC , thread_cap_info = ("ThreadId 87", 1, False)}
| | | | | F              
| | | | | | E            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 114 , num_strict_rules
| | | | | | E            = 87 , num_top_rules = 87 , num_weak_rules = 27 , alphabet_size = 16 ,
| | | | | | E            total_length = 1203} , self = 91 , parent = Nothing , duration = 3.021530208000
| | | | | | E            , status = Except "<<timeout>>" , start = 2025-09-03 10:46:48.701954785
| | | | | | E            UTC , finish = 2025-09-03 10:46:51.723484993 UTC , thread_cap_info = ("ThreadId
| | | | | | E            92", 2, False)}
| | | | | | E            
| | | | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | | | E          = 30 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 11 , total_length
| | | | | | | E          = 363} , self = 93 , parent = Nothing , duration = 3.080352184000 , status
| | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 10:46:48.721937354 UTC ,
| | | | | | | E          finish = 2025-09-03 10:46:51.802289538 UTC , thread_cap_info = ("ThreadId
| | | | | | | E          89", 1, False)}
| | | | | | | E          
| | | | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 114 , num_strict_rules
| | | | | | | | E        = 87 , num_top_rules = 87 , num_weak_rules = 27 , alphabet_size = 16 ,
| | | | | | | | E        total_length = 1203} , self = 92 , parent = Nothing , duration = 3.021408088000
| | | | | | | | E        , status = Except "<<timeout>>" , start = 2025-09-03 10:46:48.721950863
| | | | | | | | E        UTC , finish = 2025-09-03 10:46:51.743358951 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E        93", 2, False)}
| | | | | | | | E        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | | | F      = 76} , self = 56 , parent = Nothing , duration = 0.181538437000 , status
| | | | | | | | | F      = Fail , start = 2025-09-03 10:46:48.721963988 UTC , finish = 2025-09-03
| | | | | | | | | F      10:46:48.903502425 UTC , thread_cap_info = ("ThreadId 85", 0, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | F    = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | | | | F    = 84} , self = 55 , parent = Nothing , duration = 0.141681822000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 10:46:48.741951906 UTC , finish = 2025-09-03
| | | | | | | | | | F    10:46:48.883633728 UTC , thread_cap_info = ("ThreadId 80", 0, False)}
| | | | | | | | | | F    
| | S | | | | | | | |    
| |   F | | | | | | |    
| | S   | | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | | | | | | |    = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | S   | | | | | | |    = 5 , total_length = 76} , self = 60 , parent = Nothing , duration = 0.566405501000
| | S   | | | | | | |    , status = Success , start = 2025-09-03 10:46:48.817008844 UTC , finish
| | S   | | | | | | |    = 2025-09-03 10:46:49.383414345 UTC , thread_cap_info = ("ThreadId 99",
| | S   | | | | | | |    0, False)}
| | S   | | | | | | |    
| | | E | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | E | | | | | | |    = 72 , num_top_rules = 72 , num_weak_rules = 30 , alphabet_size = 17 ,
| | | E | | | | | | |    total_length = 1053} , self = 95 , parent = Nothing , duration = 3.016449470000
| | | E | | | | | | |    , status = Except "<<timeout>>" , start = 2025-09-03 10:46:48.846039889
| | | E | | | | | | |    UTC , finish = 2025-09-03 10:46:51.862489359 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | | |    101", 2, False)}
| | | E | | | | | | |    
| | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | | | | | | E  = 72 , num_top_rules = 72 , num_weak_rules = 30 , alphabet_size = 17 ,
| | | | | | | | | | | E  total_length = 1053} , self = 96 , parent = Nothing , duration = 3.000578289000
| | | | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 10:46:48.861942605
| | | | | | | | | | | E  UTC , finish = 2025-09-03 10:46:51.862520894 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E  102", 2, False)}
| | | | | | | | | | | E  
| | | | F | | | | | | |  
| | | |   | | | | | F |  
| | | |   | | | | F   |  
| | | | S | | | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | |     |  = 10 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 ,
| | | | S | | | |     |  alphabet_size = 6 , total_length = 84} , self = 66 , parent = Nothing ,
| | | | S | | | |     |  duration = 0.623019926000 , status = Success , start = 2025-09-03 10:46:48.921936991
| | | | S | | | |     |  UTC , finish = 2025-09-03 10:46:49.544956917 UTC , thread_cap_info = ("ThreadId
| | | | S | | | |     |  103", 0, False)}
| | | | S | | | |     |  
| | | | | | | | | S   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | S   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | S   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | S   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | S   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | S   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | | S   |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | S   |  = 6 , total_length = 84} , self = 69 , parent = Nothing , duration = 0.704718110000
| | | | | | | | | S   |  , status = Success , start = 2025-09-03 10:46:48.941935028 UTC , finish
| | | | | | | | | S   |  = 2025-09-03 10:46:49.646653138 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | | S   |  0, False)}
| | | | | | | | | S   |  
| | | | | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | | | E |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | | E |  = 5 , total_length = 76} , self = 62 , parent = Nothing , duration = 0.440000727000
| | | | | | | | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:48.98193682
| | | | | | | | | | E |  UTC , finish = 2025-09-03 10:46:49.421937547 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E |  106", 0, False)}
| | | | | | | | | | E |  
| | S | | | | | | | | |  
| |   | | | | | | | E |  
| |   | S | | | | |   |  
| | F |   | | | | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   | | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   | | | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F |   | | | | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | F |   | | | | |   |  = 63} , self = 76 , parent = Nothing , duration = 0.161877122000 , status
| | F |   | | | | |   |  = Fail , start = 2025-09-03 10:46:49.581941202 UTC , finish = 2025-09-03
| | F |   | | | | |   |  10:46:49.743818324 UTC , thread_cap_info = ("ThreadId 119", 0, False)}
| | F |   | | | | |   |  
| | | | F | | | | |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F | | | | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | F | | | | |   |  = 63} , self = 74 , parent = Nothing , duration = 0.140031759000 , status
| | | | F | | | | |   |  = Fail , start = 2025-09-03 10:46:49.60240798 UTC , finish = 2025-09-03
| | | | F | | | | |   |  10:46:49.742439739 UTC , thread_cap_info = ("ThreadId 120", 0, False)}
| | | | F | | | | |   |  
| | | | | | | | | S   |  
| | | | F | | | |     |  
| | | | F | | | |     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F | | | |     |  = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | F | | | |     |  = 72} , self = 79 , parent = Nothing , duration = 0.479611511000 , status
| | | | F | | | |     |  = Fail , start = 2025-09-03 10:46:49.742473453 UTC , finish = 2025-09-03
| | | | F | | | |     |  10:46:50.222084964 UTC , thread_cap_info = ("ThreadId 127", 0, False)}
| | | | F | | | |     |  
| | F | | | | | |     |  
| | F | | | | | |     |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F | | | | | |     |  = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F | | | | | |     |  = 72} , self = 77 , parent = Nothing , duration = 0.256603842000 , status
| | F | | | | | |     |  = Fail , start = 2025-09-03 10:46:49.762489828 UTC , finish = 2025-09-03
| | F | | | | | |     |  10:46:50.01909367 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | F | | | | | |     |  
| | | | | | | | | F   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F   |  = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | F   |  = 5 , total_length = 63} , self = 80 , parent = Nothing , duration = 1.041566022000
| | | | | | | | | F   |  , status = Fail , start = 2025-09-03 10:46:49.781971052 UTC , finish =
| | | | | | | | | F   |  2025-09-03 10:46:50.823537074 UTC , thread_cap_info = ("ThreadId 129",
| | | | | | | | | F   |  0, False)}
| | | | | | | | | F   |  
| | | | | | | | | | S |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | | S |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | S |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | S |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | S |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | S |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | | S |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | | S |  = 5 , total_length = 63} , self = 86 , parent = Nothing , duration = 1.820524724000
| | | | | | | | | | S |  , status = Success , start = 2025-09-03 10:46:49.842590196 UTC , finish
| | | | | | | | | | S |  = 2025-09-03 10:46:51.66311492 UTC , thread_cap_info = ("ThreadId 130",
| | | | | | | | | | S |  0, False)}
| | | | | | | | | | S |  
| | F | | | | | | | | |  
| | S | | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | | | | | |  = 9 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| | S | | | | | | | | |  = 6 , total_length = 72} , self = 81 , parent = Nothing , duration = 1.502140082000
| | S | | | | | | | | |  , status = Success , start = 2025-09-03 10:46:50.062543212 UTC , finish
| | S | | | | | | | | |  = 2025-09-03 10:46:51.564683294 UTC , thread_cap_info = ("ThreadId 133",
| | S | | | | | | | | |  0, False)}
| | S | | | | | | | | |  
F | | | | | | | | | | |  
  | | | F | | | | | | |  
E | | |   | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | |   | | | | | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
E | | |   | | | | | | |  = 6 , total_length = 72} , self = 84 , parent = Nothing , duration = 1.380900808000
E | | |   | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:50.242013972
E | | |   | | | | | | |  UTC , finish = 2025-09-03 10:46:51.62291478 UTC , thread_cap_info = ("ThreadId
E | | |   | | | | | | |  135", 0, False)}
E | | |   | | | | | | |  
| | | |   | | | | F | |  
| | | | E | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E | | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E | | | |   | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | E | | | |   | |  = 5 , total_length = 63} , self = 94 , parent = Nothing , duration = 1.003711363000
| | | | E | | | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:50.841982182
| | | | E | | | |   | |  UTC , finish = 2025-09-03 10:46:51.845693545 UTC , thread_cap_info = ("ThreadId
| | | | E | | | |   | |  138", 0, False)}
| | | | E | | | |   | |  
| | S | | | | | |   | |  
| |   | | F | | |   | |  
E |   | |   | | |   | |  
  |   | |   | | |   S |  
F |   | |   | | |     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |   | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |   | | |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F |   | |   | | |     |  = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 6 , total_length
F |   | |   | | |     |  = 54} , self = 98 , parent = Nothing , duration = 0.146164046000 , status
F |   | |   | | |     |  = Fail , start = 2025-09-03 10:46:51.7229186 UTC , finish = 2025-09-03
F |   | |   | | |     |  10:46:51.869082646 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
F |   | |   | | |     |  
| |   | |   E | |     |  
| |   | |     | E     |  
| | F | |     |       |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |     |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |     |       |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | |     |       |  = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F | |     |       |  = 54} , self = 100 , parent = Nothing , duration = 0.138595838000 , status
| | F | |     |       |  = Fail , start = 2025-09-03 10:46:51.74343427 UTC , finish = 2025-09-03
| | F | |     |       |  10:46:51.882030108 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | F | |     |       |  
| | | | |     E       |  
| | | | E             |  
| | | E               |  
| | |                 E  
F | |                    
F | |                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |                    = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
F | |                    = 6 , total_length = 54} , self = 107 , parent = Nothing , duration = 0.475610823000
F | |                    , status = Fail , start = 2025-09-03 10:46:51.8691188 UTC , finish = 2025-09-03
F | |                    10:46:52.344729623 UTC , thread_cap_info = ("ThreadId 161", 0, False)}
F | |                    
| | F                    
| | S                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S                    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | S                    = 6 , total_length = 54} , self = 105 , parent = Nothing , duration = 0.434046244000
| | S                    , status = Success , start = 2025-09-03 10:46:51.903592161 UTC , finish
| | S                    = 2025-09-03 10:46:52.337638405 UTC , thread_cap_info = ("ThreadId 163",
| | S                    0, False)}
| | S                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F                  = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | F                  = 52} , self = 103 , parent = Nothing , duration = 0.287718078000 , status
| | | F                  = Fail , start = 2025-09-03 10:46:51.94476061 UTC , finish = 2025-09-03
| | | F                  10:46:52.232478688 UTC , thread_cap_info = ("ThreadId 167", 0, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F                = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | F                = 52} , self = 104 , parent = Nothing , duration = 0.301687090000 , status
| | | | F                = Fail , start = 2025-09-03 10:46:51.962113407 UTC , finish = 2025-09-03
| | | | F                10:46:52.263800497 UTC , thread_cap_info = ("ThreadId 168", 0, False)}
| | | | F                
| | | F |                
| | | F |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |                = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | F |                = 5 , total_length = 52} , self = 113 , parent = Nothing , duration = 0.299050764000
| | | F |                , status = Fail , start = 2025-09-03 10:46:52.246416862 UTC , finish =
| | | F |                2025-09-03 10:46:52.545467626 UTC , thread_cap_info = ("ThreadId 173",
| | | F |                0, False)}
| | | F |                
| | | | F                
| | | | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | S                , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | S                = 5 , total_length = 52} , self = 116 , parent = Nothing , duration = 0.668865539000
| | | | S                , status = Success , start = 2025-09-03 10:46:52.28289885 UTC , finish
| | | | S                = 2025-09-03 10:46:52.951764389 UTC , thread_cap_info = ("ThreadId 174",
| | | | S                0, False)}
| | | | S                
| | S | |                
F |   | |                
F |   | |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |                = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F |   | |                = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 5 , total_length
F |   | |                = 38} , self = 114 , parent = Nothing , duration = 0.212548197000 , status
F |   | |                = Fail , start = 2025-09-03 10:46:52.47914858 UTC , finish = 2025-09-03
F |   | |                10:46:52.691696777 UTC , thread_cap_info = ("ThreadId 181", 0, False)}
F |   | |                
| |   F |                
| | F   |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   |                = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F   |                = 5 , total_length = 38} , self = 115 , parent = Nothing , duration = 0.224017649000
| | F   |                , status = Fail , start = 2025-09-03 10:46:52.581950616 UTC , finish =
| | F   |                2025-09-03 10:46:52.805968265 UTC , thread_cap_info = ("ThreadId 184",
| | F   |                0, False)}
| | F   |                
| | | E |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E |                , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | E |                = 5 , total_length = 52} , self = 118 , parent = Nothing , duration = 0.411653682000
| | | E |                , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:52.615054512
| | | E |                UTC , finish = 2025-09-03 10:46:53.026708194 UTC , thread_cap_info = ("ThreadId
| | | E |                185", 0, False)}
| | | E |                
F | | | |                
E | | | |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | | | |                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
E | | | |                = 5 , total_length = 38} , self = 125 , parent = Nothing , duration = 0.571884722000
E | | | |                , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:52.70196768
E | | | |                UTC , finish = 2025-09-03 10:46:53.273852402 UTC , thread_cap_info = ("ThreadId
E | | | |                188", 0, False)}
E | | | |                
| | F | |                
| | S | |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S | |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S | |                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | S | |                = 5 , total_length = 38} , self = 123 , parent = Nothing , duration = 0.402591189000
| | S | |                , status = Success , start = 2025-09-03 10:46:52.828251452 UTC , finish
| | S | |                = 2025-09-03 10:46:53.230842641 UTC , thread_cap_info = ("ThreadId 189",
| | S | |                0, False)}
| | S | |                
| | | | S                
| | | E                  
| | S                    
E |                      
  E                      
