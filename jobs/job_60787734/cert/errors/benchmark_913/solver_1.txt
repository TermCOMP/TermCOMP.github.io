last 1061 length 4339
CNF 1061 vars 4339 clauses
last 1664 length 7096
last 1622 length 7105
CNF 1622 vars 7105 clauses
last 1212 length 5138
CNF 1664 vars 7096 clauses
last 2510 length 10733
last 734 length 2847
CNF 1212 vars 5138 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2445, clauses: 9521
CNF 2510 vars 10733 clauses
CNF 734 vars 2847 clauses
last 10130 length 43325
last 2445 length 9521
last 5706 length 24935
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1968, clauses: 7613
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6402, clauses: 26627
last 5484 length 22441
CNF 10130 vars 43325 clauses
CNF 5706 vars 24935 clauses
CNF 2445 vars 9521 clauses
last 1968 length 7613
last 6402 length 26627
CNF 5484 vars 22441 clauses
last 11358 length 53415
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5696, clauses: 23724
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2445, clauses: 9521, status: Satisfied, time: 0.266793147s
CNF 1968 vars 7613 clauses
CNF 6402 vars 26627 clauses
CNF 11358 vars 53415 clauses
last 5696 length 23724
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9759, clauses: 42875
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7039, clauses: 29443
last 1013 length 4185
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1968, clauses: 7613, status: Satisfied, time: 0.428102885s
last 1512 length 6471
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22976, clauses: 96471
last 9759 length 42875
last 7039 length 29443
CNF 1013 vars 4185 clauses
CNF 1512 vars 6471 clauses
**************************************************
last 22976 length 96471
CNF 9759 vars 42875 clauses
summary
**************************************************
SRS with 2 rules on 2 letters       mirror
SRS with 2 rules on 2 letters       DP
SRS with 4 strict rules and 2 weak rules on 3 letters       EDG
SRS with 4 strict rules and 2 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a] -> [b, b, b, a] {- Input 0 -}
  [b, b, b, a] -> [a, a, a, b] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a] -> [a, b, b, b] {- Mirror (Input 0) -}
  [a, b, b, b] -> [b, a, a, a] {- Mirror (Input 1) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b, b] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
  [a#, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#, b, b, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, b, b, b] |-> [a#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, b, b, b] |-> [a#, a, a] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#, b, b, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, b, b, b] |-> [a#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, b, b, b] |-> [a#, a, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [a, b, a] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b, b] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 5A 5A 5A - \
        | 5A 5A 5A - |
        | 5A 5A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [a, b, a] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b, b] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(2,2)\Deepee\EDG(4/2,3)\Matrix{\Arctic}{3}(1/2,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 7039 vars 29443 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.884499507000
  min duration 0.187461547000
  total durat. 2.185435765000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.501954989000
  min duration 0.040326883000
  total durat. 1.410465752000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.665039939000
  min duration 0.626505514000
  total durat. 1.291545453000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.766374950000
  min duration 0.759793371000
  total durat. 1.526168321000
**************************************************
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7039, clauses: 29443, status: Satisfied, time: 0.170800808s
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F                  = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                  = 76} , self = 61 , parent = Nothing , duration = 0.411699420000 , status
F                  = Fail , start = 2025-09-03 13:31:05.087287894 UTC , finish = 2025-09-03
F                  13:31:05.498987314 UTC , thread_cap_info = ("ThreadId 64", 0, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F                = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| F                = 54} , self = 59 , parent = Nothing , duration = 0.187461547000 , status
| F                = Fail , start = 2025-09-03 13:31:05.087410626 UTC , finish = 2025-09-03
| F                13:31:05.274872173 UTC , thread_cap_info = ("ThreadId 67", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F              = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | F              = 40} , self = 60 , parent = Nothing , duration = 0.223569157000 , status
| | F              = Fail , start = 2025-09-03 13:31:05.134664931 UTC , finish = 2025-09-03
| | F              13:31:05.358234088 UTC , thread_cap_info = ("ThreadId 80", 2, False)}
| | F              
| | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S            = 8 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
| | | S            = 4 , total_length = 54} , self = 66 , parent = Nothing , duration = 0.766374950000
| | | S            , status = Success , start = 2025-09-03 13:31:05.152849309 UTC , finish
| | | S            = 2025-09-03 13:31:05.919224259 UTC , thread_cap_info = ("ThreadId 85",
| | | S            2, False)}
| | | S            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | F          = 40} , self = 62 , parent = Nothing , duration = 0.355517134000 , status
| | | | F          = Fail , start = 2025-09-03 13:31:05.154689717 UTC , finish = 2025-09-03
| | | | F          13:31:05.510206851 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | F        = 32 , num_top_rules = 32 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | F        = 332} , self = 64 , parent = Nothing , duration = 0.478206134000 , status
| | | | | F        = Fail , start = 2025-09-03 13:31:05.180139889 UTC , finish = 2025-09-03
| | | | | F        13:31:05.658346023 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | | F      = 32 , num_top_rules = 32 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | F      = 332} , self = 63 , parent = Nothing , duration = 0.452260739000 , status
| | | | | | F      = Fail , start = 2025-09-03 13:31:05.194136456 UTC , finish = 2025-09-03
| | | | | | F      13:31:05.646397195 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | | | F    = 20 , num_top_rules = 20 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | F    = 230} , self = 73 , parent = Nothing , duration = 0.884499507000 , status
| | | | | | | F    = Fail , start = 2025-09-03 13:31:05.215174149 UTC , finish = 2025-09-03
| | | | | | | F    13:31:06.099673656 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | | | | F  = 20 , num_top_rules = 20 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | F  = 230} , self = 65 , parent = Nothing , duration = 0.501954989000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 13:31:05.234335866 UTC , finish = 2025-09-03
| | | | | | | | F  13:31:05.736290855 UTC , thread_cap_info = ("ThreadId 107", 3, False)}
| | | | | | | | F  
| F | | | | | | |  
| E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E | | | | | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
| E | | | | | | |  = 4 , total_length = 54} , self = 68 , parent = Nothing , duration = 0.626505514000
| E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:31:05.29437334
| E | | | | | | |  UTC , finish = 2025-09-03 13:31:05.920878854 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |  108", 2, False)}
| E | | | | | | |  
| | F | | | | | |  
| | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | | |  = 6 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| | S | | | | | |  = 3 , total_length = 40} , self = 74 , parent = Nothing , duration = 0.759793371000
| | S | | | | | |  , status = Success , start = 2025-09-03 13:31:05.415210956 UTC , finish
| | S | | | | | |  = 2025-09-03 13:31:06.175004327 UTC , thread_cap_info = ("ThreadId 111",
| | S | | | | | |  2, False)}
| | S | | | | | |  
F | | | | | | | |  
  | | | F | | | |  
E | | |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E | | |   | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
E | | |   | | | |  = 3 , total_length = 40} , self = 76 , parent = Nothing , duration = 0.665039939000
E | | |   | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:31:05.520408887
E | | |   | | | |  UTC , finish = 2025-09-03 13:31:06.185448826 UTC , thread_cap_info = ("ThreadId
E | | |   | | | |  117", 2, False)}
E | | |   | | | |  
| | | |   | F | |  
| | | |   F   | |  
| | | |       | F  
| | | S       |    
| E |         |    
|   |         F    
|   S              
E                  
