last 3771 length 18988
last 4530 length 30365
CNF 4530 vars 30365 clauses
CNF 3771 vars 18988 clauses
last 4034 length 22647
CNF 4034 vars 22647 clauses
last 4807 length 24674
CNF 4807 vars 24674 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2271, clauses: 8957
last 2271 length 8957
last 6931 length 47311
CNF 2271 vars 8957 clauses
last 6783 length 45649
CNF 6931 vars 47311 clauses
CNF 6783 vars 45649 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2150, clauses: 8265
last 2150 length 8265
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2271, clauses: 8957, status: Satisfied, time: 0.160291322s
last 3368 length 16998
CNF 2150 vars 8265 clauses
CNF 3368 vars 16998 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2150, clauses: 8265, status: Satisfied, time: 0.225078105s
last 6808 length 40371
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7682, clauses: 32177
last 2264 length 10638
last 2327 length 11182
CNF 2264 vars 10638 clauses
CNF 2327 vars 11182 clauses
CNF 6808 vars 40371 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 3 letters       DP
SRS with 7 strict rules and 1 weak rules on 4 letters       EDG
SRS with 2 strict rules and 1 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, c, a, b, a, b, a, b] -> [ a , b , a , b , a , b , a , b , a , c , a , b , a , c ] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, c, a, b, a, b, a, b] ->= [ a , b , a , b , a , b , a , b , a , c , a , b , a , c ] {- DP Nontop (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [ a# , b , a , b , a , b , a , b , a , c , a , b , a , c ] {- DP (Top 0) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [ a# , b , a , b , a , b , a , c , a , b , a , c ] {- DP (Top 2) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [ a# , b , a , b , a , c , a , b , a , c ] {- DP (Top 4) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [a#, b, a, c] {- DP (Top 10) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [ a# , b , a , c , a , b , a , c ] {- DP (Top 6) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [a#, c] {- DP (Top 12) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [ a# , c , a , b , a , c ] {- DP (Top 8) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, c, a, b, a, b, a, b] |-> [ a# , b , a , c , a , b , a , c ] {- DP (Top 6) (Input 0) -}
  [a#, b, a, c, a, b, a, b, a, b] |-> [a#, b, a, c] {- DP (Top 10) (Input 0) -}
  [a, b, a, c, a, b, a, b, a, b] ->= [ a , b , a , b , a , b , a , b , a , c , a , b , a , c ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, c, a, b, a, b, a, b] ->= [ a , b , a , b , a , b , a , b , a , c , a , b , a , c ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,3)\Deepee(7/1,4)\EDG(2/1,4)\Matrix{\Arctic}{3}(0/1,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.808776357000
  min duration 0.181195909000
  total durat. 2.192219556000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.901399130000
  min duration 0.178837137000
  total durat. 3.249782035000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.384218195000
  min duration 1.384218195000
  total durat. 1.384218195000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 24}
    , self = 78
    , parent = Nothing
    , duration = 1.384218195000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:40:55.203572101 UTC
    , finish = 2025-09-03 12:40:56.587790296 UTC
    , thread_cap_info = ("ThreadId 72", 2, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.367851483000
  min duration 1.367851483000
  total durat. 1.367851483000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 24}
    , self = 75
    , parent = Nothing
    , duration = 1.367851483000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:40:55.201251718 UTC
    , finish = 2025-09-03 12:40:56.569103201 UTC
    , thread_cap_info = ("ThreadId 22", 1, False)}
**************************************************
E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                  = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
E                  = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 24} , self
E                  = 75 , parent = Nothing , duration = 1.367851483000 , status = Except "AsyncCancelled"
E                  , start = 2025-09-03 12:40:55.201251718 UTC , finish = 2025-09-03 12:40:56.569103201
E                  UTC , thread_cap_info = ("ThreadId 22", 1, False)}
E                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| F                = 72} , self = 59 , parent = Nothing , duration = 0.808776357000 , status
| F                = Fail , start = 2025-09-03 12:40:55.202668949 UTC , finish = 2025-09-03
| F                12:40:56.011445306 UTC , thread_cap_info = ("ThreadId 68", 3, False)}
| F                
| | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | E              = 24} , self = 78 , parent = Nothing , duration = 1.384218195000 , status
| | E              = Except "AsyncCancelled" , start = 2025-09-03 12:40:55.203572101 UTC ,
| | E              finish = 2025-09-03 12:40:56.587790296 UTC , thread_cap_info = ("ThreadId
| | E              72", 2, False)}
| | E              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F            = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | F            = 72} , self = 57 , parent = Nothing , duration = 0.605792714000 , status
| | | F            = Fail , start = 2025-09-03 12:40:55.208089554 UTC , finish = 2025-09-03
| | | F            12:40:55.813882268 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | F          = 3 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | | F          = 78} , self = 56 , parent = Nothing , duration = 0.482065395000 , status
| | | | F          = Fail , start = 2025-09-03 12:40:55.267787627 UTC , finish = 2025-09-03
| | | | F          12:40:55.749853022 UTC , thread_cap_info = ("ThreadId 80", 2, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | | | F        = 78} , self = 60 , parent = Nothing , duration = 0.822491485000 , status
| | | | | F        = Fail , start = 2025-09-03 12:40:55.288590459 UTC , finish = 2025-09-03
| | | | | F        12:40:56.111081944 UTC , thread_cap_info = ("ThreadId 82", 2, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | F      = 56} , self = 58 , parent = Nothing , duration = 0.720181895000 , status
| | | | | | F      = Fail , start = 2025-09-03 12:40:55.288611927 UTC , finish = 2025-09-03
| | | | | | F      12:40:56.008793822 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | | F    = 56} , self = 63 , parent = Nothing , duration = 0.901399130000 , status
| | | | | | | F    = Fail , start = 2025-09-03 12:40:55.308795751 UTC , finish = 2025-09-03
| | | | | | | F    12:40:56.210194881 UTC , thread_cap_info = ("ThreadId 85", 3, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | | F  = 170} , self = 71 , parent = Nothing , duration = 0.741261569000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 12:40:55.727819757 UTC , finish = 2025-09-03
| | | | | | | | F  12:40:56.469081326 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | | | | | F  
| | | | F | | | |  
| | | F   | | | |  
| | | S   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   | | | |  = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | S   | | | |  = 4 , total_length = 72} , self = 61 , parent = Nothing , duration = 0.261138886000
| | | S   | | | |  , status = Success , start = 2025-09-03 12:40:55.908590218 UTC , finish
| | | S   | | | |  = 2025-09-03 12:40:56.169729104 UTC , thread_cap_info = ("ThreadId 106",
| | | S   | | | |  3, False)}
| | | S   | | | |  
| | | |   | F | |  
| F | |   |   | |  
| E | |   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E | |   |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| E | |   |   | |  = 4 , total_length = 72} , self = 64 , parent = Nothing , duration = 0.203306385000
| E | |   |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:40:56.028568385
| E | |   |   | |  UTC , finish = 2025-09-03 12:40:56.23187477 UTC , thread_cap_info = ("ThreadId
| E | |   |   | |  110", 3, False)}
| E | |   |   | |  
| | | | S |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |   | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | S |   | |  = 4 , total_length = 56} , self = 69 , parent = Nothing , duration = 0.339931087000
| | | | S |   | |  , status = Success , start = 2025-09-03 12:40:56.05032166 UTC , finish
| | | | S |   | |  = 2025-09-03 12:40:56.390252747 UTC , thread_cap_info = ("ThreadId 111",
| | | | S |   | |  3, False)}
| | | | S |   | |  
| | | | | F   | |  
| | | S |     | |  
| | |   |     F |  
| E |   |       |  
| E |   |       |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |   |       |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |   |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |   |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E |   |       |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| E |   |       |  = 4 , total_length = 56} , self = 72 , parent = Nothing , duration = 0.303061441000
| E |   |       |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:40:56.231915074
| E |   |       |  UTC , finish = 2025-09-03 12:40:56.534976515 UTC , thread_cap_info = ("ThreadId
| E |   |       |  118", 3, False)}
| E |   |       |  
| | | F |       |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |       |  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F |       |  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | F |       |  = 58} , self = 76 , parent = Nothing , duration = 0.181195909000 , status
| | | F |       |  = Fail , start = 2025-09-03 12:40:56.387910874 UTC , finish = 2025-09-03
| | | F |       |  12:40:56.569106783 UTC , thread_cap_info = ("ThreadId 122", 3, False)}
| | | F |       |  
| | | | S       |  
| | | | F       |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F       |  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | F       |  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | F       |  = 58} , self = 77 , parent = Nothing , duration = 0.178837137000 , status
| | | | F       |  = Fail , start = 2025-09-03 12:40:56.39027673 UTC , finish = 2025-09-03
| | | | F       |  12:40:56.569113867 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| | | | F       |  
| | | | |       F  
| E | | |          
E   | | |          
    | F |          
    |   F          
    E              
