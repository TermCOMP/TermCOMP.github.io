last 1325 length 5435
CNF 1325 vars 5435 clauses
last 457 length 1858
last 1774 length 7726
CNF 1774 vars 7726 clauses
last 1974 length 8488
CNF 1974 vars 8488 clauses
CNF 457 vars 1858 clauses
last 473 length 1884
CNF 473 vars 1884 clauses
last 994 length 4130
CNF 994 vars 4130 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1519, clauses: 5482
last 1519 length 5482
CNF 1519 vars 5482 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5019, clauses: 20889
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1519, clauses: 5482, status: Unsatisfied, time: 0.037801913s
last 5019 length 20889
CNF 5019 vars 20889 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3059, clauses: 12492
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5019, clauses: 20889, status: Satisfied, time: 0.062374459s
last 3059 length 12492
last 363 length 1492
last 469 length 1889
CNF 363 vars 1492 clauses
CNF 469 vars 1889 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1411, clauses: 5017
last 1411 length 5017
CNF 1411 vars 5017 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2774, clauses: 10707
last 2774 length 10707
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1411, clauses: 5017, status: Unsatisfied, time: 0.033053149s
CNF 2774 vars 10707 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4971, clauses: 20709
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6789, clauses: 28258
last 4971 length 20709
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2982, clauses: 12202
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2774, clauses: 10707, status: Unsatisfied, time: 0.16486119s
last 6789 length 28258
last 4110 length 17488
last 3309 length 13533
last 6926 length 28123
last 11154 length 46904
CNF 4971 vars 20709 clauses
last 2982 length 12202
CNF 6789 vars 28258 clauses
CNF 4110 vars 17488 clauses
CNF 3309 vars 13533 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4367, clauses: 17962
CNF 6926 vars 28123 clauses
CNF 11154 vars 46904 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4971, clauses: 20709, status: Satisfied, time: 0.531396646s
CNF 2982 vars 12202 clauses
last 4367 length 17962
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6789, clauses: 28258, status: Satisfied, time: 0.503119448s
CNF 4367 vars 17962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6245, clauses: 24069
last 6245 length 24069
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       mirror
SRS with 2 rules on 2 letters       DP
SRS with 2 strict rules and 2 weak rules on 3 letters       EDG
SRS with 2 strict rules and 2 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 3 letters       EDG
SRS with 1 strict rules and 2 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b] -> [b, b, a, a] {- Input 0 -}
  [b, a, b] -> [a, a, a, a] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a] -> [a, a, b, b] {- Mirror (Input 0) -}
  [b, a, b] -> [a, a, a, a] {- Mirror (Input 1) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 0)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 0)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
reason
  ( a
  , Wk  / -1A 2A  1A  \
        | -1A -1A -1A |
        \ -   -   0A  / )
  ( b
  , Wk  / 0A -  0A \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( b#
  , Wk  / 0A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
reason
  ( a
  , Wk  / -1A 2A  0A \
        | -1A -1A -  |
        \ -   -   0A / )
  ( b
  , Wk  / 0A 0A -   \
        | 0A 0A -1A |
        \ -  -  0A  / )
  ( b#
  , Wk  / 1A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a, a, a, a] {- DP Nontop (Mirror (Input 1)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(2,2)\Deepee\EDG(2/2,3)\Matrix{\ArcticBZ}{3}\EDG(1/2,3)\Matrix{\ArcticBZ}{3}(0/2,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.803961995000
  min duration 0.008442293000
  total durat. 1.591569277000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.763433926000
  min duration 0.007983844000
  total durat. 1.511095021000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.980629987000
  min duration 0.123730052000
  total durat. 1.898232117000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.788715640000
  min duration 0.062815613000
  total durat. 1.382331301000
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.219876948000
  min duration 1.219876948000
  total durat. 1.219876948000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 14}
    , self = 86
    , parent = Nothing
    , duration = 1.219876948000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:45:04.248199864 UTC
    , finish = 2025-09-03 13:45:05.468076812 UTC
    , thread_cap_info = ("ThreadId 22", 1, False)}
**************************************************
E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                  = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 14} , self
E                  = 86 , parent = Nothing , duration = 1.219876948000 , status = Except "AsyncCancelled"
E                  , start = 2025-09-03 13:45:04.248199864 UTC , finish = 2025-09-03 13:45:05.468076812
E                  UTC , thread_cap_info = ("ThreadId 22", 1, False)}
E                  
| S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| S                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| S                = 3 , total_length = 23} , self = 59 , parent = Nothing , duration = 0.123730052000
| S                , status = Success , start = 2025-09-03 13:45:04.34603333 UTC , finish
| S                = 2025-09-03 13:45:04.469763382 UTC , thread_cap_info = ("ThreadId 97",
| S                2, False)}
| S                
| | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F              = 10 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 2 ,
| | F              alphabet_size = 4 , total_length = 58} , self = 73 , parent = Nothing ,
| | F              duration = 0.580248987000 , status = Fail , start = 2025-09-03 13:45:04.346040743
| | F              UTC , finish = 2025-09-03 13:45:04.92628973 UTC , thread_cap_info = ("ThreadId
| | F              96", 3, False)}
| | F              
| | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | S            , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 2 , alphabet_size
| | | S            = 4 , total_length = 58} , self = 82 , parent = Nothing , duration = 0.980629987000
| | | S            , status = Success , start = 2025-09-03 13:45:04.406212918 UTC , finish
| | | S            = 2025-09-03 13:45:05.386842905 UTC , thread_cap_info = ("ThreadId 105",
| | | S            3, False)}
| | | S            
| S | |            
| S | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| S | |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| S | |            = 3 , total_length = 19} , self = 76 , parent = Nothing , duration = 0.793872078000
| S | |            , status = Success , start = 2025-09-03 13:45:04.493114143 UTC , finish
| S | |            = 2025-09-03 13:45:05.286986221 UTC , thread_cap_info = ("ThreadId 123",
| S | |            2, False)}
| S | |            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | F          = 40 , num_top_rules = 40 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | F          = 352} , self = 79 , parent = Nothing , duration = 0.803961995000 , status
| | | | F          = Fail , start = 2025-09-03 13:45:04.506114764 UTC , finish = 2025-09-03
| | | | F          13:45:05.310076759 UTC , thread_cap_info = ("ThreadId 121", 1, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | F        = 40 , num_top_rules = 40 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | F        = 352} , self = 77 , parent = Nothing , duration = 0.763433926000 , status
| | | | | F        = Fail , start = 2025-09-03 13:45:04.526743646 UTC , finish = 2025-09-03
| | | | | F        13:45:05.290177572 UTC , thread_cap_info = ("ThreadId 122", 1, False)}
| | | | | F        
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | E      = 3 , total_length = 19} , self = 80 , parent = Nothing , duration = 0.788715640000
| | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:45:04.559213316
| | | | | | E      UTC , finish = 2025-09-03 13:45:05.347928956 UTC , thread_cap_info = ("ThreadId
| | | | | | E      126", 2, False)}
| | | | | | E      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | F    = 12 , num_top_rules = 12 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | F    = 144} , self = 74 , parent = Nothing , duration = 0.621801819000 , status
| | | | | | | F    = Fail , start = 2025-09-03 13:45:04.606095508 UTC , finish = 2025-09-03
| | | | | | | F    13:45:05.227897327 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | | F  = 12 , num_top_rules = 12 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | F  = 144} , self = 75 , parent = Nothing , duration = 0.614871894000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 13:45:04.63076042 UTC , finish = 2025-09-03
| | | | | | | | F  13:45:05.245632314 UTC , thread_cap_info = ("ThreadId 130", 1, False)}
| | | | | | | | F  
| | F | | | | | |  
| | E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E | | | | | |  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 2 , alphabet_size
| | E | | | | | |  = 4 , total_length = 58} , self = 85 , parent = Nothing , duration = 0.530800048000
| | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:45:04.937257824
| | E | | | | | |  UTC , finish = 2025-09-03 13:45:05.468057872 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |  132", 3, False)}
| | E | | | | | |  
| | | | | | | F |  
| | | | | | |   F  
| S | | | | |      
|   | | | F |      
|   | | F   |      
|   | |     E      
|   | S            
|   E              
E                  
