last 4036 length 18220
CNF 4036 vars 18220 clauses
last 834 length 3518
last 3932 length 17384
CNF 3932 vars 17384 clauses
CNF 834 vars 3518 clauses
last 1084 length 4612
CNF 1084 vars 4612 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1999, clauses: 7258
last 1999 length 7258
last 919 length 3890
CNF 1999 vars 7258 clauses
last 1022 length 4582
last 4591 length 21422
last 4332 length 19516
CNF 919 vars 3890 clauses
last 5860 length 26929
last 6576 length 32707
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7939, clauses: 33351
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1999, clauses: 7258, status: Satisfied, time: 0.221569487s
CNF 1022 vars 4582 clauses
CNF 4332 vars 19516 clauses
CNF 4591 vars 21422 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1903, clauses: 6952
CNF 5860 vars 26929 clauses
CNF 6576 vars 32707 clauses
last 834 length 3518
last 1084 length 4612
last 1903 length 6952
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7355, clauses: 30863
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5865, clauses: 22004
CNF 834 vars 3518 clauses
CNF 1084 vars 4612 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6060, clauses: 22472
CNF 1903 vars 6952 clauses
last 7355 length 30863
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24889, clauses: 105441
last 5865 length 22004
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1999, clauses: 7258
last 6060 length 22472
CNF 7355 vars 30863 clauses
last 24889 length 105441
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1903, clauses: 6952, status: Unsatisfied, time: 0.623590262s
CNF 5865 vars 22004 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26055, clauses: 110211
last 1999 length 7258
CNF 6060 vars 22472 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7939, clauses: 33351
last 26055 length 110211
CNF 1999 vars 7258 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4424, clauses: 18352
last 7939 length 33351
CNF 24889 vars 105441 clauses
last 4424 length 18352
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7355, clauses: 30863, status: Satisfied, time: 0.537644678s
CNF 7939 vars 33351 clauses
CNF 26055 vars 110211 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1999, clauses: 7258, status: Unsatisfied, time: 0.301035082s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6060, clauses: 22472, status: Satisfied, time: 0.537247371s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 5 strict rules and 3 weak rules on 3 letters       weights
SRS with 1 strict rules and 3 weak rules on 3 letters       EDG
SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b] -> [b, b, a, a] {- Input 0 -}
  [a, a, a, b] -> [a, a, b, a] {- Input 1 -}
  [b, b, a, b] -> [b, a, b, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, b, a] -> [a, a, b, b] {- Mirror (Input 0) -}
  [b, a, a, a] -> [a, b, a, a] {- Mirror (Input 1) -}
  [b, a, b, b] -> [b, b, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a, a] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b, b] ->= [b, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a, a] |-> [b#, a, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, b, a] |-> [b#] {- DP (Top 3) (Mirror (Input 0)) -}
  [b#, a, b, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, a, b, b] |-> [b#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, a, b, b] |-> [b#, b, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a, a] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b, b] ->= [b, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, b, b] |-> [b#, b, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, b, b] |-> [b#, b, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, a, b, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a, a] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b, b] ->= [b, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / - 2A 0A  \
        | - -  -2A |
        \ - -  0A  / )
  ( b
  , Wk  / -   -  1A \
        | -1A 0A -  |
        \ -   -  0A / )
  ( b#
  , Wk  / -1A -1A 0A \
        | -   -   -  |
        \ -   -   0A / )
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a, a] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, b, b] ->= [b, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee(5/3,3)\Weight\EDG(1/3,3)\Matrix{\ArcticBZ}{3}(0/3,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.448141019000
  min duration 0.040957768000
  total durat. 1.645298588000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.472437262000
  min duration 0.052248210000
  total durat. 1.665060508000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.021718605000
  min duration 1.021718605000
  total durat. 1.021718605000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 77
    , parent = Nothing
    , duration = 1.021718605000
    , status = Success
    , start = 2025-09-03 12:13:30.391382173 UTC
    , finish = 2025-09-03 12:13:31.413100778 UTC
    , thread_cap_info = ("ThreadId 125", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.470196743000
  min duration 1.470196743000
  total durat. 1.470196743000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 82
    , parent = Nothing
    , duration = 1.470196743000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:29.948615157 UTC
    , finish = 2025-09-03 12:13:31.4188119 UTC
    , thread_cap_info = ("ThreadId 69", 1, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
F                  = 48 , parent = Nothing , duration = 0.163014754000 , status = Fail , start
F                  = 2025-09-03 12:13:29.88213146 UTC , finish = 2025-09-03 12:13:30.045146214
F                  UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                = 120} , self = 56 , parent = Nothing , duration = 0.188166606000 , status
| F                = Fail , start = 2025-09-03 12:13:29.893881116 UTC , finish = 2025-09-03
| F                12:13:30.082047722 UTC , thread_cap_info = ("ThreadId 53", 3, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F              = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F              = 120} , self = 52 , parent = Nothing , duration = 0.173630509000 , status
| | F              = Fail , start = 2025-09-03 12:13:29.893886605 UTC , finish = 2025-09-03
| | F              12:13:30.067517114 UTC , thread_cap_info = ("ThreadId 55", 3, False)}
| | F              
| | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E            = 24} , self = 82 , parent = Nothing , duration = 1.470196743000 , status
| | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:13:29.948615157 UTC ,
| | | E            finish = 2025-09-03 12:13:31.4188119 UTC , thread_cap_info = ("ThreadId
| | | E            69", 1, False)}
| | | E            
F | | |            
F | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F | | |            = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
F | | |            = 140} , self = 70 , parent = Nothing , duration = 0.361079978000 , status
F | | |            = Fail , start = 2025-09-03 12:13:30.047007944 UTC , finish = 2025-09-03
F | | |            12:13:30.408087922 UTC , thread_cap_info = ("ThreadId 94", 0, False)}
F | | |            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F          = 140} , self = 71 , parent = Nothing , duration = 0.351786690000 , status
| | | | F          = Fail , start = 2025-09-03 12:13:30.067455397 UTC , finish = 2025-09-03
| | | | F          12:13:30.419242087 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | | F          
| | F | |          
| F   | |          
| F   | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| F   | |          = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| F   | |          = 140} , self = 72 , parent = Nothing , duration = 0.381554871000 , status
| F   | |          = Fail , start = 2025-09-03 12:13:30.085625974 UTC , finish = 2025-09-03
| F   | |          12:13:30.467180845 UTC , thread_cap_info = ("ThreadId 104", 0, False)}
| F   | |          
| | F | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F | |          = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | F | |          = 140} , self = 73 , parent = Nothing , duration = 0.402524462000 , status
| | F | |          = Fail , start = 2025-09-03 12:13:30.098432326 UTC , finish = 2025-09-03
| | F | |          12:13:30.500956788 UTC , thread_cap_info = ("ThreadId 105", 0, False)}
| | F | |          
| | | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S        = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | S        = 3 , total_length = 32} , self = 62 , parent = Nothing , duration = 0.269060502000
| | | | | S        , status = Success , start = 2025-09-03 12:13:30.098454492 UTC , finish
| | | | | S        = 2025-09-03 12:13:30.367514994 UTC , thread_cap_info = ("ThreadId 107",
| | | | | S        2, False)}
| | | | | S        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | F      = 32} , self = 61 , parent = Nothing , duration = 0.225398346000 , status
| | | | | | F      = Fail , start = 2025-09-03 12:13:30.118355374 UTC , finish = 2025-09-03
| | | | | | F      12:13:30.34375372 UTC , thread_cap_info = ("ThreadId 108", 2, False)}
| | | | | | F      
| | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | E    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | E    = 3 , total_length = 32} , self = 64 , parent = Nothing , duration = 0.213078545000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 12:13:30.16021784
| | | | | | | E    UTC , finish = 2025-09-03 12:13:30.373296385 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    111", 2, False)}
| | | | | | | E    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | | F  = 32} , self = 69 , parent = Nothing , duration = 0.212433375000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 12:13:30.178890399 UTC , finish = 2025-09-03
| | | | | | | | F  12:13:30.391323774 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| | | | | | | | F  
| | | | | | F | |  
| | | | | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F | |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | F | |  = 3 , total_length = 32} , self = 76 , parent = Nothing , duration = 0.766732247000
| | | | | | F | |  , status = Fail , start = 2025-09-03 12:13:30.343777272 UTC , finish =
| | | | | | F | |  2025-09-03 12:13:31.110509519 UTC , thread_cap_info = ("ThreadId 117",
| | | | | | F | |  2, False)}
| | | | | | F | |  
| | | | | S | | |  
| | | | |   | E |  
| | | | | F |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F |   |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | F |   |  = 32} , self = 75 , parent = Nothing , duration = 0.472437262000 , status
| | | | | F |   |  = Fail , start = 2025-09-03 12:13:30.373495313 UTC , finish = 2025-09-03
| | | | | F |   |  12:13:30.845932575 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | | | | F |   |  
| | | | | | | F |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F |  = 32} , self = 74 , parent = Nothing , duration = 0.448141019000 , status
| | | | | | | F |  = Fail , start = 2025-09-03 12:13:30.373497908 UTC , finish = 2025-09-03
| | | | | | | F |  12:13:30.821638927 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| | | | | | | F |  
| | | | | | | | F  
| | | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | S  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | | S  = 3 , total_length = 32} , self = 77 , parent = Nothing , duration = 1.021718605000
| | | | | | | | S  , status = Success , start = 2025-09-03 12:13:30.391382173 UTC , finish
| | | | | | | | S  = 2025-09-03 12:13:31.413100778 UTC , thread_cap_info = ("ThreadId 125",
| | | | | | | | S  2, False)}
| | | | | | | | S  
F | | | | | | | |  
  | | | F | | | |  
  F | |   | | | |  
    F |   | | | |  
      |   | | F |  
      |   F |   |  
      |     F   |  
E     |         |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E     |         |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E     |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E     |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E     |         |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
E     |         |  = 3 , total_length = 32} , self = 79 , parent = Nothing , duration = 0.300511545000
E     |         |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:13:31.112691899
E     |         |  UTC , finish = 2025-09-03 12:13:31.413203444 UTC , thread_cap_info = ("ThreadId
E     |         |  139", 2, False)}
E     |         |  
|     |         S  
E     |            
      E            
