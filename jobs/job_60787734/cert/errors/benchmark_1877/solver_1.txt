last 2663 length 11309
CNF 2663 vars 11309 clauses
last 2948 length 11906
last 2663 length 11309
last 2948 length 11906
CNF 2948 vars 11906 clauses
last 3725 length 15284
last 360 length 1446
last 353 length 1415
last 3645 length 15200
CNF 2663 vars 11309 clauses
CNF 3725 vars 15284 clauses
CNF 353 vars 1415 clauses
CNF 2948 vars 11906 clauses
CNF 360 vars 1446 clauses
CNF 3645 vars 15200 clauses
last 392 length 1500
last 277 length 1050
last 1420 length 5803
last 1680 length 7245
CNF 392 vars 1500 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1979, clauses: 7044
CNF 277 vars 1050 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4667, clauses: 19039
CNF 1420 vars 5803 clauses
CNF 1680 vars 7245 clauses
last 2805 length 11965
last 1979 length 7044
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1768, clauses: 6316
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4332, clauses: 17640
last 4667 length 19039
last 3093 length 12545
last 3725 length 15284
last 3645 length 15200
CNF 1979 vars 7044 clauses
CNF 2805 vars 11965 clauses
last 1768 length 6316
last 4332 length 17640
CNF 3093 vars 12545 clauses
CNF 4667 vars 19039 clauses
CNF 3725 vars 15284 clauses
CNF 3645 vars 15200 clauses
CNF 1768 vars 6316 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 4332 vars 17640 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1979, clauses: 7044, status: Unsatisfied, time: 0.301770596s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1768, clauses: 6316, status: Satisfied, time: 0.148955276s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4332, clauses: 17640, status: Satisfied, time: 0.1522652s
last 361 length 1383
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 261 length 992
CNF 361 vars 1383 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1662, clauses: 5891
CNF 261 vars 992 clauses
last 1662 length 5891
CNF 1662 vars 5891 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2958, clauses: 11557
last 2958 length 11557
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1662, clauses: 5891, status: Unsatisfied, time: 0.040317985s
CNF 2958 vars 11557 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4286, clauses: 17464
last 4286 length 17464
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2647, clauses: 10378
last 2647 length 10378
CNF 4286 vars 17464 clauses
CNF 2647 vars 10378 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2958, clauses: 11557, status: Satisfied, time: 0.080669311s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2647, clauses: 10378, status: Satisfied, time: 0.032211011s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 7 strict rules and 3 weak rules on 6 letters       weights
SRS with 3 strict rules and 3 weak rules on 5 letters       EDG
SRS with 3 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 2 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 5 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c, b] {- Input 0 -}
  [a] -> [b, b, b] {- Input 1 -}
  [b, c, b] -> [a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [b, c] {- Mirror (Input 0) -}
  [a] -> [b, b, b] {- Mirror (Input 1) -}
  [b, c, b] -> [c, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, c, b] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a] |-> [b#, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 0)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 2/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [b#, c, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a] |-> [b#, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, c, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a] |-> [b#, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 0)) -}
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b#
  , Wk  / 21A 24A 24A - \
        | 21A 24A 24A - |
        | 21A 24A 24A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 21A 23A 23A - \
        | 21A 23A 23A - |
        | 21A 23A 23A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b#, c, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a] |-> [b#, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, c, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a] |-> [b#, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1 3 7 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 1 2 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 1 3 0 \
        | 0 3 3 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 1 4 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 1 3 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [c#, a] |-> [b#, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [c, a] ->= [b, c] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee(7/3,6)\Weight\EDG(3/3,5)\Matrix{\Arctic}{3}\EDG(2/3,5)\Matrix{\Natural}{3}(1/3,5)\Weight(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 2948 length 11906

CNF 2948 vars 11906 clauses
last 2663 length 11309
FailCNF 2663 vars 11309 clauses
 : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.382802088000
  min duration 0.009206528000
  total durat. 1.212077998000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.382318162000
  min duration 0.034761102000
  total durat. 1.285768214000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.486615147000
  min duration 0.053561768000
  total durat. 1.037052588000
**************************************************
S                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
S                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S                    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
S                    = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
S                    = 117} , self = 56 , parent = Nothing , duration = 0.223214494000 , status
S                    = Success , start = 2025-09-03 13:28:41.053851418 UTC , finish = 2025-09-03
S                    13:28:41.277065912 UTC , thread_cap_info = ("ThreadId 63", 3, False)}
S                    
| S                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| S                  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| S                  = 4 , num_top_rules = 4 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| S                  = 117} , self = 74 , parent = Nothing , duration = 0.272609929000 , status
| S                  = Success , start = 2025-09-03 13:28:41.078747692 UTC , finish = 2025-09-03
| S                  13:28:41.351357621 UTC , thread_cap_info = ("ThreadId 72", 0, False)}
| S                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F                = 4 , num_top_rules = 4 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | F                = 117} , self = 68 , parent = Nothing , duration = 0.195234026000 , status
| | F                = Fail , start = 2025-09-03 13:28:41.088432197 UTC , finish = 2025-09-03
| | F                13:28:41.283666223 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | F              = 5 , num_top_rules = 5 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | F              = 150} , self = 72 , parent = Nothing , duration = 0.192957359000 , status
| | | F              = Fail , start = 2025-09-03 13:28:41.149766541 UTC , finish = 2025-09-03
| | | F              13:28:41.3427239 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| | | F              
| | | | S            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | S            = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | S            = 5 , num_top_rules = 5 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | | S            = 150} , self = 76 , parent = Nothing , duration = 0.260783279000 , status
| | | | S            = Success , start = 2025-09-03 13:28:41.167754449 UTC , finish = 2025-09-03
| | | | S            13:28:41.428537728 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| | | | S            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | F          = 27} , self = 73 , parent = Nothing , duration = 0.100085110000 , status
| | | | | F          = Fail , start = 2025-09-03 13:28:41.24838612 UTC , finish = 2025-09-03
| | | | | F          13:28:41.34847123 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | F        = 25} , self = 88 , parent = Nothing , duration = 0.254831688000 , status
| | | | | | F        = Fail , start = 2025-09-03 13:28:41.268531891 UTC , finish = 2025-09-03
| | | | | | F        13:28:41.523363579 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| | | | | | | F      = 25} , self = 89 , parent = Nothing , duration = 0.270477370000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:28:41.271183328 UTC , finish = 2025-09-03
| | | | | | | F      13:28:41.541660698 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | | | | F      
S | | | | | | |      
F | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F | | | | | | |      = 9 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
F | | | | | | |      = 60} , self = 91 , parent = Nothing , duration = 0.382802088000 , status
F | | | | | | |      = Fail , start = 2025-09-03 13:28:41.281791329 UTC , finish = 2025-09-03
F | | | | | | |      13:28:41.664593417 UTC , thread_cap_info = ("ThreadId 130", 3, False)}
F | | | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | | | | | | | F    = 60} , self = 90 , parent = Nothing , duration = 0.382318162000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:28:41.281792572 UTC , finish = 2025-09-03
| | | | | | | | F    13:28:41.664110734 UTC , thread_cap_info = ("ThreadId 132", 3, False)}
| | | | | | | | F    
| | F | | | | | |    
| | F | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | | |    = 18 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 14 ,
| | F | | | | | |    alphabet_size = 9 , total_length = 117} , self = 78 , parent = Nothing
| | F | | | | | |    , duration = 0.186782346000 , status = Fail , start = 2025-09-03 13:28:41.283690546
| | F | | | | | |    UTC , finish = 2025-09-03 13:28:41.470472892 UTC , thread_cap_info = ("ThreadId
| | F | | | | | |    135", 0, False)}
| | F | | | | | |    
| | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F  = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | F  = 5 , total_length = 27} , self = 100 , parent = Nothing , duration = 0.486615147000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 13:28:41.342588071 UTC , finish =
| | | | | | | | | F  2025-09-03 13:28:41.829203218 UTC , thread_cap_info = ("ThreadId 138",
| | | | | | | | | F  0, False)}
| | | | | | | | | F  
| | | F | | | | | |  
| | | F | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | | | |  = 23 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 18 ,
| | | F | | | | | |  alphabet_size = 11 , total_length = 150} , self = 79 , parent = Nothing
| | | F | | | | | |  , duration = 0.128785401000 , status = Fail , start = 2025-09-03 13:28:41.343240719
| | | F | | | | | |  UTC , finish = 2025-09-03 13:28:41.47202612 UTC , thread_cap_info = ("ThreadId
| | | F | | | | | |  139", 0, False)}
| | | F | | | | | |  
| | | | | F | | | |  
| S | | |   | | | |  
|   | | S   | | | |  
|   F |     | | | |  
|     F     | | | |  
| F         | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F         | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F         | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F         | | | |  = 6 , num_top_rules = 6 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| F         | | | |  = 126} , self = 92 , parent = Nothing , duration = 0.214420917000 , status
| F         | | | |  = Fail , start = 2025-09-03 13:28:41.472720381 UTC , finish = 2025-09-03
| F         | | | |  13:28:41.687141298 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
| F         | | | |  
| | S       | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S       | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S       | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | S       | | | |  = 6 , num_top_rules = 6 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | S       | | | |  = 126} , self = 93 , parent = Nothing , duration = 0.255204680000 , status
| | S       | | | |  = Success , start = 2025-09-03 13:28:41.473137526 UTC , finish = 2025-09-03
| | S       | | | |  13:28:41.728342206 UTC , thread_cap_info = ("ThreadId 152", 0, False)}
| | S       | | | |  
| | | F     | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | F     | | | |  = 5 , num_top_rules = 5 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | F     | | | |  = 150} , self = 95 , parent = Nothing , duration = 0.272195225000 , status
| | | F     | | | |  = Fail , start = 2025-09-03 13:28:41.488694807 UTC , finish = 2025-09-03
| | | F     | | | |  13:28:41.760890032 UTC , thread_cap_info = ("ThreadId 155", 0, False)}
| | | F     | | | |  
| | | | S   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | S   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | S   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | S   | | | |  = 5 , num_top_rules = 5 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | | S   | | | |  = 150} , self = 98 , parent = Nothing , duration = 0.303747231000 , status
| | | | S   | | | |  = Success , start = 2025-09-03 13:28:41.50819312 UTC , finish = 2025-09-03
| | | | S   | | | |  13:28:41.811940351 UTC , thread_cap_info = ("ThreadId 156", 0, False)}
| | | | S   | | | |  
| | | | |   F | | |  
| | | | | S   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S   | | |  = 5 , total_length = 25} , self = 101 , parent = Nothing , duration = 0.306133541000
| | | | | S   | | |  , status = Success , start = 2025-09-03 13:28:41.523429309 UTC , finish
| | | | | S   | | |  = 2025-09-03 13:28:41.82956285 UTC , thread_cap_info = ("ThreadId 157",
| | | | | S   | | |  1, False)}
| | | | | S   | | |  
| | | | | |   F | |  
| | | | | | E   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | E   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | E   | |  = 5 , total_length = 25} , self = 103 , parent = Nothing , duration = 0.288400916000
| | | | | | E   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:28:41.541693771
| | | | | | E   | |  UTC , finish = 2025-09-03 13:28:41.830094687 UTC , thread_cap_info = ("ThreadId
| | | | | | E   | |  158", 1, False)}
| | | | | | E   | |  
| | | | | | |   F |  
F | | | | | |     |  
  F | | | | |     |  
F   | | | | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | | | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | | | | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | | | | |     |  = 20 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 14 ,
F   | | | | |     |  alphabet_size = 9 , total_length = 126} , self = 96 , parent = Nothing
F   | | | | |     |  , duration = 0.103402318000 , status = Fail , start = 2025-09-03 13:28:41.687214253
F   | | | | |     |  UTC , finish = 2025-09-03 13:28:41.790616571 UTC , thread_cap_info = ("ThreadId
F   | | | | |     |  168", 0, False)}
F   | | | | |     |  
|   S | | | |     |  
|     F | | |     |  
F       | | |     |  
        S | |     |  
          | |     F  
          S |        
            E        
S                    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
S                    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S                    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
S                    = 5 , total_length = 27} , self = 117 , parent = Nothing , duration = 0.139016605000
S                    , status = Success , start = 2025-09-03 13:28:41.835943301 UTC , finish
S                    = 2025-09-03 13:28:41.974959906 UTC , thread_cap_info = ("ThreadId 181",
S                    0, False)}
S                    
| E                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E                  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| E                  = 5 , total_length = 22} , self = 120 , parent = Nothing , duration = 0.117229125000
| E                  , status = Except "AsyncCancelled" , start = 2025-09-03 13:28:41.868343745
| E                  UTC , finish = 2025-09-03 13:28:41.98557287 UTC , thread_cap_info = ("ThreadId
| E                  188", 1, False)}
| E                  
S |                  
  E                  
