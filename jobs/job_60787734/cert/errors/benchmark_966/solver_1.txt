last 856 length 3817
last 723 length 3107
CNF 856 vars 3817 clauses
last 707 length 3073
last 2166 length 9866
last 555 length 2376
CNF 723 vars 3107 clauses
last 1893 length 8269
last 3165 length 14140
CNF 707 vars 3073 clauses
last 2678 length 11513
CNF 2166 vars 9866 clauses
last 3476 length 16824
CNF 555 vars 2376 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2250, clauses: 8276
last 3529 length 15839
CNF 1893 vars 8269 clauses
CNF 3165 vars 14140 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7148, clauses: 29863
CNF 2678 vars 11513 clauses
CNF 3476 vars 16824 clauses
last 2250 length 8276
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1732, clauses: 6280
CNF 3529 vars 15839 clauses
last 7148 length 29863
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5897, clauses: 24607
CNF 2250 vars 8276 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5030, clauses: 19050
last 1732 length 6280
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5828, clauses: 22167
CNF 7148 vars 29863 clauses
last 5897 length 24607
last 5030 length 19050
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2250, clauses: 8276, status: Unsatisfied, time: 0.495883363s
CNF 1732 vars 6280 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18959, clauses: 80027
last 5828 length 22167
CNF 5897 vars 24607 clauses
last 18959 length 80027
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1732, clauses: 6280, status: Unsatisfied, time: 0.523245624s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20545, clauses: 86634
CNF 5030 vars 19050 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4343, clauses: 17909
CNF 5828 vars 22167 clauses
last 4343 length 17909
last 20545 length 86634
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3577, clauses: 14582
last 3577 length 14582
CNF 4343 vars 17909 clauses
CNF 3577 vars 14582 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5828, clauses: 22167, status: Satisfied, time: 0.626202374s
CNF 18959 vars 80027 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5897, clauses: 24607, status: Unsatisfied, time: 0.78978953s
CNF 20545 vars 86634 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2848, clauses: 10874
last 2848 length 10874
CNF 2848 vars 10874 clauses
last 2255 length 10046
last 2245 length 9814
CNF 2255 vars 10046 clauses
CNF 2245 vars 9814 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4377, clauses: 16121
last 4377 length 16121
CNF 4377 vars 16121 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2848, clauses: 10874, status: Unsatisfied, time: 0.666888091s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3577, clauses: 14582, status: Unsatisfied, time: 1.040074987s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4377, clauses: 16121, status: Satisfied, time: 0.421796763s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5357, clauses: 20270
last 5357 length 20270
CNF 5357 vars 20270 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10048, clauses: 42566
last 10048 length 42566
last 3125 length 14227
CNF 10048 vars 42566 clauses
CNF 3125 vars 14227 clauses
last 3352 length 16228
CNF 3352 vars 16228 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5292, clauses: 19865
last 5292 length 19865
CNF 5292 vars 19865 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5292, clauses: 19865, status: Satisfied, time: 0.110886457s
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 rules on 4 letters       DP
SRS with 36 strict rules and 8 weak rules on 8 letters       weights
SRS with 10 strict rules and 8 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 6 strict rules and 8 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 4 strict rules and 8 weak rules on 6 letters       weights
  SRS with 2 strict rules and 8 weak rules on 5 letters       EDG
  SRS with 2 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

  2 SRS with 4 strict rules and 8 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 8 weak rules on 6 letters       weights
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b] -> [b, a, a, a] {- Input 0 -}
  [b, b] -> [a, b, a, b] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a]] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b]] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, a]] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b]] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [ b , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [ b , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [ a , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [a, b]# , [ b , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [ b , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 3/1)
  ([b, b], 3/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([b, a]#, 2/1)
  ([b, b]#, 2/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 3A 6A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 1A 1A 2A - \
        | 1A 1A 2A - |
        | 1A 1A 2A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, b], [b, a]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, b], [b, a]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 13A 15A 15A - \
        | 13A 15A 15A - |
        | 13A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b]#, [b, b], [b, a]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b]#, [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 15A 15A 17A - \
        | 15A 15A 17A - |
        | 15A 15A 17A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 15A 18A 18A - \
        | 15A 18A 18A - |
        | 15A 18A 18A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, a], [a, a], [a, b], [b, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, b], [b, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, a]#, 1/1)
  ([b, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG

**************************************************
skeleton: (2,2)\TileAllAll{2}(8,4)\Deepee(36/8,8)\Weight(10/8,8)\EDG[(6/8,6)\Matrix{\Arctic}{3}(4/8,6)\Weight\EDG(2/8,5)\Matrix{\Arctic}{3}(0/8,4)\EDG[],(4/8,6)\Matrix{\Arctic}{3}(2/8,6)\Weight(0/8,4)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.168691496000
  min duration 0.143591761000
  total durat. 3.709840211000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 108}
    , self = 88
    , parent = Nothing
    , duration = 1.168691496000
    , status = Fail
    , start = 2025-09-03 13:39:05.561425657 UTC
    , finish = 2025-09-03 13:39:06.730117153 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.206381135000
  min duration 0.142577327000
  total durat. 3.297946238000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 108}
    , self = 89
    , parent = Nothing
    , duration = 1.206381135000
    , status = Fail
    , start = 2025-09-03 13:39:05.571110062 UTC
    , finish = 2025-09-03 13:39:06.777491197 UTC
    , thread_cap_info = ("ThreadId 155", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.215975572000
  min duration 1.215975572000
  total durat. 1.215975572000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 25}
    , self = 71
    , parent = Nothing
    , duration = 1.215975572000
    , status = Fail
    , start = 2025-09-03 13:39:03.207656239 UTC
    , finish = 2025-09-03 13:39:04.423631811 UTC
    , thread_cap_info = ("ThreadId 115", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.123487478000
  min duration 0.199081695000
  total durat. 2.069926702000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 122}
    , self = 72
    , parent = Nothing
    , duration = 1.123487478000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:03.533082307 UTC
    , finish = 2025-09-03 13:39:04.656569785 UTC
    , thread_cap_info = ("ThreadId 123", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.239576469000
  min duration 1.239576469000
  total durat. 1.239576469000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 25}
    , self = 80
    , parent = Nothing
    , duration = 1.239576469000
    , status = Fail
    , start = 2025-09-03 13:39:04.11867931 UTC
    , finish = 2025-09-03 13:39:05.358255779 UTC
    , thread_cap_info = ("ThreadId 131", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.080661354000
  min duration 0.260453221000
  total durat. 2.002990597000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 122}
    , self = 69
    , parent = Nothing
    , duration = 1.080661354000
    , status = Success
    , start = 2025-09-03 13:39:03.331557085 UTC
    , finish = 2025-09-03 13:39:04.412218439 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.932940395000
  min duration 0.879469393000
  total durat. 1.812409788000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.293335424000
  min duration 4.293335424000
  total durat. 4.293335424000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 14}
    , self = 95
    , parent = Nothing
    , duration = 4.293335424000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:02.730868025 UTC
    , finish = 2025-09-03 13:39:07.024203449 UTC
    , thread_cap_info = ("ThreadId 80", 1, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 14} , self
F                      = 54 , parent = Nothing , duration = 0.169188817000 , status = Fail , start
F                      = 2025-09-03 13:39:02.696118165 UTC , finish = 2025-09-03 13:39:02.865306982
F                      UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                    = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| F                    = 33} , self = 58 , parent = Nothing , duration = 0.326824622000 , status
| F                    = Fail , start = 2025-09-03 13:39:02.710004752 UTC , finish = 2025-09-03
| F                    13:39:03.036829374 UTC , thread_cap_info = ("ThreadId 63", 0, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                  = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F                  = 33} , self = 57 , parent = Nothing , duration = 0.204404322000 , status
| | F                  = Fail , start = 2025-09-03 13:39:02.710855521 UTC , finish = 2025-09-03
| | F                  13:39:02.915259843 UTC , thread_cap_info = ("ThreadId 64", 0, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                = 72} , self = 62 , parent = Nothing , duration = 0.530188185000 , status
| | | F                = Fail , start = 2025-09-03 13:39:02.712746326 UTC , finish = 2025-09-03
| | | F                13:39:03.242934511 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F              = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F              = 72} , self = 60 , parent = Nothing , duration = 0.477031387000 , status
| | | | F              = Fail , start = 2025-09-03 13:39:02.71276111 UTC , finish = 2025-09-03
| | | | F              13:39:03.189792497 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | | | F              
| | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E            = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E            = 14} , self = 95 , parent = Nothing , duration = 4.293335424000 , status
| | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 13:39:02.730868025 UTC ,
| | | | | E            finish = 2025-09-03 13:39:07.024203449 UTC , thread_cap_info = ("ThreadId
| | | | | E            80", 1, False)}
| | | | | E            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | | | F          = 25} , self = 59 , parent = Nothing , duration = 0.423766379000 , status
| | | | | | F          = Fail , start = 2025-09-03 13:39:02.758982947 UTC , finish = 2025-09-03
| | | | | | F          13:39:03.182749326 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | | | | F        = 25} , self = 61 , parent = Nothing , duration = 0.417930806000 , status
| | | | | | | F        = Fail , start = 2025-09-03 13:39:02.786025006 UTC , finish = 2025-09-03
| | | | | | | F        13:39:03.203955812 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | | | | F      = 102} , self = 65 , parent = Nothing , duration = 0.481353583000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 13:39:02.850330711 UTC , finish = 2025-09-03
| | | | | | | | F      13:39:03.331684294 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | | | | | F    = 102} , self = 63 , parent = Nothing , duration = 0.426751436000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 13:39:02.850849748 UTC , finish = 2025-09-03
| | | | | | | | | F    13:39:03.277601184 UTC , thread_cap_info = ("ThreadId 101", 2, False)}
| | | | | | | | | F    
F | | | | | | | | |    
F | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F | | | | | | | | |    = 6 , num_top_rules = 6 , num_weak_rules = 8 , alphabet_size = 6 , total_length
F | | | | | | | | |    = 122} , self = 66 , parent = Nothing , duration = 0.641259758000 , status
F | | | | | | | | |    = Fail , start = 2025-09-03 13:39:02.891765598 UTC , finish = 2025-09-03
F | | | | | | | | |    13:39:03.533025356 UTC , thread_cap_info = ("ThreadId 103", 2, False)}
F | | | | | | | | |    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | | | F  = 122} , self = 64 , parent = Nothing , duration = 0.417034252000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 13:39:02.910864967 UTC , finish = 2025-09-03
| | | | | | | | | | F  13:39:03.327899219 UTC , thread_cap_info = ("ThreadId 104", 2, False)}
| | | | | | | | | | F  
| | F | | | | | | | |  
| | F | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | | | | |  = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | F | | | | | | | |  = 4 , total_length = 33} , self = 67 , parent = Nothing , duration = 0.879469393000
| | F | | | | | | | |  , status = Fail , start = 2025-09-03 13:39:02.93139204 UTC , finish = 2025-09-03
| | F | | | | | | | |  13:39:03.810861433 UTC , thread_cap_info = ("ThreadId 105", 0, False)}
| | F | | | | | | | |  
| F | | | | | | | | |  
|   | | | | F | | | |  
| F | | | |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | |   | | | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| F | | | |   | | | |  = 3 , total_length = 25} , self = 68 , parent = Nothing , duration = 0.932940395000
| F | | | |   | | | |  , status = Fail , start = 2025-09-03 13:39:03.182790242 UTC , finish =
| F | | | |   | | | |  2025-09-03 13:39:04.115730637 UTC , thread_cap_info = ("ThreadId 113",
| F | | | |   | | | |  0, False)}
| F | | | |   | | | |  
| | | | F |   | | | |  
| | | |   |   F | | |  
| | | | F |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F |     | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F |     | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F |     | | |  = 3 , total_length = 25} , self = 71 , parent = Nothing , duration = 1.215975572000
| | | | F |     | | |  , status = Fail , start = 2025-09-03 13:39:03.207656239 UTC , finish =
| | | | F |     | | |  2025-09-03 13:39:04.423631811 UTC , thread_cap_info = ("ThreadId 115",
| | | | F |     | | |  0, False)}
| | | | F |     | | |  
| | | F | |     | | |  
| | |   | |     | F |  
| | |   | |     |   F  
| | | S | |     |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |     |      = 14 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 8 ,
| | | S | |     |      alphabet_size = 6 , total_length = 122} , self = 69 , parent = Nothing
| | | S | |     |      , duration = 1.080661354000 , status = Success , start = 2025-09-03 13:39:03.331557085
| | | S | |     |      UTC , finish = 2025-09-03 13:39:04.412218439 UTC , thread_cap_info = ("ThreadId
| | | S | |     |      121", 2, False)}
| | | S | |     |      
| | | | | |     F      
F | | | | |            
E | | | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | | | | |            , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 8 , alphabet_size
E | | | | |            = 6 , total_length = 122} , self = 72 , parent = Nothing , duration = 1.123487478000
E | | | | |            , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:03.533082307
E | | | | |            UTC , finish = 2025-09-03 13:39:04.656569785 UTC , thread_cap_info = ("ThreadId
E | | | | |            123", 2, False)}
E | | | | |            
| | F | | |            
| F   | | |            
| F   | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F   | | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F   | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F   | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| F   | | |            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| F   | | |            = 3 , total_length = 25} , self = 80 , parent = Nothing , duration = 1.239576469000
| F   | | |            , status = Fail , start = 2025-09-03 13:39:04.11867931 UTC , finish = 2025-09-03
| F   | | |            13:39:05.358255779 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
| F   | | |            
| |   S | |            
| |     F |            
| | F     |            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F     |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |            = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F     |            = 3 , total_length = 25} , self = 79 , parent = Nothing , duration = 0.798994604000
| | F     |            , status = Fail , start = 2025-09-03 13:39:04.443099155 UTC , finish =
| | F     |            2025-09-03 13:39:05.242093759 UTC , thread_cap_info = ("ThreadId 136",
| | F     |            0, False)}
| | F     |            
E | |     |            
F | |     |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |     |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |     |            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F | |     |            = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
F | |     |            = 86} , self = 77 , parent = Nothing , duration = 0.143591761000 , status
F | |     |            = Fail , start = 2025-09-03 13:39:04.669812429 UTC , finish = 2025-09-03
F | |     |            13:39:04.81340419 UTC , thread_cap_info = ("ThreadId 141", 0, False)}
F | |     |            
| | | F   |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F   |            = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F   |            = 86} , self = 78 , parent = Nothing , duration = 0.142577327000 , status
| | | F   |            = Fail , start = 2025-09-03 13:39:04.670861922 UTC , finish = 2025-09-03
| | | F   |            13:39:04.813439249 UTC , thread_cap_info = ("ThreadId 142", 2, False)}
| | | F   |            
F | | |   |            
  | | F   |            
E | |     |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | |     |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |     |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |     |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |     |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |     |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E | |     |            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
E | |     |            = 5 , total_length = 86} , self = 83 , parent = Nothing , duration = 0.747357529000
E | |     |            , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:04.81347718
E | |     |            UTC , finish = 2025-09-03 13:39:05.560834709 UTC , thread_cap_info = ("ThreadId
E | |     |            146", 2, False)}
E | |     |            
| | | S   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   |            = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | S   |            alphabet_size = 5 , total_length = 86} , self = 81 , parent = Nothing ,
| | | S   |            duration = 0.661876022000 , status = Success , start = 2025-09-03 13:39:04.818810708
| | | S   |            UTC , finish = 2025-09-03 13:39:05.48068673 UTC , thread_cap_info = ("ThreadId
| | | S   |            145", 0, False)}
| | | S   |            
| | F |   |            
| F   |   |            
|     S   |            
E         |            
F         |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F         |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F         |            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F         |            = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
F         |            = 108} , self = 88 , parent = Nothing , duration = 1.168691496000 , status
F         |            = Fail , start = 2025-09-03 13:39:05.561425657 UTC , finish = 2025-09-03
F         |            13:39:06.730117153 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
F         |            
| F       |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F       |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F       |            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F       |            = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| F       |            = 108} , self = 89 , parent = Nothing , duration = 1.206381135000 , status
| F       |            = Fail , start = 2025-09-03 13:39:05.571110062 UTC , finish = 2025-09-03
| F       |            13:39:06.777491197 UTC , thread_cap_info = ("ThreadId 155", 2, False)}
| F       |            
F |       |            
S |       |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |       |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |       |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |       |            = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
S |       |            alphabet_size = 6 , total_length = 108} , self = 90 , parent = Nothing
S |       |            , duration = 0.260453221000 , status = Success , start = 2025-09-03 13:39:06.730149856
S |       |            UTC , finish = 2025-09-03 13:39:06.990603077 UTC , thread_cap_info = ("ThreadId
S |       |            160", 2, False)}
S |       |            
| F       |            
| E       |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E       |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E       |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E       |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E       |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E       |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E       |            , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| E       |            = 6 , total_length = 108} , self = 92 , parent = Nothing , duration = 0.199081695000
| E       |            , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:06.79794896
| E       |            UTC , finish = 2025-09-03 13:39:06.997030655 UTC , thread_cap_info = ("ThreadId
| E       |            161", 2, False)}
| E       |            
S |       |            
  E       |            
          E            
