last 2362 length 12505
CNF 2362 vars 12505 clauses
last 8296 length 64748
CNF 8296 vars 64748 clauses
last 2734 length 12868
last 2083 length 9417
CNF 2734 vars 12868 clauses
CNF 2083 vars 9417 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1951, clauses: 7240
last 1951 length 7240
CNF 1951 vars 7240 clauses
last 3265 length 16387
CNF 3265 vars 16387 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2069, clauses: 8247
last 2069 length 8247
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1951, clauses: 7240, status: Unsatisfied, time: 0.09264995s
CNF 2069 vars 8247 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6493, clauses: 27293
last 6493 length 27293
CNF 6493 vars 27293 clauses
last 9694 length 109843
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2069, clauses: 8247, status: Unsatisfied, time: 0.149657531s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6449, clauses: 27097
last 6449 length 27097
CNF 6449 vars 27097 clauses
CNF 9694 vars 109843 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3875, clauses: 16671
last 3875 length 16671
CNF 3875 vars 16671 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3944, clauses: 17085
last 3944 length 17085
CNF 3944 vars 17085 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3875, clauses: 16671, status: Unsatisfied, time: 0.265858767s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6493, clauses: 27293, status: Unsatisfied, time: 0.49534948s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3260, clauses: 12726
last 3260 length 12726
CNF 3260 vars 12726 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3944, clauses: 17085, status: Unsatisfied, time: 0.359421634s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3445, clauses: 14480
last 3445 length 14480
CNF 3445 vars 14480 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6449, clauses: 27097, status: Unsatisfied, time: 0.720575653s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3260, clauses: 12726, status: Unsatisfied, time: 0.531931807s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3445, clauses: 14480, status: Unsatisfied, time: 0.567916709s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10649, clauses: 48860
last 10649 length 48860
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10737, clauses: 49648
last 10737 length 49648
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6097, clauses: 23575
CNF 10737 vars 49648 clauses
CNF 10649 vars 48860 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6418, clauses: 26327
last 6097 length 23575
last 7752 length 62779
last 8906 length 57415
last 6418 length 26327
CNF 6097 vars 23575 clauses
CNF 6418 vars 26327 clauses
CNF 7752 vars 62779 clauses
CNF 8906 vars 57415 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2771, clauses: 10341
last 2771 length 10341
CNF 2771 vars 10341 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2771, clauses: 10341, status: Satisfied, time: 0.401310524s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 24 strict rules and 4 weak rules on 6 letters       weights
SRS with 14 strict rules and 4 weak rules on 6 letters       EDG
SRS with 2 strict rules and 4 weak rules on 5 letters       Usable
SRS with 2 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b] -> [ a , a , b , a , b , a , a , b , a , b , a , b , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] ] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] ] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] ] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] ] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [a, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [a, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, a]#, 0/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  remove un-usable
    SRS
      [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}\Mirror(4,4)\Deepee(24/4,6)\Weight(14/4,6)\EDG(2/4,5)\Usable(2/2,4)\Matrix{\Arctic}{3}(0/2,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4639, clauses: 19189
last 4639 length 19189
CNF 4639 vars 19189 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.413295327000
  min duration 0.184321912000
  total durat. 3.239354315000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 83}
    , self = 70
    , parent = Nothing
    , duration = 2.413295327000
    , status = Fail
    , start = 2025-09-03 12:38:07.142353066 UTC
    , finish = 2025-09-03 12:38:09.555648393 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.076293951000
  min duration 3.076293951000
  total durat. 3.076293951000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 228}
    , self = 73
    , parent = Nothing
    , duration = 3.076293951000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:07.101595098 UTC
    , finish = 2025-09-03 12:38:10.177889049 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.405212713000
  min duration 0.127035910000
  total durat. 3.294415098000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 83}
    , self = 71
    , parent = Nothing
    , duration = 2.405212713000
    , status = Fail
    , start = 2025-09-03 12:38:07.170929241 UTC
    , finish = 2025-09-03 12:38:09.576141954 UTC
    , thread_cap_info = ("ThreadId 122", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.065259816000
  min duration 3.065259816000
  total durat. 3.065259816000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 228}
    , self = 72
    , parent = Nothing
    , duration = 3.065259816000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:07.109524637 UTC
    , finish = 2025-09-03 12:38:10.174784453 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.916122749000
  min duration 0.650493129000
  total durat. 1.566615878000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.726005561000
  min duration 0.668321231000
  total durat. 1.394326792000
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                = 100} , self = 43 , parent = Nothing , duration = 0.294088053000 , status
F                = Fail , start = 2025-09-03 12:38:06.394640824 UTC , finish = 2025-09-03
F                12:38:06.688728877 UTC , thread_cap_info = ("ThreadId 57", 2, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 100} , self = 50 , parent = Nothing , duration = 0.598344043000 , status
| F              = Fail , start = 2025-09-03 12:38:06.404742809 UTC , finish = 2025-09-03
| F              12:38:07.003086852 UTC , thread_cap_info = ("ThreadId 59", 2, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F            = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F            = 52} , self = 47 , parent = Nothing , duration = 0.347649023000 , status
| | F            = Fail , start = 2025-09-03 12:38:06.405267108 UTC , finish = 2025-09-03
| | F            12:38:06.752916131 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F          = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F          = 52} , self = 41 , parent = Nothing , duration = 0.127035910000 , status
| | | F          = Fail , start = 2025-09-03 12:38:06.428567284 UTC , finish = 2025-09-03
| | | F          12:38:06.555603194 UTC , thread_cap_info = ("ThreadId 70", 0, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | F        = 68} , self = 45 , parent = Nothing , duration = 0.184321912000 , status
| | | | F        = Fail , start = 2025-09-03 12:38:06.524939031 UTC , finish = 2025-09-03
| | | | F        12:38:06.709260943 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | | F        
| | | F |        
| | | F |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F |        = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F |        = 68} , self = 46 , parent = Nothing , duration = 0.163822432000 , status
| | | F |        = Fail , start = 2025-09-03 12:38:06.561555583 UTC , finish = 2025-09-03
| | | F |        12:38:06.725378015 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| | | F |        
| | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F      = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | F      = 3 , total_length = 52} , self = 48 , parent = Nothing , duration = 0.189734873000
| | | | | F      , status = Fail , start = 2025-09-03 12:38:06.664605354 UTC , finish =
| | | | | F      2025-09-03 12:38:06.854340227 UTC , thread_cap_info = ("ThreadId 85", 0,
| | | | | F      False)}
| | | | | F      
F | | | | |      
  | | | F |      
F | | |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |   |      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | |   |      = 3 , total_length = 68} , self = 49 , parent = Nothing , duration = 0.211809896000
F | | |   |      , status = Fail , start = 2025-09-03 12:38:06.709289718 UTC , finish =
F | | |   |      2025-09-03 12:38:06.921099614 UTC , thread_cap_info = ("ThreadId 92", 0,
F | | |   |      False)}
F | | |   |      
| | | F   |      
| | | F   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F   |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | F   |      = 3 , total_length = 68} , self = 65 , parent = Nothing , duration = 0.650493129000
| | | F   |      , status = Fail , start = 2025-09-03 12:38:06.746400703 UTC , finish =
| | | F   |      2025-09-03 12:38:07.396893832 UTC , thread_cap_info = ("ThreadId 94", 0,
| | | F   |      False)}
| | | F   |      
| | F |   |      
| | F |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | F |   |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | F |   |      = 3 , total_length = 52} , self = 67 , parent = Nothing , duration = 0.916122749000
| | F |   |      , status = Fail , start = 2025-09-03 12:38:06.769921266 UTC , finish =
| | F |   |      2025-09-03 12:38:07.686044015 UTC , thread_cap_info = ("ThreadId 96", 0,
| | F |   |      False)}
| | F |   |      
| | | |   F      
| | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | F        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | F        = 3 , total_length = 52} , self = 64 , parent = Nothing , duration = 0.401676221000
| | | | F        , status = Fail , start = 2025-09-03 12:38:06.881052792 UTC , finish =
| | | | F        2025-09-03 12:38:07.282729013 UTC , thread_cap_info = ("ThreadId 99", 0,
| | | | F        False)}
| | | | F        
F | | | |        
F | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F | | | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
F | | | |        = 3 , total_length = 68} , self = 66 , parent = Nothing , duration = 0.522734182000
F | | | |        , status = Fail , start = 2025-09-03 12:38:06.943299888 UTC , finish =
F | | | |        2025-09-03 12:38:07.46603407 UTC , thread_cap_info = ("ThreadId 103", 0,
F | | | |        False)}
F | | | |        
| F | | |        
| E | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| E | | |        = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E | | |        = 228} , self = 73 , parent = Nothing , duration = 3.076293951000 , status
| E | | |        = Except "<<timeout>>" , start = 2025-09-03 12:38:07.101595098 UTC , finish
| E | | |        = 2025-09-03 12:38:10.177889049 UTC , thread_cap_info = ("ThreadId 115",
| E | | |        3, False)}
| E | | |        
| | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | E      = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | E      = 228} , self = 72 , parent = Nothing , duration = 3.065259816000 , status
| | | | | E      = Except "<<timeout>>" , start = 2025-09-03 12:38:07.109524637 UTC , finish
| | | | | E      = 2025-09-03 12:38:10.174784453 UTC , thread_cap_info = ("ThreadId 116",
| | | | | E      3, False)}
| | | | | E      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F    = 83} , self = 70 , parent = Nothing , duration = 2.413295327000 , status
| | | | | | F    = Fail , start = 2025-09-03 12:38:07.142353066 UTC , finish = 2025-09-03
| | | | | | F    12:38:09.555648393 UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | F  = 83} , self = 71 , parent = Nothing , duration = 2.405212713000 , status
| | | | | | | F  = Fail , start = 2025-09-03 12:38:07.170929241 UTC , finish = 2025-09-03
| | | | | | | F  12:38:09.576141954 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
| | | | | | | F  
| | | | F | | |  
| | | | F | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | F | | |  = 3 , total_length = 52} , self = 68 , parent = Nothing , duration = 0.668321231000
| | | | F | | |  , status = Fail , start = 2025-09-03 12:38:07.296589743 UTC , finish =
| | | | F | | |  2025-09-03 12:38:07.964910974 UTC , thread_cap_info = ("ThreadId 123",
| | | | F | | |  0, False)}
| | | | F | | |  
| | | F | | | |  
| | | F | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | |  = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | F | | | |  = 3 , total_length = 68} , self = 69 , parent = Nothing , duration = 0.726005561000
| | | F | | | |  , status = Fail , start = 2025-09-03 12:38:07.422327818 UTC , finish =
| | | F | | | |  2025-09-03 12:38:08.148333379 UTC , thread_cap_info = ("ThreadId 124",
| | | F | | | |  0, False)}
| | | F | | | |  
F | | | | | | |  
  | F | | | | |  
  |   | F | | |  
  |   F   | | |  
  |       | F |  
  |       |   F  
S |       |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |       |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |       |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |       |      = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
S |       |      = 4 , total_length = 83} , self = 74 , parent = Nothing , duration = 0.630645770000
S |       |      , status = Success , start = 2025-09-03 12:38:09.582161984 UTC , finish
S |       |      = 2025-09-03 12:38:10.212807754 UTC , thread_cap_info = ("ThreadId 137",
S |       |      2, False)}
S |       |      
| | E     |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E     |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E     |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E     |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E     |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E     |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | E     |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | E     |      = 4 , total_length = 83} , self = 76 , parent = Nothing , duration = 0.696700430000
| | E     |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:38:09.606686999
| | E     |      UTC , finish = 2025-09-03 12:38:10.303387429 UTC , thread_cap_info = ("ThreadId
| | E     |      138", 2, False)}
| | E     |      
| | |     E      
| E |            
S   |            
    E            
