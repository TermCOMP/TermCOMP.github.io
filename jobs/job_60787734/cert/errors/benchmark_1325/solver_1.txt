last 3796 length 16096
CNF 3796 vars 16096 clauses
last 3631 length 15635
CNF 3631 vars 15635 clauses
last 867 length 3505
CNF 867 vars 3505 clauses
last 779 length 3252
CNF 779 vars 3252 clauses
last 666 length 2628
last 8983 length 39670
CNF 666 vars 2628 clauses
last 601 length 2358
CNF 8983 vars 39670 clauses
CNF 601 vars 2358 clauses
last 12882 length 54927
CNF 12882 vars 54927 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2688, clauses: 9872
last 2688 length 9872
CNF 2688 vars 9872 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2489, clauses: 8988
last 2489 length 8988
CNF 2489 vars 8988 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2688, clauses: 9872, status: Unsatisfied, time: 0.11654985s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2489, clauses: 8988, status: Unsatisfied, time: 0.117062335s
last 12358 length 57329
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4873, clauses: 19511
last 4873 length 19511
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7721, clauses: 31999
last 7721 length 31999
CNF 12358 vars 57329 clauses
CNF 4873 vars 19511 clauses
CNF 7721 vars 31999 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7385, clauses: 30579
last 7385 length 30579
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4634, clauses: 18507
last 4634 length 18507
CNF 7385 vars 30579 clauses
CNF 4634 vars 18507 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7385, clauses: 30579, status: Unsatisfied, time: 0.453752534s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4873, clauses: 19511, status: Unsatisfied, time: 0.644675432s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4634, clauses: 18507, status: Unsatisfied, time: 0.498835883s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4062, clauses: 15492
last 4062 length 15492
CNF 4062 vars 15492 clauses
last 17444 length 75114
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4379, clauses: 17066
last 4379 length 17066
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4062, clauses: 15492, status: Unsatisfied, time: 0.237469362s
CNF 4379 vars 17066 clauses
CNF 17444 vars 75114 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4379, clauses: 17066, status: Unsatisfied, time: 0.194420109s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7721, clauses: 31999, status: Unsatisfied, time: 1.39878856s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17775, clauses: 70823
last 17775 length 70823
CNF 17775 vars 70823 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7571, clauses: 28581
last 7571 length 28581
CNF 7571 vars 28581 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12795, clauses: 52996
last 12795 length 52996
CNF 12795 vars 52996 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8167, clauses: 31378
last 8167 length 31378
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7571, clauses: 28581, status: Unsatisfied, time: 0.65253583s
CNF 8167 vars 31378 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13234, clauses: 54939
last 13234 length 54939
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22432, clauses: 90853
last 22432 length 90853
CNF 13234 vars 54939 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8167, clauses: 31378, status: Unsatisfied, time: 0.671468025s
CNF 22432 vars 90853 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15619, clauses: 72635
last 15619 length 72635
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 48151, clauses: 201681
last 48151 length 201681
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16011, clauses: 74455
last 16011 length 74455
CNF 15619 vars 72635 clauses
CNF 16011 vars 74455 clauses
CNF 48151 vars 201681 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16011, clauses: 74455, status: Satisfied, time: 1.110926046s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 5 strict rules and 5 weak rules on 5 letters       EDG
SRS with 5 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Usable
SRS with 1 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [b, b] -> [] {- Input 1 -}
  [c, c, b] -> [a, a, a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [b, b] -> [] {- Mirror (Input 1) -}
  [b, c, c] -> [c, a, a, a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [a, b, b] -> [a] {- Mirror (Input 1) -}
  [b, b, b] -> [b] {- Mirror (Input 1) -}
  [c, b, b] -> [c] {- Mirror (Input 1) -}
  [b, c, c] -> [c, a, a, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [b, b, a] -> [a] {- Input 1 -}
  [b, b, b] -> [b] {- Input 1 -}
  [b, b, c] -> [c] {- Input 1 -}
  [c, c, b] -> [a, a, a, c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
  [a#] |-> [b#, c] {- DP (Top 0) (Input 0) -}
  [a#] |-> [c#] {- DP (Top 1) (Input 0) -}
  [c#, c, b] |-> [a#, a, a, c] {- DP (Top 0) (Input 2) -}
  [c#, c, b] |-> [a#, a, c] {- DP (Top 1) (Input 2) -}
  [c#, c, b] |-> [a#, c] {- DP (Top 2) (Input 2) -}
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
  [a#] |-> [c#] {- DP (Top 1) (Input 0) -}
  [c#, c, b] |-> [a#, a, a, c] {- DP (Top 0) (Input 2) -}
  [c#, c, b] |-> [a#, a, c] {- DP (Top 1) (Input 2) -}
  [c#, c, b] |-> [a#, c] {- DP (Top 2) (Input 2) -}
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [c#] {- DP (Top 1) (Input 0) -}
  [c#, c, b] |-> [a#, a, a, c] {- DP (Top 0) (Input 2) -}
  [c#, c, b] |-> [a#, a, c] {- DP (Top 1) (Input 2) -}
  [c#, c, b] |-> [a#, c] {- DP (Top 2) (Input 2) -}
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A -  -  -  0A \
        | 0A -  -  -  0A |
        | 2A 2A 0A 0A 2A |
        | 1A 1A 0A 0A 2A |
        \ -  -  -  -  0A / )
  ( b
  , Wk  / -  -  0A -  0A \
        | -  -  0A -  0A |
        | 0A 0A 2A 2A 2A |
        | 0A 0A 0A -  2A |
        \ -  -  -  -  0A / )
  ( c
  , Wk  / -  -  0A -  0A \
        | -  -  0A 0A 0A |
        | 0A -  -  -  -  |
        | 0A 0A -  -  -  |
        \ -  -  -  -  0A / )
  ( a#
  , Wk  / 1A 0A 0A 0A 0A \
        | -  -  -  -  -  |
        | -  -  -  -  -  |
        | -  -  -  -  -  |
        \ -  -  -  -  0A / )
  ( c#
  , Wk  / 1A 0A 0A 0A 0A \
        | -  -  -  -  -  |
        | -  -  -  -  -  |
        | -  -  -  -  -  |
        \ -  -  -  -  0A / )
   property Termination
has value Just True
for SRS
  [a#] |-> [c#] {- DP (Top 1) (Input 0) -}
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
reason
  remove un-usable
    SRS
      [a] ->= [b, c] {- DP Nontop (Input 0) -}
      [b, b, a] ->= [a] {- DP Nontop (Input 1) -}
      [b, b, b] ->= [b] {- DP Nontop (Input 1) -}
      [b, b, c] ->= [c] {- DP Nontop (Input 1) -}
      [c, c, b] ->= [a, a, a, c] {- DP Nontop (Input 2) -}
   property Termination
has value Just True
for SRS
  [c#, c, b] |-> [c#] {- DP (Top 3) (Input 2) -}
reason
  (b, 1/1)
  (c, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(5/5,5)\Matrix{\Arctic}{5}(2/5,5)\Weight\EDG(1/5,4)\Usable(1,3)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.256538853000
  min duration 0.047180310000
  total durat. 2.950208648000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 594}
    , self = 73
    , parent = Nothing
    , duration = 2.256538853000
    , status = Fail
    , start = 2025-09-03 11:34:12.099253652 UTC
    , finish = 2025-09-03 11:34:14.355792505 UTC
    , thread_cap_info = ("ThreadId 80", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.896754656000
  min duration 0.084130187000
  total durat. 1.568186532000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.894126190000
  min duration 0.875218757000
  total durat. 2.769344947000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 46}
    , self = 72
    , parent = Nothing
    , duration = 1.894126190000
    , status = Fail
    , start = 2025-09-03 11:34:12.404691095 UTC
    , finish = 2025-09-03 11:34:14.298817285 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.002078878000
  min duration 3.002078878000
  total durat. 3.002078878000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 46}
    , self = 76
    , parent = Nothing
    , duration = 3.002078878000
    , status = Success
    , start = 2025-09-03 11:34:15.979365116 UTC
    , finish = 2025-09-03 11:34:18.981443994 UTC
    , thread_cap_info = ("ThreadId 146", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.847719038000
  min duration 0.793077147000
  total durat. 1.640796185000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.764488440000
  min duration 4.764488440000
  total durat. 4.764488440000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 46}
    , self = 78
    , parent = Nothing
    , duration = 4.764488440000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:34:14.334726319 UTC
    , finish = 2025-09-03 11:34:19.099214759 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.644598113000
  min duration 0.600987059000
  total durat. 1.245585172000
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.471165819000
  min duration 1.228523274000
  total durat. 2.699689093000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 74
    , parent = Nothing
    , duration = 1.228523274000
    , status = Fail
    , start = 2025-09-03 11:34:14.114320828 UTC
    , finish = 2025-09-03 11:34:15.342844102 UTC
    , thread_cap_info = ("ThreadId 135", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 46}
    , self = 75
    , parent = Nothing
    , duration = 1.471165819000
    , status = Fail
    , start = 2025-09-03 11:34:14.435168514 UTC
    , finish = 2025-09-03 11:34:15.906334333 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
**************************************************
F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F              = 12} , self = 53 , parent = Nothing , duration = 0.247523885000 , status
F              = Fail , start = 2025-09-03 11:34:12.040242846 UTC , finish = 2025-09-03
F              11:34:12.287766731 UTC , thread_cap_info = ("ThreadId 44", 0, False)}
F              
| F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F            = 162} , self = 43 , parent = Nothing , duration = 0.107756506000 , status
| F            = Fail , start = 2025-09-03 11:34:12.046733542 UTC , finish = 2025-09-03
| F            11:34:12.154490048 UTC , thread_cap_info = ("ThreadId 66", 2, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F          = 162} , self = 42 , parent = Nothing , duration = 0.107678508000 , status
| | F          = Fail , start = 2025-09-03 11:34:12.046736044 UTC , finish = 2025-09-03
| | F          11:34:12.154414552 UTC , thread_cap_info = ("ThreadId 68", 2, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | F        = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | F        total_length = 451} , self = 63 , parent = Nothing , duration = 0.473954215000
| | | F        , status = Fail , start = 2025-09-03 11:34:12.061885467 UTC , finish =
| | | F        2025-09-03 11:34:12.535839682 UTC , thread_cap_info = ("ThreadId 75", 1,
| | | F        False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | | F      = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | F      total_length = 451} , self = 61 , parent = Nothing , duration = 0.380802549000
| | | | F      , status = Fail , start = 2025-09-03 11:34:12.074309643 UTC , finish =
| | | | F      2025-09-03 11:34:12.455112192 UTC , thread_cap_info = ("ThreadId 76", 3,
| | | | F      False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | F    = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | F    total_length = 594} , self = 73 , parent = Nothing , duration = 2.256538853000
| | | | | F    , status = Fail , start = 2025-09-03 11:34:12.099253652 UTC , finish =
| | | | | F    2025-09-03 11:34:14.355792505 UTC , thread_cap_info = ("ThreadId 80", 1,
| | | | | F    False)}
| | | | | F    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | F  = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | F  total_length = 594} , self = 66 , parent = Nothing , duration = 0.896754656000
| | | | | | F  , status = Fail , start = 2025-09-03 11:34:12.119698385 UTC , finish =
| | | | | | F  2025-09-03 11:34:13.016453041 UTC , thread_cap_info = ("ThreadId 81", 1,
| | | | | | F  False)}
| | | | | | F  
| | F | | | |  
| F   | | | |  
F     | | | |  
F     | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     | | | |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
F     | | | |  alphabet_size = 5 , total_length = 46} , self = 64 , parent = Nothing ,
F     | | | |  duration = 0.228913312000 , status = Fail , start = 2025-09-03 11:34:12.370378342
F     | | | |  UTC , finish = 2025-09-03 11:34:12.599291654 UTC , thread_cap_info = ("ThreadId
F     | | | |  108", 0, False)}
F     | | | |  
| F   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| F   | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| F   | | | |  = 5 , total_length = 46} , self = 72 , parent = Nothing , duration = 1.894126190000
| F   | | | |  , status = Fail , start = 2025-09-03 11:34:12.404691095 UTC , finish =
| F   | | | |  2025-09-03 11:34:14.298817285 UTC , thread_cap_info = ("ThreadId 111",
| F   | | | |  0, False)}
| F   | | | |  
| |   | F | |  
| | F |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | F |   | |  = 5 , total_length = 39} , self = 65 , parent = Nothing , duration = 0.163569153000
| | F |   | |  , status = Fail , start = 2025-09-03 11:34:12.494312706 UTC , finish =
| | F |   | |  2025-09-03 11:34:12.657881859 UTC , thread_cap_info = ("ThreadId 115",
| | F |   | |  0, False)}
| | F |   | |  
| | | F   | |  
| | | F   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | F   | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F   | |  = 5 , total_length = 39} , self = 67 , parent = Nothing , duration = 0.875218757000
| | | F   | |  , status = Fail , start = 2025-09-03 11:34:12.539403091 UTC , finish =
| | | F   | |  2025-09-03 11:34:13.414621848 UTC , thread_cap_info = ("ThreadId 118",
| | | F   | |  0, False)}
| | | F   | |  
F | | |   | |  
  | F |   | |  
F |   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F |   |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
F |   |   | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
F |   |   | |  = 5 , total_length = 46} , self = 68 , parent = Nothing , duration = 0.847719038000
F |   |   | |  , status = Fail , start = 2025-09-03 11:34:12.694323342 UTC , finish =
F |   |   | |  2025-09-03 11:34:13.54204238 UTC , thread_cap_info = ("ThreadId 121", 0,
F |   |   | |  False)}
F |   |   | |  
| | F |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | F |   | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | F |   | |  = 5 , total_length = 39} , self = 69 , parent = Nothing , duration = 0.793077147000
| | F |   | |  , status = Fail , start = 2025-09-03 11:34:12.794534943 UTC , finish =
| | F |   | |  2025-09-03 11:34:13.58761209 UTC , thread_cap_info = ("ThreadId 122", 0,
| | F |   | |  False)}
| | F |   | |  
| | | |   | F  
| | | F   |    
| | | F   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   |    = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F   |    = 5 , total_length = 39} , self = 70 , parent = Nothing , duration = 0.600987059000
| | | F   |    , status = Fail , start = 2025-09-03 11:34:13.445284515 UTC , finish =
| | | F   |    2025-09-03 11:34:14.046271574 UTC , thread_cap_info = ("ThreadId 129",
| | | F   |    0, False)}
| | | F   |    
F | | |   |    
  | F |   |    
F |   |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F |   |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   |   |    = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
F |   |   |    alphabet_size = 5 , total_length = 46} , self = 71 , parent = Nothing ,
F |   |   |    duration = 0.644598113000 , status = Fail , start = 2025-09-03 11:34:13.594484924
F |   |   |    UTC , finish = 2025-09-03 11:34:14.239083037 UTC , thread_cap_info = ("ThreadId
F |   |   |    130", 0, False)}
F |   |   |    
| |   F   |    
| | F     |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |    = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | F     |    = 5 , total_length = 39} , self = 74 , parent = Nothing , duration = 1.228523274000
| | F     |    , status = Fail , start = 2025-09-03 11:34:14.114320828 UTC , finish =
| | F     |    2025-09-03 11:34:15.342844102 UTC , thread_cap_info = ("ThreadId 135",
| | F     |    0, False)}
| | F     |    
F | |     |    
  F |     |    
E   |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   |     |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   |     |    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E   |     |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
E   |     |    = 5 , total_length = 46} , self = 78 , parent = Nothing , duration = 4.764488440000
E   |     |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:34:14.334726319
E   |     |    UTC , finish = 2025-09-03 11:34:19.099214759 UTC , thread_cap_info = ("ThreadId
E   |     |    136", 0, False)}
E   |     |    
|   |     F    
| F |          Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |          = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| F |          alphabet_size = 5 , total_length = 46} , self = 75 , parent = Nothing ,
| F |          duration = 1.471165819000 , status = Fail , start = 2025-09-03 11:34:14.435168514
| F |          UTC , finish = 2025-09-03 11:34:15.906334333 UTC , thread_cap_info = ("ThreadId
| F |          137", 0, False)}
| F |          
| | F          
| F            
| S            Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| S            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S            , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| S            , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| S            = 5 , total_length = 46} , self = 76 , parent = Nothing , duration = 3.002078878000
| S            , status = Success , start = 2025-09-03 11:34:15.979365116 UTC , finish
| S            = 2025-09-03 11:34:18.981443994 UTC , thread_cap_info = ("ThreadId 146",
| S            0, False)}
| S            
| S            
E              
