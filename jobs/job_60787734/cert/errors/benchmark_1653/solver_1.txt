last 2582 length 11806
CNF 2582 vars 11806 clauses
last 2441 length 11604
CNF 2441 vars 11604 clauses
last 2016 length 9140
last 8550 length 67386
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2069, clauses: 8238
last 2069 length 8238
CNF 2016 vars 9140 clauses
last 2173 length 10704
CNF 8550 vars 67386 clauses
CNF 2069 vars 8238 clauses
CNF 2173 vars 10704 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1849, clauses: 7150
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2069, clauses: 8238, status: Unsatisfied, time: 0.291036658s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6495, clauses: 27299
last 1849 length 7150
last 11186 length 122837
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6156, clauses: 25850
last 4642 length 23670
last 3617 length 19426
last 6495 length 27299
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3950, clauses: 17107
CNF 1849 vars 7150 clauses
last 6156 length 25850
CNF 4642 vars 23670 clauses
CNF 6495 vars 27299 clauses
CNF 11186 vars 122837 clauses
CNF 3617 vars 19426 clauses
last 3950 length 17107
last 15182 length 85736
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1849, clauses: 7150, status: Unsatisfied, time: 0.920544103s
CNF 6156 vars 25850 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2768, clauses: 10332
CNF 3950 vars 17107 clauses
CNF 15182 vars 85736 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6495, clauses: 27299, status: Unsatisfied, time: 1.252218804s
last 2768 length 10332
last 12406 length 80821
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3703, clauses: 15956
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10074, clauses: 42415
CNF 2768 vars 10332 clauses
last 3703 length 15956
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3950, clauses: 17107, status: Unsatisfied, time: 1.061630204s
last 10074 length 42415
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6156, clauses: 25850, status: Unsatisfied, time: 1.403486263s
CNF 12406 vars 80821 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4522, clauses: 19165
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3445, clauses: 14464
CNF 3703 vars 15956 clauses
CNF 10074 vars 42415 clauses
last 4522 length 19165
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2768, clauses: 10332, status: Satisfied, time: 0.740627371s
last 3445 length 14464
CNF 4522 vars 19165 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3092, clauses: 12574
CNF 3445 vars 14464 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3703, clauses: 15956, status: Unsatisfied, time: 0.64014001s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4522, clauses: 19165, status: Satisfied, time: 0.348185345s
last 3092 length 12574
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14904, clauses: 62635
last 14904 length 62635
Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 20 strict rules and 4 weak rules on 6 letters       weights
SRS with 12 strict rules and 4 weak rules on 6 letters       EDG
SRS with 2 strict rules and 4 weak rules on 5 letters       Usable
SRS with 2 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b] -> [ a , a , b , a , a , b , a , b , a , b , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] ] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] ] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] ] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] ] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [a, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [a, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [b, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [b, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, a]#, 0/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, b]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  remove un-usable
    SRS
      [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [ [b, b] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] |-> [ [b, a]# , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]#
  , Wk  / 12A 13A 15A - \
        | 12A 13A 15A - |
        | 12A 13A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}\Mirror(4,4)\Deepee(20/4,6)\Weight(12/4,6)\EDG(2/4,5)\Usable(2/2,4)\Matrix{\Arctic}{3}(0/2,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10746, clauses: 49681
CNF 14904 vars 62635 clauses
last 10746 length 49681
CNF 3092 vars 12574 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 10746 vars 49681 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.475238123000
  min duration 0.203096978000
  total durat. 5.209012372000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 77}
    , self = 62
    , parent = Nothing
    , duration = 1.461376297000
    , status = Fail
    , start = 2025-09-03 12:37:48.006191057 UTC
    , finish = 2025-09-03 12:37:49.467567354 UTC
    , thread_cap_info = ("ThreadId 104", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 220}
    , self = 66
    , parent = Nothing
    , duration = 2.475238123000
    , status = Fail
    , start = 2025-09-03 12:37:47.768070918 UTC
    , finish = 2025-09-03 12:37:50.243309041 UTC
    , thread_cap_info = ("ThreadId 94", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.985664161000
  min duration 0.202850757000
  total durat. 7.536403894000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 77}
    , self = 63
    , parent = Nothing
    , duration = 1.586950348000
    , status = Fail
    , start = 2025-09-03 12:37:48.02619081 UTC
    , finish = 2025-09-03 12:37:49.613141158 UTC
    , thread_cap_info = ("ThreadId 105", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 92}
    , self = 64
    , parent = Nothing
    , duration = 2.208933146000
    , status = Fail
    , start = 2025-09-03 12:37:47.503760413 UTC
    , finish = 2025-09-03 12:37:49.712693559 UTC
    , thread_cap_info = ("ThreadId 55", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 220}
    , self = 70
    , parent = Nothing
    , duration = 2.985664161000
    , status = Fail
    , start = 2025-09-03 12:37:47.786227626 UTC
    , finish = 2025-09-03 12:37:50.771891787 UTC
    , thread_cap_info = ("ThreadId 95", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.232181239000
  min duration 2.189167401000
  total durat. 4.421348640000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 66}
    , self = 67
    , parent = Nothing
    , duration = 2.189167401000
    , status = Fail
    , start = 2025-09-03 12:37:48.059602372 UTC
    , finish = 2025-09-03 12:37:50.248769773 UTC
    , thread_cap_info = ("ThreadId 106", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 48}
    , self = 69
    , parent = Nothing
    , duration = 2.232181239000
    , status = Fail
    , start = 2025-09-03 12:37:48.426922392 UTC
    , finish = 2025-09-03 12:37:50.659103631 UTC
    , thread_cap_info = ("ThreadId 112", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.363408148000
  min duration 1.363408148000
  total durat. 1.363408148000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 77}
    , self = 73
    , parent = Nothing
    , duration = 1.363408148000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:49.626625747 UTC
    , finish = 2025-09-03 12:37:50.990033895 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.980623372000
  min duration 1.980623372000
  total durat. 1.980623372000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 66}
    , self = 68
    , parent = Nothing
    , duration = 1.980623372000
    , status = Fail
    , start = 2025-09-03 12:37:48.666177971 UTC
    , finish = 2025-09-03 12:37:50.646801343 UTC
    , thread_cap_info = ("ThreadId 113", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.342817079000
  min duration 1.342817079000
  total durat. 1.342817079000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 77}
    , self = 71
    , parent = Nothing
    , duration = 1.342817079000
    , status = Success
    , start = 2025-09-03 12:37:49.486400506 UTC
    , finish = 2025-09-03 12:37:50.829217585 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.560331163000
  min duration 0.642057895000
  total durat. 2.202389058000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 48}
    , self = 65
    , parent = Nothing
    , duration = 1.560331163000
    , status = Fail
    , start = 2025-09-03 12:37:48.226184067 UTC
    , finish = 2025-09-03 12:37:49.78651523 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F                    = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                    = 92} , self = 59 , parent = Nothing , duration = 0.744597784000 , status
F                    = Fail , start = 2025-09-03 12:37:47.503757329 UTC , finish = 2025-09-03
F                    12:37:48.248355113 UTC , thread_cap_info = ("ThreadId 53", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                  = 92} , self = 64 , parent = Nothing , duration = 2.208933146000 , status
| F                  = Fail , start = 2025-09-03 12:37:47.503760413 UTC , finish = 2025-09-03
| F                  12:37:49.712693559 UTC , thread_cap_info = ("ThreadId 55", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F                = 66} , self = 55 , parent = Nothing , duration = 0.203096978000 , status
| | F                = Fail , start = 2025-09-03 12:37:47.667014658 UTC , finish = 2025-09-03
| | F                12:37:47.870111636 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F              = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F              = 66} , self = 56 , parent = Nothing , duration = 0.202850757000 , status
| | | F              = Fail , start = 2025-09-03 12:37:47.726202476 UTC , finish = 2025-09-03
| | | F              12:37:47.929053233 UTC , thread_cap_info = ("ThreadId 91", 0, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F            = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | F            = 220} , self = 66 , parent = Nothing , duration = 2.475238123000 , status
| | | | F            = Fail , start = 2025-09-03 12:37:47.768070918 UTC , finish = 2025-09-03
| | | | F            12:37:50.243309041 UTC , thread_cap_info = ("ThreadId 94", 2, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F          = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | F          = 220} , self = 70 , parent = Nothing , duration = 2.985664161000 , status
| | | | | F          = Fail , start = 2025-09-03 12:37:47.786227626 UTC , finish = 2025-09-03
| | | | | F          12:37:50.771891787 UTC , thread_cap_info = ("ThreadId 95", 2, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | F        = 48} , self = 58 , parent = Nothing , duration = 0.324703190000 , status
| | | | | | F        = Fail , start = 2025-09-03 12:37:47.844857237 UTC , finish = 2025-09-03
| | | | | | F        12:37:48.169560427 UTC , thread_cap_info = ("ThreadId 99", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | F      = 48} , self = 60 , parent = Nothing , duration = 0.552005482000 , status
| | | | | | | F      = Fail , start = 2025-09-03 12:37:47.845905028 UTC , finish = 2025-09-03
| | | | | | | F      12:37:48.39791051 UTC , thread_cap_info = ("ThreadId 100", 0, False)}
| | | | | | | F      
| | F | | | | |      
| |   F | | | |      
| | F   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | | | |      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | F   | | | |      = 3 , total_length = 66} , self = 61 , parent = Nothing , duration = 0.642057895000
| | F   | | | |      , status = Fail , start = 2025-09-03 12:37:47.984110521 UTC , finish =
| | F   | | | |      2025-09-03 12:37:48.626168416 UTC , thread_cap_info = ("ThreadId 103",
| | F   | | | |      0, False)}
| | F   | | | |      
| | | F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F | | | |      = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F | | | |      = 77} , self = 62 , parent = Nothing , duration = 1.461376297000 , status
| | | F | | | |      = Fail , start = 2025-09-03 12:37:48.006191057 UTC , finish = 2025-09-03
| | | F | | | |      12:37:49.467567354 UTC , thread_cap_info = ("ThreadId 104", 2, False)}
| | | F | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | F    = 77} , self = 63 , parent = Nothing , duration = 1.586950348000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 12:37:48.02619081 UTC , finish = 2025-09-03
| | | | | | | | F    12:37:49.613141158 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | | | | | F  = 3 , total_length = 66} , self = 67 , parent = Nothing , duration = 2.189167401000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 12:37:48.059602372 UTC , finish =
| | | | | | | | | F  2025-09-03 12:37:50.248769773 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | | F  0, False)}
| | | | | | | | | F  
| | | | | | F | | |  
| | | | | | F | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F | | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | F | | |  = 3 , total_length = 48} , self = 65 , parent = Nothing , duration = 1.560331163000
| | | | | | F | | |  , status = Fail , start = 2025-09-03 12:37:48.226184067 UTC , finish =
| | | | | | F | | |  2025-09-03 12:37:49.78651523 UTC , thread_cap_info = ("ThreadId 111", 0,
| | | | | | F | | |  False)}
| | | | | | F | | |  
F | | | | | | | | |  
  | | | | | | F | |  
F | | | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | | | | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F | | | | | |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
F | | | | | |   | |  = 3 , total_length = 48} , self = 69 , parent = Nothing , duration = 2.232181239000
F | | | | | |   | |  , status = Fail , start = 2025-09-03 12:37:48.426922392 UTC , finish =
F | | | | | |   | |  2025-09-03 12:37:50.659103631 UTC , thread_cap_info = ("ThreadId 112",
F | | | | | |   | |  0, False)}
F | | | | | |   | |  
| | F | | | |   | |  
| | F | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | | |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | F | | | |   | |  = 3 , total_length = 66} , self = 68 , parent = Nothing , duration = 1.980623372000
| | F | | | |   | |  , status = Fail , start = 2025-09-03 12:37:48.666177971 UTC , finish =
| | F | | | |   | |  2025-09-03 12:37:50.646801343 UTC , thread_cap_info = ("ThreadId 113",
| | F | | | |   | |  0, False)}
| | F | | | |   | |  
| | | F | | |   | |  
| | | S | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | |   | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | S | | |   | |  = 4 , total_length = 77} , self = 71 , parent = Nothing , duration = 1.342817079000
| | | S | | |   | |  , status = Success , start = 2025-09-03 12:37:49.486400506 UTC , finish
| | | S | | |   | |  = 2025-09-03 12:37:50.829217585 UTC , thread_cap_info = ("ThreadId 120",
| | | S | | |   | |  2, False)}
| | | S | | |   | |  
| | | | | | |   F |  
| | | | | | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | E   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | E   |  = 4 , total_length = 77} , self = 73 , parent = Nothing , duration = 1.363408148000
| | | | | | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:37:49.626625747
| | | | | | | E   |  UTC , finish = 2025-09-03 12:37:50.990033895 UTC , thread_cap_info = ("ThreadId
| | | | | | | E   |  121", 2, False)}
| | | | | | | E   |  
| F | | | | | |   |  
|   | | | | F |   |  
|   | | F |   |   |  
|   | |   |   |   F  
|   F |   |   |      
F     |   |   |      
      |   F   |      
      S       |      
              E      
