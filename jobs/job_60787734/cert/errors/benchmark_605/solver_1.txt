last 2604 length 12019
CNF 2604 vars 12019 clauses
last 1343 length 7075
last 1926 length 10668
last 2065 length 9891
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2097, clauses: 8153
CNF 1343 vars 7075 clauses
CNF 1926 vars 10668 clauses
CNF 2065 vars 9891 clauses
last 2097 length 8153
last 9052 length 118114
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6309, clauses: 26290
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2064, clauses: 7889
CNF 2097 vars 8153 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6596, clauses: 27513
CNF 9052 vars 118114 clauses
last 6309 length 26290
last 11882 length 73038
last 2064 length 7889
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2097, clauses: 8153, status: Unsatisfied, time: 0.879670674s
last 6596 length 27513
CNF 6309 vars 26290 clauses
CNF 2064 vars 7889 clauses
last 26782 length 280875
CNF 11882 vars 73038 clauses
CNF 6596 vars 27513 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3863, clauses: 16375
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6309, clauses: 26290, status: Satisfied, time: 0.836475263s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2064, clauses: 7889, status: Satisfied, time: 0.861101367s
last 22472 length 218965
CNF 26782 vars 280875 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6596, clauses: 27513, status: Satisfied, time: 1.100970642s
last 22890 length 123572
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7692, clauses: 32348
last 7692 length 32348
CNF 7692 vars 32348 clauses
**************************************************
summary
**************************************************
SRS with 2 rules on 3 letters       DP
SRS with 3 strict rules and 2 weak rules on 4 letters       EDG
SRS with 3 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- Input 0 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 1 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0#, 1, 2, 1] |-> [0#, 1, 2] {- Many [ DP (Top 10) (Input 1) , DP (Top 7) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2] {- Many [ DP (Top 7) (Input 1) , DP (Top 4) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2, 0, 1, 2] {- DP (Top 4) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [0#, 1, 2, 1] |-> [0#, 1, 2] {- Many [ DP (Top 10) (Input 1) , DP (Top 7) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2] {- Many [ DP (Top 7) (Input 1) , DP (Top 4) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2, 0, 1, 2] {- DP (Top 4) (Input 1) -}
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
reason
  ( 1
  , Wk  / 0A -  0A \
        | -  1A 2A |
        \ -  -  0A / )
  ( 2
  , Wk  / - -1A 0A \
        | - -2A -  |
        \ - -   0A / )
  ( 0
  , Wk  / 1A -   1A \
        | 1A -2A -  |
        \ -  -   0A / )
  ( 0#
  , Wk  / 0A -2A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
reason
  EDG

**************************************************
skeleton: (2,3)\Deepee\EDG(3/2,4)\Matrix{\ArcticBZ}{3}(0/2,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.504540852000
  min duration 0.581590319000
  total durat. 5.471550681000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 210}
    , self = 61
    , parent = Nothing
    , duration = 1.801155509000
    , status = Fail
    , start = 2025-09-03 12:19:17.054832364 UTC
    , finish = 2025-09-03 12:19:18.855987873 UTC
    , thread_cap_info = ("ThreadId 72", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 25
      , num_strict_rules = 13
      , num_top_rules = 13
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 360}
    , self = 63
    , parent = Nothing
    , duration = 2.504540852000
    , status = Fail
    , start = 2025-09-03 12:19:17.234174984 UTC
    , finish = 2025-09-03 12:19:19.738715836 UTC
    , thread_cap_info = ("ThreadId 98", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.061823303000
  min duration 2.061823303000
  total durat. 2.061823303000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 61}
    , self = 64
    , parent = Nothing
    , duration = 2.061823303000
    , status = Success
    , start = 2025-09-03 12:19:17.794749204 UTC
    , finish = 2025-09-03 12:19:19.856572507 UTC
    , thread_cap_info = ("ThreadId 108", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.946689504000
  min duration 1.946689504000
  total durat. 1.946689504000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 51}
    , self = 70
    , parent = Nothing
    , duration = 1.946689504000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:19:18.014181078 UTC
    , finish = 2025-09-03 12:19:19.960870582 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.920481871000
  min duration 1.920481871000
  total durat. 1.920481871000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 51}
    , self = 66
    , parent = Nothing
    , duration = 1.920481871000
    , status = Success
    , start = 2025-09-03 12:19:17.974344699 UTC
    , finish = 2025-09-03 12:19:19.89482657 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.459614478000
  min duration 1.459614478000
  total durat. 1.459614478000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 61}
    , self = 62
    , parent = Nothing
    , duration = 1.459614478000
    , status = Fail
    , start = 2025-09-03 12:19:17.494693356 UTC
    , finish = 2025-09-03 12:19:18.954307834 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
F              = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 31} , self
F              = 56 , parent = Nothing , duration = 0.363634373000 , status = Fail , start
F              = 2025-09-03 12:19:17.047171224 UTC , finish = 2025-09-03 12:19:17.410805597
F              UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F              
| F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| F            = 210} , self = 61 , parent = Nothing , duration = 1.801155509000 , status
| F            = Fail , start = 2025-09-03 12:19:17.054832364 UTC , finish = 2025-09-03
| F            12:19:18.855987873 UTC , thread_cap_info = ("ThreadId 72", 0, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F          = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F          = 61} , self = 57 , parent = Nothing , duration = 0.318265760000 , status
| | F          = Fail , start = 2025-09-03 12:19:17.174177479 UTC , finish = 2025-09-03
| | F          12:19:17.492443239 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F        = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F        = 61} , self = 58 , parent = Nothing , duration = 0.581590319000 , status
| | | F        = Fail , start = 2025-09-03 12:19:17.194172397 UTC , finish = 2025-09-03
| | | F        12:19:17.775762716 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | F      = 13 , num_top_rules = 13 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | F      = 360} , self = 63 , parent = Nothing , duration = 2.504540852000 , status
| | | | F      = Fail , start = 2025-09-03 12:19:17.234174984 UTC , finish = 2025-09-03
| | | | F      12:19:19.738715836 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F    = 51} , self = 60 , parent = Nothing , duration = 0.626240946000 , status
| | | | | F    = Fail , start = 2025-09-03 12:19:17.330579643 UTC , finish = 2025-09-03
| | | | | F    12:19:17.956820589 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | | | | F    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F  = 51} , self = 59 , parent = Nothing , duration = 0.584264001000 , status
| | | | | | F  = Fail , start = 2025-09-03 12:19:17.334237565 UTC , finish = 2025-09-03
| | | | | | F  12:19:17.918501566 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | | | F  
F | | | | | |  
  | F | | | |  
F |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   | | | |  = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
F |   | | | |  = 4 , total_length = 61} , self = 62 , parent = Nothing , duration = 1.459614478000
F |   | | | |  , status = Fail , start = 2025-09-03 12:19:17.494693356 UTC , finish =
F |   | | | |  2025-09-03 12:19:18.954307834 UTC , thread_cap_info = ("ThreadId 104",
F |   | | | |  1, False)}
F |   | | | |  
| |   F | | |  
| | S   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | S   | | |  = 4 , total_length = 61} , self = 64 , parent = Nothing , duration = 2.061823303000
| | S   | | |  , status = Success , start = 2025-09-03 12:19:17.794749204 UTC , finish
| | S   | | |  = 2025-09-03 12:19:19.856572507 UTC , thread_cap_info = ("ThreadId 108",
| | S   | | |  1, False)}
| | S   | | |  
| | |   | | F  
| | |   | F    
| | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |      = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | S |      = 4 , total_length = 51} , self = 66 , parent = Nothing , duration = 1.920481871000
| | | S |      , status = Success , start = 2025-09-03 12:19:17.974344699 UTC , finish
| | | S |      = 2025-09-03 12:19:19.89482657 UTC , thread_cap_info = ("ThreadId 109",
| | | S |      1, False)}
| | | S |      
| | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | E    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | E    = 4 , total_length = 51} , self = 70 , parent = Nothing , duration = 1.946689504000
| | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:18.014181078
| | | | | E    UTC , finish = 2025-09-03 12:19:19.960870582 UTC , thread_cap_info = ("ThreadId
| | | | | E    110", 1, False)}
| | | | | E    
| F | | | |    
F   | | | |    
E   | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E   | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
E   | | | |    = 4 , total_length = 61} , self = 68 , parent = Nothing , duration = 0.958449707000
E   | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:19:18.975724496
E   | | | |    UTC , finish = 2025-09-03 12:19:19.934174203 UTC , thread_cap_info = ("ThreadId
E   | | | |    116", 1, False)}
E   | | | |    
|   | | F |    
|   S |   |    
|     S   |    
E         |    
          E    
CNF 22890 vars 123572 clauses
