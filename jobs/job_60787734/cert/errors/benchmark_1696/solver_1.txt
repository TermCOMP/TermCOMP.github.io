last 7547 length 54956
last 4386 length 28895
CNF 7547 vars 54956 clauses
CNF 4386 vars 28895 clauses
last 8302 length 65431
last 6088 length 39541
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3257, clauses: 12042
last 3257 length 12042
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2273, clauses: 8424
last 2273 length 8424
CNF 3257 vars 12042 clauses
CNF 6088 vars 39541 clauses
CNF 2273 vars 8424 clauses
CNF 8302 vars 65431 clauses
last 7316 length 52489
CNF 7316 vars 52489 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1910, clauses: 7167
last 1910 length 7167
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2273, clauses: 8424, status: Unsatisfied, time: 0.583978934s
CNF 1910 vars 7167 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1910, clauses: 7167, status: Unsatisfied, time: 0.40269999s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4583, clauses: 19361
last 4583 length 19361
CNF 4583 vars 19361 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7686, clauses: 32159
last 7686 length 32159
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6506, clauses: 27127
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3873, clauses: 16252
CNF 7686 vars 32159 clauses
last 6506 length 27127
last 3873 length 16252
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10830, clauses: 45291
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5337, clauses: 20522
CNF 6506 vars 27127 clauses
CNF 3873 vars 16252 clauses
last 10830 length 45291
last 5337 length 20522
CNF 10830 vars 45291 clauses
CNF 5337 vars 20522 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19986, clauses: 83874
last 19986 length 83874
CNF 19986 vars 83874 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3873, clauses: 16252, status: Unsatisfied, time: 1.845814113s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3172, clauses: 12467
last 3172 length 12467
CNF 3172 vars 12467 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3257, clauses: 12042, status: Unsatisfied, time: 3.820769922s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6473, clauses: 27675
last 6473 length 27675
CNF 6473 vars 27675 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6506, clauses: 27127, status: Unsatisfied, time: 2.57874432s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11011, clauses: 48854
last 11011 length 48854
CNF 11011 vars 48854 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3172, clauses: 12467, status: Unsatisfied, time: 4.581126987s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5337, clauses: 20522, status: Unsatisfied, time: 6.433271977s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5928, clauses: 22966
last 5928 length 22966
CNF 5928 vars 22966 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11999, clauses: 51035
last 11999 length 51035
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10830, clauses: 45291, status: Satisfied, time: 6.934736541s
CNF 11999 vars 51035 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3808, clauses: 14807
last 3808 length 14807
CNF 3808 vars 14807 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4583, clauses: 19361, status: Unsatisfied, time: 8.287345906s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12806, clauses: 57092
last 12806 length 57092
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8882, clauses: 35764
last 8882 length 35764
CNF 12806 vars 57092 clauses
CNF 8882 vars 35764 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2827, clauses: 10543
last 2827 length 10543
CNF 2827 vars 10543 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9905, clauses: 41358
last 9905 length 41358
CNF 9905 vars 41358 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9905, clauses: 41358, status: Satisfied, time: 1.864168844s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 1 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 9 rules on 7 letters       weights
SRS with 6 rules on 7 letters       DP
SRS with 30 strict rules and 6 weak rules on 10 letters       weights
SRS with 14 strict rules and 6 weak rules on 10 letters       EDG
SRS with 3 strict rules and 6 weak rules on 8 letters       Usable
SRS with 3 strict rules and 2 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 2 weak rules on 6 letters       EDG
SRS with 2 strict rules and 2 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 5 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, c, a, c, a, b, c, a] -> [ a , b , c , a , c , a , b , b , c , a , c , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] -> [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] -> [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, a] ] -> [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] -> [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] -> [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] -> [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] -> [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] -> [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] -> [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, c] ] {- DP (Top 11) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 9) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 5) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, c] ] {- DP (Top 11) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 9) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, c] ] {- DP (Top 11) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 9) (Semlab 2 (Concon 2 (Input 0))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([a, a]#, 1/1)
  ([b, a]#, 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, c] ] {- DP (Top 11) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 9) (Semlab 2 (Concon 2 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  remove un-usable
    SRS
      [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
      [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
   property Termination
has value Just True
for SRS
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  ( [a, b]
  , Wk  / 0A  2A 1A  \
        | -2A -  -2A |
        \ -   -  0A  / )
  ( [a, c]
  , Wk  / 0A  -   -  \
        | -1A -1A 0A |
        \ -   -   0A / )
  ( [b, b]
  , Wk  / -1A 1A 0A \
        | -   0A -  |
        \ -   -  0A / )
  ( [b, c]
  , Wk  / -1A -1A 0A  \
        | -   -1A -1A |
        \ -   -   0A  / )
  ( [c, a]
  , Wk  / -2A 2A 0A \
        | 0A  -  -  |
        \ -   -  0A / )
  ( [c, a]#
  , Wk  / 0A 2A 0A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  ( [a, b]
  , Wk  / -  -1A 1A \
        | 1A 0A  -  |
        \ -  -   0A / )
  ( [a, c]
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
  ( [b, b]
  , Wk  / - -1A 0A  \
        | - -   -1A |
        \ - -   0A  / )
  ( [b, c]
  , Wk  / -  -  0A \
        | 2A 2A -  |
        \ -  -  0A / )
  ( [c, a]
  , Wk  / -  - 0A \
        | 0A - -  |
        \ -  - 0A / )
  ( [c, a]#
  , Wk  / - -2A 0A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] , [c, a] , [a, b] , [b, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  EDG

**************************************************
skeleton: (1,3)\TileAllAll{2}(9,7)\Weight(6,7)\Deepee(30/6,10)\Weight(14/6,10)\EDG(3/6,8)\Usable(3/2,6)\Matrix{\ArcticBZ}{3}\EDG(2/2,6)\Matrix{\ArcticBZ}{3}(0/2,5)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.523148328000
  min duration 1.822720655000
  total durat. 4.345868983000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 59
    , parent = Nothing
    , duration = 1.822720655000
    , status = Fail
    , start = 2025-09-03 12:47:56.591245928 UTC
    , finish = 2025-09-03 12:47:58.413966583 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 61
    , parent = Nothing
    , duration = 2.523148328000
    , status = Fail
    , start = 2025-09-03 12:47:56.391059847 UTC
    , finish = 2025-09-03 12:47:58.914208175 UTC
    , thread_cap_info = ("ThreadId 86", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.125525576000
  min duration 3.012310264000
  total durat. 9.166053930000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 84}
    , self = 84
    , parent = Nothing
    , duration = 3.012310264000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:48:07.120120893 UTC
    , finish = 2025-09-03 12:48:10.132431157 UTC
    , thread_cap_info = ("ThreadId 148", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 104}
    , self = 66
    , parent = Nothing
    , duration = 3.028218090000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:56.402648746 UTC
    , finish = 2025-09-03 12:47:59.430866836 UTC
    , thread_cap_info = ("ThreadId 94", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 6
      , alphabet_size = 9
      , total_length = 218}
    , self = 67
    , parent = Nothing
    , duration = 3.125525576000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:56.491294989 UTC
    , finish = 2025-09-03 12:47:59.616820565 UTC
    , thread_cap_info = ("ThreadId 98", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.117128073000
  min duration 3.117128073000
  total durat. 3.117128073000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 150}
    , self = 64
    , parent = Nothing
    , duration = 3.117128073000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:56.275835005 UTC
    , finish = 2025-09-03 12:47:59.392963078 UTC
    , thread_cap_info = ("ThreadId 60", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.164114343000
  min duration 1.562888926000
  total durat. 5.409268380000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 58
    , parent = Nothing
    , duration = 1.562888926000
    , status = Fail
    , start = 2025-09-03 12:47:56.610878631 UTC
    , finish = 2025-09-03 12:47:58.173767557 UTC
    , thread_cap_info = ("ThreadId 102", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 104}
    , self = 57
    , parent = Nothing
    , duration = 1.682265111000
    , status = Fail
    , start = 2025-09-03 12:47:56.410875785 UTC
    , finish = 2025-09-03 12:47:58.093140896 UTC
    , thread_cap_info = ("ThreadId 95", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 60
    , parent = Nothing
    , duration = 2.164114343000
    , status = Fail
    , start = 2025-09-03 12:47:56.41088991 UTC
    , finish = 2025-09-03 12:47:58.575004253 UTC
    , thread_cap_info = ("ThreadId 87", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.067426710000
  min duration 3.026746068000
  total durat. 6.094172778000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 84}
    , self = 85
    , parent = Nothing
    , duration = 3.026746068000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:48:07.141584642 UTC
    , finish = 2025-09-03 12:48:10.16833071 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 6
      , alphabet_size = 9
      , total_length = 218}
    , self = 68
    , parent = Nothing
    , duration = 3.067426710000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:56.550906572 UTC
    , finish = 2025-09-03 12:47:59.618333282 UTC
    , thread_cap_info = ("ThreadId 100", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.112239892000
  min duration 3.112239892000
  total durat. 3.112239892000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 150}
    , self = 65
    , parent = Nothing
    , duration = 3.112239892000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:56.299327376 UTC
    , finish = 2025-09-03 12:47:59.411567268 UTC
    , thread_cap_info = ("ThreadId 62", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 7.440000032000
  min duration 2.387667472000
  total durat. 9.827667504000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 84}
    , self = 86
    , parent = Nothing
    , duration = 2.387667472000
    , status = Success
    , start = 2025-09-03 12:48:10.197775164 UTC
    , finish = 2025-09-03 12:48:12.585442636 UTC
    , thread_cap_info = ("ThreadId 161", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 104}
    , self = 74
    , parent = Nothing
    , duration = 7.440000032000
    , status = Success
    , start = 2025-09-03 12:47:59.618365788 UTC
    , finish = 2025-09-03 12:48:07.05836582 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.383577974000
  min duration 3.383577974000
  total durat. 3.383577974000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 71
    , parent = Nothing
    , duration = 3.383577974000
    , status = Fail
    , start = 2025-09-03 12:47:58.972061285 UTC
    , finish = 2025-09-03 12:48:02.355639259 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.167200180000
  min duration 9.069044124000
  total durat. 18.236244304000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 81
    , parent = Nothing
    , duration = 9.069044124000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:58.510181243 UTC
    , finish = 2025-09-03 12:48:07.579225367 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 6
      , alphabet_size = 9
      , total_length = 218}
    , self = 83
    , parent = Nothing
    , duration = 9.167200180000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:59.673233884 UTC
    , finish = 2025-09-03 12:48:08.840434064 UTC
    , thread_cap_info = ("ThreadId 127", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 8.907582922000
  min duration 2.294332841000
  total durat. 11.201915763000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 69
    , parent = Nothing
    , duration = 2.294332841000
    , status = Fail
    , start = 2025-09-03 12:47:59.414735261 UTC
    , finish = 2025-09-03 12:48:01.709068102 UTC
    , thread_cap_info = ("ThreadId 119", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 82
    , parent = Nothing
    , duration = 8.907582922000
    , status = Fail
    , start = 2025-09-03 12:47:59.003788985 UTC
    , finish = 2025-09-03 12:48:07.911371907 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.996618650000
  min duration 4.996618650000
  total durat. 4.996618650000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 104}
    , self = 76
    , parent = Nothing
    , duration = 4.996618650000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:48:02.113451641 UTC
    , finish = 2025-09-03 12:48:07.110070291 UTC
    , thread_cap_info = ("ThreadId 136", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 6.937271079000
  min duration 0.640344195000
  total durat. 14.601505293000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 84}
    , self = 88
    , parent = Nothing
    , duration = 2.428972693000
    , status = Fail
    , start = 2025-09-03 12:48:10.168358952 UTC
    , finish = 2025-09-03 12:48:12.597331645 UTC
    , thread_cap_info = ("ThreadId 160", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 104}
    , self = 70
    , parent = Nothing
    , duration = 3.922263472000
    , status = Fail
    , start = 2025-09-03 12:47:58.191101202 UTC
    , finish = 2025-09-03 12:48:02.113364674 UTC
    , thread_cap_info = ("ThreadId 105", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 6
      , alphabet_size = 9
      , total_length = 218}
    , self = 73
    , parent = Nothing
    , duration = 6.937271079000
    , status = Fail
    , start = 2025-09-03 12:47:59.65127983 UTC
    , finish = 2025-09-03 12:48:06.588550909 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 4.724507587000
  min duration 4.724507587000
  total durat. 4.724507587000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 53}
    , self = 72
    , parent = Nothing
    , duration = 4.724507587000
    , status = Fail
    , start = 2025-09-03 12:48:01.709146608 UTC
    , finish = 2025-09-03 12:48:06.433654195 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 23} , self
F                    = 42 , parent = Nothing , duration = 0.131295497000 , status = Fail , start
F                    = 2025-09-03 12:47:56.262467791 UTC , finish = 2025-09-03 12:47:56.393763288
F                    UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                    
| E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| E                  = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| E                  = 150} , self = 64 , parent = Nothing , duration = 3.117128073000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-03 12:47:56.275835005 UTC ,
| E                  finish = 2025-09-03 12:47:59.392963078 UTC , thread_cap_info = ("ThreadId
| E                  60", 0, False)}
| E                  
| | E                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | E                = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | E                = 150} , self = 65 , parent = Nothing , duration = 3.112239892000 , status
| | E                = Except "AsyncCancelled" , start = 2025-09-03 12:47:56.299327376 UTC ,
| | E                finish = 2025-09-03 12:47:59.411567268 UTC , thread_cap_info = ("ThreadId
| | E                62", 0, False)}
| | E                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F              = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | F              = 53} , self = 61 , parent = Nothing , duration = 2.523148328000 , status
| | | F              = Fail , start = 2025-09-03 12:47:56.391059847 UTC , finish = 2025-09-03
| | | F              12:47:58.914208175 UTC , thread_cap_info = ("ThreadId 86", 3, False)}
| | | F              
F | | |              
E | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
E | | |              = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 6 , total_length
E | | |              = 104} , self = 66 , parent = Nothing , duration = 3.028218090000 , status
E | | |              = Except "<<timeout>>" , start = 2025-09-03 12:47:56.402648746 UTC , finish
E | | |              = 2025-09-03 12:47:59.430866836 UTC , thread_cap_info = ("ThreadId 94",
E | | |              1, False)}
E | | |              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 6 , total_length
| | | | F            = 104} , self = 57 , parent = Nothing , duration = 1.682265111000 , status
| | | | F            = Fail , start = 2025-09-03 12:47:56.410875785 UTC , finish = 2025-09-03
| | | | F            12:47:58.093140896 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | F          = 53} , self = 60 , parent = Nothing , duration = 2.164114343000 , status
| | | | | F          = Fail , start = 2025-09-03 12:47:56.41088991 UTC , finish = 2025-09-03
| | | | | F          12:47:58.575004253 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | | F          
| | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | E        = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 9 , total_length
| | | | | | E        = 218} , self = 67 , parent = Nothing , duration = 3.125525576000 , status
| | | | | | E        = Except "<<timeout>>" , start = 2025-09-03 12:47:56.491294989 UTC , finish
| | | | | | E        = 2025-09-03 12:47:59.616820565 UTC , thread_cap_info = ("ThreadId 98",
| | | | | | E        1, False)}
| | | | | | E        
| | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | E      = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 9 , total_length
| | | | | | | E      = 218} , self = 68 , parent = Nothing , duration = 3.067426710000 , status
| | | | | | | E      = Except "<<timeout>>" , start = 2025-09-03 12:47:56.550906572 UTC , finish
| | | | | | | E      = 2025-09-03 12:47:59.618333282 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | E      1, False)}
| | | | | | | E      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | | | F    = 53} , self = 59 , parent = Nothing , duration = 1.822720655000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 12:47:56.591245928 UTC , finish = 2025-09-03
| | | | | | | | F    12:47:58.413966583 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | | | | F  = 53} , self = 58 , parent = Nothing , duration = 1.562888926000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 12:47:56.610878631 UTC , finish = 2025-09-03
| | | | | | | | | F  12:47:58.173767557 UTC , thread_cap_info = ("ThreadId 102", 3, False)}
| | | | | | | | | F  
| | | | F | | | | |  
| | | |   | | | | F  
| | | | F | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | | |    = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | F | | | |    = 6 , total_length = 104} , self = 70 , parent = Nothing , duration = 3.922263472000
| | | | F | | | |    , status = Fail , start = 2025-09-03 12:47:58.191101202 UTC , finish =
| | | | F | | | |    2025-09-03 12:48:02.113364674 UTC , thread_cap_info = ("ThreadId 105",
| | | | F | | | |    1, False)}
| | | | F | | | |    
| | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | | | | F  = 4 , total_length = 53} , self = 62 , parent = Nothing , duration = 0.672653854000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 12:47:58.242158664 UTC , finish =
| | | | | | | | | F  2025-09-03 12:47:58.914812518 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| | | | | | | | F |  
| | | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | E |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | | | E |  = 4 , total_length = 53} , self = 81 , parent = Nothing , duration = 9.069044124000
| | | | | | | | E |  , status = Except "<<timeout>>" , start = 2025-09-03 12:47:58.510181243
| | | | | | | | E |  UTC , finish = 2025-09-03 12:48:07.579225367 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E |  111", 3, False)}
| | | | | | | | E |  
| | | | | F | | | |  
| | | | | F | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | | | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | F | | | |  = 4 , total_length = 53} , self = 63 , parent = Nothing , duration = 0.640344195000
| | | | | F | | | |  , status = Fail , start = 2025-09-03 12:47:58.6775063 UTC , finish = 2025-09-03
| | | | | F | | | |  12:47:59.317850495 UTC , thread_cap_info = ("ThreadId 113", 3, False)}
| | | | | F | | | |  
| | | F | | | | | |  
| | |   | | | | | F  
| | | F | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | F | | | | |    = 4 , total_length = 53} , self = 71 , parent = Nothing , duration = 3.383577974000
| | | F | | | | |    , status = Fail , start = 2025-09-03 12:47:58.972061285 UTC , finish =
| | | F | | | | |    2025-09-03 12:48:02.355639259 UTC , thread_cap_info = ("ThreadId 115",
| | | F | | | | |    3, False)}
| | | F | | | | |    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | | | | F  = 4 , total_length = 53} , self = 82 , parent = Nothing , duration = 8.907582922000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 12:47:59.003788985 UTC , finish =
| | | | | | | | | F  2025-09-03 12:48:07.911371907 UTC , thread_cap_info = ("ThreadId 116",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| | | | | F | | | |  
| E | | |   | | | |  
|   E | |   | | | |  
| F   | |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F   | |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F   | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F   | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| F   | |   | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| F   | |   | | | |  = 4 , total_length = 53} , self = 69 , parent = Nothing , duration = 2.294332841000
| F   | |   | | | |  , status = Fail , start = 2025-09-03 12:47:59.414735261 UTC , finish =
| F   | |   | | | |  2025-09-03 12:48:01.709068102 UTC , thread_cap_info = ("ThreadId 119",
| F   | |   | | | |  0, False)}
| F   | |   | | | |  
E |   | |   | | | |  
  |   | |   E | | |  
  |   | |     E | |  
S |   | |       | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S |   | |       | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S |   | |       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S |   | |       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   | |       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   | |       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
S |   | |       | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
S |   | |       | |  = 6 , total_length = 104} , self = 74 , parent = Nothing , duration = 7.440000032000
S |   | |       | |  , status = Success , start = 2025-09-03 12:47:59.618365788 UTC , finish
S |   | |       | |  = 2025-09-03 12:48:07.05836582 UTC , thread_cap_info = ("ThreadId 125",
S |   | |       | |  1, False)}
S |   | |       | |  
| | F | |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |       | |  = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
| | F | |       | |  alphabet_size = 9 , total_length = 218} , self = 73 , parent = Nothing
| | F | |       | |  , duration = 6.937271079000 , status = Fail , start = 2025-09-03 12:47:59.65127983
| | F | |       | |  UTC , finish = 2025-09-03 12:48:06.588550909 UTC , thread_cap_info = ("ThreadId
| | F | |       | |  126", 1, False)}
| | F | |       | |  
| | | | | E     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | E     | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | | | E     | |  = 9 , total_length = 218} , self = 83 , parent = Nothing , duration = 9.167200180000
| | | | | E     | |  , status = Except "<<timeout>>" , start = 2025-09-03 12:47:59.673233884
| | | | | E     | |  UTC , finish = 2025-09-03 12:48:08.840434064 UTC , thread_cap_info = ("ThreadId
| | | | | E     | |  127", 1, False)}
| | | | | E     | |  
| F | | | |     | |  
| F | | | |     | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | |     | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| F | | | |     | |  = 4 , total_length = 53} , self = 72 , parent = Nothing , duration = 4.724507587000
| F | | | |     | |  , status = Fail , start = 2025-09-03 12:48:01.709146608 UTC , finish =
| F | | | |     | |  2025-09-03 12:48:06.433654195 UTC , thread_cap_info = ("ThreadId 134",
| F | | | |     | |  3, False)}
| F | | | |     | |  
| | | | F |     | |  
| | | | E |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | E |     | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | E |     | |  = 6 , total_length = 104} , self = 76 , parent = Nothing , duration = 4.996618650000
| | | | E |     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:48:02.113451641
| | | | E |     | |  UTC , finish = 2025-09-03 12:48:07.110070291 UTC , thread_cap_info = ("ThreadId
| | | | E |     | |  136", 1, False)}
| | | | E |     | |  
| | | F | |     | |  
| F |   | |     | |  
|   F   | |     | |  
S       | |     | |  
        E |     | |  
E         |     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E         |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E         |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
E         |     | |  = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 6 , total_length
E         |     | |  = 84} , self = 84 , parent = Nothing , duration = 3.012310264000 , status
E         |     | |  = Except "<<timeout>>" , start = 2025-09-03 12:48:07.120120893 UTC , finish
E         |     | |  = 2025-09-03 12:48:10.132431157 UTC , thread_cap_info = ("ThreadId 148",
E         |     | |  1, False)}
E         |     | |  
| E       |     | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E       |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E       |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| E       |     | |  = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 6 , total_length
| E       |     | |  = 84} , self = 85 , parent = Nothing , duration = 3.026746068000 , status
| E       |     | |  = Except "<<timeout>>" , start = 2025-09-03 12:48:07.141584642 UTC , finish
| E       |     | |  = 2025-09-03 12:48:10.16833071 UTC , thread_cap_info = ("ThreadId 149",
| E       |     | |  1, False)}
| E       |     | |  
| |       |     E |  
| |       |       F  
| |       E          
E |                  
  E                  
F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                    = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F                    = 6 , total_length = 84} , self = 88 , parent = Nothing , duration = 2.428972693000
F                    , status = Fail , start = 2025-09-03 12:48:10.168358952 UTC , finish =
F                    2025-09-03 12:48:12.597331645 UTC , thread_cap_info = ("ThreadId 160",
F                    1, False)}
F                    
| S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| S                  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| S                  = 6 , total_length = 84} , self = 86 , parent = Nothing , duration = 2.387667472000
| S                  , status = Success , start = 2025-09-03 12:48:10.197775164 UTC , finish
| S                  = 2025-09-03 12:48:12.585442636 UTC , thread_cap_info = ("ThreadId 161",
| S                  1, False)}
| S                  
| S                  
F                    
