last 953 length 3745
CNF 953 vars 3745 clauses
last 913 length 3519
last 687 length 2698
CNF 913 vars 3519 clauses
CNF 687 vars 2698 clauses
last 656 length 2564
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3407, clauses: 12543
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3642, clauses: 13448
CNF 656 vars 2564 clauses
last 3407 length 12543
last 5118 length 21141
last 6499 length 26510
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7936, clauses: 32733
last 3642 length 13448
last 16112 length 65133
CNF 3407 vars 12543 clauses
CNF 5118 vars 21141 clauses
last 15706 length 63022
CNF 6499 vars 26510 clauses
last 7936 length 32733
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8280, clauses: 34167
last 10833 length 44122
CNF 3642 vars 13448 clauses
last 9621 length 37807
CNF 16112 vars 65133 clauses
last 8280 length 34167
CNF 15706 vars 63022 clauses
CNF 7936 vars 32733 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3407, clauses: 12543, status: Unsatisfied, time: 0.55379659s
CNF 10833 vars 44122 clauses
CNF 9621 vars 37807 clauses
CNF 8280 vars 34167 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3642, clauses: 13448, status: Unsatisfied, time: 0.578999884s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5174, clauses: 20482
last 5174 length 20482
CNF 5174 vars 20482 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5437, clauses: 21544
last 5437 length 21544
CNF 5437 vars 21544 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5437, clauses: 21544, status: Satisfied, time: 0.041035524s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5174, clauses: 20482, status: Satisfied, time: 0.05957095s
**************************************************
summary
**************************************************
SRS with 5 rules on 3 letters       DP
SRS with 11 strict rules and 5 weak rules on 6 letters       weights
SRS with 10 strict rules and 5 weak rules on 6 letters       EDG
SRS with 10 strict rules and 5 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 6 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [b] {- Input 0 -}
  [b, a] -> [a, b] {- Input 1 -}
  [b, b, c] -> [c, a] {- Input 2 -}
  [b, b] -> [a, a, a] {- Input 3 -}
  [c, a] -> [b, a, c] {- Input 4 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c, a] {- DP Nontop (Input 2) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 3) -}
  [c, a] ->= [b, a, c] {- DP Nontop (Input 4) -}
  [a#, a] |-> [b#] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Input 3) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 3) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, c] |-> [a#] {- DP (Top 1) (Input 2) -}
  [b#, b, c] |-> [c#, a] {- DP (Top 0) (Input 2) -}
  [c#, a] |-> [a#, c] {- DP (Top 1) (Input 4) -}
  [c#, a] |-> [b#, a, c] {- DP (Top 0) (Input 4) -}
  [c#, a] |-> [c#] {- DP (Top 2) (Input 4) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c, a] {- DP Nontop (Input 2) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 3) -}
  [c, a] ->= [b, a, c] {- DP Nontop (Input 4) -}
  [a#, a] |-> [b#] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Input 3) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 3) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, c] |-> [c#, a] {- DP (Top 0) (Input 2) -}
  [c#, a] |-> [a#, c] {- DP (Top 1) (Input 4) -}
  [c#, a] |-> [b#, a, c] {- DP (Top 0) (Input 4) -}
  [c#, a] |-> [c#] {- DP (Top 2) (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Input 0) -}
  [b#, a] |-> [a#, b] {- DP (Top 0) (Input 1) -}
  [b#, a] |-> [b#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Input 3) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 3) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, c] |-> [c#, a] {- DP (Top 0) (Input 2) -}
  [c#, a] |-> [a#, c] {- DP (Top 1) (Input 4) -}
  [c#, a] |-> [b#, a, c] {- DP (Top 0) (Input 4) -}
  [c#, a] |-> [c#] {- DP (Top 2) (Input 4) -}
  [a, a] ->= [b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c, a] {- DP Nontop (Input 2) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 3) -}
  [c, a] ->= [b, a, c] {- DP Nontop (Input 4) -}
reason
  ( a
  , Wk  / 1 2 2 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 3 3 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 3 0 0 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 1 2 2 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 4 4 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 3 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Input 0) -}
  [c#, a] |-> [b#, a, c] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c, a] {- DP Nontop (Input 2) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 3) -}
  [c, a] ->= [b, a, c] {- DP Nontop (Input 4) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b] {- DP Nontop (Input 0) -}
  [b, a] ->= [a, b] {- DP Nontop (Input 1) -}
  [b, b, c] ->= [c, a] {- DP Nontop (Input 2) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 3) -}
  [c, a] ->= [b, a, c] {- DP Nontop (Input 4) -}
reason
  EDG

**************************************************
skeleton: (5,3)\Deepee(11/5,6)\Weight\EDG(10/5,6)\Matrix{\Natural}{3}(2/5,6)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.740179210000
  min duration 0.013566100000
  total durat. 2.103845500000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.778098779000
  min duration 0.096338768000
  total durat. 2.606229544000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.893062675000
  min duration 0.580973482000
  total durat. 1.474036157000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.776610291000
  min duration 0.747802664000
  total durat. 1.524412955000
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
F                    = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 288} , self = 60 , parent = Nothing , duration = 0.671022082000 , status
F                    = Fail , start = 2025-09-03 13:56:32.896482677 UTC , finish = 2025-09-03
F                    13:56:33.567504759 UTC , thread_cap_info = ("ThreadId 80", 0, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| F                  = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 288} , self = 59 , parent = Nothing , duration = 0.645670562000 , status
| F                  = Fail , start = 2025-09-03 13:56:32.906254244 UTC , finish = 2025-09-03
| F                  13:56:33.551924806 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F                = 10 , num_top_rules = 10 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | F                = 61} , self = 58 , parent = Nothing , duration = 0.396832503000 , status
| | F                = Fail , start = 2025-09-03 13:56:32.917359688 UTC , finish = 2025-09-03
| | F                13:56:33.314192191 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 14 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 5 ,
| | | F              alphabet_size = 6 , total_length = 58} , self = 61 , parent = Nothing ,
| | | F              duration = 0.747802664000 , status = Fail , start = 2025-09-03 13:56:32.922777735
| | | F              UTC , finish = 2025-09-03 13:56:33.670580399 UTC , thread_cap_info = ("ThreadId
| | | F              95", 2, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 117 , num_strict_rules
| | | | F            = 72 , num_top_rules = 72 , num_weak_rules = 45 , alphabet_size = 15 ,
| | | | F            total_length = 684} , self = 62 , parent = Nothing , duration = 0.740179210000
| | | | F            , status = Fail , start = 2025-09-03 13:56:32.950614736 UTC , finish =
| | | | F            2025-09-03 13:56:33.690793946 UTC , thread_cap_info = ("ThreadId 99", 3,
| | | | F            False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 117 , num_strict_rules
| | | | | F          = 72 , num_top_rules = 72 , num_weak_rules = 45 , alphabet_size = 15 ,
| | | | | F          total_length = 684} , self = 65 , parent = Nothing , duration = 0.778098779000
| | | | | F          , status = Fail , start = 2025-09-03 13:56:32.969146384 UTC , finish =
| | | | | F          2025-09-03 13:56:33.747245163 UTC , thread_cap_info = ("ThreadId 100",
| | | | | F          3, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 15 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 5
| | | | | | F        , alphabet_size = 6 , total_length = 61} , self = 63 , parent = Nothing
| | | | | | F        , duration = 0.776610291000 , status = Fail , start = 2025-09-03 13:56:32.970622845
| | | | | | F        UTC , finish = 2025-09-03 13:56:33.747233136 UTC , thread_cap_info = ("ThreadId
| | | | | | F        101", 2, False)}
| | | | | | F        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | | E      , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 5 , alphabet_size
| | | | | | | E      = 6 , total_length = 58} , self = 73 , parent = Nothing , duration = 0.893062675000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:56:33.002209633
| | | | | | | E      UTC , finish = 2025-09-03 13:56:33.895272308 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      102", 2, False)}
| | | | | | | E      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 123 , num_strict_rules
| | | | | | | | F    = 78 , num_top_rules = 78 , num_weak_rules = 45 , alphabet_size = 15 ,
| | | | | | | | F    total_length = 714} , self = 64 , parent = Nothing , duration = 0.619668387000
| | | | | | | | F    , status = Fail , start = 2025-09-03 13:56:33.08669397 UTC , finish = 2025-09-03
| | | | | | | | F    13:56:33.706362357 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 123 , num_strict_rules
| | | | | | | | | F  = 78 , num_top_rules = 78 , num_weak_rules = 45 , alphabet_size = 15 ,
| | | | | | | | | F  total_length = 714} , self = 66 , parent = Nothing , duration = 0.689288932000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 13:56:33.105455243 UTC , finish =
| | | | | | | | | F  2025-09-03 13:56:33.794744175 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | | | F  3, False)}
| | | | | | | | | F  
| | F | | | | | | |  
| | E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | E | | | | | | |  , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 5 , alphabet_size
| | E | | | | | | |  = 6 , total_length = 61} , self = 71 , parent = Nothing , duration = 0.580973482000
| | E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:56:33.314227611
| | E | | | | | | |  UTC , finish = 2025-09-03 13:56:33.895201093 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | |  109", 2, False)}
| | E | | | | | | |  
| F | | | | | | | |  
F   | | | | | | | |  
    | F | | | | | |  
    |   F | | | | |  
S   |     | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
S   |     | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S   |     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S   |     | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S   |     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S   |     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
S   |     | | | | |  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 5 , alphabet_size
S   |     | | | | |  = 6 , total_length = 58} , self = 67 , parent = Nothing , duration = 0.192600827000
S   |     | | | | |  , status = Success , start = 2025-09-03 13:56:33.699754652 UTC , finish
S   |     | | | | |  = 2025-09-03 13:56:33.892355479 UTC , thread_cap_info = ("ThreadId 121",
S   |     | | | | |  0, False)}
S   |     | | | | |  
|   |     | | | F |  
|   |     | F |   |  
|   |     F   |   |  
| S |         |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S |         |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S |         |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S |         |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |         |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |         |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| S |         |   |  , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 5 , alphabet_size
| S |         |   |  = 6 , total_length = 61} , self = 69 , parent = Nothing , duration = 0.136506671000
| S |         |   |  , status = Success , start = 2025-09-03 13:56:33.756887458 UTC , finish
| S |         |   |  = 2025-09-03 13:56:33.893394129 UTC , thread_cap_info = ("ThreadId 123",
| S |         |   |  2, False)}
| S |         |   |  
| | |         |   F  
S | |         |      
  S |         |      
    E         |      
              E      
