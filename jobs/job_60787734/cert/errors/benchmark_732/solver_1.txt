last 12413 length 107746
CNF 12413 vars 107746 clauses
last 13916 length 101566
CNF 13916 vars 101566 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3294, clauses: 12272
last 3294 length 12272
CNF 3294 vars 12272 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3294, clauses: 12272, status: Satisfied, time: 0.308176629s
last 11925 length 105594
CNF 11925 vars 105594 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3295, clauses: 13447
last 3295 length 13447
CNF 3295 vars 13447 clauses
last 12986 length 96599
CNF 12986 vars 96599 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3295, clauses: 13447, status: Unsatisfied, time: 0.359560705s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3083, clauses: 11271
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10391, clauses: 43219
last 3083 length 11271
last 10391 length 43219
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6275, clauses: 26611
CNF 3083 vars 11271 clauses
CNF 10391 vars 43219 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11921, clauses: 52647
last 6275 length 26611
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11181, clauses: 46589
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35505, clauses: 149195
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14725, clauses: 58744
last 11921 length 52647
last 11181 length 46589
CNF 6275 vars 26611 clauses
last 35505 length 149195
last 14725 length 58744
CNF 11921 vars 52647 clauses
CNF 11181 vars 46589 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6275, clauses: 26611, status: Satisfied, time: 0.3408602s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3083, clauses: 11271, status: Satisfied, time: 0.586462433s
CNF 14725 vars 58744 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 6 letters       mirror
SRS with 3 rules on 6 letters       DP
SRS with 11 strict rules and 3 weak rules on 7 letters       EDG
SRS with 3 strict rules and 3 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 7 letters       EDG
SRS with 2 strict rules and 3 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 7 letters       EDG
SRS with 1 strict rules and 3 weak rules on 7 letters       Usable
SRS with 1 rules on 7 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 1, 2, 3, 4, 5, 1] -> [ 0 , 2 , 3 , 4 , 5 , 1 , 1 , 0 , 1 , 2 , 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 5 ] {- Input 0 -}
  [0, 1, 2, 3, 4, 5, 1] -> [ 1 , 2 , 3 , 4 , 5 , 1 , 1 , 0 , 1 , 2 , 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 5 ] {- Input 1 -}
  [0, 1, 2, 3, 4, 5, 1] -> [ 1 , 2 , 3 , 4 , 5 , 1 , 1 , 0 , 1 , 2 , 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 5 ] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [1, 5, 4, 3, 2, 1, 0] -> [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- Mirror (Input 0) -}
  [1, 5, 4, 3, 2, 1, 0] -> [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- Mirror (Input 1) -}
  [1, 5, 4, 3, 2, 1, 0] -> [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 24) (Mirror (Input 2)) , DP (Top 18) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP (Top 12) (Mirror (Input 0)) -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 22) (Mirror (Input 2)) , DP (Top 16) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP (Top 10) (Mirror (Input 0)) -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 16) (Mirror (Input 2)) , DP (Top 10) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP (Top 4) (Mirror (Input 0)) -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 10) (Mirror (Input 2)) , DP (Top 4) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP (Top 4) (Mirror (Input 2)) -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 25) (Mirror (Input 2)) , DP (Top 19) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 5 , 4 , 3 , 2 , 0 ] {- DP (Top 13) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 24) (Mirror (Input 2)) , DP (Top 18) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 25) (Mirror (Input 2)) , DP (Top 19) (Mirror (Input 1)) ] -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( 1
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 4
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 2
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( 5
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 3
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( 1#
  , Wk  / 2A 4A 4A - \
        | 2A 4A 4A - |
        | 2A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 24) (Mirror (Input 2)) , DP (Top 18) (Mirror (Input 1)) ] -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
  [1#, 5, 4, 3, 2, 1, 0] |-> [ 1# , 1 , 5 , 4 , 3 , 2 , 1 ] {- Many [ DP (Top 24) (Mirror (Input 2)) , DP (Top 18) (Mirror (Input 1)) ] -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( 1
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 4
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 2
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 0
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( 5
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 3
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( 1#
  , Wk  / 10A 11A 13A - \
        | 10A 11A 13A - |
        | 10A 11A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
  [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
reason
  remove un-usable
    SRS
      [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 0 ] {- DP Nontop (Mirror (Input 0)) -}
      [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 1)) -}
      [1, 5, 4, 3, 2, 1, 0] ->= [ 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 5 , 4 , 3 , 2 , 1 , 0 , 1 , 1 , 5 , 4 , 3 , 2 , 1 ] {- DP Nontop (Mirror (Input 2)) -}
   property Termination
has value Just True
for SRS
  [1#, 5, 4, 3, 2, 1, 0] |-> [1#] {- Many [ DP (Top 30) (Mirror (Input 2)) , DP (Top 24) (Mirror (Input 1)) ] -}
reason
  (1, 1/1)
  (4, 1/1)
  (2, 1/1)
  (0, 1/1)
  (5, 1/1)
  (3, 1/1)
  (1#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,6)\Deepee(11/3,7)\EDG(3/3,7)\Matrix{\Arctic}{3}\EDG(2/3,7)\Matrix{\Arctic}{3}\EDG(1/3,7)\Usable(1,7)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 35505 vars 149195 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.962236429000
  min duration 1.117984613000
  total durat. 3.080221042000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 7
      , total_length = 131}
    , self = 59
    , parent = Nothing
    , duration = 1.117984613000
    , status = Fail
    , start = 2025-09-03 12:47:08.025855035 UTC
    , finish = 2025-09-03 12:47:09.143839648 UTC
    , thread_cap_info = ("ThreadId 52", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 7
      , total_length = 118}
    , self = 77
    , parent = Nothing
    , duration = 1.962236429000
    , status = Fail
    , start = 2025-09-03 12:47:09.801950453 UTC
    , finish = 2025-09-03 12:47:11.764186882 UTC
    , thread_cap_info = ("ThreadId 112", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.019546841000
  min duration 3.002987411000
  total durat. 9.037271153000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 47
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 30
      , alphabet_size = 18
      , total_length = 1171}
    , self = 73
    , parent = Nothing
    , duration = 3.002987411000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:08.301214929 UTC
    , finish = 2025-09-03 12:47:11.30420234 UTC
    , thread_cap_info = ("ThreadId 101", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 44
      , num_strict_rules = 26
      , num_top_rules = 26
      , num_weak_rules = 18
      , alphabet_size = 13
      , total_length = 1206}
    , self = 72
    , parent = Nothing
    , duration = 3.014736901000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:08.186479497 UTC
    , finish = 2025-09-03 12:47:11.201216398 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 3
      , alphabet_size = 7
      , total_length = 184}
    , self = 68
    , parent = Nothing
    , duration = 3.019546841000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:08.042441778 UTC
    , finish = 2025-09-03 12:47:11.061988619 UTC
    , thread_cap_info = ("ThreadId 71", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.062505671000
  min duration 3.062505671000
  total durat. 3.062505671000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 30
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 948}
    , self = 69
    , parent = Nothing
    , duration = 3.062505671000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:08.039809658 UTC
    , finish = 2025-09-03 12:47:11.102315329 UTC
    , thread_cap_info = ("ThreadId 78", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.605639396000
  min duration 0.902597081000
  total durat. 2.508236477000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 7
      , total_length = 118}
    , self = 75
    , parent = Nothing
    , duration = 1.605639396000
    , status = Fail
    , start = 2025-09-03 12:47:09.821130519 UTC
    , finish = 2025-09-03 12:47:11.426769915 UTC
    , thread_cap_info = ("ThreadId 113", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.040963810000
  min duration 3.011874956000
  total durat. 9.067560187000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 3
      , alphabet_size = 7
      , total_length = 184}
    , self = 67
    , parent = Nothing
    , duration = 3.011874956000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:08.029249331 UTC
    , finish = 2025-09-03 12:47:11.041124287 UTC
    , thread_cap_info = ("ThreadId 72", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 44
      , num_strict_rules = 26
      , num_top_rules = 26
      , num_weak_rules = 18
      , alphabet_size = 13
      , total_length = 1206}
    , self = 71
    , parent = Nothing
    , duration = 3.014721421000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:08.186483832 UTC
    , finish = 2025-09-03 12:47:11.201205253 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 47
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 30
      , alphabet_size = 18
      , total_length = 1171}
    , self = 74
    , parent = Nothing
    , duration = 3.040963810000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:08.321117881 UTC
    , finish = 2025-09-03 12:47:11.362081691 UTC
    , thread_cap_info = ("ThreadId 102", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.082381647000
  min duration 3.082381647000
  total durat. 3.082381647000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 30
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 948}
    , self = 70
    , parent = Nothing
    , duration = 3.082381647000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:08.039814796 UTC
    , finish = 2025-09-03 12:47:11.122196443 UTC
    , thread_cap_info = ("ThreadId 80", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.195528936000
  min duration 0.341220136000
  total durat. 2.113350050000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 3
      , alphabet_size = 7
      , total_length = 184}
    , self = 82
    , parent = Nothing
    , duration = 1.195528936000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:11.16199348 UTC
    , finish = 2025-09-03 12:47:12.357522416 UTC
    , thread_cap_info = ("ThreadId 121", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.793249160000
  min duration 0.386418549000
  total durat. 1.179667709000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.392272951000
  min duration 4.392272951000
  total durat. 4.392272951000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 6
      , total_length = 96}
    , self = 92
    , parent = Nothing
    , duration = 4.392272951000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:08.081105475 UTC
    , finish = 2025-09-03 12:47:12.473378426 UTC
    , thread_cap_info = ("ThreadId 83", 1, False)}
**************************************************
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
F                      = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 7 , total_length
F                      = 131} , self = 59 , parent = Nothing , duration = 1.117984613000 , status
F                      = Fail , start = 2025-09-03 12:47:08.025855035 UTC , finish = 2025-09-03
F                      12:47:09.143839648 UTC , thread_cap_info = ("ThreadId 52", 0, False)}
F                      
| E                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| E                    = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 7 , total_length
| E                    = 184} , self = 67 , parent = Nothing , duration = 3.011874956000 , status
| E                    = Except "<<timeout>>" , start = 2025-09-03 12:47:08.029249331 UTC , finish
| E                    = 2025-09-03 12:47:11.041124287 UTC , thread_cap_info = ("ThreadId 72",
| E                    0, False)}
| E                    
| | E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                  = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | E                  = 30 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | E                  = 948} , self = 69 , parent = Nothing , duration = 3.062505671000 , status
| | E                  = Except "AsyncCancelled" , start = 2025-09-03 12:47:08.039809658 UTC ,
| | E                  finish = 2025-09-03 12:47:11.102315329 UTC , thread_cap_info = ("ThreadId
| | E                  78", 3, False)}
| | E                  
| | | E                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | E                = 30 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | E                = 948} , self = 70 , parent = Nothing , duration = 3.082381647000 , status
| | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:47:08.039814796 UTC ,
| | | E                finish = 2025-09-03 12:47:11.122196443 UTC , thread_cap_info = ("ThreadId
| | | E                80", 3, False)}
| | | E                
| | | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | E              = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 7 , total_length
| | | | E              = 184} , self = 68 , parent = Nothing , duration = 3.019546841000 , status
| | | | E              = Except "<<timeout>>" , start = 2025-09-03 12:47:08.042441778 UTC , finish
| | | | E              = 2025-09-03 12:47:11.061988619 UTC , thread_cap_info = ("ThreadId 71",
| | | | E              0, False)}
| | | | E              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 7 , total_length
| | | | | F            = 131} , self = 58 , parent = Nothing , duration = 0.902597081000 , status
| | | | | F            = Fail , start = 2025-09-03 12:47:08.042461722 UTC , finish = 2025-09-03
| | | | | F            12:47:08.945058803 UTC , thread_cap_info = ("ThreadId 53", 1, False)}
| | | | | F            
| | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
| | | | | | E          = 96} , self = 92 , parent = Nothing , duration = 4.392272951000 , status
| | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:47:08.081105475 UTC ,
| | | | | | E          finish = 2025-09-03 12:47:12.473378426 UTC , thread_cap_info = ("ThreadId
| | | | | | E          83", 1, False)}
| | | | | | E          
| | | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | | | | E        = 26 , num_top_rules = 26 , num_weak_rules = 18 , alphabet_size = 13 ,
| | | | | | | E        total_length = 1206} , self = 72 , parent = Nothing , duration = 3.014736901000
| | | | | | | E        , status = Except "<<timeout>>" , start = 2025-09-03 12:47:08.186479497
| | | | | | | E        UTC , finish = 2025-09-03 12:47:11.201216398 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        97", 2, False)}
| | | | | | | E        
| | | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | | | | | E      = 26 , num_top_rules = 26 , num_weak_rules = 18 , alphabet_size = 13 ,
| | | | | | | | E      total_length = 1206} , self = 71 , parent = Nothing , duration = 3.014721421000
| | | | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-03 12:47:08.186483832
| | | | | | | | E      UTC , finish = 2025-09-03 12:47:11.201205253 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E      98", 2, False)}
| | | | | | | | E      
| | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | | | | | | E    = 17 , num_top_rules = 17 , num_weak_rules = 30 , alphabet_size = 18 ,
| | | | | | | | | E    total_length = 1171} , self = 73 , parent = Nothing , duration = 3.002987411000
| | | | | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-03 12:47:08.301214929
| | | | | | | | | E    UTC , finish = 2025-09-03 12:47:11.30420234 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E    101", 2, False)}
| | | | | | | | | E    
| | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | | | | | | | E  = 17 , num_top_rules = 17 , num_weak_rules = 30 , alphabet_size = 18 ,
| | | | | | | | | | E  total_length = 1171} , self = 74 , parent = Nothing , duration = 3.040963810000
| | | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 12:47:08.321117881
| | | | | | | | | | E  UTC , finish = 2025-09-03 12:47:11.362081691 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E  102", 2, False)}
| | | | | | | | | | E  
| | | | | F | | | | |  
| | | | | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S | | | | |  = 7 , total_length = 131} , self = 60 , parent = Nothing , duration = 0.386418549000
| | | | | S | | | | |  , status = Success , start = 2025-09-03 12:47:09.001794971 UTC , finish
| | | | | S | | | | |  = 2025-09-03 12:47:09.38821352 UTC , thread_cap_info = ("ThreadId 104",
| | | | | S | | | | |  0, False)}
| | | | | S | | | | |  
F | | | | | | | | | |  
E | | | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E | | | | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
E | | | | | | | | | |  = 7 , total_length = 131} , self = 62 , parent = Nothing , duration = 0.341220136000
E | | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:47:09.20113734
E | | | | | | | | | |  UTC , finish = 2025-09-03 12:47:09.542357476 UTC , thread_cap_info = ("ThreadId
E | | | | | | | | | |  107", 0, False)}
E | | | | | | | | | |  
| | | | | S | | | | |  
E | | | |   | | | | |  
F | | | |   | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |   | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F | | | |   | | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 7 , total_length
F | | | |   | | | | |  = 118} , self = 77 , parent = Nothing , duration = 1.962236429000 , status
F | | | |   | | | | |  = Fail , start = 2025-09-03 12:47:09.801950453 UTC , finish = 2025-09-03
F | | | |   | | | | |  12:47:11.764186882 UTC , thread_cap_info = ("ThreadId 112", 0, False)}
F | | | |   | | | | |  
| | | | | F | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F | | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 7 , total_length
| | | | | F | | | | |  = 118} , self = 75 , parent = Nothing , duration = 1.605639396000 , status
| | | | | F | | | | |  = Fail , start = 2025-09-03 12:47:09.821130519 UTC , finish = 2025-09-03
| | | | | F | | | | |  12:47:11.426769915 UTC , thread_cap_info = ("ThreadId 113", 0, False)}
| | | | | F | | | | |  
| E | | | | | | | | |  
|   | | E | | | | | |  
|   E |   | | | | | |  
|     E   | | | | | |  
| F       | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F       | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F       | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F       | | | | | |  = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| F       | | | | | |  = 7 , total_length = 184} , self = 76 , parent = Nothing , duration = 0.597756053000
| F       | | | | | |  , status = Fail , start = 2025-09-03 12:47:11.14183052 UTC , finish = 2025-09-03
| F       | | | | | |  12:47:11.739586573 UTC , thread_cap_info = ("ThreadId 120", 0, False)}
| F       | | | | | |  
| | E     | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E     | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E     | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E     | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E     | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E     | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E     | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | E     | | | | | |  = 7 , total_length = 184} , self = 82 , parent = Nothing , duration = 1.195528936000
| | E     | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:47:11.16199348
| | E     | | | | | |  UTC , finish = 2025-09-03 12:47:12.357522416 UTC , thread_cap_info = ("ThreadId
| | E     | | | | | |  121", 0, False)}
| | E     | | | | | |  
| | |     | | | E | |  
| | |     | | E   | |  
| | |     | |     E |  
| | |     | |       E  
| | |     F |          
| | | S     |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S     |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S     |          = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | S     |          = 7 , total_length = 118} , self = 80 , parent = Nothing , duration = 0.793249160000
| | | S     |          , status = Success , start = 2025-09-03 12:47:11.560575725 UTC , finish
| | | S     |          = 2025-09-03 12:47:12.353824885 UTC , thread_cap_info = ("ThreadId 132",
| | | S     |          0, False)}
| | | S     |          
| F | |     |          
| S | |     |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S | |     |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | |     |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S | |     |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |     |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |     |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S | |     |          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| S | |     |          = 7 , total_length = 184} , self = 78 , parent = Nothing , duration = 0.583324503000
| S | |     |          , status = Success , start = 2025-09-03 12:47:11.739624857 UTC , finish
| S | |     |          = 2025-09-03 12:47:12.32294936 UTC , thread_cap_info = ("ThreadId 133",
| S | |     |          0, False)}
| S | |     |          
F | | |     |          
E | | |     |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |     |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |     |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |     |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |     |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |     |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | | |     |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
E | | |     |          = 7 , total_length = 118} , self = 84 , parent = Nothing , duration = 0.576600978000
E | | |     |          , status = Except "AsyncCancelled" , start = 2025-09-03 12:47:11.781143898
E | | |     |          UTC , finish = 2025-09-03 12:47:12.357744876 UTC , thread_cap_info = ("ThreadId
E | | |     |          134", 0, False)}
E | | |     |          
| S | |     |          
|   | S     |          
|   E       |          
E           |          
            E          
