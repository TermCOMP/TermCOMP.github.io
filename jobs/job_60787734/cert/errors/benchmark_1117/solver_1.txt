last 814 length 3241
CNF 814 vars 3241 clauses
last 623 length 2458
CNF 623 vars 2458 clauses
last 4342 length 19735
CNF 4342 vars 19735 clauses
last 5544 length 27065
CNF 5544 vars 27065 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2484, clauses: 9191
last 2484 length 9191
last 746 length 3014
CNF 746 vars 3014 clauses
last 609 length 2545
CNF 609 vars 2545 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2168, clauses: 7926
CNF 2484 vars 9191 clauses
last 2168 length 7926
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5625, clauses: 23103
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6258, clauses: 25782
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2484, clauses: 9191, status: Satisfied, time: 0.348097428s
last 11417 length 53586
CNF 2168 vars 7926 clauses
last 5625 length 23103
last 16055 length 69459
last 12595 length 57961
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2168, clauses: 7926, status: Satisfied, time: 0.494592809s
CNF 11417 vars 53586 clauses
last 595 length 2364
CNF 5625 vars 23103 clauses
last 744 length 2972
CNF 12595 vars 57961 clauses
CNF 16055 vars 69459 clauses
last 18271 length 78296
CNF 595 vars 2364 clauses
CNF 744 vars 2972 clauses
last 584 length 2479
last 536 length 2225
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8730
CNF 584 vars 2479 clauses
CNF 18271 vars 78296 clauses
CNF 536 vars 2225 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18198, clauses: 74246
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6212, clauses: 25606
last 2378 length 8730
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1944, clauses: 6920
last 18198 length 74246
last 6212 length 25606
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22132, clauses: 90349
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5533, clauses: 22745
last 1944 length 6920
CNF 6212 vars 25606 clauses
last 22132 length 90349
last 5533 length 22745
CNF 18198 vars 74246 clauses
CNF 1944 vars 6920 clauses
CNF 2378 vars 8730 clauses
CNF 5533 vars 22745 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6212, clauses: 25606, status: Satisfied, time: 0.143662352s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1944, clauses: 6920, status: Satisfied, time: 0.134140137s
CNF 22132 vars 90349 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8730, status: Satisfied, time: 0.62567521s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18198, clauses: 74246, status: Satisfied, time: 0.278551882s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b] -> [c, c, a, c] {- Input 1 -}
  [c, c] -> [b, a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, a, b] -> [c, c, a, c] {- Input 1 -}
  [c, c] -> [b, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b, a, a] -> [c, a, c, c] {- Mirror (Input 1) -}
  [c, c] -> [a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [a#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, c] |-> [a#, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, c] |-> [b#] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, c] |-> [b#] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, c] |-> [b#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, a, a] |-> [c#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, c] |-> [b#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, a, a] |-> [c#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, c] |-> [b#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, a, a] |-> [c#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 7A 7A 8A - \
        | 7A 7A 8A - |
        | 7A 7A 8A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 7A 7A 10A - \
        | 7A 7A 10A - |
        | 7A 7A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [c#, a, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [c, a, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(4/5,5)\Matrix{\Arctic}{3}\EDG(2/5,5)\Matrix{\Arctic}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.583342857000
  min duration 0.025954020000
  total durat. 4.173069390000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 77
    , parent = Nothing
    , duration = 1.103590163000
    , status = Fail
    , start = 2025-09-03 11:01:32.811437823 UTC
    , finish = 2025-09-03 11:01:33.915027986 UTC
    , thread_cap_info = ("ThreadId 90", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 102
      , num_strict_rules = 75
      , num_top_rules = 75
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 612}
    , self = 81
    , parent = Nothing
    , duration = 1.583342857000
    , status = Fail
    , start = 2025-09-03 11:01:32.912845839 UTC
    , finish = 2025-09-03 11:01:34.496188696 UTC
    , thread_cap_info = ("ThreadId 101", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.922157651000
  min duration 0.019937979000
  total durat. 3.034894094000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.768131084000
  min duration 0.365827565000
  total durat. 1.734646653000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.209093035000
  min duration 0.512513113000
  total durat. 3.094443376000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 90
    , parent = Nothing
    , duration = 1.209093035000
    , status = Success
    , start = 2025-09-03 11:01:33.734344632 UTC
    , finish = 2025-09-03 11:01:34.943437667 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                = 162} , self = 57 , parent = Nothing , duration = 0.173697250000 , status
F                = Fail , start = 2025-09-03 11:01:32.762024791 UTC , finish = 2025-09-03
F                11:01:32.935722041 UTC , thread_cap_info = ("ThreadId 67", 0, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 162} , self = 58 , parent = Nothing , duration = 0.173990238000 , status
| F              = Fail , start = 2025-09-03 11:01:32.762033961 UTC , finish = 2025-09-03
| F              11:01:32.936024199 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | F            = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F            total_length = 510} , self = 77 , parent = Nothing , duration = 1.103590163000
| | F            , status = Fail , start = 2025-09-03 11:01:32.811437823 UTC , finish =
| | F            2025-09-03 11:01:33.915027986 UTC , thread_cap_info = ("ThreadId 90", 1,
| | F            False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | F          = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | F          total_length = 510} , self = 70 , parent = Nothing , duration = 0.922157651000
| | | F          , status = Fail , start = 2025-09-03 11:01:32.812067787 UTC , finish =
| | | F          2025-09-03 11:01:33.734225438 UTC , thread_cap_info = ("ThreadId 91", 1,
| | | F          False)}
| | | F          
| | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S        = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | S        alphabet_size = 5 , total_length = 45} , self = 61 , parent = Nothing ,
| | | | S        duration = 0.615490078000 , status = Success , start = 2025-09-03 11:01:32.907089069
| | | | S        UTC , finish = 2025-09-03 11:01:33.522579147 UTC , thread_cap_info = ("ThreadId
| | | | S        99", 3, False)}
| | | | S        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | F      = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | F      total_length = 612} , self = 81 , parent = Nothing , duration = 1.583342857000
| | | | | F      , status = Fail , start = 2025-09-03 11:01:32.912845839 UTC , finish =
| | | | | F      2025-09-03 11:01:34.496188696 UTC , thread_cap_info = ("ThreadId 101",
| | | | | F      1, False)}
| | | | | F      
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | E    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | E    = 5 , total_length = 45} , self = 63 , parent = Nothing , duration = 0.600688004000
| | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 11:01:32.932072288
| | | | | | E    UTC , finish = 2025-09-03 11:01:33.532760292 UTC , thread_cap_info = ("ThreadId
| | | | | | E    106", 3, False)}
| | | | | | E    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 102 , num_strict_rules
| | | | | | | F  = 75 , num_top_rules = 75 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | F  total_length = 612} , self = 76 , parent = Nothing , duration = 0.862988679000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:01:32.932076437 UTC , finish =
| | | | | | | F  2025-09-03 11:01:33.795065116 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | F  1, False)}
| | | | | | | F  
F | | | | | | |  
  F | | | | | |  
S   | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | | | | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
S   | | | | | |  = 5 , total_length = 39} , self = 68 , parent = Nothing , duration = 0.757347150000
S   | | | | | |  , status = Success , start = 2025-09-03 11:01:32.955119331 UTC , finish
S   | | | | | |  = 2025-09-03 11:01:33.712466481 UTC , thread_cap_info = ("ThreadId 112",
S   | | | | | |  3, False)}
S   | | | | | |  
| E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| E | | | | | |  = 5 , total_length = 39} , self = 71 , parent = Nothing , duration = 0.768131084000
| E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:01:32.976327491
| E | | | | | |  UTC , finish = 2025-09-03 11:01:33.744458575 UTC , thread_cap_info = ("ThreadId
| E | | | | | |  113", 3, False)}
| E | | | | | |  
| | | | S | | |  
| | | |   | E |  
| | | | F |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F |   |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F |   |  = 41} , self = 79 , parent = Nothing , duration = 0.488265746000 , status
| | | | F |   |  = Fail , start = 2025-09-03 11:01:33.543893591 UTC , finish = 2025-09-03
| | | | F |   |  11:01:34.032159337 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | F |   |  
| | | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | F |  = 41} , self = 78 , parent = Nothing , duration = 0.379384490000 , status
| | | | | | F |  = Fail , start = 2025-09-03 11:01:33.553855261 UTC , finish = 2025-09-03
| | | | | | F |  11:01:33.933239751 UTC , thread_cap_info = ("ThreadId 121", 3, False)}
| | | | | | F |  
S | | | | | | |  
  | | F | | | |  
S | |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | |   | | | |  = 82 , num_strict_rules = 55 , num_top_rules = 55 , num_weak_rules = 27
S | |   | | | |  , alphabet_size = 15 , total_length = 510} , self = 90 , parent = Nothing
S | |   | | | |  , duration = 1.209093035000 , status = Success , start = 2025-09-03 11:01:33.734344632
S | |   | | | |  UTC , finish = 2025-09-03 11:01:34.943437667 UTC , thread_cap_info = ("ThreadId
S | |   | | | |  128", 1, False)}
S | |   | | | |  
| E |   | | | |  
| F |   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F |   | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F |   | | | |  = 30} , self = 80 , parent = Nothing , duration = 0.630204515000 , status
| F |   | | | |  = Fail , start = 2025-09-03 11:01:33.744887913 UTC , finish = 2025-09-03
| F |   | | | |  11:01:34.375092428 UTC , thread_cap_info = ("ThreadId 133", 3, False)}
| F |   | | | |  
| | | F | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F | | | |  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F | | | |  = 30} , self = 82 , parent = Nothing , duration = 0.761789601000 , status
| | | F | | | |  = Fail , start = 2025-09-03 11:01:33.750324289 UTC , finish = 2025-09-03
| | | F | | | |  11:01:34.51211389 UTC , thread_cap_info = ("ThreadId 132", 3, False)}
| | | F | | | |  
| | | | | | | F  
| | F | | | |    
| |   | | | F    
| | F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | F | | |      = 5 , total_length = 41} , self = 88 , parent = Nothing , duration = 0.965755581000
| | F | | |      , status = Fail , start = 2025-09-03 11:01:33.952174163 UTC , finish =
| | F | | |      2025-09-03 11:01:34.917929744 UTC , thread_cap_info = ("ThreadId 137",
| | F | | |      3, False)}
| | F | | |      
| | | | F |      
| | | | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | S |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | S |      = 5 , total_length = 41} , self = 83 , parent = Nothing , duration = 0.834077474000
| | | | S |      , status = Success , start = 2025-09-03 11:01:34.040741776 UTC , finish
| | | | S |      = 2025-09-03 11:01:34.87481925 UTC , thread_cap_info = ("ThreadId 139",
| | | | S |      3, False)}
| | | | S |      
| F | | | |      
| S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| S | | | |      = 5 , total_length = 30} , self = 85 , parent = Nothing , duration = 0.512513113000
| S | | | |      , status = Success , start = 2025-09-03 11:01:34.375157082 UTC , finish
| S | | | |      = 2025-09-03 11:01:34.887670195 UTC , thread_cap_info = ("ThreadId 141",
| S | | | |      3, False)}
| S | | | |      
| | | | | F      
| | | F |        
| | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | E |        = 5 , total_length = 30} , self = 87 , parent = Nothing , duration = 0.365827565000
| | | E |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:01:34.552081637
| | | E |        UTC , finish = 2025-09-03 11:01:34.917909202 UTC , thread_cap_info = ("ThreadId
| | | E |        143", 3, False)}
| | | E |        
| | | | S        
| S | |          
|   | E          
|   F            
S                
