last 5862 length 36733
CNF 5862 vars 36733 clauses
last 5256 length 27149
last 4728 length 26372
CNF 5256 vars 27149 clauses
CNF 4728 vars 26372 clauses
last 3770 length 21665
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2938, clauses: 11509
last 2938 length 11509
CNF 3770 vars 21665 clauses
last 6105 length 33896
CNF 2938 vars 11509 clauses
last 6513 length 44742
CNF 6105 vars 33896 clauses
CNF 6513 vars 44742 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1802, clauses: 6912
last 1802 length 6912
CNF 1802 vars 6912 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2926, clauses: 10792
last 2926 length 10792
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1802, clauses: 6912, status: Unsatisfied, time: 0.219460294s
CNF 2926 vars 10792 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6216, clauses: 25893
last 6216 length 25893
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2938, clauses: 11509, status: Unsatisfied, time: 0.720284492s
CNF 6216 vars 25893 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10118, clauses: 42577
last 10118 length 42577
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3707, clauses: 15572
last 3707 length 15572
CNF 3707 vars 15572 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2926, clauses: 10792, status: Unsatisfied, time: 0.720226161s
CNF 10118 vars 42577 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6101, clauses: 26264
last 6101 length 26264
CNF 6101 vars 26264 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10491, clauses: 43862
last 10491 length 43862
CNF 10491 vars 43862 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3707, clauses: 15572, status: Unsatisfied, time: 0.785417884s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3000, clauses: 11967
last 3000 length 11967
CNF 3000 vars 11967 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6229, clauses: 26657
last 6229 length 26657
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10491, clauses: 43862, status: Satisfied, time: 1.141614421s
CNF 6229 vars 26657 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 9 rules on 7 letters       weights
SRS with 6 rules on 7 letters       DP
SRS with 24 strict rules and 6 weak rules on 10 letters       weights
SRS with 12 strict rules and 6 weak rules on 10 letters       EDG
SRS with 2 strict rules and 6 weak rules on 8 letters       Usable
SRS with 2 strict rules and 2 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 5 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, c, a, b, b, c, a, b] -> [ a , b , b , c , a , b , c , a , b , b , c , a ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, a] ] -> [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] -> [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] -> [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, a] ] -> [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] -> [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] -> [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, a] ] -> [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] -> [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] -> [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] -> [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] -> [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] -> [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] -> [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] -> [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] -> [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 0)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] ] {- DP (Top 11) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 7) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 7) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, c] ] {- DP (Top 11) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 7) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 4) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, c] ] {- DP (Top 11) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 7) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 7) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, c] ] {- DP (Top 11) (Semlab 2 (Concon 2 (Input 0))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([a, a]#, 1/1)
  ([b, a]#, 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [b, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 7) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 7) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] |-> [ [c, a]# , [a, c] ] {- DP (Top 11) (Semlab 2 (Concon 2 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  remove un-usable
    SRS
      [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [a, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
      [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [b, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
   property Termination
has value Just True
for SRS
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] ] {- DP (Top 11) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] |-> [ [c, a]# , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  ( [a, b]
  , Wk  / 0A -  -  \
        | 1A 0A 1A |
        \ -  -  0A / )
  ( [a, c]
  , Wk  / 0A  - -1A \
        | -1A - -   |
        \ -   - 0A  / )
  ( [b, b]
  , Wk  / 0A 1A -1A \
        | 2A -  2A  |
        \ -  -  0A  / )
  ( [b, c]
  , Wk  / 0A -  -  \
        | -  0A -  |
        \ -  -  0A / )
  ( [c, a]
  , Wk  / 0A -   -  \
        | -  -1A -  |
        \ -  -   0A / )
  ( [c, a]#
  , Wk  / 0A -2A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, b] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] ] ->= [ [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, b] , [b, c] , [c, a] , [a, b] , [b, b] , [b, c] , [c, a] , [a, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
reason
  EDG

**************************************************
skeleton: (1,3)\TileAllAll{2}(9,7)\Weight(6,7)\Deepee(24/6,10)\Weight(12/6,10)\EDG(2/6,8)\Usable(2/2,6)\Matrix{\ArcticBZ}{3}(0/2,5)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6216, clauses: 25893, status: Unsatisfied, time: 1.993887028s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6101, clauses: 26264, status: Satisfied, time: 1.508049548s
Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6207, clauses: 25427
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10118, clauses: 42577, status: Satisfied, time: 1.824473598s
last 6207 length 25427
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.832883630000
  min duration 0.618031765000
  total durat. 2.131347830000
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.018346318000
  min duration 3.018346318000
  total durat. 3.018346318000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 6
      , alphabet_size = 9
      , total_length = 308}
    , self = 67
    , parent = Nothing
    , duration = 3.018346318000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:40.09573236 UTC
    , finish = 2025-09-03 12:47:43.114078678 UTC
    , thread_cap_info = ("ThreadId 96", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.186352500000
  min duration 3.186352500000
  total durat. 3.186352500000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 138}
    , self = 68
    , parent = Nothing
    , duration = 3.186352500000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:39.978655393 UTC
    , finish = 2025-09-03 12:47:43.165007893 UTC
    , thread_cap_info = ("ThreadId 79", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.697172996000
  min duration 0.401114003000
  total durat. 1.728836458000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.059721752000
  min duration 3.059721752000
  total durat. 3.059721752000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 6
      , alphabet_size = 9
      , total_length = 308}
    , self = 69
    , parent = Nothing
    , duration = 3.059721752000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:47:40.110707158 UTC
    , finish = 2025-09-03 12:47:43.17042891 UTC
    , thread_cap_info = ("ThreadId 97", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.192342379000
  min duration 3.192342379000
  total durat. 3.192342379000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 138}
    , self = 70
    , parent = Nothing
    , duration = 3.192342379000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:39.978668267 UTC
    , finish = 2025-09-03 12:47:43.171010646 UTC
    , thread_cap_info = ("ThreadId 82", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.417046933000
  min duration 2.417046933000
  total durat. 2.417046933000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 77}
    , self = 71
    , parent = Nothing
    , duration = 2.417046933000
    , status = Success
    , start = 2025-09-03 12:47:40.768940992 UTC
    , finish = 2025-09-03 12:47:43.185987925 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.257045014000
  min duration 1.257045014000
  total durat. 1.257045014000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 4
      , total_length = 48}
    , self = 66
    , parent = Nothing
    , duration = 1.257045014000
    , status = Fail
    , start = 2025-09-03 12:47:41.09317034 UTC
    , finish = 2025-09-03 12:47:42.350215354 UTC
    , thread_cap_info = ("ThreadId 118", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.452544235000
  min duration 1.452544235000
  total durat. 1.452544235000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 6
      , total_length = 77}
    , self = 73
    , parent = Nothing
    , duration = 1.452544235000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:47:41.810657964 UTC
    , finish = 2025-09-03 12:47:43.263202199 UTC
    , thread_cap_info = ("ThreadId 123", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.974372856000
  min duration 0.293967078000
  total durat. 2.134850543000
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 21} , self
F                      = 55 , parent = Nothing , duration = 0.298986210000 , status = Fail , start
F                      = 2025-09-03 12:47:39.972628899 UTC , finish = 2025-09-03 12:47:40.271615109
F                      UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                    = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| F                    = 85} , self = 61 , parent = Nothing , duration = 0.832883630000 , status
| F                    = Fail , start = 2025-09-03 12:47:39.977785401 UTC , finish = 2025-09-03
| F                    12:47:40.810669031 UTC , thread_cap_info = ("ThreadId 57", 0, False)}
| F                    
| | E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | E                  = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | E                  = 138} , self = 68 , parent = Nothing , duration = 3.186352500000 , status
| | E                  = Except "AsyncCancelled" , start = 2025-09-03 12:47:39.978655393 UTC ,
| | E                  finish = 2025-09-03 12:47:43.165007893 UTC , thread_cap_info = ("ThreadId
| | E                  79", 2, False)}
| | E                  
| | | E                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | E                = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | | E                = 138} , self = 70 , parent = Nothing , duration = 3.192342379000 , status
| | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:47:39.978668267 UTC ,
| | | E                finish = 2025-09-03 12:47:43.171010646 UTC , thread_cap_info = ("ThreadId
| | | E                82", 2, False)}
| | | E                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F              = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | F              = 85} , self = 57 , parent = Nothing , duration = 0.401114003000 , status
| | | | F              = Fail , start = 2025-09-03 12:47:39.988961367 UTC , finish = 2025-09-03
| | | | F              12:47:40.39007537 UTC , thread_cap_info = ("ThreadId 63", 0, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 6 , total_length
| | | | | F            = 77} , self = 58 , parent = Nothing , duration = 0.697172996000 , status
| | | | | F            = Fail , start = 2025-09-03 12:47:39.992499145 UTC , finish = 2025-09-03
| | | | | F            12:47:40.689672141 UTC , thread_cap_info = ("ThreadId 90", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 6 , total_length
| | | | | | F          = 77} , self = 59 , parent = Nothing , duration = 0.680432435000 , status
| | | | | | F          = Fail , start = 2025-09-03 12:47:40.00924989 UTC , finish = 2025-09-03
| | | | | | F          12:47:40.689682325 UTC , thread_cap_info = ("ThreadId 89", 1, False)}
| | | | | | F          
| | | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | E        = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 9 , total_length
| | | | | | | E        = 308} , self = 67 , parent = Nothing , duration = 3.018346318000 , status
| | | | | | | E        = Except "<<timeout>>" , start = 2025-09-03 12:47:40.09573236 UTC , finish
| | | | | | | E        = 2025-09-03 12:47:43.114078678 UTC , thread_cap_info = ("ThreadId 96",
| | | | | | | E        1, False)}
| | | | | | | E        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | | | F      = 48} , self = 60 , parent = Nothing , duration = 0.618031765000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 12:47:40.110683755 UTC , finish = 2025-09-03
| | | | | | | | F      12:47:40.72871552 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | | | | | | F      
| | | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | E    = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 9 , total_length
| | | | | | | | | E    = 308} , self = 69 , parent = Nothing , duration = 3.059721752000 , status
| | | | | | | | | E    = Except "<<timeout>>" , start = 2025-09-03 12:47:40.110707158 UTC , finish
| | | | | | | | | E    = 2025-09-03 12:47:43.17042891 UTC , thread_cap_info = ("ThreadId 97",
| | | | | | | | | E    1, False)}
| | | | | | | | | E    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 4 , total_length
| | | | | | | | | | F  = 48} , self = 62 , parent = Nothing , duration = 0.630549459000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 12:47:40.18290418 UTC , finish = 2025-09-03
| | | | | | | | | | F  12:47:40.813453639 UTC , thread_cap_info = ("ThreadId 99", 0, False)}
| | | | | | | | | | F  
F | | | | | | | | | |  
  | | | F | | | | | |  
F | | |   | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |   | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |   | | | | | |  = 5 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
F | | |   | | | | | |  = 4 , total_length = 85} , self = 64 , parent = Nothing , duration = 0.866510609000
F | | |   | | | | | |  , status = Fail , start = 2025-09-03 12:47:40.488944493 UTC , finish =
F | | |   | | | | | |  2025-09-03 12:47:41.355455102 UTC , thread_cap_info = ("ThreadId 104",
F | | |   | | | | | |  0, False)}
F | | |   | | | | | |  
| | | |   F | | | | |  
| | | |     F | | | |  
| | | |       | F | |  
| | | | F     |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F     |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F     |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F     |   | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | F     |   | |  = 4 , total_length = 48} , self = 63 , parent = Nothing , duration = 0.293967078000
| | | | F     |   | |  , status = Fail , start = 2025-09-03 12:47:40.743128256 UTC , finish =
| | | | F     |   | |  2025-09-03 12:47:41.037095334 UTC , thread_cap_info = ("ThreadId 111",
| | | | F     |   | |  0, False)}
| | | | F     |   | |  
| | | | | F   |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   |   | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F   |   | |  = 6 , total_length = 77} , self = 65 , parent = Nothing , duration = 0.974372856000
| | | | | F   |   | |  , status = Fail , start = 2025-09-03 12:47:40.749816629 UTC , finish =
| | | | | F   |   | |  2025-09-03 12:47:41.724189485 UTC , thread_cap_info = ("ThreadId 112",
| | | | | F   |   | |  1, False)}
| | | | | F   |   | |  
| | | | | | S |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | S |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | S |   | |  = 6 , total_length = 77} , self = 71 , parent = Nothing , duration = 2.417046933000
| | | | | | S |   | |  , status = Success , start = 2025-09-03 12:47:40.768940992 UTC , finish
| | | | | | S |   | |  = 2025-09-03 12:47:43.185987925 UTC , thread_cap_info = ("ThreadId 113",
| | | | | | S |   | |  1, False)}
| | | | | | S |   | |  
| F | | | | | |   | |  
|   | | | | | |   | F  
|   | | F | | |   |    
| F | |   | | |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |   | | |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |   | | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |   | | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |   | | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |   | | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| F | |   | | |   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| F | |   | | |   |    = 4 , total_length = 48} , self = 66 , parent = Nothing , duration = 1.257045014000
| F | |   | | |   |    , status = Fail , start = 2025-09-03 12:47:41.09317034 UTC , finish = 2025-09-03
| F | |   | | |   |    12:47:42.350215354 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| F | |   | | |   |    
F | | |   | | |   |    
  | | |   F | |   |    
E | | |     | |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |     | |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |     | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |     | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |     | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |     | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E | | |     | |   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
E | | |     | |   |    = 6 , total_length = 77} , self = 73 , parent = Nothing , duration = 1.452544235000
E | | |     | |   |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:47:41.810657964
E | | |     | |   |    UTC , finish = 2025-09-03 12:47:43.263202199 UTC , thread_cap_info = ("ThreadId
E | | |     | |   |    123", 1, False)}
E | | |     | |   |    
| F | |     | |   |    
|   | |     | E   |    
|   E |     |     |    
|     |     |     E    
|     E     |          
|           S          
E                      
