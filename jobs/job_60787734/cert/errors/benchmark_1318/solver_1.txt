last 574 length 2245
last 666 length 2639
CNF 666 vars 2639 clauses
last 596 length 2371
CNF 574 vars 2245 clauses
last 565 length 2326
CNF 596 vars 2371 clauses
last 4331 length 21737
CNF 4331 vars 21737 clauses
CNF 565 vars 2326 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8637
last 2384 length 8637
last 3836 length 17403
CNF 3836 vars 17403 clauses
CNF 2384 vars 8637 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28111
last 6801 length 28111
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2093, clauses: 7584
last 2093 length 7584
CNF 2093 vars 7584 clauses
CNF 6801 vars 28111 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8637, status: Unsatisfied, time: 0.219792669s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6675, clauses: 27702
last 6675 length 27702
CNF 6675 vars 27702 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2093, clauses: 7584, status: Unsatisfied, time: 0.111808051s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4294, clauses: 17181
last 4294 length 17181
CNF 4294 vars 17181 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4138, clauses: 16660
last 4138 length 16660
CNF 4138 vars 16660 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4294, clauses: 17181, status: Satisfied, time: 0.16151008s
last 9540 length 44712
last 11929 length 52144
CNF 9540 vars 44712 clauses
last 546 length 2151
last 596 length 2370
CNF 11929 vars 52144 clauses
CNF 546 vars 2151 clauses
CNF 596 vars 2370 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8176
last 2278 length 8176
CNF 2278 vars 8176 clauses
last 7424 length 29566
CNF 7424 vars 29566 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8176, status: Unsatisfied, time: 0.134938667s
last 12316 length 51616
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27935
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6675, clauses: 27702, status: Unsatisfied, time: 1.013154103s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16895
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15944, clauses: 62994
CNF 12316 vars 51616 clauses
last 6755 length 27935
last 4219 length 16895
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3428, clauses: 13203
last 15944 length 62994
CNF 6755 vars 27935 clauses
last 3428 length 13203
CNF 4219 vars 16895 clauses
CNF 15944 vars 62994 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18012, clauses: 71546
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4138, clauses: 16660, status: Unsatisfied, time: 1.817620183s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 47439, clauses: 199014
CNF 3428 vars 13203 clauses
last 18012 length 71546
last 47439 length 199014
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16895, status: Satisfied, time: 0.968735031s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15944, clauses: 62994, status: Satisfied, time: 0.965284861s
CNF 18012 vars 71546 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3428, clauses: 13203, status: Unsatisfied, time: 0.900748018s
CNF 47439 vars 199014 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, c, b] -> [b, a, a, c] {- Input 1 -}
  [b, b] -> [] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, c, b] -> [b, a, a, c] {- Input 1 -}
  [a, b, b] -> [a] {- Input 2 -}
  [b, b, b] -> [b] {- Input 2 -}
  [c, b, b] -> [c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [b, c, a] -> [c, a, a, b] {- Mirror (Input 1) -}
  [b, b, a] -> [a] {- Mirror (Input 2) -}
  [b, b, b] -> [b] {- Mirror (Input 2) -}
  [b, b, c] -> [c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, c, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1 0 0 \
        | 1 0 2 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 0 2 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 3 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 3 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, c, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1 0 1 \
        | 2 0 3 |
        \ 0 0 1 / )
  ( b
  , Wk  / 2 0 0 \
        | 1 0 1 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 0 0 1 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 1 0 2 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 0 1 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a] ->= [c, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, a, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, c] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee\EDG(4/5,5)\Matrix{\Natural}{3}\EDG(3/5,5)\Matrix{\Natural}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11539, clauses: 48202
= last 11539 length 48202
Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.764998313000
  min duration 0.039820317000
  total durat. 3.058119475000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 79
      , num_strict_rules = 52
      , num_top_rules = 52
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 451}
    , self = 79
    , parent = Nothing
    , duration = 1.764998313000
    , status = Fail
    , start = 2025-09-03 11:30:27.99483872 UTC
    , finish = 2025-09-03 11:30:29.759837033 UTC
    , thread_cap_info = ("ThreadId 110", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.007213895000
  min duration 0.055103161000
  total durat. 2.092344131000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 79
      , num_strict_rules = 52
      , num_top_rules = 52
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 451}
    , self = 77
    , parent = Nothing
    , duration = 1.007213895000
    , status = Fail
    , start = 2025-09-03 11:30:28.014799926 UTC
    , finish = 2025-09-03 11:30:29.022013821 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.459917666000
  min duration 1.459917666000
  total durat. 1.459917666000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 33}
    , self = 78
    , parent = Nothing
    , duration = 1.459917666000
    , status = Fail
    , start = 2025-09-03 11:30:27.977253384 UTC
    , finish = 2025-09-03 11:30:29.43717105 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.954267635000
  min duration 0.607440463000
  total durat. 2.561708098000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 35}
    , self = 83
    , parent = Nothing
    , duration = 1.954267635000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:30:28.722442466 UTC
    , finish = 2025-09-03 11:30:30.676710101 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.566898117000
  min duration 0.261659602000
  total durat. 1.828557719000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 35}
    , self = 81
    , parent = Nothing
    , duration = 1.566898117000
    , status = Success
    , start = 2025-09-03 11:30:29.039606785 UTC
    , finish = 2025-09-03 11:30:30.606504902 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.170112950000
  min duration 2.170112950000
  total durat. 2.170112950000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 33}
    , self = 80
    , parent = Nothing
    , duration = 2.170112950000
    , status = Fail
    , start = 2025-09-03 11:30:28.236282886 UTC
    , finish = 2025-09-03 11:30:30.406395836 UTC
    , thread_cap_info = ("ThreadId 118", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.050669522000
  min duration 2.050669522000
  total durat. 2.050669522000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 64
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 394}
    , self = 85
    , parent = Nothing
    , duration = 2.050669522000
    , status = Success
    , start = 2025-09-03 11:30:28.647055153 UTC
    , finish = 2025-09-03 11:30:30.697724675 UTC
    , thread_cap_info = ("ThreadId 129", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.266893022000
  min duration 1.266893022000
  total durat. 1.266893022000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 33}
    , self = 88
    , parent = Nothing
    , duration = 1.266893022000
    , status = Fail
    , start = 2025-09-03 11:30:29.524196436 UTC
    , finish = 2025-09-03 11:30:30.791089458 UTC
    , thread_cap_info = ("ThreadId 142", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.137249274000
  min duration 1.137249274000
  total durat. 1.137249274000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 75
    , parent = Nothing
    , duration = 1.137249274000
    , status = Fail
    , start = 2025-09-03 11:30:27.807527216 UTC
    , finish = 2025-09-03 11:30:28.94477649 UTC
    , thread_cap_info = ("ThreadId 34", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.042510164000
  min duration 2.042510164000
  total durat. 2.042510164000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 89
    , parent = Nothing
    , duration = 2.042510164000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:30:28.754794266 UTC
    , finish = 2025-09-03 11:30:30.79730443 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 12} , self = 75 , parent = Nothing , duration = 1.137249274000 , status
F                      = Fail , start = 2025-09-03 11:30:27.807527216 UTC , finish = 2025-09-03
F                      11:30:28.94477649 UTC , thread_cap_info = ("ThreadId 34", 0, False)}
F                      
| F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                    = 12} , self = 74 , parent = Nothing , duration = 0.932064453000 , status
| F                    = Fail , start = 2025-09-03 11:30:27.807869182 UTC , finish = 2025-09-03
| F                    11:30:28.739933635 UTC , thread_cap_info = ("ThreadId 52", 3, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                  = 162} , self = 60 , parent = Nothing , duration = 0.295092222000 , status
| | F                  = Fail , start = 2025-09-03 11:30:27.809298707 UTC , finish = 2025-09-03
| | F                  11:30:28.104390929 UTC , thread_cap_info = ("ThreadId 61", 2, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 162} , self = 53 , parent = Nothing , duration = 0.165262947000 , status
| | | F                = Fail , start = 2025-09-03 11:30:27.809301718 UTC , finish = 2025-09-03
| | | F                11:30:27.974564665 UTC , thread_cap_info = ("ThreadId 63", 2, False)}
| | | F                
| | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F              = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | F              = 5 , total_length = 39} , self = 61 , parent = Nothing , duration = 0.281585339000
| | | | F              , status = Fail , start = 2025-09-03 11:30:27.889816137 UTC , finish =
| | | | F              2025-09-03 11:30:28.171401476 UTC , thread_cap_info = ("ThreadId 88", 3,
| | | | F              False)}
| | | | F              
| | | | | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | E            , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | E            = 5 , total_length = 39} , self = 65 , parent = Nothing , duration = 0.607440463000
| | | | | E            , status = Except "AsyncCancelled" , start = 2025-09-03 11:30:27.915036432
| | | | | E            UTC , finish = 2025-09-03 11:30:28.522476895 UTC , thread_cap_info = ("ThreadId
| | | | | E            90", 3, False)}
| | | | | E            
| | | F | |            
| | | F | |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |            = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F | |            = 4 , total_length = 33} , self = 62 , parent = Nothing , duration = 0.248048982000
| | | F | |            , status = Fail , start = 2025-09-03 11:30:27.974831513 UTC , finish =
| | | F | |            2025-09-03 11:30:28.222880495 UTC , thread_cap_info = ("ThreadId 100",
| | | F | |            3, False)}
| | | F | |            
| | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | F          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | F          = 4 , total_length = 33} , self = 78 , parent = Nothing , duration = 1.459917666000
| | | | | | F          , status = Fail , start = 2025-09-03 11:30:27.977253384 UTC , finish =
| | | | | | F          2025-09-03 11:30:29.43717105 UTC , thread_cap_info = ("ThreadId 101", 3,
| | | | | | F          False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | | | | F        = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | F        total_length = 394} , self = 71 , parent = Nothing , duration = 0.737392960000
| | | | | | | F        , status = Fail , start = 2025-09-03 11:30:27.980726305 UTC , finish =
| | | | | | | F        2025-09-03 11:30:28.718119265 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | F        2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | | | | | F      = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | | F      total_length = 394} , self = 70 , parent = Nothing , duration = 0.664473859000
| | | | | | | | F      , status = Fail , start = 2025-09-03 11:30:27.982509923 UTC , finish =
| | | | | | | | F      2025-09-03 11:30:28.646983782 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | F      2, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | | | | | | | F    = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | F    total_length = 451} , self = 79 , parent = Nothing , duration = 1.764998313000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 11:30:27.99483872 UTC , finish = 2025-09-03
| | | | | | | | | F    11:30:29.759837033 UTC , thread_cap_info = ("ThreadId 110", 0, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | | | | | | | | F  = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | | F  total_length = 451} , self = 77 , parent = Nothing , duration = 1.007213895000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:30:28.014799926 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:30:29.022013821 UTC , thread_cap_info = ("ThreadId 111",
| | | | | | | | | | F  0, False)}
| | | | | | | | | | F  
| | F | | | | | | | |  
| |   | F | | | | | |  
| | S |   | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | S |   | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | S |   | | | | | |  = 5 , total_length = 39} , self = 63 , parent = Nothing , duration = 0.261659602000
| | S |   | | | | | |  , status = Success , start = 2025-09-03 11:30:28.174714668 UTC , finish
| | S |   | | | | | |  = 2025-09-03 11:30:28.43637427 UTC , thread_cap_info = ("ThreadId 115",
| | S |   | | | | | |  3, False)}
| | S |   | | | | | |  
| | | F   | | | | | |  
| | | F   | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F   | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F   | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F   | | | | | |  = 4 , total_length = 33} , self = 80 , parent = Nothing , duration = 2.170112950000
| | | F   | | | | | |  , status = Fail , start = 2025-09-03 11:30:28.236282886 UTC , finish =
| | | F   | | | | | |  2025-09-03 11:30:30.406395836 UTC , thread_cap_info = ("ThreadId 118",
| | | F   | | | | | |  3, False)}
| | | F   | | | | | |  
| | S |   | | | | | |  
| |   |   E | | | | |  
| | F |     | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F |     | | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F |     | | | | |  = 35} , self = 72 , parent = Nothing , duration = 0.125923049000 , status
| | F |     | | | | |  = Fail , start = 2025-09-03 11:30:28.595454446 UTC , finish = 2025-09-03
| | F |     | | | | |  11:30:28.721377495 UTC , thread_cap_info = ("ThreadId 127", 3, False)}
| | F |     | | | | |  
| | | | F   | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F   | | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F   | | | | |  = 35} , self = 73 , parent = Nothing , duration = 0.123233658000 , status
| | | | F   | | | | |  = Fail , start = 2025-09-03 11:30:28.599190818 UTC , finish = 2025-09-03
| | | | F   | | | | |  11:30:28.722424476 UTC , thread_cap_info = ("ThreadId 126", 3, False)}
| | | | F   | | | | |  
| | | | |   | | F | |  
| | | | | S | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | |   | |  = 64 , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 27
| | | | | S | |   | |  , alphabet_size = 14 , total_length = 394} , self = 85 , parent = Nothing
| | | | | S | |   | |  , duration = 2.050669522000 , status = Success , start = 2025-09-03 11:30:28.647055153
| | | | | S | |   | |  UTC , finish = 2025-09-03 11:30:30.697724675 UTC , thread_cap_info = ("ThreadId
| | | | | S | |   | |  129", 2, False)}
| | | | | S | |   | |  
| | | | | | | F   | |  
| | F | | | |     | |  
| |   | F | |     | |  
| | F |   | |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   | |     | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F |   | |     | |  = 5 , total_length = 35} , self = 76 , parent = Nothing , duration = 0.265424369000
| | F |   | |     | |  , status = Fail , start = 2025-09-03 11:30:28.722435708 UTC , finish =
| | F |   | |     | |  2025-09-03 11:30:28.987860077 UTC , thread_cap_info = ("ThreadId 133",
| | F |   | |     | |  3, False)}
| | F |   | |     | |  
| | | | E | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | E | |     | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | E | |     | |  = 5 , total_length = 35} , self = 83 , parent = Nothing , duration = 1.954267635000
| | | | E | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:30:28.722442466
| | | | E | |     | |  UTC , finish = 2025-09-03 11:30:30.676710101 UTC , thread_cap_info = ("ThreadId
| | | | E | |     | |  134", 3, False)}
| | | | E | |     | |  
| F | | | | |     | |  
| E | | | | |     | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | |     | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | | | | |     | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | |     | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | |     | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | |     | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | |     | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | |     | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | |     | |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E | | | | |     | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E | | | | |     | |  = 12} , self = 89 , parent = Nothing , duration = 2.042510164000 , status
| E | | | | |     | |  = Except "AsyncCancelled" , start = 2025-09-03 11:30:28.754794266 UTC ,
| E | | | | |     | |  finish = 2025-09-03 11:30:30.79730443 UTC , thread_cap_info = ("ThreadId
| E | | | | |     | |  135", 3, False)}
| E | | | | |     | |  
F | | | | | |     | |  
  | F | | | |     | |  
  |   | | | |     | F  
S |   | | | |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
S |   | | | |     |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |   | | | |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S |   | | | |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   | | | |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   | | | |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
S |   | | | |     |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
S |   | | | |     |    = 5 , total_length = 35} , self = 81 , parent = Nothing , duration = 1.566898117000
S |   | | | |     |    , status = Success , start = 2025-09-03 11:30:29.039606785 UTC , finish
S |   | | | |     |    = 2025-09-03 11:30:30.606504902 UTC , thread_cap_info = ("ThreadId 139",
S |   | | | |     |    3, False)}
S |   | | | |     |    
| |   | | | F     |    
| | F | | |       |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |       |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |       |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F | | |       |    = 4 , total_length = 33} , self = 88 , parent = Nothing , duration = 1.266893022000
| | F | | |       |    , status = Fail , start = 2025-09-03 11:30:29.524196436 UTC , finish =
| | F | | |       |    2025-09-03 11:30:30.791089458 UTC , thread_cap_info = ("ThreadId 142",
| | F | | |       |    3, False)}
| | F | | |       |    
| | | | | |       F    
| | | F | |            
S | |   | |            
  | |   E |            
  | |     S            
  | F                  
  E                    
