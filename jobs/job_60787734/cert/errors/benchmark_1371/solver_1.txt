last 647 length 2612
last 4110 length 17824
last 584 length 2533
CNF 4110 vars 17824 clauses
CNF 647 vars 2612 clauses
last 3813 length 17384
last 422 length 1691
CNF 584 vars 2533 clauses
last 488 length 1938
last 6961 length 28611
last 11141 length 48213
last 8562 length 37905
last 12292 length 54440
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2032, clauses: 7495
CNF 3813 vars 17384 clauses
CNF 422 vars 1691 clauses
CNF 488 vars 1938 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5761, clauses: 23802
CNF 6961 vars 28611 clauses
CNF 11141 vars 48213 clauses
CNF 8562 vars 37905 clauses
CNF 12292 vars 54440 clauses
last 2032 length 7495
last 5761 length 23802
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1822, clauses: 6520
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4874, clauses: 19984
CNF 2032 vars 7495 clauses
CNF 5761 vars 23802 clauses
last 1822 length 6520
last 4874 length 19984
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14399, clauses: 56940
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2032, clauses: 7495, status: Unsatisfied, time: 0.985064183s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14018, clauses: 56940
CNF 1822 vars 6520 clauses
CNF 4874 vars 19984 clauses
last 14399 length 56940
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3570, clauses: 14281
last 14018 length 56940
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1822, clauses: 6520, status: Satisfied, time: 1.447408852s
last 3570 length 14281
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5761, clauses: 23802, status: Unsatisfied, time: 2.183616739s
CNF 14399 vars 56940 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 39896, clauses: 167090
CNF 14018 vars 56940 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41100, clauses: 172673
**************************************************CNF 3570 vars 14281 clauses

last 39896 length 167090
last 41100 length 172673
summary
**************************************************
SRS with 2 rules on 3 letters       mirror
SRS with 2 rules on 3 letters       DP
SRS with 3 strict rules and 2 weak rules on 5 letters       EDG
SRS with 3 strict rules and 2 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 5 letters       weights
SRS with 0 strict rules and 2 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b] -> [c, a, c, a, a] {- Input 0 -}
  [a, c] -> [b, a] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a] -> [a, a, c, a, c] {- Mirror (Input 0) -}
  [c, a] -> [a, b] {- Mirror (Input 1) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, a, c, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#] {- DP (Top 4) (Mirror (Input 0)) -}
  [b#, a, a] |-> [c#, a, c] {- DP (Top 2) (Mirror (Input 0)) -}
  [c#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [c#] {- DP (Top 4) (Mirror (Input 0)) -}
  [c#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, a, c] {- DP (Top 2) (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, c, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, b] {- DP Nontop (Mirror (Input 1)) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 4A 4A 4A - \
        | 4A 4A 4A - |
        | 4A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, a] |-> [b#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a, a, c, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, b] {- DP Nontop (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, a, c, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, b] {- DP Nontop (Mirror (Input 1)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(2,3)\Deepee\EDG(3/2,5)\Matrix{\Arctic}{3}(1/2,5)\Weight(0/2,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.013842584000
  min duration 0.360159932000
  total durat. 3.900154121000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 39
      , num_top_rules = 39
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 369}
    , self = 64
    , parent = Nothing
    , duration = 1.013842584000
    , status = Fail
    , start = 2025-09-03 11:42:21.751284319 UTC
    , finish = 2025-09-03 11:42:22.765126903 UTC
    , thread_cap_info = ("ThreadId 78", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.902668743000
  min duration 0.429559601000
  total durat. 3.349378586000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.847953757000
  min duration 2.847953757000
  total durat. 2.847953757000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 31}
    , self = 73
    , parent = Nothing
    , duration = 2.847953757000
    , status = Fail
    , start = 2025-09-03 11:42:22.306155884 UTC
    , finish = 2025-09-03 11:42:25.154109641 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.530315164000
  min duration 2.530315164000
  total durat. 2.530315164000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 25}
    , self = 69
    , parent = Nothing
    , duration = 2.530315164000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:42:22.622466548 UTC
    , finish = 2025-09-03 11:42:25.152781712 UTC
    , thread_cap_info = ("ThreadId 118", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.441529712000
  min duration 2.441529712000
  total durat. 2.441529712000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 25}
    , self = 67
    , parent = Nothing
    , duration = 2.441529712000
    , status = Success
    , start = 2025-09-03 11:42:22.622464657 UTC
    , finish = 2025-09-03 11:42:25.063994369 UTC
    , thread_cap_info = ("ThreadId 117", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.743912106000
  min duration 1.743912106000
  total durat. 1.743912106000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 31}
    , self = 66
    , parent = Nothing
    , duration = 1.743912106000
    , status = Fail
    , start = 2025-09-03 11:42:22.242991358 UTC
    , finish = 2025-09-03 11:42:23.986903464 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.401535126000
  min duration 3.401535126000
  total durat. 3.401535126000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 74
    , parent = Nothing
    , duration = 3.401535126000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:42:21.762442387 UTC
    , finish = 2025-09-03 11:42:25.163977513 UTC
    , thread_cap_info = ("ThreadId 81", 3, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 3.423257351000
  min duration 3.423257351000
  total durat. 3.423257351000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 72
    , parent = Nothing
    , duration = 3.423257351000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:42:21.730808401 UTC
    , finish = 2025-09-03 11:42:25.154065752 UTC
    , thread_cap_info = ("ThreadId 22", 2, False)}
**************************************************
E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                        = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                        = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
E                        = 72 , parent = Nothing , duration = 3.423257351000 , status = Except "AsyncCancelled"
E                        , start = 2025-09-03 11:42:21.730808401 UTC , finish = 2025-09-03 11:42:25.154065752
E                        UTC , thread_cap_info = ("ThreadId 22", 2, False)}
E                        
| F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                      = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                      = 144} , self = 60 , parent = Nothing , duration = 0.870255340000 , status
| F                      = Fail , start = 2025-09-03 11:42:21.734589423 UTC , finish = 2025-09-03
| F                      11:42:22.604844763 UTC , thread_cap_info = ("ThreadId 70", 1, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F                    = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                    = 144} , self = 56 , parent = Nothing , duration = 0.429559601000 , status
| | F                    = Fail , start = 2025-09-03 11:42:21.734600345 UTC , finish = 2025-09-03
| | F                    11:42:22.164159946 UTC , thread_cap_info = ("ThreadId 72", 1, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | F                  = 39 , num_top_rules = 39 , num_weak_rules = 18 , alphabet_size = 15 ,
| | | F                  total_length = 369} , self = 64 , parent = Nothing , duration = 1.013842584000
| | | F                  , status = Fail , start = 2025-09-03 11:42:21.751284319 UTC , finish =
| | | F                  2025-09-03 11:42:22.765126903 UTC , thread_cap_info = ("ThreadId 78", 2,
| | | F                  False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | F                = 39 , num_top_rules = 39 , num_weak_rules = 18 , alphabet_size = 15 ,
| | | | F                total_length = 369} , self = 62 , parent = Nothing , duration = 0.902668743000
| | | | F                , status = Fail , start = 2025-09-03 11:42:21.762442331 UTC , finish =
| | | | F                2025-09-03 11:42:22.665111074 UTC , thread_cap_info = ("ThreadId 79", 2,
| | | | F                False)}
| | | | F                
| | | | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E              = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | E              = 12} , self = 74 , parent = Nothing , duration = 3.401535126000 , status
| | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 11:42:21.762442387 UTC ,
| | | | | E              finish = 2025-09-03 11:42:25.163977513 UTC , thread_cap_info = ("ThreadId
| | | | | E              81", 3, False)}
| | | | | E              
| | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F            = 31} , self = 57 , parent = Nothing , duration = 0.360159932000 , status
| | | | | | F            = Fail , start = 2025-09-03 11:42:21.842445254 UTC , finish = 2025-09-03
| | | | | | F            11:42:22.202605186 UTC , thread_cap_info = ("ThreadId 93", 0, False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | F          = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | F          = 31} , self = 58 , parent = Nothing , duration = 0.456226593000 , status
| | | | | | | F          = Fail , start = 2025-09-03 11:42:21.849827329 UTC , finish = 2025-09-03
| | | | | | | F          11:42:22.306053922 UTC , thread_cap_info = ("ThreadId 94", 0, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | | | F        = 36 , num_top_rules = 36 , num_weak_rules = 18 , alphabet_size = 12 ,
| | | | | | | | F        total_length = 381} , self = 65 , parent = Nothing , duration = 0.942864123000
| | | | | | | | F        , status = Fail , start = 2025-09-03 11:42:21.882448209 UTC , finish =
| | | | | | | | F        2025-09-03 11:42:22.825312332 UTC , thread_cap_info = ("ThreadId 99", 2,
| | | | | | | | F        False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | | | | F      = 36 , num_top_rules = 36 , num_weak_rules = 18 , alphabet_size = 12 ,
| | | | | | | | | F      total_length = 381} , self = 63 , parent = Nothing , duration = 0.861910746000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 11:42:21.903105814 UTC , finish =
| | | | | | | | | F      2025-09-03 11:42:22.76501656 UTC , thread_cap_info = ("ThreadId 100", 1,
| | | | | | | | | F      False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 5 , total_length
| | | | | | | | | | F    = 25} , self = 61 , parent = Nothing , duration = 0.713032142000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 11:42:21.903561404 UTC , finish = 2025-09-03
| | | | | | | | | | F    11:42:22.616593546 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 5 , total_length
| | | | | | | | | | | F  = 25} , self = 59 , parent = Nothing , duration = 0.699012903000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-03 11:42:21.903587689 UTC , finish = 2025-09-03
| | | | | | | | | | | F  11:42:22.602600592 UTC , thread_cap_info = ("ThreadId 104", 0, False)}
| | | | | | | | | | | F  
| | F | | | | | | | | |  
| |   | | | F | | | | |  
| | F | | |   | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |   | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |   | | | | |  = 6 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| | F | | |   | | | | |  = 4 , total_length = 31} , self = 66 , parent = Nothing , duration = 1.743912106000
| | F | | |   | | | | |  , status = Fail , start = 2025-09-03 11:42:22.242991358 UTC , finish =
| | F | | |   | | | | |  2025-09-03 11:42:23.986903464 UTC , thread_cap_info = ("ThreadId 106",
| | F | | |   | | | | |  1, False)}
| | F | | |   | | | | |  
| | | | | |   F | | | |  
| | | | | | F   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | F   | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| | | | | | F   | | | |  = 4 , total_length = 31} , self = 73 , parent = Nothing , duration = 2.847953757000
| | | | | | F   | | | |  , status = Fail , start = 2025-09-03 11:42:22.306155884 UTC , finish =
| | | | | | F   | | | |  2025-09-03 11:42:25.154109641 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | F   | | | |  1, False)}
| | | | | | F   | | | |  
| | | | | | |   | | | F  
| F | | | | |   | | |    
|   | | | | |   | | F    
| S | | | | |   | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | |   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | |   | |      = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| S | | | | |   | |      = 5 , total_length = 25} , self = 67 , parent = Nothing , duration = 2.441529712000
| S | | | | |   | |      , status = Success , start = 2025-09-03 11:42:22.622464657 UTC , finish
| S | | | | |   | |      = 2025-09-03 11:42:25.063994369 UTC , thread_cap_info = ("ThreadId 117",
| S | | | | |   | |      2, False)}
| S | | | | |   | |      
| | | | | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | | | E | |      = 5 , total_length = 25} , self = 69 , parent = Nothing , duration = 2.530315164000
| | | | | | | E | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:42:22.622466548
| | | | | | | E | |      UTC , finish = 2025-09-03 11:42:25.152781712 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |      118", 2, False)}
| | | | | | | E | |      
| | | | F | | | | |      
| | | |   | | | | F      
| | | F   | | | |        
| | |     | | | F        
| | F     | | |          
| S       | | |          
|         | | E          
E         | |            
          | F            
          E              
