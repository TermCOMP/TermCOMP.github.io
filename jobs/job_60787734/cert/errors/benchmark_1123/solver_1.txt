last 3216 length 16602
last 694 length 2813
CNF 3216 vars 16602 clauses
last 3355 length 22172
CNF 694 vars 2813 clauses
CNF 3355 vars 22172 clauses
last 858 length 3921
last 929 length 3932
CNF 858 vars 3921 clauses
last 3858 length 17013
last 1241 length 5704
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2417, clauses: 8751
CNF 929 vars 3932 clauses
last 5907 length 27355
CNF 3858 vars 17013 clauses
CNF 1241 vars 5704 clauses
last 2417 length 8751
last 22718 length 131917
CNF 5907 vars 27355 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7932, clauses: 33023
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2796, clauses: 10220
last 16027 length 136390
CNF 2417 vars 8751 clauses
last 7932 length 33023
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7323, clauses: 28112
last 2796 length 10220
CNF 22718 vars 131917 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9724, clauses: 40621
CNF 7932 vars 33023 clauses
last 7323 length 28112
CNF 16027 vars 136390 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2417, clauses: 8751, status: Unsatisfied, time: 0.491792257s
CNF 2796 vars 10220 clauses
last 9724 length 40621
CNF 7323 vars 28112 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22766, clauses: 95144
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4962, clauses: 20042
CNF 9724 vars 40621 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2796, clauses: 10220, status: Unsatisfied, time: 0.551789368s
last 22766 length 95144
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13289, clauses: 55371
last 4962 length 20042
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7932, clauses: 33023, status: Unsatisfied, time: 0.805427592s
last 13289 length 55371
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6042, clauses: 24426
CNF 4962 vars 20042 clauses
CNF 22766 vars 95144 clauses
last 6042 length 24426
CNF 13289 vars 55371 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29774, clauses: 123925
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3988, clauses: 15195
last 29774 length 123925
CNF 6042 vars 24426 clauses
last 3988 length 15195
CNF 3988 vars 15195 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13289, clauses: 55371, status: Satisfied, time: 0.818289959s
CNF 29774 vars 123925 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3988, clauses: 15195, status: Unsatisfied, time: 0.600696544s
last 6830 length 47708
CNF 6830 vars 47708 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7323, clauses: 28112, status: Satisfied, time: 2.293794246s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4962, clauses: 20042, status: Unsatisfied, time: 1.798901876s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995
last 5803 length 20995
CNF 5803 vars 20995 clauses
last 2541 length 11616
CNF 2541 vars 11616 clauses
last 3001 length 15327
last 8683 length 79410
CNF 3001 vars 15327 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6042, clauses: 24426, status: Unsatisfied, time: 1.674819891s
CNF 8683 vars 79410 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7448, clauses: 28116
last 7448 length 28116
CNF 7448 vars 28116 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5389, clauses: 19864
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13926, clauses: 58517
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4597, clauses: 17637
last 5389 length 19864
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995, status: Satisfied, time: 0.698023094s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9724, clauses: 40621, status: Unsatisfied, time: 3.018422399s
last 13926 length 58517
last 4597 length 17637
CNF 5389 vars 19864 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19066, clauses: 79923
CNF 13926 vars 58517 clauses
CNF 4597 vars 17637 clauses
last 19066 length 79923
last 6830 length 47708
CNF 6830 vars 47708 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7448, clauses: 28116, status: Unsatisfied, time: 1.223353608s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4597, clauses: 17637, status: Unsatisfied, time: 0.789242966s
CNF 19066 vars 79923 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995
last 5803 length 20995
CNF 5803 vars 20995 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8634, clauses: 32688
last 8634 length 32688
CNF 8634 vars 32688 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17162, clauses: 71845
last 17162 length 71845
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995, status: Satisfied, time: 0.752724325s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5389, clauses: 19864, status: Unsatisfied, time: 2.053470598s
CNF 17162 vars 71845 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17016, clauses: 79387
last 17016 length 79387
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       weights
SRS with 15 rules on 8 letters       mirror
SRS with 15 rules on 8 letters       DP
SRS with 48 strict rules and 15 weak rules on 15 letters       weights
SRS with 46 strict rules and 15 weak rules on 14 letters       EDG
SRS with 46 strict rules and 15 weak rules on 14 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 14 strict rules and 15 weak rules on 14 letters       weights
SRS with 8 strict rules and 15 weak rules on 12 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 15 weak rules on 10 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 15 weak rules on 10 letters       weights
  SRS with 1 strict rules and 15 weak rules on 9 letters       EDG
  SRS with 1 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 4 strict rules and 15 weak rules on 10 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 15 weak rules on 10 letters       weights
  SRS with 1 strict rules and 15 weak rules on 9 letters       EDG
  SRS with 1 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [] {- Input 1 -}
  [a, c, c] -> [c, b, c, a, c, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, c], [c, a]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, b]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, c]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, a]] -> [ [b, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, b]] -> [ [b, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, c]] -> [ [b, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, a]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, b]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, c]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 2/1)
  ([b, b], 1/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, c], [c, a]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, b]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, c]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, a]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, b]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, c]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, c], [a, b], [a, a]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a], [c, c], [a, c], [a, a]] -> [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [a, a]] -> [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [a, a]] -> [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [a, c], [c, a]] -> [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [c, a]] -> [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [c, a]] -> [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, a]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, a]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 14A 14A 14A - \
        | 14A 14A 14A - |
        | 14A 14A 14A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 14A 16A 16A - \
        | 14A 16A 16A - |
        | 14A 16A 16A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 0/1)
  ([a, c]#, 1/1)
  ([b, c]#, 2/1)
  ([c, a]#, 2/1)
  ([c, b]#, 0/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 18A 21A 21A - \
        | 18A 18A 21A - |
        | 15A 18A 18A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
  ( [c, b]#
  , Wk  / 2A 3A 5A - \
        | 2A 3A 5A - |
        | 2A 3A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 1/1)
  ([c, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}CNF 17016 vars 79387 clauses

reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 18A 21A 21A - \
        | 18A 18A 21A - |
        | 15A 18A 18A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
  ( [c, c]#
  , Wk  / 2A 3A 5A - \
        | 2A 3A 5A - |
        | 2A 3A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, c]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Weight\Mirror(15,8)\Deepee(48/15,15)\Weight\EDG(46/15,14)\Matrix{\Arctic}{3}(14/15,14)\Weight(8/15,12)\EDG[(4/15,10)\Matrix{\Arctic}{3}(2/15,10)\Weight\EDG(1/15,9)\Usable(1,2)\Weight(0,0)\EDG[],(4/15,10)\Matrix{\Arctic}{3}(2/15,10)\Weight\EDG(1/15,9)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11743, clauses: 49375
last 11743 length 49375
CNF 11743 vars 49375 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.238092788000
  min duration 0.051328630000
  total durat. 4.239750073000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 65
    , parent = Nothing
    , duration = 1.238092788000
    , status = Fail
    , start = 2025-09-03 11:02:50.587108077 UTC
    , finish = 2025-09-03 11:02:51.825200865 UTC
    , thread_cap_info = ("ThreadId 89", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.371731307000
  min duration 0.144393419000
  total durat. 4.919017233000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 92
    , parent = Nothing
    , duration = 1.341943296000
    , status = Fail
    , start = 2025-09-03 11:02:53.390365079 UTC
    , finish = 2025-09-03 11:02:54.732308375 UTC
    , thread_cap_info = ("ThreadId 142", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 67
    , parent = Nothing
    , duration = 1.371731307000
    , status = Fail
    , start = 2025-09-03 11:02:50.611645604 UTC
    , finish = 2025-09-03 11:02:51.983376911 UTC
    , thread_cap_info = ("ThreadId 90", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.473475187000
  min duration 1.473475187000
  total durat. 1.473475187000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 109
    , parent = Nothing
    , duration = 1.473475187000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:55.353307959 UTC
    , finish = 2025-09-03 11:02:56.826783146 UTC
    , thread_cap_info = ("ThreadId 173", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.874270074000
  min duration 1.363287359000
  total durat. 5.237557433000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 69
    , parent = Nothing
    , duration = 1.363287359000
    , status = Fail
    , start = 2025-09-03 11:02:51.047152247 UTC
    , finish = 2025-09-03 11:02:52.410439606 UTC
    , thread_cap_info = ("ThreadId 111", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 95
    , parent = Nothing
    , duration = 3.874270074000
    , status = Fail
    , start = 2025-09-03 11:02:51.373592919 UTC
    , finish = 2025-09-03 11:02:55.247862993 UTC
    , thread_cap_info = ("ThreadId 117", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 2.590369064000
  min duration 0.488771285000
  total durat. 4.485253859000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 72
    , parent = Nothing
    , duration = 1.406113510000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:51.983473093 UTC
    , finish = 2025-09-03 11:02:53.389586603 UTC
    , thread_cap_info = ("ThreadId 128", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 13
      , num_top_rules = 13
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 177}
    , self = 82
    , parent = Nothing
    , duration = 2.590369064000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:51.425973871 UTC
    , finish = 2025-09-03 11:02:54.016342935 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.263914683000
  min duration 2.123167496000
  total durat. 4.387082179000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 81
    , parent = Nothing
    , duration = 2.123167496000
    , status = Fail
    , start = 2025-09-03 11:02:51.859988571 UTC
    , finish = 2025-09-03 11:02:53.983156067 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 90
    , parent = Nothing
    , duration = 2.263914683000
    , status = Fail
    , start = 2025-09-03 11:02:52.207438969 UTC
    , finish = 2025-09-03 11:02:54.471353652 UTC
    , thread_cap_info = ("ThreadId 129", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.593763663000
  min duration 0.998801730000
  total durat. 6.202986645000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 93
    , parent = Nothing
    , duration = 1.260822429000
    , status = Success
    , start = 2025-09-03 11:02:53.94914977 UTC
    , finish = 2025-09-03 11:02:55.209972199 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 70
    , parent = Nothing
    , duration = 1.349598823000
    , status = Success
    , start = 2025-09-03 11:02:51.848639856 UTC
    , finish = 2025-09-03 11:02:53.198238679 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 13
      , num_top_rules = 13
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 177}
    , self = 78
    , parent = Nothing
    , duration = 2.593763663000
    , status = Success
    , start = 2025-09-03 11:02:51.320773784 UTC
    , finish = 2025-09-03 11:02:53.914537447 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.467443282000
  min duration 0.928942281000
  total durat. 4.537890099000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 66
    , parent = Nothing
    , duration = 1.141504536000
    , status = Fail
    , start = 2025-09-03 11:02:50.707113536 UTC
    , finish = 2025-09-03 11:02:51.848618072 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 14
      , alphabet_size = 8
      , total_length = 116}
    , self = 108
    , parent = Nothing
    , duration = 2.467443282000
    , status = Fail
    , start = 2025-09-03 11:02:54.345207086 UTC
    , finish = 2025-09-03 11:02:56.812650368 UTC
    , thread_cap_info = ("ThreadId 157", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.423057610000
  min duration 1.118625552000
  total durat. 2.541683162000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 77
    , parent = Nothing
    , duration = 1.118625552000
    , status = Fail
    , start = 2025-09-03 11:02:52.456921264 UTC
    , finish = 2025-09-03 11:02:53.575546816 UTC
    , thread_cap_info = ("ThreadId 132", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 105
    , parent = Nothing
    , duration = 1.423057610000
    , status = Fail
    , start = 2025-09-03 11:02:54.473352537 UTC
    , finish = 2025-09-03 11:02:55.896410147 UTC
    , thread_cap_info = ("ThreadId 159", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.788092215000
  min duration 1.788092215000
  total durat. 1.788092215000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 104
    , parent = Nothing
    , duration = 1.788092215000
    , status = Fail
    , start = 2025-09-03 11:02:54.027809771 UTC
    , finish = 2025-09-03 11:02:55.815901986 UTC
    , thread_cap_info = ("ThreadId 147", 1, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                      = 59 , parent = Nothing , duration = 0.305979114000 , status = Fail , start
F                      = 2025-09-03 11:02:50.5099792 UTC , finish = 2025-09-03 11:02:50.815958314
F                      UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                    = 13 , num_top_rules = 13 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| F                    = 177} , self = 64 , parent = Nothing , duration = 0.872252457000 , status
| F                    = Fail , start = 2025-09-03 11:02:50.53793838 UTC , finish = 2025-09-03
| F                    11:02:51.410190837 UTC , thread_cap_info = ("ThreadId 75", 3, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                  = 13 , num_top_rules = 13 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | F                  = 177} , self = 62 , parent = Nothing , duration = 0.773610242000 , status
| | F                  = Fail , start = 2025-09-03 11:02:50.547107138 UTC , finish = 2025-09-03
| | F                  11:02:51.32071738 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | F                = 15 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | | F                = 95} , self = 58 , parent = Nothing , duration = 0.181710638000 , status
| | | F                = Fail , start = 2025-09-03 11:02:50.547134334 UTC , finish = 2025-09-03
| | | F                11:02:50.728844972 UTC , thread_cap_info = ("ThreadId 80", 2, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | F              = 15 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | | | F              = 95} , self = 57 , parent = Nothing , duration = 0.144393419000 , status
| | | | F              = Fail , start = 2025-09-03 11:02:50.567106367 UTC , finish = 2025-09-03
| | | | F              11:02:50.711499786 UTC , thread_cap_info = ("ThreadId 82", 2, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
| | | | | F            = 46 , num_top_rules = 46 , num_weak_rules = 15 , alphabet_size = 14 ,
| | | | | F            total_length = 429} , self = 65 , parent = Nothing , duration = 1.238092788000
| | | | | F            , status = Fail , start = 2025-09-03 11:02:50.587108077 UTC , finish =
| | | | | F            2025-09-03 11:02:51.825200865 UTC , thread_cap_info = ("ThreadId 89", 3,
| | | | | F            False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
| | | | | | F          = 46 , num_top_rules = 46 , num_weak_rules = 15 , alphabet_size = 14 ,
| | | | | | F          total_length = 429} , self = 67 , parent = Nothing , duration = 1.371731307000
| | | | | | F          , status = Fail , start = 2025-09-03 11:02:50.611645604 UTC , finish =
| | | | | | F          2025-09-03 11:02:51.983376911 UTC , thread_cap_info = ("ThreadId 90", 3,
| | | | | | F          False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | F        = 40} , self = 60 , parent = Nothing , duration = 0.374336091000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:02:50.654077751 UTC , finish = 2025-09-03
| | | | | | | F        11:02:51.028413842 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | F      = 48} , self = 61 , parent = Nothing , duration = 0.536661628000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 11:02:50.698588033 UTC , finish = 2025-09-03
| | | | | | | | F      11:02:51.235249661 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | F    = 48} , self = 63 , parent = Nothing , duration = 0.674938657000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 11:02:50.698591744 UTC , finish = 2025-09-03
| | | | | | | | | F    11:02:51.373530401 UTC , thread_cap_info = ("ThreadId 105", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | F  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | | | | F  = 4 , total_length = 40} , self = 66 , parent = Nothing , duration = 1.141504536000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:02:50.707113536 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:02:51.848618072 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | | | F  1, False)}
| | | | | | | | | | F  
| | | | F | | | | | |  
| | | F   | | | | | |  
F | |     | | | | | |  
  | |     | | F | | |  
F | |     | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | |     | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | |     | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | |     | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |     | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |     | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
F | |     | |   | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
F | |     | |   | | |  = 4 , total_length = 40} , self = 69 , parent = Nothing , duration = 1.363287359000
F | |     | |   | | |  , status = Fail , start = 2025-09-03 11:02:51.047152247 UTC , finish =
F | |     | |   | | |  2025-09-03 11:02:52.410439606 UTC , thread_cap_info = ("ThreadId 111",
F | |     | |   | | |  1, False)}
F | |     | |   | | |  
| | |     | |   F | |  
| | | F   | |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   | |     | |  = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | F   | |     | |  alphabet_size = 4 , total_length = 48} , self = 68 , parent = Nothing ,
| | | F   | |     | |  duration = 0.928942281000 , status = Fail , start = 2025-09-03 11:02:51.259711975
| | | F   | |     | |  UTC , finish = 2025-09-03 11:02:52.188654256 UTC , thread_cap_info = ("ThreadId
| | | F   | |     | |  115", 3, False)}
| | | F   | |     | |  
| | F |   | |     | |  
| | S |   | |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S |   | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S |   | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S |   | |     | |  = 27 , num_strict_rules = 13 , num_top_rules = 13 , num_weak_rules = 14
| | S |   | |     | |  , alphabet_size = 9 , total_length = 177} , self = 78 , parent = Nothing
| | S |   | |     | |  , duration = 2.593763663000 , status = Success , start = 2025-09-03 11:02:51.320773784
| | S |   | |     | |  UTC , finish = 2025-09-03 11:02:53.914537447 UTC , thread_cap_info = ("ThreadId
| | S |   | |     | |  116", 3, False)}
| | S |   | |     | |  
| | | |   | |     F |  
| | | | F | |       |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F | |       |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F | |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F | |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F | |       |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | F | |       |  = 4 , total_length = 48} , self = 95 , parent = Nothing , duration = 3.874270074000
| | | | F | |       |  , status = Fail , start = 2025-09-03 11:02:51.373592919 UTC , finish =
| | | | F | |       |  2025-09-03 11:02:55.247862993 UTC , thread_cap_info = ("ThreadId 117",
| | | | F | |       |  3, False)}
| | | | F | |       |  
| F | | | | |       |  
| E | | | | |       |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | |       |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| E | | | | |       |  , num_strict_rules = 13 , num_top_rules = 13 , num_weak_rules = 14 , alphabet_size
| E | | | | |       |  = 9 , total_length = 177} , self = 82 , parent = Nothing , duration = 2.590369064000
| E | | | | |       |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:02:51.425973871
| E | | | | |       |  UTC , finish = 2025-09-03 11:02:54.016342935 UTC , thread_cap_info = ("ThreadId
| E | | | | |       |  120", 3, False)}
| E | | | | |       |  
| | | | | F |       |  
| | | | |   |       F  
| | | | | S |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |          = 61 , num_strict_rules = 46 , num_top_rules = 46 , num_weak_rules = 15
| | | | | S |          , alphabet_size = 14 , total_length = 429} , self = 70 , parent = Nothing
| | | | | S |          , duration = 1.349598823000 , status = Success , start = 2025-09-03 11:02:51.848639856
| | | | | S |          UTC , finish = 2025-09-03 11:02:53.198238679 UTC , thread_cap_info = ("ThreadId
| | | | | S |          125", 3, False)}
| | | | | S |          
| | | | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | F        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | F        = 4 , total_length = 40} , self = 81 , parent = Nothing , duration = 2.123167496000
| | | | | | | F        , status = Fail , start = 2025-09-03 11:02:51.859988571 UTC , finish =
| | | | | | | F        2025-09-03 11:02:53.983156067 UTC , thread_cap_info = ("ThreadId 126",
| | | | | | | F        1, False)}
| | | | | | | F        
| | | | | | F |        
| | | | | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 61
| | | | | | E |        , num_strict_rules = 46 , num_top_rules = 46 , num_weak_rules = 15 , alphabet_size
| | | | | | E |        = 14 , total_length = 429} , self = 72 , parent = Nothing , duration =
| | | | | | E |        1.406113510000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |        11:02:51.983473093 UTC , finish = 2025-09-03 11:02:53.389586603 UTC , thread_cap_info
| | | | | | E |        = ("ThreadId 128", 3, False)}
| | | | | | E |        
| | | F | | | |        
| | | F | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | F | | | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | F | | | |        = 4 , total_length = 48} , self = 90 , parent = Nothing , duration = 2.263914683000
| | | F | | | |        , status = Fail , start = 2025-09-03 11:02:52.207438969 UTC , finish =
| | | F | | | |        2025-09-03 11:02:54.471353652 UTC , thread_cap_info = ("ThreadId 129",
| | | F | | | |        3, False)}
| | | F | | | |        
F | | | | | | |        
F | | | | | | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | |        = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
F | | | | | | |        = 4 , total_length = 40} , self = 77 , parent = Nothing , duration = 1.118625552000
F | | | | | | |        , status = Fail , start = 2025-09-03 11:02:52.456921264 UTC , finish =
F | | | | | | |        2025-09-03 11:02:53.575546816 UTC , thread_cap_info = ("ThreadId 132",
F | | | | | | |        1, False)}
F | | | | | | |        
| | | | | S | |        
| | | | |   E |        
| | | | | F   |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   |        = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | F   |        = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
| | | | | F   |        = 123} , self = 80 , parent = Nothing , duration = 0.552344818000 , status
| | | | | F   |        = Fail , start = 2025-09-03 11:02:53.39036346 UTC , finish = 2025-09-03
| | | | | F   |        11:02:53.942708278 UTC , thread_cap_info = ("ThreadId 141", 3, False)}
| | | | | F   |        
| | | | | | F |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | F |        = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
| | | | | | F |        = 123} , self = 92 , parent = Nothing , duration = 1.341943296000 , status
| | | | | | F |        = Fail , start = 2025-09-03 11:02:53.390365079 UTC , finish = 2025-09-03
| | | | | | F |        11:02:54.732308375 UTC , thread_cap_info = ("ThreadId 142", 3, False)}
| | | | | | F |        
F | | | | | | |        
  | S | | | | |        
  |   | | F | |        
S |   | |   | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | |   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | |   | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | |   | |        = 19 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 ,
S |   | |   | |        alphabet_size = 10 , total_length = 123} , self = 93 , parent = Nothing
S |   | |   | |        , duration = 1.260822429000 , status = Success , start = 2025-09-03 11:02:53.94914977
S |   | |   | |        UTC , finish = 2025-09-03 11:02:55.209972199 UTC , thread_cap_info = ("ThreadId
S |   | |   | |        146", 3, False)}
S |   | |   | |        
| |   | |   | F        
| E   | |   |          
| F   | |   |          Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F   | |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |   |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |   |          = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| F   | |   |          = 4 , total_length = 40} , self = 104 , parent = Nothing , duration = 1.788092215000
| F   | |   |          , status = Fail , start = 2025-09-03 11:02:54.027809771 UTC , finish =
| F   | |   |          2025-09-03 11:02:55.815901986 UTC , thread_cap_info = ("ThreadId 147",
| F   | |   |          1, False)}
| F   | |   |          
| | F | |   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   |          = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | F | |   |          = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | F | |   |          = 116} , self = 91 , parent = Nothing , duration = 0.373713838000 , status
| | F | |   |          = Fail , start = 2025-09-03 11:02:54.105749621 UTC , finish = 2025-09-03
| | F | |   |          11:02:54.479463459 UTC , thread_cap_info = ("ThreadId 153", 3, False)}
| | F | |   |          
| | | | | F |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | F |          = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | | F |          = 116} , self = 89 , parent = Nothing , duration = 0.238064221000 , status
| | | | | F |          = Fail , start = 2025-09-03 11:02:54.107100846 UTC , finish = 2025-09-03
| | | | | F |          11:02:54.345165067 UTC , thread_cap_info = ("ThreadId 154", 3, False)}
| | | | | F |          
| | | | | F |          
| | | | | F |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F |          = 17 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 14 ,
| | | | | F |          alphabet_size = 8 , total_length = 116} , self = 108 , parent = Nothing
| | | | | F |          , duration = 2.467443282000 , status = Fail , start = 2025-09-03 11:02:54.345207086
| | | | | F |          UTC , finish = 2025-09-03 11:02:56.812650368 UTC , thread_cap_info = ("ThreadId
| | | | | F |          157", 3, False)}
| | | | | F |          
| | | F | | |          
| | | F | | |          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | |          = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | F | | |          alphabet_size = 4 , total_length = 48} , self = 105 , parent = Nothing
| | | F | | |          , duration = 1.423057610000 , status = Fail , start = 2025-09-03 11:02:54.473352537
| | | F | | |          UTC , finish = 2025-09-03 11:02:55.896410147 UTC , thread_cap_info = ("ThreadId
| | | F | | |          159", 3, False)}
| | | F | | |          
| | F | | | |          
| |   | | | F          
| | E | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| | E | | |            , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size
| | E | | |            = 10 , total_length = 123} , self = 96 , parent = Nothing , duration =
| | E | | |            0.488771285000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | |            11:02:54.759131136 UTC , finish = 2025-09-03 11:02:55.247902421 UTC , thread_cap_info
| | E | | |            = ("ThreadId 162", 3, False)}
| | E | | |            
S | | | | |            
  | | | F |            
  | E |   |            
F |   |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
F |   |   |            = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
F |   |   |            = 123} , self = 103 , parent = Nothing , duration = 0.433645276000 , status
F |   |   |            = Fail , start = 2025-09-03 11:02:55.341721434 UTC , finish = 2025-09-03
F |   |   |            11:02:55.77536671 UTC , thread_cap_info = ("ThreadId 172", 3, False)}
F |   |   |            
| | E |   |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | E |   |            = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
| | E |   |            = 123} , self = 109 , parent = Nothing , duration = 1.473475187000 , status
| | E |   |            = Except "AsyncCancelled" , start = 2025-09-03 11:02:55.353307959 UTC ,
| | E |   |            finish = 2025-09-03 11:02:56.826783146 UTC , thread_cap_info = ("ThreadId
| | E |   |            173", 3, False)}
| | E |   |            
F | | |   |            
S | | |   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |   |            = 19 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 ,
S | | |   |            alphabet_size = 10 , total_length = 123} , self = 106 , parent = Nothing
S | | |   |            , duration = 0.998801730000 , status = Success , start = 2025-09-03 11:02:55.785340875
S | | |   |            UTC , finish = 2025-09-03 11:02:56.784142605 UTC , thread_cap_info = ("ThreadId
S | | |   |            176", 3, False)}
S | | |   |            
| F | |   |            
|   | F   |            
S   |     |            
    |     F            
    E                  
