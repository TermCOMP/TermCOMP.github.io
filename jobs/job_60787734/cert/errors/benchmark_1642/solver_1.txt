last 2510 length 11638
CNF 2510 vars 11638 clauses
last 2496 length 12381
CNF 2496 vars 12381 clauses
last 2980 length 14094
CNF 2980 vars 14094 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2150, clauses: 8478
last 2150 length 8478
CNF 2150 vars 8478 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1967, clauses: 8118
last 1967 length 8118
CNF 1967 vars 8118 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2150, clauses: 8478, status: Unsatisfied, time: 0.081819555s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1967, clauses: 8118, status: Unsatisfied, time: 0.079172787s
last 4670 length 22592
CNF 4670 vars 22592 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6785, clauses: 28497
last 6785 length 28497
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4114, clauses: 17568
CNF 6785 vars 28497 clauses
last 4114 length 17568
CNF 4114 vars 17568 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6201, clauses: 26039
last 6201 length 26039
CNF 6201 vars 26039 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3775, clauses: 16339
last 3775 length 16339
CNF 3775 vars 16339 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4114, clauses: 17568, status: Unsatisfied, time: 0.419048768s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3775, clauses: 16339, status: Unsatisfied, time: 0.42025271s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6201, clauses: 26039, status: Unsatisfied, time: 0.510100202s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3577, clauses: 14868
last 3577 length 14868
CNF 3577 vars 14868 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3577, clauses: 14868, status: Satisfied, time: 0.218700019s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3265, clauses: 14252
last 3265 length 14252
CNF 3265 vars 14252 clauses
last 10498 length 117662
CNF 10498 vars 117662 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       DP
SRS with 8 strict rules and 1 weak rules on 3 letters       EDG
SRS with 3 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b, a, a, b, a] -> [ a , a , b , a , a , b , a , a , b , a , b , a , b ] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b, a, a, b, a] ->= [ a , a , b , a , a , b , a , a , b , a , b , a , b ] {- DP Nontop (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , a , b , a , a , b , a , a , b , a , b , a , b ] {- DP (Top 0) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , a , b , a , a , b , a , b , a , b ] {- DP (Top 3) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , a , b , a , b , a , b ] {- DP (Top 6) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [a#, b] {- DP (Top 11) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , b , a , a , b , a , a , b , a , b , a , b ] {- DP (Top 1) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , b , a , a , b , a , b , a , b ] {- DP (Top 4) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [a#, b, a, b] {- DP (Top 9) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , b , a , b , a , b ] {- DP (Top 7) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [ a# , b , a , b , a , b ] {- DP (Top 7) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [a#, b] {- DP (Top 11) (Input 0) -}
  [a#, b, a, b, a, a, b, a, a, b, a] |-> [a#, b, a, b] {- DP (Top 9) (Input 0) -}
  [a, b, a, b, a, a, b, a, a, b, a] ->= [ a , a , b , a , a , b , a , a , b , a , b , a , b ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  0A - \
        | -4A -4A 0A  0A - |
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( a#
  , Wk  / 1A 1A 1A 1A - \
        | 1A 1A 1A 1A - |
        | 1A 1A 1A 1A - |
        | 1A 1A 1A 1A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b, a, a, b, a] ->= [ a , a , b , a , a , b , a , a , b , a , b , a , b ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,2)\Deepee(8/1,3)\EDG(3/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.773900433000
  min duration 0.099477773000
  total durat. 1.984790074000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 71
    , parent = Nothing
    , duration = 1.773900433000
    , status = Fail
    , start = 2025-09-03 12:34:39.980365512 UTC
    , finish = 2025-09-03 12:34:41.754265945 UTC
    , thread_cap_info = ("ThreadId 70", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.331534455000
  min duration 1.331534455000
  total durat. 1.331534455000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 69}
    , self = 68
    , parent = Nothing
    , duration = 1.331534455000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:34:40.141960409 UTC
    , finish = 2025-09-03 12:34:41.473494864 UTC
    , thread_cap_info = ("ThreadId 88", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.544685721000
  min duration 0.513917813000
  total durat. 1.058603534000
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.484835245000
  min duration 1.484835245000
  total durat. 1.484835245000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 67
    , parent = Nothing
    , duration = 1.484835245000
    , status = Fail
    , start = 2025-09-03 12:34:39.974577267 UTC
    , finish = 2025-09-03 12:34:41.459412512 UTC
    , thread_cap_info = ("ThreadId 23", 0, False)}
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F              = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
F              = 67 , parent = Nothing , duration = 1.484835245000 , status = Fail , start
F              = 2025-09-03 12:34:39.974577267 UTC , finish = 2025-09-03 12:34:41.459412512
F              UTC , thread_cap_info = ("ThreadId 23", 0, False)}
F              
| F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F            = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F            = 78} , self = 40 , parent = Nothing , duration = 0.111411868000 , status
| F            = Fail , start = 2025-09-03 12:34:39.980357951 UTC , finish = 2025-09-03
| F            12:34:40.091769819 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F          = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F          = 78} , self = 48 , parent = Nothing , duration = 0.333107120000 , status
| | F          = Fail , start = 2025-09-03 12:34:39.980363841 UTC , finish = 2025-09-03
| | F          12:34:40.313470961 UTC , thread_cap_info = ("ThreadId 65", 3, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F        = 104} , self = 71 , parent = Nothing , duration = 1.773900433000 , status
| | | F        = Fail , start = 2025-09-03 12:34:39.980365512 UTC , finish = 2025-09-03
| | | F        12:34:41.754265945 UTC , thread_cap_info = ("ThreadId 70", 1, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | F      = 69} , self = 42 , parent = Nothing , duration = 0.161334270000 , status
| | | | F      = Fail , start = 2025-09-03 12:34:39.980575045 UTC , finish = 2025-09-03
| | | | F      12:34:40.141909315 UTC , thread_cap_info = ("ThreadId 74", 2, False)}
| | | | F      
| F | | |      
| F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| F | | |      = 3 , total_length = 69} , self = 45 , parent = Nothing , duration = 0.122930579000
| F | | |      , status = Fail , start = 2025-09-03 12:34:40.100948485 UTC , finish =
| F | | |      2025-09-03 12:34:40.223879064 UTC , thread_cap_info = ("ThreadId 83", 2,
| F | | |      False)}
| F | | |      
| | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | F    = 3 , total_length = 78} , self = 46 , parent = Nothing , duration = 0.135157028000
| | | | | F    , status = Fail , start = 2025-09-03 12:34:40.11684614 UTC , finish = 2025-09-03
| | | | | F    12:34:40.252003168 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | | F    
| | | | F |    
| | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | E |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | E |    = 3 , total_length = 69} , self = 68 , parent = Nothing , duration = 1.331534455000
| | | | E |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:34:40.141960409
| | | | E |    UTC , finish = 2025-09-03 12:34:41.473494864 UTC , thread_cap_info = ("ThreadId
| | | | E |    88", 2, False)}
| | | | E |    
| F | | | |    
| F | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| F | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| F | | | |    = 3 , total_length = 69} , self = 62 , parent = Nothing , duration = 0.513917813000
| F | | | |    , status = Fail , start = 2025-09-03 12:34:40.232629947 UTC , finish =
| F | | | |    2025-09-03 12:34:40.74654776 UTC , thread_cap_info = ("ThreadId 93", 2,
| F | | | |    False)}
| F | | | |    
| | | | | F    
| | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | F    = 3 , total_length = 78} , self = 64 , parent = Nothing , duration = 0.640917788000
| | | | | F    , status = Fail , start = 2025-09-03 12:34:40.260587093 UTC , finish =
| | | | | F    2025-09-03 12:34:40.901504881 UTC , thread_cap_info = ("ThreadId 95", 3,
| | | | | F    False)}
| | | | | F    
| | F | | |    
| | F | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | F | | |    = 3 , total_length = 78} , self = 63 , parent = Nothing , duration = 0.544685721000
| | F | | |    , status = Fail , start = 2025-09-03 12:34:40.353202488 UTC , finish =
| | F | | |    2025-09-03 12:34:40.897888209 UTC , thread_cap_info = ("ThreadId 98", 3,
| | F | | |    False)}
| | F | | |    
| | | | | | S  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S  verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | S  = 32 , num_top_rules = 32 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | S  = 716} , self = 59 , parent = Nothing , duration = 0.135386744000 , status
| | | | | | S  = Success , start = 2025-09-03 12:34:40.535204163 UTC , finish = 2025-09-03
| | | | | | S  12:34:40.670590907 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | | | | | S  
| | | | | | S  
| F | | | |    
| S | | | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| S | | | |    = 3 , total_length = 69} , self = 65 , parent = Nothing , duration = 0.445882289000
| S | | | |    , status = Success , start = 2025-09-03 12:34:40.792061939 UTC , finish
| S | | | |    = 2025-09-03 12:34:41.237944228 UTC , thread_cap_info = ("ThreadId 119",
| S | | | |    2, False)}
| S | | | |    
| | F | | |    
| |   | | F    
| S   | |      
F     | |      
      | E      
      F        
