last 654 length 2665
CNF 654 vars 2665 clauses
last 627 length 2523
CNF 627 vars 2523 clauses
last 637 length 2584
last 636 length 2513
CNF 637 vars 2584 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2566, clauses: 9055
last 2566 length 9055
CNF 636 vars 2513 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2566, clauses: 9097
CNF 2566 vars 9055 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8882, clauses: 36693
last 2566 length 9097
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8880, clauses: 36697
last 8882 length 36693
last 8880 length 36697
CNF 2566 vars 9097 clauses
CNF 8882 vars 36693 clauses
CNF 8880 vars 36697 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8882, clauses: 36693, status: Satisfied, time: 0.087176454s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 836 length 3331
CNF 836 vars 3331 clauses
last 698 length 2694
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2566, clauses: 9055, status: Unsatisfied, time: 0.321773555s
CNF 698 vars 2694 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3489, clauses: 12518
last 3489 length 12518
CNF 3489 vars 12518 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3489, clauses: 12518, status: Satisfied, time: 0.072576472s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5408, clauses: 21364
last 5408 length 21364
CNF 5408 vars 21364 clauses
last 675 length 2660
CNF 675 vars 2660 clauses
last 625 length 2439
CNF 625 vars 2439 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8880, clauses: 36697, status: Unsatisfied, time: 0.445985202s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3266, clauses: 11586
last 3266 length 11586
CNF 3266 vars 11586 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4201, clauses: 15783
last 4201 length 15783
CNF 4201 vars 15783 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3266, clauses: 11586, status: Satisfied, time: 0.132820917s
last 537 length 2099
last 490 length 1885
CNF 490 vars 1885 clauses
CNF 537 vars 2099 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2648, clauses: 9267
last 2648 length 9267
CNF 2648 vars 9267 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2648, clauses: 9267, status: Unsatisfied, time: 0.212472193s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8381, clauses: 34445
last 8381 length 34445
CNF 8381 vars 34445 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4201, clauses: 15783, status: Unsatisfied, time: 0.62888989s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 20153
last 5160 length 20153
CNF 5160 vars 20153 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8381, clauses: 34445, status: Satisfied, time: 0.84849414s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15622, clauses: 63350
last 15622 length 63350
CNF 15622 vars 63350 clauses
**************************************************
summary
**************************************************
SRS with 8 rules on 6 letters       DP
SRS with 19 strict rules and 8 weak rules on 11 letters       weights
SRS with 7 strict rules and 8 weak rules on 11 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 8 weak rules on 7 letters       Usable
  SRS with 1 strict rules and 7 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 7 weak rules on 5 letters       EDG

  2 SRS with 5 strict rules and 8 weak rules on 9 letters       Usable
  SRS with 5 strict rules and 7 weak rules on 8 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 4 strict rules and 7 weak rules on 8 letters       EDG
  SRS with 4 strict rules and 7 weak rules on 8 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 7 weak rules on 7 letters       EDG
  SRS with 2 strict rules and 7 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 7 weak rules on 7 letters       weights
  SRS with 0 strict rules and 7 weak rules on 5 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a] -> [a, b, c] {- Input 0 -}
  [c, a] -> [a, c] {- Input 1 -}
  [b, c, a] -> [a, b, c] {- Input 2 -}
  [c, b] -> [d] {- Input 3 -}
  [a, d] -> [d, a] {- Input 4 -}
  [d] -> [b, a] {- Input 5 -}
  [L, a, a] -> [L, a, b, c] {- Input 6 -}
  [c, R] -> [c, b, R] {- Input 7 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [L, a, a] ->= [L, a, b, c] {- DP Nontop (Input 6) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
  [L#, a, a] |-> [L#, a, b, c] {- DP (Top 0) (Input 6) -}
  [L#, a, a] |-> [a#, b, c] {- DP (Top 1) (Input 6) -}
  [L#, a, a] |-> [b#, c] {- DP (Top 2) (Input 6) -}
  [L#, a, a] |-> [c#] {- DP (Top 3) (Input 6) -}
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [a#, d] |-> [a#] {- DP (Top 1) (Input 4) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, a, a] |-> [b#, c] {- DP (Top 1) (Input 0) -}
  [b#, a, a] |-> [c#] {- DP (Top 2) (Input 0) -}
  [b#, c, a] |-> [a#, b, c] {- DP (Top 0) (Input 2) -}
  [b#, c, a] |-> [b#, c] {- DP (Top 1) (Input 2) -}
  [b#, c, a] |-> [c#] {- DP (Top 2) (Input 2) -}
  [c#, R] |-> [b#, R] {- DP (Top 1) (Input 7) -}
  [c#, R] |-> [c#, b, R] {- DP (Top 0) (Input 7) -}
  [c#, a] |-> [a#, c] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [c#] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [d#] {- DP (Top 0) (Input 3) -}
reason
  (L, 0/1)
  (d, 2/1)
  (R, 0/1)
  (a, 2/1)
  (b, 0/1)
  (c, 2/1)
  (L#, 1/1)
  (d#, 2/1)
  (a#, 2/1)
  (b#, 0/1)
  (c#, 3/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [L, a, a] ->= [L, a, b, c] {- DP Nontop (Input 6) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
  [L#, a, a] |-> [L#, a, b, c] {- DP (Top 0) (Input 6) -}
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, c, a] |-> [a#, b, c] {- DP (Top 0) (Input 2) -}
  [c#, R] |-> [c#, b, R] {- DP (Top 0) (Input 7) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [L#, a, a] |-> [L#, a, b, c] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [L, a, a] ->= [L, a, b, c] {- DP Nontop (Input 6) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  remove un-usable
    SRS
      [L, a, a] ->= [L, a, b, c] {- DP Nontop (Input 6) -}
   property Termination
has value Just True
for SRS
  [L#, a, a] |-> [L#, a, b, c] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  ( d
  , Wk  / 0A 0A 0A \
        | 0A 0A 1A |
        \ -  -  0A / )
  ( R
  , Wk  / -  - 1A \
        | 1A - -  |
        \ -  - 0A / )
  ( a
  , Wk  / 1A 1A -  \
        | -  1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / -1A -1A 0A \
        | -1A -   -  |
        \ -   -   0A / )
  ( c
  , Wk  / 1A 1A -  \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( L#
  , Wk  / 0A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 5) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, c, a] |-> [a#, b, c] {- DP (Top 0) (Input 2) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [L, a, a] ->= [L, a, b, c] {- DP Nontop (Input 6) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  remove un-usable
    SRS
      [L, a, a] ->= [L, a, b, c] {- DP Nontop (Input 6) -}
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 5) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, c, a] |-> [a#, b, c] {- DP (Top 0) (Input 2) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  ( d
  , Wk  / 6A 6A 9A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( R
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 6A 9A 9A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( d#
  , Wk  / 7A 7A 10A - \
        | 7A 7A 10A - |
        | 7A 7A 10A - |
        \ -  -  -   - / )
  ( a#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 5) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 5) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  ( d
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( R
  , Wk  / 3A 3A 6A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 3A 3A 6A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( d#
  , Wk  / 13A 13A 16A - \
        | 13A 13A 16A - |
        | 13A 13A 16A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  ( d
  , Wk  / 1A 0A 1A \
        | -  1A 2A |
        \ -  -  0A / )
  ( R
  , Wk  / - - 1A \
        | - - 1A |
        \ - - 0A / )
  ( a
  , Wk  / 1A 0A 1A \
        | -  0A -  |
        \ -  -  0A / )
  ( b
  , Wk  / 0A 0A -  \
        | -  -  2A |
        \ -  -  0A / )
  ( c
  , Wk  / 1A -1A -  \
        | 1A 0A  -  |
        \ -  -   0A / )
  ( d#
  , Wk  / - 0A 1A \
        | - -  -  |
        \ - -  0A / )
  ( a#
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 4) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  (d, 0/1)
  (R, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (d#, 0/1)
  (a#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 4) -}
  [d] ->= [b, a] {- DP Nontop (Input 5) -}
  [c, R] ->= [c, b, R] {- DP Nontop (Input 7) -}
reason
  EDG

**************************************************
skeleton: (8,6)\Deepee(19/8,11)\Weight(7/8,11)\EDG[(1/8,7)\Usable(1/7,6)\Matrix{\ArcticBZ}{3}(0/7,5)\EDG[],(5/8,9)\Usable(5/7,8)\Matrix{\Arctic}{3}\EDG(4/7,8)\Matrix{\Arctic}{3}\EDG(2/7,7)\Matrix{\ArcticBZ}{3}(1/7,7)\Weight(0/7,5)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.075585655000
  min duration 0.247659279000
  total durat. 1.323244934000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 7
      , total_length = 37}
    , self = 90
    , parent = Nothing
    , duration = 1.075585655000
    , status = Success
    , start = 2025-09-03 13:37:22.654694172 UTC
    , finish = 2025-09-03 13:37:23.730279827 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.280615780000
  min duration 2.280615780000
  total durat. 2.280615780000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 6
      , total_length = 38}
    , self = 95
    , parent = Nothing
    , duration = 2.280615780000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:21.585257691 UTC
    , finish = 2025-09-03 13:37:23.865873471 UTC
    , thread_cap_info = ("ThreadId 47", 3, False)}
**************************************************
E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
E            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E            = True})" , input_size = Size { num_rules = 8 , num_strict_rules = 8 ,
E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
E            = 38} , self = 95 , parent = Nothing , duration = 2.280615780000 , status
E            = Except "AsyncCancelled" , start = 2025-09-03 13:37:21.585257691 UTC ,
E            finish = 2025-09-03 13:37:23.865873471 UTC , thread_cap_info = ("ThreadId
E            47", 3, False)}
E            
| S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S          = Size { num_rules = 930 , num_strict_rules = 704 , num_top_rules = 704
| S          , num_weak_rules = 226 , alphabet_size = 65 , total_length = 5756} , self
| S          = 55 , parent = Nothing , duration = 0.252340795000 , status = Success
| S          , start = 2025-09-03 13:37:21.599800827 UTC , finish = 2025-09-03 13:37:21.852141622
| S          UTC , thread_cap_info = ("ThreadId 80", 2, False)}
| S          
| | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F        = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | F        = 38} , self = 51 , parent = Nothing , duration = 0.104798734000 , status
| | F        = Fail , start = 2025-09-03 13:37:21.602754796 UTC , finish = 2025-09-03
| | F        13:37:21.70755353 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| | F        
| | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | F      = 6 , total_length = 38} , self = 64 , parent = Nothing , duration = 0.350750812000
| | | F      , status = Fail , start = 2025-09-03 13:37:21.617073433 UTC , finish =
| | | F      2025-09-03 13:37:21.967824245 UTC , thread_cap_info = ("ThreadId 95", 0,
| | | F      False)}
| | | F      
| | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | F    = 6 , total_length = 38} , self = 58 , parent = Nothing , duration = 0.271052700000
| | | | F    , status = Fail , start = 2025-09-03 13:37:21.643296021 UTC , finish =
| | | | F    2025-09-03 13:37:21.914348721 UTC , thread_cap_info = ("ThreadId 98", 0,
| | | | F    False)}
| | | | F    
| | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | S  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | | S  = 6 , total_length = 38} , self = 56 , parent = Nothing , duration = 0.247659279000
| | | | | S  , status = Success , start = 2025-09-03 13:37:21.662514467 UTC , finish
| | | | | S  = 2025-09-03 13:37:21.910173746 UTC , thread_cap_info = ("ThreadId 99",
| | | | | S  0, False)}
| | | | | S  
| | F | | |  
| | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | F | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | F | | |  = 6 , total_length = 38} , self = 75 , parent = Nothing , duration = 0.536093097000
| | F | | |  , status = Fail , start = 2025-09-03 13:37:21.734824578 UTC , finish =
| | F | | |  2025-09-03 13:37:22.270917675 UTC , thread_cap_info = ("ThreadId 101",
| | F | | |  0, False)}
| | F | | |  
| S | | | |  
| S | | | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| S | | | |  verbose = False}" , input_size = Size { num_rules = 417 , num_strict_rules
| S | | | |  = 191 , num_top_rules = 191 , num_weak_rules = 226 , alphabet_size = 65
| S | | | |  , total_length = 2904} , self = 76 , parent = Nothing , duration = 0.419018958000
| S | | | |  , status = Success , start = 2025-09-03 13:37:21.884522222 UTC , finish
| S | | | |  = 2025-09-03 13:37:22.30354118 UTC , thread_cap_info = ("ThreadId 76",
| S | | | |  2, False)}
| S | | | |  
| | | | | S  
| | | | F    
| | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S    = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
| | | | S    alphabet_size = 8 , total_length = 52} , self = 66 , parent = Nothing ,
| | | | S    duration = 0.175409465000 , status = Success , start = 2025-09-03 13:37:21.937830132
| | | | S    UTC , finish = 2025-09-03 13:37:22.113239597 UTC , thread_cap_info = ("ThreadId
| | | | S    116", 0, False)}
| | | | S    
| | | F |    
| | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| | | E |    = 8 , total_length = 52} , self = 68 , parent = Nothing , duration = 0.181831526000
| | | E |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:22.03027076
| | | E |    UTC , finish = 2025-09-03 13:37:22.212102286 UTC , thread_cap_info = ("ThreadId
| | | E |    119", 0, False)}
| | | E |    
| | | | S    
| | | E      
| | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S      = 11 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 ,
| | | S      alphabet_size = 8 , total_length = 46} , self = 79 , parent = Nothing ,
| | | S      duration = 0.225972418000 , status = Success , start = 2025-09-03 13:37:22.224505279
| | | S      UTC , finish = 2025-09-03 13:37:22.450477697 UTC , thread_cap_info = ("ThreadId
| | | S      129", 0, False)}
| | | S      
| | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | E    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size
| | | | E    = 8 , total_length = 46} , self = 81 , parent = Nothing , duration = 0.324284665000
| | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:22.26566265
| | | | E    UTC , finish = 2025-09-03 13:37:22.589947315 UTC , thread_cap_info = ("ThreadId
| | | | E    131", 0, False)}
| | | | E    
| | F | |    
| S   | |    
| F   | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |    = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| F   | |    = 6 , total_length = 38} , self = 89 , parent = Nothing , duration = 0.724768084000
| F   | |    , status = Fail , start = 2025-09-03 13:37:22.313709578 UTC , finish =
| F   | |    2025-09-03 13:37:23.038477662 UTC , thread_cap_info = ("ThreadId 133",
| F   | |    0, False)}
| F   | |    
| |   S |    
| |     E    
| | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F        = 7 , total_length = 37} , self = 88 , parent = Nothing , duration = 0.265102699000
| | F        , status = Fail , start = 2025-09-03 13:37:22.605569994 UTC , finish =
| | F        2025-09-03 13:37:22.870672693 UTC , thread_cap_info = ("ThreadId 147",
| | F        0, False)}
| | F        
| | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | S      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | S      = 7 , total_length = 37} , self = 90 , parent = Nothing , duration = 1.075585655000
| | | S      , status = Success , start = 2025-09-03 13:37:22.654694172 UTC , finish
| | | S      = 2025-09-03 13:37:23.730279827 UTC , thread_cap_info = ("ThreadId 148",
| | | S      0, False)}
| | | S      
| | F |      
| | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | E |      = 7 , total_length = 37} , self = 92 , parent = Nothing , duration = 0.931112746000
| | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:22.87740292
| | E |      UTC , finish = 2025-09-03 13:37:23.808515666 UTC , thread_cap_info = ("ThreadId
| | E |      150", 0, False)}
| | E |      
| F | |      
|   | S      
|   E        
E            
