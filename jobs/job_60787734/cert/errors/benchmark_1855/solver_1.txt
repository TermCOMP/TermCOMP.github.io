last 1038 length 4125
last 1072 length 4231
CNF 1038 vars 4125 clauses
CNF 1072 vars 4231 clauses
last 1286 length 5069
last 1240 length 4963
CNF 1286 vars 5069 clauses
CNF 1240 vars 4963 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5422, clauses: 19159
last 5422 length 19159
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5422, clauses: 19159
CNF 5422 vars 19159 clauses
last 5422 length 19159
CNF 5422 vars 19159 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019
last 21139 length 88019
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019
CNF 21139 vars 88019 clauses
last 21139 length 88019
CNF 21139 vars 88019 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019, status: Satisfied, time: 0.51234145s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 990 length 3905
last 1183 length 4667
CNF 1183 vars 4667 clauses
CNF 990 vars 3905 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 17986
last 5116 length 17986
CNF 5116 vars 17986 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20507, clauses: 85355
last 20507 length 85355
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019, status: Satisfied, time: 1.372416974s
CNF 20507 vars 85355 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 1153 length 4595
last 968 length 3825
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20507, clauses: 85355, status: Satisfied, time: 0.432399961s
CNF 1153 vars 4595 clauses
CNF 968 vars 3825 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 17986
last 5116 length 17986
CNF 5116 vars 17986 clauses
**************************************************
summary
**************************************************
SRS with 15 rules on 8 letters       DP
SRS with 25 strict rules and 15 weak rules on 14 letters       weights
SRS with 6 strict rules and 15 weak rules on 11 letters       EDG
3 sub-proofs
  1 SRS with 2 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 2 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 2 strict rules and 15 weak rules on 9 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 15 weak rules on 9 letters       EDG
  SRS with 1 strict rules and 15 weak rules on 9 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 15 weak rules on 8 letters       EDG

  3 SRS with 2 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 2 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [r0, 0] -> [0, r0] {- Input 0 -}
  [r0, 1] -> [1, r0] {- Input 1 -}
  [r0, m] -> [m, r0] {- Input 2 -}
  [r1, 0] -> [0, r1] {- Input 3 -}
  [r1, 1] -> [1, r1] {- Input 4 -}
  [r1, m] -> [m, r1] {- Input 5 -}
  [r0, b] -> [qr, 0, b] {- Input 6 -}
  [r1, b] -> [qr, 1, b] {- Input 7 -}
  [0, qr] -> [qr, 0] {- Input 8 -}
  [1, qr] -> [qr, 1] {- Input 9 -}
  [m, qr] -> [ql, m] {- Input 10 -}
  [0, ql] -> [ql, 0] {- Input 11 -}
  [1, ql] -> [ql, 1] {- Input 12 -}
  [b, ql, 0] -> [0, b, r0] {- Input 13 -}
  [b, ql, 1] -> [1, b, r1] {- Input 14 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 1] |-> [1#, r1] {- DP (Top 0) (Input 4) -}
  [r1#, b] |-> [1#, b] {- DP (Top 1) (Input 7) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
  [r1#, 0] |-> [0#, r1] {- DP (Top 0) (Input 3) -}
  [r1#, m] |-> [r1#] {- DP (Top 1) (Input 5) -}
  [r1#, m] |-> [m#, r1] {- DP (Top 0) (Input 5) -}
  [1#, qr] |-> [1#] {- DP (Top 1) (Input 9) -}
  [1#, ql] |-> [1#] {- DP (Top 1) (Input 12) -}
  [b#, ql, 1] |-> [r1#] {- DP (Top 2) (Input 14) -}
  [b#, ql, 1] |-> [1#, b, r1] {- DP (Top 0) (Input 14) -}
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [b#, ql, 0] |-> [b#, r0] {- DP (Top 1) (Input 13) -}
  [b#, ql, 0] |-> [0#, b, r0] {- DP (Top 0) (Input 13) -}
  [b#, ql, 0] |-> [r0#] {- DP (Top 2) (Input 13) -}
  [0#, qr] |-> [0#] {- DP (Top 1) (Input 8) -}
  [0#, ql] |-> [0#] {- DP (Top 1) (Input 11) -}
  [r0#, 1] |-> [1#, r0] {- DP (Top 0) (Input 1) -}
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, b] |-> [0#, b] {- DP (Top 1) (Input 6) -}
  [r0#, 0] |-> [0#, r0] {- DP (Top 0) (Input 0) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
  [r0#, m] |-> [r0#] {- DP (Top 1) (Input 2) -}
  [r0#, m] |-> [m#, r0] {- DP (Top 0) (Input 2) -}
  [m#, qr] |-> [m#] {- DP (Top 1) (Input 10) -}
reason
  (r1, 1/1)
  (qr, 1/1)
  (1, 0/1)
  (ql, 1/1)
  (b, 0/1)
  (0, 0/1)
  (r0, 1/1)
  (m, 2/1)
  (r1#, 2/1)
  (1#, 0/1)
  (b#, 2/1)
  (0#, 0/1)
  (r0#, 2/1)
  (m#, 0/1)
   property Termination
has value Just True
for SRS
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [b#, ql, 0] |-> [b#, r0] {- DP (Top 1) (Input 13) -}
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  remove un-usable
    SRS
      [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
      [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
      [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
      [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
      [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
      [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
      [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
      [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
      [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
      [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
      [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
      [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
      [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
      [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
      [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
   property Termination
has value Just True
for SRS
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
reason
  (1, 1/1)
  (0, 1/1)
  (r1#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [b#, ql, 0] |-> [b#, r0] {- DP (Top 1) (Input 13) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  ( r1
  , Wk  / 0A  0A -2A \
        | -2A 0A -2A |
        \ -   -  0A  / )
  ( qr
  , Wk  / -2A -   0A \
        | -2A -2A -  |
        \ -   -   0A / )
  ( 1
  , Wk  / 0A 0A 2A \
        | -  0A 2A |
        \ -  -  0A / )
  ( ql
  , Wk  / 0A -  0A  \
        | -  0A -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / 0A 0A -  \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( 0
  , Wk  / 2A 2A -  \
        | 0A 2A 2A |
        \ -  -  0A / )
  ( r0
  , Wk  / -2A 0A 0A \
        | -   0A -  |
        \ -   -  0A / )
  ( m
  , Wk  / - - 2A \
        | - - 2A |
        \ - - 0A / )
  ( b#
  , Wk  / 0A -1A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  ( r1
  , Wk  / 0A -1A -   \
        | 0A 0A  -1A |
        \ -  -   0A  / )
  ( qr
  , Wk  / -1A -   0A \
        | -   -1A -  |
        \ -   -   0A / )
  ( 1
  , Wk  / 0A 0A 0A \
        | 1A 1A -  |
        \ -  -  0A / )
  ( ql
  , Wk  / 0A -1A -  \
        | 1A 0A  0A |
        \ -  -   0A / )
  ( b
  , Wk  / 1A 1A -  \
        | -  1A 1A |
        \ -  -  0A / )
  ( 0
  , Wk  / 0A -1A -  \
        | -  0A  0A |
        \ -  -   0A / )
  ( r0
  , Wk  / 0A 0A -  \
        | -  0A -  |
        \ -  -  0A / )
  ( m
  , Wk  / - - 1A \
        | - - 2A |
        \ - - 0A / )
  ( b#
  , Wk  / 1A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  remove un-usable
    SRS
      [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
      [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
      [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
      [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
      [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
      [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
      [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
      [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
      [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
      [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
      [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
      [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
      [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
      [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
      [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
   property Termination
has value Just True
for SRS
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
reason
  (1, 1/1)
  (0, 1/1)
  (r0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (15,8)\Deepee(25/15,14)\Weight(6/15,11)\EDG[(2/15,9)\Usable(2,3)\Weight(0,0)\EDG[],(2/15,9)\Matrix{\ArcticBZ}{3}\EDG(1/15,9)\Matrix{\ArcticBZ}{3}(0/15,8)\EDG[],(2/15,9)\Usable(2,3)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 11
  max duration 1.332526432000
  min duration 0.000005676000
  total durat. 2.535061320000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 490
      , num_strict_rules = 88
      , num_top_rules = 88
      , num_weak_rules = 402
      , alphabet_size = 63
      , total_length = 3092}
    , self = 82
    , parent = Nothing
    , duration = 1.200883423000
    , status = Success
    , start = 2025-09-03 13:23:46.938769263 UTC
    , finish = 2025-09-03 13:23:48.139652686 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 474
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 402
      , alphabet_size = 57
      , total_length = 2964}
    , self = 68
    , parent = Nothing
    , duration = 1.332526432000
    , status = Success
    , start = 2025-09-03 13:23:46.37822809 UTC
    , finish = 2025-09-03 13:23:47.710754522 UTC
    , thread_cap_info = ("ThreadId 99", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 2.278371357000
  min duration 1.096360679000
  total durat. 4.590226803000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 58
    , parent = Nothing
    , duration = 1.096360679000
    , status = Success
    , start = 2025-09-03 13:23:45.719633365 UTC
    , finish = 2025-09-03 13:23:46.815994044 UTC
    , thread_cap_info = ("ThreadId 91", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 71}
    , self = 78
    , parent = Nothing
    , duration = 1.215494767000
    , status = Success
    , start = 2025-09-03 13:23:46.903612885 UTC
    , finish = 2025-09-03 13:23:48.119107652 UTC
    , thread_cap_info = ("ThreadId 117", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 70
    , parent = Nothing
    , duration = 2.278371357000
    , status = Success
    , start = 2025-09-03 13:23:45.718528187 UTC
    , finish = 2025-09-03 13:23:47.996899544 UTC
    , thread_cap_info = ("ThreadId 90", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.431379412000
  min duration 1.199754446000
  total durat. 4.921971665000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 60
    , parent = Nothing
    , duration = 1.199754446000
    , status = Fail
    , start = 2025-09-03 13:23:45.626909873 UTC
    , finish = 2025-09-03 13:23:46.826664319 UTC
    , thread_cap_info = ("ThreadId 81", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 71}
    , self = 83
    , parent = Nothing
    , duration = 1.290837807000
    , status = Fail
    , start = 2025-09-03 13:23:46.871210246 UTC
    , finish = 2025-09-03 13:23:48.162048053 UTC
    , thread_cap_info = ("ThreadId 116", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 73
    , parent = Nothing
    , duration = 2.431379412000
    , status = Fail
    , start = 2025-09-03 13:23:45.626315401 UTC
    , finish = 2025-09-03 13:23:48.057694813 UTC
    , thread_cap_info = ("ThreadId 80", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 10
  max duration 0.967720375000
  min duration 0.000008803000
  total durat. 1.671381376000
**************************************************
F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F            = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
F            = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size = 9 , total_length
F            = 76} , self = 47 , parent = Nothing , duration = 0.130291600000 , status
F            = Fail , start = 2025-09-03 13:23:45.574516195 UTC , finish = 2025-09-03
F            13:23:45.704807795 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
F            
| S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S          = Size { num_rules = 960 , num_strict_rules = 960 , num_top_rules = 0 ,
| S          num_weak_rules = 0 , alphabet_size = 64 , total_length = 6144} , self =
| S          49 , parent = Nothing , duration = 0.158507624000 , status = Success ,
| S          start = 2025-09-03 13:23:45.583223405 UTC , finish = 2025-09-03 13:23:45.741731029
| S          UTC , thread_cap_info = ("ThreadId 77", 3, False)}
| S          
| | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | F        = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| | F        = 76} , self = 48 , parent = Nothing , duration = 0.101705844000 , status
| | F        = Fail , start = 2025-09-03 13:23:45.603126925 UTC , finish = 2025-09-03
| | F        13:23:45.704832769 UTC , thread_cap_info = ("ThreadId 76", 2, False)}
| | F        
| | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 17 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 ,
| | | F      alphabet_size = 9 , total_length = 76} , self = 73 , parent = Nothing ,
| | | F      duration = 2.431379412000 , status = Fail , start = 2025-09-03 13:23:45.626315401
| | | F      UTC , finish = 2025-09-03 13:23:48.057694813 UTC , thread_cap_info = ("ThreadId
| | | F      80", 2, False)}
| | | F      
| | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 17 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 ,
| | | | F    alphabet_size = 9 , total_length = 76} , self = 60 , parent = Nothing ,
| | | | F    duration = 1.199754446000 , status = Fail , start = 2025-09-03 13:23:45.626909873
| | | | F    UTC , finish = 2025-09-03 13:23:46.826664319 UTC , thread_cap_info = ("ThreadId
| | | | F    81", 2, False)}
| | | | F    
F | | | |    
  | F | |    
S |   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S |   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S |   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S |   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
S |   | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size
S |   | |    = 9 , total_length = 76} , self = 70 , parent = Nothing , duration = 2.278371357000
S |   | |    , status = Success , start = 2025-09-03 13:23:45.718528187 UTC , finish
S |   | |    = 2025-09-03 13:23:47.996899544 UTC , thread_cap_info = ("ThreadId 90",
S |   | |    2, False)}
S |   | |    
| | S | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | S | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size
| | S | |    = 9 , total_length = 76} , self = 58 , parent = Nothing , duration = 1.096360679000
| | S | |    , status = Success , start = 2025-09-03 13:23:45.719633365 UTC , finish
| | S | |    = 2025-09-03 13:23:46.815994044 UTC , thread_cap_info = ("ThreadId 91",
| | S | |    2, False)}
| | S | |    
| S | | |    
| S | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | | |    = Size { num_rules = 1228 , num_strict_rules = 826 , num_top_rules = 826
| S | | |    , num_weak_rules = 402 , alphabet_size = 83 , total_length = 6922} , self
| S | | |    = 57 , parent = Nothing , duration = 0.466297271000 , status = Success
| S | | |    , start = 2025-09-03 13:23:45.878323545 UTC , finish = 2025-09-03 13:23:46.344620816
| S | | |    UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| S | | |    
| | | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | S  = Size { num_rules = 1218 , num_strict_rules = 816 , num_top_rules = 816
| | | | | S  , num_weak_rules = 402 , alphabet_size = 85 , total_length = 6794} , self
| | | | | S  = 67 , parent = Nothing , duration = 0.967720375000 , status = Success
| | | | | S  , start = 2025-09-03 13:23:45.937512248 UTC , finish = 2025-09-03 13:23:46.905232623
| | | | | S  UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | | | S  
| S | | | |  
| S | | | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| S | | | |  verbose = False}" , input_size = Size { num_rules = 474 , num_strict_rules
| S | | | |  = 72 , num_top_rules = 72 , num_weak_rules = 402 , alphabet_size = 57 ,
| S | | | |  total_length = 2964} , self = 68 , parent = Nothing , duration = 1.332526432000
| S | | | |  , status = Success , start = 2025-09-03 13:23:46.37822809 UTC , finish
| S | | | |  = 2025-09-03 13:23:47.710754522 UTC , thread_cap_info = ("ThreadId 99",
| S | | | |  3, False)}
| S | | | |  
| | S | | |  
| |   | F |  
| | F |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   |  = 16 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 15 ,
| | F |   |  alphabet_size = 9 , total_length = 71} , self = 83 , parent = Nothing ,
| | F |   |  duration = 1.290837807000 , status = Fail , start = 2025-09-03 13:23:46.871210246
| | F |   |  UTC , finish = 2025-09-03 13:23:48.162048053 UTC , thread_cap_info = ("ThreadId
| | F |   |  116", 2, False)}
| | F |   |  
| | | | S |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | | S |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 15 , alphabet_size
| | | | S |  = 9 , total_length = 71} , self = 78 , parent = Nothing , duration = 1.215494767000
| | | | S |  , status = Success , start = 2025-09-03 13:23:46.903612885 UTC , finish
| | | | S |  = 2025-09-03 13:23:48.119107652 UTC , thread_cap_info = ("ThreadId 117",
| | | | S |  2, False)}
| | | | S |  
| | | | | S  
| | | | | S  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | S  verbose = False}" , input_size = Size { num_rules = 490 , num_strict_rules
| | | | | S  = 88 , num_top_rules = 88 , num_weak_rules = 402 , alphabet_size = 63 ,
| | | | | S  total_length = 3092} , self = 82 , parent = Nothing , duration = 1.200883423000
| | | | | S  , status = Success , start = 2025-09-03 13:23:46.938769263 UTC , finish
| | | | | S  = 2025-09-03 13:23:48.139652686 UTC , thread_cap_info = ("ThreadId 101",
| | | | | S  3, False)}
| | | | | S  
| S | | | |  
S   | | | |  
    | F | |  
    |   S |  
    |     S  
    F        
