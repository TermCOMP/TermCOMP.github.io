last 588 length 2322
last 752 length 2939
CNF 588 vars 2322 clauses
last 617 length 2502
CNF 752 vars 2939 clauses
CNF 617 vars 2502 clauses
last 652 length 2605
CNF 652 vars 2605 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2520, clauses: 9389
last 2520 length 9389
CNF 2520 vars 9389 clauses
last 1915 length 7983
CNF 1915 vars 7983 clauses
last 2131 length 8918
CNF 2131 vars 8918 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8679
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2520, clauses: 9389, status: Satisfied, time: 0.044927443s
last 2372 length 8679
last 4699 length 18886
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6402, clauses: 26589
last 430 length 1719
last 401 length 1640
last 5556 length 23113
CNF 2372 vars 8679 clauses
last 6754 length 27737
CNF 4699 vars 18886 clauses
last 6402 length 26589
CNF 6754 vars 27737 clauses
CNF 430 vars 1719 clauses
CNF 5556 vars 23113 clauses
last 7767 length 31946
CNF 401 vars 1640 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8679, status: Satisfied, time: 0.201010074s
CNF 6402 vars 26589 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1456, clauses: 5203
last 1456 length 5203
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5013, clauses: 20847
last 5013 length 20847
CNF 1456 vars 5203 clauses
CNF 7767 vars 31946 clauses
CNF 5013 vars 20847 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1456, clauses: 5203, status: Unsatisfied, time: 0.050417861s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11319, clauses: 45245
last 586 length 2385
last 636 length 2547
last 11319 length 45245
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3048, clauses: 12284
CNF 586 vars 2385 clauses
CNF 636 vars 2547 clauses
CNF 11319 vars 45245 clauses
last 3048 length 12284
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5013, clauses: 20847, status: Unsatisfied, time: 0.25110314s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8254
last 2266 length 8254
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6356, clauses: 26413
CNF 3048 vars 12284 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11319, clauses: 45245, status: Satisfied, time: 0.187351531s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2389, clauses: 9028
last 6356 length 26413
CNF 2266 vars 8254 clauses
last 2389 length 9028
CNF 6356 vars 26413 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10919, clauses: 44403
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8254, status: Satisfied, time: 0.052071198s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3048, clauses: 12284, status: Unsatisfied, time: 0.254904183s
CNF 2389 vars 9028 clauses
last 2162 length 8992
last 2461 length 10295
last 10919 length 44403
CNF 2162 vars 8992 clauses
**************************************************CNF 2461 vars 10295 clauses

summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 5 strict rules and 3 weak rules on 4 letters       EDG
SRS with 5 strict rules and 3 weak rules on 4 letters       CNF 10919 vars 44403 clauses
Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 3 weak rules on 4 letters       EDG
SRS with 4 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 3 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 3 letters       EDG
SRS with 1 strict rules and 3 weak rules on 3 letters       Usable
SRS with 1 rules on 2 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b] -> [a, a, a] {- Input 0 -}
  [a, a, b] -> [b] {- Input 1 -}
  [a, b, a] -> [a, b, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b] -> [a, a, a] {- Mirror (Input 0) -}
  [b, a, a] -> [b] {- Mirror (Input 1) -}
  [a, b, a] -> [b, b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 7A 8A 10A - \
        | 7A 8A 10A - |
        | 7A 8A 10A - |
        \ -  -  -   - / )
  ( b#
  , Wk  / 7A 8A 8A - \
        | 7A 8A 8A - |
        | 7A 8A 8A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 3A 4A 4A - \
        | 3A 4A 4A - |
        | 3A 4A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  remove un-usable
    SRS
      [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
      [b, a, a] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
      [a, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee\EDG(5/3,4)\Matrix{\Arctic}{3}\EDG(4/3,4)\Matrix{\Arctic}{3}(3/3,4)\Weight\EDG(1/3,3)\Usable(1,2)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.539593171000
  min duration 0.025419087000
  total durat. 1.377859395000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.355939745000
  min duration 0.033564969000
  total durat. 1.179696272000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.650811139000
  min duration 0.212961425000
  total durat. 1.694685020000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.643206714000
  min duration 0.243423730000
  total durat. 1.603457090000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.235018278000
  min duration 1.235018278000
  total durat. 1.235018278000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 15}
    , self = 100
    , parent = Nothing
    , duration = 1.235018278000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:30.327864742 UTC
    , finish = 2025-09-03 10:45:31.56288302 UTC
    , thread_cap_info = ("ThreadId 36", 2, False)}
**************************************************
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                  = 15} , self = 100 , parent = Nothing , duration = 1.235018278000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 10:45:30.327864742 UTC ,
E                  finish = 2025-09-03 10:45:31.56288302 UTC , thread_cap_info = ("ThreadId
E                  36", 2, False)}
E                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| F                = 32 , num_top_rules = 32 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| F                = 276} , self = 69 , parent = Nothing , duration = 0.378389992000 , status
| F                = Fail , start = 2025-09-03 10:45:30.360427984 UTC , finish = 2025-09-03
| F                10:45:30.738817976 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| F                
| | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S              = 9 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| | S              = 4 , total_length = 42} , self = 61 , parent = Nothing , duration = 0.243423730000
| | S              , status = Success , start = 2025-09-03 10:45:30.362908961 UTC , finish
| | S              = 2025-09-03 10:45:30.606332691 UTC , thread_cap_info = ("ThreadId 91",
| | S              1, False)}
| | S              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | F            = 32 , num_top_rules = 32 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | F            = 276} , self = 68 , parent = Nothing , duration = 0.335080236000 , status
| | | F            = Fail , start = 2025-09-03 10:45:30.38323727 UTC , finish = 2025-09-03
| | | F            10:45:30.718317506 UTC , thread_cap_info = ("ThreadId 92", 3, False)}
| | | F            
| | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S          = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | S          = 4 , total_length = 37} , self = 71 , parent = Nothing , duration = 0.381322444000
| | | | S          , status = Success , start = 2025-09-03 10:45:30.383241391 UTC , finish
| | | | S          = 2025-09-03 10:45:30.764563835 UTC , thread_cap_info = ("ThreadId 93",
| | | | S          1, False)}
| | | | S          
| | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | E        , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| | | | | E        = 4 , total_length = 42} , self = 63 , parent = Nothing , duration = 0.212961425000
| | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:30.393568643
| | | | | E        UTC , finish = 2025-09-03 10:45:30.606530068 UTC , thread_cap_info = ("ThreadId
| | | | | E        98", 1, False)}
| | | | | E        
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | E      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | | E      = 4 , total_length = 37} , self = 75 , parent = Nothing , duration = 0.507551344000
| | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:30.43924069
| | | | | | E      UTC , finish = 2025-09-03 10:45:30.946792034 UTC , thread_cap_info = ("ThreadId
| | | | | | E      107", 1, False)}
| | | | | | E      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| | | | | | | F    = 34 , num_top_rules = 34 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | F    = 288} , self = 79 , parent = Nothing , duration = 0.539593171000 , status
| | | | | | | F    = Fail , start = 2025-09-03 10:45:30.463612046 UTC , finish = 2025-09-03
| | | | | | | F    10:45:31.003205217 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| | | | | | | | F  = 34 , num_top_rules = 34 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | | F  = 288} , self = 74 , parent = Nothing , duration = 0.355939745000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 10:45:30.486940513 UTC , finish = 2025-09-03
| | | | | | | | F  10:45:30.842880258 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | | | | | | F  
| | S | | | | | |  
| |   | | E | | |  
| | F | |   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F | |   | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | F | |   | | |  = 21} , self = 70 , parent = Nothing , duration = 0.140661647000 , status
| | F | |   | | |  = Fail , start = 2025-09-03 10:45:30.606705624 UTC , finish = 2025-09-03
| | F | |   | | |  10:45:30.747367271 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| | F | |   | | |  
| | | | | F | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | F | | |  = 21} , self = 72 , parent = Nothing , duration = 0.156829427000 , status
| | | | | F | | |  = Fail , start = 2025-09-03 10:45:30.61100343 UTC , finish = 2025-09-03
| | | | | F | | |  10:45:30.767832857 UTC , thread_cap_info = ("ThreadId 118", 1, False)}
| | | | | F | | |  
| | | F | | | | |  
| | | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | | |  = 44 , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 12
| | | S | | | | |  , alphabet_size = 8 , total_length = 276} , self = 85 , parent = Nothing
| | | S | | | | |  , duration = 0.643206714000 , status = Success , start = 2025-09-03 10:45:30.718343726
| | | S | | | | |  UTC , finish = 2025-09-03 10:45:31.36155044 UTC , thread_cap_info = ("ThreadId
| | | S | | | | |  126", 3, False)}
| | | S | | | | |  
| F | | | | | | |  
| E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 44
| E | | | | | | |  , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 12 , alphabet_size
| E | | | | | | |  = 8 , total_length = 276} , self = 87 , parent = Nothing , duration = 0.650811139000
| E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:30.745588105
| E | | | | | | |  UTC , finish = 2025-09-03 10:45:31.396399244 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |  128", 3, False)}
| E | | | | | | |  
| | F | | | | | |  
| |   | S | | | |  
| |   |   F | | |  
| | F |     | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |     | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |     | | |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | F |     | | |  = 3 , total_length = 21} , self = 81 , parent = Nothing , duration = 0.216826079000
| | F |     | | |  , status = Fail , start = 2025-09-03 10:45:30.828000459 UTC , finish =
| | F |     | | |  2025-09-03 10:45:31.044826538 UTC , thread_cap_info = ("ThreadId 130",
| | F |     | | |  1, False)}
| | F |     | | |  
| | | |     | | F  
| | | | F   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F   | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | F   | |    = 3 , total_length = 21} , self = 84 , parent = Nothing , duration = 0.476203626000
| | | | F   | |    , status = Fail , start = 2025-09-03 10:45:30.842900701 UTC , finish =
| | | | F   | |    2025-09-03 10:45:31.319104327 UTC , thread_cap_info = ("ThreadId 132",
| | | | F   | |    1, False)}
| | | | F   | |    
| | | | |   E |    
| | | | |     F    
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F        = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F        = 34} , self = 82 , parent = Nothing , duration = 0.171948221000 , status
| | | | | F        = Fail , start = 2025-09-03 10:45:31.033377833 UTC , finish = 2025-09-03
| | | | | F        10:45:31.205326054 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | F      = 34} , self = 83 , parent = Nothing , duration = 0.174981921000 , status
| | | | | | F      = Fail , start = 2025-09-03 10:45:31.038673836 UTC , finish = 2025-09-03
| | | | | | F      10:45:31.213655757 UTC , thread_cap_info = ("ThreadId 140", 1, False)}
| | | | | | F      
| | F | | | |      
| | F | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | F | | | |      = 3 , total_length = 21} , self = 99 , parent = Nothing , duration = 0.505531204000
| | F | | | |      , status = Fail , start = 2025-09-03 10:45:31.044857573 UTC , finish =
| | F | | | |      2025-09-03 10:45:31.550388777 UTC , thread_cap_info = ("ThreadId 142",
| | F | | | |      1, False)}
| | F | | | |      
| | | | | F |      
| | | | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |      = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | | S |      = 4 , total_length = 34} , self = 92 , parent = Nothing , duration = 0.335504202000
| | | | | S |      , status = Success , start = 2025-09-03 10:45:31.211216734 UTC , finish
| | | | | S |      = 2025-09-03 10:45:31.546720936 UTC , thread_cap_info = ("ThreadId 146",
| | | | | S |      1, False)}
| | | | | S |      
| | | | | | F      
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | | | E      = 4 , total_length = 34} , self = 94 , parent = Nothing , duration = 0.323361112000
| | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:31.223589364
| | | | | | E      UTC , finish = 2025-09-03 10:45:31.546950476 UTC , thread_cap_info = ("ThreadId
| | | | | | E      147", 1, False)}
| | | | | | E      
| | | | F | |      
| | | S   | |      
| E |     | |      
|   |     S |      
|   |       E      
|   F              
E                  
