last 5140 length 25367
last 4242 length 19039
CNF 4242 vars 19039 clauses
CNF 5140 vars 25367 clauses
last 569 length 2284
last 427 length 1742
last 462 length 1813
CNF 569 vars 2284 clauses
last 464 length 1842
last 5925 length 24561
CNF 427 vars 1742 clauses
last 5675 length 25848
last 6392 length 26724
last 7403 length 35960
CNF 462 vars 1813 clauses
CNF 464 vars 1842 clauses
CNF 5925 vars 24561 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2248, clauses: 7987
CNF 5675 vars 25848 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1745, clauses: 6186
CNF 6392 vars 26724 clauses
CNF 7403 vars 35960 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6457, clauses: 26625
last 2248 length 7987
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5744, clauses: 23739
last 1745 length 6186
last 6457 length 26625
last 5744 length 23739
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10619, clauses: 39318
CNF 1745 vars 6186 clauses
CNF 2248 vars 7987 clauses
CNF 6457 vars 26625 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13091, clauses: 49602
last 10619 length 39318
CNF 5744 vars 23739 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1745, clauses: 6186, status: Satisfied, time: 0.522979533s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2248, clauses: 7987, status: Unsatisfied, time: 0.720161064s
last 13091 length 49602
CNF 10619 vars 39318 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41956, clauses: 176092
**************************************************
last 41956 length 176092
CNF 13091 vars 49602 clauses
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b] -> [c, c, b, a] {- Input 1 -}
  [b, c] -> [a, b] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, a, b] -> [c, c, b, a] {- Input 1 -}
  [b, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b, a, a] -> [a, b, c, c] {- Mirror (Input 1) -}
  [c, b] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [a#, b, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [c#, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, b] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, b] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 2/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 3/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 10A 12A 13A - \
        | 10A 12A 13A - |
        | 10A 12A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(1/5,4)\Matrix{\Arctic}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.480586009000
  min duration 0.145934503000
  total durat. 1.387393507000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.422623208000
  min duration 0.152756051000
  total durat. 1.350065962000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.289973737000
  min duration 1.289973737000
  total durat. 1.289973737000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 71
    , parent = Nothing
    , duration = 1.289973737000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:01:28.77118344 UTC
    , finish = 2025-09-03 11:01:30.061157177 UTC
    , thread_cap_info = ("ThreadId 34", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.274076104000
  min duration 1.274076104000
  total durat. 1.274076104000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 70
    , parent = Nothing
    , duration = 1.274076104000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:01:28.771221156 UTC
    , finish = 2025-09-03 11:01:30.04529726 UTC
    , thread_cap_info = ("ThreadId 48", 1, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 12} , self = 71 , parent = Nothing , duration = 1.289973737000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 11:01:28.77118344 UTC ,
E                      finish = 2025-09-03 11:01:30.061157177 UTC , thread_cap_info = ("ThreadId
E                      34", 2, False)}
E                      
| E                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E                    = 12} , self = 70 , parent = Nothing , duration = 1.274076104000 , status
| E                    = Except "AsyncCancelled" , start = 2025-09-03 11:01:28.771221156 UTC ,
| E                    finish = 2025-09-03 11:01:30.04529726 UTC , thread_cap_info = ("ThreadId
| E                    48", 1, False)}
| E                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                  = 162} , self = 52 , parent = Nothing , duration = 0.145934503000 , status
| | F                  = Fail , start = 2025-09-03 11:01:28.777548881 UTC , finish = 2025-09-03
| | F                  11:01:28.923483384 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 162} , self = 56 , parent = Nothing , duration = 0.152756051000 , status
| | | F                = Fail , start = 2025-09-03 11:01:28.783165004 UTC , finish = 2025-09-03
| | | F                11:01:28.935921055 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | F              = 20 , num_top_rules = 20 , num_weak_rules = 27 , alphabet_size = 13 ,
| | | | F              total_length = 276} , self = 63 , parent = Nothing , duration = 0.480586009000
| | | | F              , status = Fail , start = 2025-09-03 11:01:28.797942874 UTC , finish =
| | | | F              2025-09-03 11:01:29.278528883 UTC , thread_cap_info = ("ThreadId 81", 2,
| | | | F              False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | | F            = 20 , num_top_rules = 20 , num_weak_rules = 27 , alphabet_size = 13 ,
| | | | | F            total_length = 276} , self = 61 , parent = Nothing , duration = 0.400563825000
| | | | | F            , status = Fail , start = 2025-09-03 11:01:28.802870791 UTC , finish =
| | | | | F            2025-09-03 11:01:29.203434616 UTC , thread_cap_info = ("ThreadId 82", 2,
| | | | | F            False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | F          = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | | | | F          = 216} , self = 62 , parent = Nothing , duration = 0.362967116000 , status
| | | | | | F          = Fail , start = 2025-09-03 11:01:28.862874004 UTC , finish = 2025-09-03
| | | | | | F          11:01:29.22584112 UTC , thread_cap_info = ("ThreadId 92", 2, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | F        = 9 , num_top_rules = 9 , num_weak_rules = 27 , alphabet_size = 12 , total_length
| | | | | | | F        = 216} , self = 64 , parent = Nothing , duration = 0.422623208000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:01:28.882880243 UTC , finish = 2025-09-03
| | | | | | | F        11:01:29.305503451 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | | F      = 32} , self = 59 , parent = Nothing , duration = 0.222014195000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 11:01:28.902884988 UTC , finish = 2025-09-03
| | | | | | | | F      11:01:29.124899183 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | | | F    = 32} , self = 57 , parent = Nothing , duration = 0.161059944000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 11:01:28.923437358 UTC , finish = 2025-09-03
| | | | | | | | | F    11:01:29.084497302 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | | | | F    
| | F | | | | | | |    
| | F | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F | | | | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F | | | | | | |    = 26} , self = 58 , parent = Nothing , duration = 0.175891684000 , status
| | F | | | | | | |    = Fail , start = 2025-09-03 11:01:28.928703539 UTC , finish = 2025-09-03
| | F | | | | | | |    11:01:29.104595223 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | F | | | | | | |    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | | | | F  = 26} , self = 60 , parent = Nothing , duration = 0.213062934000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 11:01:28.932903459 UTC , finish = 2025-09-03
| | | | | | | | | | F  11:01:29.145966393 UTC , thread_cap_info = ("ThreadId 102", 3, False)}
| | | | | | | | | | F  
| | | F | | | | | | |  
| | |   | | | | | F |  
| | F   | | | | |   |  
| | S   | | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | | | | |   |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | S   | | | | |   |  = 4 , total_length = 26} , self = 65 , parent = Nothing , duration = 0.928517389000
| | S   | | | | |   |  , status = Success , start = 2025-09-03 11:01:29.104640667 UTC , finish
| | S   | | | | |   |  = 2025-09-03 11:01:30.033158056 UTC , thread_cap_info = ("ThreadId 113",
| | S   | | | | |   |  3, False)}
| | S   | | | | |   |  
| | |   | | | | F   |  
| | |   | | | |     F  
| | | E | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E | | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | E | | | |        = 4 , total_length = 26} , self = 67 , parent = Nothing , duration = 0.890525764000
| | | E | | | |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:01:29.152355599
| | | E | | | |        UTC , finish = 2025-09-03 11:01:30.042881363 UTC , thread_cap_info = ("ThreadId
| | | E | | | |        116", 3, False)}
| | | E | | | |        
| | | | | F | |        
| | | | |   F |        
| | | | F     |        
| | | |       F        
| | S |                
| |   E                
| E                    
E                      
