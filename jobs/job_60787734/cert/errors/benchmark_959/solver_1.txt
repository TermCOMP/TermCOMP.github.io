last 9565 length 105220
CNF 9565 vars 105220 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5607, clauses: 20699
last 5607 length 20699
CNF 5607 vars 20699 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5607, clauses: 20699, status: Unsatisfied, time: 0.296407996s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6315, clauses: 24632
last 6315 length 24632
CNF 6315 vars 24632 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13234, clauses: 55582
last 13234 length 55582
CNF 13234 vars 55582 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21768, clauses: 91640
last 21768 length 91640
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6315, clauses: 24632, status: Satisfied, time: 0.479932s
CNF 21768 vars 91640 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21768, clauses: 91640, status: Satisfied, time: 0.485808021s
last 10194 length 129370
last 8967 length 101769
CNF 8967 vars 101769 clauses
CNF 10194 vars 129370 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4987, clauses: 18124
last 4987 length 18124
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5122, clauses: 18715
CNF 4987 vars 18124 clauses
last 5122 length 18715
CNF 5122 vars 18715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4987, clauses: 18124, status: Unsatisfied, time: 0.371999461s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5122, clauses: 18715, status: Unsatisfied, time: 0.567926886s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20227, clauses: 85172
last 20227 length 85172
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12560, clauses: 52770
last 12560 length 52770
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20762, clauses: 87471
last 20762 length 87471
CNF 20227 vars 85172 clauses
CNF 12560 vars 52770 clauses
CNF 20762 vars 87471 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12294, clauses: 51631
last 12294 length 51631
CNF 12294 vars 51631 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20762, clauses: 87471, status: Satisfied, time: 0.44013152s
**************************************************
summary
**************************************************
SRS with 7 rules on 5 letters       mirror
SRS with 7 rules on 5 letters       context
SRS with 11 rules on 5 letters       mirror
SRS with 11 rules on 5 letters       DP
SRS with 26 strict rules and 11 weak rules on 8 letters       weights
SRS with 4 strict rules and 11 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 3 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 11 weak rules on 7 letters       weights
  SRS with 1 strict rules and 11 weak rules on 6 letters       EDG
  SRS with 1 strict rules and 11 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 11 weak rules on 5 letters       EDG

  2 SRS with 1 strict rules and 11 weak rules on 6 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [foo, 0] -> [0, s, p, p, p, s, s, s, p, s] {- Input 0 -}
  [foo, s] -> [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- Input 1 -}
  [bar, 0] -> [0, p, s, s, s] {- Input 2 -}
  [bar, s] -> [p, s, p, p, s, s, foo, s, p, p, s, s] {- Input 3 -}
  [p, p, s] -> [p] {- Input 4 -}
  [p, s] -> [] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s] {- Input 6 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [0, foo] -> [s, p, s, s, s, p, p, p, s, 0] {- Mirror (Input 0) -}
  [s, foo] -> [ s , p , s , s , p , p , bar , s , p , s , s , p , p , foo , s , p , s , s , p , s , s , p , p , p , s , p ] {- Mirror (Input 1) -}
  [0, bar] -> [s, s, s, p, 0] {- Mirror (Input 2) -}
  [s, bar] -> [s, s, p, p, s, foo, s, s, p, p, s, p] {- Mirror (Input 3) -}
  [s, p, p] -> [p] {- Mirror (Input 4) -}
  [s, p] -> [] {- Mirror (Input 5) -}
  [0, p] -> [s, s, s, s, 0] {- Mirror (Input 6) -}
reason
  context
   property Termination
has value Just True
for SRS
  [0, foo] -> [s, p, s, s, s, p, p, p, s, 0] {- Mirror (Input 0) -}
  [s, foo] -> [ s , p , s , s , p , p , bar , s , p , s , s , p , p , foo , s , p , s , s , p , s , s , p , p , p , s , p ] {- Mirror (Input 1) -}
  [0, bar] -> [s, s, s, p, 0] {- Mirror (Input 2) -}
  [s, bar] -> [s, s, p, p, s, foo, s, s, p, p, s, p] {- Mirror (Input 3) -}
  [s, p, p] -> [p] {- Mirror (Input 4) -}
  [foo, s, p] -> [foo] {- Mirror (Input 5) -}
  [s, s, p] -> [s] {- Mirror (Input 5) -}
  [p, s, p] -> [p] {- Mirror (Input 5) -}
  [bar, s, p] -> [bar] {- Mirror (Input 5) -}
  [0, s, p] -> [0] {- Mirror (Input 5) -}
  [0, p] -> [s, s, s, s, 0] {- Mirror (Input 6) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [foo, 0] -> [0, s, p, p, p, s, s, s, p, s] {- Input 0 -}
  [foo, s] -> [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- Input 1 -}
  [bar, 0] -> [0, p, s, s, s] {- Input 2 -}
  [bar, s] -> [p, s, p, p, s, s, foo, s, p, p, s, s] {- Input 3 -}
  [p, p, s] -> [p] {- Input 4 -}
  [p, s, foo] -> [foo] {- Input 5 -}
  [p, s, s] -> [s] {- Input 5 -}
  [p, s, p] -> [p] {- Input 5 -}
  [p, s, bar] -> [bar] {- Input 5 -}
  [p, s, 0] -> [0] {- Input 5 -}
  [p, 0] -> [0, s, s, s, s] {- Input 6 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
  [foo#, s] |-> [ foo# , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 12) (Input 1) -}
  [foo#, s] |-> [p#, s] {- DP (Top 24) (Input 1) -}
  [foo#, s] |-> [ p# , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 10) (Input 1) -}
  [foo#, s] |-> [p#, s, s, p, s] {- DP (Top 21) (Input 1) -}
  [foo#, s] |-> [ p# , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 7) (Input 1) -}
  [foo#, s] |-> [ p# , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 4) (Input 1) -}
  [foo#, s] |-> [ p# , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 14) (Input 1) -}
  [foo#, s] |-> [ p# , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 0) (Input 1) -}
  [foo#, s] |-> [p#, s, bar, p, p, s, s, p, s] {- DP (Top 17) (Input 1) -}
  [foo#, s] |-> [p#, p, s, s, p, s] {- DP (Top 20) (Input 1) -}
  [foo#, s] |-> [ p# , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 3) (Input 1) -}
  [foo#, s] |-> [ p# , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 13) (Input 1) -}
  [foo#, s] |-> [ p# , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 2) (Input 1) -}
  [foo#, s] |-> [bar#, p, p, s, s, p, s] {- DP (Top 19) (Input 1) -}
  [foo#, 0] |-> [p#, s] {- DP (Top 8) (Input 0) -}
  [foo#, 0] |-> [p#, s, s, s, p, s] {- DP (Top 4) (Input 0) -}
  [foo#, 0] |-> [p#, p, s, s, s, p, s] {- DP (Top 3) (Input 0) -}
  [foo#, 0] |-> [p#, p, p, s, s, s, p, s] {- DP (Top 2) (Input 0) -}
  [p#, p, s] |-> [p#] {- DP (Top 0) (Input 4) -}
  [bar#, s] |-> [foo#, s, p, p, s, s] {- DP (Top 6) (Input 3) -}
  [bar#, s] |-> [p#, s, s] {- DP (Top 9) (Input 3) -}
  [bar#, s] |-> [p#, s, s, foo, s, p, p, s, s] {- DP (Top 3) (Input 3) -}
  [bar#, s] |-> [p#, s, p, p, s, s, foo, s, p, p, s, s] {- DP (Top 0) (Input 3) -}
  [bar#, s] |-> [p#, p, s, s] {- DP (Top 8) (Input 3) -}
  [bar#, s] |-> [p#, p, s, s, foo, s, p, p, s, s] {- DP (Top 2) (Input 3) -}
  [bar#, 0] |-> [p#, s, s, s] {- DP (Top 1) (Input 2) -}
reason
  (foo, 0/1)
  (s, 0/1)
  (p, 0/1)
  (bar, 0/1)
  (0, 1/1)
  (foo#, 1/1)
  (p#, 0/1)
  (bar#, 1/1)
   property Termination
has value Just True
for SRS
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
  [foo#, s] |-> [ foo# , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 12) (Input 1) -}
  [foo#, s] |-> [bar#, p, p, s, s, p, s] {- DP (Top 19) (Input 1) -}
  [p#, p, s] |-> [p#] {- DP (Top 0) (Input 4) -}
  [bar#, s] |-> [foo#, s, p, p, s, s] {- DP (Top 6) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [foo#, s] |-> [ foo# , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 12) (Input 1) -}
  [foo#, s] |-> [bar#, p, p, s, s, p, s] {- DP (Top 19) (Input 1) -}
  [bar#, s] |-> [foo#, s, p, p, s, s] {- DP (Top 6) (Input 3) -}
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
reason
  ( foo
  , Wk  / 0A -   0A \
        | 0A -2A 0A |
        \ -  -   0A / )
  ( s
  , Wk  / - 0A 0A \
        | - 2A 2A |
        \ - -  0A / )
  ( p
  , Wk  / - -2A 0A \
        | - -2A 0A |
        \ - -   0A / )
  ( bar
  , Wk  / 0A -  -  \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( 0
  , Wk  / - - 0A \
        | - - 0A |
        \ - - 0A / )
  ( foo#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( bar#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [foo#, s] |-> [ foo# , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 12) (Input 1) -}
  [foo#, s] |-> [bar#, p, p, s, s, p, s] {- DP (Top 19) (Input 1) -}
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
reason
  (foo, 0/1)
  (s, 0/1)
  (p, 0/1)
  (bar, 0/1)
  (0, 0/1)
  (foo#, 1/1)
  (bar#, 0/1)
   property Termination
has value Just True
for SRS
  [foo#, s] |-> [ foo# , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 12) (Input 1) -}
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [foo#, s] |-> [ foo# , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP (Top 12) (Input 1) -}
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
reason
  ( foo
  , Wk  / -1A 2A 0A \
        | -   -  -  |
        \ -   -  0A / )
  ( s
  , Wk  / 2A 2A 1A \
        | -  -  -  |
        \ -  -  0A / )
  ( p
  , Wk  / -2A - 0A \
        | -   - -  |
        \ -   - 0A / )
  ( bar
  , Wk  / 0A 2A -  \
        | -  -  -  |
        \ -  -  0A / )
  ( 0
  , Wk  / - - 0A \
        | - - -  |
        \ - - 0A / )
  ( foo#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [p#, p, s] |-> [p#] {- DP (Top 0) (Input 4) -}
  [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
  [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
  [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
  [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
  [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
  [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
  [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
  [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
  [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
  [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
  [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
reason
  remove un-usable
    SRS
      [foo, 0] ->= [0, s, p, p, p, s, s, s, p, s] {- DP Nontop (Input 0) -}
      [foo, s] ->= [ p , s , p , p , p , s , s , p , s , s , p , s , foo , p , p , s , s , p , s , bar , p , p , s , s , p , s ] {- DP Nontop (Input 1) -}
      [bar, 0] ->= [0, p, s, s, s] {- DP Nontop (Input 2) -}
      [bar, s] ->= [p, s, p, p, s, s, foo, s, p, p, s, s] {- DP Nontop (Input 3) -}
      [p, p, s] ->= [p] {- DP Nontop (Input 4) -}
      [p, s, foo] ->= [foo] {- DP Nontop (Input 5) -}
      [p, s, s] ->= [s] {- DP Nontop (Input 5) -}
      [p, s, p] ->= [p] {- DP Nontop (Input 5) -}
      [p, s, bar] ->= [bar] {- DP Nontop (Input 5) -}
      [p, s, 0] ->= [0] {- DP Nontop (Input 5) -}
      [p, 0] ->= [0, s, s, s, s] {- DP Nontop (Input 6) -}
   property Termination
has value Just True
for SRS
  [p#, p, s] |-> [p#] {- DP (Top 0) (Input 4) -}
reason
  (s, 1/1)
  (p, 1/1)
  (p#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(7,5)\Context\Mirror(11,5)\Deepee(26/11,8)\Weight(4/11,8)\EDG[(3/11,7)\Matrix{\ArcticBZ}{3}(2/11,7)\Weight\EDG(1/11,6)\Matrix{\ArcticBZ}{3}(0/11,5)\EDG[],(1/11,6)\Usable(1,3)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 7
  max duration 1.123996240000
  min duration 0.000002162000
  total durat. 1.205046366000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 634
      , num_strict_rules = 459
      , num_top_rules = 459
      , num_weak_rules = 175
      , alphabet_size = 40
      , total_length = 9128}
    , self = 51
    , parent = Nothing
    , duration = 1.123996240000
    , status = Success
    , start = 2025-09-03 13:38:09.454146295 UTC
    , finish = 2025-09-03 13:38:10.578142535 UTC
    , thread_cap_info = ("ThreadId 62", 2, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.922131877000
  min duration 1.945342169000
  total durat. 6.991491743000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 108}
    , self = 77
    , parent = Nothing
    , duration = 1.945342169000
    , status = Fail
    , start = 2025-09-03 13:38:14.894934064 UTC
    , finish = 2025-09-03 13:38:16.840276233 UTC
    , thread_cap_info = ("ThreadId 129", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 125}
    , self = 54
    , parent = Nothing
    , duration = 2.124017697000
    , status = Fail
    , start = 2025-09-03 13:38:09.474146343 UTC
    , finish = 2025-09-03 13:38:11.59816404 UTC
    , thread_cap_info = ("ThreadId 88", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 114}
    , self = 78
    , parent = Nothing
    , duration = 2.922131877000
    , status = Fail
    , start = 2025-09-03 13:38:13.955641873 UTC
    , finish = 2025-09-03 13:38:16.87777375 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.039995581000
  min duration 3.020325835000
  total durat. 6.060321416000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 421
      , num_strict_rules = 246
      , num_top_rules = 246
      , num_weak_rules = 175
      , alphabet_size = 37
      , total_length = 5936}
    , self = 61
    , parent = Nothing
    , duration = 3.020325835000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:10.654234637 UTC
    , finish = 2025-09-03 13:38:13.674560472 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 190}
    , self = 59
    , parent = Nothing
    , duration = 3.039995581000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:09.714158 UTC
    , finish = 2025-09-03 13:38:12.754153581 UTC
    , thread_cap_info = ("ThreadId 93", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.141747868000
  min duration 3.141747868000
  total durat. 3.141747868000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 175
      , num_strict_rules = 175
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 25
      , total_length = 2200}
    , self = 55
    , parent = Nothing
    , duration = 3.141747868000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:09.312414512 UTC
    , finish = 2025-09-03 13:38:12.45416238 UTC
    , thread_cap_info = ("ThreadId 69", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 3.586498188000
  min duration 3.002189847000
  total durat. 15.691234994000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 125}
    , self = 57
    , parent = Nothing
    , duration = 3.002189847000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:09.4981888 UTC
    , finish = 2025-09-03 13:38:12.500378647 UTC
    , thread_cap_info = ("ThreadId 89", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 190}
    , self = 60
    , parent = Nothing
    , duration = 3.019313450000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:09.7348592 UTC
    , finish = 2025-09-03 13:38:12.75417265 UTC
    , thread_cap_info = ("ThreadId 94", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 108}
    , self = 80
    , parent = Nothing
    , duration = 3.041154392000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:14.955138647 UTC
    , finish = 2025-09-03 13:38:17.996293039 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 421
      , num_strict_rules = 246
      , num_top_rules = 246
      , num_weak_rules = 175
      , alphabet_size = 37
      , total_length = 5936}
    , self = 62
    , parent = Nothing
    , duration = 3.042079117000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:10.674148001 UTC
    , finish = 2025-09-03 13:38:13.716227118 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 114}
    , self = 79
    , parent = Nothing
    , duration = 3.586498188000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:38:13.994167303 UTC
    , finish = 2025-09-03 13:38:17.580665491 UTC
    , thread_cap_info = ("ThreadId 124", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.160024297000
  min duration 3.160024297000
  total durat. 3.160024297000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 175
      , num_strict_rules = 175
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 25
      , total_length = 2200}
    , self = 56
    , parent = Nothing
    , duration = 3.160024297000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:09.314138939 UTC
    , finish = 2025-09-03 13:38:12.474163236 UTC
    , thread_cap_info = ("ThreadId 71", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.676570080000
  min duration 1.537502994000
  total durat. 3.214073074000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 108}
    , self = 83
    , parent = Nothing
    , duration = 1.537502994000
    , status = Success
    , start = 2025-09-03 13:38:18.014207216 UTC
    , finish = 2025-09-03 13:38:19.55171021 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 125}
    , self = 70
    , parent = Nothing
    , duration = 1.676570080000
    , status = Success
    , start = 2025-09-03 13:38:12.500406019 UTC
    , finish = 2025-09-03 13:38:14.176976099 UTC
    , thread_cap_info = ("ThreadId 106", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.051295661000
  min duration 1.051295661000
  total durat. 1.051295661000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 190}
    , self = 65
    , parent = Nothing
    , duration = 1.051295661000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:12.834157498 UTC
    , finish = 2025-09-03 13:38:13.885453159 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.678333693000
  min duration 1.328277675000
  total durat. 3.006611368000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 108}
    , self = 85
    , parent = Nothing
    , duration = 1.328277675000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:18.223638363 UTC
    , finish = 2025-09-03 13:38:19.551916038 UTC
    , thread_cap_info = ("ThreadId 141", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 125}
    , self = 72
    , parent = Nothing
    , duration = 1.678333693000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:12.694399894 UTC
    , finish = 2025-09-03 13:38:14.372733587 UTC
    , thread_cap_info = ("ThreadId 107", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.271540593000
  min duration 0.935605386000
  total durat. 3.150267617000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 11
      , alphabet_size = 6
      , total_length = 108}
    , self = 81
    , parent = Nothing
    , duration = 1.271540593000
    , status = Fail
    , start = 2025-09-03 13:38:16.894168699 UTC
    , finish = 2025-09-03 13:38:18.165709292 UTC
    , thread_cap_info = ("ThreadId 133", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 10.272213734000
  min duration 10.272213734000
  total durat. 10.272213734000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 7
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 5
      , total_length = 74}
    , self = 90
    , parent = Nothing
    , duration = 10.272213734000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:09.285522873 UTC
    , finish = 2025-09-03 13:38:19.557736607 UTC
    , thread_cap_info = ("ThreadId 46", 3, False)}
**************************************************
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 7 , num_strict_rules = 7 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length
E                  = 74} , self = 90 , parent = Nothing , duration = 10.272213734000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 13:38:09.285522873 UTC ,
E                  finish = 2025-09-03 13:38:19.557736607 UTC , thread_cap_info = ("ThreadId
E                  46", 3, False)}
E                  
| S                Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S                epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S                = Size { num_rules = 1058 , num_strict_rules = 883 , num_top_rules = 883
| S                , num_weak_rules = 175 , alphabet_size = 35 , total_length = 12657} , self
| S                = 49 , parent = Nothing , duration = 0.304497478000 , status = Success
| S                , start = 2025-09-03 13:38:09.310337396 UTC , finish = 2025-09-03 13:38:09.614834874
| S                UTC , thread_cap_info = ("ThreadId 66", 2, False)}
| S                
| | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E              = False\n , verbose = False}" , input_size = Size { num_rules = 175 , num_strict_rules
| | E              = 175 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 25 , total_length
| | E              = 2200} , self = 55 , parent = Nothing , duration = 3.141747868000 , status
| | E              = Except "AsyncCancelled" , start = 2025-09-03 13:38:09.312414512 UTC ,
| | E              finish = 2025-09-03 13:38:12.45416238 UTC , thread_cap_info = ("ThreadId
| | E              69", 1, False)}
| | E              
| | | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 175 , num_strict_rules
| | | E            = 175 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 25 , total_length
| | | E            = 2200} , self = 56 , parent = Nothing , duration = 3.160024297000 , status
| | | E            = Except "AsyncCancelled" , start = 2025-09-03 13:38:09.314138939 UTC ,
| | | E            finish = 2025-09-03 13:38:12.474163236 UTC , thread_cap_info = ("ThreadId
| | | E            71", 1, False)}
| | | E            
| | | | S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S          = Size { num_rules = 897 , num_strict_rules = 722 , num_top_rules = 722
| | | | S          , num_weak_rules = 175 , alphabet_size = 40 , total_length = 11878} , self
| | | | S          = 44 , parent = Nothing , duration = 0.139932451000 , status = Success
| | | | S          , start = 2025-09-03 13:38:09.314155055 UTC , finish = 2025-09-03 13:38:09.454087506
| | | | S          UTC , thread_cap_info = ("ThreadId 74", 2, False)}
| | | | S          
| | | | S          
| | | | S          Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | S          verbose = False}" , input_size = Size { num_rules = 634 , num_strict_rules
| | | | S          = 459 , num_top_rules = 459 , num_weak_rules = 175 , alphabet_size = 40
| | | | S          , total_length = 9128} , self = 51 , parent = Nothing , duration = 1.123996240000
| | | | S          , status = Success , start = 2025-09-03 13:38:09.454146295 UTC , finish
| | | | S          = 2025-09-03 13:38:10.578142535 UTC , thread_cap_info = ("ThreadId 62",
| | | | S          2, False)}
| | | | S          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | | | | F        = 125} , self = 54 , parent = Nothing , duration = 2.124017697000 , status
| | | | | F        = Fail , start = 2025-09-03 13:38:09.474146343 UTC , finish = 2025-09-03
| | | | | F        13:38:11.59816404 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | | | F        
| | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | E      = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | | | | | E      = 125} , self = 57 , parent = Nothing , duration = 3.002189847000 , status
| | | | | | E      = Except "<<timeout>>" , start = 2025-09-03 13:38:09.4981888 UTC , finish
| | | | | | E      = 2025-09-03 13:38:12.500378647 UTC , thread_cap_info = ("ThreadId 89",
| | | | | | E      3, False)}
| | | | | | E      
| S | | | | |      
| E | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| E | | | | |      = 7 , num_top_rules = 7 , num_weak_rules = 11 , alphabet_size = 6 , total_length
| E | | | | |      = 190} , self = 59 , parent = Nothing , duration = 3.039995581000 , status
| E | | | | |      = Except "<<timeout>>" , start = 2025-09-03 13:38:09.714158 UTC , finish
| E | | | | |      = 2025-09-03 13:38:12.754153581 UTC , thread_cap_info = ("ThreadId 93",
| E | | | | |      3, False)}
| E | | | | |      
| | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | E    = 7 , num_top_rules = 7 , num_weak_rules = 11 , alphabet_size = 6 , total_length
| | | | | | | E    = 190} , self = 60 , parent = Nothing , duration = 3.019313450000 , status
| | | | | | | E    = Except "<<timeout>>" , start = 2025-09-03 13:38:09.7348592 UTC , finish
| | | | | | | E    = 2025-09-03 13:38:12.75417265 UTC , thread_cap_info = ("ThreadId 94",
| | | | | | | E    3, False)}
| | | | | | | E    
| | | | S | | |    
| | | | E | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 421 , num_strict_rules
| | | | E | | |    = 246 , num_top_rules = 246 , num_weak_rules = 175 , alphabet_size = 37
| | | | E | | |    , total_length = 5936} , self = 61 , parent = Nothing , duration = 3.020325835000
| | | | E | | |    , status = Except "<<timeout>>" , start = 2025-09-03 13:38:10.654234637
| | | | E | | |    UTC , finish = 2025-09-03 13:38:13.674560472 UTC , thread_cap_info = ("ThreadId
| | | | E | | |    97", 2, False)}
| | | | E | | |    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 421 , num_strict_rules
| | | | | | | | E  = 246 , num_top_rules = 246 , num_weak_rules = 175 , alphabet_size = 37
| | | | | | | | E  , total_length = 5936} , self = 62 , parent = Nothing , duration = 3.042079117000
| | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 13:38:10.674148001
| | | | | | | | E  UTC , finish = 2025-09-03 13:38:13.716227118 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  98", 2, False)}
| | | | | | | | E  
| | | | | F | | |  
| | | | | F | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | | |  = 14 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 11 ,
| | | | | F | | |  alphabet_size = 7 , total_length = 125} , self = 58 , parent = Nothing
| | | | | F | | |  , duration = 0.943121638000 , status = Fail , start = 2025-09-03 13:38:11.734167896
| | | | | F | | |  UTC , finish = 2025-09-03 13:38:12.677289534 UTC , thread_cap_info = ("ThreadId
| | | | | F | | |  100", 3, False)}
| | | | | F | | |  
| | E | | | | | |  
| |   E | | | | |  
| |     | | E | |  
| | S   | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S   | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S   | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S   | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S   | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S   | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | S   | |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size
| | S   | |   | |  = 7 , total_length = 125} , self = 70 , parent = Nothing , duration = 1.676570080000
| | S   | |   | |  , status = Success , start = 2025-09-03 13:38:12.500406019 UTC , finish
| | S   | |   | |  = 2025-09-03 13:38:14.176976099 UTC , thread_cap_info = ("ThreadId 106",
| | S   | |   | |  3, False)}
| | S   | |   | |  
| | |   | F   | |  
| | | E |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | E |     | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 11 , alphabet_size
| | | E |     | |  = 7 , total_length = 125} , self = 72 , parent = Nothing , duration = 1.678333693000
| | | E |     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:12.694399894
| | | E |     | |  UTC , finish = 2025-09-03 13:38:14.372733587 UTC , thread_cap_info = ("ThreadId
| | | E |     | |  107", 3, False)}
| | | E |     | |  
| E | | |     | |  
|   | | |     E |  
| S | | |       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | |       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | |       |  = 18 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 11 ,
| S | | |       |  alphabet_size = 6 , total_length = 190} , self = 63 , parent = Nothing
| S | | |       |  , duration = 0.944338285000 , status = Success , start = 2025-09-03 13:38:12.815582639
| S | | |       |  UTC , finish = 2025-09-03 13:38:13.759920924 UTC , thread_cap_info = ("ThreadId
| S | | |       |  110", 3, False)}
| S | | |       |  
| | | | | E     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | | | E     |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 11 , alphabet_size
| | | | | E     |  = 6 , total_length = 190} , self = 65 , parent = Nothing , duration = 1.051295661000
| | | | | E     |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:12.834157498
| | | | | E     |  UTC , finish = 2025-09-03 13:38:13.885453159 UTC , thread_cap_info = ("ThreadId
| | | | | E     |  111", 3, False)}
| | | | | E     |  
| | | | E |     |  
| | | |   |     E  
| S | |   |        
|   | |   E        
| F | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |            = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| F | |            = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size = 6 , total_length
| F | |            = 114} , self = 78 , parent = Nothing , duration = 2.922131877000 , status
| F | |            = Fail , start = 2025-09-03 13:38:13.955641873 UTC , finish = 2025-09-03
| F | |            13:38:16.87777375 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| F | |            
| | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | E          = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size = 6 , total_length
| | | | E          = 114} , self = 79 , parent = Nothing , duration = 3.586498188000 , status
| | | | E          = Except "<<timeout>>" , start = 2025-09-03 13:38:13.994167303 UTC , finish
| | | | E          = 2025-09-03 13:38:17.580665491 UTC , thread_cap_info = ("ThreadId 124",
| | | | E          3, False)}
| | | | E          
| | S | |          
| |   E |          
| | F   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   |          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F   |          = 1 , num_top_rules = 1 , num_weak_rules = 11 , alphabet_size = 6 , total_length
| | F   |          = 108} , self = 77 , parent = Nothing , duration = 1.945342169000 , status
| | F   |          = Fail , start = 2025-09-03 13:38:14.894934064 UTC , finish = 2025-09-03
| | F   |          13:38:16.840276233 UTC , thread_cap_info = ("ThreadId 129", 3, False)}
| | F   |          
| | | E |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E |          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | E |          = 1 , num_top_rules = 1 , num_weak_rules = 11 , alphabet_size = 6 , total_length
| | | E |          = 108} , self = 80 , parent = Nothing , duration = 3.041154392000 , status
| | | E |          = Except "<<timeout>>" , start = 2025-09-03 13:38:14.955138647 UTC , finish
| | | E |          = 2025-09-03 13:38:17.996293039 UTC , thread_cap_info = ("ThreadId 130",
| | | E |          3, False)}
| | | E |          
| | F | |          
| F   | |          
| F   | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |          = 12 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 11 ,
| F   | |          alphabet_size = 6 , total_length = 108} , self = 81 , parent = Nothing
| F   | |          , duration = 1.271540593000 , status = Fail , start = 2025-09-03 13:38:16.894168699
| F   | |          UTC , finish = 2025-09-03 13:38:18.165709292 UTC , thread_cap_info = ("ThreadId
| F   | |          133", 3, False)}
| F   | |          
| | F | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |          = 13 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 ,
| | F | |          alphabet_size = 6 , total_length = 114} , self = 82 , parent = Nothing
| | F | |          , duration = 0.935605386000 , status = Fail , start = 2025-09-03 13:38:17.55773176
| | F | |          UTC , finish = 2025-09-03 13:38:18.493337146 UTC , thread_cap_info = ("ThreadId
| | F | |          135", 3, False)}
| | F | |          
| | | | E          
| | | E            
| | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | S            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 11 , alphabet_size
| | | S            = 6 , total_length = 108} , self = 83 , parent = Nothing , duration = 1.537502994000
| | | S            , status = Success , start = 2025-09-03 13:38:18.014207216 UTC , finish
| | | S            = 2025-09-03 13:38:19.55171021 UTC , thread_cap_info = ("ThreadId 139",
| | | S            3, False)}
| | | S            
| F | |            
| E | |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 11 , alphabet_size
| E | |            = 6 , total_length = 108} , self = 85 , parent = Nothing , duration = 1.328277675000
| E | |            , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:18.223638363
| E | |            UTC , finish = 2025-09-03 13:38:19.551916038 UTC , thread_cap_info = ("ThreadId
| E | |            141", 3, False)}
| E | |            
| | F |            
| |   S            
| E                
E                  
