last 587 length 2375
CNF 587 vars 2375 clauses
last 597 length 2558
last 514 length 2008
CNF 514 vars 2008 clauses
last 464 length 1840
CNF 597 vars 2558 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2465, clauses: 8868
CNF 464 vars 1840 clauses
last 2465 length 8868
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8404
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7091, clauses: 29321
last 4371 length 21948
last 3817 length 17305
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7047, clauses: 29131
CNF 2465 vars 8868 clauses
last 2359 length 8404
last 10553 length 50363
last 7091 length 29321
last 13799 length 59513
last 9370 length 42879
CNF 4371 vars 21948 clauses
last 12297 length 52487
last 7047 length 29131
CNF 3817 vars 17305 clauses
CNF 2359 vars 8404 clauses
CNF 10553 vars 50363 clauses
CNF 9370 vars 42879 clauses
CNF 7091 vars 29321 clauses
CNF 13799 vars 59513 clauses
CNF 12297 vars 52487 clauses
CNF 7047 vars 29131 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2465, clauses: 8868, status: Unsatisfied, time: 0.577570116s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8404, status: Unsatisfied, time: 0.355941587s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7091, clauses: 29321, status: Satisfied, time: 0.361999419s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7047, clauses: 29131, status: Satisfied, time: 0.264430835s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4458, clauses: 17709
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4389, clauses: 17341
last 4389 length 17341
CNF 4389 vars 17341 clauses
last 541 length 2205
CNF 541 vars 2205 clauses
last 590 length 2537
last 444 length 1740
last 434 length 1718
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8443
CNF 590 vars 2537 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22507, clauses: 89539
CNF 434 vars 1718 clauses
CNF 444 vars 1740 clauses
last 2359 length 8443
last 22507 length 89539
CNF 2359 vars 8443 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2148, clauses: 7583
last 2148 length 7583
CNF 2148 vars 7583 clauses
CNF 22507 vars 89539 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2148, clauses: 7583, status: Unsatisfied, time: 0.137683167s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8443, status: Unsatisfied, time: 0.343555456s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7045, clauses: 29145
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27715
last 7045 length 29145
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4144, clauses: 16361
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22507, clauses: 89539, status: Satisfied, time: 0.534453662s
last 6709 length 27715
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4383, clauses: 17423
last 4144 length 16361
last 4383 length 17423
CNF 7045 vars 29145 clauses
CNF 6709 vars 27715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21382, clauses: 83995
CNF 4383 vars 17423 clauses
CNF 4144 vars 16361 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7045, clauses: 29145, status: Satisfied, time: 0.194753605s
last 21382 length 83995
last 445 length 1841
CNF 445 vars 1841 clauses
last 525 length 2288
CNF 525 vars 2288 clauses
CNF 21382 vars 83995 clauses
last 10041 length 48603
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6606
CNF 10041 vars 48603 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27715, status: Satisfied, time: 0.951463382s
last 1856 length 6606
last 12603 length 54921
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4144, clauses: 16361, status: Unsatisfied, time: 1.24594213s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6332, clauses: 26249
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21382, clauses: 83995, status: Satisfied, time: 1.277429658s
CNF 1856 vars 6606 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 56329, clauses: 236325
CNF 12603 vars 54921 clauses
**************************************************last 6332 length 26249

last 56329 length 236325
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6606, status: Unsatisfied, time: 0.55259138s
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 6 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, b, c] {- Input 0 -}
  [b, c] -> [] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, b, c] {- Input 0 -}
  [a, b, c] -> [a] {- Input 1 -}
  [b, b, c] -> [b] {- Input 1 -}
  [c, b, c] -> [c] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, b, b, a] {- Mirror (Input 0) -}
  [c, b, a] -> [a] {- Mirror (Input 1) -}
  [c, b, b] -> [b] {- Mirror (Input 1) -}
  [c, b, c] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, a] |-> [c#, b, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A 0A  1A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( b
  , Wk  / - 0A 1A \
        | - 1A 1A |
        \ - -  0A / )
  ( c
  , Wk  / -  0A  1A  \
        | 0A -1A -1A |
        \ -  -   0A  / )
  ( a#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / - 1A 1A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A - 1A \
        | 0A - -  |
        \ -  - 0A / )
  ( b
  , Wk  / -  -1A 0A  \
        | 0A 1A  -1A |
        \ -  -   0A  / )
  ( c
  , Wk  / -2A 0A 0A \
        | 1A  -  1A |
        \ -   -  0A / )
  ( a#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / -1A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(5/5,6)\Weight\EDG(3/5,5)\Matrix{\ArcticBZ}{3}\EDG(2/5,5)\Matrix{\ArcticBZ}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.798722117000
  min duration 0.012262431000
  total durat. 2.300078729000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.385046498000
  min duration 0.016800519000
  total durat. 3.588675319000CNF 6332 vars 26249 clauses

  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 87
      , num_strict_rules = 60
      , num_top_rules = 60
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 507}
    , self = 109
    , parent = Nothing
    , duration = 1.385046498000
    , status = Fail
    , start = 2025-09-03 11:40:19.819710013 UTC
    , finish = 2025-09-03 11:40:21.204756511 UTC
    , thread_cap_info = ("ThreadId 162", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.929247585000
  min duration 0.985413385000
  total durat. 4.991852911000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 69
    , parent = Nothing
    , duration = 1.016165734000
    , status = Success
    , start = 2025-09-03 11:40:17.920522004 UTC
    , finish = 2025-09-03 11:40:18.936687738 UTC
    , thread_cap_info = ("ThreadId 103", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 38}
    , self = 67
    , parent = Nothing
    , duration = 1.061026207000
    , status = Success
    , start = 2025-09-03 11:40:17.815266762 UTC
    , finish = 2025-09-03 11:40:18.876292969 UTC
    , thread_cap_info = ("ThreadId 97", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 104
    , parent = Nothing
    , duration = 1.929247585000
    , status = Success
    , start = 2025-09-03 11:40:19.258301502 UTC
    , finish = 2025-09-03 11:40:21.187549087 UTC
    , thread_cap_info = ("ThreadId 149", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.181221613000
  min duration 1.181221613000
  total durat. 1.181221613000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 99
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 567}
    , self = 89
    , parent = Nothing
    , duration = 1.181221613000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:40:18.614809342 UTC
    , finish = 2025-09-03 11:40:19.796030955 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.589283773000
  min duration 0.188956301000
  total durat. 2.680234051000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 106
    , parent = Nothing
    , duration = 1.589283773000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:40:19.611054128 UTC
    , finish = 2025-09-03 11:40:21.200337901 UTC
    , thread_cap_info = ("ThreadId 151", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.249482719000
  min duration 1.249482719000
  total durat. 1.249482719000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 99
      , num_strict_rules = 72
      , num_top_rules = 72
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 567}
    , self = 87
    , parent = Nothing
    , duration = 1.249482719000
    , status = Success
    , start = 2025-09-03 11:40:18.50542854 UTC
    , finish = 2025-09-03 11:40:19.754911259 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.940659393000
  min duration 0.416725455000
  total durat. 2.751983212000
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.376284998000
  min duration 3.376284998000
  total durat. 3.376284998000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 103
    , parent = Nothing
    , duration = 3.376284998000
    , status = Fail
    , start = 2025-09-03 11:40:17.760334454 UTC
    , finish = 2025-09-03 11:40:21.136619452 UTC
    , thread_cap_info = ("ThreadId 35", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.460884753000
  min duration 3.460884753000
  total durat. 3.460884753000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 110
    , parent = Nothing
    , duration = 3.460884753000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:40:17.760363319 UTC
    , finish = 2025-09-03 11:40:21.221248072 UTC
    , thread_cap_info = ("ThreadId 36", 2, False)}
**************************************************
F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                        = 12} , self = 103 , parent = Nothing , duration = 3.376284998000 , status
F                        = Fail , start = 2025-09-03 11:40:17.760334454 UTC , finish = 2025-09-03
F                        11:40:21.136619452 UTC , thread_cap_info = ("ThreadId 35", 1, False)}
F                        
| E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E                      = 12} , self = 110 , parent = Nothing , duration = 3.460884753000 , status
| E                      = Except "AsyncCancelled" , start = 2025-09-03 11:40:17.760363319 UTC ,
| E                      finish = 2025-09-03 11:40:21.221248072 UTC , thread_cap_info = ("ThreadId
| E                      36", 2, False)}
| E                      
| | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                    = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F                    = 34} , self = 55 , parent = Nothing , duration = 0.136908743000 , status
| | F                    = Fail , start = 2025-09-03 11:40:17.783534903 UTC , finish = 2025-09-03
| | F                    11:40:17.920443646 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| | F                    
| | | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F                  = 5 , total_length = 38} , self = 64 , parent = Nothing , duration = 0.846390272000
| | | F                  , status = Fail , start = 2025-09-03 11:40:17.788536197 UTC , finish =
| | | F                  2025-09-03 11:40:18.634926469 UTC , thread_cap_info = ("ThreadId 90", 0,
| | | F                  False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F                = 162} , self = 60 , parent = Nothing , duration = 0.622744593000 , status
| | | | F                = Fail , start = 2025-09-03 11:40:17.794714131 UTC , finish = 2025-09-03
| | | | F                11:40:18.417458724 UTC , thread_cap_info = ("ThreadId 83", 2, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 99 , num_strict_rules
| | | | | F              = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | F              total_length = 567} , self = 63 , parent = Nothing , duration = 0.798722117000
| | | | | F              , status = Fail , start = 2025-09-03 11:40:17.798605449 UTC , finish =
| | | | | F              2025-09-03 11:40:18.597327566 UTC , thread_cap_info = ("ThreadId 94", 3,
| | | | | F              False)}
| | | | | F              
| | | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | F            = 5 , total_length = 34} , self = 66 , parent = Nothing , duration = 0.940659393000
| | | | | | F            , status = Fail , start = 2025-09-03 11:40:17.813607611 UTC , finish =
| | | | | | F            2025-09-03 11:40:18.754267004 UTC , thread_cap_info = ("ThreadId 96", 0,
| | | | | | F            False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F          = 162} , self = 59 , parent = Nothing , duration = 0.587149686000 , status
| | | | | | | F          = Fail , start = 2025-09-03 11:40:17.815256865 UTC , finish = 2025-09-03
| | | | | | | F          11:40:18.402406551 UTC , thread_cap_info = ("ThreadId 85", 2, False)}
| | | | | | | F          
| | | | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | S        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | | S        = 5 , total_length = 38} , self = 67 , parent = Nothing , duration = 1.061026207000
| | | | | | | | S        , status = Success , start = 2025-09-03 11:40:17.815266762 UTC , finish
| | | | | | | | S        = 2025-09-03 11:40:18.876292969 UTC , thread_cap_info = ("ThreadId 97",
| | | | | | | | S        0, False)}
| | | | | | | | S        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 99 , num_strict_rules
| | | | | | | | | F      = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | | F      total_length = 567} , self = 61 , parent = Nothing , duration = 0.684829801000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 11:40:17.815530962 UTC , finish =
| | | | | | | | | F      2025-09-03 11:40:18.500360763 UTC , thread_cap_info = ("ThreadId 95", 3,
| | | | | | | | | F      False)}
| | | | | | | | | F      
| | F | | | | | | |      
| | S | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S | | | | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | S | | | | | | |      = 5 , total_length = 34} , self = 69 , parent = Nothing , duration = 1.016165734000
| | S | | | | | | |      , status = Success , start = 2025-09-03 11:40:17.920522004 UTC , finish
| | S | | | | | | |      = 2025-09-03 11:40:18.936687738 UTC , thread_cap_info = ("ThreadId 103",
| | S | | | | | | |      0, False)}
| | S | | | | | | |      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | | | | | | | F    = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | | | F    total_length = 513} , self = 65 , parent = Nothing , duration = 0.703245490000
| | | | | | | | | | F    , status = Fail , start = 2025-09-03 11:40:17.934479931 UTC , finish =
| | | | | | | | | | F    2025-09-03 11:40:18.637725421 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | | | F    3, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 90 , num_strict_rules
| | | | | | | | | | | F  = 63 , num_top_rules = 63 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | | | | F  total_length = 513} , self = 62 , parent = Nothing , duration = 0.553598996000
| | | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:40:17.954282283 UTC , finish =
| | | | | | | | | | | F  2025-09-03 11:40:18.507881279 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | | | | F  3, False)}
| | | | | | | | | | | F  
| | | | | | | F | | | |  
| | | | F | |   | | | |  
| | | |   | |   | F | |  
| | | | S | |   |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |   |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |   |   | |  = 99 , num_strict_rules = 72 , num_top_rules = 72 , num_weak_rules = 27
| | | | S | |   |   | |  , alphabet_size = 17 , total_length = 567} , self = 87 , parent = Nothing
| | | | S | |   |   | |  , duration = 1.249482719000 , status = Success , start = 2025-09-03 11:40:18.50542854
| | | | S | |   |   | |  UTC , finish = 2025-09-03 11:40:19.754911259 UTC , thread_cap_info = ("ThreadId
| | | | S | |   |   | |  121", 3, False)}
| | | | S | |   |   | |  
| | | | | | |   |   | F  
| | | | | F |   |   |    
| | | | | E |   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |   |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 99
| | | | | E |   |   |    , num_strict_rules = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size
| | | | | E |   |   |    = 17 , total_length = 567} , self = 89 , parent = Nothing , duration =
| | | | | E |   |   |    1.181221613000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |   |   |    11:40:18.614809342 UTC , finish = 2025-09-03 11:40:19.796030955 UTC , thread_cap_info
| | | | | E |   |   |    = ("ThreadId 123", 3, False)}
| | | | | E |   |   |    
| | | F | | |   |   |    
| | |   | | |   |   F    
| | | E | | |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | | |   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | E | | |   |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | E | | |   |        = 5 , total_length = 38} , self = 71 , parent = Nothing , duration = 0.303638304000
| | | E | | |   |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:18.65435137
| | | E | | |   |        UTC , finish = 2025-09-03 11:40:18.957989674 UTC , thread_cap_info = ("ThreadId
| | | E | | |   |        124", 0, False)}
| | | E | | |   |        
| | | | | | F   |        
| | | | | | E   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | E   |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | E   |        = 5 , total_length = 34} , self = 74 , parent = Nothing , duration = 0.188956301000
| | | | | | E   |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:18.845523979
| | | | | | E   |        UTC , finish = 2025-09-03 11:40:19.03448028 UTC , thread_cap_info = ("ThreadId
| | | | | | E   |        126", 0, False)}
| | | | | | E   |        
| | | | | | |   S        
| | S | | | |            
| |   E | | |            
| |     | | E            
| | F   | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | |              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F   | |              = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F   | |              = 35} , self = 82 , parent = Nothing , duration = 0.112995630000 , status
| | F   | |              = Fail , start = 2025-09-03 11:40:19.061304765 UTC , finish = 2025-09-03
| | F   | |              11:40:19.174300395 UTC , thread_cap_info = ("ThreadId 135", 0, False)}
| | F   | |              
| | | F | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |              = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F | |              = 5 , total_length = 35} , self = 86 , parent = Nothing , duration = 0.548208092000
| | | F | |              , status = Fail , start = 2025-09-03 11:40:19.107024224 UTC , finish =
| | | F | |              2025-09-03 11:40:19.655232316 UTC , thread_cap_info = ("ThreadId 140",
| | | F | |              0, False)}
| | | F | |              
| | F | | |              
| | S | | |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S | | |              , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | S | | |              = 5 , total_length = 35} , self = 94 , parent = Nothing , duration = 0.985413385000
| | S | | |              , status = Success , start = 2025-09-03 11:40:19.174695215 UTC , finish
| | S | | |              = 2025-09-03 11:40:20.1601086 UTC , thread_cap_info = ("ThreadId 145",
| | S | | |              0, False)}
| | S | | |              
| | | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F            = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | F            = 5 , total_length = 30} , self = 85 , parent = Nothing , duration = 0.416725455000
| | | | | | F            , status = Fail , start = 2025-09-03 11:40:19.194278024 UTC , finish =
| | | | | | F            2025-09-03 11:40:19.611003479 UTC , thread_cap_info = ("ThreadId 147",
| | | | | | F            0, False)}
| | | | | | F            
| | | | | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | S          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | S          = 5 , total_length = 30} , self = 104 , parent = Nothing , duration = 1.929247585000
| | | | | | | S          , status = Success , start = 2025-09-03 11:40:19.258301502 UTC , finish
| | | | | | | S          = 2025-09-03 11:40:21.187549087 UTC , thread_cap_info = ("ThreadId 149",
| | | | | | | S          0, False)}
| | | | | | | S          
| | | | | | F |          
| | | | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | E |          = 5 , total_length = 30} , self = 106 , parent = Nothing , duration = 1.589283773000
| | | | | | E |          , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:19.611054128
| | | | | | E |          UTC , finish = 2025-09-03 11:40:21.200337901 UTC , thread_cap_info = ("ThreadId
| | | | | | E |          151", 0, False)}
| | | | | | E |          
| | | F | | | |          
| | | E | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E | | | |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | E | | | |          = 5 , total_length = 35} , self = 96 , parent = Nothing , duration = 0.598355673000
| | | E | | | |          , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:19.674371459
| | | E | | | |          UTC , finish = 2025-09-03 11:40:20.272727132 UTC , thread_cap_info = ("ThreadId
| | | E | | | |          152", 0, False)}
| | | E | | | |          
| | | | S | | |          
| | | |   E | |          
| | | | F   | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 87 , num_strict_rules
| | | | F   | |          = 60 , num_top_rules = 60 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | F   | |          total_length = 507} , self = 109 , parent = Nothing , duration = 1.385046498000
| | | | F   | |          , status = Fail , start = 2025-09-03 11:40:19.819710013 UTC , finish =
| | | | F   | |          2025-09-03 11:40:21.204756511 UTC , thread_cap_info = ("ThreadId 162",
| | | | F   | |          3, False)}
| | | | F   | |          
| | S | |   | |          
| |   E |   | |          
F |     |   | |          
  |     |   | S          
  |     |   E            
  |     F                
  E                      
