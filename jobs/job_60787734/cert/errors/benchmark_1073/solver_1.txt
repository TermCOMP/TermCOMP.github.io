last 492 length 2003
last 453 length 1806
last 606 length 2534
CNF 453 vars 1806 clauses
CNF 492 vars 2003 clauses
last 797 length 3496
CNF 606 vars 2534 clauses
last 5514 length 29906
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1859, clauses: 6600
last 6831 length 44870
CNF 797 vars 3496 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2360, clauses: 8481
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5794, clauses: 23923
CNF 5514 vars 29906 clauses
last 11740 length 49948
last 7780 length 34461
last 1859 length 6600
CNF 6831 vars 44870 clauses
last 14550 length 85750
last 2360 length 8481
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6795, clauses: 28047
last 5794 length 23923
CNF 7780 vars 34461 clauses
CNF 1859 vars 6600 clauses
CNF 11740 vars 49948 clauses
last 21872 length 104172
last 6795 length 28047
CNF 2360 vars 8481 clauses
CNF 5794 vars 23923 clauses
CNF 14550 vars 85750 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1859, clauses: 6600, status: Satisfied, time: 0.369352278s
CNF 6795 vars 28047 clauses
CNF 21872 vars 104172 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2360, clauses: 8481, status: Satisfied, time: 0.36280986s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5794, clauses: 23923, status: Satisfied, time: 0.414767166s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15198, clauses: 60782
last 15198 length 60782
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b, c] -> [c, c, b, b, a] {- Input 1 -}
  [b] -> [a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, b, c] -> [c, c, b, b, a] {- Input 1 -}
  [b] -> [a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [c, b, a] -> [a, b, b, c, c] {- Mirror (Input 1) -}
  [b] -> [a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [b#] |-> [a#] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b, a] |-> [a#, b, b, c, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, b, a] |-> [b#, b, c, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b, a] |-> [b#, c, c] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, b, a] |-> [c#] {- DP (Top 4) (Mirror (Input 1)) -}
  [c#, b, a] |-> [c#, c] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
  [c#, b, a] |-> [c#] {- DP (Top 4) (Mirror (Input 1)) -}
  [c#, b, a] |-> [c#, c] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, b, a] |-> [c#] {- DP (Top 4) (Mirror (Input 1)) -}
  [c#, b, a] |-> [c#, c] {- DP (Top 3) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c#
  , Wk  / 10A 10A 12A - \
        | 10A 10A 12A - |
        | 10A 10A 12A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, b, c, c] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(2/5,4)\Matrix{\Arctic}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 15198 vars 60782 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.294500939000
  min duration 0.113179758000
  total durat. 3.031962879000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 96
      , num_strict_rules = 69
      , num_top_rules = 69
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 588}
    , self = 73
    , parent = Nothing
    , duration = 1.294500939000
    , status = Fail
    , start = 2025-09-03 10:55:11.128766576 UTC
    , finish = 2025-09-03 10:55:12.423267515 UTC
    , thread_cap_info = ("ThreadId 100", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.039623767000
  min duration 0.180522338000
  total durat. 3.098473248000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 96
      , num_strict_rules = 69
      , num_top_rules = 69
      , num_weak_rules = 27
      , alphabet_size = 17
      , total_length = 588}
    , self = 63
    , parent = Nothing
    , duration = 1.039623767000
    , status = Fail
    , start = 2025-09-03 10:55:11.140779234 UTC
    , finish = 2025-09-03 10:55:12.180403001 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.081508096000
  min duration 0.856409948000
  total durat. 1.937918044000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 28}
    , self = 67
    , parent = Nothing
    , duration = 1.081508096000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:55:11.241772353 UTC
    , finish = 2025-09-03 10:55:12.323280449 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.111984929000
  min duration 1.041463174000
  total durat. 2.153448103000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 36}
    , self = 68
    , parent = Nothing
    , duration = 1.041463174000
    , status = Success
    , start = 2025-09-03 10:55:11.321168689 UTC
    , finish = 2025-09-03 10:55:12.362631863 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 28}
    , self = 65
    , parent = Nothing
    , duration = 1.111984929000
    , status = Success
    , start = 2025-09-03 10:55:11.149104635 UTC
    , finish = 2025-09-03 10:55:12.261089564 UTC
    , thread_cap_info = ("ThreadId 102", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.163013183000
  min duration 1.163013183000
  total durat. 1.163013183000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 11}
    , self = 64
    , parent = Nothing
    , duration = 1.163013183000
    , status = Fail
    , start = 2025-09-03 10:55:11.042897975 UTC
    , finish = 2025-09-03 10:55:12.205911158 UTC
    , thread_cap_info = ("ThreadId 63", 3, False)}
**************************************************
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F                      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F                      = 28} , self = 55 , parent = Nothing , duration = 0.113179758000 , status
F                      = Fail , start = 2025-09-03 10:55:11.03589109 UTC , finish = 2025-09-03
F                      10:55:11.149070848 UTC , thread_cap_info = ("ThreadId 68", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F                    = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F                    = 36} , self = 58 , parent = Nothing , duration = 0.522782025000 , status
| F                    = Fail , start = 2025-09-03 10:55:11.040373942 UTC , finish = 2025-09-03
| F                    10:55:11.563155967 UTC , thread_cap_info = ("ThreadId 74", 2, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F                  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F                  = 28} , self = 56 , parent = Nothing , duration = 0.180522338000 , status
| | F                  = Fail , start = 2025-09-03 10:55:11.042750979 UTC , finish = 2025-09-03
| | F                  10:55:11.223273317 UTC , thread_cap_info = ("ThreadId 70", 0, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F                = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F                = 36} , self = 57 , parent = Nothing , duration = 0.260383341000 , status
| | | F                = Fail , start = 2025-09-03 10:55:11.042754138 UTC , finish = 2025-09-03
| | | F                10:55:11.303137479 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | | F                
| | | | F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | F              = 11} , self = 64 , parent = Nothing , duration = 1.163013183000 , status
| | | | F              = Fail , start = 2025-09-03 10:55:11.042897975 UTC , finish = 2025-09-03
| | | | F              10:55:12.205911158 UTC , thread_cap_info = ("ThreadId 63", 3, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F            = 153} , self = 59 , parent = Nothing , duration = 0.676965271000 , status
| | | | | F            = Fail , start = 2025-09-03 10:55:11.053887132 UTC , finish = 2025-09-03
| | | | | F            10:55:11.730852403 UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F          = 153} , self = 60 , parent = Nothing , duration = 0.699722796000 , status
| | | | | | F          = Fail , start = 2025-09-03 10:55:11.061825084 UTC , finish = 2025-09-03
| | | | | | F          10:55:11.76154788 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 96 , num_strict_rules
| | | | | | | F        = 69 , num_top_rules = 69 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | F        total_length = 588} , self = 73 , parent = Nothing , duration = 1.294500939000
| | | | | | | F        , status = Fail , start = 2025-09-03 10:55:11.128766576 UTC , finish =
| | | | | | | F        2025-09-03 10:55:12.423267515 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | F        3, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 96 , num_strict_rules
| | | | | | | | F      = 69 , num_top_rules = 69 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | F      total_length = 588} , self = 63 , parent = Nothing , duration = 1.039623767000
| | | | | | | | F      , status = Fail , start = 2025-09-03 10:55:11.140779234 UTC , finish =
| | | | | | | | F      2025-09-03 10:55:12.180403001 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | F      3, False)}
| | | | | | | | F      
F | | | | | | | |      
S | | | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | | |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
S | | | | | | | |      = 4 , total_length = 28} , self = 65 , parent = Nothing , duration = 1.111984929000
S | | | | | | | |      , status = Success , start = 2025-09-03 10:55:11.149104635 UTC , finish
S | | | | | | | |      = 2025-09-03 10:55:12.261089564 UTC , thread_cap_info = ("ThreadId 102",
S | | | | | | | |      0, False)}
S | | | | | | | |      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | | | | | F    = 46 , num_top_rules = 46 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | F    total_length = 408} , self = 61 , parent = Nothing , duration = 0.655822322000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 10:55:11.164371628 UTC , finish =
| | | | | | | | | F    2025-09-03 10:55:11.82019395 UTC , thread_cap_info = ("ThreadId 104", 3,
| | | | | | | | | F    False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | | | | | | F  = 46 , num_top_rules = 46 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | | F  total_length = 408} , self = 62 , parent = Nothing , duration = 0.686933570000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 10:55:11.181926026 UTC , finish =
| | | | | | | | | | F  2025-09-03 10:55:11.868859596 UTC , thread_cap_info = ("ThreadId 103",
| | | | | | | | | | F  0, False)}
| | | | | | | | | | F  
| | F | | | | | | | |  
| | E | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | E | | | | | | | |  = 4 , total_length = 28} , self = 67 , parent = Nothing , duration = 1.081508096000
| | E | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:55:11.241772353
| | E | | | | | | | |  UTC , finish = 2025-09-03 10:55:12.323280449 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | |  105", 0, False)}
| | E | | | | | | | |  
| | | F | | | | | | |  
| | | S | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | | | | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | S | | | | | | |  = 5 , total_length = 36} , self = 68 , parent = Nothing , duration = 1.041463174000
| | | S | | | | | | |  , status = Success , start = 2025-09-03 10:55:11.321168689 UTC , finish
| | | S | | | | | | |  = 2025-09-03 10:55:12.362631863 UTC , thread_cap_info = ("ThreadId 107",
| | | S | | | | | | |  2, False)}
| | | S | | | | | | |  
| F | | | | | | | | |  
| E | | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E | | | | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| E | | | | | | | | |  = 5 , total_length = 36} , self = 72 , parent = Nothing , duration = 0.856409948000
| E | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:55:11.564398947
| E | | | | | | | | |  UTC , finish = 2025-09-03 10:55:12.420808895 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | |  110", 2, False)}
| E | | | | | | | | |  
| | | | | F | | | | |  
| | | | |   F | | | |  
| | | | |     | | F |  
| | | | |     | |   F  
| | | | |     | F      
| | | | F     |        
S | | |       |        
  | E |       |        
  |   S       |        
  E           |        
              F        
