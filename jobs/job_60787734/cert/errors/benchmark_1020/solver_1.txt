last 3718 length 17199
CNF 3718 vars 17199 clauses
last 4510 length 20119
CNF 4510 vars 20119 clauses
last 2613 length 11836
CNF 2613 vars 11836 clauses
last 10258 length 48500
last 15620 length 69638
CNF 10258 vars 48500 clauses
CNF 15620 vars 69638 clauses
last 2393 length 12076
last 11059 length 54369
CNF 11059 vars 54369 clauses
CNF 2393 vars 12076 clauses
last 1488 length 7242
last 1942 length 8468
CNF 1488 vars 7242 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2921, clauses: 11565
last 20132 length 97305
CNF 1942 vars 8468 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8502, clauses: 35694
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2415, clauses: 9407
last 2921 length 11565
CNF 20132 vars 97305 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11004, clauses: 45323
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12299, clauses: 54147
last 8502 length 35694
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7246, clauses: 30396
last 2415 length 9407
CNF 2921 vars 11565 clauses
last 11004 length 45323
last 12299 length 54147
CNF 8502 vars 35694 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31336, clauses: 132439
last 7246 length 30396
CNF 2415 vars 9407 clauses
CNF 11004 vars 45323 clauses
CNF 12299 vars 54147 clauses
last 31336 length 132439
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2921, clauses: 11565, status: Satisfied, time: 0.482688555s
CNF 7246 vars 30396 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2415, clauses: 9407, status: Satisfied, time: 0.464945441s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11004, clauses: 45323, status: Satisfied, time: 0.444270221s
CNF 31336 vars 132439 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 6 strict rules and 4 weak rules on 3 letters       EDG
SRS with 6 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b] -> [b, a, b] {- Input 0 -}
  [b, b, a, b] -> [b, a, b, a, a, b, b] {- Input 1 -}
  [b, a, b] -> [b, a, a, b] {- Input 2 -}
  [b, a, a, b, a, b] -> [b, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, b, a, b] ->= [b, a, b, a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b, a, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, b, a, b] ->= [b, b] {- DP Nontop (Input 3) -}
  [b#, a, a, b, a, b] |-> [b#, b] {- DP (Top 0) (Input 3) -}
  [b#, a, b] |-> [b#, a, a, b] {- DP (Top 0) (Input 2) -}
  [b#, b] |-> [b#, a, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, b] |-> [b#, a, a, b, b] {- DP (Top 2) (Input 1) -}
  [b#, b, a, b] |-> [b#, a, b, a, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, b] |-> [b#, b] {- DP (Top 5) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a, b, a, b] |-> [b#, b] {- DP (Top 0) (Input 3) -}
  [b#, b] |-> [b#, a, b] {- DP (Top 0) (Input 0) -}
  [b#, a, b] |-> [b#, a, a, b] {- DP (Top 0) (Input 2) -}
  [b#, b, a, b] |-> [b#, a, a, b, b] {- DP (Top 2) (Input 1) -}
  [b#, b, a, b] |-> [b#, a, b, a, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, b] |-> [b#, b] {- DP (Top 5) (Input 1) -}
  [b, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, b, a, b] ->= [b, a, b, a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b, a, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, b, a, b] ->= [b, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 2A 3A - \
        | 1A 2A 3A - |
        | 1A 2A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b, b] ->= [b, a, b] {- DP Nontop (Input 0) -}
  [b, b, a, b] ->= [b, a, b, a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b, a, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, b, a, b] ->= [b, b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee\EDG(6/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.456632453000
  min duration 0.152089000000
  total durat. 2.958724759000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 44
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 16
      , alphabet_size = 6
      , total_length = 396}
    , self = 64
    , parent = Nothing
    , duration = 1.456632453000
    , status = Fail
    , start = 2025-09-03 10:51:36.858657434 UTC
    , finish = 2025-09-03 10:51:38.315289887 UTC
    , thread_cap_info = ("ThreadId 77", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.760615009000
  min duration 0.134001038000
  total durat. 2.262861710000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.171596251000
  min duration 0.605248911000
  total durat. 2.638914868000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 77}
    , self = 71
    , parent = Nothing
    , duration = 1.171596251000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:37.715837084 UTC
    , finish = 2025-09-03 10:51:38.887433335 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.186581368000
  min duration 0.857893927000
  total durat. 3.168804145000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 77}
    , self = 65
    , parent = Nothing
    , duration = 1.124328850000
    , status = Success
    , start = 2025-09-03 10:51:37.616523539 UTC
    , finish = 2025-09-03 10:51:38.740852389 UTC
    , thread_cap_info = ("ThreadId 111", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 44
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 16
      , alphabet_size = 6
      , total_length = 396}
    , self = 68
    , parent = Nothing
    , duration = 1.186581368000
    , status = Success
    , start = 2025-09-03 10:51:37.677328449 UTC
    , finish = 2025-09-03 10:51:38.863909817 UTC
    , thread_cap_info = ("ThreadId 114", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.161844769000
  min duration 2.161844769000
  total durat. 2.161844769000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 31}
    , self = 80
    , parent = Nothing
    , duration = 2.161844769000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:36.834001539 UTC
    , finish = 2025-09-03 10:51:38.995846308 UTC
    , thread_cap_info = ("ThreadId 43", 2, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.137265958000
  min duration 1.137265958000
  total durat. 1.137265958000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 31}
    , self = 61
    , parent = Nothing
    , duration = 1.137265958000
    , status = Fail
    , start = 2025-09-03 10:51:36.833990185 UTC
    , finish = 2025-09-03 10:51:37.971256143 UTC
    , thread_cap_info = ("ThreadId 22", 2, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12299, clauses: 54147, status: Satisfied, time: 0.702513319s
= True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 31} , self
F                  = 61 , parent = Nothing , duration = 1.137265958000 , status = Fail , start
F                  = 2025-09-03 10:51:36.833990185 UTC , finish = 2025-09-03 10:51:37.971256143
F                  UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                  
| E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                = 31} , self = 80 , parent = Nothing , duration = 2.161844769000 , status
| E                = Except "AsyncCancelled" , start = 2025-09-03 10:51:36.834001539 UTC ,
| E                finish = 2025-09-03 10:51:38.995846308 UTC , thread_cap_info = ("ThreadId
| E                43", 2, False)}
| E                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F              = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F              = 156} , self = 42 , parent = Nothing , duration = 0.152089000000 , status
| | F              = Fail , start = 2025-09-03 10:51:36.838243638 UTC , finish = 2025-09-03
| | F              10:51:36.990332638 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F            = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F            = 156} , self = 41 , parent = Nothing , duration = 0.134001038000 , status
| | | F            = Fail , start = 2025-09-03 10:51:36.838249527 UTC , finish = 2025-09-03
| | | F            10:51:36.972250565 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | F          = 28 , num_top_rules = 28 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | F          = 396} , self = 64 , parent = Nothing , duration = 1.456632453000 , status
| | | | F          = Fail , start = 2025-09-03 10:51:36.858657434 UTC , finish = 2025-09-03
| | | | F          10:51:38.315289887 UTC , thread_cap_info = ("ThreadId 77", 3, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | | F        = 28 , num_top_rules = 28 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | F        = 396} , self = 59 , parent = Nothing , duration = 0.760615009000 , status
| | | | | F        = Fail , start = 2025-09-03 10:51:36.858662262 UTC , finish = 2025-09-03
| | | | | F        10:51:37.619277271 UTC , thread_cap_info = ("ThreadId 78", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | | F      = 36 , num_top_rules = 36 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | F      = 472} , self = 58 , parent = Nothing , duration = 0.560470786000 , status
| | | | | | F      = Fail , start = 2025-09-03 10:51:36.957298745 UTC , finish = 2025-09-03
| | | | | | F      10:51:37.517769531 UTC , thread_cap_info = ("ThreadId 83", 3, False)}
| | | | | | F      
| | | F | | |      
| | | F | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | F | | |      = 36 , num_top_rules = 36 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | F | | |      = 472} , self = 57 , parent = Nothing , duration = 0.521462503000 , status
| | | F | | |      = Fail , start = 2025-09-03 10:51:36.976728066 UTC , finish = 2025-09-03
| | | F | | |      10:51:37.498190569 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| | | F | | |      
| | F | | | |      
| | S | | | |      Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S | | | |      verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | S | | | |      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | S | | | |      = 79} , self = 53 , parent = Nothing , duration = 0.145974744000 , status
| | S | | | |      = Success , start = 2025-09-03 10:51:37.195835615 UTC , finish = 2025-09-03
| | S | | | |      10:51:37.341810359 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | S | | | |      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | F    = 77} , self = 56 , parent = Nothing , duration = 0.182227069000 , status
| | | | | | | F    = Fail , start = 2025-09-03 10:51:37.276486578 UTC , finish = 2025-09-03
| | | | | | | F    10:51:37.458713647 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | | F  = 77} , self = 60 , parent = Nothing , duration = 0.342322910000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 10:51:37.295833259 UTC , finish = 2025-09-03
| | | | | | | | F  10:51:37.638156169 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | | | | F  
| | S | | | | | |  
| |   | | | | F |  
| | F | | | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F | | | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | F | | | |   |  = 62} , self = 63 , parent = Nothing , duration = 0.607305451000 , status
| | F | | | |   |  = Fail , start = 2025-09-03 10:51:37.47115509 UTC , finish = 2025-09-03
| | F | | | |   |  10:51:38.078460541 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | F | | | |   |  
| | | | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F |  = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | F |  = 62} , self = 62 , parent = Nothing , duration = 0.504460250000 , status
| | | | | | | F |  = Fail , start = 2025-09-03 10:51:37.475533844 UTC , finish = 2025-09-03
| | | | | | | F |  10:51:37.979994094 UTC , thread_cap_info = ("ThreadId 106", 2, False)}
| | | | | | | F |  
| | | F | | | | |  
| | |   | | F | |  
| | | S | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |   | |  = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | S | |   | |  alphabet_size = 3 , total_length = 77} , self = 65 , parent = Nothing ,
| | | S | |   | |  duration = 1.124328850000 , status = Success , start = 2025-09-03 10:51:37.616523539
| | | S | |   | |  UTC , finish = 2025-09-03 10:51:38.740852389 UTC , thread_cap_info = ("ThreadId
| | | S | |   | |  111", 2, False)}
| | | S | |   | |  
| | | | | F   | |  
| | | | |     | F  
| | | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   |    = 44 , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 16
| | | | | S   |    , alphabet_size = 6 , total_length = 396} , self = 68 , parent = Nothing
| | | | | S   |    , duration = 1.186581368000 , status = Success , start = 2025-09-03 10:51:37.677328449
| | | | | S   |    UTC , finish = 2025-09-03 10:51:38.863909817 UTC , thread_cap_info = ("ThreadId
| | | | | S   |    114", 3, False)}
| | | | | S   |    
| | | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | E |    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | | | | E |    = 3 , total_length = 77} , self = 71 , parent = Nothing , duration = 1.171596251000
| | | | | | E |    , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:37.715837084
| | | | | | E |    UTC , finish = 2025-09-03 10:51:38.887433335 UTC , thread_cap_info = ("ThreadId
| | | | | | E |    115", 2, False)}
| | | | | | E |    
F | | | | | | |    
  | | | | | | F    
S | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | |      = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
S | | | | | |      = 3 , total_length = 62} , self = 67 , parent = Nothing , duration = 0.857893927000
S | | | | | |      , status = Success , start = 2025-09-03 10:51:37.980018459 UTC , finish
S | | | | | |      = 2025-09-03 10:51:38.837912386 UTC , thread_cap_info = ("ThreadId 117",
S | | | | | |      2, False)}
S | | | | | |      
| | F | | | |      
| | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | E | | | |      = 3 , total_length = 62} , self = 79 , parent = Nothing , duration = 0.862069706000
| | E | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:38.095911217
| | E | | | |      UTC , finish = 2025-09-03 10:51:38.957980923 UTC , thread_cap_info = ("ThreadId
| | E | | | |      119", 2, False)}
| | E | | | |      
| | | | F | |      
| | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 44
| | | | E | |      , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 16 , alphabet_size
| | | | E | |      = 6 , total_length = 396} , self = 73 , parent = Nothing , duration = 0.605248911000
| | | | E | |      , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:38.315360654
| | | | E | |      UTC , finish = 2025-09-03 10:51:38.920609565 UTC , thread_cap_info = ("ThreadId
| | | | E | |      122", 3, False)}
| | | | E | |      
| | | S | | |      
S | |   | | |      
  | |   | S |      
  | |   |   E      
  | |   E          
  | E              
  E                
