last 947 length 4013
last 1073 length 4357
CNF 947 vars 4013 clauses
last 1954 length 8921
last 1926 length 9497
last 1117 length 5423
CNF 1073 vars 4357 clauses
last 1137 length 5027
CNF 1954 vars 8921 clauses
CNF 1926 vars 9497 clauses
CNF 1137 vars 5027 clauses
CNF 1117 vars 5423 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2607, clauses: 10094
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6203, clauses: 25752
last 2607 length 10094
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2375, clauses: 9171
last 6203 length 25752
last 7900 length 36247
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6153, clauses: 25544
last 8250 length 35558
CNF 2607 vars 10094 clauses
last 2375 length 9171
last 5400 length 24424
CNF 6203 vars 25752 clauses
CNF 7900 vars 36247 clauses
last 6153 length 25544
CNF 8250 vars 35558 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2607, clauses: 10094, status: Satisfied, time: 0.355109996s
CNF 2375 vars 9171 clauses
CNF 5400 vars 24424 clauses
last 14610 length 67639
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6203, clauses: 25752, status: Satisfied, time: 0.408959232s
CNF 6153 vars 25544 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2375, clauses: 9171, status: Satisfied, time: 0.25530782s
last 911 length 3891
last 994 length 4054
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9803, clauses: 40575
CNF 14610 vars 67639 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9322, clauses: 39100
CNF 911 vars 3891 clauses
CNF 994 vars 4054 clauses
**************************************************last 9803 length 40575

last 9322 length 39100
summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       context
SRS with 4 rules on 2 letters       mirror
SRS with 4 rules on 2 letters       DP
SRS with 5 strict rules and 4 weak rules on 4 letters       EDG
SRS with 5 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 4 letters       weights
SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b, a] -> [b, b, a, a, a] {- Input 1 -}
  [b] -> [a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [] {- Mirror (Input 0) -}
  [a, b, a, a] -> [a, a, a, b, b] {- Mirror (Input 1) -}
  [b] -> [a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [b, a] -> [b] {- Mirror (Input 0) -}
  [a, b, a, a] -> [a, a, a, b, b] {- Mirror (Input 1) -}
  [b] -> [a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, a, b, a] -> [b, b, a, a, a] {- Input 1 -}
  [b] -> [a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, b, a] ->= [b, b, a, a, a] {- DP Nontop (Input 1) -}
  [b] ->= [a] {- DP Nontop (Input 2) -}
  [a#, a, b, a] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [a#, a, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, a, a, a] {- DP (Top 1) (Input 1) -}
  [a#, a, b, a] |-> [b#, b, a, a, a] {- DP (Top 0) (Input 1) -}
  [b#] |-> [a#] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [a#, a, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, a, a, a] {- DP (Top 1) (Input 1) -}
  [b#] |-> [a#] {- DP (Top 0) (Input 2) -}
  [a#, a, b, a] |-> [b#, b, a, a, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, b, a] ->= [b, b, a, a, a] {- DP Nontop (Input 1) -}
  [b] ->= [a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 3A 3A 4A - \
        | 3A 3A 4A - |
        | 3A 3A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#] |-> [a#] {- DP (Top 0) (Input 2) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, b, a] ->= [b, b, a, a, a] {- DP Nontop (Input 1) -}
  [b] ->= [a] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, a, b, a] ->= [b, b, a, a, a] {- DP Nontop (Input 1) -}
  [b] ->= [a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Context\Mirror(4,2)\Deepee\EDG(5/4,4)\Matrix{\Arctic}{3}(1/4,4)\Weight(0/4,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 9803 vars 40575 clauses
CNF 9322 vars 39100 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.504783167000
  min duration 0.127428741000
  total durat. 1.123260519000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.490146317000
  min duration 0.117711172000
  total durat. 1.674946124000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.739552387000
  min duration 0.627059157000
  total durat. 1.366611544000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.783918993000
  min duration 0.638797810000
  total durat. 1.422716803000
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F              = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 12} , self
F              = 55 , parent = Nothing , duration = 0.281282343000 , status = Fail , start
F              = 2025-09-03 10:58:32.372831212 UTC , finish = 2025-09-03 10:58:32.654113555
F              UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F              
| F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F            = 72} , self = 46 , parent = Nothing , duration = 0.246643538000 , status
| F            = Fail , start = 2025-09-03 10:58:32.373901213 UTC , finish = 2025-09-03
| F            10:58:32.620544751 UTC , thread_cap_info = ("ThreadId 63", 1, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F          = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F          = 72} , self = 56 , parent = Nothing , duration = 0.280220722000 , status
| | F          = Fail , start = 2025-09-03 10:58:32.373909648 UTC , finish = 2025-09-03
| | F          10:58:32.65413037 UTC , thread_cap_info = ("ThreadId 65", 1, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F        = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F        = 54} , self = 41 , parent = Nothing , duration = 0.127428741000 , status
| | | F        = Fail , start = 2025-09-03 10:58:32.386479365 UTC , finish = 2025-09-03
| | | F        10:58:32.513908106 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F      = 54} , self = 40 , parent = Nothing , duration = 0.117711172000 , status
| | | | F      = Fail , start = 2025-09-03 10:58:32.393447945 UTC , finish = 2025-09-03
| | | | F      10:58:32.511159117 UTC , thread_cap_info = ("ThreadId 75", 3, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F    = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F    = 49} , self = 57 , parent = Nothing , duration = 0.244405073000 , status
| | | | | F    = Fail , start = 2025-09-03 10:58:32.409730728 UTC , finish = 2025-09-03
| | | | | F    10:58:32.654135801 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | | | | F    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F  = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F  = 49} , self = 60 , parent = Nothing , duration = 0.300571647000 , status
| | | | | | F  = Fail , start = 2025-09-03 10:58:32.415015846 UTC , finish = 2025-09-03
| | | | | | F  10:58:32.715587493 UTC , thread_cap_info = ("ThreadId 77", 3, False)}
| | | | | | F  
| | | | F | |  
| | | F   | |  
| | | S   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   | |  = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | S   | |  alphabet_size = 4 , total_length = 54} , self = 62 , parent = Nothing ,
| | | S   | |  duration = 0.638797810000 , status = Success , start = 2025-09-03 10:58:32.516550289
| | | S   | |  UTC , finish = 2025-09-03 10:58:33.155348099 UTC , thread_cap_info = ("ThreadId
| | | S   | |  90", 1, False)}
| | | S   | |  
| | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | E | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | | E | |  = 4 , total_length = 54} , self = 64 , parent = Nothing , duration = 0.627059157000
| | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:32.541714844
| | | | E | |  UTC , finish = 2025-09-03 10:58:33.168774001 UTC , thread_cap_info = ("ThreadId
| | | | E | |  91", 3, False)}
| | | | E | |  
| F | | | | |  
| F | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| F | | | | |  = 34 , num_top_rules = 34 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| F | | | | |  = 310} , self = 61 , parent = Nothing , duration = 0.490146317000 , status
| F | | | | |  = Fail , start = 2025-09-03 10:58:32.654022417 UTC , finish = 2025-09-03
| F | | | | |  10:58:33.144168734 UTC , thread_cap_info = ("ThreadId 104", 0, False)}
| F | | | | |  
F | | | | | |  
  | F | | | |  
  |   | | F |  
S |   | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | |   |  = 9 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size
S |   | |   |  = 4 , total_length = 49} , self = 71 , parent = Nothing , duration = 0.783918993000
S |   | |   |  , status = Success , start = 2025-09-03 10:58:32.675467789 UTC , finish
S |   | |   |  = 2025-09-03 10:58:33.459386782 UTC , thread_cap_info = ("ThreadId 110",
S |   | |   |  3, False)}
S |   | |   |  
| | F | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | F | |   |  = 30 , num_top_rules = 30 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | F | |   |  = 286} , self = 69 , parent = Nothing , duration = 0.504783167000 , status
| | F | |   |  = Fail , start = 2025-09-03 10:58:32.693458335 UTC , finish = 2025-09-03
| | F | |   |  10:58:33.198241502 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| | F | |   |  
| | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | | | F |  = 30 , num_top_rules = 30 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | F |  = 286} , self = 70 , parent = Nothing , duration = 0.486296266000 , status
| | | | | F |  = Fail , start = 2025-09-03 10:58:32.714303306 UTC , finish = 2025-09-03
| | | | | F |  10:58:33.200599572 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| | | | | F |  
| | | | | | F  
| | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | E  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size
| | | | | | E  = 4 , total_length = 49} , self = 73 , parent = Nothing , duration = 0.739552387000
| | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:32.734893597
| | | | | | E  UTC , finish = 2025-09-03 10:58:33.474445984 UTC , thread_cap_info = ("ThreadId
| | | | | | E  112", 3, False)}
| | | | | | E  
| F | | | | |  
|   | S | | |  
|   |   E | |  
|   F     | |  
|         F |  
S           |  
            E  
