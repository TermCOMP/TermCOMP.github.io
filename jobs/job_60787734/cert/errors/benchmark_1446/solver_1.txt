last 794 length 3341
last 922 length 3963
CNF 794 vars 3341 clauses
last 820 length 3469
CNF 922 vars 3963 clauses
CNF 820 vars 3469 clauses
last 1035 length 4375
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2026, clauses: 7402
last 3401 length 14795
last 3462 length 15199
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1912, clauses: 7006
last 2026 length 7402
CNF 1035 vars 4375 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7943, clauses: 33403
CNF 3462 vars 15199 clauses
CNF 3401 vars 14795 clauses
last 1912 length 7006
CNF 2026 vars 7402 clauses
last 7943 length 33403
CNF 1912 vars 7006 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2026, clauses: 7402, status: Satisfied, time: 0.083295707s
CNF 7943 vars 33403 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7357, clauses: 30929
last 4198 length 18385
last 4970 length 22343
last 7357 length 30929
last 4307 length 18937
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1912, clauses: 7006, status: Unsatisfied, time: 0.256683866s
CNF 4198 vars 18385 clauses
last 888 length 3670
last 4962 length 22531
last 780 length 3261
CNF 4970 vars 22343 clauses
CNF 7357 vars 30929 clauses
CNF 4307 vars 18937 clauses
CNF 888 vars 3670 clauses
CNF 4962 vars 22531 clauses
CNF 780 vars 3261 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4428, clauses: 18686
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6099, clauses: 23042
last 4428 length 18686
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7357, clauses: 30929, status: Satisfied, time: 0.268732855s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2029, clauses: 7381
last 6099 length 23042
CNF 6099 vars 23042 clauses
last 2029 length 7381
CNF 4428 vars 18686 clauses
CNF 2029 vars 7381 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2029, clauses: 7381, status: Satisfied, time: 0.068288332s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6099, clauses: 23042, status: Satisfied, time: 0.153467019s
last 774 length 3246
last 775 length 3212
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 8 strict rules and 3 weak rules on 4 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b] -> [a, a, b, b] {- Input 0 -}
  [b, b, b, b] -> [b, b, b, a] {- Input 1 -}
  [a, a, a, a] -> [b, a, b, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, b, a] -> [b, b, a, a] {- Mirror (Input 0) -}
  [b, b, b, b] -> [a, b, b, b] {- Mirror (Input 1) -}
  [a, a, a, a] -> [a, b, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [b, b, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 1)) -}CNF 774 vars 3246 clauses

CNF 775 vars 3212 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6204, clauses: 23108
  [a, a, a, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 2)) -}last 6204 length 23108
last 4198 length 18385

  [a#, a, a, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 2)) -}
  [a#, a, a, a] |-> [a#, b, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
CNF 4198 vars 18385 clauses
  CNF 6204 vars 23108 clauses
[a#, a, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 2)) -}last 4970 length 22343

  [a#, a, a, a] |-> [b#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, a, b, a] |-> [a#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, a, b, a] |-> [b#, a, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, a, b, a] |-> [b#, b, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, b, b] |-> [a#, b, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  (a, 2/1)
  (b, 2/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [b, b, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, a, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, a, a] |-> [a#, b, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, b, a] |-> [b#, b, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [a#, b, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, a, b, a] ->= [b, b, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, a, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 2A 3A 4A - \
        | 2A 3A 4A - |
        | 2A 3A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [b, b, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, a, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, a, b, a] |-> [b#, b, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, a, b, a] ->= [b, b, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, a, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 3A 4A 4A - \
        | 3A 4A 4A - |
        | 3A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b, a, b, a] ->= [b, b, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, b, b] ->= [a, b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, a, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee(8/3,4)\Weight(2/3,4)\EDG[(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[],(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 4970 vars 22343 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.425042539000
  min duration 0.034289508000
  total durat. 1.372992674000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.481267167000
  min duration 0.057622674000
  total durat. 1.512091234000
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                  = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
F                  = 45 , parent = Nothing , duration = 0.163946665000 , status = Fail , start
F                  = 2025-09-03 12:04:41.209784538 UTC , finish = 2025-09-03 12:04:41.373731203
F                  UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F                = 32} , self = 44 , parent = Nothing , duration = 0.137192049000 , status
| F                = Fail , start = 2025-09-03 12:04:41.210952661 UTC , finish = 2025-09-03
| F                12:04:41.34814471 UTC , thread_cap_info = ("ThreadId 44", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F              = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F              = 120} , self = 57 , parent = Nothing , duration = 0.224283164000 , status
| | F              = Fail , start = 2025-09-03 12:04:41.215900726 UTC , finish = 2025-09-03
| | F              12:04:41.44018389 UTC , thread_cap_info = ("ThreadId 59", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F            = 120} , self = 56 , parent = Nothing , duration = 0.214791513000 , status
| | | F            = Fail , start = 2025-09-03 12:04:41.223010967 UTC , finish = 2025-09-03
| | | F            12:04:41.43780248 UTC , thread_cap_info = ("ThreadId 61", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F          = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | F          = 32} , self = 54 , parent = Nothing , duration = 0.199268150000 , status
| | | | F          = Fail , start = 2025-09-03 12:04:41.223016727 UTC , finish = 2025-09-03
| | | | F          12:04:41.422284877 UTC , thread_cap_info = ("ThreadId 45", 2, False)}
| | | | F          
| | | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S        = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | S        = 3 , total_length = 32} , self = 63 , parent = Nothing , duration = 0.384798898000
| | | | | S        , status = Success , start = 2025-09-03 12:04:41.249714061 UTC , finish
| | | | | S        = 2025-09-03 12:04:41.634512959 UTC , thread_cap_info = ("ThreadId 80",
| | | | | S        3, False)}
| | | | | S        
| | | | | | F      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | F      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | F      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | F      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | F      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | F      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | F      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | F      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | F      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | | F      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | F      = 24} , self = 46 , parent = Nothing , duration = 0.108519245000 , status
| | | | | | F      = Fail , start = 2025-09-03 12:04:41.265320885 UTC , finish = 2025-09-03
| | | | | | F      12:04:41.37384013 UTC , thread_cap_info = ("ThreadId 76", 1, False)}
| | | | | | F      
| | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | E    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | E    = 3 , total_length = 32} , self = 65 , parent = Nothing , duration = 0.374618049000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:41.280662321
| | | | | | | E    UTC , finish = 2025-09-03 12:04:41.65528037 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    85", 3, False)}
| | | | | | | E    
| | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | E  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E  = 24} , self = 92 , parent = Nothing , duration = 0.799875658000 , status
| | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:04:41.303258192 UTC ,
| | | | | | | | E  finish = 2025-09-03 12:04:42.10313385 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  88", 0, False)}
| | | | | | | | E  
| F | | | | | | |  
| F | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | | |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| F | | | | | | |  = 3 , total_length = 32} , self = 70 , parent = Nothing , duration = 0.348533386000
| F | | | | | | |  , status = Fail , start = 2025-09-03 12:04:41.348190233 UTC , finish =
| F | | | | | | |  2025-09-03 12:04:41.696723619 UTC , thread_cap_info = ("ThreadId 90", 2,
| F | | | | | | |  False)}
| F | | | | | | |  
F | | | | | | | |  
  | | | | | F | |  
  | | | F |   | |  
S | | |   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S | | |   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | |   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
S | | |   |   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
S | | |   |   | |  = 3 , total_length = 32} , self = 76 , parent = Nothing , duration = 0.513287596000
S | | |   |   | |  , status = Success , start = 2025-09-03 12:04:41.422324925 UTC , finish
S | | |   |   | |  = 2025-09-03 12:04:41.935612521 UTC , thread_cap_info = ("ThreadId 105",
S | | |   |   | |  2, False)}
S | | |   |   | |  
| | | F   |   | |  
| | F     |   | |  
| | F     |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F     |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F     |   | |  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | F     |   | |  = 140} , self = 75 , parent = Nothing , duration = 0.481267167000 , status
| | F     |   | |  = Fail , start = 2025-09-03 12:04:41.444280018 UTC , finish = 2025-09-03
| | F     |   | |  12:04:41.925547185 UTC , thread_cap_info = ("ThreadId 113", 1, False)}
| | F     |   | |  
| | | F   |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F   |   | |  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | F   |   | |  = 140} , self = 73 , parent = Nothing , duration = 0.425042539000 , status
| | | F   |   | |  = Fail , start = 2025-09-03 12:04:41.468846679 UTC , finish = 2025-09-03
| | | F   |   | |  12:04:41.893889218 UTC , thread_cap_info = ("ThreadId 112", 1, False)}
| | | F   |   | |  
| | | | F |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F |   | |  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F |   | |  = 140} , self = 71 , parent = Nothing , duration = 0.244706646000 , status
| | | | F |   | |  = Fail , start = 2025-09-03 12:04:41.468878862 UTC , finish = 2025-09-03
| | | | F |   | |  12:04:41.713585508 UTC , thread_cap_info = ("ThreadId 115", 0, False)}
| | | | F |   | |  
| | | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F | |  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | F | |  = 140} , self = 72 , parent = Nothing , duration = 0.328104613000 , status
| | | | | | F | |  = Fail , start = 2025-09-03 12:04:41.483808306 UTC , finish = 2025-09-03
| | | | | | F | |  12:04:41.811912919 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | | | | | F | |  
| | | | | S | | |  
| | | | |   | E |  
| | | | | F |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F |   |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | F |   |  = 32} , self = 79 , parent = Nothing , duration = 0.307478768000 , status
| | | | | F |   |  = Fail , start = 2025-09-03 12:04:41.65555245 UTC , finish = 2025-09-03
| | | | | F |   |  12:04:41.963031218 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| | | | | F |   |  
| | | | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F |  = 32} , self = 74 , parent = Nothing , duration = 0.231037117000 , status
| | | | | | | F |  = Fail , start = 2025-09-03 12:04:41.664067825 UTC , finish = 2025-09-03
| | | | | | | F |  12:04:41.895104942 UTC , thread_cap_info = ("ThreadId 124", 3, False)}
| | | | | | | F |  
| F | | | | | | |  
| E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E | | | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| E | | | | | | |  = 3 , total_length = 32} , self = 78 , parent = Nothing , duration = 0.263486230000
| E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:41.696754408
| E | | | | | | |  UTC , finish = 2025-09-03 12:04:41.960240638 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |  128", 2, False)}
| E | | | | | | |  
| | | | F | | | |  
| | | | S | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | |  = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | S | | | |  alphabet_size = 5 , total_length = 140} , self = 86 , parent = Nothing
| | | | S | | | |  , duration = 0.380047008000 , status = Success , start = 2025-09-03 12:04:41.713620941
| | | | S | | | |  UTC , finish = 2025-09-03 12:04:42.093667949 UTC , thread_cap_info = ("ThreadId
| | | | S | | | |  130", 0, False)}
| | | | S | | | |  
| | | | | | F | |  
| | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | E | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size
| | | | | | E | |  = 5 , total_length = 140} , self = 91 , parent = Nothing , duration = 0.291147738000
| | | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:41.811963053
| | | | | | E | |  UTC , finish = 2025-09-03 12:04:42.103110791 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |  133", 0, False)}
| | | | | | E | |  
| | | F | | | | |  
| | |   | | | F |  
| | F   | | |   |  
S |     | | |   |  
  E     | | |   |  
        | F |   |  
E       |   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E       |   |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E       |   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E       |   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E       |   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E       |   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E       |   |   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
E       |   |   |  = 3 , total_length = 32} , self = 88 , parent = Nothing , duration = 0.129086251000
E       |   |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:41.966700647
E       |   |   |  UTC , finish = 2025-09-03 12:04:42.095786898 UTC , thread_cap_info = ("ThreadId
E       |   |   |  142", 3, False)}
E       |   |   |  
|       S   |   |  
E           |   |  
            E   |  
                E  
