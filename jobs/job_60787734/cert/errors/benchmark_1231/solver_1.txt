last 1918 length 8027
CNF 1918 vars 8027 clauses
last 1899 length 8105
CNF 1899 vars 8105 clauses
last 713 length 2943
last 780 length 3092
CNF 780 vars 3092 clauses
CNF 713 vars 2943 clauses
last 668 length 2799
CNF 668 vars 2799 clauses
last 875 length 3833
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2628, clauses: 9614
CNF 875 vars 3833 clauses
last 2628 length 9614
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8508
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8562, clauses: 35673
last 3552 length 16558
CNF 2628 vars 9614 clauses
last 4142 length 18145
last 2378 length 8508
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8218, clauses: 34229
last 8562 length 35673
last 5660 length 26436
CNF 3552 vars 16558 clauses
last 4745 length 26459
CNF 2378 vars 8508 clauses
CNF 4142 vars 18145 clauses
last 8218 length 34229
CNF 8562 vars 35673 clauses
CNF 4745 vars 26459 clauses
CNF 5660 vars 26436 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2628, clauses: 9614, status: Satisfied, time: 0.38215112s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8508, status: Satisfied, time: 0.214593522s
CNF 8218 vars 34229 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7153, clauses: 26830
last 7153 length 26830
CNF 7153 vars 26830 clauses
last 710 length 2827
last 685 length 2849
CNF 710 vars 2827 clauses
CNF 685 vars 2849 clauses
last 574 length 2433
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2522, clauses: 9135
last 2522 length 9135
last 871 length 3838
CNF 2522 vars 9135 clauses
CNF 574 vars 2433 clauses
CNF 871 vars 3838 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7153, clauses: 26830, status: Satisfied, time: 0.387768385s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7946, clauses: 30642
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8516, clauses: 35497
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2522, clauses: 9135, status: Unsatisfied, time: 0.312331713s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2270, clauses: 8043
last 7946 length 30642
last 8516 length 35497
last 2270 length 8043
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24230, clauses: 101004
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8170, clauses: 34049

CNF 2270 vars 8043 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5302, clauses: 21396
last 24230 length 101004
last 8170 length 34049
CNF 7946 vars 30642 clauses
CNF 8516 vars 35497 clauses
summarylast 5302 length 21396

Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2270, clauses: 8043, status: Satisfied, time: 0.12770013s
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       weights
SRS with 18 rules on 9 letters       DP
SRS with 19 strict rules and 18 weak rules on 15 letters       weights
SRS with 12 strict rules and 18 weak rules on 14 letters       EDG
4 sub-proofs
  1 SRS with 9 strict rules and 18 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 18 weak rules on 10 letters       EDG
  SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  3 SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  4 SRS with 1 strict rules and 18 weak rules on 10 letters       Usable
  SRS with 1 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b, b] -> [b, b, b, c, a, a] {- Input 1 -}
  [c, b] -> [] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, c]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, b], [b, c]] -> [ [b, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, b], [b, a]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b], [b, b]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, b], [b, c]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, c], [c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, c]] -> [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, b], [b, b]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, b], [b, c]] -> [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [b, c]# , [c, a] , [a, a] , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [b, c]# , [c, a] , [a, a] , [ a , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [b, c]# , [c, a] , [a, a] , [ a , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 6) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [b, c]# , [c, a] , [a, a] , [ a , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, c]] |-> [[c, c]#] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 1/1)
  ([a, c]#, 0/1)
  ([b, a]#, 0/1)
  ([b, c]#, 0/1)
  ([c, a]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8516, clauses: 35497, status: Satisfied, time: 0.218266214s
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 5) (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 4) (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [c, a]# , [a, a] , [ a , b ] ] {- DP (Top 4) (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 5) (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [c, a]# , [a, a] , [ a , c ] ] {- DP (Top 4) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 18A 18A 18A - \
        | 18A 18A 18A - |
        | 15A 15A 15A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
  ( [c, a]#
  , Wk  / 9A 9A 10A - \
        | 9A 9A 10A - |
        | 9A 9A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) -}
reason
  ([a, a], 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}CNF 5302 vars 21396 clauses

  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [c, b], [b, c]] |-> [ [ a , c ]# ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 2))) -}
reason
  ([b, c], 1/1)
  ([c, b], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
reason
  ([a, a], 1/1)
  ([b, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, b] , [b, c] , [c, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, c], [c, b], [b, b]] ->= [ [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, c], [c, b], [b, c]] ->= [ [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, c], [c, b], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, c], [c, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, c], [c, b], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, c], [c, b], [b, b]] ->= [ [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, c], [c, b], [b, c]] ->= [ [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[c, c]#, [c, b], [b, c]] |-> [ [ c , c ]# ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([b, c], 1/1)
  ([c, b], 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Weight(18,9)\Deepee(19/18,15)\Weight(12/18,14)\EDG[(9/18,11)\Matrix{\Arctic}{3}\EDG(1/18,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/18,10)\Usable(1,3)\Weight(0,0)\EDG[],(1/18,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/18,10)\Usable(1,3)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 24230 vars 101004 clauses
CNF 8170 vars 34049 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8170, clauses: 34049, status: Satisfied, time: 0.184492985s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.459993393000
  min duration 0.020830393000
  total durat. 1.505329456000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.442649053000
  min duration 0.024413738000
  total durat. 1.645067132000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.920766235000
  min duration 0.527248470000
  total durat. 2.111274154000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.865566182000
  min duration 0.585358314000
  total durat. 2.155826244000
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 12} , self = 59 , parent = Nothing , duration = 0.347289246000 , status
F                  = Fail , start = 2025-09-03 11:19:54.479967344 UTC , finish = 2025-09-03
F                  11:19:54.82725659 UTC , thread_cap_info = ("ThreadId 37", 3, False)}
F                  
| F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
| F                = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
| F                = 68 , parent = Nothing , duration = 0.526678691000 , status = Fail , start
| F                = 2025-09-03 11:19:54.480182563 UTC , finish = 2025-09-03 11:19:55.006861254
| F                UTC , thread_cap_info = ("ThreadId 22", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F              = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 93} , self = 40 , parent = Nothing , duration = 0.102314909000 , status
| | F              = Fail , start = 2025-09-03 11:19:54.482183858 UTC , finish = 2025-09-03
| | F              11:19:54.584498767 UTC , thread_cap_info = ("ThreadId 67", 0, False)}
| | F              
| | F              
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F              = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F              = 39} , self = 60 , parent = Nothing , duration = 0.218301180000 , status
| | F              = Fail , start = 2025-09-03 11:19:54.609019043 UTC , finish = 2025-09-03
| | F              11:19:54.827320223 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F            = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | F            = 39} , self = 56 , parent = Nothing , duration = 0.101187303000 , status
| | | F            = Fail , start = 2025-09-03 11:19:54.61459376 UTC , finish = 2025-09-03
| | | F            11:19:54.715781063 UTC , thread_cap_info = ("ThreadId 94", 0, False)}
| | | F            
| | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S          = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | S          alphabet_size = 4 , total_length = 45} , self = 72 , parent = Nothing ,
| | | | S          duration = 0.704901748000 , status = Success , start = 2025-09-03 11:19:54.614604958
| | | | S          UTC , finish = 2025-09-03 11:19:55.319506706 UTC , thread_cap_info = ("ThreadId
| | | | S          99", 3, False)}
| | | | S          
| | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | E        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | E        = 4 , total_length = 45} , self = 74 , parent = Nothing , duration = 0.663259449000
| | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:54.656363271
| | | | | E        UTC , finish = 2025-09-03 11:19:55.31962272 UTC , thread_cap_info = ("ThreadId
| | | | | E        102", 3, False)}
| | | | | E        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F      = 9 , num_top_rules = 9 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | | | | F      = 148} , self = 70 , parent = Nothing , duration = 0.447940135000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:19:54.697113999 UTC , finish = 2025-09-03
| | | | | | F      11:19:55.145054134 UTC , thread_cap_info = ("ThreadId 105", 1, False)}
| | | | | | F      
| | | F | | |      
| | | F | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F | | |      = 9 , num_top_rules = 9 , num_weak_rules = 18 , alphabet_size = 11 , total_length
| | | F | | |      = 148} , self = 69 , parent = Nothing , duration = 0.417162755000 , status
| | | F | | |      = Fail , start = 2025-09-03 11:19:54.715783747 UTC , finish = 2025-09-03
| | | F | | |      11:19:55.132946502 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| | | F | | |      
| | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S    = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | S    = 4 , total_length = 39} , self = 75 , parent = Nothing , duration = 0.585358314000
| | | | | | | S    , status = Success , start = 2025-09-03 11:19:54.734675025 UTC , finish
| | | | | | | S    = 2025-09-03 11:19:55.320033339 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | S    3, False)}
| | | | | | | S    
F | | | | | | |    
  | F | | | | |    
E |   | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E |   | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E |   | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
E |   | | | | |    = 4 , total_length = 39} , self = 82 , parent = Nothing , duration = 0.527248470000
E |   | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:54.827466663
E |   | | | | |    UTC , finish = 2025-09-03 11:19:55.354715133 UTC , thread_cap_info = ("ThreadId
E |   | | | | |    111", 3, False)}
E |   | | | | |    
| | F | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| | F | | | | |    = 13 , num_top_rules = 13 , num_weak_rules = 18 , alphabet_size = 11 ,
| | F | | | | |    total_length = 181} , self = 81 , parent = Nothing , duration = 0.459993393000
| | F | | | | |    , status = Fail , start = 2025-09-03 11:19:54.894640039 UTC , finish =
| | F | | | | |    2025-09-03 11:19:55.354633432 UTC , thread_cap_info = ("ThreadId 117",
| | F | | | | |    1, False)}
| | F | | | | |    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| | | | | | | | F  = 13 , num_top_rules = 13 , num_weak_rules = 18 , alphabet_size = 11 ,
| | | | | | | | F  total_length = 181} , self = 71 , parent = Nothing , duration = 0.385522169000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:19:54.914840637 UTC , finish =
| | | | | | | | F  2025-09-03 11:19:55.300362806 UTC , thread_cap_info = ("ThreadId 118",
| | | | | | | | F  1, False)}
| | | | | | | | F  
| F | | | | | | |  
|   | F | | | | |  
| S |   | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | | |  = 27 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 18 ,
| S |   | | | | |  alphabet_size = 11 , total_length = 148} , self = 91 , parent = Nothing
| S |   | | | | |  , duration = 0.865566182000 , status = Success , start = 2025-09-03 11:19:55.133004343
| S |   | | | | |  UTC , finish = 2025-09-03 11:19:55.998570525 UTC , thread_cap_info = ("ThreadId
| S |   | | | | |  126", 1, False)}
| S |   | | | | |  
| | |   | | F | |  
| | | E | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| | | E | |   | |  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 18 , alphabet_size
| | | E | |   | |  = 11 , total_length = 148} , self = 93 , parent = Nothing , duration =
| | | E | |   | |  0.920766235000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | |   | |  11:19:55.15606087 UTC , finish = 2025-09-03 11:19:56.076827105 UTC , thread_cap_info
| | | E | |   | |  = ("ThreadId 127", 1, False)}
| | | E | |   | |  
| | | | | |   | F  
| | | | S |   |    
| | | |   E   |    
| | | |       S    
| | F |            
E |   |            
F |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F |   |            = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
F |   |            = 35} , self = 89 , parent = Nothing , duration = 0.335802759000 , status
F |   |            = Fail , start = 2025-09-03 11:19:55.391979475 UTC , finish = 2025-09-03
F |   |            11:19:55.727782234 UTC , thread_cap_info = ("ThreadId 142", 3, False)}
F |   |            
| | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F |            = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F |            = 35} , self = 90 , parent = Nothing , duration = 0.442649053000 , status
| | F |            = Fail , start = 2025-09-03 11:19:55.391985562 UTC , finish = 2025-09-03
| | F |            11:19:55.834634615 UTC , thread_cap_info = ("ThreadId 143", 3, False)}
| | F |            
| | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F          = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | F          = 4 , total_length = 41} , self = 95 , parent = Nothing , duration = 0.723217042000
| | | | F          , status = Fail , start = 2025-09-03 11:19:55.394899793 UTC , finish =
| | | | F          2025-09-03 11:19:56.118116835 UTC , thread_cap_info = ("ThreadId 144",
| | | | F          3, False)}
| | | | F          
F | | | |          
  | F | |          
  S   | |          
      E |          
        F          
