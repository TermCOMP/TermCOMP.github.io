last 2466 length 12398
last 2847 length 14163
CNF 2466 vars 12398 clauses
CNF 2847 vars 14163 clauses
last 2862 length 15419
CNF 2862 vars 15419 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1955, clauses: 7764
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1723, clauses: 6547
last 4851 length 24023
last 1955 length 7764
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6153, clauses: 25805
last 1723 length 6547
last 6153 length 25805
CNF 1723 vars 6547 clauses
CNF 1955 vars 7764 clauses
CNF 4851 vars 24023 clauses
CNF 6153 vars 25805 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1723, clauses: 6547, status: Unsatisfied, time: 0.070989513s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1955, clauses: 7764, status: Unsatisfied, time: 0.133293332s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3695, clauses: 15716
last 3695 length 15716
CNF 3695 vars 15716 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5907, clauses: 24779
last 5907 length 24779
CNF 5907 vars 24779 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3600, clauses: 15515
last 3600 length 15515
CNF 3600 vars 15515 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3695, clauses: 15716, status: Unsatisfied, time: 0.287574623s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6153, clauses: 25805, status: Unsatisfied, time: 0.613523868s
last 9572 length 61932
CNF 9572 vars 61932 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3600, clauses: 15515, status: Unsatisfied, time: 0.318721003s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2876, clauses: 11398
last 2876 length 11398
CNF 2876 vars 11398 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2876, clauses: 11398, status: Satisfied, time: 0.282259147s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3245, clauses: 13624
last 3245 length 13624
CNF 3245 vars 13624 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5907, clauses: 24779, status: Unsatisfied, time: 0.808676613s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       DP
SRS with 5 strict rules and 1 weak rules on 3 letters       EDG
SRS with 2 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a, b, b, a, b, a] -> [ a , b , a , b , b , a , b , b , a , b , b , a ] {- Input 0 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b, b, a, b] -> [ a , b , b , a , b , b , a , b , b , a , b , a ] {- Mirror (Input 0) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [a#] {- DP (Top 11) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a ] {- DP (Top 9) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , a ] {- DP (Top 6) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , b , a , b , a ] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , b , a , b , b , a , b , b , a , b , a ] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, b, b, a, b, b, a, b] |-> [a#] {- DP (Top 11) (Mirror (Input 0)) -}
  [a#, b, a, b, b, a, b, b, a, b] |-> [ a# , b , a ] {- DP (Top 9) (Mirror (Input 0)) -}
  [a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
reason
  ( a
  , Wk  / 0A  0A  0A  0A - \
        | -4A -4A 0A  0A - |
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( b
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( a#
  , Wk  / 9A 9A 13A 13A - \
        | 9A 9A 13A 13A - |
        | 9A 9A 13A 13A - |
        | 9A 9A 13A 13A - |
        \ -  -  -   -   - / )
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b, b, a, b] ->= [ a , b , b , a , b , b , a , b , b , a , b , a ] {- DP Nontop (Mirror (Input 0)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(1,2)\Deepee(5/1,3)\EDG(2/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.234881098000
  min duration 0.436503575000
  total durat. 2.213063228000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 96}
    , self = 66
    , parent = Nothing
    , duration = 1.234881098000
    , status = Fail
    , start = 2025-09-03 12:55:54.261612883 UTC
    , finish = 2025-09-03 12:55:55.496493981 UTC
    , thread_cap_info = ("ThreadId 67", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.045167226000
  min duration 0.699824690000
  total durat. 1.744991916000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 76}
    , self = 70
    , parent = Nothing
    , duration = 1.045167226000
    , status = Fail
    , start = 2025-09-03 12:55:54.913719147 UTC
    , finish = 2025-09-03 12:55:55.958886373 UTC
    , thread_cap_info = ("ThreadId 111", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.551018539000
  min duration 0.505045222000
  total durat. 1.056063761000
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F            = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 22} , self
F            = 61 , parent = Nothing , duration = 0.872888899000 , status = Fail , start
F            = 2025-09-03 12:55:54.260377319 UTC , finish = 2025-09-03 12:55:55.133266218
F            UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F            
| F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F          = 96} , self = 66 , parent = Nothing , duration = 1.234881098000 , status
| F          = Fail , start = 2025-09-03 12:55:54.261612883 UTC , finish = 2025-09-03
| F          12:55:55.496493981 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
| F          
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F        = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F        = 46} , self = 50 , parent = Nothing , duration = 0.436503575000 , status
| | F        = Fail , start = 2025-09-03 12:55:54.261795601 UTC , finish = 2025-09-03
| | F        12:55:54.698299176 UTC , thread_cap_info = ("ThreadId 74", 1, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F      = 46} , self = 43 , parent = Nothing , duration = 0.329745299000 , status
| | | F      = Fail , start = 2025-09-03 12:55:54.273626783 UTC , finish = 2025-09-03
| | | F      12:55:54.603372082 UTC , thread_cap_info = ("ThreadId 75", 1, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | F    = 76} , self = 58 , parent = Nothing , duration = 0.541678555000 , status
| | | | F    = Fail , start = 2025-09-03 12:55:54.353620553 UTC , finish = 2025-09-03
| | | | F    12:55:54.895299108 UTC , thread_cap_info = ("ThreadId 82", 1, False)}
| | | | F    
| | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | F  = 76} , self = 44 , parent = Nothing , duration = 0.229822407000 , status
| | | | | F  = Fail , start = 2025-09-03 12:55:54.37362439 UTC , finish = 2025-09-03
| | | | | F  12:55:54.603446797 UTC , thread_cap_info = ("ThreadId 83", 1, False)}
| | | | | F  
| | | F | |  
| | |   | F  
| | | F |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |    = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | F |    = 3 , total_length = 46} , self = 57 , parent = Nothing , duration = 0.268886019000
| | | F |    , status = Fail , start = 2025-09-03 12:55:54.613751842 UTC , finish =
| | | F |    2025-09-03 12:55:54.882637861 UTC , thread_cap_info = ("ThreadId 96", 1,
| | | F |    False)}
| | | F |    
| | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F  = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | F  = 3 , total_length = 76} , self = 59 , parent = Nothing , duration = 0.263213101000
| | | | | F  , status = Fail , start = 2025-09-03 12:55:54.63385763 UTC , finish = 2025-09-03
| | | | | F  12:55:54.897070731 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | F  
| | F | | |  
| | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | F | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | F | | |  = 3 , total_length = 46} , self = 64 , parent = Nothing , duration = 0.699824690000
| | F | | |  , status = Fail , start = 2025-09-03 12:55:54.72040294 UTC , finish = 2025-09-03
| | F | | |  12:55:55.42022763 UTC , thread_cap_info = ("ThreadId 100", 1, False)}
| | F | | |  
| | | F | |  
| | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | F | |  = 3 , total_length = 46} , self = 63 , parent = Nothing , duration = 0.505045222000
| | | F | |  , status = Fail , start = 2025-09-03 12:55:54.885433766 UTC , finish =
| | | F | |  2025-09-03 12:55:55.390478988 UTC , thread_cap_info = ("ThreadId 109",
| | | F | |  1, False)}
| | | F | |  
| | | | F |  
| | | |   F  
| | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | F    = 3 , total_length = 76} , self = 70 , parent = Nothing , duration = 1.045167226000
| | | | F    , status = Fail , start = 2025-09-03 12:55:54.913719147 UTC , finish =
| | | | F    2025-09-03 12:55:55.958886373 UTC , thread_cap_info = ("ThreadId 111",
| | | | F    1, False)}
| | | | F    
| | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | F  = 3 , total_length = 76} , self = 65 , parent = Nothing , duration = 0.551018539000
| | | | | F  , status = Fail , start = 2025-09-03 12:55:54.935552018 UTC , finish =
| | | | | F  2025-09-03 12:55:55.486570557 UTC , thread_cap_info = ("ThreadId 112",
| | | | | F  1, False)}
| | | | | F  
F | | | | |  
  | | F | |  
  | F   | |  
S |     | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |     | |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
S |     | |  = 3 , total_length = 46} , self = 67 , parent = Nothing , duration = 0.366381906000
S |     | |  , status = Success , start = 2025-09-03 12:55:55.474768255 UTC , finish
S |     | |  = 2025-09-03 12:55:55.841150161 UTC , thread_cap_info = ("ThreadId 120",
S |     | |  1, False)}
S |     | |  
| |     | F  
| | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E   |    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | E   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | E   |    = 3 , total_length = 46} , self = 69 , parent = Nothing , duration = 0.440367116000
| | E   |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:55:55.493623079
| | E   |    UTC , finish = 2025-09-03 12:55:55.933990195 UTC , thread_cap_info = ("ThreadId
| | E   |    121", 0, False)}
| | E   |    
| F |   |    
S   |   |    
    E   |    
        F    
