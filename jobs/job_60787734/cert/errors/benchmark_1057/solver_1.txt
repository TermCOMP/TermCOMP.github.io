last 774 length 3102
CNF 774 vars 3102 clauses
last 655 length 2791
CNF 655 vars 2791 clauses
last 3820 length 19786
CNF 3820 vars 19786 clauses
last 3726 length 16914
CNF 3726 vars 16914 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2484, clauses: 9191
last 2484 length 9191
CNF 2484 vars 9191 clauses
last 440 length 1755
CNF 440 vars 1755 clauses
last 391 length 1519
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2484, clauses: 9191, status: Satisfied, time: 0.056239158s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6550, clauses: 26994
last 5169 length 21282
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1760, clauses: 6285
CNF 391 vars 1519 clauses
last 7393 length 31267
last 13756 length 58996
last 9490 length 43790
last 704 length 2837
last 1760 length 6285
CNF 5169 vars 21282 clauses
last 627 length 2697
CNF 7393 vars 31267 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5208, clauses: 21435
CNF 704 vars 2837 clauses
CNF 9490 vars 43790 clauses
CNF 13756 vars 58996 clauses
CNF 1760 vars 6285 clauses
CNF 627 vars 2697 clauses
last 5208 length 21435
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8712
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11436, clauses: 44429
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1760, clauses: 6285, status: Satisfied, time: 0.307811039s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6504, clauses: 26818
last 2378 length 8712
last 11436 length 44429
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35005, clauses: 146514
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16696, clauses: 67963
last 387 length 1524
last 346 length 1389
last 6504 length 26818
CNF 2378 vars 8712 clauses
CNF 11436 vars 44429 clauses
last 35005 length 146514
last 16696 length 67963
CNF 346 vars 1389 clauses
CNF 6504 vars 26818 clauses
CNF 387 vars 1524 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8712, status: Unsatisfied, time: 0.473931208s
CNF 35005 vars 146514 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5820
CNF 16696 vars 67963 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11436, clauses: 44429, status: Satisfied, time: 0.503940352s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6504, clauses: 26818, status: Satisfied, time: 0.407308757s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21255
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41936, clauses: 175332
last 1652 length 5820
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4113, clauses: 16246
**************************************************last 5160 length 21255

last 41936 length 175332
last 4113 length 16246
CNF 1652 vars 5820 clauses
CNF 4113 vars 16246 clauses
summary
CNF 5160 vars 21255 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5820, status: Satisfied, time: 0.092521334s
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       DP
SRS with 25 strict rules and 27 weak rules on 12 letters       EDG
SRS with 22 strict rules and 27 weak rules on 12 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 27 weak rules on 11 letters       weights
SRS with 2 strict rules and 27 weak rules on 11 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a] -> [b, c] {- Input 1 -}
  [a, b, b] -> [b, b, a, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a]] -> [[a, b], [b, c], [c, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b]] -> [[a, b], [b, c], [c, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, c]] -> [[a, b], [b, c], [c, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a]] -> [[b, b], [b, c], [c, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b]] -> [[b, b], [b, c], [c, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, c]] -> [[b, b], [b, c], [c, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a]] -> [[c, b], [b, c], [c, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b]] -> [[c, b], [b, c], [c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, c]] -> [[c, b], [b, c], [c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, b], [b, b], [b, c]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, b], [b, b], [b, c]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, b], [b, b], [b, a]] -> [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, b], [b, b], [b, b]] -> [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, b], [b, b], [b, c]] -> [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, a]] |-> [ [ c , a ]# ] {- Many [ DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) , DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) ] -}
  [[c, a]#, [a, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, a]] |-> [ [ c , a ]# ] {- Many [ DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) , DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) ] -}
  [[c, a]#, [a, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[c, a]#, [a, b], [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a]] |-> [ [ a , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a]#, [a, b], [b, b], [b, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 13A 14A 14A - \
        | 13A 14A 14A - |
        | 13A 14A 14A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 13A 13A 14A - \
        | 13A 13A 14A - |
        | 13A 13A 14A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 12A 13A 14A - \
        | 12A 13A 14A - |
        | 12A 13A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [ [ c , a ]# ] {- Many [ DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) , DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) ] -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a]] |-> [[c, a]#] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21255, status: Satisfied, time: 0.058720464s

  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([b, a]#, 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [ [ c , a ]# ] {- Many [ DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) , DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) ] -}
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [ [ c , a ]# ] {- Many [ DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) , DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) ] -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
      [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
      [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
      [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
      [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
      [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
      [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
      [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
      [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
      [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[c, a]#, [a, a]] |-> [ [ c , a ]# ] {- Many [ DP (Top 2) (Semlab 2 (Concon 0 (Input 1))) , DP (Top 0) (Semlab 2 (Concon 0 (Input 0))) ] -}
reason
  ([a, a], 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [[a, a]] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
      [[a, a], [a, b]] ->= [[a, b]] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
      [[a, a], [a, c]] ->= [[a, c]] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
      [[b, a], [a, a]] ->= [[b, a]] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
      [[b, a], [a, b]] ->= [[b, b]] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
      [[b, a], [a, c]] ->= [[b, c]] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
      [[c, a], [a, a]] ->= [[c, a]] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
      [[c, a], [a, b]] ->= [[c, b]] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
      [[c, a], [a, c]] ->= [[c, c]] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
      [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
      [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
      [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
      [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
      [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
      [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
      [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 1))) -}
      [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
      [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
      [[a, a], [a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
      [[a, a], [a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
      [[a, a], [a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
      [[b, a], [a, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
      [[b, a], [a, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
      [[b, a], [a, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 2))) -}
      [[c, a], [a, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
      [[c, a], [a, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
      [[c, a], [a, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, a]] |-> [[b, a]#] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
reason
  ([a, a], 1/1)
  ([b, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Deepee(25/27,12)\EDG(22/27,12)\Matrix{\Arctic}{3}(3/27,11)\Weight(2/27,11)\EDG[(1/27,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/27,10)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 41936 vars 175332 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.573794295000
  min duration 0.041623281000
  total durat. 1.951767306000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.482380195000
  min duration 0.064813307000
  total durat. 2.245114852000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.074466033000
  min duration 1.074466033000
  total durat. 1.074466033000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 94
    , parent = Nothing
    , duration = 1.074466033000
    , status = Success
    , start = 2025-09-03 10:52:33.886106657 UTC
    , finish = 2025-09-03 10:52:34.96057269 UTC
    , thread_cap_info = ("ThreadId 133", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.252530960000
  min duration 0.314114703000
  total durat. 2.346498524000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 279}
    , self = 87
    , parent = Nothing
    , duration = 1.252530960000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:52:33.704759744 UTC
    , finish = 2025-09-03 10:52:34.957290704 UTC
    , thread_cap_info = ("ThreadId 129", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.295635101000
  min duration 0.340411383000
  total durat. 2.573799495000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 27
      , alphabet_size = 12
      , total_length = 279}
    , self = 85
    , parent = Nothing
    , duration = 1.295635101000
    , status = Success
    , start = 2025-09-03 10:52:33.659567431 UTC
    , finish = 2025-09-03 10:52:34.955202532 UTC
    , thread_cap_info = ("ThreadId 128", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.079882295000
  min duration 1.079882295000
  total durat. 1.079882295000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 39}
    , self = 84
    , parent = Nothing
    , duration = 1.079882295000
    , status = Fail
    , start = 2025-09-03 10:52:33.785475064 UTC
    , finish = 2025-09-03 10:52:34.865357359 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
**************************************************
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 11} , self
F                = 52 , parent = Nothing , duration = 0.180383235000 , status = Fail , start
F                = 2025-09-03 10:52:33.032625356 UTC , finish = 2025-09-03 10:52:33.213008591
F                UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 153} , self = 54 , parent = Nothing , duration = 0.186859234000 , status
| F              = Fail , start = 2025-09-03 10:52:33.033876465 UTC , finish = 2025-09-03
| F              10:52:33.220735699 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 153} , self = 55 , parent = Nothing , duration = 0.175093520000 , status
| | F            = Fail , start = 2025-09-03 10:52:33.045717372 UTC , finish = 2025-09-03
| | F            10:52:33.220810892 UTC , thread_cap_info = ("ThreadId 66", 1, False)}
| | F            
| | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S          = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | S          alphabet_size = 5 , total_length = 43} , self = 61 , parent = Nothing ,
| | | S          duration = 0.340411383000 , status = Success , start = 2025-09-03 10:52:33.185627299
| | | S          UTC , finish = 2025-09-03 10:52:33.526038682 UTC , thread_cap_info = ("ThreadId
| | | S          94", 0, False)}
| | | S          
F | | |          
F | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
F | | |          = 22 , num_top_rules = 22 , num_weak_rules = 27 , alphabet_size = 12 ,
F | | |          total_length = 279} , self = 70 , parent = Nothing , duration = 0.490055043000
F | | |          , status = Fail , start = 2025-09-03 10:52:33.213049416 UTC , finish =
F | | |          2025-09-03 10:52:33.703104459 UTC , thread_cap_info = ("ThreadId 98", 2,
F | | |          False)}
F | | |          
| F | |          
|   F |          
| E   |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E   |          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| E   |          = 5 , total_length = 43} , self = 63 , parent = Nothing , duration = 0.314114703000
| E   |          , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:33.220859299
| E   |          UTC , finish = 2025-09-03 10:52:33.534974002 UTC , thread_cap_info = ("ThreadId
| E   |          102", 0, False)}
| E   |          
| | F |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | F |          = 22 , num_top_rules = 22 , num_weak_rules = 27 , alphabet_size = 12 ,
| | F |          total_length = 279} , self = 69 , parent = Nothing , duration = 0.420579506000
| | F |          , status = Fail , start = 2025-09-03 10:52:33.225743894 UTC , finish =
| | F |          2025-09-03 10:52:33.6463234 UTC , thread_cap_info = ("ThreadId 99", 2,
| | F |          False)}
| | F |          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F        = 28} , self = 68 , parent = Nothing , duration = 0.307350983000 , status
| | | | F        = Fail , start = 2025-09-03 10:52:33.240969155 UTC , finish = 2025-09-03
| | | | F        10:52:33.548320138 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 77 , num_strict_rules
| | | | | F      = 50 , num_top_rules = 50 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | F      total_length = 462} , self = 73 , parent = Nothing , duration = 0.573794295000
| | | | | F      , status = Fail , start = 2025-09-03 10:52:33.291696416 UTC , finish =
| | | | | F      2025-09-03 10:52:33.865490711 UTC , thread_cap_info = ("ThreadId 110",
| | | | | F      2, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 77 , num_strict_rules
| | | | | | F    = 50 , num_top_rules = 50 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | F    total_length = 462} , self = 72 , parent = Nothing , duration = 0.482380195000
| | | | | | F    , status = Fail , start = 2025-09-03 10:52:33.30592833 UTC , finish = 2025-09-03
| | | | | | F    10:52:33.788308525 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | | | | F    
| | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | S  = 4 , total_length = 28} , self = 75 , parent = Nothing , duration = 0.937753011000
| | | | | | | S  , status = Success , start = 2025-09-03 10:52:33.327947589 UTC , finish
| | | | | | | S  = 2025-09-03 10:52:34.2657006 UTC , thread_cap_info = ("ThreadId 112",
| | | | | | | S  1, False)}
| | | | | | | S  
| | | S | | | |  
| E |   | | | |  
| F |   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F |   | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F |   | | | |  = 39} , self = 71 , parent = Nothing , duration = 0.245138055000 , status
| F |   | | | |  = Fail , start = 2025-09-03 10:52:33.535267475 UTC , finish = 2025-09-03
| F |   | | | |  10:52:33.78040553 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| F |   | | | |  
| | | F | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F | | | |  = 39} , self = 74 , parent = Nothing , duration = 0.327691173000 , status
| | | F | | | |  = Fail , start = 2025-09-03 10:52:33.540750532 UTC , finish = 2025-09-03
| | | F | | | |  10:52:33.868441705 UTC , thread_cap_info = ("ThreadId 119", 0, False)}
| | | F | | | |  
| | | | F | | |  
| | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | E | | |  = 4 , total_length = 28} , self = 77 , parent = Nothing , duration = 0.779852861000
| | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:33.548342864
| | | | E | | |  UTC , finish = 2025-09-03 10:52:34.328195725 UTC , thread_cap_info = ("ThreadId
| | | | E | | |  121", 1, False)}
| | | | E | | |  
| | F | | | | |  
| | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | |  = 49 , num_strict_rules = 22 , num_top_rules = 22 , num_weak_rules = 27
| | S | | | | |  , alphabet_size = 12 , total_length = 279} , self = 85 , parent = Nothing
| | S | | | | |  , duration = 1.295635101000 , status = Success , start = 2025-09-03 10:52:33.659567431
| | S | | | | |  UTC , finish = 2025-09-03 10:52:34.955202532 UTC , thread_cap_info = ("ThreadId
| | S | | | | |  128", 0, False)}
| | S | | | | |  
F | | | | | | |  
E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 49
E | | | | | | |  , num_strict_rules = 22 , num_top_rules = 22 , num_weak_rules = 27 , alphabet_size
E | | | | | | |  = 12 , total_length = 279} , self = 87 , parent = Nothing , duration =
E | | | | | | |  1.252530960000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | | | | |  10:52:33.704759744 UTC , finish = 2025-09-03 10:52:34.957290704 UTC , thread_cap_info
E | | | | | | |  = ("ThreadId 129", 2, False)}
E | | | | | | |  
| F | | | | | |  
| F | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F | | | | | |  = 5 , total_length = 39} , self = 84 , parent = Nothing , duration = 1.079882295000
| F | | | | | |  , status = Fail , start = 2025-09-03 10:52:33.785475064 UTC , finish =
| F | | | | | |  2025-09-03 10:52:34.865357359 UTC , thread_cap_info = ("ThreadId 130",
| F | | | | | |  0, False)}
| F | | | | | |  
| | | | | | F |  
| | | | | F   |  
| | | F |     |  
| | | S |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | S |     |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | S |     |  = 5 , total_length = 39} , self = 94 , parent = Nothing , duration = 1.074466033000
| | | S |     |  , status = Success , start = 2025-09-03 10:52:33.886106657 UTC , finish
| | | S |     |  = 2025-09-03 10:52:34.96057269 UTC , thread_cap_info = ("ThreadId 133",
| | | S |     |  0, False)}
| | | S |     |  
| | | | |     S  
| | | | E        
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F        = 24} , self = 82 , parent = Nothing , duration = 0.335925496000 , status
| | | | F        = Fail , start = 2025-09-03 10:52:34.330557107 UTC , finish = 2025-09-03
| | | | F        10:52:34.666482603 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | F      = 24} , self = 83 , parent = Nothing , duration = 0.455440454000 , status
| | | | | F      = Fail , start = 2025-09-03 10:52:34.330560953 UTC , finish = 2025-09-03
| | | | | F      10:52:34.786001407 UTC , thread_cap_info = ("ThreadId 140", 1, False)}
| | | | | F      
| | | | F |      
| | | |   F      
| F | |          
|   S |          
E     |          
      S          
