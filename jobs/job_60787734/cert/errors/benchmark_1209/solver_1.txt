last 1892 length 7979
last 3831 length 15604
CNF 3831 vars 15604 clauses
last 2336 length 9758
CNF 1892 vars 7979 clauses
CNF 2336 vars 9758 clauses
last 490 length 1937
last 2765 length 12305
last 406 length 1566
last 323 length 1263
last 348 length 1377
last 3624 length 17090
last 4901 length 20370
CNF 490 vars 1937 clauses
CNF 406 vars 1566 clauses
CNF 2765 vars 12305 clauses
CNF 323 vars 1263 clauses
CNF 3624 vars 17090 clauses
CNF 348 vars 1377 clauses
CNF 4901 vars 20370 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8726, clauses: 33336
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1760, clauses: 6303
last 8726 length 33336
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5208, clauses: 21441
last 1760 length 6303
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1745, clauses: 6120
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5793, clauses: 21269
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5746, clauses: 23725
CNF 8726 vars 33336 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21215, clauses: 88663
last 5208 length 21441
CNF 1760 vars 6303 clauses
last 1745 length 6120
last 5793 length 21269
last 5746 length 23725
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28379, clauses: 118741
last 21215 length 88663
CNF 5208 vars 21441 clauses
CNF 1745 vars 6120 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1760, clauses: 6303, status: Satisfied, time: 0.479440082s
CNF 5793 vars 21269 clauses
last 28379 length 118741
CNF 5746 vars 23725 clauses
**************************************************CNF 21215 vars 88663 clauses

Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1745, clauses: 6120, status: Unsatisfied, time: 0.236558933s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8726, clauses: 33336, status: Satisfied, time: 0.585258756s
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [c, b] {- Input 1 -}
  [a, c, c] -> [c, c, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [] {- Mirror (Input 0) -}
  [b, a] -> [b, c] {- Mirror (Input 1) -}
  [c, c, a] -> [a, a, c, c] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [b, a] -> [b] {- Mirror (Input 0) -}
  [c, a] -> [c] {- Mirror (Input 0) -}
  [b, a] -> [b, c] {- Mirror (Input 1) -}
  [c, c, a] -> [a, a, c, c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, c] -> [c] {- Input 0 -}
  [a, b] -> [c, b] {- Input 1 -}
  [a, c, c] -> [c, c, a, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [a#, c, c] |-> [a#] {- DP (Top 3) (Input 2) -}
  [a#, c, c] |-> [a#, a] {- DP (Top 2) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [a#] {- DP (Top 3) (Input 2) -}
  [a#, c, c] |-> [a#, a] {- DP (Top 2) (Input 2) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 2A 2A - \
        | 1A 2A 2A - |
        | 1A 2A 2A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b] ->= [c, b] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee\EDG(2/5,4)\Matrix{\Arctic}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.354444251000
  min duration Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5746, clauses: 23725, status: Satisfied, time: 0.276028166s
0.124248424000
  total durat. 1.044036370000
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
F                    = 55 , parent = Nothing , duration = 0.202014092000 , status = Fail , start
F                    = 2025-09-03 11:16:41.347052169 UTC , finish = 2025-09-03 11:16:41.549066261
F                    UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| F                  = 13 , num_top_rules = 13 , num_weak_rules = 19 , alphabet_size = 11 ,
| F                  total_length = 190} , self = 62 , parent = Nothing , duration = 0.354444251000
| F                  , status = Fail , start = 2025-09-03 11:16:41.360235864 UTC , finish =
| F                  2025-09-03 11:16:41.714680115 UTC , thread_cap_info = ("ThreadId 70", 1,
| F                  False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | F                = 13 , num_top_rules = 13 , num_weak_rules = 19 , alphabet_size = 11 ,
| | F                total_length = 190} , self = 54 , parent = Nothing , duration = 0.182186589000
| | F                , status = Fail , start = 2025-09-03 11:16:41.362856199 UTC , finish =
| | F                2025-09-03 11:16:41.545042788 UTC , thread_cap_info = ("ThreadId 71", 1,
| | F                False)}
| | F                
| | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | E              = 12} , self = 71 , parent = Nothing , duration = 0.910922850000 , status
| | | E              = Except "AsyncCancelled" , start = 2025-09-03 11:16:41.363611594 UTC ,
| | | E              finish = 2025-09-03 11:16:42.274534444 UTC , thread_cap_info = ("ThreadId
| | | E              74", 2, False)}
| | | E              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | F            = 19 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 111} , self = 58 , parent = Nothing , duration = 0.182171912000 , status
| | | | F            = Fail , start = 2025-09-03 11:16:41.401852107 UTC , finish = 2025-09-03
| | | | F            11:16:41.584024019 UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | F          = 19 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F          = 111} , self = 56 , parent = Nothing , duration = 0.127327009000 , status
| | | | | F          = Fail , start = 2025-09-03 11:16:41.421809007 UTC , finish = 2025-09-03
| | | | | F          11:16:41.549136016 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | F        = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| | | | | | F        = 111} , self = 65 , parent = Nothing , duration = 0.238419983000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:16:41.485194961 UTC , finish = 2025-09-03
| | | | | | F        11:16:41.723614944 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| | | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| | | | | | | F      = 111} , self = 64 , parent = Nothing , duration = 0.219897376000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:16:41.50202006 UTC , finish = 2025-09-03
| | | | | | | F      11:16:41.721917436 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | | F    = 29} , self = 59 , parent = Nothing , duration = 0.144751800000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 11:16:41.53233776 UTC , finish = 2025-09-03
| | | | | | | | F    11:16:41.67708956 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | | | F  = 29} , self = 60 , parent = Nothing , duration = 0.158555018000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 11:16:41.537334232 UTC , finish = 2025-09-03
| | | | | | | | | F  11:16:41.69588925 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | | | | | F  
| | F | | | | | | |  
F |   | | | | | | |  
  |   | | F | | | |  
F |   | |   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
F |   | |   | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F |   | |   | | | |  = 24} , self = 61 , parent = Nothing , duration = 0.124248424000 , status
F |   | |   | | | |  = Fail , start = 2025-09-03 11:16:41.581851015 UTC , finish = 2025-09-03
F |   | |   | | | |  11:16:41.706099439 UTC , thread_cap_info = ("ThreadId 104", 0, False)}
F |   | |   | | | |  
| |   | F   | | | |  
| | F |     | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F |     | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F |     | | | |  = 24} , self = 63 , parent = Nothing , duration = 0.136962226000 , status
| | F |     | | | |  = Fail , start = 2025-09-03 11:16:41.584897126 UTC , finish = 2025-09-03
| | F |     | | | |  11:16:41.721859352 UTC , thread_cap_info = ("ThreadId 105", 0, False)}
| | F |     | | | |  
| | | |     | | F |  
| | | | S   | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   | |   |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | S   | |   |  = 4 , total_length = 29} , self = 66 , parent = Nothing , duration = 0.580112594000
| | | | S   | |   |  , status = Success , start = 2025-09-03 11:16:41.679975491 UTC , finish
| | | | S   | |   |  = 2025-09-03 11:16:42.260088085 UTC , thread_cap_info = ("ThreadId 115",
| | | | S   | |   |  2, False)}
| | | | S   | |   |  
| | | | |   | |   F  
| | | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | E | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | E | |      = 4 , total_length = 29} , self = 68 , parent = Nothing , duration = 0.561259375000
| | | | | E | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:16:41.70139686
| | | | | E | |      UTC , finish = 2025-09-03 11:16:42.262656235 UTC , thread_cap_info = ("ThreadId
| | | | | E | |      116", 2, False)}
| | | | | E | |      
F | | | | | | |      
  F | | | | | |      
    F | | | | |      
      | | | | F      
      | | | F        
      | S |          
      |   E          
      E              
