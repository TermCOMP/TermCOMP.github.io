last 9368 length 66274
CNF 9368 vars 66274 clauses
last 9387 length 68152
CNF 9387 vars 68152 clauses
last 7354 length 51954
CNF 7354 vars 51954 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4436, clauses: 16443
last 4436 length 16443
CNF 4436 vars 16443 clauses
last 4747 length 22882
CNF 4747 vars 22882 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4436, clauses: 16443, status: Satisfied, time: 0.235737893s
last 5297 length 27638
CNF 5297 vars 27638 clauses
last 6156 length 36999
CNF 6156 vars 36999 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2484, clauses: 10481
last 2484 length 10481
CNF 2484 vars 10481 clauses
last 6494 length 44303
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2074, clauses: 7879
last 2074 length 7879
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2484, clauses: 10481, status: Unsatisfied, time: 0.163914449s
CNF 6494 vars 44303 clauses
CNF 2074 vars 7879 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8291, clauses: 34909
last 8291 length 34909
CNF 8291 vars 34909 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2074, clauses: 7879, status: Unsatisfied, time: 0.172888357s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5041, clauses: 21562
last 5041 length 21562
CNF 5041 vars 21562 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7617, clauses: 32063
last 7617 length 32063
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4557, clauses: 19496
last 4557 length 19496
CNF 4557 vars 19496 clauses
CNF 7617 vars 32063 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4557, clauses: 19496, status: Unsatisfied, time: 0.938896535s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5041, clauses: 21562, status: Unsatisfied, time: 1.396116341s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3472, clauses: 13786
last 3472 length 13786
CNF 3472 vars 13786 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4126, clauses: 18322
last 4126 length 18322
CNF 4126 vars 18322 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6059, clauses: 25497
last 6059 length 25497
CNF 6059 vars 25497 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8291, clauses: 34909, status: Unsatisfied, time: 2.394985361s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7617, clauses: 32063, status: Unsatisfied, time: 1.907728159s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6059, clauses: 25497, status: Satisfied, time: 0.410759505s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3472, clauses: 13786, status: Unsatisfied, time: 0.896232068s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4333, clauses: 16081
last 4333 length 16081
CNF 4333 vars 16081 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4126, clauses: 18322, status: Unsatisfied, time: 1.139008867s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16991, clauses: 71739
last 16991 length 71739
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6487, clauses: 25390
last 6487 length 25390
CNF 16991 vars 71739 clauses
CNF 6487 vars 25390 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13114, clauses: 59513
last 13114 length 59513
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7709, clauses: 33064
last 7709 length 33064
CNF 7709 vars 33064 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14001, clauses: 63516
last 14001 length 63516
CNF 13114 vars 59513 clauses
CNF 14001 vars 63516 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4333, clauses: 16081, status: Satisfied, time: 1.815526437s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       DP
SRS with 34 strict rules and 4 weak rules on 6 letters       EDG
SRS with 4 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 4 weak rules on 5 letters       EDG
SRS with 3 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, b, a, a, b, a, b, a, b, a] -> [ a , a , b , a , b , a , b , a , a , b , b , a , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, b] ] {- DP (Top 12) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 8) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, b] ] {- DP (Top 12) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 8) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 6A 8A 9A - \
        | 6A 8A 9A - |
        | 6A 8A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 7A 7A 7A - \
        | 7A 7A 7A - |
        | 7A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}(4,4)\Deepee(34/4,6)\EDG(4/4,5)\Matrix{\Arctic}{3}\EDG(3/4,5)\Matrix{\Arctic}{3}(0/4,4)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.249532561000
  min duration 0.603243454000
  total durat. 2.474827336000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 60}
    , self = 71
    , parent = Nothing
    , duration = 1.249532561000
    , status = Fail
    , start = 2025-09-03 12:16:12.408232376 UTC
    , finish = 2025-09-03 12:16:13.657764937 UTC
    , thread_cap_info = ("ThreadId 97", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.060148229000
  min duration 3.019491781000
  total durat. 6.079640010000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 361}
    , self = 75
    , parent = Nothing
    , duration = 3.019491781000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:16:12.189027403 UTC
    , finish = 2025-09-03 12:16:15.208519184 UTC
    , thread_cap_info = ("ThreadId 79", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 171}
    , self = 87
    , parent = Nothing
    , duration = 3.060148229000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:16:13.168504123 UTC
    , finish = 2025-09-03 12:16:16.228652352 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.981943948000
  min duration 0.515888091000
  total durat. 2.770445499000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.059746477000
  min duration 3.015709313000
  total durat. 6.075455790000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 361}
    , self = 76
    , parent = Nothing
    , duration = 3.015709313000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:16:12.209221475 UTC
    , finish = 2025-09-03 12:16:15.224930788 UTC
    , thread_cap_info = ("ThreadId 80", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 171}
    , self = 88
    , parent = Nothing
    , duration = 3.059746477000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:16:13.18835904 UTC
    , finish = 2025-09-03 12:16:16.248105517 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.687500034000
  min duration 2.295638175000
  total durat. 4.983138209000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 60}
    , self = 78
    , parent = Nothing
    , duration = 2.295638175000
    , status = Fail
    , start = 2025-09-03 12:16:13.711453637 UTC
    , finish = 2025-09-03 12:16:16.007091812 UTC
    , thread_cap_info = ("ThreadId 127", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 101}
    , self = 77
    , parent = Nothing
    , duration = 2.687500034000
    , status = Fail
    , start = 2025-09-03 12:16:13.319329424 UTC
    , finish = 2025-09-03 12:16:16.006829458 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.002454545000
  min duration 0.784220341000
  total durat. 2.786674886000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 171}
    , self = 92
    , parent = Nothing
    , duration = 2.002454545000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:16:16.27305342 UTC
    , finish = 2025-09-03 12:16:18.275507965 UTC
    , thread_cap_info = ("ThreadId 153", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.588746203000
  min duration 1.258258060000
  total durat. 2.847004263000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 60}
    , self = 73
    , parent = Nothing
    , duration = 1.258258060000
    , status = Fail
    , start = 2025-09-03 12:16:13.780525373 UTC
    , finish = 2025-09-03 12:16:15.038783433 UTC
    , thread_cap_info = ("ThreadId 128", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 101}
    , self = 74
    , parent = Nothing
    , duration = 1.588746203000
    , status = Fail
    , start = 2025-09-03 12:16:13.611827941 UTC
    , finish = 2025-09-03 12:16:15.200574144 UTC
    , thread_cap_info = ("ThreadId 125", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.979439777000
  min duration 0.330368038000
  total durat. 3.148807038000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 171}
    , self = 90
    , parent = Nothing
    , duration = 1.979439777000
    , status = Success
    , start = 2025-09-03 12:16:16.248129034 UTC
    , finish = 2025-09-03 12:16:18.227568811 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.397710686000
  min duration 1.065183951000
  total durat. 2.462894637000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 60}
    , self = 86
    , parent = Nothing
    , duration = 1.065183951000
    , status = Fail
    , start = 2025-09-03 12:16:15.04812259 UTC
    , finish = 2025-09-03 12:16:16.113306541 UTC
    , thread_cap_info = ("ThreadId 132", 0, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 101}
    , self = 89
    , parent = Nothing
    , duration = 1.397710686000
    , status = Fail
    , start = 2025-09-03 12:16:15.217390323 UTC
    , finish = 2025-09-03 12:16:16.615101009 UTC
    , thread_cap_info = ("ThreadId 135", 0, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
F                    = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 26} , self
F                    = 49 , parent = Nothing , duration = 0.217243879000 , status = Fail , start
F                    = 2025-09-03 12:16:12.143781564 UTC , finish = 2025-09-03 12:16:12.361025443
F                    UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                  = 112} , self = 57 , parent = Nothing , duration = 0.603243454000 , status
| F                  = Fail , start = 2025-09-03 12:16:12.14887981 UTC , finish = 2025-09-03
| F                  12:16:12.752123264 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                = 112} , self = 59 , parent = Nothing , duration = 0.672576534000 , status
| | F                = Fail , start = 2025-09-03 12:16:12.168532491 UTC , finish = 2025-09-03
| | F                12:16:12.841109025 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | F                
| | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | E              = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E              = 361} , self = 75 , parent = Nothing , duration = 3.019491781000 , status
| | | E              = Except "<<timeout>>" , start = 2025-09-03 12:16:12.189027403 UTC , finish
| | | E              = 2025-09-03 12:16:15.208519184 UTC , thread_cap_info = ("ThreadId 79",
| | | E              1, False)}
| | | E              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | F            = 185} , self = 58 , parent = Nothing , duration = 0.600036926000 , status
| | | | F            = Fail , start = 2025-09-03 12:16:12.190179916 UTC , finish = 2025-09-03
| | | | F            12:16:12.790216842 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | F            
| | | | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | E          = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | E          = 185} , self = 63 , parent = Nothing , duration = 0.958897819000 , status
| | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:16:12.209214634 UTC ,
| | | | | E          finish = 2025-09-03 12:16:13.168112453 UTC , thread_cap_info = ("ThreadId
| | | | | E          86", 3, False)}
| | | | | E          
| | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | E        = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | E        = 361} , self = 76 , parent = Nothing , duration = 3.015709313000 , status
| | | | | | E        = Except "<<timeout>>" , start = 2025-09-03 12:16:12.209221475 UTC , finish
| | | | | | E        = 2025-09-03 12:16:15.224930788 UTC , thread_cap_info = ("ThreadId 80",
| | | | | | E        1, False)}
| | | | | | E        
F | | | | | |        
F | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
F | | | | | |        = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
F | | | | | |        = 60} , self = 71 , parent = Nothing , duration = 1.249532561000 , status
F | | | | | |        = Fail , start = 2025-09-03 12:16:12.408232376 UTC , finish = 2025-09-03
F | | | | | |        12:16:13.657764937 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
F | | | | | |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | F      = 60} , self = 69 , parent = Nothing , duration = 0.981943948000 , status
| | | | | | | F      = Fail , start = 2025-09-03 12:16:12.440507416 UTC , finish = 2025-09-03
| | | | | | | F      12:16:13.422451364 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | F    = 101} , self = 68 , parent = Nothing , duration = 0.622051321000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 12:16:12.60868659 UTC , finish = 2025-09-03
| | | | | | | | F    12:16:13.230737911 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | F  = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | | F  = 101} , self = 62 , parent = Nothing , duration = 0.515888091000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 12:16:12.652221655 UTC , finish = 2025-09-03
| | | | | | | | | F  12:16:13.168109746 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | | | | | | | | F  
| F | | | | | | | |  
|   | | F | | | | |  
| S | |   | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |   | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |   | | | | |  = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| S | |   | | | | |  = 5 , total_length = 185} , self = 60 , parent = Nothing , duration = 0.330368038000
| S | |   | | | | |  , status = Success , start = 2025-09-03 12:16:12.808679503 UTC , finish
| S | |   | | | | |  = 2025-09-03 12:16:13.139047541 UTC , thread_cap_info = ("ThreadId 106",
| S | |   | | | | |  3, False)}
| S | |   | | | | |  
| | F |   | | | | |  
| S   |   | | | | |  
|     |   | | | | F  
|     |   E | | |    
| E   |     | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   |     | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |     | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| E   |     | | |    = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| E   |     | | |    = 171} , self = 87 , parent = Nothing , duration = 3.060148229000 , status
| E   |     | | |    = Except "<<timeout>>" , start = 2025-09-03 12:16:13.168504123 UTC , finish
| E   |     | | |    = 2025-09-03 12:16:16.228652352 UTC , thread_cap_info = ("ThreadId 115",
| E   |     | | |    3, False)}
| E   |     | | |    
| | E |     | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |     | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |     | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | E |     | | |    = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | E |     | | |    = 171} , self = 88 , parent = Nothing , duration = 3.059746477000 , status
| | E |     | | |    = Except "<<timeout>>" , start = 2025-09-03 12:16:13.18835904 UTC , finish
| | E |     | | |    = 2025-09-03 12:16:16.248105517 UTC , thread_cap_info = ("ThreadId 116",
| | E |     | | |    3, False)}
| | E |     | | |    
| | | | F   | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F   | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F   | | |    = 5 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | | | F   | | |    = 3 , total_length = 101} , self = 70 , parent = Nothing , duration = 0.351578232000
| | | | F   | | |    , status = Fail , start = 2025-09-03 12:16:13.228738083 UTC , finish =
| | | | F   | | |    2025-09-03 12:16:13.580316315 UTC , thread_cap_info = ("ThreadId 118",
| | | | F   | | |    0, False)}
| | | | F   | | |    
| | | | |   | | F    
| | | | | F | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | F | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | | | | F | |      = 3 , total_length = 101} , self = 77 , parent = Nothing , duration = 2.687500034000
| | | | | F | |      , status = Fail , start = 2025-09-03 12:16:13.319329424 UTC , finish =
| | | | | F | |      2025-09-03 12:16:16.006829458 UTC , thread_cap_info = ("ThreadId 120",
| | | | | F | |      0, False)}
| | | | | F | |      
| | | | | | | F      
| | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | | F      = 3 , total_length = 60} , self = 72 , parent = Nothing , duration = 0.285187235000
| | | | | | | F      , status = Fail , start = 2025-09-03 12:16:13.468116624 UTC , finish =
| | | | | | | F      2025-09-03 12:16:13.753303859 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | F      0, False)}
| | | | | | | F      
| | | | F | | |      
| | | | F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | F | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | | | F | | |      = 3 , total_length = 101} , self = 74 , parent = Nothing , duration = 1.588746203000
| | | | F | | |      , status = Fail , start = 2025-09-03 12:16:13.611827941 UTC , finish =
| | | | F | | |      2025-09-03 12:16:15.200574144 UTC , thread_cap_info = ("ThreadId 125",
| | | | F | | |      0, False)}
| | | | F | | |      
F | | | | | | |      
F | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F | | | | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
F | | | | | | |      = 3 , total_length = 60} , self = 78 , parent = Nothing , duration = 2.295638175000
F | | | | | | |      , status = Fail , start = 2025-09-03 12:16:13.711453637 UTC , finish =
F | | | | | | |      2025-09-03 12:16:16.007091812 UTC , thread_cap_info = ("ThreadId 127",
F | | | | | | |      0, False)}
F | | | | | | |      
| | | | | | | F      
| | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | | F      = 3 , total_length = 60} , self = 73 , parent = Nothing , duration = 1.258258060000
| | | | | | | F      , status = Fail , start = 2025-09-03 12:16:13.780525373 UTC , finish =
| | | | | | | F      2025-09-03 12:16:15.038783433 UTC , thread_cap_info = ("ThreadId 128",
| | | | | | | F      0, False)}
| | | | | | | F      
| | | | | | | F      
| | | | | | | F      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| | | | | | | F      = 3 , total_length = 60} , self = 86 , parent = Nothing , duration = 1.065183951000
| | | | | | | F      , status = Fail , start = 2025-09-03 12:16:15.04812259 UTC , finish = 2025-09-03
| | | | | | | F      12:16:16.113306541 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| | | | | | | F      
| | | | F | | |      
| | | E   | | |      
| | | F   | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   | | |      = 5 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | | F   | | |      = 3 , total_length = 101} , self = 89 , parent = Nothing , duration = 1.397710686000
| | | F   | | |      , status = Fail , start = 2025-09-03 12:16:15.217390323 UTC , finish =
| | | F   | | |      2025-09-03 12:16:16.615101009 UTC , thread_cap_info = ("ThreadId 135",
| | | F   | | |      0, False)}
| | | F   | | |      
| | | |   | E |      
| | | | S |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |   |      = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
| | | | S |   |      , alphabet_size = 6 , total_length = 361} , self = 79 , parent = Nothing
| | | | S |   |      , duration = 0.838999223000 , status = Success , start = 2025-09-03 12:16:15.227495146
| | | | S |   |      UTC , finish = 2025-09-03 12:16:16.066494369 UTC , thread_cap_info = ("ThreadId
| | | | S |   |      137", 1, False)}
| | | | S |   |      
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | | | | E |      , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size
| | | | | | E |      = 6 , total_length = 361} , self = 81 , parent = Nothing , duration = 0.784220341000
| | | | | | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:16:15.305070929
| | | | | | E |      UTC , finish = 2025-09-03 12:16:16.08929127 UTC , thread_cap_info = ("ThreadId
| | | | | | E |      138", 1, False)}
| | | | | | E |      
| | | | | F | |      
F | | | |   | |      
  | | | S   | |      
  | | |     E |      
  | | |       F      
  E | |              
    E |              
S     |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S     |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |              = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
S     |              = 5 , total_length = 171} , self = 90 , parent = Nothing , duration = 1.979439777000
S     |              , status = Success , start = 2025-09-03 12:16:16.248129034 UTC , finish
S     |              = 2025-09-03 12:16:18.227568811 UTC , thread_cap_info = ("ThreadId 152",
S     |              3, False)}
S     |              
| E   |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E   |              , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| E   |              = 5 , total_length = 171} , self = 92 , parent = Nothing , duration = 2.002454545000
| E   |              , status = Except "AsyncCancelled" , start = 2025-09-03 12:16:16.27305342
| E   |              UTC , finish = 2025-09-03 12:16:18.275507965 UTC , thread_cap_info = ("ThreadId
| E   |              153", 3, False)}
| E   |              
| |   F              
S |                  
  E                  
