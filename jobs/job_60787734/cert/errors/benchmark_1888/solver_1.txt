last 479 length 1947
CNF 479 vars 1947 clauses
last 530 length 2205
CNF 530 vars 2205 clauses
last 977 length 4155
CNF 977 vars 4155 clauses
last 1008 length 4574
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2614, clauses: 9214
CNF 1008 vars 4574 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4358, clauses: 15912
last 2614 length 9214
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8594, clauses: 35469
last 4358 length 15912
last 16116 length 71622
last 18281 length 88735
last 8594 length 35469
CNF 2614 vars 9214 clauses
CNF 4358 vars 15912 clauses
CNF 16116 vars 71622 clauses
CNF 8594 vars 35469 clauses
CNF 18281 vars 88735 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11075, clauses: 45696
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2614, clauses: 9214, status: Satisfied, time: 0.323463223s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4358, clauses: 15912, status: Satisfied, time: 0.224708065s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8594, clauses: 35469, status: Satisfied, time: 0.401728983s
last 18634 length 90177
last 303 length 1221
last 374 length 1547
CNF 303 vars 1221 clauses
CNF 374 vars 1547 clauses
CNF 18634 vars 90177 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1956, clauses: 6818
last 1956 length 6818
last 893 length 3785
CNF 1956 vars 6818 clauses
CNF 893 vars 3785 clauses
last 927 length 4230
last 14328 length 60893
CNF 927 vars 4230 clauses
last 16378 length 72756
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1956, clauses: 6818, status: Unsatisfied, time: 0.152858142s
CNF 14328 vars 60893 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6395, clauses: 26327
last 6395 length 26327
last 13089 length 57066
CNF 16378 vars 72756 clauses
CNF 6395 vars 26327 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4054, clauses: 14743
last 4054 length 14743
CNF 4054 vars 14743 clauses
CNF 13089 vars 57066 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3896, clauses: 15318
last 3896 length 15318
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6395, clauses: 26327, status: Satisfied, time: 0.275449123s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10445, clauses: 43036
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4054, clauses: 14743, status: Satisfied, time: 0.127912345s
CNF 3896 vars 15318 clauses
last 10445 length 43036
CNF 10445 vars 43036 clauses
**************************************************
summary
**************************************************
SRS with 6 rules on 5 letters       mirror
SRS with 6 rules on 5 letters       DP
SRS with 10 strict rules and 6 weak rules on 9 letters       weights
SRS with 4 strict rules and 6 weak rules on 7 letters       EDG
2 sub-proofs
  1 SRS with 2 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 6 weak rules on 6 letters       EDG
  SRS with 1 strict rules and 6 weak rules on 6 letters       Usable
  SRS with 1 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 5 weak rules on 4 letters       weights
  SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

  2 SRS with 2 strict rules and 6 weak rules on 6 letters       Usable
  SRS with 2 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [f] -> [n, c, n, a] {- Input 0 -}
  [c, f] -> [f, n, a, c] {- Input 1 -}
  [n, a] -> [c] {- Input 2 -}
  [c, c] -> [c] {- Input 3 -}
  [n, s] -> [f, s, s] {- Input 4 -}
  [n, f] -> [f, n] {- Input 5 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [f] -> [a, n, c, n] {- Mirror (Input 0) -}
  [f, c] -> [c, a, n, f] {- Mirror (Input 1) -}
  [a, n] -> [c] {- Mirror (Input 2) -}
  [c, c] -> [c] {- Mirror (Input 3) -}
  [s, n] -> [s, s, f] {- Mirror (Input 4) -}
  [f, n] -> [n, f] {- Mirror (Input 5) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
  [s#, n] |-> [s#, s, f] {- DP (Top 0) (Mirror (Input 4)) -}
  [s#, n] |-> [s#, f] {- DP (Top 1) (Mirror (Input 4)) -}
  [s#, n] |-> [f#] {- DP (Top 2) (Mirror (Input 4)) -}
  [a#, n] |-> [c#] {- DP (Top 0) (Mirror (Input 2)) -}
  [f#] |-> [a#, n, c, n] {- DP (Top 0) (Mirror (Input 0)) -}
  [f#] |-> [c#, n] {- DP (Top 2) (Mirror (Input 0)) -}
  [f#, n] |-> [f#] {- DP (Top 1) (Mirror (Input 5)) -}
  [f#, c] |-> [a#, n, f] {- DP (Top 1) (Mirror (Input 1)) -}
  [f#, c] |-> [f#] {- DP (Top 3) (Mirror (Input 1)) -}
  [f#, c] |-> [c#, a, n, f] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  (s, 0/1)
  (n, 0/1)
  (a, 0/1)
  (f, 0/1)
  (c, 0/1)
  (s#, 3/1)
  (a#, 1/1)
  (f#, 2/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
  [s#, n] |-> [s#, s, f] {- DP (Top 0) (Mirror (Input 4)) -}
  [s#, n] |-> [s#, f] {- DP (Top 1) (Mirror (Input 4)) -}
  [f#, n] |-> [f#] {- DP (Top 1) (Mirror (Input 5)) -}
  [f#, c] |-> [f#] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, n] |-> [s#, s, f] {- DP (Top 0) (Mirror (Input 4)) -}
  [s#, n] |-> [s#, f] {- DP (Top 1) (Mirror (Input 4)) -}
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  ( s
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( n
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( f
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( s#
  , Wk  / 6A 7A 8A - \
        | 6A 7A 8A - |
        | 6A 7A 8A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [s#, n] |-> [s#, f] {- DP (Top 1) (Mirror (Input 4)) -}
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, n] |-> [s#, f] {- DP (Top 1) (Mirror (Input 4)) -}
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  remove un-usable
    SRS
      [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
   property Termination
has value Just True
for SRS
  [s#, n] |-> [s#, f] {- DP (Top 1) (Mirror (Input 4)) -}
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  ( n
  , Wk  / 0A -  -  \
        | 2A 1A 2A |
        \ -  -  0A / )
  ( a
  , Wk  / 0A - -  \
        | 1A - -  |
        \ -  - 0A / )
  ( f
  , Wk  / 0A -  -   \
        | 1A 0A -2A |
        \ -  -  0A  / )
  ( c
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( s#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  (n, 0/1)
  (a, 0/1)
  (f, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [f#, n] |-> [f#] {- DP (Top 1) (Mirror (Input 5)) -}
  [f#, c] |-> [f#] {- DP (Top 3) (Mirror (Input 1)) -}
  [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
  [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
  [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
  [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
  [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
reason
  remove un-usable
    SRS
      [f] ->= [a, n, c, n] {- DP Nontop (Mirror (Input 0)) -}
      [f, c] ->= [c, a, n, f] {- DP Nontop (Mirror (Input 1)) -}
      [a, n] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
      [c, c] ->= [c] {- DP Nontop (Mirror (Input 3)) -}
      [s, n] ->= [s, s, f] {- DP Nontop (Mirror (Input 4)) -}
      [f, n] ->= [n, f] {- DP Nontop (Mirror (Input 5)) -}
   property Termination
has value Just True
for SRS
  [f#, n] |-> [f#] {- DP (Top 1) (Mirror (Input 5)) -}
  [f#, c] |-> [f#] {- DP (Top 3) (Mirror (Input 1)) -}
reason
  (n, 1/1)
  (c, 1/1)
  (f#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(6,5)\Deepee(10/6,9)\Weight(4/6,7)\EDG[(2/6,6)\Matrix{\Arctic}{3}\EDG(1/6,6)\Usable(1/5,5)\Matrix{\ArcticBZ}{3}(0/5,4)\Weight(0/4,4)\EDG[],(2/6,6)\Usable(2,3)\Weight(0,0)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.618405269000
  min duration 0.012661067000
  total durat. 3.932578971000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 110
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 100
      , alphabet_size = 20
      , total_length = 700}
    , self = 81
    , parent = Nothing
    , duration = 1.145279601000
    , status = Fail
    , start = 2025-09-03 13:30:41.105135042 UTC
    , finish = 2025-09-03 13:30:42.250414643 UTC
    , thread_cap_info = ("ThreadId 112", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 118
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 115
      , alphabet_size = 23
      , total_length = 735}
    , self = 83
    , parent = Nothing
    , duration = 1.618405269000
    , status = Fail
    , start = 2025-09-03 13:30:40.866694935 UTC
    , finish = 2025-09-03 13:30:42.485100204 UTC
    , thread_cap_info = ("ThreadId 102", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.444894051000
  min duration 0.056283599000
  total durat. 4.167960237000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 118
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 115
      , alphabet_size = 23
      , total_length = 735}
    , self = 79
    , parent = Nothing
    , duration = 1.075351623000
    , status = Fail
    , start = 2025-09-03 13:30:40.885071197 UTC
    , finish = 2025-09-03 13:30:41.96042282 UTC
    , thread_cap_info = ("ThreadId 103", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 115
      , num_strict_rules = 115
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 22
      , total_length = 720}
    , self = 65
    , parent = Nothing
    , duration = 1.078460252000
    , status = Fail
    , start = 2025-09-03 13:30:40.485062079 UTC
    , finish = 2025-09-03 13:30:41.563522331 UTC
    , thread_cap_info = ("ThreadId 69", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 110
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 100
      , alphabet_size = 20
      , total_length = 700}
    , self = 85
    , parent = Nothing
    , duration = 1.444894051000
    , status = Fail
    , start = 2025-09-03 13:30:41.125660699 UTC
    , finish = 2025-09-03 13:30:42.57055475 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.974206192000
  min duration 0.698346358000
  total durat. 2.482841018000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.900066793000
  min duration 0.676787276000
  total durat. 2.417209281000
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 115 , num_strict_rules
F                    = 115 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 22 , total_length
F                    = 720} , self = 59 , parent = Nothing , duration = 0.928665186000 , status
F                    = Fail , start = 2025-09-03 13:30:40.478222604 UTC , finish = 2025-09-03
F                    13:30:41.40688779 UTC , thread_cap_info = ("ThreadId 65", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 115 , num_strict_rules
| F                  = 115 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 22 , total_length
| F                  = 720} , self = 65 , parent = Nothing , duration = 1.078460252000 , status
| F                  = Fail , start = 2025-09-03 13:30:40.485062079 UTC , finish = 2025-09-03
| F                  13:30:41.563522331 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
| F                  
| | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | S                = 6 , total_length = 35} , self = 60 , parent = Nothing , duration = 0.900066793000
| | S                , status = Success , start = 2025-09-03 13:30:40.527669218 UTC , finish
| | S                = 2025-09-03 13:30:41.427736011 UTC , thread_cap_info = ("ThreadId 81",
| | S                3, False)}
| | S                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F              = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 8 , total_length
| | | F              = 67} , self = 55 , parent = Nothing , duration = 0.300321724000 , status
| | | F              = Fail , start = 2025-09-03 13:30:40.547978427 UTC , finish = 2025-09-03
| | | F              13:30:40.848300151 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| | | F              
| | | | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | E            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | E            = 6 , total_length = 35} , self = 64 , parent = Nothing , duration = 0.974206192000
| | | | E            , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:40.585207713
| | | | E            UTC , finish = 2025-09-03 13:30:41.559413905 UTC , thread_cap_info = ("ThreadId
| | | | E            90", 3, False)}
| | | | E            
| | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S          = 16 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 6
| | | | | S          , alphabet_size = 8 , total_length = 67} , self = 62 , parent = Nothing
| | | | | S          , duration = 0.840355212000 , status = Success , start = 2025-09-03 13:30:40.605411696
| | | | | S          UTC , finish = 2025-09-03 13:30:41.445766908 UTC , thread_cap_info = ("ThreadId
| | | | | S          93", 0, False)}
| | | | | S          
| | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S        = Size { num_rules = 392 , num_strict_rules = 277 , num_top_rules = 277
| | | | | | S        , num_weak_rules = 115 , alphabet_size = 39 , total_length = 2201} , self
| | | | | | S        = 51 , parent = Nothing , duration = 0.101649125000 , status = Success
| | | | | | S        , start = 2025-09-03 13:30:40.638708998 UTC , finish = 2025-09-03 13:30:40.740358123
| | | | | | S        UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | S        
| | | | | | S        
| | | | | | S        Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S        verbose = False}" , input_size = Size { num_rules = 199 , num_strict_rules
| | | | | | S        = 84 , num_top_rules = 84 , num_weak_rules = 115 , alphabet_size = 35 ,
| | | | | | S        total_length = 1231} , self = 56 , parent = Nothing , duration = 0.230615431000
| | | | | | S        , status = Success , start = 2025-09-03 13:30:40.756066107 UTC , finish
| | | | | | S        = 2025-09-03 13:30:40.986681538 UTC , thread_cap_info = ("ThreadId 96",
| | | | | | S        1, False)}
| | | | | | S        
| | | F | | |        
| | | F | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 118 , num_strict_rules
| | | F | | |        = 3 , num_top_rules = 3 , num_weak_rules = 115 , alphabet_size = 23 , total_length
| | | F | | |        = 735} , self = 83 , parent = Nothing , duration = 1.618405269000 , status
| | | F | | |        = Fail , start = 2025-09-03 13:30:40.866694935 UTC , finish = 2025-09-03
| | | F | | |        13:30:42.485100204 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | F | | |        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | | | | | E      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size
| | | | | | | E      = 8 , total_length = 67} , self = 66 , parent = Nothing , duration = 0.698346358000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:40.866713549
| | | | | | | E      UTC , finish = 2025-09-03 13:30:41.565059907 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      104", 0, False)}
| | | | | | | E      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 118 , num_strict_rules
| | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 115 , alphabet_size = 23 , total_length
| | | | | | | | F    = 735} , self = 79 , parent = Nothing , duration = 1.075351623000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:30:40.885071197 UTC , finish = 2025-09-03
| | | | | | | | F    13:30:41.96042282 UTC , thread_cap_info = ("ThreadId 103", 1, False)}
| | | | | | | | F    
| | | | | | S | |    
| | | | | | F | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 110 , num_strict_rules
| | | | | | F | |    = 10 , num_top_rules = 10 , num_weak_rules = 100 , alphabet_size = 20 ,
| | | | | | F | |    total_length = 700} , self = 81 , parent = Nothing , duration = 1.145279601000
| | | | | | F | |    , status = Fail , start = 2025-09-03 13:30:41.105135042 UTC , finish =
| | | | | | F | |    2025-09-03 13:30:42.250414643 UTC , thread_cap_info = ("ThreadId 112",
| | | | | | F | |    1, False)}
| | | | | | F | |    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 110 , num_strict_rules
| | | | | | | | | F  = 10 , num_top_rules = 10 , num_weak_rules = 100 , alphabet_size = 20 ,
| | | | | | | | | F  total_length = 700} , self = 85 , parent = Nothing , duration = 1.444894051000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 13:30:41.125660699 UTC , finish =
| | | | | | | | | F  2025-09-03 13:30:42.57055475 UTC , thread_cap_info = ("ThreadId 113", 1,
| | | | | | | | | F  False)}
| | | | | | | | | F  
F | | | | | | | | |  
  | S | | | | | | |  
  |   | | S | | | |  
  |   | E   | | | |  
  F   |     | | | |  
      |     | E | |  
F     |     |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     |     |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     |     |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     |     |   | |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F     |     |   | |  = 5 , total_length = 25} , self = 80 , parent = Nothing , duration = 0.254690384000
F     |     |   | |  , status = Fail , start = 2025-09-03 13:30:41.705979994 UTC , finish =
F     |     |   | |  2025-09-03 13:30:41.960670378 UTC , thread_cap_info = ("ThreadId 129",
F     |     |   | |  3, False)}
F     |     |   | |  
| F   |     |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |     |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |     |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F   |     |   | |  = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 8 , total_length
| F   |     |   | |  = 62} , self = 77 , parent = Nothing , duration = 0.129345473000 , status
| F   |     |   | |  = Fail , start = 2025-09-03 13:30:41.755750444 UTC , finish = 2025-09-03
| F   |     |   | |  13:30:41.885095917 UTC , thread_cap_info = ("ThreadId 130", 0, False)}
| F   |     |   | |  
| | F |     |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F |     |   | |  = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 8 , total_length
| | F |     |   | |  = 62} , self = 78 , parent = Nothing , duration = 0.152041474000 , status
| | F |     |   | |  = Fail , start = 2025-09-03 13:30:41.765071207 UTC , finish = 2025-09-03
| | F |     |   | |  13:30:41.917112681 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
| | F |     |   | |  
| | | | S   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | S   |   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | S   |   | |  = 5 , total_length = 25} , self = 82 , parent = Nothing , duration = 0.707359592000
| | | | S   |   | |  , status = Success , start = 2025-09-03 13:30:41.765073304 UTC , finish
| | | | S   |   | |  = 2025-09-03 13:30:42.472432896 UTC , thread_cap_info = ("ThreadId 132",
| | | | S   |   | |  3, False)}
| | | | S   |   | |  
| F | | |   |   | |  
| S | | |   |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | |   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | |   |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | |   |   | |  = 15 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 ,
| S | | |   |   | |  alphabet_size = 8 , total_length = 62} , self = 86 , parent = Nothing ,
| S | | |   |   | |  duration = 0.676787276000 , status = Success , start = 2025-09-03 13:30:41.909121511
| S | | |   |   | |  UTC , finish = 2025-09-03 13:30:42.585908787 UTC , thread_cap_info = ("ThreadId
| S | | |   |   | |  138", 0, False)}
| S | | |   |   | |  
| | F | |   |   | |  
| |   | |   |   F |  
F |   | |   |     |  
E |   | |   |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E |   | |   |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   | |   |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   | |   |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | |   |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | |   |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
E |   | |   |     |  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size
E |   | |   |     |  = 8 , total_length = 62} , self = 93 , parent = Nothing , duration = 0.810288468000
E |   | |   |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:41.96162114
E |   | |   |     |  UTC , finish = 2025-09-03 13:30:42.771909608 UTC , thread_cap_info = ("ThreadId
E |   | |   |     |  139", 0, False)}
E |   | |   |     |  
| | E | |   |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | |   |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | |   |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | |   |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |   |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |   |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E | |   |     |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | E | |   |     |  = 5 , total_length = 25} , self = 87 , parent = Nothing , duration = 0.587600226000
| | E | |   |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:42.003657438
| | E | |   |     |  UTC , finish = 2025-09-03 13:30:42.591257664 UTC , thread_cap_info = ("ThreadId
| | E | |   |     |  140", 3, False)}
| | E | |   |     |  
| | | | |   F     |  
| | | | S         |  
| | | F           |  
| | |             F  
| S |                
|   E                
E                    
