last 334 length 1259
CNF 334 vars 1259 clauses
last 346 length 1380
CNF 346 vars 1380 clauses
last 385 length 1531
last 381 length 1437
CNF 381 vars 1437 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2220, clauses: 7838
CNF 385 vars 1531 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2299, clauses: 8086
last 2220 length 7838
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5396, clauses: 21854
last 2299 length 8086
last 5396 length 21854
CNF 2220 vars 7838 clauses
CNF 2299 vars 8086 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5358, clauses: 21783
CNF 5396 vars 21854 clauses
last 5358 length 21783
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2299, clauses: 8086, status: Satisfied, time: 0.100213086s
CNF 5358 vars 21783 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5396, clauses: 21854, status: Satisfied, time: 0.126240679s
last 325 length 1224
CNF 325 vars 1224 clauses
last 333 length 1251
CNF 333 vars 1251 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2193, clauses: 7661
last 2193 length 7661
CNF 2193 vars 7661 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5350, clauses: 21678
last 5350 length 21678
CNF 5350 vars 21678 clauses
last 6368 length 26945
last 6368 length 26945
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2193, clauses: 7661, status: Unsatisfied, time: 0.226358976s
last 5738 length 23283
CNF 6368 vars 26945 clauses
last 5738 length 23283
CNF 6368 vars 26945 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2220, clauses: 7838, status: Unsatisfied, time: 0.551783467s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3325, clauses: 12833
CNF 5738 vars 23283 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5350, clauses: 21678, status: Unsatisfied, time: 0.244983823s
CNF 5738 vars 23283 clauses
last 7032 length 29303
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3382, clauses: 13099
last 3325 length 12833
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 8552 length 35477
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3557, clauses: 13228
last 2541 length 10652
last 3382 length 13099
CNF 3325 vars 12833 clauses
CNF 7032 vars 29303 clauses
last 3157 length 13760
CNF 8552 vars 35477 clauses
last 3557 length 13228
CNF 2541 vars 10652 clauses
last 2541 length 10652
last 3157 length 13760
CNF 3382 vars 13099 clauses
CNF 3157 vars 13760 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 3557 vars 13228 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3325, clauses: 12833, status: Satisfied, time: 0.409346519s
CNF 2541 vars 10652 clauses
CNF 3157 vars 13760 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5358, clauses: 21783, status: Unsatisfied, time: 1.08853951s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3382, clauses: 13099, status: Satisfied, time: 0.324787863s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 7032 length 29303
CNF 7032 vars 29303 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
**************************************************
summary
**************************************************
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 8 strict rules and 4 weak rules on 8 letters       weights
SRS with 4 strict rules and 4 weak rules on 7 letters       EDG
SRS with 4 strict rules and 4 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 4 weak rules on 7 letters       EDG
SRS with 3 strict rules and 4 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 4 weak rules on 7 letters       weights
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, d] -> [d, b] {- Input 0 -}
  [a] -> [b, b, b] {- Input 1 -}
  [b, d, b] -> [a, c] {- Input 2 -}
  [c] -> [d] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [d, a] -> [b, d] {- Mirror (Input 0) -}
  [a] -> [b, b, b] {- Mirror (Input 1) -}
  [b, d, b] -> [c, a] {- Mirror (Input 2) -}
  [c] -> [d] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
  [d#, a] |-> [d#] {- DP (Top 1) (Mirror (Input 0)) -}
  [d#, a] |-> [b#, d] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, d, b] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, d, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#] |-> [d#] {- DP (Top 0) (Mirror (Input 3)) -}
reason
  (d, 2/1)
  (a, 0/1)
  (b, 0/1)
  (c, 2/1)
  (d#, 3/1)
  (a#, 2/1)
  (b#, 1/1)
  (c#, 3/1)
   property Termination
has value Just True
for SRS
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
  [d#, a] |-> [d#] {- DP (Top 1) (Mirror (Input 0)) -}
  [d#, a] |-> [b#, d] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, d, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#] |-> [d#] {- DP (Top 0) (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#, a] |-> [d#] {- DP (Top 1) (Mirror (Input 0)) -}
  [d#, a] |-> [b#, d] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, d, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#] |-> [d#] {- DP (Top 0) (Mirror (Input 3)) -}
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( d
  , Wk  / -  1A 2A \
        | 0A -  0A |
        \ -  -  0A / )
  ( a
  , Wk  / 1A 1A 2A \
        | 0A 0A -  |
        \ -  -  0A / )
  ( b
  , Wk  / 0A 0A -  \
        | 0A 0A -  |
        \ -  -  0A / )
  ( c
  , Wk  / -  1A  2A \
        | 0A -2A 0A |
        \ -  -   0A / )
  ( d#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
  ( b#
  , Wk  / - 0A 1A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
   property Termination
has value Just True
for SRS
  [d#, a] |-> [b#, d] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, d, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#] |-> [d#] {- DP (Top 0) (Mirror (Input 3)) -}
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#, a] |-> [b#, d] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, d, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#] |-> [d#] {- DP (Top 0) (Mirror (Input 3)) -}
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( d
  , Wk  / 2 0 4 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( a
  , Wk  / 1 0 0 \
        | 3 1 6 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 0 0 \
        | 1 1 2 |
        \ 0 0 1 / )
  ( c
  , Wk  / 2 0 4 \
        | 0 1 0 |
        \ 0 0 1 / )
  ( d#
  , Wk  / 0 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 0 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [b#, d, b] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#] |-> [d#] {- DP (Top 0) (Mirror (Input 3)) -}
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
reason
  (d, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (d#, 0/1)
  (b#, 2/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [d, a] ->= [b, d] {- DP Nontop (Mirror (Input 0)) -}
  [a] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, d, b] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [c] ->= [d] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(4,4)\Deepee(8/4,8)\Weight\EDG(4/4,7)\Matrix{\ArcticBZ}{3}\EDG(3/4,7)\Matrix{\Natural}{3}(2/4,7)\Weight(0/4,4)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 8552 length 35477
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7020, clauses: 25544
last 7020 length 25544

CNF 7020 vars 25544 clauses
Success : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.842596000000
  min duration 0.816840778000
  total durat. 1.659436778000
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.901962113000
  min duration 0.006193529000
  total durat. 1.759522101000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.679534790000
  min duration 0.007977563000
  total durat. 2.244660367000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.281259326000
  min duration 0.583162496000
  total durat. 1.864421822000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 29}
    , self = 108
    , parent = Nothing
    , duration = 1.281259326000
    , status = Fail
    , start = 2025-09-03 13:52:31.659020293 UTC
    , finish = 2025-09-03 13:52:32.940279619 UTC
    , thread_cap_info = ("ThreadId 102", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.668042050000
  min duration 0.652369328000
  total durat. 1.320411378000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.719661498000
  min duration 0.068345027000
  total durat. 1.334732609000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.494858689000
  min duration 1.494858689000
  total durat. 1.494858689000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 15}
    , self = 118
    , parent = Nothing
    , duration = 1.494858689000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:52:31.546091928 UTC
    , finish = 2025-09-03 13:52:33.040950617 UTC
    , thread_cap_info = ("ThreadId 35", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.494788414000
  min duration 1.494788414000
  total durat. 1.494788414000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 15}
    , self = 117
    , parent = Nothing
    , duration = 1.494788414000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:52:31.546143936 UTC
    , finish = 2025-09-03 13:52:33.04093235 UTC
    , thread_cap_info = ("ThreadId 36", 0, False)}
**************************************************
E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
E                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                        = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
E                        = 15} , self = 118 , parent = Nothing , duration = 1.494858689000 , status
E                        = Except "AsyncCancelled" , start = 2025-09-03 13:52:31.546091928 UTC ,
E                        finish = 2025-09-03 13:52:33.040950617 UTC , thread_cap_info = ("ThreadId
E                        35", 3, False)}
E                        
| E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| E                      = 15} , self = 117 , parent = Nothing , duration = 1.494788414000 , status
| E                      = Except "AsyncCancelled" , start = 2025-09-03 13:52:31.546143936 UTC ,
| E                      finish = 2025-09-03 13:52:33.04093235 UTC , thread_cap_info = ("ThreadId
| E                      36", 0, False)}
| E                      
| | S                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                    = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | S                    = 7 , total_length = 29} , self = 58 , parent = Nothing , duration = 0.208961720000
| | S                    , status = Success , start = 2025-09-03 13:52:31.57266476 UTC , finish
| | S                    = 2025-09-03 13:52:31.78162648 UTC , thread_cap_info = ("ThreadId 82",
| | S                    2, False)}
| | S                    
| | | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                  = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | F                  = 6 , total_length = 29} , self = 70 , parent = Nothing , duration = 0.719661498000
| | | F                  , status = Fail , start = 2025-09-03 13:52:31.579600645 UTC , finish =
| | | F                  2025-09-03 13:52:32.299262143 UTC , thread_cap_info = ("ThreadId 84", 2,
| | | F                  False)}
| | | F                  
| | | | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , removeCNF 8552 vars 35477 clauses

| | | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | S                , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | S                = 7 , total_length = 29} , self = 60 , parent = Nothing , duration = 0.187473695000
| | | | S                , status = Success , start = 2025-09-03 13:52:31.599670049 UTC , finish
| | | | S                = 2025-09-03 13:52:31.787143744 UTC , thread_cap_info = ("ThreadId 90",
| | | | S                2, False)}
| | | | S                
| | | | | S              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | S              = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | S              = 6 , num_top_rules = 6 , num_weak_rules = 46 , alphabet_size = 16 , total_length
| | | | | S              = 296} , self = 74 , parent = Nothing , duration = 0.816840778000 , status
| | | | | S              = Success , start = 2025-09-03 13:52:31.609142988 UTC , finish = 2025-09-03
| | | | | S              13:52:32.425983766 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | | | S              
| | | | | | S            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | S            = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | | S            = 52 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | | S            = 296} , self = 76 , parent = Nothing , duration = 0.842596000000 , status
| | | | | | S            = Success , start = 2025-09-03 13:52:31.619772192 UTC , finish = 2025-09-03
| | | | | | S            13:52:32.462368192 UTC , thread_cap_info = ("ThreadId 96", 0, False)}
| | | | | | S            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | | | F          = 52 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | | | F          = 296} , self = 71 , parent = Nothing , duration = 0.679534790000 , status
| | | | | | | F          = Fail , start = 2025-09-03 13:52:31.619780369 UTC , finish = 2025-09-03
| | | | | | | F          13:52:32.299315159 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | | | | F        = 6 , num_top_rules = 6 , num_weak_rules = 46 , alphabet_size = 16 , total_length
| | | | | | | | F        = 296} , self = 72 , parent = Nothing , duration = 0.659731641000 , status
| | | | | | | | F        = Fail , start = 2025-09-03 13:52:31.639604653 UTC , finish = 2025-09-03
| | | | | | | | F        13:52:32.299336294 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | | F      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | F      = 6 , total_length = 29} , self = 108 , parent = Nothing , duration = 1.281259326000
| | | | | | | | | F      , status = Fail , start = 2025-09-03 13:52:31.659020293 UTC , finish =
| | | | | | | | | F      2025-09-03 13:52:32.940279619 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | | F      2, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | F    = 8 , num_top_rules = 8 , num_weak_rules = 52 , alphabet_size = 19 , total_length
| | | | | | | | | | F    = 346} , self = 95 , parent = Nothing , duration = 0.901962113000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 13:52:31.760250095 UTC , finish = 2025-09-03
| | | | | | | | | | F    13:52:32.662212208 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | | | | | | | | | F    
| | | | | | | | | | | S  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | S  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | | S  = 8 , num_top_rules = 8 , num_weak_rules = 52 , alphabet_size = 19 , total_length
| | | | | | | | | | | S  = 346} , self = 96 , parent = Nothing , duration = 0.941878634000 , status
| | | | | | | | | | | S  = Success , start = 2025-09-03 13:52:31.781420696 UTC , finish = 2025-09-03
| | | | | | | | | | | S  13:52:32.72329933 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| | | | | | | | | | | S  
| | S | | | | | | | | |  
| |   | S | | | | | | |  
| | F |   | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F |   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F |   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F |   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F |   | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | F |   | | | | | | |  = 7 , total_length = 26} , self = 73 , parent = Nothing , duration = 0.583162496000
| | F |   | | | | | | |  , status = Fail , start = 2025-09-03 13:52:31.808458517 UTC , finish =
| | F |   | | | | | | |  2025-09-03 13:52:32.391621013 UTC , thread_cap_info = ("ThreadId 121",
| | F |   | | | | | | |  2, False)}
| | F |   | | | | | | |  
| | | | F | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | | | | | |  = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | | | F | | | | | | |  = 7 , total_length = 26} , self = 69 , parent = Nothing , duration = 0.370909222000
| | | | F | | | | | | |  , status = Fail , start = 2025-09-03 13:52:31.820112647 UTC , finish =
| | | | F | | | | | | |  2025-09-03 13:52:32.191021869 UTC , thread_cap_info = ("ThreadId 120",
| | | | F | | | | | | |  2, False)}
| | | | F | | | | | | |  
| | | | F | | | | | | |  
| | | | S | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | S | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | S | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | | | S | | | | | | |  = 7 , total_length = 26} , self = 104 , parent = Nothing , duration = 0.668042050000
| | | | S | | | | | | |  , status = Success , start = 2025-09-03 13:52:32.19118425 UTC , finish
| | | | S | | | | | | |  = 2025-09-03 13:52:32.8592263 UTC , thread_cap_info = ("ThreadId 128",
| | | | S | | | | | | |  2, False)}
| | | | S | | | | | | |  
| | | F | | | | | | | |  
| | |   | | | F | | | |  
| | |   | | |   F | | |  
| | | S | | |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | S | | |     | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S | | |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S | | |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | S | | |     | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | S | | |     | | |  = 6 , total_length = 29} , self = 110 , parent = Nothing , duration = 0.652369328000
| | | S | | |     | | |  , status = Success , start = 2025-09-03 13:52:32.299374682 UTC , finish
| | | S | | |     | | |  = 2025-09-03 13:52:32.95174401 UTC , thread_cap_info = ("ThreadId 131",
| | | S | | |     | | |  2, False)}
| | | S | | |     | | |  
| | | | | | | F   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F   | | |  = 52 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 46 ,
| | | | | | | F   | | |  alphabet_size = 16 , total_length = 296} , self = 90 , parent = Nothing
| | | | | | | F   | | |  , duration = 0.175816862000 , status = Fail , start = 2025-09-03 13:52:32.326411493
| | | | | | | F   | | |  UTC , finish = 2025-09-03 13:52:32.502228355 UTC , thread_cap_info = ("ThreadId
| | | | | | | F   | | |  132", 1, False)}
| | | | | | | F   | | |  
| | F | | | | |   | | |  
| | F | | | | |   | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |   | | |  = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | F | | | | |   | | |  = 7 , total_length = 26} , self = 112 , parent = Nothing , duration = 0.566367476000
| | F | | | | |   | | |  , status = Fail , start = 2025-09-03 13:52:32.398297001 UTC , finish =
| | F | | | | |   | | |  2025-09-03 13:52:32.964664477 UTC , thread_cap_info = ("ThreadId 133",
| | F | | | | |   | | |  2, False)}
| | F | | | | |   | | |  
| | | | | S | |   | | |  
| | | | |   S |   | | |  
| | | | | F   |   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | F   |   | | |  = 20 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 12 , total_length
| | | | | F   |   | | |  = 120} , self = 106 , parent = Nothing , duration = 0.393065743000 , status
| | | | | F   |   | | |  = Fail , start = 2025-09-03 13:52:32.473302645 UTC , finish = 2025-09-03
| | | | | F   |   | | |  13:52:32.866368388 UTC , thread_cap_info = ("ThreadId 161", 0, False)}
| | | | | F   |   | | |  
| | | | | | F |   | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | F |   | | |  = 20 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 12 , total_length
| | | | | | F |   | | |  = 120} , self = 100 , parent = Nothing , duration = 0.289044012000 , status
| | | | | | F |   | | |  = Fail , start = 2025-09-03 13:52:32.475270023 UTC , finish = 2025-09-03
| | | | | | F |   | | |  13:52:32.764314035 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| | | | | | F |   | | |  
| | | | | | | F   | | |  
| | | | | | | F   | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | F   | | |  = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size = 12 , total_length
| | | | | | | F   | | |  = 120} , self = 107 , parent = Nothing , duration = 0.344494952000 , status
| | | | | | | F   | | |  = Fail , start = 2025-09-03 13:52:32.539322153 UTC , finish = 2025-09-03
| | | | | | | F   | | |  13:52:32.883817105 UTC , thread_cap_info = ("ThreadId 168", 1, False)}
| | | | | | | F   | | |  
| | | | | | | | F | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | | F | | |  = 4 , num_top_rules = 4 , num_weak_rules = 16 , alphabet_size = 12 , total_length
| | | | | | | | F | | |  = 120} , self = 109 , parent = Nothing , duration = 0.402991378000 , status
| | | | | | | | F | | |  = Fail , start = 2025-09-03 13:52:32.539588792 UTC , finish = 2025-09-03
| | | | | | | | F | | |  13:52:32.94258017 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| | | | | | | | F | | |  
| | | | | | | | | | F |  
| | | | | | | | | |   S  
| | | | | | F | | |      
| | | | S |   | | |      
| | | | F |   | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | F |   | | |      = 8 , num_top_rules = 8 , num_weak_rules = 52 , alphabet_size = 19 , total_length
| | | | F |   | | |      = 346} , self = 116 , parent = Nothing , duration = 0.164885033000 , status
| | | | F |   | | |      = Fail , start = 2025-09-03 13:52:32.859593623 UTC , finish = 2025-09-03
| | | | F |   | | |      13:52:33.024478656 UTC , thread_cap_info = ("ThreadId 182", 1, False)}
| | | | F |   | | |      
| | | | | F   | | |      
| | | | |     F | |      
| | | | |       | F      
| | | | |       F        
| | | S |                
| | F   |                
| |     F                
| E                      
E                        
