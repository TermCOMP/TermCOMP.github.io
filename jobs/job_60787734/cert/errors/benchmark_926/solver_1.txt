last 1131 length 4890
CNF 1131 vars 4890 clauses
last 1365 length 6180
CNF 1365 vars 6180 clauses
last 1740 length 7227
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 10289
last 2877 length 10289
CNF 1740 vars 7227 clauses
CNF 2877 vars 10289 clauses
last 2170 length 9464
CNF 2170 vars 9464 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 10289, status: Unsatisfied, time: 0.079207281s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3906, clauses: 14537
last 3906 length 14537
CNF 3906 vars 14537 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3906, clauses: 14537, status: Satisfied, time: 0.097677686s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6706, clauses: 27614
last 6706 length 27614
CNF 6706 vars 27614 clauses
last 1523 length 6495
last 1774 length 7453
CNF 1523 vars 6495 clauses
CNF 1774 vars 7453 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11117, clauses: 46511
last 11117 length 46511
CNF 11117 vars 46511 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3686, clauses: 13569
last 3686 length 13569
CNF 3686 vars 13569 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11117, clauses: 46511, status: Satisfied, time: 0.141347093s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3686, clauses: 13569, status: Satisfied, time: 0.155696928s
last 1354 length 5718
last 1404 length 5874
CNF 1354 vars 5718 clauses
CNF 1404 vars 5874 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3280, clauses: 11995
last 3280 length 11995
CNF 3280 vars 11995 clauses
last 1348 length 5900
last 1716 length 8088
CNF 1348 vars 5900 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3280, clauses: 11995, status: Unsatisfied, time: 0.28177567s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12053, clauses: 50485
last 17173 length 73834
last 1600 length 7499
last 1198 length 5242
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7318, clauses: 30308
last 12053 length 50485
last 22047 length 96977
CNF 17173 vars 73834 clauses
CNF 1600 vars 7499 clauses
CNF 1198 vars 5242 clauses
last 7318 length 30308
CNF 12053 vars 50485 clauses
last 23275 length 103381
last 22073 length 99950
CNF 22047 vars 96977 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2258, clauses: 8190
last 25684 length 120336
CNF 7318 vars 30308 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8628, clauses: 36131
last 2258 length 8190
CNF 23275 vars 103381 clauses
CNF 22073 vars 99950 clauses
last 8628 length 36131
CNF 25684 vars 120336 clauses
CNF 2258 vars 8190 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12053, clauses: 50485, status: Satisfied, time: 1.562754458s
last 32616 length 163856
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2258, clauses: 8190, status: Satisfied, time: 0.414885082s
CNF 8628 vars 36131 clauses
CNF 32616 vars 163856 clauses
last 1188 length 4966
CNF 1188 vars 4966 clauses
last 1369 length 5838
CNF 1369 vars 5838 clauses
last 398 length 1693
last 439 length 1957
CNF 398 vars 1693 clauses
CNF 439 vars 1957 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1048, clauses: 3763
last 1048 length 3763
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3174, clauses: 11480
last 3174 length 11480
CNF 1048 vars 3763 clauses
CNF 3174 vars 11480 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3175, clauses: 13075
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1048, clauses: 3763, status: Satisfied, time: 0.134367927s
last 3175 length 13075
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3174, clauses: 11480, status: Unsatisfied, time: 0.178156565s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12007, clauses: 50309
last 12007 length 50309
CNF 12007 vars 50309 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7243, clauses: 30022
last 7243 length 30022
CNF 7243 vars 30022 clauses
**************************************************
summary
**************************************************
SRS with 8 rules on 5 letters       weights
SRS with 7 rules on 5 letters       DP
SRS with 16 strict rules and 7 weak rules on 9 letters       weights
SRS with 6 strict rules and 7 weak rules on 9 letters       EDG
5 sub-proofs
  1 SRS with 1 strict rules and 7 weak rules on 6 letters       Usable
  SRS with 1 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 6 weak rules on 4 letters       weights
  SRS with 0 strict rules and 5 weak rules on 4 letters       EDG

  2 SRS with 1 strict rules and 7 weak rules on 6 letters       Usable
  SRS with 1 strict rules and 1 weak rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  3 SRS with 1 strict rules and 7 weak rules on 6 letters       Usable
  SRS with 1 strict rules and 1 weak rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  4 SRS with 2 strict rules and 7 weak rules on 6 letters       Usable
  SRS with 2 strict rules and 6 weak rules on 5 letters       weights
  SRS with 1 strict rules and 5 weak rules on 5 letters       EDG
  SRS with 1 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 4 weak rules on 4 letters       EDG
  SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 3 letters       EDG

  5 SRS with 1 strict rules and 7 weak rules on 6 letters       Usable
  SRS with 1 strict rules and 2 weak rules on 3 letters       weights
  SRS with 1 strict rules and 1 weak rules on 3 letters       EDG
  SRS with 1 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [log, s] -> [s, log, half, s] {- Input 0 -}
  [half, 0] -> [0, s, s, half] {- Input 1 -}
  [half, s, 0] -> [0] {- Input 2 -}
  [half, s, s] -> [s, half, p, s, s] {- Input 3 -}
  [half, half, s, s, s, s] -> [s, s, half, half] {- Input 4 -}
  [p, s, s, s] -> [s, p, s, s] {- Input 5 -}
  [s, s, p, s] -> [s, s] {- Input 6 -}
  [0] -> [] {- Input 7 -}
reason
  (log, 0/1)
  (s, 0/1)
  (p, 0/1)
  (0, 1/1)
  (half, 0/1)
   property Termination
has value Just True
for SRS
  [log, s] -> [s, log, half, s] {- Input 0 -}
  [half, 0] -> [0, s, s, half] {- Input 1 -}
  [half, s, 0] -> [0] {- Input 2 -}
  [half, s, s] -> [s, half, p, s, s] {- Input 3 -}
  [half, half, s, s, s, s] -> [s, s, half, half] {- Input 4 -}
  [p, s, s, s] -> [s, p, s, s] {- Input 5 -}
  [s, s, p, s] -> [s, s] {- Input 6 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
  [log#, s] |-> [log#, half, s] {- DP (Top 1) (Input 0) -}
  [log#, s] |-> [s#, log, half, s] {- DP (Top 0) (Input 0) -}
  [log#, s] |-> [half#, s] {- DP (Top 2) (Input 0) -}
  [s#, s, p, s] |-> [s#, s] {- DP (Top 0) (Input 6) -}
  [p#, s, s, s] |-> [s#, p, s, s] {- DP (Top 0) (Input 5) -}
  [p#, s, s, s] |-> [p#, s, s] {- DP (Top 1) (Input 5) -}
  [half#, s, s] |-> [s#, half, p, s, s] {- DP (Top 0) (Input 3) -}
  [half#, s, s] |-> [p#, s, s] {- DP (Top 2) (Input 3) -}
  [half#, s, s] |-> [half#, p, s, s] {- DP (Top 1) (Input 3) -}
  [half#, 0] |-> [s#, s, half] {- DP (Top 1) (Input 1) -}
  [half#, 0] |-> [s#, half] {- DP (Top 2) (Input 1) -}
  [half#, 0] |-> [half#] {- DP (Top 3) (Input 1) -}
  [half#, half, s, s, s, s] |-> [s#, s, half, half] {- DP (Top 0) (Input 4) -}
  [half#, half, s, s, s, s] |-> [s#, half, half] {- DP (Top 1) (Input 4) -}
  [half#, half, s, s, s, s] |-> [half#] {- DP (Top 3) (Input 4) -}
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
reason
  (log, 0/1)
  (s, 0/1)
  (p, 0/1)
  (0, 3/1)
  (half, 0/1)
  (log#, 3/1)
  (s#, 0/1)
  (p#, 1/1)
  (half#, 2/1)
   property Termination
has value Just True
for SRS
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
  [log#, s] |-> [log#, half, s] {- DP (Top 1) (Input 0) -}
  [s#, s, p, s] |-> [s#, s] {- DP (Top 0) (Input 6) -}
  [p#, s, s, s] |-> [p#, s, s] {- DP (Top 1) (Input 5) -}
  [half#, s, s] |-> [half#, p, s, s] {- DP (Top 1) (Input 3) -}
  [half#, half, s, s, s, s] |-> [half#] {- DP (Top 3) (Input 4) -}
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [log#, s] |-> [log#, half, s] {- DP (Top 1) (Input 0) -}
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  remove un-usable
    SRS
      [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
   property Termination
has value Just True
for SRS
  [log#, s] |-> [log#, half, s] {- DP (Top 1) (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  ( s
  , Wk  / -   1A 0A \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( p
  , Wk  / -1A -1A 0A \
        | -1A -1A 0A |
        \ -   -   0A / )
  ( 0
  , Wk  / - - 0A \
        | - - -  |
        \ - - 0A / )
  ( half
  , Wk  / -1A - 0A \
        | -1A - -  |
        \ -   - 0A / )
  ( log#
  , Wk  / -2A 1A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  (s, 0/1)
  (p, 0/1)
  (0, 0/1)
  (half, 1/1)
   property Termination
has value Just True
for SRS
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [s#, s, p, s] |-> [s#, s] {- DP (Top 0) (Input 6) -}
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  remove un-usable
    SRS
      [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
      [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
      [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
      [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
      [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
      [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
   property Termination
has value Just True
for SRS
  [s#, s, p, s] |-> [s#, s] {- DP (Top 0) (Input 6) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  (s, 1/1)
  (p, 1/1)
  (s#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [p#, s, s, s] |-> [p#, s, s] {- DP (Top 1) (Input 5) -}
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  remove un-usable
    SRS
      [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
      [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
      [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
      [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
      [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
      [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
   property Termination
has value Just True
for SRS
  [p#, s, s, s] |-> [p#, s, s] {- DP (Top 1) (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  (s, 1/1)
  (p, 1/1)
  (p#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
  [half#, half, s, s, s, s] |-> [half#] {- DP (Top 3) (Input 4) -}
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  remove un-usable
    SRS
      [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
   property Termination
has value Just True
for SRS
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
  [half#, half, s, s, s, s] |-> [half#] {- DP (Top 3) (Input 4) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  (s, 0/1)
  (p, 0/1)
  (0, 0/1)
  (half, 1/1)
  (half#, 0/1)
   property Termination
has value Just True
for SRS
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  ( s
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( p
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( 0
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( half
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( half#
  , Ek 2  / 2 1 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [half#, half, s, s, s, s] |-> [half#, half] {- DP (Top 2) (Input 4) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  ( s
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( half
  , Wk  / 6A 6A 9A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( half#
  , Wk  / 1A 1A 2A - \
        | 1A 1A 2A - |
        | 1A 1A 2A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [half#, s, s] |-> [half#, p, s, s] {- DP (Top 1) (Input 3) -}
  [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
  [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
  [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
  [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
  [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  remove un-usable
    SRS
      [log, s] ->= [s, log, half, s] {- DP Nontop (Input 0) -}
      [half, 0] ->= [0, s, s, half] {- DP Nontop (Input 1) -}
      [half, s, 0] ->= [0] {- DP Nontop (Input 2) -}
      [half, s, s] ->= [s, half, p, s, s] {- DP Nontop (Input 3) -}
      [half, half, s, s, s, s] ->= [s, s, half, half] {- DP Nontop (Input 4) -}
   property Termination
has value Just True
for SRS
  [half#, s, s] |-> [half#, p, s, s] {- DP (Top 1) (Input 3) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
  [s, s, p, s] ->= [s, s] {- DP Nontop (Input 6) -}
reason
  (s, 1/1)
  (p, 0/1)
  (half#, 0/1)
   property Termination
has value Just True
for SRS
  [half#, s, s] |-> [half#, p, s, s] {- DP (Top 1) (Input 3) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [half#, s, s] |-> [half#, p, s, s] {- DP (Top 1) (Input 3) -}
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
reason
  ( s
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( half#
  , Wk  / 10A 11A 13A - \
        | 10A 11A 13A - |
        | 10A 11A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [p, s, s, s] ->= [s, p, s, s] {- DP Nontop (Input 5) -}
reason
  EDG

**************************************************
skeleton: (8,5)\Weight(7,5)\Deepee(16/7,9)\Weight(6/7,9)\EDG[(1/7,6)\Usable(1/6,5)\Matrix{\ArcticBZ}{3}(0/6,4)\Weight(0/5,4)\EDG[],(1/7,6)\Usable(1/1,3)\Weight(0,0)\EDG[],(1/7,6)\Usable(1/1,3)\Weight(0,0)\EDG[],(2/7,6)\Usable(2/6,5)\Weight\EDG(1/5,5)\Matrix{\Natural}{2}\EDG(1/4,4)\Matrix{\Arctic}{3}(0/4,3)\EDG[],(1/7,6)\Usable(1/2,3)\Weight\EDG(1/1,3)\Matrix{\Arctic}{3}(0/1,2)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12007, clauses: 50309, status: Satisfied, time: 0.265021019s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.962079567000
  min duration 0.048983632000
  total durat. 4.536274531000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 40}
    , self = 102
    , parent = Nothing
    , duration = 1.023734746000
    , status = Fail
    , start = 2025-09-03 13:32:59.563191571 UTC
    , finish = 2025-09-03 13:33:00.586926317 UTC
    , thread_cap_info = ("ThreadId 153", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 87
      , num_strict_rules = 87
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 18
      , total_length = 786}
    , self = 104
    , parent = Nothing
    , duration = 2.962079567000
    , status = Fail
    , start = 2025-09-03 13:32:58.223271947 UTC
    , finish = 2025-09-03 13:33:01.185351514 UTC
    , thread_cap_info = ("ThreadId 82", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.072539445000
  min duration 3.055892460000
  total durat. 6.128431905000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 80
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 79
      , alphabet_size = 15
      , total_length = 748}
    , self = 111
    , parent = Nothing
    , duration = 3.055892460000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:32:58.483281777 UTC
    , finish = 2025-09-03 13:33:01.539174237 UTC
    , thread_cap_info = ("ThreadId 107", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 88
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 87
      , alphabet_size = 19
      , total_length = 794}
    , self = 108
    , parent = Nothing
    , duration = 3.072539445000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:32:58.400553256 UTC
    , finish = 2025-09-03 13:33:01.473092701 UTC
    , thread_cap_info = ("ThreadId 98", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.420199569000
  min duration 0.029282420000
  total durat. 3.995580325000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 87
      , num_strict_rules = 87
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 18
      , total_length = 786}
    , self = 103
    , parent = Nothing
    , duration = 2.420199569000
    , status = Fail
    , start = 2025-09-03 13:32:58.243267643 UTC
    , finish = 2025-09-03 13:33:00.663467212 UTC
    , thread_cap_info = ("ThreadId 84", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.566178643000
  min duration 3.060210386000
  total durat. 6.626389029000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 88
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 87
      , alphabet_size = 19
      , total_length = 794}
    , self = 106
    , parent = Nothing
    , duration = 3.060210386000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:32:58.40055788 UTC
    , finish = 2025-09-03 13:33:01.460768266 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 80
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 79
      , alphabet_size = 15
      , total_length = 748}
    , self = 128
    , parent = Nothing
    , duration = 3.566178643000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:32:58.503410916 UTC
    , finish = 2025-09-03 13:33:02.069589559 UTC
    , thread_cap_info = ("ThreadId 108", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.257099016000
  min duration 0.652690733000
  total durat. 2.909789749000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 55}
    , self = 105
    , parent = Nothing
    , duration = 2.257099016000
    , status = Success
    , start = 2025-09-03 13:32:59.203309977 UTC
    , finish = 2025-09-03 13:33:01.460408993 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.059048330000
  min duration 0.192788469000
  total durat. 1.780574753000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 40}
    , self = 114
    , parent = Nothing
    , duration = 1.059048330000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:00.663283943 UTC
    , finish = 2025-09-03 13:33:01.722332273 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.101253921000
  min duration 0.662084569000
  total durat. 2.763338490000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 55}
    , self = 112
    , parent = Nothing
    , duration = 2.101253921000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:32:59.61653779 UTC
    , finish = 2025-09-03 13:33:01.717791711 UTC
    , thread_cap_info = ("ThreadId 155", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.895957593000
  min duration 0.147624070000
  total durat. 1.598870701000
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 7 , num_strict_rules = 7 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length
F                      = 48} , self = 69 , parent = Nothing , duration = 0.659787678000 , status
F                      = Fail , start = 2025-09-03 13:32:58.134283959 UTC , finish = 2025-09-03
F                      13:32:58.794071637 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                      
| F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                    = True}" , input_size = Size { num_rules = 7 , num_strict_rules = 7 , num_top_rules
| F                    = 0 , num_weak_rules = 0 , alphabet_size = 5 , total_length = 48} , self
| F                    = 53 , parent = Nothing , duration = 0.279581234000 , status = Fail , start
| F                    = 2025-09-03 13:32:58.134284584 UTC , finish = 2025-09-03 13:32:58.413865818
| F                    UTC , thread_cap_info = ("ThreadId 22", 3, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F                  = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | F                  = 47} , self = 48 , parent = Nothing , duration = 0.160884852000 , status
| | F                  = Fail , start = 2025-09-03 13:32:58.211748491 UTC , finish = 2025-09-03
| | F                  13:32:58.372633343 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 87 , num_strict_rules
| | | F                = 87 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 18 , total_length
| | | F                = 786} , self = 104 , parent = Nothing , duration = 2.962079567000 , status
| | | F                = Fail , start = 2025-09-03 13:32:58.223271947 UTC , finish = 2025-09-03
| | | F                13:33:01.185351514 UTC , thread_cap_info = ("ThreadId 82", 0, False)}
| | | F                
| | | | S              Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | S              verbose = False}" , input_size = Size { num_rules = 211 , num_strict_rules
| | | | S              = 124 , num_top_rules = 124 , num_weak_rules = 87 , alphabet_size = 28
| | | | S              , total_length = 1805} , self = 52 , parent = Nothing , duration = 0.166898228000
| | | | S              , status = Success , start = 2025-09-03 13:32:58.233629843 UTC , finish
| | | | S              = 2025-09-03 13:32:58.400528071 UTC , thread_cap_info = ("ThreadId 70",
| | | | S              1, False)}
| | | | S              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 87 , num_strict_rules
| | | | | F            = 87 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 18 , total_length
| | | | | F            = 786} , self = 103 , parent = Nothing , duration = 2.420199569000 , status
| | | | | F            = Fail , start = 2025-09-03 13:32:58.243267643 UTC , finish = 2025-09-03
| | | | | F            13:33:00.663467212 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| | | | | F            
| | | | | | S          Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S          verbose = False}" , input_size = Size { num_rules = 159 , num_strict_rules
| | | | | | S          = 72 , num_top_rules = 72 , num_weak_rules = 87 , alphabet_size = 27 ,
| | | | | | S          total_length = 1397} , self = 49 , parent = Nothing , duration = 0.132831995000
| | | | | | S          , status = Success , start = 2025-09-03 13:32:58.243269888 UTC , finish
| | | | | | S          = 2025-09-03 13:32:58.376101883 UTC , thread_cap_info = ("ThreadId 68",
| | | | | | S          1, False)}
| | | | | | S          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F        = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | F        = 70} , self = 58 , parent = Nothing , duration = 0.210271643000 , status
| | | | | | | F        = Fail , start = 2025-09-03 13:32:58.256116698 UTC , finish = 2025-09-03
| | | | | | | F        13:32:58.466388341 UTC , thread_cap_info = ("ThreadId 87", 2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | | F      = 70} , self = 54 , parent = Nothing , duration = 0.157756231000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 13:32:58.256122969 UTC , finish = 2025-09-03
| | | | | | | | F      13:32:58.4138792 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F    = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | F    = 5 , total_length = 47} , self = 56 , parent = Nothing , duration = 0.151211618000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 13:32:58.303282385 UTC , finish =
| | | | | | | | | F    2025-09-03 13:32:58.454494003 UTC , thread_cap_info = ("ThreadId 90", 2,
| | | | | | | | | F    False)}
| | | | | | | | | F    
| | F | | | | | | |    
| |   | | | S | | |    
| |   | S |   | | |    
| | E |   |   | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E |   |   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |   |   | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 88 , num_strict_rules
| | E |   |   | | |    = 1 , num_top_rules = 1 , num_weak_rules = 87 , alphabet_size = 19 , total_length
| | E |   |   | | |    = 794} , self = 108 , parent = Nothing , duration = 3.072539445000 , status
| | E |   |   | | |    = Except "<<timeout>>" , start = 2025-09-03 13:32:58.400553256 UTC , finish
| | E |   |   | | |    = 2025-09-03 13:33:01.473092701 UTC , thread_cap_info = ("ThreadId 98",
| | E |   |   | | |    1, False)}
| | E |   |   | | |    
| | | | E |   | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E |   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E |   | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 88 , num_strict_rules
| | | | E |   | | |    = 1 , num_top_rules = 1 , num_weak_rules = 87 , alphabet_size = 19 , total_length
| | | | E |   | | |    = 794} , self = 106 , parent = Nothing , duration = 3.060210386000 , status
| | | | E |   | | |    = Except "<<timeout>>" , start = 2025-09-03 13:32:58.40055788 UTC , finish
| | | | E |   | | |    = 2025-09-03 13:33:01.460768266 UTC , thread_cap_info = ("ThreadId 99",
| | | | E |   | | |    1, False)}
| | | | E |   | | |    
| F | | | |   | | |    
|   | | | |   | F |    
| S | | | |   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | |   |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | |   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | |   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | |   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | |   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S | | | |   |   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| S | | | |   |   |    = 5 , total_length = 47} , self = 71 , parent = Nothing , duration = 0.652690733000
| S | | | |   |   |    , status = Success , start = 2025-09-03 13:32:58.41872477 UTC , finish
| S | | | |   |   |    = 2025-09-03 13:32:59.071415503 UTC , thread_cap_info = ("ThreadId 101",
| S | | | |   |   |    3, False)}
| S | | | |   |   |    
| | | | | | S |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S |   |    = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | | | S |   |    alphabet_size = 5 , total_length = 70} , self = 60 , parent = Nothing ,
| | | | | | S |   |    duration = 0.147624070000 , status = Success , start = 2025-09-03 13:32:58.424026277
| | | | | | S |   |    UTC , finish = 2025-09-03 13:32:58.571650347 UTC , thread_cap_info = ("ThreadId
| | | | | | S |   |    103", 2, False)}
| | | | | | S |   |    
| | | | | | | |   F    
| | | | | | | F        
| | | | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | E        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | E        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | E        = 5 , total_length = 47} , self = 80 , parent = Nothing , duration = 0.662084569000
| | | | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 13:32:58.467248055
| | | | | | | E        UTC , finish = 2025-09-03 13:32:59.129332624 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        106", 2, False)}
| | | | | | | E        
| | | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | E      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | | | E      = 5 , total_length = 70} , self = 62 , parent = Nothing , duration = 0.192788469000
| | | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:32:58.483280762
| | | | | | | | E      UTC , finish = 2025-09-03 13:32:58.676069231 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E      110", 2, False)}
| | | | | | | | E      
| | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | | E    = 1 , num_top_rules = 1 , num_weak_rules = 79 , alphabet_size = 15 , total_length
| | | | | | | | | E    = 748} , self = 111 , parent = Nothing , duration = 3.055892460000 , status
| | | | | | | | | E    = Except "<<timeout>>" , start = 2025-09-03 13:32:58.483281777 UTC , finish
| | | | | | | | | E    = 2025-09-03 13:33:01.539174237 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | | | E    1, False)}
| | | | | | | | | E    
| | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | | | E  = 1 , num_top_rules = 1 , num_weak_rules = 79 , alphabet_size = 15 , total_length
| | | | | | | | | | E  = 748} , self = 128 , parent = Nothing , duration = 3.566178643000 , status
| | | | | | | | | | E  = Except "<<timeout>>" , start = 2025-09-03 13:32:58.503410916 UTC , finish
| | | | | | | | | | E  = 2025-09-03 13:33:02.069589559 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | | E  1, False)}
| | | | | | | | | | E  
| | | | | | S | | | |  
| | | | | |   | E | |  
| | | | | | F |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F |   | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | F |   | |  = 62} , self = 70 , parent = Nothing , duration = 0.136763661000 , status
| | | | | | F |   | |  = Fail , start = 2025-09-03 13:32:58.694603935 UTC , finish = 2025-09-03
| | | | | | F |   | |  13:32:58.831367596 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | | | F |   | |  
| | | | | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | | S | |  = 5 , total_length = 62} , self = 73 , parent = Nothing , duration = 0.314722972000
| | | | | | | | S | |  , status = Success , start = 2025-09-03 13:32:58.775046269 UTC , finish
| | | | | | | | S | |  = 2025-09-03 13:32:59.089769241 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | | S | |  2, False)}
| | | | | | | | S | |  
F | | | | | | | | | |  
  | | | | | F | | | |  
E | | | | |   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | | | |   | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
E | | | | |   | | | |  = 5 , total_length = 62} , self = 75 , parent = Nothing , duration = 0.281858005000
E | | | | |   | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:32:58.843292851
E | | | | |   | | | |  UTC , finish = 2025-09-03 13:32:59.125150856 UTC , thread_cap_info = ("ThreadId
E | | | | |   | | | |  125", 2, False)}
E | | | | |   | | | |  
| S | | | |   | | | |  
|   | | | |   | S | |  
E   | | | |   |   | |  
    | | | |   E   | |  
F   | | | |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | | | |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | | | |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | | | |       | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F   | | | |       | |  = 5 , total_length = 55} , self = 100 , parent = Nothing , duration = 0.443225072000
F   | | | |       | |  , status = Fail , start = 2025-09-03 13:32:59.173281216 UTC , finish =
F   | | | |       | |  2025-09-03 13:32:59.616506288 UTC , thread_cap_info = ("ThreadId 141",
F   | | | |       | |  2, False)}
F   | | | |       | |  
| S | | | |       | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | |       | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | |       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | |       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | |       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | |       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| S | | | |       | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| S | | | |       | |  = 5 , total_length = 55} , self = 105 , parent = Nothing , duration = 2.257099016000
| S | | | |       | |  , status = Success , start = 2025-09-03 13:32:59.203309977 UTC , finish
| S | | | |       | |  = 2025-09-03 13:33:01.460408993 UTC , thread_cap_info = ("ThreadId 143",
| S | | | |       | |  2, False)}
| S | | | |       | |  
| | | | | | S     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | S     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | S     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | S     | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | S     | |  = 46} , self = 93 , parent = Nothing , duration = 0.330272278000 , status
| | | | | | S     | |  = Success , start = 2025-09-03 13:32:59.232643786 UTC , finish = 2025-09-03
| | | | | | S     | |  13:32:59.562916064 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | | | S     | |  
| | | | | | | E   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | E   | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | E   | |  = 46} , self = 95 , parent = Nothing , duration = 0.318579494000 , status
| | | | | | | E   | |  = Except "AsyncCancelled" , start = 2025-09-03 13:32:59.244507615 UTC ,
| | | | | | | E   | |  finish = 2025-09-03 13:32:59.563087109 UTC , thread_cap_info = ("ThreadId
| | | | | | | E   | |  145", 2, False)}
| | | | | | | E   | |  
| | | | | | S |   | |  
| | | | | |   E   | |  
| | | | | | F     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F     | |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F     | |  = 40} , self = 102 , parent = Nothing , duration = 1.023734746000 , status
| | | | | | F     | |  = Fail , start = 2025-09-03 13:32:59.563191571 UTC , finish = 2025-09-03
| | | | | | F     | |  13:33:00.586926317 UTC , thread_cap_info = ("ThreadId 153", 2, False)}
| | | | | | F     | |  
| | | | | | | F   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F   | |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | F   | |  = 40} , self = 101 , parent = Nothing , duration = 0.985420264000 , status
| | | | | | | F   | |  = Fail , start = 2025-09-03 13:32:59.563264104 UTC , finish = 2025-09-03
| | | | | | | F   | |  13:33:00.548684368 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
| | | | | | | F   | |  
F | | | | | | |   | |  
E | | | | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | | | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E | | | | | | |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
E | | | | | | |   | |  = 5 , total_length = 55} , self = 112 , parent = Nothing , duration = 2.101253921000
E | | | | | | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:32:59.61653779
E | | | | | | |   | |  UTC , finish = 2025-09-03 13:33:01.717791711 UTC , thread_cap_info = ("ThreadId
E | | | | | | |   | |  155", 2, False)}
E | | | | | | |   | |  
| | | | | | | F   | |  
| | | | | | F     | |  
| | | | | | S     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S     | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | S     | |  = 4 , total_length = 40} , self = 109 , parent = Nothing , duration = 0.895957593000
| | | | | | S     | |  , status = Success , start = 2025-09-03 13:33:00.605104576 UTC , finish
| | | | | | S     | |  = 2025-09-03 13:33:01.501062169 UTC , thread_cap_info = ("ThreadId 161",
| | | | | | S     | |  2, False)}
| | | | | | S     | |  
| | | | | | | E   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | E   | |  = 4 , total_length = 40} , self = 114 , parent = Nothing , duration = 1.059048330000
| | | | | | | E   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:00.663283943
| | | | | | | E   | |  UTC , finish = 2025-09-03 13:33:01.722332273 UTC , thread_cap_info = ("ThreadId
| | | | | | | E   | |  162", 2, False)}
| | | | | | | E   | |  
| | | | | F | |   | |  
| | | F |   | |   | |  
| S |   |   | |   | |  
|   |   E   | |   | |  
|   E       | |   | |  
|           S |   | |  
|             |   E |  
E             |     |  
              E     |  
F                   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                   |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F                   |  = 5 , total_length = 50} , self = 131 , parent = Nothing , duration = 0.378604095000
F                   |  , status = Fail , start = 2025-09-03 13:33:01.865339219 UTC , finish =
F                   |  2025-09-03 13:33:02.243943314 UTC , thread_cap_info = ("ThreadId 196",
F                   |  2, False)}
F                   |  
| S                 |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S                 |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S                 |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S                 |  = 2 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| S                 |  = 3 , total_length = 15} , self = 129 , parent = Nothing , duration = 0.240566066000
| S                 |  , status = Success , start = 2025-09-03 13:33:01.98576551 UTC , finish
| S                 |  = 2025-09-03 13:33:02.226331576 UTC , thread_cap_info = ("ThreadId 198",
| S                 |  2, False)}
| S                 |  
| | E               |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E               |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E               |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E               |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E               |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E               |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | E               |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | E               |  = 3 , total_length = 15} , self = 132 , parent = Nothing , duration = 0.246879949000
| | E               |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:01.997090502
| | E               |  UTC , finish = 2025-09-03 13:33:02.243970451 UTC , thread_cap_info = ("ThreadId
| | E               |  199", 2, False)}
| | E               |  
| | |               E  
| S |                  
F   |                  
    E                  
