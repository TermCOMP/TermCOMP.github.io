last 1221 length 5114
CNF 1221 vars 5114 clauses
last 1559 length 6410
CNF 1559 vars 6410 clauses
last 1550 length 6461
CNF 1550 vars 6461 clauses
last 1347 length 5545
CNF 1347 vars 5545 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3161, clauses: 11730
last 3161 length 11730
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3861, clauses: 14441
CNF 3161 vars 11730 clauses
last 3861 length 14441
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3161, clauses: 11730, status: Satisfied, time: 0.257263629s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10261, clauses: 42871
last 9783 length 43026
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11600, clauses: 48437
CNF 3861 vars 14441 clauses
last 9495 length 44552
CNF 9783 vars 43026 clauses
last 11600 length 48437
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3861, clauses: 14441, status: Satisfied, time: 0.643564906s
CNF 9495 vars 44552 clauses
last 17101 length 80248
last 1205 length 5023
last 1155 length 4806
last 19340 length 87201
last 22537 length 104172
last 1198 length 4887
last 1156 length 4822
last 23408 length 101691
CNF 1155 vars 4806 clauses
CNF 1205 vars 5023 clauses
CNF 17101 vars 80248 clauses
CNF 19340 vars 87201 clauses
CNF 1198 vars 4887 clauses
CNF 1156 vars 4822 clauses
CNF 22537 vars 104172 clauses
CNF 23408 vars 101691 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2938, clauses: 10750
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3068, clauses: 11334
last 2938 length 10750
last 3068 length 11334
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9680, clauses: 40402
last 9680 length 40402
CNF 3068 vars 11334 clauses
CNF 2938 vars 10750 clauses
CNF 9680 vars 40402 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2938, clauses: 10750, status: Satisfied, time: 0.137384207s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3068, clauses: 11334, status: Satisfied, time: 0.124851035s
last 742 length 3051
CNF 742 vars 3051 clauses
last 730 length 2984
CNF 730 vars 2984 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2039, clauses: 7311
last 2039 length 7311
last 714 length 2956
last 742 length 3051
CNF 2039 vars 7311 clauses
CNF 714 vars 2956 clauses
CNF 742 vars 3051 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7460, clauses: 31105
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19134, clauses: 74876
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2039, clauses: 7311, status: Satisfied, time: 0.634535947s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2039, clauses: 7311
last 7460 length 31105
last 19134 length 74876
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24740, clauses: 100890
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7460, clauses: 31105
last 2039 length 7311
last 24740 length 100890
last 7460 length 31105
**************************************************CNF 19134 vars 74876 clauses
CNF 2039 vars 7311 clauses

CNF 7460 vars 31105 clauses
CNF 24740 vars 100890 clauses
summary
**************************************************
SRS with 4 rules on 3 letters       mirror
SRS with 4 rules on 3 letters       DP
SRS with 13 strict rules and 4 weak rules on 6 letters       weights
SRS with 5 strict rules and 4 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 3 strict rules and 4 weak rules on 5 letters       EDG
  SRS with 3 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 3 letters       EDG

  2 SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, c, b] -> [a, c, b] {- Input 0 -}
  [a, c, b, a] -> [b, c, c] {- Input 1 -}
  [b, a, c] -> [a, b, c, a] {- Input 2 -}
  [b, c, a] -> [c, a, b] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c, c] -> [b, c, a] {- Mirror (Input 0) -}
  [a, b, c, a] -> [c, c, b] {- Mirror (Input 1) -}
  [c, a, b] -> [a, c, b, a] {- Mirror (Input 2) -}
  [a, c, b] -> [b, a, c] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
  [a#, b, c, a] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, b, c, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#, b, c, a] |-> [c#, c, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, c, b] |-> [a#, c] {- DP (Top 1) (Mirror (Input 3)) -}
  [a#, c, b] |-> [b#, a, c] {- DP (Top 0) (Mirror (Input 3)) -}
  [a#, c, b] |-> [c#] {- DP (Top 2) (Mirror (Input 3)) -}
  [b#, c, c] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c, c] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, c] |-> [c#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [c#, a, b] |-> [a#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, a, b] |-> [a#, c, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, b] |-> [b#, a] {- DP (Top 2) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, b, a] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 2/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
  [a#, b, c, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#, b, c, a] |-> [c#, c, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, c, c] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a, b] |-> [a#, c, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, b] |-> [c#, b, a] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, b] |-> [a#, c, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, b, c, a] |-> [c#, c, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, b] |-> [c#, b, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 9A 12A 12A - \
        | 9A 12A 12A - |
        | 9A 9A  12A - |
        \ -  -   -   - / )
  ( c
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 9A 12A 12A - \
        | 9A 12A 12A - |
        | 9A 12A 12A - |
        \ -  -   -   - / )
  ( c#
  , Wk  / 9A 9A 11A - \
        | 9A 9A 11A - |
        | 9A 9A 11A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, c, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, b] |-> [a#, c, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, b, c, a] |-> [c#, c, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, b] |-> [a#, c, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, b, c, a] |-> [c#, c, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 10A 10A 13A - \
        | 10A 10A 13A - |
        | 10A 10A 13A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, c, c] |-> [b#, c, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 2A 3A - \
        | 1A 2A 3A - |
        | 1A 2A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b, c, c] ->= [b, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, c, a] ->= [c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, a, b] ->= [a, c, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(4,3)\Deepee(13/4,6)\Weight(5/4,6)\EDG[(4/4,5)\Matrix{\Arctic}{3}\EDG(3/4,5)\Matrix{\Arctic}{3}(0/4,3)\EDG[],(1/4,4)\Matrix{\Arctic}{3}(0/4,3)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19134, clauses: 74876, status: Satisfied, time: 0.184179584s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.861945682000
  min duration 0.038017534000
  total durat. 5.907994984000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 36
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 306}
    , self = 68
    , parent = Nothing
    , duration = 1.122385530000
    , status = Fail
    , start = 2025-09-03 13:39:21.602439813 UTC
    , finish = 2025-09-03 13:39:22.724825343 UTC
    , thread_cap_info = ("ThreadId 87", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 36
      , alphabet_size = 13
      , total_length = 510}
    , self = 82
    , parent = Nothing
    , duration = 1.385372369000
    , status = Fail
    , start = 2025-09-03 13:39:21.721129453 UTC
    , finish = 2025-09-03 13:39:23.106501822 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 48
      , num_top_rules = 48
      , num_weak_rules = 36
      , alphabet_size = 15
      , total_length = 678}
    , self = 84
    , parent = Nothing
    , duration = 1.861945682000
    , status = Fail
    , start = 2025-09-03 13:39:21.613806408 UTC
    , finish = 2025-09-03 13:39:23.47575209 UTC
    , thread_cap_info = ("ThreadId 94", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.787673750000
  min duration 0.060500410000
  total durat. 5.916532422000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 36
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 306}
    , self = 76
    , parent = Nothing
    , duration = 1.275672393000
    , status = Fail
    , start = 2025-09-03 13:39:21.621270764 UTC
    , finish = 2025-09-03 13:39:22.896943157 UTC
    , thread_cap_info = ("ThreadId 89", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 24
      , num_top_rules = 24
      , num_weak_rules = 36
      , alphabet_size = 13
      , total_length = 510}
    , self = 79
    , parent = Nothing
    , duration = 1.337767171000
    , status = Fail
    , start = 2025-09-03 13:39:21.741130903 UTC
    , finish = 2025-09-03 13:39:23.078898074 UTC
    , thread_cap_info = ("ThreadId 106", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 48
      , num_top_rules = 48
      , num_weak_rules = 36
      , alphabet_size = 15
      , total_length = 678}
    , self = 83
    , parent = Nothing
    , duration = 1.787673750000
    , status = Fail
    , start = 2025-09-03 13:39:21.621269114 UTC
    , finish = 2025-09-03 13:39:23.408942864 UTC
    , thread_cap_info = ("ThreadId 95", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.153847215000
  min duration 0.439848617000
  total durat. 3.683990055000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 67}
    , self = 71
    , parent = Nothing
    , duration = 1.153847215000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:21.688263039 UTC
    , finish = 2025-09-03 13:39:22.842110254 UTC
    , thread_cap_info = ("ThreadId 102", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.213412157000
  min duration 0.468172509000
  total durat. 3.713411859000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 67}
    , self = 69
    , parent = Nothing
    , duration = 1.213412157000
    , status = Success
    , start = 2025-09-03 13:39:21.611422098 UTC
    , finish = 2025-09-03 13:39:22.824834255 UTC
    , thread_cap_info = ("ThreadId 96", 1, False)}
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 26} , self = 60 , parent = Nothing , duration = 0.436914821000 , status
F                      = Fail , start = 2025-09-03 13:39:21.524603448 UTC , finish = 2025-09-03
F                      13:39:21.961518269 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                      
| F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                    = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                    = 26} , self = 57 , parent = Nothing , duration = 0.207025502000 , status
| F                    = Fail , start = 2025-09-03 13:39:21.524717481 UTC , finish = 2025-09-03
| F                    13:39:21.731742983 UTC , thread_cap_info = ("ThreadId 47", 2, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                  = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | F                  = 52} , self = 53 , parent = Nothing , duration = 0.136126067000 , status
| | F                  = Fail , start = 2025-09-03 13:39:21.535738194 UTC , finish = 2025-09-03
| | F                  13:39:21.671864261 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 306} , self = 68 , parent = Nothing , duration = 1.122385530000 , status
| | | F                = Fail , start = 2025-09-03 13:39:21.602439813 UTC , finish = 2025-09-03
| | | F                13:39:22.724825343 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | F                
| | | | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S              = 11 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 4 ,
| | | | S              alphabet_size = 6 , total_length = 67} , self = 69 , parent = Nothing ,
| | | | S              duration = 1.213412157000 , status = Success , start = 2025-09-03 13:39:21.611422098
| | | | S              UTC , finish = 2025-09-03 13:39:22.824834255 UTC , thread_cap_info = ("ThreadId
| | | | S              96", 1, False)}
| | | | S              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | F            = 48 , num_top_rules = 48 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | | F            total_length = 678} , self = 84 , parent = Nothing , duration = 1.861945682000
| | | | | F            , status = Fail , start = 2025-09-03 13:39:21.613806408 UTC , finish =
| | | | | F            2025-09-03 13:39:23.47575209 UTC , thread_cap_info = ("ThreadId 94", 0,
| | | | | F            False)}
| | | | | F            
| | | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S          = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | S          = 5 , total_length = 52} , self = 61 , parent = Nothing , duration = 0.567553370000
| | | | | | S          , status = Success , start = 2025-09-03 13:39:21.615037129 UTC , finish
| | | | | | S          = 2025-09-03 13:39:22.182590499 UTC , thread_cap_info = ("ThreadId 97",
| | | | | | S          1, False)}
| | | | | | S          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | | | F        = 48 , num_top_rules = 48 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | | | | F        total_length = 678} , self = 83 , parent = Nothing , duration = 1.787673750000
| | | | | | | F        , status = Fail , start = 2025-09-03 13:39:21.621269114 UTC , finish =
| | | | | | | F        2025-09-03 13:39:23.408942864 UTC , thread_cap_info = ("ThreadId 95", 0,
| | | | | | | F        False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | F      = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | | F      = 306} , self = 76 , parent = Nothing , duration = 1.275672393000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 13:39:21.621270764 UTC , finish = 2025-09-03
| | | | | | | | F      13:39:22.896943157 UTC , thread_cap_info = ("ThreadId 89", 3, False)}
| | | | | | | | F      
| | F | | | | | |      
| | E | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E | | | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | E | | | | | |      = 5 , total_length = 52} , self = 63 , parent = Nothing , duration = 0.638754949000
| | E | | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:21.682363813
| | E | | | | | |      UTC , finish = 2025-09-03 13:39:22.321118762 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |      101", 1, False)}
| | E | | | | | |      
| | | | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | | | E    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | E    = 6 , total_length = 67} , self = 71 , parent = Nothing , duration = 1.153847215000
| | | | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:21.688263039
| | | | | | | | | E    UTC , finish = 2025-09-03 13:39:22.842110254 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E    102", 1, False)}
| | | | | | | | | E    
| | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | F  = 24 , num_top_rules = 24 , num_weak_rules = 36 , alphabet_size = 13 ,
| | | | | | | | | | F  total_length = 510} , self = 82 , parent = Nothing , duration = 1.385372369000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 13:39:21.721129453 UTC , finish =
| | | | | | | | | | F  2025-09-03 13:39:23.106501822 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | | | F  0, False)}
| | | | | | | | | | F  
| F | | | | | | | | |  
| F | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| F | | | | | | | | |  = 24 , num_top_rules = 24 , num_weak_rules = 36 , alphabet_size = 13 ,
| F | | | | | | | | |  total_length = 510} , self = 79 , parent = Nothing , duration = 1.337767171000
| F | | | | | | | | |  , status = Fail , start = 2025-09-03 13:39:21.741130903 UTC , finish =
| F | | | | | | | | |  2025-09-03 13:39:23.078898074 UTC , thread_cap_info = ("ThreadId 106",
| F | | | | | | | | |  0, False)}
| F | | | | | | | | |  
F | | | | | | | | | |  
  | | | | | S | | | |  
  | E | | |   | | | |  
F |   | | |   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | | |   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F |   | | |   | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
F |   | | |   | | | |  = 46} , self = 77 , parent = Nothing , duration = 0.336399376000 , status
F |   | | |   | | | |  = Fail , start = 2025-09-03 13:39:22.635129882 UTC , finish = 2025-09-03
F |   | | |   | | | |  13:39:22.971529258 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
F |   | | |   | | | |  
| | F | | |   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | | |   | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | F | | |   | | | |  = 46} , self = 78 , parent = Nothing , duration = 0.383614107000 , status
| | F | | |   | | | |  = Fail , start = 2025-09-03 13:39:22.64112603 UTC , finish = 2025-09-03
| | F | | |   | | | |  13:39:23.024740137 UTC , thread_cap_info = ("ThreadId 120", 1, False)}
| | F | | |   | | | |  
| | | F | |   | | | |  
| | |   S |   | | | |  
| | |     |   | | E |  
| | | F   |   | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |   | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F   |   | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | F   |   | |   |  = 51} , self = 80 , parent = Nothing , duration = 0.236435773000 , status
| | | F   |   | |   |  = Fail , start = 2025-09-03 13:39:22.842475917 UTC , finish = 2025-09-03
| | | F   |   | |   |  13:39:23.07891169 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| | | F   |   | |   |  
| | | | F |   | |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |   | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F |   | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | F |   | |   |  = 51} , self = 81 , parent = Nothing , duration = 0.221003726000 , status
| | | | F |   | |   |  = Fail , start = 2025-09-03 13:39:22.85791436 UTC , finish = 2025-09-03
| | | | F |   | |   |  13:39:23.078918086 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | | F |   | |   |  
| | | | | |   | F   |  
F | | | | |   |     |  
S | | | | |   |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | |   |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | |   |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | |   |     |  = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
S | | | | |   |     |  = 5 , total_length = 46} , self = 85 , parent = Nothing , duration = 0.516929004000
S | | | | |   |     |  , status = Success , start = 2025-09-03 13:39:22.97198503 UTC , finish
S | | | | |   |     |  = 2025-09-03 13:39:23.488914034 UTC , thread_cap_info = ("ThreadId 138",
S | | | | |   |     |  1, False)}
S | | | | |   |     |  
| | F | | |   |     |  
| | E | | |   |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | |   |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |   |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |   |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |   |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |   |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E | | |   |     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | E | | |   |     |  = 5 , total_length = 46} , self = 87 , parent = Nothing , duration = 0.439848617000
| | E | | |   |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:23.062964911
| | E | | |   |     |  UTC , finish = 2025-09-03 13:39:23.502813528 UTC , thread_cap_info = ("ThreadId
| | E | | |   |     |  139", 0, False)}
| | E | | |   |     |  
| F | | | |   |     |  
|   | F | |   |     |  
|   |   F |   |     |  
| E |     |   |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |     |   |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |     |   |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |     |   |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     |   |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     |   |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E |     |   |     |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| E |     |   |     |  = 5 , total_length = 51} , self = 94 , parent = Nothing , duration = 0.626825382000
| E |     |   |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:23.078937724
| E |     |   |     |  UTC , finish = 2025-09-03 13:39:23.705763106 UTC , thread_cap_info = ("ThreadId
| E |     |   |     |  141", 1, False)}
| E |     |   |     |  
| | | S   |   |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   |   |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   |   |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   |   |     |  = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | S   |   |     |  = 5 , total_length = 51} , self = 88 , parent = Nothing , duration = 0.468172509000
| | | S   |   |     |  , status = Success , start = 2025-09-03 13:39:23.082156733 UTC , finish
| | | S   |   |     |  = 2025-09-03 13:39:23.550329242 UTC , thread_cap_info = ("ThreadId 140",
| | | S   |   |     |  1, False)}
| | | S   |   |     |  
| | | |   |   |     F  
| | | |   |   F        
| | | |   F            
S | | |                
  | E |                
  |   S                
  E                    
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F                      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                      = 32} , self = 97 , parent = Nothing , duration = 0.121778123000 , status
F                      = Fail , start = 2025-09-03 13:39:23.724689955 UTC , finish = 2025-09-03
F                      13:39:23.846468078 UTC , thread_cap_info = ("ThreadId 154", 1, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                    = 32} , self = 100 , parent = Nothing , duration = 0.191963877000 , status
| F                    = Fail , start = 2025-09-03 13:39:23.734062446 UTC , finish = 2025-09-03
| F                    13:39:23.926026323 UTC , thread_cap_info = ("ThreadId 155", 1, False)}
| F                    
F |                    
S |                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |                    = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
S |                    = 4 , total_length = 32} , self = 103 , parent = Nothing , duration = 0.947344819000
S |                    , status = Success , start = 2025-09-03 13:39:23.861171074 UTC , finish
S |                    = 2025-09-03 13:39:24.808515893 UTC , thread_cap_info = ("ThreadId 160",
S |                    1, False)}
S |                    
| F                    
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                    = 32} , self = 102 , parent = Nothing , duration = 0.669534530000 , status
| F                    = Fail , start = 2025-09-03 13:39:23.938245302 UTC , finish = 2025-09-03
| F                    13:39:24.607779832 UTC , thread_cap_info = ("ThreadId 162", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                  = 32} , self = 101 , parent = Nothing , duration = 0.560593050000 , status
| | F                  = Fail , start = 2025-09-03 13:39:23.942089013 UTC , finish = 2025-09-03
| | F                  13:39:24.502682063 UTC , thread_cap_info = ("ThreadId 163", 1, False)}
| | F                  
| | | E                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | E                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | E                = 4 , total_length = 32} , self = 105 , parent = Nothing , duration = 0.824713892000
| | | E                , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:23.983899515
| | | E                UTC , finish = 2025-09-03 13:39:24.808613407 UTC , thread_cap_info = ("ThreadId
| | | E                166", 1, False)}
| | | E                
| | F |                
| F   |                
S     |                
      E                
