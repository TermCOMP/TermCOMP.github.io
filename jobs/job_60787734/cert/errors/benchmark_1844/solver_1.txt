last 810 length 3147
last 810 length 3147
last 958 length 3931
last 958 length 3931
CNF 810 vars 3147 clauses
CNF 810 vars 3147 clauses
CNF 958 vars 3931 clauses
CNF 958 vars 3931 clauses
**************************************************
summary
**************************************************
SRS with 4 rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 64 rules on 16 letters       weights
SRS with 28 rules on 14 letters       DP
SRS with 44 strict rules and 28 weak rules on 20 letters       weights
SRS with 0 strict rules and 28 weak rules on 14 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [A, b] -> [b, a, B, A] {- Input 0 -}
  [B, a] -> [a, b, A, B] {- Input 1 -}
  [A, a] -> [] {- Input 2 -}
  [B, b] -> [] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[A, A], [A, b], [b, A]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[A, A], [A, b], [b, b]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[A, A], [A, b], [b, a]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[A, A], [A, b], [b, B]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, B] ] {- Semlab 0 (Concon 3 (Input 0)) -}
  [[b, A], [A, b], [b, A]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, A], [A, b], [b, b]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, A], [A, b], [b, a]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[b, A], [A, b], [b, B]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, B] ] {- Semlab 1 (Concon 3 (Input 0)) -}
  [[a, A], [A, b], [b, A]] -> [ [a, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[a, A], [A, b], [b, b]] -> [ [a, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, A], [A, b], [b, a]] -> [ [a, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, A], [A, b], [b, B]] -> [ [a, b] , [b, a] , [a, B] , [B, A] , [A, B] ] {- Semlab 2 (Concon 3 (Input 0)) -}
  [[B, A], [A, b], [b, A]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[B, A], [A, b], [b, b]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[B, A], [A, b], [b, a]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[B, A], [A, b], [b, B]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, B] ] {- Semlab 3 (Concon 3 (Input 0)) -}
  [[A, B], [B, a], [a, A]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, A] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[A, B], [B, a], [a, b]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[A, B], [B, a], [a, a]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[A, B], [B, a], [a, B]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[b, B], [B, a], [a, A]] -> [ [b, a] , [a, b] , [b, A] , [A, B] , [B, A] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, B], [B, a], [a, b]] -> [ [b, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, B], [B, a], [a, a]] -> [ [b, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[b, B], [B, a], [a, B]] -> [ [b, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[a, B], [B, a], [a, A]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, A] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[a, B], [B, a], [a, b]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[a, B], [B, a], [a, a]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, B], [B, a], [a, B]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[B, B], [B, a], [a, A]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, A] ] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[B, B], [B, a], [a, b]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[B, B], [B, a], [a, a]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[B, B], [B, a], [a, B]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[A, A], [A, a], [a, A]] -> [[A, A]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[A, A], [A, a], [a, b]] -> [[A, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[A, A], [A, a], [a, a]] -> [[A, a]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[A, A], [A, a], [a, B]] -> [[A, B]] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[b, A], [A, a], [a, A]] -> [[b, A]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, A], [A, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, A], [A, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[b, A], [A, a], [a, B]] -> [[b, B]] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[a, A], [A, a], [a, A]] -> [[a, A]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, A], [A, a], [a, b]] -> [[a, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, A], [A, a], [a, a]] -> [[a, a]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, A], [A, a], [a, B]] -> [[a, B]] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[B, A], [A, a], [a, A]] -> [[B, A]] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[B, A], [A, a], [a, b]] -> [[B, b]] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[B, A], [A, a], [a, a]] -> [[B, a]] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[B, A], [A, a], [a, B]] -> [[B, B]] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[A, B], [B, b], [b, A]] -> [[A, A]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[A, B], [B, b], [b, b]] -> [[A, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[A, B], [B, b], [b, a]] -> [[A, a]] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[A, B], [B, b], [b, B]] -> [[A, B]] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[b, B], [B, b], [b, A]] -> [[b, A]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, B], [B, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, B], [B, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[b, B], [B, b], [b, B]] -> [[b, B]] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, B], [B, b], [b, A]] -> [[a, A]] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, B], [B, b], [b, b]] -> [[a, b]] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, B], [B, b], [b, a]] -> [[a, a]] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, B], [B, b], [b, B]] -> [[a, B]] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[B, B], [B, b], [b, A]] -> [[B, A]] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[B, B], [B, b], [b, b]] -> [[B, b]] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[B, B], [B, b], [b, a]] -> [[B, a]] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[B, B], [B, b], [b, B]] -> [[B, B]] {- Semlab 3 (Concon 3 (Input 3)) -}
reason
  ([a, a], 3/2)
  ([a, B], 5/4)
  ([a, b], 0/1)
  ([a, A], 3/4)
  ([B, a], 7/4)
  ([B, B], 3/2)
  ([B, b], 1/4)
  ([B, A], 0/1)
  ([b, a], 0/1)
  ([b, B], 3/4)
  ([b, b], 3/2)
  ([b, A], 5/4)
  ([A, a], 1/4)
  ([A, B], 0/1)
  ([A, b], 7/4)
  ([A, A], 3/2)
   property Termination
has value Just True
for SRS
  [[A, A], [A, b], [b, A]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[A, A], [A, b], [b, b]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[A, A], [A, b], [b, a]] -> [ [A, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, A], [A, b], [b, A]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, A], [A, b], [b, b]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, A], [A, b], [b, a]] -> [ [b, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[B, A], [A, b], [b, A]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, A] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[B, A], [A, b], [b, b]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, b] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[B, A], [A, b], [b, a]] -> [ [B, b] , [b, a] , [a, B] , [B, A] , [A, a] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[A, B], [B, a], [a, b]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[A, B], [B, a], [a, a]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[A, B], [B, a], [a, B]] -> [ [A, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[a, B], [B, a], [a, b]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[a, B], [B, a], [a, a]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, B], [B, a], [a, B]] -> [ [a, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[B, B], [B, a], [a, b]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, b] ] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[B, B], [B, a], [a, a]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, a] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[B, B], [B, a], [a, B]] -> [ [B, a] , [a, b] , [b, A] , [A, B] , [B, B] ] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[A, A], [A, a], [a, b]] -> [[A, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, A], [A, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[B, A], [A, a], [a, b]] -> [[B, b]] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[B, A], [A, a], [a, a]] -> [[B, a]] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[B, A], [A, a], [a, B]] -> [[B, B]] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[A, B], [B, b], [b, A]] -> [[A, A]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[A, B], [B, b], [b, b]] -> [[A, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[A, B], [B, b], [b, a]] -> [[A, a]] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[a, B], [B, b], [b, a]] -> [[a, a]] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[B, B], [B, b], [b, a]] -> [[B, a]] {- Semlab 3 (Concon 2 (Input 3)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[A, A], [A, b], [b, A]] ->= [ [A, b] , [b, a] , [a, B] , [B, A] , [ A , A ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[A, A], [A, b], [b, b]] ->= [ [A, b] , [b, a] , [a, B] , [B, A] , [ A , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[A, A], [A, b], [b, a]] ->= [ [A, b] , [b, a] , [a, B] , [B, A] , [ A , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, A], [A, b], [b, A]] ->= [ [b, b] , [b, a] , [a, B] , [B, A] , [ A , A ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, A], [A, b], [b, b]] ->= [ [b, b] , [b, a] , [a, B] , [B, A] , [ A , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, A], [A, b], [b, a]] ->= [ [b, b] , [b, a] , [a, B] , [B, A] , [ A , a ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[B, A], [A, b], [b, A]] ->= [ [B, b] , [b, a] , [a, B] , [B, A] , [ A , A ] ] {- DP Nontop (Semlab 3 (Concon 0 (Input 0))) -}
  [[B, A], [A, b], [b, b]] ->= [ [B, b] , [b, a] , [a, B] , [B, A] , [ A , b ] ] {- DP Nontop (Semlab 3 (Concon 1 (Input 0))) -}
  [[B, A], [A, b], [b, a]] ->= [ [B, b] , [b, a] , [a, B] , [B, A] , [ A , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 0))) -}
  [[A, B], [B, a], [a, b]] ->= [ [A, a] , [a, b] , [b, A] , [A, B] , [ B , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[A, B], [B, a], [a, a]] ->= [ [A, a] , [a, b] , [b, A] , [A, B] , [ B , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[A, B], [B, a], [a, B]] ->= [ [A, a] , [a, b] , [b, A] , [A, B] , [ B , B ] ] {- DP Nontop (Semlab 0 (Concon 3 (Input 1))) -}
  [[a, B], [B, a], [a, b]] ->= [ [a, a] , [a, b] , [b, A] , [A, B] , [ B , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, B], [B, a], [a, a]] ->= [ [a, a] , [a, b] , [b, A] , [A, B] , [ B , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, B], [B, a], [a, B]] ->= [ [a, a] , [a, b] , [b, A] , [A, B] , [ B , B ] ] {- DP Nontop (Semlab 2 (Concon 3 (Input 1))) -}
  [[B, B], [B, a], [a, b]] ->= [ [B, a] , [a, b] , [b, A] , [A, B] , [ B , b ] ] {- DP Nontop (Semlab 3 (Concon 1 (Input 1))) -}
  [[B, B], [B, a], [a, a]] ->= [ [B, a] , [a, b] , [b, A] , [A, B] , [ B , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 1))) -}
  [[B, B], [B, a], [a, B]] ->= [ [B, a] , [a, b] , [b, A] , [A, B] , [ B , B ] ] {- DP Nontop (Semlab 3 (Concon 3 (Input 1))) -}
  [[A, A], [A, a], [a, b]] ->= [ [ A , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, A], [A, a], [a, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[B, A], [A, a], [a, b]] ->= [ [ B , b ] ] {- DP Nontop (Semlab 3 (Concon 1 (Input 2))) -}
  [[B, A], [A, a], [a, a]] ->= [ [ B , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 2))) -}
  [[B, A], [A, a], [a, B]] ->= [ [ B , B ] ] {- DP Nontop (Semlab 3 (Concon 3 (Input 2))) -}
  [[A, B], [B, b], [b, A]] ->= [ [ A , A ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 3))) -}
  [[A, B], [B, b], [b, b]] ->= [ [ A , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 3))) -}
  [[A, B], [B, b], [b, a]] ->= [ [ A , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 3))) -}
  [[a, B], [B, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 3))) -}
  [[B, B], [B, b], [b, a]] ->= [ [ B , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 3))) -}
  [[a, B]#, [B, a], [a, a]] |-> [ [b, A]# , [A, B] , [ B , a ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, B]#, [B, a], [a, a]] |-> [ [A, B]# , [ B , a ] ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, B]#, [B, a], [a, B]] |-> [ [ B , B ]# ] {- DP (Top 4) (Semlab 2 (Concon 3 (Input 1))) -}
  [[a, B]#, [B, a], [a, B]] |-> [ [b, A]# , [A, B] , [ B , B ] ] {- DP (Top 2) (Semlab 2 (Concon 3 (Input 1))) -}
  [[a, B]#, [B, a], [a, B]] |-> [ [A, B]# , [ B , B ] ] {- DP (Top 3) (Semlab 2 (Concon 3 (Input 1))) -}
  [[a, B]#, [B, a], [a, b]] |-> [ [b, A]# , [A, B] , [ B , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, B]#, [B, a], [a, b]] |-> [ [A, B]# , [ B , b ] ] {- DP (Top 3) (Semlab 2 (Concon 1 (Input 1))) -}
  [[B, B]#, [B, a], [a, a]] |-> [ [b, A]# , [A, B] , [ B , a ] ] {- DP (Top 2) (Semlab 3 (Concon 2 (Input 1))) -}
  [[B, B]#, [B, a], [a, a]] |-> [ [A, B]# , [ B , a ] ] {- DP (Top 3) (Semlab 3 (Concon 2 (Input 1))) -}
  [[B, B]#, [B, a], [a, B]] |-> [ [ B , B ]# ] {- DP (Top 4) (Semlab 3 (Concon 3 (Input 1))) -}
  [[B, B]#, [B, a], [a, B]] |-> [ [b, A]# , [A, B] , [ B , B ] ] {- DP (Top 2) (Semlab 3 (Concon 3 (Input 1))) -}
  [[B, B]#, [B, a], [a, B]] |-> [ [A, B]# , [ B , B ] ] {- DP (Top 3) (Semlab 3 (Concon 3 (Input 1))) -}
  [[B, B]#, [B, a], [a, b]] |-> [ [b, A]# , [A, B] , [ B , b ] ] {- DP (Top 2) (Semlab 3 (Concon 1 (Input 1))) -}
  [[B, B]#, [B, a], [a, b]] |-> [ [A, B]# , [ B , b ] ] {- DP (Top 3) (Semlab 3 (Concon 1 (Input 1))) -}
  [[B, A]#, [A, a], [a, B]] |-> [ [ B , B ]# ] {- DP (Top 0) (Semlab 3 (Concon 3 (Input 2))) -}
  [[B, A]#, [A, b], [b, a]] |-> [ [a, B]# , [B, A] , [ A , a ] ] {- DP (Top 2) (Semlab 3 (Concon 2 (Input 0))) -}
  [[B, A]#, [A, b], [b, a]] |-> [ [B, A]# , [ A , a ] ] {- DP (Top 3) (Semlab 3 (Concon 2 (Input 0))) -}
  [[B, A]#, [A, b], [b, b]] |-> [ [a, B]# , [B, A] , [ A , b ] ] {- DP (Top 2) (Semlab 3 (Concon 1 (Input 0))) -}
  [[B, A]#, [A, b], [b, b]] |-> [ [B, A]# , [ A , b ] ] {- DP (Top 3) (Semlab 3 (Concon 1 (Input 0))) -}
  [[B, A]#, [A, b], [b, A]] |-> [ [a, B]# , [B, A] , [ A , A ] ] {- DP (Top 2) (Semlab 3 (Concon 0 (Input 0))) -}
  [[B, A]#, [A, b], [b, A]] |-> [ [B, A]# , [ A , A ] ] {- DP (Top 3) (Semlab 3 (Concon 0 (Input 0))) -}
  [[B, A]#, [A, b], [b, A]] |-> [ [ A , A ]# ] {- DP (Top 4) (Semlab 3 (Concon 0 (Input 0))) -}
  [[b, A]#, [A, b], [b, a]] |-> [ [a, B]# , [B, A] , [ A , a ] ] {- DP (Top 2) (Semlab 1 (Concon 2 (Input 0))) -}
  [[b, A]#, [A, b], [b, a]] |-> [ [B, A]# , [ A , a ] ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 0))) -}
  [[b, A]#, [A, b], [b, b]] |-> [ [a, B]# , [B, A] , [ A , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, A]#, [A, b], [b, b]] |-> [ [B, A]# , [ A , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, A]#, [A, b], [b, A]] |-> [ [a, B]# , [B, A] , [ A , A ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, A]#, [A, b], [b, A]] |-> [ [B, A]# , [ A , A ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, A]#, [A, b], [b, A]] |-> [ [ A , A ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[A, B]#, [B, a], [a, a]] |-> [ [b, A]# , [A, B] , [ B , a ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 1))) -}
  [[A, B]#, [B, a], [a, a]] |-> [ [A, B]# , [ B , a ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 1))) -}
  [[A, B]#, [B, a], [a, B]] |-> [ [ B , B ]# ] {- DP (Top 4) (Semlab 0 (Concon 3 (Input 1))) -}
  [[A, B]#, [B, a], [a, B]] |-> [ [b, A]# , [A, B] , [ B , B ] ] {- DP (Top 2) (Semlab 0 (Concon 3 (Input 1))) -}
  [[A, B]#, [B, a], [a, B]] |-> [ [A, B]# , [ B , B ] ] {- DP (Top 3) (Semlab 0 (Concon 3 (Input 1))) -}
  [[A, B]#, [B, a], [a, b]] |-> [ [b, A]# , [A, B] , [ B , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[A, B]#, [B, a], [a, b]] |-> [ [A, B]# , [ B , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[A, B]#, [B, b], [b, A]] |-> [ [ A , A ]# ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 3))) -}
  [[A, A]#, [A, b], [b, a]] |-> [ [a, B]# , [B, A] , [ A , a ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 0))) -}
  [[A, A]#, [A, b], [b, a]] |-> [ [B, A]# , [ A , a ] ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 0))) -}
  [[A, A]#, [A, b], [b, b]] |-> [ [a, B]# , [B, A] , [ A , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[A, A]#, [A, b], [b, b]] |-> [ [B, A]# , [ A , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [[A, A]#, [A, b], [b, A]] |-> [ [a, B]# , [B, A] , [ A , A ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[A, A]#, [A, b], [b, A]] |-> [ [B, A]# , [ A , A ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [[A, A]#, [A, b], [b, A]] |-> [ [ A , A ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
reason
  ([a, a], 2/1)
  ([a, B], 2/1)
  ([a, b], 0/1)
  ([B, a], 2/1)
  ([B, B], 2/1)
  ([B, b], 0/1)
  ([B, A], 0/1)
  ([b, a], 0/1)
  ([b, b], 2/1)
  ([b, A], 2/1)
  ([A, a], 0/1)
  ([A, B], 0/1)
  ([A, b], 2/1)
  ([A, A], 2/1)
  ([a, B]#, 0/1)
  ([B, B]#, 2/1)
  ([B, A]#, 1/1)
  ([b, A]#, 0/1)
  ([A, B]#, 1/1)
  ([A, A]#, 2/1)
   property Termination
has value Just True
for SRS
  [[A, A], [A, b], [b, A]] ->= [ [A, b] , [b, a] , [a, B] , [B, A] , [ A , A ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[A, A], [A, b], [b, b]] ->= [ [A, b] , [b, a] , [a, B] , [B, A] , [ A , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[A, A], [A, b], [b, a]] ->= [ [A, b] , [b, a] , [a, B] , [B, A] , [ A , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, A], [A, b], [b, A]] ->= [ [b, b] , [b, a] , [a, B] , [B, A] , [ A , A ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, A], [A, b], [b, b]] ->= [ [b, b] , [b, a] , [a, B] , [B, A] , [ A , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, A], [A, b], [b, a]] ->= [ [b, b] , [b, a] , [a, B] , [B, A] , [ A , a ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 0))) -}
  [[B, A], [A, b], [b, A]] ->= [ [B, b] , [b, a] , [a, B] , [B, A] , [ A , A ] ] {- DP Nontop (Semlab 3 (Concon 0 (Input 0))) -}
  [[B, A], [A, b], [b, b]] ->= [ [B, b] , [b, a] , [a, B] , [B, A] , [ A , b ] ] {- DP Nontop (Semlab 3 (Concon 1 (Input 0))) -}
  [[B, A], [A, b], [b, a]] ->= [ [B, b] , [b, a] , [a, B] , [B, A] , [ A , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 0))) -}
  [[A, B], [B, a], [a, b]] ->= [ [A, a] , [a, b] , [b, A] , [A, B] , [ B , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[A, B], [B, a], [a, a]] ->= [ [A, a] , [a, b] , [b, A] , [A, B] , [ B , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[A, B], [B, a], [a, B]] ->= [ [A, a] , [a, b] , [b, A] , [A, B] , [ B , B ] ] {- DP Nontop (Semlab 0 (Concon 3 (Input 1))) -}
  [[a, B], [B, a], [a, b]] ->= [ [a, a] , [a, b] , [b, A] , [A, B] , [ B , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, B], [B, a], [a, a]] ->= [ [a, a] , [a, b] , [b, A] , [A, B] , [ B , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, B], [B, a], [a, B]] ->= [ [a, a] , [a, b] , [b, A] , [A, B] , [ B , B ] ] {- DP Nontop (Semlab 2 (Concon 3 (Input 1))) -}
  [[B, B], [B, a], [a, b]] ->= [ [B, a] , [a, b] , [b, A] , [A, B] , [ B , b ] ] {- DP Nontop (Semlab 3 (Concon 1 (Input 1))) -}
  [[B, B], [B, a], [a, a]] ->= [ [B, a] , [a, b] , [b, A] , [A, B] , [ B , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 1))) -}
  [[B, B], [B, a], [a, B]] ->= [ [B, a] , [a, b] , [b, A] , [A, B] , [ B , B ] ] {- DP Nontop (Semlab 3 (Concon 3 (Input 1))) -}
  [[A, A], [A, a], [a, b]] ->= [ [ A , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, A], [A, a], [a, b]] ->= [ [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[B, A], [A, a], [a, b]] ->= [ [ B , b ] ] {- DP Nontop (Semlab 3 (Concon 1 (Input 2))) -}
  [[B, A], [A, a], [a, a]] ->= [ [ B , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 2))) -}
  [[B, A], [A, a], [a, B]] ->= [ [ B , B ] ] {- DP Nontop (Semlab 3 (Concon 3 (Input 2))) -}
  [[A, B], [B, b], [b, A]] ->= [ [ A , A ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 3))) -}
  [[A, B], [B, b], [b, b]] ->= [ [ A , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 3))) -}
  [[A, B], [B, b], [b, a]] ->= [ [ A , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 3))) -}
  [[a, B], [B, b], [b, a]] ->= [ [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 3))) -}
  [[B, B], [B, b], [b, a]] ->= [ [ B , a ] ] {- DP Nontop (Semlab 3 (Concon 2 (Input 3))) -}
reason
  EDG

**************************************************
skeleton: (4,4)\TileAllAll{2}(64,16)\Weight(28,14)\Deepee(44/28,20)\Weight(0/28,14)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3750, clauses: 13409
last 3750 length 13409
CNF 3750 vars 13409 clauses
last 5859 length 32511
CNF 5859 vars 32511 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3750, clauses: 13409
last 3750 length 13409
CNF 3750 vars 13409 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
   
