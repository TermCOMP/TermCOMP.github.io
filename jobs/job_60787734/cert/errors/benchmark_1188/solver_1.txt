last 479 length 1889
last 568 length 2303
last 535 length 2217
CNF 479 vars 1889 clauses
CNF 535 vars 2217 clauses
last 415 length 1657
CNF 415 vars 1657 clauses
CNF 568 vars 2303 clauses
last 3395 length 14635
CNF 3395 vars 14635 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2258, clauses: 8097
last 3133 length 13521
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2460, clauses: 8876
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6547, clauses: 26977
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5921, clauses: 24339
last 2258 length 8097
last 2460 length 8876
last 6547 length 26977
last 5921 length 24339
CNF 3133 vars 13521 clauses
CNF 2258 vars 8097 clauses
CNF 2460 vars 8876 clauses
CNF 6547 vars 26977 clauses
CNF 5921 vars 24339 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2258, clauses: 8097, status: Unsatisfied, time: 0.103693369s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6547, clauses: 26977, status: Satisfied, time: 0.103594601s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2460, clauses: 8876, status: Unsatisfied, time: 0.173061988s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5921, clauses: 24339, status: Satisfied, time: 0.205602861s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 6468 length 25696
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3774, clauses: 14833
last 10216 length 41834
last 10173 length 47126
last 495 length 2006
last 512 length 2132
last 433 length 1719
last 408 length 1636
last 14364 length 60997
CNF 6468 vars 25696 clauses
CNF 10216 vars 41834 clauses
CNF 512 vars 2132 clauses
CNF 433 vars 1719 clauses
CNF 408 vars 1636 clauses
CNF 495 vars 2006 clauses
CNF 10173 vars 47126 clauses
CNF 14364 vars 60997 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2152, clauses: 7672
last 2152 length 7672
CNF 2152 vars 7672 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2342, clauses: 8367
last 2342 length 8367
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2152, clauses: 7672, status: Unsatisfied, time: 0.163696863s
CNF 2342 vars 8367 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5875, clauses: 24163
last 5875 length 24163
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18636, clauses: 74309
last 18636 length 74309
CNF 5875 vars 24163 clauses
CNF 18636 vars 74309 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6501, clauses: 26795
last 6501 length 26795
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2342, clauses: 8367, status: Unsatisfied, time: 0.324403109s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3699, clauses: 14547
CNF 6501 vars 26795 clauses
last 3699 length 14547
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5875, clauses: 24163, status: Satisfied, time: 0.243863822s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4104, clauses: 16115
last 4104 length 16115
CNF 3699 vars 14547 clauses
CNF 4104 vars 16115 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18636, clauses: 74309, status: Satisfied, time: 0.565240278s
last 337 length 1355
last 343 length 1387
CNF 343 vars 1387 clauses
CNF 337 vars 1355 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1649, clauses: 5835
last 1649 length 5835
CNF 1649 vars 5835 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1649, clauses: 5835, status: Unsatisfied, time: 0.061227291s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5162, clauses: 21267
last 5162 length 21267
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3198, clauses: 12616
last 3198 length 12616
CNF 5162 vars 21267 clauses
CNF 3198 vars 12616 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5162, clauses: 21267, status: Satisfied, time: 0.107186452s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 7 strict rules and 5 weak rules on 6 letters       weights
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, c, a] {- Input 1 -}
  [c, c] -> [b, a, c, a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, b] -> [b, c, a] {- Input 1 -}
  [c, c] -> [b, a, c, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b, a] -> [a, c, b] {- Mirror (Input 1) -}
  [c, c] -> [a, c, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [a#, b] {- DP (Top 2) (Mirror (Input 2)) -}
  [c#, c] |-> [a#, c, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, c] |-> [b#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [b#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [b#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 0A 0A \
        | -  1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / - 0A 0A \
        | - 0A 0A |
        \ - -  0A / )
  ( c
  , Wk  / 1A 1A  1A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( b#
  , Wk  / - 0A 0A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / -1A - 1A \
        | -   - -  |
        \ -   - 0A / )
   property Termination
has value Just True
for SRS
  [b#, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [b#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [b#] {- DP (Top 3) (Mirror (Input 2)) -}
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A -  1A \
        | -  0A -  |
        \ -  -  0A / )
  ( b
  , Wk  / 0A - -2A \
        | 0A - -   |
        \ -  - 0A  / )
  ( c
  , Wk  / -  0A 0A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( b#
  , Wk  / 0A -2A 1A \
        | -  -   -  |
        \ -  -   0A / )
  ( c#
  , Wk  / 1A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [b#, a] |-> [c#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, c] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A -  \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( b
  , Wk  / -2A 0A 0A \
        | -2A 0A -  |
        \ -   -  0A / )
  ( c
  , Wk  / 1A 1A 1A \
        | 0A -  -  |
        \ -  -  0A / )
  ( c#
  , Wk  / 1A -2A 1A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [a, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c] ->= [a, c, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(7/5,6)\Weight\EDG(4/5,5)\Matrix{\ArcticBZ}{3}\EDG(3/5,5)\Matrix{\ArcticBZ}{3}(2/5,5)\Weight\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.665076386000
  min duration 0.024810105000
  total durat. 2.002178689000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.656338039000
  min duration 0.020366515000
  total durat. 1.740443923000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.765123443000
  min duration 0.359799975000
  total durat. 2.039728794000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.116630279000
  min duration 1.116630279000
  total durat. 1.116630279000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 88
      , num_strict_rules = 61
      , num_top_rules = 61
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 483}
    , self = 95
    , parent = Nothing
    , duration = 1.116630279000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:13:31.333643416 UTC
    , finish = 2025-09-03 11:13:32.450273695 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.628942246000
  min duration 0.165070130000
  total durat. 1.001669242000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.117159085000
  min duration 1.117159085000
  total durat. 1.117159085000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 88
      , num_strict_rules = 61
      , num_top_rules = 61
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 483}
    , self = 89
    , parent = Nothing
    , duration = 1.117159085000
    , status = Success
    , start = 2025-09-03 11:13:31.253209203 UTC
    , finish = 2025-09-03 11:13:32.370368288 UTC
    , thread_cap_info = ("ThreadId 138", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.522688132000
  min duration 0.262525199000
  total durat. 1.912025538000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.436204937000
  min duration 2.436204937000
  total durat. 2.436204937000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 108
    , parent = Nothing
    , duration = 2.436204937000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:13:30.481855121 UTC
    , finish = 2025-09-03 11:13:32.918060058 UTC
    , thread_cap_info = ("ThreadId 48", 2, False)}
**************************************************
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                  = 12} , self = 108 , parent = Nothing , duration = 2.436204937000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 11:13:30.481855121 UTC ,
E                  finish = 2025-09-03 11:13:32.918060058 UTC , thread_cap_info = ("ThreadId
E                  48", 2, False)}
E                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                = 162} , self = 57 , parent = Nothing , duration = 0.219739548000 , status
| F                = Fail , start = 2025-09-03 11:13:30.493379634 UTC , finish = 2025-09-03
| F                11:13:30.713119182 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 53 , parent = Nothing , duration = 0.143300831000 , status
| | F              = Fail , start = 2025-09-03 11:13:30.493388636 UTC , finish = 2025-09-03
| | F              11:13:30.636689467 UTC , thread_cap_info = ("ThreadId 64", 1, False)}
| | F              
| | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F            = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | F            = 5 , total_length = 35} , self = 61 , parent = Nothing , duration = 0.392823431000
| | | F            , status = Fail , start = 2025-09-03 11:13:30.540089762 UTC , finish =
| | | F            2025-09-03 11:13:30.932913193 UTC , thread_cap_info = ("ThreadId 89", 2,
| | | F            False)}
| | | F            
| | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F          = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | F          alphabet_size = 5 , total_length = 39} , self = 64 , parent = Nothing ,
| | | | F          duration = 0.522688132000 , status = Fail , start = 2025-09-03 11:13:30.554254493
| | | | F          UTC , finish = 2025-09-03 11:13:31.076942625 UTC , thread_cap_info = ("ThreadId
| | | | F          90", 2, False)}
| | | | F          
| | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | S        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | S        = 5 , total_length = 35} , self = 65 , parent = Nothing , duration = 0.502335417000
| | | | | S        , status = Success , start = 2025-09-03 11:13:30.592440424 UTC , finish
| | | | | S        = 2025-09-03 11:13:31.094775841 UTC , thread_cap_info = ("ThreadId 93",
| | | | | S        1, False)}
| | | | | S        
| | | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | S      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | S      = 5 , total_length = 39} , self = 62 , parent = Nothing , duration = 0.359799975000
| | | | | | S      , status = Success , start = 2025-09-03 11:13:30.594238176 UTC , finish
| | | | | | S      = 2025-09-03 11:13:30.954038151 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | S      2, False)}
| | | | | | S      
| | F | | | |      
| | F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 88 , num_strict_rules
| | F | | | |      = 61 , num_top_rules = 61 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F | | | |      total_length = 483} , self = 77 , parent = Nothing , duration = 0.602274698000
| | F | | | |      , status = Fail , start = 2025-09-03 11:13:30.712870697 UTC , finish =
| | F | | | |      2025-09-03 11:13:31.315145395 UTC , thread_cap_info = ("ThreadId 107",
| | F | | | |      3, False)}
| | F | | | |      
| F | | | | |      
| F | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 88 , num_strict_rules
| F | | | | |      = 61 , num_top_rules = 61 , num_weak_rules = 27 , alphabet_size = 15 ,
| F | | | | |      total_length = 483} , self = 76 , parent = Nothing , duration = 0.533104315000
| F | | | | |      , status = Fail , start = 2025-09-03 11:13:30.714628975 UTC , finish =
| F | | | | |      2025-09-03 11:13:31.24773329 UTC , thread_cap_info = ("ThreadId 108", 1,
| F | | | | |      False)}
| F | | | | |      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 108 , num_strict_rules
| | | | | | | F    = 81 , num_top_rules = 81 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | F    total_length = 603} , self = 82 , parent = Nothing , duration = 0.656338039000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:13:30.739490732 UTC , finish =
| | | | | | | F    2025-09-03 11:13:31.395828771 UTC , thread_cap_info = ("ThreadId 116",
| | | | | | | F    3, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 108 , num_strict_rules
| | | | | | | | F  = 81 , num_top_rules = 81 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | F  total_length = 603} , self = 83 , parent = Nothing , duration = 0.665076386000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:13:30.752851104 UTC , finish =
| | | | | | | | F  2025-09-03 11:13:31.41792749 UTC , thread_cap_info = ("ThreadId 115", 3,
| | | | | | | | F  False)}
| | | | | | | | F  
| | | F | | | | |  
| | |   | | S | |  
| | | E | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | E | |   | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | E | |   | |  = 5 , total_length = 35} , self = 71 , parent = Nothing , duration = 0.207656866000
| | | E | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:13:30.954305669
| | | E | |   | |  UTC , finish = 2025-09-03 11:13:31.161962535 UTC , thread_cap_info = ("ThreadId
| | | E | |   | |  118", 2, False)}
| | | E | |   | |  
| | | | F |   | |  
| | | |   S   | |  
| | | | F     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F     | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F     | |  = 35} , self = 81 , parent = Nothing , duration = 0.227794505000 , status
| | | | F     | |  = Fail , start = 2025-09-03 11:13:31.150215198 UTC , finish = 2025-09-03
| | | | F     | |  11:13:31.378009703 UTC , thread_cap_info = ("ThreadId 123", 2, False)}
| | | | F     | |  
| | | | | F   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F   | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F   | |  = 35} , self = 78 , parent = Nothing , duration = 0.162717090000 , status
| | | | | F   | |  = Fail , start = 2025-09-03 11:13:31.152862949 UTC , finish = 2025-09-03
| | | | | F   | |  11:13:31.315580039 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | | | | F   | |  
| | | E | |   | |  
| | | F | |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F | |   | |  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F | |   | |  = 32} , self = 79 , parent = Nothing , duration = 0.159365276000 , status
| | | F | |   | |  = Fail , start = 2025-09-03 11:13:31.174635634 UTC , finish = 2025-09-03
| | | F | |   | |  11:13:31.33400091 UTC , thread_cap_info = ("ThreadId 128", 2, False)}
| | | F | |   | |  
| | | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F | |  = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | F | |  = 32} , self = 80 , parent = Nothing , duration = 0.174460765000 , status
| | | | | | F | |  = Fail , start = 2025-09-03 11:13:31.1791969 UTC , finish = 2025-09-03
| | | | | | F | |  11:13:31.353657665 UTC , thread_cap_info = ("ThreadId 129", 2, False)}
| | | | | | F | |  
| F | | | | | | |  
| S | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | |  = 88 , num_strict_rules = 61 , num_top_rules = 61 , num_weak_rules = 27
| S | | | | | | |  , alphabet_size = 15 , total_length = 483} , self = 89 , parent = Nothing
| S | | | | | | |  , duration = 1.117159085000 , status = Success , start = 2025-09-03 11:13:31.253209203
| S | | | | | | |  UTC , finish = 2025-09-03 11:13:32.370368288 UTC , thread_cap_info = ("ThreadId
| S | | | | | | |  138", 3, False)}
| S | | | | | | |  
| | F | | | | | |  
| |   | | F | | |  
| | E | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 88
| | E | |   | | |  , num_strict_rules = 61 , num_top_rules = 61 , num_weak_rules = 27 , alphabet_size
| | E | |   | | |  = 15 , total_length = 483} , self = 95 , parent = Nothing , duration =
| | E | |   | | |  1.116630279000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |   | | |  11:13:31.333643416 UTC , finish = 2025-09-03 11:13:32.450273695 UTC , thread_cap_info
| | E | |   | | |  = ("ThreadId 139", 3, False)}
| | E | |   | | |  
| | | F |   | | |  
| | |   |   F | |  
| | | F |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |     | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F |     | |  = 5 , total_length = 32} , self = 84 , parent = Nothing , duration = 0.279322724000
| | | F |     | |  , status = Fail , start = 2025-09-03 11:13:31.353680085 UTC , finish =
| | | F |     | |  2025-09-03 11:13:31.633002809 UTC , thread_cap_info = ("ThreadId 141",
| | | F |     | |  2, False)}
| | | F |     | |  
| | | | | F   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F   | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | F   | |  = 5 , total_length = 35} , self = 85 , parent = Nothing , duration = 0.454666052000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:13:31.371947883 UTC , finish =
| | | | | F   | |  2025-09-03 11:13:31.826613935 UTC , thread_cap_info = ("ThreadId 140",
| | | | | F   | |  2, False)}
| | | | | F   | |  
| | | | F |   | |  
| | | | S |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | S |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | S |   | |  = 5 , total_length = 32} , self = 86 , parent = Nothing , duration = 0.765123443000
| | | | S |   | |  , status = Success , start = 2025-09-03 11:13:31.392867852 UTC , finish
| | | | S |   | |  = 2025-09-03 11:13:32.157991295 UTC , thread_cap_info = ("ThreadId 143",
| | | | S |   | |  2, False)}
| | | | S |   | |  
| | | | | |   F |  
| | | | | |     F  
| | | F | |        
| | | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | E | |        = 5 , total_length = 32} , self = 88 , parent = Nothing , duration = 0.628942246000
| | | E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:13:31.733217072
| | | E | |        UTC , finish = 2025-09-03 11:13:32.362159318 UTC , thread_cap_info = ("ThreadId
| | | E | |        148", 2, False)}
| | | E | |        
| | | | | F        
| | | | S          
| | | E            
| S |              
|   E              
| F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F                = 4 , total_length = 25} , self = 99 , parent = Nothing , duration = 0.262525199000
| F                , status = Fail , start = 2025-09-03 11:13:32.474791075 UTC , finish =
| F                2025-09-03 11:13:32.737316274 UTC , thread_cap_info = ("ThreadId 164",
| F                1, False)}
| F                
| | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | S              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | S              = 4 , total_length = 25} , self = 103 , parent = Nothing , duration = 0.412469959000
| | S              , status = Success , start = 2025-09-03 11:13:32.495930453 UTC , finish
| | S              = 2025-09-03 11:13:32.908400412 UTC , thread_cap_info = ("ThreadId 165",
| | S              1, False)}
| | S              
| F |              
| E |              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| E |              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| E |              = 4 , total_length = 25} , self = 105 , parent = Nothing , duration = 0.165070130000
| E |              , status = Except "AsyncCancelled" , start = 2025-09-03 11:13:32.752884446
| E |              UTC , finish = 2025-09-03 11:13:32.917954576 UTC , thread_cap_info = ("ThreadId
| E |              168", 1, False)}
| E |              
| | S              
| E                
E                  
