last 1817 length 7796
last 2052 length 8834
last 1717 length 7387
CNF 1717 vars 7387 clauses
CNF 2052 vars 8834 clauses
CNF 1817 vars 7796 clauses
last 2056 length 8924
last 3939 length 16931
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3121, clauses: 12037
last 5346 length 22741
CNF 2056 vars 8924 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3100, clauses: 11902
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10496, clauses: 44105
last 3121 length 12037
CNF 3939 vars 16931 clauses
last 5976 length 25896
last 7977 length 34096
CNF 5346 vars 22741 clauses
last 3100 length 11902
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10492, clauses: 44093
last 8507 length 40694
last 10496 length 44105
last 10740 length 50782
CNF 3121 vars 12037 clauses
CNF 5976 vars 25896 clauses
last 10492 length 44093
CNF 3100 vars 11902 clauses
CNF 7977 vars 34096 clauses
CNF 8507 vars 40694 clauses
CNF 10496 vars 44105 clauses
CNF 10740 vars 50782 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3121, clauses: 12037, status: Satisfied, time: 0.633177291s
CNF 10492 vars 44093 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3100, clauses: 11902, status: Satisfied, time: 0.399566067s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8176, clauses: 32686
last 8176 length 32686
CNF 8176 vars 32686 clauses
last 1135 length 4830
last 1094 length 4631
CNF 1094 vars 4631 clauses
CNF 1135 vars 4830 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8287, clauses: 32695
last 8287 length 32695
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8176, clauses: 32686, status: Satisfied, time: 0.342520036s
CNF 8287 vars 32695 clauses
last 1503 length 6303
CNF 1503 vars 6303 clauses
last 1524 length 6595
CNF 1524 vars 6595 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2188, clauses: 8065
last 2188 length 8065
CNF 2188 vars 8065 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2582, clauses: 9675
last 2582 length 9675
CNF 2582 vars 9675 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2188, clauses: 8065, status: Unsatisfied, time: 0.123417745s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2582, clauses: 9675, status: Satisfied, time: 0.11424781s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8287, clauses: 32695, status: Satisfied, time: 0.295006582s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8567, clauses: 36019
**************************************************
last 8567 length 36019
summary
**************************************************
SRS with 4 rules on 2 letters       DP
SRS with 13 strict rules and 4 weak rules on 4 letters       weights
SRS with 4 strict rules and 4 weak rules on 4 letters       EDG
SRS with 4 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 4 weak rules on 4 letters       EDG
SRS with 2 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 4 letters       weights
SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, b] -> [b, a, b, a] {- Input 0 -}
  [a, b, b, b] -> [a, a, a, b] {- Input 1 -}
  [b, a, a, b] -> [b, b, a, b] {- Input 2 -}
  [b, a, a, a] -> [a, a, a, b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
  [a#, b, b, b] |-> [a#] {- DP (Top 3) (Input 0) -}
  [a#, b, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, b, b, b] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [a#, b, b, b] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [a#, b, b, b] |-> [a#, b, a] {- DP (Top 1) (Input 0) -}
  [a#, b, b, b] |-> [b#, a] {- DP (Top 2) (Input 0) -}
  [a#, b, b, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 3) -}
  [b#, a, a, a] |-> [a#, a, b] {- DP (Top 1) (Input 3) -}
  [b#, a, a, a] |-> [a#, b] {- DP (Top 2) (Input 3) -}
  [b#, a, a, a] |-> [b#] {- DP (Top 3) (Input 3) -}
  [b#, a, a, b] |-> [b#, a, b] {- DP (Top 1) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
  [a#, b, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, b, b, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 3) -}
  [b#, a, a, b] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, b, b, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 3) -}
  [b#, a, a, b] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( b#
CNF 8567 vars 36019 clauses
  , Wk  / 1A 1A 3A - \
        | 1A 1A 3A - |
        | 1A 1A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, b, b, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 3) -}
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b, b] |-> [b#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 3) -}
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 2A 2A 3A - \
        | 2A 2A 3A - |
        | 2A 2A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 2A 4A 4A - \
        | 2A 4A 4A - |
        | 2A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, a, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 3) -}
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, b, b] ->= [b, a, b, a] {- DP Nontop (Input 0) -}
  [a, b, b, b] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b, a, a, a] ->= [a, a, a, b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: (4,2)\Deepee(13/4,4)\Weight\EDG(4/4,4)\Matrix{\Arctic}{3}\EDG(2/4,4)\Matrix{\Arctic}{3}(1/4,4)\Weight(0/4,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.859473187000
  min duration 0.086796034000
  total durat. 3.272858021000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.817056286000
  min duration 0.083882053000
  total durat. 2.733686087000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.172946477000
  min duration 0.152019658000
  total durat. 2.937080004000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 64}
    , self = 68
    , parent = Nothing
    , duration = 1.172946477000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:05:38.889959434 UTC
    , finish = 2025-09-03 12:05:40.062905911 UTC
    , thread_cap_info = ("ThreadId 85", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.127768300000
  min duration 0.173452106000
  total durat. 3.843929137000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 64}
    , self = 66
    , parent = Nothing
    , duration = 1.078939502000
    , status = Success
    , start = 2025-09-03 12:05:38.883136641 UTC
    , finish = 2025-09-03 12:05:39.962076143 UTC
    , thread_cap_info = ("ThreadId 84", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 64}
    , self = 69
    , parent = Nothing
    , duration = 1.127768300000
    , status = Success
    , start = 2025-09-03 12:05:38.939352872 UTC
    , finish = 2025-09-03 12:05:40.067121172 UTC
    , thread_cap_info = ("ThreadId 86", 2, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
F                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 32} , self
F                      = 58 , parent = Nothing , duration = 0.376063091000 , status = Fail , start
F                      = 2025-09-03 12:05:38.793623906 UTC , finish = 2025-09-03 12:05:39.169686997
F                      UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F                    = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                    = 160} , self = 61 , parent = Nothing , duration = 0.859473187000 , status
| F                    = Fail , start = 2025-09-03 12:05:38.799710887 UTC , finish = 2025-09-03
| F                    12:05:39.659184074 UTC , thread_cap_info = ("ThreadId 57", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F                  = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                  = 160} , self = 60 , parent = Nothing , duration = 0.817056286000 , status
| | F                  = Fail , start = 2025-09-03 12:05:38.799719484 UTC , finish = 2025-09-03
| | F                  12:05:39.61677577 UTC , thread_cap_info = ("ThreadId 59", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                = 64} , self = 41 , parent = Nothing , duration = 0.137914590000 , status
| | | F                = Fail , start = 2025-09-03 12:05:38.80138759 UTC , finish = 2025-09-03
| | | F                12:05:38.93930218 UTC , thread_cap_info = ("ThreadId 76", 2, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F              = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F              = 64} , self = 59 , parent = Nothing , duration = 0.528265163000 , status
| | | | F              = Fail , start = 2025-09-03 12:05:38.8195452 UTC , finish = 2025-09-03
| | | | F              12:05:39.347810363 UTC , thread_cap_info = ("ThreadId 75", 2, False)}
| | | | F              
| | | | | F            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | F            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | F            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | F            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | F            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | F            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | F            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | F            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | F            = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | | | F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | F            = 32} , self = 42 , parent = Nothing , duration = 0.137999235000 , status
| | | | | F            = Fail , start = 2025-09-03 12:05:38.842096854 UTC , finish = 2025-09-03
| | | | | F            12:05:38.980096089 UTC , thread_cap_info = ("ThreadId 77", 0, False)}
| | | | | F            
| | | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S          = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | S          = 4 , total_length = 64} , self = 66 , parent = Nothing , duration = 1.078939502000
| | | | | | S          , status = Success , start = 2025-09-03 12:05:38.883136641 UTC , finish
| | | | | | S          = 2025-09-03 12:05:39.962076143 UTC , thread_cap_info = ("ThreadId 84",
| | | | | | S          3, False)}
| | | | | | S          
| | | | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | | | | | E        = 4 , total_length = 64} , self = 68 , parent = Nothing , duration = 1.172946477000
| | | | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 12:05:38.889959434
| | | | | | | E        UTC , finish = 2025-09-03 12:05:40.062905911 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        85", 3, False)}
| | | | | | | E        
| | | F | | | |        
| | | S | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | |        = 8 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
| | | S | | | |        = 4 , total_length = 64} , self = 69 , parent = Nothing , duration = 1.127768300000
| | | S | | | |        , status = Success , start = 2025-09-03 12:05:38.939352872 UTC , finish
| | | S | | | |        = 2025-09-03 12:05:40.067121172 UTC , thread_cap_info = ("ThreadId 86",
| | | S | | | |        2, False)}
| | | S | | | |        
| | | | | F | |        
| | | | | F | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | F | |        = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | F | |        = 240} , self = 63 , parent = Nothing , duration = 0.765553606000 , status
| | | | | F | |        = Fail , start = 2025-09-03 12:05:39.03395541 UTC , finish = 2025-09-03
| | | | | F | |        12:05:39.799509016 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | F | |        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | F      = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | | | F      = 240} , self = 62 , parent = Nothing , duration = 0.716869491000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 12:05:39.039565208 UTC , finish = 2025-09-03
| | | | | | | | F      12:05:39.756434699 UTC , thread_cap_info = ("ThreadId 105", 1, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | | F    = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | | | | F    = 240} , self = 65 , parent = Nothing , duration = 0.841208962000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 12:05:39.120810817 UTC , finish = 2025-09-03
| | | | | | | | | F    12:05:39.962019779 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | | | F  = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size = 6 , total_length
| | | | | | | | | | F  = 240} , self = 64 , parent = Nothing , duration = 0.768062130000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 12:05:39.139569929 UTC , finish = 2025-09-03
| | | | | | | | | | F  12:05:39.907632059 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| | | | | | | | | | F  
F | | | | | | | | | |  
  | | | F | | | | | |  
E | | |   | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E | | |   | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size
E | | |   | | | | | |  = 4 , total_length = 64} , self = 75 , parent = Nothing , duration = 0.940353616000
E | | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:05:39.347838116
E | | |   | | | | | |  UTC , finish = 2025-09-03 12:05:40.288191732 UTC , thread_cap_info = ("ThreadId
E | | |   | | | | | |  111", 2, False)}
E | | |   | | | | | |  
| | F |   | | | | | |  
| F   |   | | | | | |  
|     |   | | | F | |  
| S   |   | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   |   | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   |   | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   |   | | |   | |  = 24 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 ,
| S   |   | | |   | |  alphabet_size = 6 , total_length = 240} , self = 82 , parent = Nothing
| S   |   | | |   | |  , duration = 0.671455562000 , status = Success , start = 2025-09-03 12:05:39.756463645
| S   |   | | |   | |  UTC , finish = 2025-09-03 12:05:40.427919207 UTC , thread_cap_info = ("ThreadId
| S   |   | | |   | |  122", 1, False)}
| S   |   | | |   | |  
| |   |   F | |   | |  
| | E |     | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |     | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |     | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |     | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | E |     | |   | |  , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 , alphabet_size
| | E |     | |   | |  = 6 , total_length = 240} , self = 84 , parent = Nothing , duration = 0.671760253000
| | E |     | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:05:39.799627233
| | E |     | |   | |  UTC , finish = 2025-09-03 12:05:40.471387486 UTC , thread_cap_info = ("ThreadId
| | E |     | |   | |  123", 1, False)}
| | E |     | |   | |  
| | | |     | |   | F  
| | | | S   | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   | |   |    = 24 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 16 ,
| | | | S   | |   |    alphabet_size = 6 , total_length = 240} , self = 97 , parent = Nothing
| | | | S   | |   |    , duration = 0.792313667000 , status = Success , start = 2025-09-03 12:05:39.920959052
| | | | S   | |   |    UTC , finish = 2025-09-03 12:05:40.713272719 UTC , thread_cap_info = ("ThreadId
| | | | S   | |   |    124", 1, False)}
| | | | S   | |   |    
| | | | |   | |   F    
| | | | |   S |        
| | | | |     E        
| | | S |              
E | |   |              
F | |   |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   |              = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F | |   |              = 3 , total_length = 40} , self = 91 , parent = Nothing , duration = 0.250707896000
F | |   |              , status = Fail , start = 2025-09-03 12:05:40.379585951 UTC , finish =
F | |   |              2025-09-03 12:05:40.630293847 UTC , thread_cap_info = ("ThreadId 141",
F | |   |              3, False)}
F | |   |              
| | | F |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F |              = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F |              = 48} , self = 87 , parent = Nothing , duration = 0.123905442000 , status
| | | F |              = Fail , start = 2025-09-03 12:05:40.399564244 UTC , finish = 2025-09-03
| | | F |              12:05:40.523469686 UTC , thread_cap_info = ("ThreadId 140", 2, False)}
| | | F |              
| S | | |              
|   E | |              
| S   | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   | |              = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| S   | |              = 4 , total_length = 48} , self = 92 , parent = Nothing , duration = 0.173452106000
| S   | |              , status = Success , start = 2025-09-03 12:05:40.47595388 UTC , finish
| S   | |              = 2025-09-03 12:05:40.649405986 UTC , thread_cap_info = ("ThreadId 147",
| S   | |              2, False)}
| S   | |              
| |   F |              
| | E   |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E   |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E   |              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | E   |              = 4 , total_length = 48} , self = 94 , parent = Nothing , duration = 0.152019658000
| | E   |              , status = Except "AsyncCancelled" , start = 2025-09-03 12:05:40.528770753
| | E   |              UTC , finish = 2025-09-03 12:05:40.680790411 UTC , thread_cap_info = ("ThreadId
| | E   |              151", 2, False)}
| | E   |              
F | |   |              
  S |   |              
    E   |              
        S              
