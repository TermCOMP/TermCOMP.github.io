last 1627 length 7469
CNF 1627 vars 7469 clauses
last 1827 length 9308
CNF 1827 vars 9308 clauses
last 4356 length 24080
CNF 4356 vars 24080 clauses
last 2651 length 12304
last 4246 length 23905
CNF 4246 vars 23905 clauses
CNF 2651 vars 12304 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1973, clauses: 8064
last 1973 length 8064
CNF 1973 vars 8064 clauses
last 5392 length 37225
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2367, clauses: 9170
last 2367 length 9170
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1973, clauses: 8064, status: Unsatisfied, time: 0.089870529s
CNF 2367 vars 9170 clauses
CNF 5392 vars 37225 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6202, clauses: 26042
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3775, clauses: 16309
last 6202 length 26042
last 3775 length 16309
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2367, clauses: 9170, status: Unsatisfied, time: 0.151848395s
CNF 6202 vars 26042 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7706, clauses: 32398
CNF 3775 vars 16309 clauses
last 7706 length 32398
CNF 7706 vars 32398 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4698, clauses: 19982
last 4698 length 19982
CNF 4698 vars 19982 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7706, clauses: 32398, status: Satisfied, time: 0.191238228s
last 1753 length 8558
CNF 1753 vars 8558 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1942, clauses: 7207
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6202, clauses: 26042, status: Unsatisfied, time: 0.536831245s
last 5122 length 36130
last 1942 length 7207
CNF 1942 vars 7207 clauses
CNF 5122 vars 36130 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1942, clauses: 7207, status: Unsatisfied, time: 0.057209107s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3277, clauses: 14160
last 3277 length 14160
CNF 3277 vars 14160 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3775, clauses: 16309, status: Unsatisfied, time: 0.722195882s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3277, clauses: 14160, status: Satisfied, time: 0.21656438s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4206, clauses: 17890
last 4206 length 17890
CNF 4206 vars 17890 clauses
last 8084 length 57994
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7030, clauses: 29546
last 7030 length 29546
CNF 7030 vars 29546 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       DP
SRS with 9 strict rules and 1 weak rules on 3 letters       EDG
SRS with 3 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a, a, a] -> [a, a, a, a, a, b, a, a, a, b, a, b] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, a, a, a] ->= [ a , a , a , a , a , b , a , a , a , b , a , b ] {- DP Nontop (Input 0) -}
  [a#, b, a, a, a, a] |-> [ a# , a , a , a , a , b , a , a , a , b , a , b ] {- DP (Top 0) (Input 0) -}
  [a#, b, a, a, a, a] |-> [ a# , a , a , a , b , a , a , a , b , a , b ] {- DP (Top 1) (Input 0) -}
  [a#, b, a, a, a, a] |-> [ a# , a , a , b , a , a , a , b , a , b ] {- DP (Top 2) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, a, a, b, a, b] {- DP (Top 6) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, a, b, a, a, a, b, a, b] {- DP (Top 3) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, a, b, a, b] {- DP (Top 7) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b] {- DP (Top 10) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b, a, a, a, b, a, b] {- DP (Top 4) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b, a, b] {- DP (Top 8) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a, a, a] |-> [a#, b, a, b] {- DP (Top 8) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b] {- DP (Top 10) (Input 0) -}
  [a#, b, a, a, a, a] |-> [a#, b, a, a, a, b, a, b] {- DP (Top 4) (Input 0) -}
  [a, b, a, a, a, a] ->= [ a , a , a , a , a , b , a , a , a , b , a , b ] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( a#
  , Wk  / 6A 9A 10A 10A - \
        | 6A 9A 10A 10A - |
        | 6A 9A 10A 10A - |
        | 6A 9A 10A 10A - |
        \ -  -  -   -   - / )
   property Termination
has value Just True
for SRS
  [a, b, a, a, a, a] ->= [ a , a , a , a , a , b , a , a , a , b , a , b ] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,2)\Deepee(9/1,3)\EDG(3/1,3)\Matrix{\Arctic}{4}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.514822341000
  min duration 0.181847518000
  total durat. 1.275467023000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.472016562000
  min duration 1.472016562000
  total durat. 1.472016562000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 82
    , parent = Nothing
    , duration = 1.472016562000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:25:27.640317457 UTC
    , finish = 2025-09-03 12:25:29.112334019 UTC
    , thread_cap_info = ("ThreadId 86", 1, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.506038605000
  min duration 1.506038605000
  total durat. 1.506038605000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 81
    , parent = Nothing
    , duration = 1.506038605000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:25:27.606258013 UTC
    , finish = 2025-09-03 12:25:29.112296618 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
**************************************************
E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
E                = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 18} , self
E                = 81 , parent = Nothing , duration = 1.506038605000 , status = Except "AsyncCancelled"
E                , start = 2025-09-03 12:25:27.606258013 UTC , finish = 2025-09-03 12:25:29.112296618
E                UTC , thread_cap_info = ("ThreadId 22", 3, False)}
E                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 80} , self = 57 , parent = Nothing , duration = 0.294176952000 , status
| F              = Fail , start = 2025-09-03 12:25:27.607326804 UTC , finish = 2025-09-03
| F              12:25:27.901503756 UTC , thread_cap_info = ("ThreadId 57", 2, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F            = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F            = 56} , self = 59 , parent = Nothing , duration = 0.333244859000 , status
| | F            = Fail , start = 2025-09-03 12:25:27.608540916 UTC , finish = 2025-09-03
| | F            12:25:27.941785775 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F          = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F          = 56} , self = 62 , parent = Nothing , duration = 0.514822341000 , status
| | | F          = Fail , start = 2025-09-03 12:25:27.622807412 UTC , finish = 2025-09-03
| | | F          12:25:28.137629753 UTC , thread_cap_info = ("ThreadId 77", 3, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F        = 80} , self = 58 , parent = Nothing , duration = 0.296342727000 , status
| | | | F        = Fail , start = 2025-09-03 12:25:27.628109758 UTC , finish = 2025-09-03
| | | | F        12:25:27.924452485 UTC , thread_cap_info = ("ThreadId 59", 2, False)}
| | | | F        
| | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E      = 18} , self = 82 , parent = Nothing , duration = 1.472016562000 , status
| | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:25:27.640317457 UTC ,
| | | | | E      finish = 2025-09-03 12:25:29.112334019 UTC , thread_cap_info = ("ThreadId
| | | | | E      86", 1, False)}
| | | | | E      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | F    = 50} , self = 53 , parent = Nothing , duration = 0.154491684000 , status
| | | | | | F    = Fail , start = 2025-09-03 12:25:27.649523585 UTC , finish = 2025-09-03
| | | | | | F    12:25:27.804015269 UTC , thread_cap_info = ("ThreadId 78", 3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | F  = 50} , self = 54 , parent = Nothing , duration = 0.181847518000 , status
| | | | | | | F  = Fail , start = 2025-09-03 12:25:27.66087831 UTC , finish = 2025-09-03
| | | | | | | F  12:25:27.842725828 UTC , thread_cap_info = ("ThreadId 79", 3, False)}
| | | | | | | F  
| | | | | | F |  
| | | | | |   F  
| | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | | F    = 3 , total_length = 50} , self = 61 , parent = Nothing , duration = 0.213011921000
| | | | | | F    , status = Fail , start = 2025-09-03 12:25:27.866424626 UTC , finish =
| | | | | | F    2025-09-03 12:25:28.079436547 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | F    3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | | | | F  = 3 , total_length = 50} , self = 72 , parent = Nothing , duration = 0.809306126000
| | | | | | | F  , status = Fail , start = 2025-09-03 12:25:27.884232627 UTC , finish =
| | | | | | | F  2025-09-03 12:25:28.693538753 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | F  3, False)}
| | | | | | | F  
| F | | | | | |  
|   | | F | | |  
|   F |   | | |  
| F   |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |   | | |  = 5 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| F   |   | | |  = 3 , total_length = 56} , self = 63 , parent = Nothing , duration = 0.251421706000
| F   |   | | |  , status = Fail , start = 2025-09-03 12:25:27.980371165 UTC , finish =
| F   |   | | |  2025-09-03 12:25:28.231792871 UTC , thread_cap_info = ("ThreadId 111",
| F   |   | | |  3, False)}
| F   |   | | |  
| |   |   | F |  
| | F |   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |   |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F |   |   |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | F |   |   |  = 3 , total_length = 50} , self = 75 , parent = Nothing , duration = 0.784849609000
| | F |   |   |  , status = Fail , start = 2025-09-03 12:25:28.079525197 UTC , finish =
| | F |   |   |  2025-09-03 12:25:28.864374806 UTC , thread_cap_info = ("ThreadId 116",
| | F |   |   |  3, False)}
| | F |   |   |  
| | | F   |   |  
| | | S   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S   |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | S   |   |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| | | S   |   |  = 3 , total_length = 56} , self = 64 , parent = Nothing , duration = 0.313987879000
| | | S   |   |  , status = Success , start = 2025-09-03 12:25:28.137678825 UTC , finish
| | | S   |   |  = 2025-09-03 12:25:28.451666704 UTC , thread_cap_info = ("ThreadId 117",
| | | S   |   |  3, False)}
| | | S   |   |  
| F | |   |   |  
| E | |   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | |   |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | |   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E | |   |   |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 1 , alphabet_size
| E | |   |   |  = 3 , total_length = 56} , self = 66 , parent = Nothing , duration = 0.222864922000
| E | |   |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:25:28.238880631
| E | |   |   |  UTC , finish = 2025-09-03 12:25:28.461745553 UTC , thread_cap_info = ("ThreadId
| E | |   |   |  120", 3, False)}
| E | |   |   |  
| | | S   |   |  
| E |     |   |  
| F |     |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |     |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |     |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| F |     |   |  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F |     |   |  = 36} , self = 71 , parent = Nothing , duration = 0.139852633000 , status
| F |     |   |  = Fail , start = 2025-09-03 12:25:28.461875317 UTC , finish = 2025-09-03
| F |     |   |  12:25:28.60172795 UTC , thread_cap_info = ("ThreadId 127", 3, False)}
| F |     |   |  
| | | F   |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F   |   |  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F   |   |  = 36} , self = 74 , parent = Nothing , duration = 0.282454437000 , status
| | | F   |   |  = Fail , start = 2025-09-03 12:25:28.481211668 UTC , finish = 2025-09-03
| | | F   |   |  12:25:28.763666105 UTC , thread_cap_info = ("ThreadId 128", 3, False)}
| | | F   |   |  
| F | |   |   |  
| F | |   |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |   |   |  = 3 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size
| F | |   |   |  = 3 , total_length = 36} , self = 73 , parent = Nothing , duration = 0.131243283000
| F | |   |   |  , status = Fail , start = 2025-09-03 12:25:28.619533488 UTC , finish =
| F | |   |   |  2025-09-03 12:25:28.750776771 UTC , thread_cap_info = ("ThreadId 130",
| F | |   |   |  3, False)}
| F | |   |   |  
| | | |   |   F  
| | | | S |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |      = 4 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| | | | S |      = 3 , total_length = 50} , self = 76 , parent = Nothing , duration = 0.330601353000
| | | | S |      , status = Success , start = 2025-09-03 12:25:28.693588827 UTC , finish
| | | | S |      = 2025-09-03 12:25:29.02419018 UTC , thread_cap_info = ("ThreadId 131",
| | | | S |      3, False)}
| | | | S |      
| F | | | |      
|   | F | |      
|   F   | |      
| E     | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E     | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E     | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E     | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E     | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E     | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E     | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 1 , alphabet_size
| E     | |      = 3 , total_length = 50} , self = 78 , parent = Nothing , duration = 0.131116158000
| E     | |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:25:28.979798777
| E     | |      UTC , finish = 2025-09-03 12:25:29.110914935 UTC , thread_cap_info = ("ThreadId
| E     | |      137", 3, False)}
| E     | |      
| |     S |      
| E       |      
E         |      
          E      
