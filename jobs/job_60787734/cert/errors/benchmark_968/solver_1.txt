last 1994 length 8087
CNF 1994 vars 8087 clauses
last 2706 length 11885
CNF 2706 vars 11885 clauses
last 1847 length 8169
CNF 1847 vars 8169 clauses
last 1613 length 7475
last 1662 length 6992
last 2249 length 9310
CNF 1613 vars 7475 clauses
CNF 1662 vars 6992 clauses
CNF 2249 vars 9310 clauses
last 4343 length 18227
last 5573 length 24145
CNF 4343 vars 18227 clauses
CNF 5573 vars 24145 clauses
last 5364 length 23321
last 4550 length 18931
CNF 4550 vars 18931 clauses
CNF 5364 vars 23321 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 27883
last 7411 length 27883
CNF 7411 vars 27883 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 16852
last 4450 length 16852
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 27883, status: Satisfied, time: 0.067209987s
CNF 4450 vars 16852 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5209, clauses: 20215
last 5209 length 20215
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 16852, status: Satisfied, time: 0.131200384s
CNF 5209 vars 20215 clauses
last 3740 length 15523
CNF 3740 vars 15523 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5209, clauses: 20215, status: Satisfied, time: 0.196532605s
last 4636 length 19526
CNF 4636 vars 19526 clauses
last 1368 length 6200
last 1421 length 6639
CNF 1421 vars 6639 clauses
last 1256 length 5303
CNF 1368 vars 6200 clauses
last 1104 length 4758
CNF 1256 vars 5303 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3476, clauses: 12834
CNF 1104 vars 4758 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6923, clauses: 25863
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11517, clauses: 48211
last 8452 length 31915
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3313, clauses: 12331
last 3476 length 12834
last 6923 length 25863
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10900, clauses: 45683
last 11517 length 48211
last 3313 length 12331
CNF 8452 vars 31915 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28200, clauses: 118980
CNF 3476 vars 12834 clauses
CNF 6923 vars 25863 clauses
last 10900 length 45683
CNF 3313 vars 12331 clauses
last 28200 length 118980
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 32210, clauses: 135911
CNF 11517 vars 48211 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3476, clauses: 12834, status: Satisfied, time: 0.403919063s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6923, clauses: 25863, status: Satisfied, time: 0.420436503s
CNF 10900 vars 45683 clauses
last 32210 length 135911
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915, status: Satisfied, time: 0.580695092s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3313, clauses: 12331, status: Satisfied, time: 0.33189037s
last 1134 length 4863
last 1230 length 5349
last 4343 length 18227
last 5573 length 24145
last 5364 length 23321
last 4550 length 18931
CNF 1134 vars 4863 clauses
last 1260 length 5637
CNF 1230 vars 5349 clauses
last 1167 length 5007
CNF 5573 vars 24145 clauses
CNF 4343 vars 18227 clauses
CNF 4550 vars 18931 clauses
CNF 1260 vars 5637 clauses
CNF 5364 vars 23321 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3172, clauses: 11593
CNF 1167 vars 5007 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10887, clauses: 45551
last 3172 length 11593
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 27883
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3093, clauses: 11414
last 10887 length 45551
last 7411 length 27883
last 3093 length 11414
CNF 3172 vars 11593 clauses
CNF 3093 vars 11414 clauses
CNF 10887 vars 45551 clauses
CNF 7411 vars 27883 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3172, clauses: 11593, status: Satisfied, time: 0.375507765s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3093, clauses: 11414, status: Satisfied, time: 0.308037444s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 27883, status: Satisfied, time: 0.322811933s
**************************************************
summary
**************************************************
SRS with 6 rules on 3 letters       DP
SRS with 13 strict rules and 6 weak rules on 6 letters       weights
SRS with 9 strict rules and 6 weak rules on 5 letters       EDG
SRS with 9 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 6 weak rules on 5 letters       EDG
SRS with 4 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 6 weak rules on 5 letters       EDG
SRS with 3 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 6 weak rules on 5 letters       weights
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [c, b, a, b, a] {- Input 0 -}
  [b, a, b] -> [b] {- Input 1 -}
  [a, a, a] -> [c, c, a] {- Input 2 -}
  [c, c] -> [a, b, c, b, a] {- Input 3 -}
  [a, c, a] -> [c, c, a] {- Input 4 -}
  [c, a, c] -> [a, a, c] {- Input 5 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [b#, a] {- DP (Top 3) (Input 0) -}
  [a#, a] |-> [b#, a, b, a] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [c#, b, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Input 2) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [c#, c] |-> [a#] {- DP (Top 4) (Input 3) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [c#, c] |-> [b#, a] {- DP (Top 3) (Input 3) -}
  [c#, c] |-> [b#, c, b, a] {- DP (Top 1) (Input 3) -}
  [c#, c] |-> [c#, b, a] {- DP (Top 2) (Input 3) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [c#, b, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Input 2) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [c#, c] |-> [a#] {- DP (Top 4) (Input 3) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [c#, c] |-> [c#, b, a] {- DP (Top 2) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [c#, b, a, b, a] {- DP (Top 0) (Input 0) -}
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Input 2) -}
  [c#, c] |-> [a#] {- DP (Top 4) (Input 3) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [c#, c] |-> [c#, b, a] {- DP (Top 2) (Input 3) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 6A 6A 9A - \
        | 6A 6A 9A - |
        | 6A 6A 9A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 7A 8A 9A - \
        | 7A 8A 9A - |
        | 7A 8A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 10A 10A 13A - \
        | 10A 10A 13A - |
        | 10A 10A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  EDG

**************************************************
skeleton: (6,3)\Deepee(13/6,6)\Weight\EDG(9/6,5)\Matrix{\Arctic}{3}\EDG(4/6,5)\Matrix{\Arctic}{3}\EDG(3/6,5)\Matrix{\Arctic}{3}(2/6,5)\Weight(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))last 4636 length 19526
CNF 4636 vars 19526 clauses
last 3740 length 15523
CNF 3740 vars 15523 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 0.466376761000
  min duration 0.095593196000
  total durat. 3.119863055000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 0.420003630000
  min duration 0.059855268000
  total durat. 2.870204536000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 9
  max duration 1.504540203000
  min duration Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10852, clauses: 45495
last 10852 length 45495
0.319990712000
  total durat. 7.015889129000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 18
      , alphabet_size = 7
      , total_length = 160}
    , self = 110
    , parent = Nothing
    , duration = 1.068446526000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:10.432339943 UTC
    , finish = 2025-09-03 13:39:11.500786469 UTC
    , thread_cap_info = ("ThreadId 163", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 18
      , alphabet_size = 8
      , total_length = 192}
    , self = 117
    , parent = Nothing
    , duration = 1.504540203000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:10.111697768 UTC
    , finish = 2025-09-03 13:39:11.616237971 UTC
    , thread_cap_info = ("ThreadId 139", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.576310369000
  min duration 0.321029268000
  total durat. 7.542563429000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 18
      , alphabet_size = 7
      , total_length = 160}
    , self = 103
    , parent = Nothing
    , duration = 1.100997249000
    , status = Success
    , start = 2025-09-03 13:39:10.361529301 UTC
    , finish = 2025-09-03 13:39:11.46252655 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = SizeCNF 10852 vars 45495 clauses

Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915
    Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10852, clauses: 45495, status: Satisfied, time: 0.069487208s
  last 8452 length 31915
{ num_rules = 24
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 18
      , alphabet_size = 8
      , total_length = 192}
    , self = 115
    , parent = Nothing
    , duration = 1.576310369000
    , status = Success
    , start = 2025-09-03 13:39:10.032906368 UTC
    , finish = 2025-09-03 13:39:11.609216737 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.829896087000
  min duration 1.829896087000
  total durat. 1.829896087000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 100
    , parent = Nothing
    , duration = 1.829896087000
    , status = Fail
    , start = 2025-09-03 13:39:09.40121998 UTC
    , finish = 2025-09-03 13:39:11.231116067 UTC
    , thread_cap_info = ("ThreadId 36", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.904855170000
  min duration 2.904855170000
  total durat. 2.904855170000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 151
    , parent = Nothing
    , duration = 2.904855170000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:39:09.488934576 UTC
    , finish = 2025-09-03 13:39:12.393789746 UTC
    , thread_cap_info = ("ThreadId 85", 3, False)}
**************************************************
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6923, clauses: 25863
last 6923 length 25863
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                    = 36} , self = 100 , parent = Nothing , duration = 1.829896087000 , status
F                    = Fail , start = 2025-09-03 13:39:09.40121998 UTC , finish = 2025-09-03
F                    13:39:11.231116067 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
F                    
| F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                  = True}" , input_size = Size { num_rules = 6 , num_strict_rules = 6 , num_top_rules
| F                  = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 36} , self
| F                  = 53 , parent = Nothing , duration = 0.141156171000 , status = Fail , start
| F                  = 2025-09-03 13:39:09.401308986 UTC , finish = 2025-09-03 13:39:09.542465157
| F                  UTC , thread_cap_info = ("ThreadId 22", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                = 96} , self = 40 , parent = Nothing , duration = 0.107230964000 , status
| | F                = Fail , start = 2025-09-03 13:39:09.416046693 UTC , finish = 2025-09-03
| | F                13:39:09.523277657 UTC , thread_cap_info = ("ThreadId 72", 1, False)}
| | F                
| | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E              = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | E              = 36} , self = 151 , parent = Nothing , duration = 2.904855170000 , status
| | | E              = Except "AsyncCancelled" , start = 2025-09-03 13:39:09.488934576 UTC ,
| | | E              finish = 2025-09-03 13:39:12.393789746 UTC , thread_cap_info = ("ThreadId
| | | E              85", 3, False)}
| | | E              
| | F |              
| F   |              
| F   |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| F   |              = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| F   |              = 176} , self = 70 , parent = Nothing , duration = 0.247888065000 , status
| F   |              = Fail , start = 2025-09-03 13:39:09.543853488 UTC , finish = 2025-09-03
| F   |              13:39:09.791741553 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| F   |              
| | F |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F |              = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | F |              = 86} , self = 65 , parent = Nothing , duration = 0.138781065000 , status
| | F |              = Fail , start = 2025-09-03 13:39:09.54408175 UTC , finish = 2025-09-03
| | F |              13:39:09.682862815 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | F |              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | F            = 176} , self = 69 , parent = Nothing , duration = 0.229530293000 , status
| | | | F            = Fail , start = 2025-09-03 13:39:09.544081808 UTC , finish = 2025-09-03
| | | | F            13:39:09.773612101 UTC , thread_cap_info = ("ThreadId 112", 1, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | F          = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | F          = 86} , self = 67 , parent = Nothing , duration = 0.132518863000 , status
| | | | | F          = Fail , start = 2025-09-03 13:39:09.553081065 UTC , finish = 2025-09-03
| | | | | F          13:39:09.685599928 UTC , thread_cap_info = ("ThreadId 114", 2, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | F        = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | | | F        = 192} , self = 72 , parent = Nothing , duration = 0.466376761000 , status
| | | | | | F        = Fail , start = 2025-09-03 13:39:09.571717864 UTC , finish = 2025-09-03
| | | | | | F        13:39:10.038094625 UTC , thread_cap_info = ("ThreadId 117", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | | | | F      = 192} , self = 71 , parent = Nothing , duration = 0.420003630000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:39:09.591690496 UTC , finish = 2025-09-03
| | | | | | | F      13:39:10.011694126 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | | | F    = 15 , num_top_rules = 15 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | | | | F    = 111} , self = 68 , parent = Nothing , duration = 0.101699007000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:39:09.591692647 UTC , finish = 2025-09-03
| | | | | | | | F    13:39:09.693391654 UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | | | | | | | F    
| | F | | | | | |    
| |   | | F | | |    
| | S | |   | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |   | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |   | | |    = 15 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 ,
| | S | |   | | |    alphabet_size = 5 , total_length = 86} , self = 80 , parent = Nothing ,
| | S | |   | | |    duration = 0.494967984000 , status = Success , start = 2025-09-03 13:39:09.685616484
| | S | |   | | |    UTC , finish = 2025-09-03 13:39:10.180584468 UTC , thread_cap_info = ("ThreadId
| | S | |   | | |    126", 2, False)}
| | S | |   | | |    
| | | | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | | | | E | | |    , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size
| | | | | E | | |    = 5 , total_length = 86} , self = 84 , parent = Nothing , duration = 0.669095237000
| | | | | E | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:09.692620095
| | | | | E | | |    UTC , finish = 2025-09-03 13:39:10.361715332 UTC , thread_cap_info = ("ThreadId
| | | | | E | | |    127", 2, False)}
| | | | | E | | |    
| | | | | | | | F    
| | | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S    = 21 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 6
| | | | | | | | S    , alphabet_size = 5 , total_length = 111} , self = 83 , parent = Nothing
| | | | | | | | S    , duration = 0.649232292000 , status = Success , start = 2025-09-03 13:39:09.712463126
| | | | | | | | S    UTC , finish = 2025-09-03 13:39:10.361695418 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S    128", 2, False)}
| | | | | | | | S    
| | | | F | | | |    
| | | | S | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | |    = 22 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 18 ,
| | | | S | | | |    alphabet_size = 7 , total_length = 176} , self = 73 , parent = Nothing
| | | | S | | | |    , duration = 0.321029268000 , status = Success , start = 2025-09-03 13:39:09.778450837
| | | | S | | | |    UTC , finish = 2025-09-03 13:39:10.099480105 UTC , thread_cap_info = ("ThreadId
| | | | S | | | |    132", 1, False)}
| | | | S | | | |    
| F | | | | | | |    
| E | | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| E | | | | | | |    , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 6 , alphabet_size
| E | | | | | | |    = 5 , total_length = 111} , self = 87 , parent = Nothing , duration = 0.580362346000
| E | | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:09.792626496
| E | | | | | | |    UTC , finish = 2025-09-03 13:39:10.372988842 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |    131", 2, False)}
| E | | | | | | |    
| | | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | | | | | | | E  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size
| | | | | | | | | E  = 7 , total_length = 176} , self = 75 , parent = Nothing , duration = 0.319990712000
| | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:09.811698363
| | | | | | | | | E  UTC , finish = 2025-09-03 13:39:10.131689075 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  133", 1, False)}
| | | | | | | | | E  
| | | | | | | F | |  
| | | | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S | |  = 24 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 18 ,
| | | | | | | S | |  alphabet_size = 8 , total_length = 192} , self = 115 , parent = Nothing
| | | | | | | S | |  , duration = 1.576310369000 , status = Success , start = 2025-09-03 13:39:10.032906368
| | | | | | | S | |  UTC , finish = 2025-09-03 13:39:11.609216737 UTC , thread_cap_info = ("ThreadId
| | | | | | | S | |  136", 0, False)}
| | | | | | | S | |  
| | | | | | F | | |  
| | | | S |   | | |  
| | | | E |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | | | E |   | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size
| | | | E |   | | |  = 8 , total_length = 192} , self = 117 , parent = Nothing , duration =
| | | | E |   | | |  1.504540203000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E |   | | |  13:39:10.111697768 UTC , finish = 2025-09-03 13:39:11.616237971 UTC , thread_cap_info
| | | | E |   | | |  = ("ThreadId 139", 0, False)}
| | | | E |   | | |  
| | | | | |   | | E  
| | | | | | F | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | F | |    = 2 , num_top_rules = 2 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | | F | |    = 160} , self = 94 , parent = Nothing , duration = 0.281947535000 , status
| | | | | | F | |    = Fail , start = 2025-09-03 13:39:10.133707636 UTC , finish = 2025-09-03
| | | | | | F | |    13:39:10.415655171 UTC , thread_cap_info = ("ThreadId 144", 1, False)}
| | | | | | F | |    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | | | | | F  = 160} , self = 82 , parent = Nothing , duration = 0.209819417000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 13:39:10.151685168 UTC , finish = 2025-09-03
| | | | | | | | | F  13:39:10.361504585 UTC , thread_cap_info = ("ThreadId 145", 1, False)}
| | | | | | | | | F  
| | S | | | | | | |  
| |   | | | | | | F  
| | S | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | | |    = 20 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 18 ,
| | S | | | | | |    alphabet_size = 7 , total_length = 160} , self = 103 , parent = Nothing
| | S | | | | | |    , duration = 1.100997249000 , status = Success , start = 2025-09-03 13:39:10.361529301
| | S | | | | | |    UTC , finish = 2025-09-03 13:39:11.46252655 UTC , thread_cap_info = ("ThreadId
| | S | | | | | |    149", 1, False)}
| | S | | | | | |    
| | | | | | | | S    
| | | | | E | |      
| E | | |   | |      
|   | | |   F |      
| F | | |     |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |     |      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F | | |     |      = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F | | |     |      = 60} , self = 98 , parent = Nothing , duration = 0.348796716000 , status
| F | | |     |      = Fail , start = 2025-09-03 13:39:10.422955688 UTC , finish = 2025-09-03
| F | | |     |      13:39:10.771752404 UTC , thread_cap_info = ("ThreadId 161", 2, False)}
| F | | |     |      
| | | | | E   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| | | | | E   |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 18 , alphabet_size
| | | | | E   |      = 7 , total_length = 160} , self = 110 , parent = Nothing , duration =
| | | | | E   |      1.068446526000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E   |      13:39:10.432339943 UTC , finish = 2025-09-03 13:39:11.500786469 UTC , thread_cap_info
| | | | | E   |      = ("ThreadId 163", 1, False)}
| | | | | E   |      
| | | | | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | F |      = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F |      = 60} , self = 99 , parent = Nothing , duration = 0.415263221000 , status
| | | | | | F |      = Fail , start = 2025-09-03 13:39:10.449683024 UTC , finish = 2025-09-03
| | | | | | F |      13:39:10.864946245 UTC , thread_cap_info = ("ThreadId 164", 2, False)}
| | | | | | F |      
| | | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S    = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
| | | | | | | | S    alphabet_size = 5 , total_length = 61} , self = 101 , parent = Nothing
| | | | | | | | S    , duration = 0.987740151000 , status = Success , start = 2025-09-03 13:39:10.468874228
| | | | | | | | S    UTC , finish = 2025-09-03 13:39:11.456614379 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S    166", 2, False)}
| | | | | | | | S    
| | | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | | E  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | E  = 5 , total_length = 61} , self = 104 , parent = Nothing , duration = 0.993994842000
| | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:10.468886048
| | | | | | | | | E  UTC , finish = 2025-09-03 13:39:11.46288089 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  167", 2, False)}
| | | | | | | | | E  
| F | | | | | | | |  
| S | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | | |  = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
| S | | | | | | | |  alphabet_size = 4 , total_length = 60} , self = 122 , parent = Nothing
| S | | | | | | | |  , duration = 0.882348847000 , status = Success , start = 2025-09-03 13:39:10.79005383
| S | | | | | | | |  UTC , finish = 2025-09-03 13:39:11.672402677 UTC , thread_cap_info = ("ThreadId
| S | | | | | | | |  169", 2, False)}
| S | | | | | | | |  
| | | | | | F | | |  
| | | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | E | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | | | | E | | |  = 4 , total_length = 60} , self = 124 , parent = Nothing , duration = 0.822529284000
| | | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:10.864986867
| | | | | | E | | |  UTC , finish = 2025-09-03 13:39:11.687516151 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | |  170", 2, False)}
| | | | | | E | | |  
F | | | | | | | | |  
  | | | | | | | S |  
  | S | | | | |   |  
  |   | | | | |   E  
F |   | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F |   | | | | |      = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
F |   | | | | |      = 54} , self = 129 , parent = Nothing , duration = 0.270512930000 , status
F |   | | | | |      = Fail , start = 2025-09-03 13:39:11.463637036 UTC , finish = 2025-09-03
F |   | | | | |      13:39:11.734149966 UTC , thread_cap_info = ("ThreadId 184", 2, False)}
F |   | | | | |      
| | F | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F | | | | |      = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | F | | | | |      = 54} , self = 130 , parent = Nothing , duration = 0.279154441000 , status
| | F | | | | |      = Fail , start = 2025-09-03 13:39:11.46364113 UTC , finish = 2025-09-03
| | F | | | | |      13:39:11.742795571 UTC , thread_cap_info = ("ThreadId 185", 2, False)}
| | F | | | | |      
| | | | | E | |      
| | | | | F | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | F | |      = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | F | |      = 176} , self = 132 , parent = Nothing , duration = 0.394319406000 , status
| | | | | F | |      = Fail , start = 2025-09-03 13:39:11.503871095 UTC , finish = 2025-09-03
| | | | | F | |      13:39:11.898190501 UTC , thread_cap_info = ("ThreadId 190", 1, False)}
| | | | | F | |      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | | | | F    = 176} , self = 131 , parent = Nothing , duration = 0.332801529000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:39:11.503886397 UTC , finish = 2025-09-03
| | | | | | | | F    13:39:11.836687926 UTC , thread_cap_info = ("ThreadId 189", 0, False)}
| | | | | | | | F    
| | | | | | | S |    
| | | | E | |   |    
| | | | F | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | F | |   |    = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | F | |   |    = 192} , self = 136 , parent = Nothing , duration = 0.401917653000 , status
| | | | F | |   |    = Fail , start = 2025-09-03 13:39:11.616982245 UTC , finish = 2025-09-03
| | | | F | |   |    13:39:12.018899898 UTC , thread_cap_info = ("ThreadId 196", 1, False)}
| | | | F | |   |    
| | | | | | | F |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | F |    = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | | | | F |    = 192} , self = 134 , parent = Nothing , duration = 0.335744067000 , status
| | | | | | | F |    = Fail , start = 2025-09-03 13:39:11.621155826 UTC , finish = 2025-09-03
| | | | | | | F |    13:39:11.956899893 UTC , thread_cap_info = ("ThreadId 197", 0, False)}
| | | | | | | F |    
| S | | | | | | |    
|   | | | | E | |    
| F | | | |   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F | | | |   | |    = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F | | | |   | |    = 55} , self = 135 , parent = Nothing , duration = 0.326317634000 , status
| F | | | |   | |    = Fail , start = 2025-09-03 13:39:11.687771818 UTC , finish = 2025-09-03
| F | | | |   | |    13:39:12.014089452 UTC , thread_cap_info = ("ThreadId 202", 2, False)}
| F | | | |   | |    
| | | | | | F | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F | |    = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F | |    = 55} , self = 133 , parent = Nothing , duration = 0.250983783000 , status
| | | | | | F | |    = Fail , start = 2025-09-03 13:39:11.691795326 UTC , finish = 2025-09-03
| | | | | | F | |    13:39:11.942779109 UTC , thread_cap_info = ("ThreadId 203", 2, False)}
| | | | | | F | |    
F | | | | | | | |    
S | | | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | | |    = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
S | | | | | | | |    = 5 , total_length = 54} , self = 137 , parent = Nothing , duration = 0.609927648000
S | | | | | | | |    , status = Success , start = 2025-09-03 13:39:11.737915865 UTC , finish
S | | | | | | | |    = 2025-09-03 13:39:12.347843513 UTC , thread_cap_info = ("ThreadId 211",
S | | | | | | | |    2, False)}
S | | | | | | | |    
| | F | | | | | |    
| | E | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E | | | | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | E | | | | | |    = 5 , total_length = 54} , self = 141 , parent = Nothing , duration = 0.614113843000
| | E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:11.742836416
| | E | | | | | |    UTC , finish = 2025-09-03 13:39:12.356950259 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |    212", 2, False)}
| | E | | | | | |    
| | | | | | | | F    
| | | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S    = 22 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 18 ,
| | | | | | | | S    alphabet_size = 7 , total_length = 176} , self = 144 , parent = Nothing
| | | | | | | | S    , duration = 0.534863969000 , status = Success , start = 2025-09-03 13:39:11.836780948
| | | | | | | | S    UTC , finish = 2025-09-03 13:39:12.371644917 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S    214", 1, False)}
| | | | | | | | S    
| | | | | F | | |    
| | | | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | | | E | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size
| | | | | E | | |    = 7 , total_length = 176} , self = 146 , parent = Nothing , duration =
| | | | | E | | |    0.442816136000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E | | |    13:39:11.929183395 UTC , finish = 2025-09-03 13:39:12.371999531 UTC , thread_cap_info
| | | | | E | | |    = ("ThreadId 215", 1, False)}
| | | | | E | | |    
| | | | | | F | |    
| | | | | |   F |    
| | | | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S   |    = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | | | S   |    = 4 , total_length = 55} , self = 139 , parent = Nothing , duration = 0.385145652000
| | | | | | S   |    , status = Success , start = 2025-09-03 13:39:11.971696419 UTC , finish
| | | | | | S   |    = 2025-09-03 13:39:12.356842071 UTC , thread_cap_info = ("ThreadId 216",
| | | | | | S   |    1, False)}
| | | | | | S   |    
| F | | | | |   |    
|   | | F | |   |    
S   | |   | |   |    
    | |   | S   |    
    E |   |     |    
      |   |     S    
      |   E          
      E              
CNF 8452 vars 31915 clauses
