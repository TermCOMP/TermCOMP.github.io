last 1538 length 6441
last 1536 length 6383
CNF 1536 vars 6383 clauses
CNF 1538 vars 6441 clauses
last 627 length 2617
CNF 627 vars 2617 clauses
last 643 length 2686
last 488 length 2027
CNF 643 vars 2686 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1841, clauses: 6786
last 3324 length 13475
last 498 length 2061
last 4202 length 18250
CNF 488 vars 2027 clauses
last 4979 length 20982
last 6078 length 25690
last 1841 length 6786
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22619
CNF 3324 vars 13475 clauses
CNF 498 vars 2061 clauses
CNF 4202 vars 18250 clauses
CNF 4979 vars 20982 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1525, clauses: 5542
CNF 6078 vars 25690 clauses
CNF 1841 vars 6786 clauses
last 5439 length 22619
last 1525 length 5542
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6479, clauses: 26187
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4517, clauses: 18715
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8053, clauses: 32551
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1841, clauses: 6786, status: Satisfied, time: 0.361538879s
CNF 5439 vars 22619 clauses
CNF 1525 vars 5542 clauses
last 6479 length 26187
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18774, clauses: 78753
last 4517 length 18715
last 8053 length 32551
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21765, clauses: 91279
last 464 length 1915
last 457 length 1845
CNF 6479 vars 26187 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1525, clauses: 5542, status: Satisfied, time: 0.675318014s
last 18774 length 78753
CNF 4517 vars 18715 clauses
CNF 8053 vars 32551 clauses
last 21765 length 91279
CNF 464 vars 1915 clauses
CNF 457 vars 1845 clauses
last 408 length 1741
last 498 length 2052
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6479, clauses: 26187, status: Satisfied, time: 0.438822104s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1525, clauses: 5506
CNF 18774 vars 78753 clauses
CNF 21765 vars 91279 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4517, clauses: 18705
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8053, clauses: 32551, status: Satisfied, time: 0.460304146s
CNF 408 vars 1741 clauses
CNF 498 vars 2052 clauses
last 1525 length 5506
last 4517 length 18705
last 4613 length 19502
last 3196 length 13051
last 2363 length 9770
last 2661 length 11014
CNF 1525 vars 5506 clauses
CNF 4613 vars 19502 clauses
CNF 4517 vars 18705 clauses
CNF 2363 vars 9770 clauses
CNF 3196 vars 13051 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1417, clauses: 5077
CNF 2661 vars 11014 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4469, clauses: 18535
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1525, clauses: 5506, status: Unsatisfied, time: 0.341321403s
last 1417 length 5077
last 4469 length 18535
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4517, clauses: 18705, status: Unsatisfied, time: 0.422753189s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6150, clauses: 24677
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5095, clauses: 19255
CNF 1417 vars 5077 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2847, clauses: 11414
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18390, clauses: 77155
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17454, clauses: 73380
CNF 4469 vars 18535 clauses
last 6150 length 24677
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2496, clauses: 9554
last 5095 length 19255
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1417, clauses: 5077, status: Satisfied, time: 0.798699404s
last 2847 length 11414
last 18390 length 77155
last 17454 length 73380
last 2496 length 9554
**************************************************CNF 5095 vars 19255 clauses
CNF 2847 vars 11414 clauses

CNF 2496 vars 9554 clauses
CNF 6150 vars 24677 clauses
CNF 18390 vars 77155 clauses
CNF 17454 vars 73380 clauses
summaryMatrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5095, clauses: 19255, status: Satisfied, time: 0.155520961s

**************************************************
SRS with 3 rules on 2 letters       context
SRS with 4 rules on 2 letters       mirror
SRS with 4 rules on 2 letters       DP
SRS with 5 strict rules and 4 weak rules on 4 letters       weights
SRS with 2 strict rules and 4 weak rules on 3 letters       EDG
SRS with 2 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 3 letters       EDG
SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b] -> [b, a, b, a, a] {- Input 1 -}
  [b, b] -> [b] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [a, a, b] -> [b, a, b, a, a] {- Input 1 -}
  [b, b] -> [b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [b, a, a] -> [a, a, b, a, b] {- Mirror (Input 1) -}
  [b, b] -> [b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [a#, a, b, a, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [a#, b] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [a#, b, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#] {- DP (Top 4) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, a, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 4) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, a, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 4) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, a, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, a, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, a, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 8A 9A 11A - \
        | 8A 9A 11A - |
        | 8A 9A 11A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, b] ->= [b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Context\Mirror(4,2)\Deepee(5/4,4)\Weight\EDG(2/4,3)\Matrix{\Arctic}{3}\EDG(1/4,3)\Matrix{\Arctic}{3}(0/4,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.569612197000
  min duration 0.039640380000
  total durat. 2.936757374000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.524314816000
  min duration 0.097479772000
  total durat. 2.770545975000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.221380020000
  min duration 1.221380020000
  total durat. 1.221380020000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 26}
    , self = 103
    , parent = Nothing
    , duration = 1.221380020000
    , status = Fail
    , start = 2025-09-03 10:58:27.911479497 UTC
    , finish = 2025-09-03 10:58:29.132859517 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.064768628000
  min duration 0.770634078000
  total durat. 4.653830375000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 173}
    , self = 82
    , parent = Nothing
    , duration = 1.016926887000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:58:27.050730128 UTC
    , finish = 2025-09-03 10:58:28.067657015 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 12
      , alphabet_size = 7
      , total_length = 212}
    , self = 89
    , parent = Nothing
    , duration = 1.064768628000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:58:27.146257368 UTC
    , finish = 2025-09-03 10:58:28.211025996 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.223177207000
  min duration 0.904727740000
  total durat. 5.171931172000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 173}
    , self = 80
    , parent = Nothing
    , duration = 1.091459688000
    , status = Success
    , start = 2025-09-03 10:58:26.939218304 UTC
    , finish = 2025-09-03 10:58:28.030677992 UTC
    , thread_cap_info = ("ThreadId 117", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 12
      , alphabet_size = 7
      , total_length = 212}
    , self = 87
    , parent = Nothing
    , duration = 1.223177207000
    , status = Success
    , start = 2025-09-03 10:58:26.970461558 UTC
    , finish = 2025-09-03 10:58:28.193638765 UTC
    , thread_cap_info = ("ThreadId 118", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.849384240000
  min duration 2.849384240000
  total durat. 2.849384240000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 12}
    , self = 110
    , parent = Nothing
    , duration = 2.849384240000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:58:26.421057475 UTC
    , finish = 2025-09-03 10:58:29.270441715 UTC
    , thread_cap_info = ("ThreadId 37", 2, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 2.845388155000
  min duration 2.845388155000
  total durat. 2.845388155000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 12}
    , self = 109
    , parent = Nothing
    , duration = 2.845388155000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:58:26.420935971 UTC
    , finish = 2025-09-03 10:58:29.266324126 UTC
    , thread_cap_info = ("ThreadId 22", 0, False)}
**************************************************
E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                    = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
E                    = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 12} , self
E                    = 109 , parent = Nothing , duration = 2.845388155000 , status = Except
E                    "AsyncCancelled" , start = 2025-09-03 10:58:26.420935971 UTC , finish =
E                    2025-09-03 10:58:29.266324126 UTC , thread_cap_info = ("ThreadId 22", 0,
E                    False)}
E                    
| E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                  = 12} , self = 110 , parent = Nothing , duration = 2.849384240000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-03 10:58:26.421057475 UTC ,
| E                  finish = 2025-09-03 10:58:29.270441715 UTC , thread_cap_info = ("ThreadId
| E                  37", 2, False)}
| E                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                = 15 , num_top_rules = 15 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | F                = 173} , self = 62 , parent = Nothing , duration = 0.568354283000 , status
| | F                = Fail , start = 2025-09-03 10:58:26.442547136 UTC , finish = 2025-09-03
| | F                10:58:27.010901419 UTC , thread_cap_info = ("ThreadId 66", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F              = 15 , num_top_rules = 15 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | F              = 173} , self = 59 , parent = Nothing , duration = 0.483256583000 , status
| | | F              = Fail , start = 2025-09-03 10:58:26.450442197 UTC , finish = 2025-09-03
| | | F              10:58:26.93369878 UTC , thread_cap_info = ("ThreadId 68", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | F            = 22 , num_top_rules = 22 , num_weak_rules = 12 , alphabet_size = 7 , total_length
| | | | F            = 212} , self = 63 , parent = Nothing , duration = 0.569612197000 , status
| | | | F            = Fail , start = 2025-09-03 10:58:26.521997997 UTC , finish = 2025-09-03
| | | | F            10:58:27.091610194 UTC , thread_cap_info = ("ThreadId 75", 3, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | | F          = 22 , num_top_rules = 22 , num_weak_rules = 12 , alphabet_size = 7 , total_length
| | | | | F          = 212} , self = 61 , parent = Nothing , duration = 0.421077300000 , status
| | | | | F          = Fail , start = 2025-09-03 10:58:26.530444073 UTC , finish = 2025-09-03
| | | | | F          10:58:26.951521373 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | F        = 33} , self = 57 , parent = Nothing , duration = 0.214256821000 , status
| | | | | | F        = Fail , start = 2025-09-03 10:58:26.559637591 UTC , finish = 2025-09-03
| | | | | | F        10:58:26.773894412 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | F      = 27} , self = 60 , parent = Nothing , duration = 0.340864732000 , status
| | | | | | | F      = Fail , start = 2025-09-03 10:58:26.610655384 UTC , finish = 2025-09-03
| | | | | | | F      10:58:26.951520116 UTC , thread_cap_info = ("ThreadId 103", 1, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | | F    = 27} , self = 58 , parent = Nothing , duration = 0.231883808000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 10:58:26.61066238 UTC , finish = 2025-09-03
| | | | | | | | F    10:58:26.842546188 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | | | | F    
| | | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S  = 7 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | S  = 3 , total_length = 33} , self = 64 , parent = Nothing , duration = 0.956868211000
| | | | | | | | | S  , status = Success , start = 2025-09-03 10:58:26.630765242 UTC , finish
| | | | | | | | | S  = 2025-09-03 10:58:27.587633453 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | | S  1, False)}
| | | | | | | | | S  
| | | | | | F | | |  
| | | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 4 , alphabet_size
| | | | | | E | | |  = 3 , total_length = 33} , self = 66 , parent = Nothing , duration = 0.826383739000
| | | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:26.773930836
| | | | | | E | | |  UTC , finish = 2025-09-03 10:58:27.600314575 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | |  109", 1, False)}
| | | | | | E | | |  
| | | | | | | | F |  
| | | | | | | | S |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S |  = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | | | S |  = 3 , total_length = 27} , self = 71 , parent = Nothing , duration = 0.904727740000
| | | | | | | | S |  , status = Success , start = 2025-09-03 10:58:26.842581149 UTC , finish
| | | | | | | | S |  = 2025-09-03 10:58:27.747308889 UTC , thread_cap_info = ("ThreadId 113",
| | | | | | | | S |  1, False)}
| | | | | | | | S |  
| | | F | | | | | |  
| | | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | | | |  = 27 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 12
| | | S | | | | | |  , alphabet_size = 6 , total_length = 173} , self = 80 , parent = Nothing
| | | S | | | | | |  , duration = 1.091459688000 , status = Success , start = 2025-09-03 10:58:26.939218304
| | | S | | | | | |  UTC , finish = 2025-09-03 10:58:28.030677992 UTC , thread_cap_info = ("ThreadId
| | | S | | | | | |  117", 3, False)}
| | | S | | | | | |  
| | | | | | | F | |  
| | | | | F |   | |  
| | | | | S |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |   | |  = 34 , num_strict_rules = 22 , num_top_rules = 22 , num_weak_rules = 12
| | | | | S |   | |  , alphabet_size = 7 , total_length = 212} , self = 87 , parent = Nothing
| | | | | S |   | |  , duration = 1.223177207000 , status = Success , start = 2025-09-03 10:58:26.970461558
| | | | | S |   | |  UTC , finish = 2025-09-03 10:58:28.193638765 UTC , thread_cap_info = ("ThreadId
| | | | | S |   | |  118", 3, False)}
| | | | | S |   | |  
| | | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | E | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | | E | |  = 3 , total_length = 27} , self = 73 , parent = Nothing , duration = 0.770634078000
| | | | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:26.976793254
| | | | | | | E | |  UTC , finish = 2025-09-03 10:58:27.747427332 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |  119", 1, False)}
| | | | | | | E | |  
| | F | | | | | | |  
| | E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| | E | | | | | | |  , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 12 , alphabet_size
| | E | | | | | | |  = 6 , total_length = 173} , self = 82 , parent = Nothing , duration = 1.016926887000
| | E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:27.050730128
| | E | | | | | | |  UTC , finish = 2025-09-03 10:58:28.067657015 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | |  120", 3, False)}
| | E | | | | | | |  
| | | | F | | | | |  
| | | | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | | E | | | | |  , num_strict_rules = 22 , num_top_rules = 22 , num_weak_rules = 12 , alphabet_size
| | | | E | | | | |  = 7 , total_length = 212} , self = 89 , parent = Nothing , duration = 1.064768628000
| | | | E | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:27.146257368
| | | | E | | | | |  UTC , finish = 2025-09-03 10:58:28.211025996 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | |  121", 3, False)}
| | | | E | | | | |  
| | | | | | | | | S  
| | | | | | E | |    
| | | | | | F | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F | |    = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | F | |    = 26} , self = 78 , parent = Nothing , duration = 0.297977115000 , status
| | | | | | F | |    = Fail , start = 2025-09-03 10:58:27.60049142 UTC , finish = 2025-09-03
| | | | | | F | |    10:58:27.898468535 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | | | | | F | |    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | | | F  = 26} , self = 79 , parent = Nothing , duration = 0.292351184000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 10:58:27.606134216 UTC , finish = 2025-09-03
| | | | | | | | | F  10:58:27.8984854 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | | | | | | | | F  
| | | | | | | | S |  
| | | | | | | E   |  
| | | | | | | F   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F   |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | F   |  = 23} , self = 96 , parent = Nothing , duration = 0.504600710000 , status
| | | | | | | F   |  = Fail , start = 2025-09-03 10:58:27.747532043 UTC , finish = 2025-09-03
| | | | | | | F   |  10:58:28.252132753 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | | | | F   |  
| | | | | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 3 , total_length
| | | | | | | | F |  = 23} , self = 97 , parent = Nothing , duration = 0.524314816000 , status
| | | | | | | | F |  = Fail , start = 2025-09-03 10:58:27.747534983 UTC , finish = 2025-09-03
| | | | | | | | F |  10:58:28.271849799 UTC , thread_cap_info = ("ThreadId 140", 1, False)}
| | | | | | | | F |  
| | | | | | F | | |  
| | | | | |   | | F  
| | | | | | F | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F | |    = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | F | |    = 3 , total_length = 26} , self = 102 , parent = Nothing , duration = 0.832743364000
| | | | | | F | |    , status = Fail , start = 2025-09-03 10:58:27.898504362 UTC , finish =
| | | | | | F | |    2025-09-03 10:58:28.731247726 UTC , thread_cap_info = ("ThreadId 143",
| | | | | | F | |    1, False)}
| | | | | | F | |    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | F  = 3 , total_length = 26} , self = 103 , parent = Nothing , duration = 1.221380020000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 10:58:27.911479497 UTC , finish =
| | | | | | | | | F  2025-09-03 10:58:29.132859517 UTC , thread_cap_info = ("ThreadId 144",
| | | | | | | | | F  1, False)}
| | | | | | | | | F  
| | | S | | | | | |  
| | E   | | | | | |  
| | F   | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | F   | | | | | |  = 13 , num_top_rules = 13 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | F   | | | | | |  = 161} , self = 100 , parent = Nothing , duration = 0.324066792000 , status
| | F   | | | | | |  = Fail , start = 2025-09-03 10:58:28.069204005 UTC , finish = 2025-09-03
| | F   | | | | | |  10:58:28.393270797 UTC , thread_cap_info = ("ThreadId 152", 3, False)}
| | F   | | | | | |  
| | | F | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | F | | | | | |  = 13 , num_top_rules = 13 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | F | | | | | |  = 161} , self = 98 , parent = Nothing , duration = 0.292276722000 , status
| | | F | | | | | |  = Fail , start = 2025-09-03 10:58:28.071881338 UTC , finish = 2025-09-03
| | | F | | | | | |  10:58:28.36415806 UTC , thread_cap_info = ("ThreadId 151", 3, False)}
| | | F | | | | | |  
| | | | | S | | | |  
| | | | E   | | | |  
| | | | F   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | F   | | | |  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F   | | | |  = 110} , self = 101 , parent = Nothing , duration = 0.241894650000 , status
| | | | F   | | | |  = Fail , start = 2025-09-03 10:58:28.211394408 UTC , finish = 2025-09-03
| | | | F   | | | |  10:58:28.453289058 UTC , thread_cap_info = ("ThreadId 158", 3, False)}
| | | | F   | | | |  
| | | | | F | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | F | | | |  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | F | | | |  = 110} , self = 99 , parent = Nothing , duration = 0.181858899000 , status
| | | | | F | | | |  = Fail , start = 2025-09-03 10:58:28.211397487 UTC , finish = 2025-09-03
| | | | | F | | | |  10:58:28.393256386 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | | | F | | | |  
| | | | | | | F | |  
| | | | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S | |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | S | |  = 3 , total_length = 23} , self = 104 , parent = Nothing , duration = 0.995698326000
| | | | | | | S | |  , status = Success , start = 2025-09-03 10:58:28.270471875 UTC , finish
| | | | | | | S | |  = 2025-09-03 10:58:29.266170201 UTC , thread_cap_info = ("ThreadId 160",
| | | | | | | S | |  1, False)}
| | | | | | | S | |  
| | | | | | | | F |  
| | | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | E |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | | E |  = 3 , total_length = 23} , self = 106 , parent = Nothing , duration = 0.975117043000
| | | | | | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:58:28.291142201
| | | | | | | | E |  UTC , finish = 2025-09-03 10:58:29.266259244 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E |  167", 1, False)}
| | | | | | | | E |  
| | | F | | | | | |  
| | |   | F | | | |  
| | F   |   | | | |  
| |     F   | | | |  
| |         F | | |  
| |           | | F  
| |           S |    
| |             E    
E |                  
  E                  
