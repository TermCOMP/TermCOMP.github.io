last 557 length 2163
CNF 557 vars 2163 clauses
last 472 length 1851
CNF 472 vars 1851 clauses
last 512 length 1983
last 429 length 1676
CNF 512 vars 1983 clauses
CNF 429 vars 1676 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2606, clauses: 9342
last 2606 length 9342
last 3418 length 15540
CNF 3418 vars 15540 clauses
last 2468 length 10450
CNF 2606 vars 9342 clauses
CNF 2468 vars 10450 clauses
last 2728 length 12070
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2407, clauses: 8563
last 3460 length 14029
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2606, clauses: 9342, status: Satisfied, time: 0.129965019s
last 4353 length 17899
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6581, clauses: 27093
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7213, clauses: 29753
last 2084 length 9055
last 2575 length 11558
CNF 2728 vars 12070 clauses
last 2407 length 8563
last 415 length 1629
CNF 3460 vars 14029 clauses
last 400 length 1581
last 6581 length 27093
CNF 2575 vars 11558 clauses
CNF 4353 vars 17899 clauses
CNF 2084 vars 9055 clauses
CNF 2407 vars 8563 clauses
last 2351 length 10007
last 2649 length 11777
CNF 400 vars 1581 clauses
CNF 6581 vars 27093 clauses
CNF 415 vars 1629 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5161, clauses: 18709
CNF 2649 vars 11777 clauses
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2407, clauses: 8563, status: Unsatisfied, time: 0.266075094s
last 5161 length 18709
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1997, clauses: 7080

last 1997 length 7080
summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       weights
SRS with 20 rules on 9 letters       mirror
SRS with 20 rules on 9 letters       DP
SRS with 38 strict rules and 20 weak rules on 14 letters       weights
SRS with 16 strict rules and 20 weak rules on 12 letters       EDG
SRS with 16 strict rules and 20 weak rules on 12 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 16 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [a, b, c] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, b] -> [b, a, c] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, a]] -> [ [a, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, b], [b, a]] -> [ [c, b] , [b, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, b], [b, b]] -> [ [c, b] , [b, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([b, c], 1/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, b], [b, a]] -> [ [c, b] , [b, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, b], [b, b]] -> [ [c, b] , [b, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, b], [a, a], [a, a]] -> [ [c, b] , [b, c] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [a, a]] -> [ [c, c] , [b, c] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, b], [a, a], [b, a]] -> [ [c, b] , [b, c] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [b, a]] -> [ [c, c] , [b, c] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, b], [a, a], [c, a]] -> [ [c, b] , [b, c] , [a, b] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [c, a]] -> [ [c, c] , [b, c] , [a, b] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, a], [c, b], [a, c]] -> [ [c, a] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[b, b], [c, b], [a, c]] -> [ [c, b] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[b, c], [c, b], [a, c]] -> [ [c, c] , [a, c] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[b, a], [c, b], [b, c]] -> [ [c, a] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[b, b], [c, b], [b, c]] -> [ [c, b] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[b, c], [c, b], [b, c]] -> [ [c, c] , [a, c] , [b, a] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[b, a], [c, b], [c, c]] -> [ [c, a] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[b, b], [c, b], [c, c]] -> [ [c, b] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[b, c], [c, b], [c, c]] -> [ [c, c] , [a, c] , [b, a] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
CNF 5161 vars 18709 clauses
CNF 1997 vars 7080 clauses
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [c, a]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [a, b]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, b]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 3/1)
  ([a, b], 3/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 3/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 3/1)
  ([c, c], 0/1)
  ([a, b]#, 3/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 2/1)
  ([b, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [a, b] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [b, c]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, c]#, [c, b], [c, c]] |-> [ [b, a]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [a, b]
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [a, c]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [b, a]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [b, b]
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [b, c]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [c, a]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [c, b]
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [c, c]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [a, c]#
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [b, a]#
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [b, c]#
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [a, b] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b], [a, c]] ->= [ [c, a] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [a, c]] ->= [ [c, b] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [a, c]] ->= [ [c, c] , [a, c] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [b, c]] ->= [ [c, a] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [b, c]] ->= [ [c, b] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [b, c]] ->= [ [c, c] , [a, c] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, a], [c, b], [c, c]] ->= [ [c, a] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, b], [c, b], [c, c]] ->= [ [c, b] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c], [c, b], [c, c]] ->= [ [c, c] , [a, c] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}(36,9)\Weight\Mirror(20,9)\Deepee(38/20,14)\Weight\EDG(16/20,12)\Matrix{\Natural}{2}(0/16,9)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1997, clauses: 7080, status: Unsatisfied, time: 0.061347656s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5161, clauses: 18709, status: Satisfied, time: 0.074615423s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S                = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
S                alphabet_size = 5 , total_length = 43} , self = 67 , parent = Nothing ,
S                duration = 0.279558519000 , status = Success , start = 2025-09-03 11:44:32.388141556
S                UTC , finish = 2025-09-03 11:44:32.667700075 UTC , thread_cap_info = ("ThreadId
S                78", 1, False)}
S                
| E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| E              = 2 , num_top_rules = 2 , num_weak_rules = 20 , alphabet_size = 10 , total_length
| E              = 134} , self = 62 , parent = Nothing , duration = 0.204183008000 , status
| E              = Except "AsyncCancelled" , start = 2025-09-03 11:44:32.394260303 UTC ,
| E              finish = 2025-09-03 11:44:32.598443311 UTC , thread_cap_info = ("ThreadId
| E              85", 0, False)}
| E              
| | S            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S            = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | S            = 2 , num_top_rules = 2 , num_weak_rules = 20 , alphabet_size = 10 , total_length
| | S            = 134} , self = 58 , parent = Nothing , duration = 0.121445306000 , status
| | S            = Success , start = 2025-09-03 11:44:32.407701935 UTC , finish = 2025-09-03
| | S            11:44:32.529147241 UTC , thread_cap_info = ("ThreadId 86", 0, False)}
| | S            
| | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | E          = 5 , total_length = 43} , self = 69 , parent = Nothing , duration = 0.260051291000
| | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:44:32.407715103
| | | E          UTC , finish = 2025-09-03 11:44:32.667766394 UTC , thread_cap_info = ("ThreadId
| | | E          88", 1, False)}
| | | E          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | F        = 20 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F        = 120} , self = 61 , parent = Nothing , duration = 0.165519203000 , status
| | | | F        = Fail , start = 2025-09-03 11:44:32.428148544 UTC , finish = 2025-09-03
| | | | F        11:44:32.593667747 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | | F        
| | | | | S      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | S      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | S      = 20 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | S      = 120} , self = 74 , parent = Nothing , duration = 0.242901886000 , status
| | | | | S      = Success , start = 2025-09-03 11:44:32.449502115 UTC , finish = 2025-09-03
| | | | | S      11:44:32.692404001 UTC , thread_cap_info = ("ThreadId 96", 3, False)}
| | | | | S      
| | | | | | S    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | S    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | S    = 16 , num_top_rules = 16 , num_weak_rules = 20 , alphabet_size = 12 ,
| | | | | | S    total_length = 207} , self = 90 , parent = Nothing , duration = 0.303849386000
| | | | | | S    , status = Success , start = 2025-09-03 11:44:32.48797508 UTC , finish
| | | | | | S    = 2025-09-03 11:44:32.791824466 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | S    0, False)}
| | | | | | S    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | F  = 16 , num_top_rules = 16 , num_weak_rules = 20 , alphabet_size = 12 ,
| | | | | | | F  total_length = 207} , self = 89 , parent = Nothing , duration = 0.223732264000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:44:32.515502438 UTC , finish =
| | | | | | | F  2025-09-03 11:44:32.739234702 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | | F  0, False)}
| | | | | | | F  
| | S | | | | |  
| |   | F | | |  
| E   |   | | |  
| F   |   | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| F   |   | | |  = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size = 9 , total_length
| F   |   | | |  = 87} , self = 92 , parent = Nothing , duration = 0.206549494000 , status
| F   |   | | |  = Fail , start = 2025-09-03 11:44:32.600605621 UTC , finish = 2025-09-03
| F   |   | | |  11:44:32.807155115 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| F   |   | | |  
| | F |   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | F |   | | |  = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size = 9 , total_length
| | F |   | | |  = 87} , self = 88 , parent = Nothing , duration = 0.130793198000 , status
| | F |   | | |  = Fail , start = 2025-09-03 11:44:32.608372361 UTC , finish = 2025-09-03
| | F |   | | |  11:44:32.739165559 UTC , thread_cap_info = ("ThreadId 117", 0, False)}
| | F |   | | |  
S | | |   | | |  
  | | E   | | |  
  | |     S | |  
  | F       | |  
  |         | F  
  |         S    
  F              
