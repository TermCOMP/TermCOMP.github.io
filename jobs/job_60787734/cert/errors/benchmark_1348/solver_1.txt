last 3508 length 14984
CNF 3508 vars 14984 clauses
last 3290 length 13555
CNF 3290 vars 13555 clauses
last 382 length 1495
last 325 length 1276
last 7443 length 30963
CNF 7443 vars 30963 clauses
CNF 325 vars 1276 clauses
CNF 382 vars 1495 clauses
last 426 length 1611
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1844, clauses: 6594
last 1844 length 6594
last 355 length 1366
CNF 426 vars 1611 clauses
last 8634 length 35734
last 9003 length 36449
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4373, clauses: 17781
CNF 1844 vars 6594 clauses
last 11722 length 47142
CNF 355 vars 1366 clauses
CNF 8634 vars 35734 clauses
last 4373 length 17781
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2344, clauses: 8374
CNF 9003 vars 36449 clauses
CNF 11722 vars 47142 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1844, clauses: 6594, status: Satisfied, time: 0.23957893s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5333, clauses: 21740
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19286, clauses: 75075
last 2344 length 8374
last 351 length 1378
last 309 length 1218
last 5333 length 21740
last 19286 length 75075
CNF 351 vars 1378 clauses
CNF 2344 vars 8374 clauses
CNF 5333 vars 21740 clauses
CNF 19286 vars 75075 clauses
CNF 309 vars 1218 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2344, clauses: 8374, status: Satisfied, time: 0.152019857s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1738, clauses: 6169
last 1738 length 6169
CNF 1738 vars 6169 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1738, clauses: 6169, status: Unsatisfied, time: 0.090805282s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4327, clauses: 17605
last 4327 length 17605
CNF 4327 vars 17605 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2707, clauses: 10485
last 2707 length 10485
last 325 length 1244
CNF 2707 vars 10485 clauses
last 356 length 1343
CNF 325 vars 1244 clauses
CNF 356 vars 1343 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4327, clauses: 17605, status: Unsatisfied, time: 0.250923881s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2133, clauses: 7553
last 2133 length 7553
CNF 2133 vars 7553 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4995, clauses: 20324
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2707, clauses: 10485, status: Unsatisfied, time: 0.208111996s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2801, clauses: 10726
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2133, clauses: 7553, status: Satisfied, time: 0.07227259s
last 4995 length 20324
last 2801 length 10726
CNF 2801 vars 10726 clauses
CNF 4995 vars 20324 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7139, clauses: 28292
last 7139 length 28292
last 318 length 1223
last 310 length 1173
CNF 7139 vars 28292 clauses
CNF 318 vars 1223 clauses
CNF 310 vars 1173 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2027, clauses: 7128
last 2027 length 7128
CNF 2027 vars 7128 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2801, clauses: 10726, status: Unsatisfied, time: 0.323657541s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4949, clauses: 20148
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2027, clauses: 7128, status: Satisfied, time: 0.121312656s
last 4949 length 20148
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5210, clauses: 19779
last 5210 length 19779
CNF 5210 vars 19779 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 5 strict rules and 3 weak rules on 6 letters       EDG
SRS with 5 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 3 weak rules on 6 letters       EDG
SRS with 4 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 3 weak rules on 6 letters       EDG
SRS with 3 strict rules and 3 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 6 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [b] {- Input 0 -}
  [a, b] -> [c, c] {- Input 1 -}
  [b, c] -> [b, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [b] {- Mirror (Input 0) -}
  [b, a] -> [c, c] {- Mirror (Input 1) -}
  [c, b] -> [a, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b] |-> [a#, b] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b] |-> [a#, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 14A 14A 16A - \
        | 14A 14A 16A - |
        | 14A 14A 16A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 14A 16A 17A - \
        | 14A 16A 17A - |
        | 14A 16A 17A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 14A 16A 17A - \
        | 14A 16A 17A - |
        | 14A 16A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [c#] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 3A 4A 6A - \
        | 3A 4A 6A - |
        | 3A 4A 6A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 5A 7A - \
        | 4A 5A 7A - |
        | 4A 5A 7A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 11A 13A 13A - \
        | 11A 13A 13A - |
        | 11A 13A 13A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 12A 13A 13A - \
        | 12A 13A 13A - |
        | 12A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b#, a] |-> [c#, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, b] |-> [a#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 2/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a] ->= [c, c] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee\EDG(5/3,6)\Matrix{\Arctic}{3}\EDG(4/3,6)\Matrix{\Arctic}{3}\EDG(3/3,6)\Matrix{\Arctic}{3}(2/3,6)\Weight(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.666484124000
  min duration 0.022293309000
  total durat. 1.741673350000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.587749285000
  min duration 0.020749849000
  total durat. 1.488968315000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.395056912000
  min duration 0.274349189000
  total durat. 1.271465464000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.410413773000
  min duration 0.210659944000
  total durat. 1.248893943000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.778343828000
  min duration 1.778343828000
  total durat. 1.778343828000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 101
    , parent = Nothing
    , duration = 1.778343828000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:40:02.050426722 UTC
    , finish = 2025-09-03 11:40:03.82877055 UTC
    , thread_cap_info = ("ThreadId 43", 2, False)}
**************************************************
E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                = 12} , self = 101 , parent = Nothing , duration = 1.778343828000 , status
E                = Except "AsyncCancelled" , start = 2025-09-03 11:40:02.050426722 UTC ,
E                finish = 2025-09-03 11:40:03.82877055 UTC , thread_cap_info = ("ThreadId
E                43", 2, False)}
E                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 162} , self = 52 , parent = Nothing , duration = 0.151838643000 , status
| F              = Fail , start = 2025-09-03 11:40:02.056523005 UTC , finish = 2025-09-03
| F              11:40:02.208361648 UTC , thread_cap_info = ("ThreadId 63", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | F            = 51 , num_top_rules = 51 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F            total_length = 426} , self = 65 , parent = Nothing , duration = 0.666484124000
| | F            , status = Fail , start = 2025-09-03 11:40:02.078842607 UTC , finish =
| | F            2025-09-03 11:40:02.745326731 UTC , thread_cap_info = ("ThreadId 75", 3,
| | F            False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | | F          = 51 , num_top_rules = 51 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | F          total_length = 426} , self = 59 , parent = Nothing , duration = 0.281461016000
| | | F          , status = Fail , start = 2025-09-03 11:40:02.082262282 UTC , finish =
| | | F          2025-09-03 11:40:02.363723298 UTC , thread_cap_info = ("ThreadId 76", 3,
| | | F          False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 99 , num_strict_rules
| | | | F        = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size = 18 ,
| | | | F        total_length = 540} , self = 66 , parent = Nothing , duration = 0.638351072000
| | | | F        , status = Fail , start = 2025-09-03 11:40:02.122757192 UTC , finish =
| | | | F        2025-09-03 11:40:02.761108264 UTC , thread_cap_info = ("ThreadId 81", 3,
| | | | F        False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 99 , num_strict_rules
| | | | | F      = 72 , num_top_rules = 72 , num_weak_rules = 27 , alphabet_size = 18 ,
| | | | | F      total_length = 540} , self = 62 , parent = Nothing , duration = 0.587749285000
| | | | | F      , status = Fail , start = 2025-09-03 11:40:02.143349726 UTC , finish =
| | | | | F      2025-09-03 11:40:02.731099011 UTC , thread_cap_info = ("ThreadId 82", 0,
| | | | | F      False)}
| | | | | F      
| F | | | |      
| S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |      = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| S | | | |      = 5 , total_length = 27} , self = 63 , parent = Nothing , duration = 0.410413773000
| S | | | |      , status = Success , start = 2025-09-03 11:40:02.332277363 UTC , finish
| S | | | |      = 2025-09-03 11:40:02.742691136 UTC , thread_cap_info = ("ThreadId 104",
| S | | | |      2, False)}
| S | | | |      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F    = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | F    = 31} , self = 60 , parent = Nothing , duration = 0.144332047000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:40:02.362281649 UTC , finish = 2025-09-03
| | | | | | F    11:40:02.506613696 UTC , thread_cap_info = ("ThreadId 106", 2, False)}
| | | | | | F    
| | | F | | |    
| | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | E | | |    = 5 , total_length = 27} , self = 67 , parent = Nothing , duration = 0.395056912000
| | | E | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:02.366084655
| | | E | | |    UTC , finish = 2025-09-03 11:40:02.761141567 UTC , thread_cap_info = ("ThreadId
| | | E | | |    107", 2, False)}
| | | E | | |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F  = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | F  = 31} , self = 61 , parent = Nothing , duration = 0.289442961000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:40:02.376353708 UTC , finish = 2025-09-03
| | | | | | | F  11:40:02.665796669 UTC , thread_cap_info = ("ThreadId 109", 2, False)}
| | | | | | | F  
| | | | | | F |  
| | | | | | S |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S |  = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | | S |  = 6 , total_length = 31} , self = 73 , parent = Nothing , duration = 0.365736064000
| | | | | | S |  , status = Success , start = 2025-09-03 11:40:02.506646521 UTC , finish
| | | | | | S |  = 2025-09-03 11:40:02.872382585 UTC , thread_cap_info = ("ThreadId 114",
| | | | | | S |  2, False)}
| | | | | | S |  
| | | | | | | F  
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | | | E  = 6 , total_length = 31} , self = 77 , parent = Nothing , duration = 0.321036497000
| | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:02.666788413
| | | | | | | E  UTC , finish = 2025-09-03 11:40:02.98782491 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  118", 2, False)}
| | | | | | | E  
| | | | | F | |  
| S | | |   | |  
|   F | |   | |  
|     | F   | |  
|     E     | |  
| F         | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F         | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F         | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F         | |  = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 5 , total_length
| F         | |  = 24} , self = 74 , parent = Nothing , duration = 0.114613819000 , status
| F         | |  = Fail , start = 2025-09-03 11:40:02.761497242 UTC , finish = 2025-09-03
| F         | |  11:40:02.876111061 UTC , thread_cap_info = ("ThreadId 126", 2, False)}
| F         | |  
| | F       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F       | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F       | |  = 5 , total_length = 24} , self = 76 , parent = Nothing , duration = 0.133356139000
| | F       | |  , status = Fail , start = 2025-09-03 11:40:02.842271626 UTC , finish =
| | F       | |  2025-09-03 11:40:02.975627765 UTC , thread_cap_info = ("ThreadId 134",
| | F       | |  2, False)}
| | F       | |  
| | |       S |  
| F |         |  
| F |         |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F |         |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F |         |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| F |         |  = 5 , total_length = 24} , self = 84 , parent = Nothing , duration = 0.389121891000
| F |         |  , status = Fail , start = 2025-09-03 11:40:02.885024717 UTC , finish =
| F |         |  2025-09-03 11:40:03.274146608 UTC , thread_cap_info = ("ThreadId 137",
| F |         |  2, False)}
| F |         |  
| | F         |  
| | F         |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F         |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F         |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F         |  = 5 , total_length = 24} , self = 85 , parent = Nothing , duration = 0.379670329000
| | F         |  , status = Fail , start = 2025-09-03 11:40:02.983132808 UTC , finish =
| | F         |  2025-09-03 11:40:03.362803137 UTC , thread_cap_info = ("ThreadId 138",
| | F         |  2, False)}
| | F         |  
| | |         E  
| | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S          = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | S          = 6 , total_length = 27} , self = 86 , parent = Nothing , duration = 0.210659944000
| | | S          , status = Success , start = 2025-09-03 11:40:03.176548345 UTC , finish
| | | S          = 2025-09-03 11:40:03.387208289 UTC , thread_cap_info = ("ThreadId 148",
| | | S          2, False)}
| | | S          
| | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | E        = 6 , total_length = 27} , self = 88 , parent = Nothing , duration = 0.281022866000
| | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:03.182264028
| | | | E        UTC , finish = 2025-09-03 11:40:03.463286894 UTC , thread_cap_info = ("ThreadId
| | | | E        149", 2, False)}
| | | | E        
| F | | |        
| F | | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |        = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| F | | |        = 5 , total_length = 24} , self = 95 , parent = Nothing , duration = 0.401645881000
| F | | |        , status = Fail , start = 2025-09-03 11:40:03.286968553 UTC , finish =
| F | | |        2025-09-03 11:40:03.688614434 UTC , thread_cap_info = ("ThreadId 150",
| F | | |        2, False)}
| F | | |        
| | F | |        
| |   S |        
| |     E        
| | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | E            = 6 , total_length = 24} , self = 98 , parent = Nothing , duration = 0.274349189000
| | E            , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:03.550507575
| | E            UTC , finish = 2025-09-03 11:40:03.824856764 UTC , thread_cap_info = ("ThreadId
| | E            165", 2, False)}
| | E            
| | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S          = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | S          = 6 , total_length = 24} , self = 96 , parent = Nothing , duration = 0.262084162000
| | | S          , status = Success , start = 2025-09-03 11:40:03.562265193 UTC , finish
| | | S          = 2025-09-03 11:40:03.824349355 UTC , thread_cap_info = ("ThreadId 164",
| | | S          2, False)}
| | | S          
| F | |          
|   | S          
|   E            
E                
