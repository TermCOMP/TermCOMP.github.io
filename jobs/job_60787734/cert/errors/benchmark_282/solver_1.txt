last 2674 length 12008
last 2436 length 10677
CNF 2436 vars 10677 clauses
CNF 2674 vars 12008 clauses
last 675 length 2844
CNF 675 vars 2844 clauses
last 3010 length 13227
last 754 length 3236
CNF 3010 vars 13227 clauses
CNF 754 vars 3236 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1444, clauses: 5296
last 1444 length 5296
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4503, clauses: 16910
last 4503 length 16910
CNF 4503 vars 16910 clauses
last 3499 length 15588
CNF 3499 vars 15588 clauses
last 860 length 3646
last 4620 length 21668
CNF 4620 vars 21668 clauses
CNF 1444 vars 5296 clauses
CNF 860 vars 3646 clauses
last 985 length 4330
last 5524 length 27610
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1444, clauses: 5296, status: Unsatisfied, time: 0.226904082s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4977, clauses: 20757
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5181, clauses: 19565
last 4977 length 20757
last 5181 length 19565
CNF 985 vars 4330 clauses
CNF 5524 vars 27610 clauses
CNF 4977 vars 20757 clauses
CNF 5181 vars 19565 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4503, clauses: 16910, status: Unsatisfied, time: 0.400711027s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7191
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18281, clauses: 77189
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5181, clauses: 19565, status: Satisfied, time: 0.162943176s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2998, clauses: 12454
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4977, clauses: 20757, status: Unsatisfied, time: 0.223452141s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6228, clauses: 25985
last 1943 length 7191
last 18281 length 77189
last 2998 length 12454
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11049, clauses: 47150
last 6228 length 25985
last 4620 length 21668
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2373, clauses: 9180
CNF 1943 vars 7191 clauses
CNF 18281 vars 77189 clauses
CNF 2998 vars 12454 clauses
last 11049 length 47150
last 5524 length 27610
CNF 6228 vars 25985 clauses
CNF 4620 vars 21668 clauses
last 2373 length 9180
CNF 11049 vars 47150 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7191, status: Unsatisfied, time: 0.302114107s
CNF 2373 vars 9180 clauses
CNF 5524 vars 27610 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2998, clauses: 12454, status: Unsatisfied, time: 0.442466379s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3762, clauses: 15617
last 3762 length 15617
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2373, clauses: 9180, status: Unsatisfied, time: 0.44783185s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5181, clauses: 19565
last 5181 length 19565
CNF 5181 vars 19565 clauses
CNF 3762 vars 15617 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18281, clauses: 77189, status: Unsatisfied, time: 0.932265762s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4449, clauses: 17049
last 4449 length 17049
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5181, clauses: 19565, status: Satisfied, time: 0.626472845s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11049, clauses: 47150, status: Unsatisfied, time: 1.089192941s
CNF 4449 vars 17049 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8557, clauses: 37310
last 8557 length 37310
CNF 8557 vars 37310 clauses
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 rules on 4 letters       mirror
SRS with 8 rules on 4 letters       DP
SRS with 28 strict rules and 8 weak rules on 8 letters       weights
SRS with 8 strict rules and 8 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 8 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 8 weak rules on 6 letters       weights
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

  2 SRS with 4 strict rules and 8 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 8 weak rules on 6 letters       weights
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [0, 0, 0, 1] {- Input 0 -}
  [1, 0, 0, 1] -> [0, 0, 1, 0] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] -> [ [0, 0] , [0, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] -> [ [0, 0] , [0, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] -> [ [1, 0] , [0, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] -> [ [1, 0] , [0, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[0, 1], [1, 0], [0, 0], [0, 1], [1, 0]] -> [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[0, 1], [1, 0], [0, 0], [0, 1], [1, 1]] -> [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[1, 1], [1, 0], [0, 0], [0, 1], [1, 0]] -> [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[1, 1], [1, 0], [0, 0], [0, 1], [1, 1]] -> [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] -> [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] -> [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] -> [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] -> [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] -> [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] -> [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] -> [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] -> [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [ 1 , 0 ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 1]# , [0, 0] , [ 1 , 0 ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 0]# , [ 1 , 0 ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 1]# , [0, 0] , [ 0 , 0 ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [ 0 , 0 ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 0]# , [ 0 , 0 ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [ 1 , 0 ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 1]# , [0, 0] , [ 1 , 0 ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 0]# , [ 1 , 0 ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 1]# , [0, 0] , [ 0 , 0 ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [ 0 , 0 ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 0]# , [ 0 , 0 ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [1, 1]# , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [0, 1]# , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 1]# , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [0, 1]# , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [0, 1]# , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [0, 1]# , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
reason
  ([1, 1], 2/1)
  ([1, 0], 2/1)
  ([0, 1], 2/1)
  ([0, 0], 2/1)
  ([1, 1]#, 1/1)
  ([1, 0]#, 1/1)
  ([0, 1]#, 1/1)
  ([0, 0]#, 1/1)
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [1, 1]# , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 1]# , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [1, 1]# , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[0, 1]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 1]# , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ( [1, 1]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [1, 0]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [0, 1]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [0, 0]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [1, 1]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [0, 1]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[1, 1]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 1]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([1, 1], 0/1)
  ([1, 0], 0/1)
  ([0, 1], 0/1)
  ([0, 0], 0/1)
  ([1, 1]#, 1/1)
  ([0, 1]#, 0/1)
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [1, 0]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 0]# , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ( [1, 1]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [1, 0]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [0, 1]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [0, 0]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [1, 0]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [0, 0]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [1, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 0]#, [0, 1], [0, 0], [1, 0], [0, 1]] |-> [ [0, 0]# , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([1, 1], 0/1)
  ([1, 0], 0/1)
  ([0, 1], 0/1)
  ([0, 0], 0/1)
  ([1, 0]#, 1/1)
  ([0, 0]#, 0/1)
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 0] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[0, 1], [0, 0], [0, 0], [0, 0], [1, 0]] ->= [ [1, 1] , [0, 1] , [0, 0] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 0 , 0 ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[1, 0], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 0] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[1, 1], [0, 1], [0, 0], [1, 0], [1, 1]] ->= [ [0, 1] , [1, 0] , [0, 1] , [0, 0] , [ 1 , 0 ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG

**************************************************
skeleton: (2,2)\TileAllAll{2}\Mirror(8,4)\Deepee(28/8,8)\Weight(8/8,8)\EDG[(4/8,6)\Matrix{\Arctic}{3}(2/8,6)\Weight(0/8,4)\EDG[],(4/8,6)\Matrix{\Arctic}{3}(2/8,6)\Weight(0/8,4)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7460, clauses: 29360
last 7460 length 29360
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3762, clauses: 15617, status: Unsatisfied, time: 0.976577402s
CNF 7460 vars 29360 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6228, clauses: 25985, status: Unsatisfied, time: 1.560266516s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.387541120000
  min duration 0.040524658000
  total durat. 1.106760653000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.541727660000
  min duration 0.103095938000
  total durat. 1.918398867000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.658111683000
  min duration 0.822436762000
  total durat. 2.480548445000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 100}
    , self = 82
    , parent = Nothing
    , duration = 1.658111683000
    , status = Fail
    , start = 2025-09-03 11:21:45.154168701 UTC
    , finish = 2025-09-03 11:21:46.812280384 UTC
    , thread_cap_info = ("ThreadId 118", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.790948167000
  min duration 0.410543841000
  total durat. 1.201492008000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.618571676000
  min duration 0.881068579000
  total durat. 2.499640255000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 100}
    , self = 86
    , parent = Nothing
    , duration = 1.618571676000
    , status = Fail
    , start = 2025-09-03 11:21:45.656733983 UTC
    , finish = 2025-09-03 11:21:47.275305659 UTC
    , thread_cap_info = ("ThreadId 128", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.038820714000
  min duration 0.686574680000
  total durat. 1.725395394000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 8
      , alphabet_size = 6
      , total_length = 120}
    , self = 83
    , parent = Nothing
    , duration = 1.038820714000
    , status = Success
    , start = 2025-09-03 11:21:46.200688259 UTC
    , finish = 2025-09-03 11:21:47.239508973 UTC
    , thread_cap_info = ("ThreadId 143", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.840158995000
  min duration 0.420118945000
  total durat. 1.887283349000
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                = 16} , self = 48 , parent = Nothing , duration = 0.126870353000 , status
F                = Fail , start = 2025-09-03 11:21:44.823339642 UTC , finish = 2025-09-03
F                11:21:44.950209995 UTC , thread_cap_info = ("ThreadId 41", 1, False)}
F                
| F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F              = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
| F              = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 16} , self
| F              = 39 , parent = Nothing , duration = 0.111316135000 , status = Fail , start
| F              = 2025-09-03 11:21:44.823435012 UTC , finish = 2025-09-03 11:21:44.934751147
| F              UTC , thread_cap_info = ("ThreadId 22", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F            = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F            = 80} , self = 52 , parent = Nothing , duration = 0.128610122000 , status
| | F            = Fail , start = 2025-09-03 11:21:44.824538369 UTC , finish = 2025-09-03
| | F            11:21:44.953148491 UTC , thread_cap_info = ("ThreadId 53", 3, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F          = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F          = 80} , self = 53 , parent = Nothing , duration = 0.130617060000 , status
| | | F          = Fail , start = 2025-09-03 11:21:44.824547641 UTC , finish = 2025-09-03
| | | F          11:21:44.955164701 UTC , thread_cap_info = ("ThreadId 55", 3, False)}
| | | F          
| F | |          
F   | |          
F   | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F   | |          = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
F   | |          = 100} , self = 62 , parent = Nothing , duration = 0.202121849000 , status
F   | |          = Fail , start = 2025-09-03 11:21:44.951983691 UTC , finish = 2025-09-03
F   | |          11:21:45.15410554 UTC , thread_cap_info = ("ThreadId 92", 0, False)}
F   | |          
|   F |          
|     F          
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| F              = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| F              = 24} , self = 61 , parent = Nothing , duration = 0.103095938000 , status
| F              = Fail , start = 2025-09-03 11:21:44.960265865 UTC , finish = 2025-09-03
| F              11:21:45.063361803 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F            = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F            = 120} , self = 63 , parent = Nothing , duration = 0.185210497000 , status
| | F            = Fail , start = 2025-09-03 11:21:44.972009104 UTC , finish = 2025-09-03
| | F            11:21:45.157219601 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F          = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | F          = 120} , self = 66 , parent = Nothing , duration = 0.493294367000 , status
| | | F          = Fail , start = 2025-09-03 11:21:44.992403853 UTC , finish = 2025-09-03
| | | F          11:21:45.48569822 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | F          
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | | F        alphabet_size = 5 , total_length = 100} , self = 68 , parent = Nothing
| | | | F        , duration = 0.627005409000 , status = Fail , start = 2025-09-03 11:21:45.005209648
| | | | F        UTC , finish = 2025-09-03 11:21:45.632215057 UTC , thread_cap_info = ("ThreadId
| | | | F        108", 0, False)}
| | | | F        
| | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F      = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | F      = 3 , total_length = 24} , self = 65 , parent = Nothing , duration = 0.420118945000
| | | | | F      , status = Fail , start = 2025-09-03 11:21:45.031986922 UTC , finish =
| | | | | F      2025-09-03 11:21:45.452105867 UTC , thread_cap_info = ("ThreadId 109",
| | | | | F      2, False)}
| | | | | F      
| F | | | |      
| F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F | | | |      = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| F | | | |      = 32} , self = 64 , parent = Nothing , duration = 0.387541120000 , status
| F | | | |      = Fail , start = 2025-09-03 11:21:45.064459963 UTC , finish = 2025-09-03
| F | | | |      11:21:45.452001083 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| F | | | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F    = 32} , self = 67 , parent = Nothing , duration = 0.447541993000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:21:45.069968106 UTC , finish = 2025-09-03
| | | | | | F    11:21:45.517510099 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | | | | F    
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | F  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | | F  = 3 , total_length = 24} , self = 76 , parent = Nothing , duration = 0.822436762000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:21:45.13249828 UTC , finish = 2025-09-03
| | | | | | | F  11:21:45.954935042 UTC , thread_cap_info = ("ThreadId 115", 2, False)}
| | | | | | | F  
F | | | | | | |  
F | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
F | | | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
F | | | | | | |  = 5 , total_length = 100} , self = 82 , parent = Nothing , duration = 1.658111683000
F | | | | | | |  , status = Fail , start = 2025-09-03 11:21:45.154168701 UTC , finish =
F | | | | | | |  2025-09-03 11:21:46.812280384 UTC , thread_cap_info = ("ThreadId 118",
F | | | | | | |  0, False)}
F | | | | | | |  
| | F | | | | |  
| | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | |  = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | S | | | | |  alphabet_size = 6 , total_length = 120} , self = 69 , parent = Nothing
| | S | | | | |  , duration = 0.686574680000 , status = Success , start = 2025-09-03 11:21:45.209440172
| | S | | | | |  UTC , finish = 2025-09-03 11:21:45.896014852 UTC , thread_cap_info = ("ThreadId
| | S | | | | |  119", 3, False)}
| | S | | | | |  
| F | | | | | |  
|   | | | F | |  
| F | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| F | | |   | |  = 4 , total_length = 32} , self = 78 , parent = Nothing , duration = 0.840158995000
| F | | |   | |  , status = Fail , start = 2025-09-03 11:21:45.457116022 UTC , finish =
| F | | |   | |  2025-09-03 11:21:46.297275017 UTC , thread_cap_info = ("ThreadId 122",
| F | | |   | |  2, False)}
| F | | |   | |  
| | | | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | F | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | F | |  = 3 , total_length = 24} , self = 79 , parent = Nothing , duration = 0.881068579000
| | | | | F | |  , status = Fail , start = 2025-09-03 11:21:45.473438436 UTC , finish =
| | | | | F | |  2025-09-03 11:21:46.354507015 UTC , thread_cap_info = ("ThreadId 123",
| | | | | F | |  2, False)}
| | | | | F | |  
| | | F | | | |  
| | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | E | | | |  = 6 , total_length = 120} , self = 71 , parent = Nothing , duration = 0.410543841000
| | | E | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:21:45.485736417
| | | E | | | |  UTC , finish = 2025-09-03 11:21:45.896280258 UTC , thread_cap_info = ("ThreadId
| | | E | | | |  126", 3, False)}
| | | E | | | |  
| | | | | | F |  
| | | | F |   |  
| | | | F |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | F |   |  = 5 , total_length = 100} , self = 86 , parent = Nothing , duration = 1.618571676000
| | | | F |   |  , status = Fail , start = 2025-09-03 11:21:45.656733983 UTC , finish =
| | | | F |   |  2025-09-03 11:21:47.275305659 UTC , thread_cap_info = ("ThreadId 128",
| | | | F |   |  0, False)}
| | | | F |   |  
| | S | | |   |  
| |   E | |   |  
| | F   | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F   | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F   | |   |  = 120} , self = 77 , parent = Nothing , duration = 0.299621727000 , status
| | F   | |   |  = Fail , start = 2025-09-03 11:21:45.898007075 UTC , finish = 2025-09-03
| | F   | |   |  11:21:46.197628802 UTC , thread_cap_info = ("ThreadId 133", 3, False)}
| | F   | |   |  
| | | F | |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F | |   |  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | F | |   |  = 120} , self = 80 , parent = Nothing , duration = 0.541727660000 , status
| | | F | |   |  = Fail , start = 2025-09-03 11:21:45.898008621 UTC , finish = 2025-09-03
| | | F | |   |  11:21:46.439736281 UTC , thread_cap_info = ("ThreadId 134", 3, False)}
| | | F | |   |  
| | | | | |   F  
| | | | | | F    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | | | | F    = 3 , total_length = 24} , self = 81 , parent = Nothing , duration = 0.563079582000
| | | | | | F    , status = Fail , start = 2025-09-03 11:21:45.97203585 UTC , finish = 2025-09-03
| | | | | | F    11:21:46.535115432 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
| | | | | | F    
| | F | | | |    
| | S | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |    = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | S | | | |    alphabet_size = 6 , total_length = 120} , self = 83 , parent = Nothing
| | S | | | |    , duration = 1.038820714000 , status = Success , start = 2025-09-03 11:21:46.200688259
| | S | | | |    UTC , finish = 2025-09-03 11:21:47.239508973 UTC , thread_cap_info = ("ThreadId
| | S | | | |    143", 3, False)}
| | S | | | |    
| F | | | | |    
|   | | | F |    
|   | F |   |    
| E |   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |   |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E |   |   |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| E |   |   |    = 6 , total_length = 120} , self = 85 , parent = Nothing , duration = 0.790948167000
| E |   |   |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:21:46.483122844
| E |   |   |    UTC , finish = 2025-09-03 11:21:47.274071011 UTC , thread_cap_info = ("ThreadId
| E |   |   |    147", 3, False)}
| E |   |   |    
| | |   |   F    
F | |   |        
  | S   |        
  E     |        
        F        
