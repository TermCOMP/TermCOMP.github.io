last 908 length 4141
last 855 length 3741
last 914 length 4177
CNF 855 vars 3741 clauses
CNF 908 vars 4141 clauses
CNF 914 vars 4177 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1519, clauses: 5566
last 1519 length 5566
CNF 1519 vars 5566 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1720, clauses: 6340
last 1720 length 6340
CNF 1720 vars 6340 clauses
last 4280 length 25747
CNF 4280 vars 25747 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1519, clauses: 5566, status: Unsatisfied, time: 0.069456344s
last 2260 length 10980
CNF 2260 vars 10980 clauses
last 3444 length 18025
CNF 3444 vars 18025 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1720, clauses: 6340, status: Unsatisfied, time: 0.122498565s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5229, clauses: 21873
last 5229 length 21873
CNF 5229 vars 21873 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3107, clauses: 13131
last 3107 length 13131
CNF 3107 vars 13131 clauses
last 3508 length 17442
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3791, clauses: 16037
CNF 3508 vars 17442 clauses
last 2798 length 13279
last 3791 length 16037
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6398, clauses: 26852
last 3780 length 18983
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3249, clauses: 12068
last 5828 length 30538
CNF 2798 vars 13279 clauses
CNF 3791 vars 16037 clauses
last 6398 length 26852
CNF 3780 vars 18983 clauses
last 3249 length 12068
CNF 5828 vars 30538 clauses
CNF 6398 vars 26852 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3366, clauses: 12512
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3791, clauses: 16037, status: Satisfied, time: 0.343949599s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3107, clauses: 13131, status: Unsatisfied, time: 0.468798112s
CNF 3249 vars 12068 clauses
last 3366 length 12512
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5229, clauses: 21873, status: Unsatisfied, time: 0.583423165s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13973, clauses: 58899
CNF 3366 vars 12512 clauses
last 13973 length 58899
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2537, clauses: 9688
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13385, clauses: 56359

last 2537 length 9688
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8781, clauses: 39137
last 13385 length 56359
last 8781 length 39137
CNF 2537 vars 9688 clauses
summary
**************************************************
SRS with 1 rules on 2 letters       DP
SRS with 5 strict rules and 1 weak rules on 3 letters       weights
SRS with 1 strict rules and 1 weak rules on 3 letters       EDG
SRS with 1 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, b, b, b] -> [a, b, b, b, b, b, a] {- Input 0 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, a, b, b, b] ->= [a, b, b, b, b, b, a] {- DP Nontop (Input 0) -}
  [b#, b, a, b, b, b] |-> [b#, a] {- DP (Top 5) (Input 0) -}
  [b#, b, a, b, b, b] |-> [b#, b, a] {- DP (Top 4) (Input 0) -}
  [b#, b, a, b, b, b] |-> [b#, b, b, a] {- DP (Top 3) (Input 0) -}
  [b#, b, a, b, b, b] |-> [b#, b, b, b, a] {- DP (Top 2) (Input 0) -}
  [b#, b, a, b, b, b] |-> [b#, b, b, b, b, a] {- DP (Top 1) (Input 0) -}
reason
  (a, 0/1)
  (b, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, a, b, b, b] ->= [a, b, b, b, b, b, a] {- DP Nontop (Input 0) -}
  [b#, b, a, b, b, b] |-> [b#, b, b, b, b, a] {- DP (Top 1) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, a, b, b, b] |-> [b#, b, b, b, b, a] {- DP (Top 1) (Input 0) -}
  [b, b, a, b, b, b] ->= [a, b, b, b, b, b, a] {- DP Nontop (Input 0) -}
reason
  ( a
  , Wk  / 0 0 2 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b
  , Wk  / 0 1 0 \
        | 4 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 0 4 6 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [b, b, a, b, b, b] ->= [a, b, b, b, b, b, a] {- DP Nontop (Input 0) -}
reason
  EDG

**************************************************
skeleton: (1,2)\Deepee(5/1,3)\Weight\EDG(1/1,3)\Matrix{\Natural}{3}(0/1,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), CNF 13385 vars 56359 clauses
( CNF 8781 vars 39137 clauses
-1Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3249, clauses: 12068, status: Unsatisfied, time: 0.481329355s
, CNF 13973 vars 58899 clauses
Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.434452580000
  min duration 0.057305877000
  total durat. 1.060546569000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.589661530000
  min duration 0.078886326000
  total durat. 1.526993381000
**************************************************
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                = 60} , self = 63 , parent = Nothing , duration = 0.229109545000 , status
F                = Fail , start = 2025-09-03 13:19:21.838620496 UTC , finish = 2025-09-03
F                13:19:22.067730041 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 60} , self = 55 , parent = Nothing , duration = 0.148782619000 , status
| F              = Fail , start = 2025-09-03 13:19:21.838623446 UTC , finish = 2025-09-03
| F              13:19:21.987406065 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | F            = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F            = 25} , self = 64 , parent = Nothing , duration = 0.221295891000 , status
| | F            = Fail , start = 2025-09-03 13:19:21.857212564 UTC , finish = 2025-09-03
| | F            13:19:22.078508455 UTC , thread_cap_info = ("ThreadId 64", 1, False)}
| | F            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 2 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | | F          = 3 , total_length = 25} , self = 62 , parent = Nothing , duration = 0.139972665000
| | | F          , status = Fail , start = 2025-09-03 13:19:21.92581571 UTC , finish = 2025-09-03
| | | F          13:19:22.065788375 UTC , thread_cap_info = ("ThreadId 91", 1, False)}
| | | F          
| | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | F        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | | | F        = 3 , total_length = 25} , self = 74 , parent = Nothing , duration = 0.889378315000
| | | | F        , status = Fail , start = 2025-09-03 13:19:21.940165149 UTC , finish =
| | | | F        2025-09-03 13:19:22.829543464 UTC , thread_cap_info = ("ThreadId 92", 1,
| | | | F        False)}
| | | | F        
| F | | |        
| F | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| F | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| F | | |        = 3 , total_length = 25} , self = 71 , parent = Nothing , duration = 0.703176058000
| F | | |        , status = Fail , start = 2025-09-03 13:19:22.004877274 UTC , finish =
| F | | |        2025-09-03 13:19:22.708053332 UTC , thread_cap_info = ("ThreadId 106",
| F | | |        1, False)}
| F | | |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | F      = 74} , self = 65 , parent = Nothing , duration = 0.281766115000 , status
| | | | | F      = Fail , start = 2025-09-03 13:19:22.026398375 UTC , finish = 2025-09-03
| | | | | F      13:19:22.30816449 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | F    = 74} , self = 68 , parent = Nothing , duration = 0.589661530000 , status
| | | | | | F    = Fail , start = 2025-09-03 13:19:22.046725598 UTC , finish = 2025-09-03
| | | | | | F    13:19:22.636387128 UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| | | | | | F    
| | | F | | |    
| | | F | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F | | |    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | F | | |    = 74} , self = 66 , parent = Nothing , duration = 0.434452580000 , status
| | | F | | |    = Fail , start = 2025-09-03 13:19:22.065795496 UTC , finish = 2025-09-03
| | | F | | |    13:19:22.500248076 UTC , thread_cap_info = ("ThreadId 113", 0, False)}
| | | F | | |    
F | | | | | |    
  | F | | | |    
E |   | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E |   | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
E |   | | | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
E |   | | | |    = 3 , total_length = 25} , self = 72 , parent = Nothing , duration = 0.742475699000
E |   | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:19:22.084005236
E |   | | | |    UTC , finish = 2025-09-03 13:19:22.826480935 UTC , thread_cap_info = ("ThreadId
E |   | | | |    116", 1, False)}
E |   | | | |    
| | F | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | F | | | |    = 74} , self = 67 , parent = Nothing , duration = 0.488367015000 , status
| | F | | | |    = Fail , start = 2025-09-03 13:19:22.08662942 UTC , finish = 2025-09-03
| | F | | | |    13:19:22.574996435 UTC , thread_cap_info = ("ThreadId 114", 0, False)}
| | F | | | |    
| | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | S  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | | | | S  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size
| | | | | | | S  = 3 , total_length = 25} , self = 69 , parent = Nothing , duration = 0.600860355000
| | | | | | | S  , status = Success , start = 2025-09-03 13:19:22.086644337 UTC , finish
| | | | | | | S  = 2025-09-03 13:19:22.687504692 UTC , thread_cap_info = ("ThreadId 117",
| | | | | | | S  1, False)}
| | | | | | | S  
| | | | | F | |  
| | | F |   | |  
| | F   |   | |  
| |     |   F |  
| |     |     S  
| F     |        
E       |        
        F        
