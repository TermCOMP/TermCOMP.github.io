last 2881 length 14868
last 3142 length 13270
last 3378 length 14309
last 4561 length 26278
CNF 3142 vars 13270 clauses
CNF 2881 vars 14868 clauses
CNF 3378 vars 14309 clauses
CNF 4561 vars 26278 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11231, clauses: 40191
last 11231 length 40191
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17489, clauses: 62574
last 17489 length 62574
CNF 11231 vars 40191 clauses
CNF 17489 vars 62574 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11231, clauses: 40191, status: Satisfied, time: 0.557635795s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17489, clauses: 62574, status: Satisfied, time: 0.563389666s
last 3076 length 13018
last 4115 length 28621
CNF 3076 vars 13018 clauses
last 3344 length 14175
CNF 4115 vars 28621 clauses
CNF 3344 vars 14175 clauses
last 7608 length 59464
CNF 7608 vars 59464 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10171, clauses: 36046
last 10171 length 36046
CNF 10171 vars 36046 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17278, clauses: 61753
last 17278 length 61753
CNF 17278 vars 61753 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17278, clauses: 61753, status: Satisfied, time: 0.509886089s
last 3010 length 12766
last 3310 length 14041
CNF 3310 vars 14041 clauses
CNF 3010 vars 12766 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34744, clauses: 143568
last 34744 length 143568
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10171, clauses: 36046, status: Unsatisfied, time: 1.792171006s
CNF 34744 vars 143568 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17067, clauses: 60932
last 17067 length 60932
CNF 17067 vars 60932 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21492, clauses: 83645
last 21492 length 83645
CNF 21492 vars 83645 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 44388, clauses: 182885
last 44388 length 182885
CNF 44388 vars 182885 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17067, clauses: 60932, status: Satisfied, time: 2.397088471s
last 3246 length 13803
last 2960 length 12582
CNF 2960 vars 12582 clauses
CNF 3246 vars 13803 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16578, clauses: 59183
last 16578 length 59183
CNF 16578 vars 59183 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21492, clauses: 83645, status: Unsatisfied, time: 3.523027087s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16578, clauses: 59183, status: Satisfied, time: 1.291378542s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16510, clauses: 61608
last 2894 length 12330
last 3212 length 13669
last 16510 length 61608
CNF 2894 vars 12330 clauses
CNF 3212 vars 13669 clauses
CNF 16510 vars 61608 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16367, clauses: 58362
last 16367 length 58362
CNF 16367 vars 58362 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16367, clauses: 58362, status: Unsatisfied, time: 1.919967754s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 43339, clauses: 178583
last 43339 length 178583
CNF 43339 vars 178583 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27676, clauses: 107160
last 27676 length 107160
CNF 27676 vars 107160 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 61624, clauses: 244371
last 61624 length 244371
CNF 61624 vars 244371 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27676, clauses: 107160, status: Unsatisfied, time: 3.048467196s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26413, clauses: 100700
last 26413 length 100700
CNF 26413 vars 100700 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16510, clauses: 61608, status: Unsatisfied, time: 9.869668907s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31036, clauses: 115180
last 31036 length 115180
CNF 31036 vars 115180 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 72070, clauses: 284216
last 72070 length 284216
CNF 72070 vars 284216 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 76701, clauses: 356323
last 76701 length 356323
CNF 76701 vars 356323 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] pool sizes (success) 13585 seen 6390 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 30 rules on 18 letters       looping derivation
from
  [ABA, B, BAA, a, b, a]
to
  [ABAAABA, A, ABA, B, BAA, a, b, a, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]
via 78 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [A, a] -> [A, A] {- Input 0 -}
  [A, b] -> [AB] {- Input 1 -}
  [AB, a] -> [ABA] {- Input 2 -}
  [AB, b] -> [AB, B] {- Input 3 -}
  [ABA, a] -> [ABAA] {- Input 4 -}
  [ABA, b] -> [ABA, B] {- Input 5 -}
  [ABAA, a] -> [ABAAA] {- Input 6 -}
  [ABAA, b] -> [ABAA, B] {- Input 7 -}
  [ABAAA, a] -> [ABAAA, A] {- Input 8 -}
  [ABAAA, b] -> [ABAAAB] {- Input 9 -}
  [ABAAAB, a] -> [ABAAABA] {- Input 10 -}
  [ABAAAB, b] -> [ABAAAB, B] {- Input 11 -}
  [ABAAABA, a] -> [ABAAABA, A] {- Input 12 -}
  [ABAAABA, b] -> [ABAAABAB] {- Input 13 -}
  [ABAAABAB, a] -> [ABAAABAB, A] {- Input 14 -}
  [ABAAABAB, b] -> [ABAAABABB] {- Input 15 -}
  [ABAAABABB, a] -> [ABAAABABBA] {- Input 16 -}
  [ABAAABABB, b] -> [ABAAABABB, B] {- Input 17 -}
  [ABAAABABBA] -> [b, a, a, a, b, a] {- Input 18 -}
  [B, a] -> [BA] {- Input 19 -}
  [B, b] -> [B, B] {- Input 20 -}
  [BA, a] -> [BAA] {- Input 21 -}
  [BA, b] -> [BA, B] {- Input 22 -}
  [BAA, a] -> [BAAA] {- Input 23 -}
  [BAA, b] -> [BAA, B] {- Input 24 -}
  [BAAA, a] -> [BAAA, A] {- Input 25 -}
  [BAAA, b] -> [BAAAB] {- Input 26 -}
  [BAAAB, a] -> [BAAABA] {- Input 27 -}
  [BAAAB, b] -> [BAAAB, B] {- Input 28 -}
  [BAAABA] -> [a, b, a, a, a, b, a, b, b, a] {- Input 29 -}
reason
  Nontermination
    Derive   { from = [ABA, B, BAA, a, b, a], via = [(Step   { rule = 23, position = 2}, [ABA, B, BAAA, b, a]), (Step   { rule = 26, position = 2}, [ABA, B, BAAAB, a]), (Step   { rule = 27, position = 2}, [ABA, B, BAAABA]), (Step   { rule = 29, position = 2}, [ABA, B, a, b, a, a, a, b, a, b, b, a]), (Step   { rule = 19, position = 1}, [ABA, BA, b, a, a, a, b, a, b, b, a]), (Step   { rule = 22, position = 1}, [ABA, BA, B, a, a, a, b, a, b, b, a]), (Step   { rule = 19, position = 2}, [ABA, BA, BA, a, a, b, a, b, b, a]), (Step   { rule = 21, position = 2}, [ABA, BA, BAA, a, b, a, b, b, a]), (Step   { rule = 23, position = 2}, [ABA, BA, BAAA, b, a, b, b, a]), (Step   { rule = 26, position = 2}, [ABA, BA, BAAAB, a, b, b, a]), (Step   { rule = 27, position = 2}, [ABA, BA, BAAABA, b, b, a]), (Step   { rule = 29, position = 2}, [ABA, BA, a, b, a, a, a, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 1}, [ABA, BAA, b, a, a, a, b, a, b, b, a, b, b, a]), (Step   { rule = 24, position = 1}, [ABA, BAA, B, a, a, a, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 2}, [ABA, BAA, BA, a, a, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 2}, [ABA, BAA, BAA, a, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 2}, [ABA, BAA, BAAA, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 2}, [ABA, BAA, BAAAB, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 2}, [ABA, BAA, BAAABA, b, b, a, b, b, a]), (Step   { rule = 29, position = 2}, [ABA, BAA, a, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 1}, [ABA, BAAA, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 1}, [ABA, BAAAB, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 1}, [ABA, BAAABA, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 1}, [ABA, a, b, a, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 4, position = 0}, [ABAA, b, a, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 7, position = 0}, [ABAA, B, a, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 1}, [ABAA, BA, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 1}, [ABAA, BAA, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 1}, [ABAA, BAAA, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 1}, [ABAA, BAAAB, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 1}, [ABAA, BAAABA, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 1}, [ABAA, a, b, a, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 6, position = 0}, [ABAAA, b, a, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 9, position = 0}, [ABAAAB, a, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 10, position = 0}, [ABAAABA, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 12, position = 0}, [ABAAABA, A, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 0, position = 1}, [ABAAABA, A, A, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 1, position = 2}, [ABAAABA, A, AB, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 2, position = 2}, [ABAAABA, A, ABA, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 5, position = 2}, [ABAAABA, A, ABA, B, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 20, position = 3}, [ABAAABA, A, ABA, B, B, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 4}, [ABAAABA, A, ABA, B, BA, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 22, position = 4}, [ABAAABA, A, ABA, B, BA, B, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 20, position = 5}, [ABAAABA, A, ABA, B, BA, B, B, a, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 6}, [ABAAABA, A, ABA, B, BA, B, BA, a, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 6}, [ABAAABA, A, ABA, B, BA, B, BAA, a, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 6}, [ABAAABA, A, ABA, B, BA, B, BAAA, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 6}, [ABAAABA, A, ABA, B, BA, B, BAAAB, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 6}, [ABAAABA, A, ABA, B, BA, B, BAAABA, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 6}, [ABAAABA, A, ABA, B, BA, B, a, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 5}, [ABAAABA, A, ABA, B, BA, BA, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 22, position = 5}, [ABAAABA, A, ABA, B, BA, BA, B, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 6}, [ABAAABA, A, ABA, B, BA, BA, BA, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 6}, [ABAAABA, A, ABA, B, BA, BA, BAA, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 6}, [ABAAABA, A, ABA, B, BA, BA, BAAA, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 6}, [ABAAABA, A, ABA, B, BA, BA, BAAAB, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 6}, [ABAAABA, A, ABA, B, BA, BA, BAAABA, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 6}, [ABAAABA, A, ABA, B, BA, BA, a, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 5}, [ABAAABA, A, ABA, B, BA, BAA, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 24, position = 5}, [ABAAABA, A, ABA, B, BA, BAA, B, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 6}, [ABAAABA, A, ABA, B, BA, BAA, BA, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 6}, [ABAAABA, A, ABA, B, BA, BAA, BAA, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 6}, [ABAAABA, A, ABA, B, BA, BAA, BAAA, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 6}, [ABAAABA, A, ABA, B, BA, BAA, BAAAB, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 6}, [ABAAABA, A, ABA, B, BA, BAA, BAAABA, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 6}, [ABAAABA, A, ABA, B, BA, BAA, a, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 5}, [ABAAABA, A, ABA, B, BA, BAAA, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 5}, [ABAAABA, A, ABA, B, BA, BAAAB, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 5}, [ABAAABA, A, ABA, B, BA, BAAABA, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 5}, [ABAAABA, A, ABA, B, BA, a, b, a, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 4}, [ABAAABA, A, ABA, B, BAA, b, a, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 24, position = 4}, [ABAAABA, A, ABA, B, BAA, B, a, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 19, position = 5}, [ABAAABA, A, ABA, B, BAA, BA, a, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 21, position = 5}, [ABAAABA, A, ABA, B, BAA, BAA, a, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 23, position = 5}, [ABAAABA, A, ABA, B, BAA, BAAA, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 26, position = 5}, [ABAAABA, A, ABA, B, BAA, BAAAB, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 27, position = 5}, [ABAAABA, A, ABA, B, BAA, BAAABA, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]), (Step   { rule = 29, position = 5}, [ABAAABA, A, ABA, B, BAA, a, b, a, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a])], to = [ABAAABA, A, ABA, B, BAA, a, b, a, a, a, b, a, b, b, a, b, b, a, a, a, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a, b, b, a]}

**************************************************
skeleton: (30,18)\Loop{78}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 49558, clauses: 186909
last 49558 length 186909
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 49558 vars 186909 clauses

Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 9
  max duration 13.390437584000
  min duration 0.000126266000
  total durat. 22.830609303000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 1996
      , num_strict_rules = 836
      , num_top_rules = 836
      , num_weak_rules = 1160
      , alphabet_size = 560
      , total_length = 12644}
    , self = 106
    , parent = Nothing
    , duration = 9.392543592000
    , status = Success
    , start = 2025-09-03 10:46:01.015690079 UTC
    , finish = 2025-09-03 10:46:10.408233671 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 1784
      , num_strict_rules = 624
      , num_top_rules = 624
      , num_weak_rules = 1160
      , alphabet_size = 362
      , total_length = 12946}
    , self = 112
    , parent = Nothing
    , duration = 13.390437584000
    , status = Success
    , start = 2025-09-03 10:46:02.415717998 UTC
    , finish = 2025-09-03 10:46:15.806155582 UTC
    , thread_cap_info = ("ThreadId 127", 3, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.437745215000
  min duration 0.134979128000
  total durat. 1.823570734000
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.022621372000
  min duration 3.021863914000
  total durat. 6.044485286000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1362
      , num_strict_rules = 442
      , num_top_rules = 442
      , num_weak_rules = 920
      , alphabet_size = 278
      , total_length = 8854}
    , self = 116
    , parent = Nothing
    , duration = 3.021863914000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:13.637841554 UTC
    , finish = 2025-09-03 10:46:16.659705468 UTC
    , thread_cap_info = ("ThreadId 177", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1132
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 1104
      , alphabet_size = 305
      , total_length = 7728}
    , self = 118
    , parent = Nothing
    , duration = 3.022621372000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:15.961292135 UTC
    , finish = 2025-09-03 10:46:18.983913507 UTC
    , thread_cap_info = ("ThreadId 185", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.083223595000
  min duration 3.083223595000
  total durat. 3.083223595000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1160
      , num_strict_rules = 1160
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 308
      , total_length = 7960}
    , self = 92
    , parent = Nothing
    , duration = 3.083223595000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:59.805640448 UTC
    , finish = 2025-09-03 10:46:02.888864043 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.685147900000
  min duration 0.150594731000
  total durat. 2.240722941000
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.038662943000
  min duration 3.015522074000
  total durat. 6.054185017000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1362
      , num_strict_rules = 442
      , num_top_rules = 442
      , num_weak_rules = 920
      , alphabet_size = 278
      , total_length = 8854}
    , self = 115
    , parent = Nothing
    , duration = 3.015522074000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:13.644171556 UTC
    , finish = 2025-09-03 10:46:16.65969363 UTC
    , thread_cap_info = ("ThreadId 178", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1132
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 1104
      , alphabet_size = 305
      , total_length = 7728}
    , self = 117
    , parent = Nothing
    , duration = 3.038662943000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:15.94523732 UTC
    , finish = 2025-09-03 10:46:18.983900263 UTC
    , thread_cap_info = ("ThreadId 186", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.080028608000
  min duration 3.080028608000
  total durat. 3.080028608000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1160
      , num_strict_rules = 1160
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 308
      , total_length = 7960}
    , self = 93
    , parent = Nothing
    , duration = 3.080028608000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:59.814153424 UTC
    , finish = 2025-09-03 10:46:02.894182032 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 9.410974682000
  min duration 9.013293555000
  total durat. 36.511725184000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1132
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 1104
      , alphabet_size = 305
      , total_length = 7728}
    , self = 125
    , parent = Nothing
    , duration = 9.013293555000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:18.996819579 UTC
    , finish = 2025-09-03 10:46:28.010113134 UTC
    , thread_cap_info = ("ThreadId 196", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1362
      , num_strict_rules = 442
      , num_top_rules = 442
      , num_weak_rules = 920
      , alphabet_size = 278
      , total_length = 8854}
    , self = 122
    , parent = Nothing
    , duration = 9.043498553000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:16.690659484 UTC
    , finish = 2025-09-03 10:46:25.734158037 UTC
    , thread_cap_info = ("ThreadId 190", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 232}
    , self = 110
    , parent = Nothing
    , duration = 9.043958394000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:05.33058395 UTC
    , finish = 2025-09-03 10:46:14.374542344 UTC
    , thread_cap_info = ("ThreadId 166", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 157}
    , self = 104
    , parent = Nothing
    , duration = 9.410974682000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:45:57.715962229 UTC
    , finish = 2025-09-03 10:46:07.126936911 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 3.253334708000
  min duration 1.059988556000
  total durat. 8.665578988000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 39
      , num_top_rules = 39
      , num_weak_rules = 30
      , alphabet_size = 32
      , total_length = 246}
    , self = 61
    , parent = Nothing
    , duration = 1.059988556000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:57.574183651 UTC
    , finish = 2025-09-03 10:45:58.634172207 UTC
    , thread_cap_info = ("ThreadId 103", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 30
      , alphabet_size = 32
      , total_length = 250}
    , self = 46
    , parent = Nothing
    , duration = 1.079998215000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:55.85417631 UTC
    , finish = 2025-09-03 10:45:56.934174525 UTC
    , thread_cap_info = ("ThreadId 82", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 177}
    , self = 45
    , parent = Nothing
    , duration = 1.080018248000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:55.834167347 UTC
    , finish = 2025-09-03 10:45:56.914185595 UTC
    , thread_cap_info = ("ThreadId 81", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 36
      , num_top_rules = 36
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 236}
    , self = 97
    , parent = Nothing
    , duration = 2.192239261000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:02.714347749 UTC
    , finish = 2025-09-03 10:46:04.90658701 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 68
      , num_strict_rules = 38
      , num_top_rules = 38
      , num_weak_rules = 30
      , alphabet_size = 32
      , total_length = 242}
    , self = 85
    , parent = Nothing
    , duration = 3.253334708000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:59.255542133 UTC
    , finish = 2025-09-03 10:46:02.508876841 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.817492083000
  min duration 4.534854507000
  total durat. 9.352346590000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 157}
    , self = 94
    , parent = Nothing
    , duration = 4.534854507000
    , status = Fail
    , start = 2025-09-03 10:45:59.715104533 UTC
    , finish = 2025-09-03 10:46:04.24995904 UTC
    , thread_cap_info = ("ThreadId 129", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 232}
    , self = 107
    , parent = Nothing
    , duration = 4.817492083000
    , status = Fail
    , start = 2025-09-03 10:46:08.020033137 UTC
    , finish = 2025-09-03 10:46:12.83752522 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 12.125542218000
  min duration 12.071690975000
  total durat. 24.197233193000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 157}
    , self = 119
    , parent = Nothing
    , duration = 12.071690975000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:07.152223135 UTC
    , finish = 2025-09-03 10:46:19.22391411 UTC
    , thread_cap_info = ("ThreadId 169", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 232}
    , self = 123
    , parent = Nothing
    , duration = 12.125542218000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:14.417974353 UTC
    , finish = 2025-09-03 10:46:26.543516571 UTC
    , thread_cap_info = ("ThreadId 181", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 3.273128843000
  min duration 1.023214895000
  total durat. 8.802753238000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 177}
    , self = 41
    , parent = Nothing
    , duration = 1.023214895000
    , status = Success
    , start = 2025-09-03 10:45:55.782328573 UTC
    , finish = 2025-09-03 10:45:56.805543468 UTC
    , thread_cap_info = ("ThreadId 80", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 30
      , alphabet_size = 32
      , total_length = 250}
    , self = 43
    , parent = Nothing
    , duration = 1.104849997000
    , status = Success
    , start = 2025-09-03 10:45:55.753158271 UTC
    , finish = 2025-09-03 10:45:56.858008268 UTC
    , thread_cap_info = ("ThreadId 79", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 39
      , num_top_rules = 39
      , num_weak_rules = 30
      , alphabet_size = 32
      , total_length = 246}
    , self = 59
    , parent = Nothing
    , duration = 1.298726241000
    , status = Success
    , start = 2025-09-03 10:45:57.238268321 UTC
    , finish = 2025-09-03 10:45:58.536994562 UTC
    , thread_cap_info = ("ThreadId 100", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 36
      , num_top_rules = 36
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 236}
    , self = 95
    , parent = Nothing
    , duration = 2.102833262000
    , status = Success
    , start = 2025-09-03 10:46:02.702532284 UTC
    , finish = 2025-09-03 10:46:04.805365546 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 68
      , num_strict_rules = 38
      , num_top_rules = 38
      , num_weak_rules = 30
      , alphabet_size = 32
      , total_length = 242}
    , self = 83
    , parent = Nothing
    , duration = 3.273128843000
    , status = Success
    , start = 2025-09-03 10:45:59.134196436 UTC
    , finish = 2025-09-03 10:46:02.407325279 UTC
    , thread_cap_info = ("ThreadId 117", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 9.026799546000
  min duration 2.128259077000
  total durat. 22.881150062000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 157}
    , self = 73
    , parent = Nothing
    , duration = 2.128259077000
    , status = Fail
    , start = 2025-09-03 10:45:57.375822352 UTC
    , finish = 2025-09-03 10:45:59.504081429 UTC
    , thread_cap_info = ("ThreadId 101", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 232}
    , self = 105
    , parent = Nothing
    , duration = 2.699958239000
    , status = Fail
    , start = 2025-09-03 10:46:05.274198553 UTC
    , finish = 2025-09-03 10:46:07.974156792 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1132
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 1104
      , alphabet_size = 305
      , total_length = 7728}
    , self = 124
    , parent = Nothing
    , duration = 9.026133200000
    , status = Fail
    , start = 2025-09-03 10:46:18.983933181 UTC
    , finish = 2025-09-03 10:46:28.010066381 UTC
    , thread_cap_info = ("ThreadId 195", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1362
      , num_strict_rules = 442
      , num_top_rules = 442
      , num_weak_rules = 920
      , alphabet_size = 278
      , total_length = 8854}
    , self = 121
    , parent = Nothing
    , duration = 9.026799546000
    , status = Fail
    , start = 2025-09-03 10:46:16.65973762 UTC
    , finish = 2025-09-03 10:46:25.686537166 UTC
    , thread_cap_info = ("ThreadId 189", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 12.740600343000
  min duration 10.777789454000
  total durat. 23.518389797000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 157}
    , self = 111
    , parent = Nothing
    , duration = 10.777789454000
    , status = Fail
    , start = 2025-09-03 10:46:04.258020313 UTC
    , finish = 2025-09-03 10:46:15.035809767 UTC
    , thread_cap_info = ("ThreadId 155", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 65
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 30
      , alphabet_size = 31
      , total_length = 232}
    , self = 120
    , parent = Nothing
    , duration = 12.740600343000
    , status = Fail
    , start = 2025-09-03 10:46:12.83756045 UTC
    , finish = 2025-09-03 10:46:25.578160793 UTC
    , thread_cap_info = ("ThreadId 175", 1, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 15.147318009000
  min duration 15.147318009000
  total durat. 15.147318009000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 30
      , alphabet_size = 21
      , total_length = 157}
    , self = 126
    , parent = Nothing
    , duration = 15.147318009000
    , status = Fail
    , start = 2025-09-03 10:46:15.082530136 UTC
    , finish = 2025-09-03 10:46:30.229848145 UTC
    , thread_cap_info = ("ThreadId 182", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 34.759779880000
  min duration 34.759779880000
  total durat. 34.759779880000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 30
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 18
      , total_length = 116}
    , self = 127
    , parent = Nothing
    , duration = 34.759779880000
    , status = Fail
    , start = 2025-09-03 10:45:55.492981254 UTC
    , finish = 2025-09-03 10:46:30.252761134 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 7
  max duration 3.190999788000
  min duration 0.005537023000
  total durat. 10.307834376000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 2964
      , num_strict_rules = 1804
      , num_top_rules = 1804
      , num_weak_rules = 1160
      , alphabet_size = 574
      , total_length = 16896}
    , self = 81
    , parent = Nothing
    , duration = 1.274853916000
    , status = Success
    , start = 2025-09-03 10:45:59.719321027 UTC
    , finish = 2025-09-03 10:46:00.994174943 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 3572
      , num_strict_rules = 2412
      , num_top_rules = 2412
      , num_weak_rules = 1160
      , alphabet_size = 364
      , total_length = 26500}
    , self = 82
    , parent = Nothing
    , duration = 2.658760046000
    , status = Success
    , start = 2025-09-03 10:45:59.735401412 UTC
    , finish = 2025-09-03 10:46:02.394161458 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 9720
      , num_strict_rules = 9720
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 324
      , total_length = 57024}
    , self = 66
    , parent = Nothing
    , duration = 3.156495307000
    , status = Success
    , start = 2025-09-03 10:45:55.62048521 UTC
    , finish = 2025-09-03 10:45:58.776980517 UTC
    , thread_cap_info = ("ThreadId 71", 2, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 9720
      , num_strict_rules = 9720
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 324
      , total_length = 57024}
    , self = 67
    , parent = Nothing
    , duration = 3.190999788000
    , status = Success
    , start = 2025-09-03 10:45:55.622558964 UTC
    , finish = 2025-09-03 10:45:58.813558752 UTC
    , thread_cap_info = ("ThreadId 73", 3, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 22
  max duration 3.197535891000
  min duration 0.000009848000
  total durat. 3.454771976000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 1362
      , num_strict_rules = 442
      , num_top_rules = 442
      , num_weak_rules = 920
      , alphabet_size = 278
      , total_length = 8854}
    , self = 108
    , parent = Nothing
    , duration = 3.197535891000
    , status = Fail
    , start = 2025-09-03 10:46:10.40825267 UTC
    , finish = 2025-09-03 10:46:13.605788561 UTC
    , thread_cap_info = ("ThreadId 173", 2, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 30 , num_strict_rules = 30
F                  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 18 , total_length
F                  = 116} , self = 127 , parent = Nothing , duration = 34.759779880000 , status
F                  = Fail , start = 2025-09-03 10:45:55.492981254 UTC , finish = 2025-09-03
F                  10:46:30.252761134 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                  
| S                Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| S                , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| S                , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| S                = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| S                , cpf = True}" , input_size = Size { num_rules = 30 , num_strict_rules
| S                = 30 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 18 , total_length
| S                = 116} , self = 34 , parent = Nothing , duration = 0.127469041000 , status
| S                = Success , start = 2025-09-03 10:45:55.492999184 UTC , finish = 2025-09-03
| S                10:45:55.620468225 UTC , thread_cap_info = ("ThreadId 39", 2, False)}
| S                
| | S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | S              , cpf = True}" , input_size = Size { num_rules = 30 , num_strict_rules
| | S              = 30 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 18 , total_length
| | S              = 116} , self = 35 , parent = Nothing , duration = 0.128285749000 , status
| | S              = Success , start = 2025-09-03 10:45:55.494257901 UTC , finish = 2025-09-03
| | S              10:45:55.62254365 UTC , thread_cap_info = ("ThreadId 28", 3, False)}
| | S              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | F            = 12 , num_top_rules = 12 , num_weak_rules = 30 , alphabet_size = 21 ,
| | | F            total_length = 177} , self = 38 , parent = Nothing , duration = 0.225563361000
| | | F            , status = Fail , start = 2025-09-03 10:45:55.535080055 UTC , finish =
| | | F            2025-09-03 10:45:55.760643416 UTC , thread_cap_info = ("ThreadId 62", 1,
| | | F            False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | | F          = 12 , num_top_rules = 12 , num_weak_rules = 30 , alphabet_size = 21 ,
| | | | F          total_length = 177} , self = 39 , parent = Nothing , duration = 0.207770995000
| | | | F          , status = Fail , start = 2025-09-03 10:45:55.574530037 UTC , finish =
| | | | F          2025-09-03 10:45:55.782301032 UTC , thread_cap_info = ("ThreadId 65", 1,
| | | | F          False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | | | F        = 40 , num_top_rules = 40 , num_weak_rules = 30 , alphabet_size = 32 ,
| | | | | F        total_length = 250} , self = 37 , parent = Nothing , duration = 0.134979128000
| | | | | F        , status = Fail , start = 2025-09-03 10:45:55.614161563 UTC , finish =
| | | | | F        2025-09-03 10:45:55.749140691 UTC , thread_cap_info = ("ThreadId 68", 1,
| | | | | F        False)}
| | | | | F        
| S | | | |        
| S | | | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | | | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | | | |        = Size { num_rules = 9720 , num_strict_rules = 9720 , num_top_rules = 0
| S | | | |        , num_weak_rules = 0 , alphabet_size = 324 , total_length = 57024} , self
| S | | | |        = 66 , parent = Nothing , duration = 3.156495307000 , status = Success
| S | | | |        , start = 2025-09-03 10:45:55.62048521 UTC , finish = 2025-09-03 10:45:58.776980517
| S | | | |        UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| S | | | |        
| | S | | |        
| | S | | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S | | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S | | |        = Size { num_rules = 9720 , num_strict_rules = 9720 , num_top_rules = 0
| | S | | |        , num_weak_rules = 0 , alphabet_size = 324 , total_length = 57024} , self
| | S | | |        = 67 , parent = Nothing , duration = 3.190999788000 , status = Success
| | S | | |        , start = 2025-09-03 10:45:55.622558964 UTC , finish = 2025-09-03 10:45:58.813558752
| | S | | |        UTC , thread_cap_info = ("ThreadId 73", 3, False)}
| | S | | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | | | | F      = 40 , num_top_rules = 40 , num_weak_rules = 30 , alphabet_size = 32 ,
| | | | | | F      total_length = 250} , self = 40 , parent = Nothing , duration = 0.150594731000
| | | | | | F      , status = Fail , start = 2025-09-03 10:45:55.634161984 UTC , finish =
| | | | | | F      2025-09-03 10:45:55.784756715 UTC , thread_cap_info = ("ThreadId 69", 1,
| | | | | | F      False)}
| | | | | | F      
| | | | | F |      
| | | | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |      = 70 , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 30
| | | | | S |      , alphabet_size = 32 , total_length = 250} , self = 43 , parent = Nothing
| | | | | S |      , duration = 1.104849997000 , status = Success , start = 2025-09-03 10:45:55.753158271
| | | | | S |      UTC , finish = 2025-09-03 10:45:56.858008268 UTC , thread_cap_info = ("ThreadId
| | | | | S |      79", 1, False)}
| | | | | S |      
| | | F | | |      
| | |   F | |      
| | | S   | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   | |      = 42 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 30
| | | S   | |      , alphabet_size = 21 , total_length = 177} , self = 41 , parent = Nothing
| | | S   | |      , duration = 1.023214895000 , status = Success , start = 2025-09-03 10:45:55.782328573
| | | S   | |      UTC , finish = 2025-09-03 10:45:56.805543468 UTC , thread_cap_info = ("ThreadId
| | | S   | |      80", 1, False)}
| | | S   | |      
| | | |   | F      
| | | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 42
| | | | E |        , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 30 , alphabet_size
| | | | E |        = 21 , total_length = 177} , self = 45 , parent = Nothing , duration =
| | | | E |        1.080018248000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E |        10:45:55.834167347 UTC , finish = 2025-09-03 10:45:56.914185595 UTC , thread_cap_info
| | | | E |        = ("ThreadId 81", 1, False)}
| | | | E |        
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 70
| | | | | | E      , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 30 , alphabet_size
| | | | | | E      = 32 , total_length = 250} , self = 46 , parent = Nothing , duration =
| | | | | | E      1.079998215000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E      10:45:55.85417631 UTC , finish = 2025-09-03 10:45:56.934174525 UTC , thread_cap_info
| | | | | | E      = ("ThreadId 82", 1, False)}
| | | | | | E      
| | | S | | |      
| | |   | S |      
| | |   E   |      
| | |       E      
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | | F            = 8 , num_top_rules = 8 , num_weak_rules = 30 , alphabet_size = 21 , total_length
| | | F            = 157} , self = 56 , parent = Nothing , duration = 0.377964072000 , status
| | | F            = Fail , start = 2025-09-03 10:45:56.937681929 UTC , finish = 2025-09-03
| | | F            10:45:57.315646001 UTC , thread_cap_info = ("ThreadId 91", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | | | F          = 8 , num_top_rules = 8 , num_weak_rules = 30 , alphabet_size = 21 , total_length
| | | | F          = 157} , self = 58 , parent = Nothing , duration = 0.685147900000 , status
| | | | F          = Fail , start = 2025-09-03 10:45:56.954680308 UTC , finish = 2025-09-03
| | | | F          10:45:57.639828208 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | | | | F        = 39 , num_top_rules = 39 , num_weak_rules = 30 , alphabet_size = 32 ,
| | | | | F        total_length = 246} , self = 55 , parent = Nothing , duration = 0.184025204000
| | | | | F        , status = Fail , start = 2025-09-03 10:45:57.054165698 UTC , finish =
| | | | | F        2025-09-03 10:45:57.238190902 UTC , thread_cap_info = ("ThreadId 95", 1,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | | | | | F      = 39 , num_top_rules = 39 , num_weak_rules = 30 , alphabet_size = 32 ,
| | | | | | F      total_length = 246} , self = 57 , parent = Nothing , duration = 0.422942032000
| | | | | | F      , status = Fail , start = 2025-09-03 10:45:57.074164857 UTC , finish =
| | | | | | F      2025-09-03 10:45:57.497106889 UTC , thread_cap_info = ("ThreadId 96", 1,
| | | | | | F      False)}
| | | | | | F      
| | | | | F |      
| | | | | S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |      = 69 , num_strict_rules = 39 , num_top_rules = 39 , num_weak_rules = 30
| | | | | S |      , alphabet_size = 32 , total_length = 246} , self = 59 , parent = Nothing
| | | | | S |      , duration = 1.298726241000 , status = Success , start = 2025-09-03 10:45:57.238268321
| | | | | S |      UTC , finish = 2025-09-03 10:45:58.536994562 UTC , thread_cap_info = ("ThreadId
| | | | | S |      100", 1, False)}
| | | | | S |      
| | | F | | |      
| | | F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | |      = 38 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 30 ,
| | | F | | |      alphabet_size = 21 , total_length = 157} , self = 73 , parent = Nothing
| | | F | | |      , duration = 2.128259077000 , status = Fail , start = 2025-09-03 10:45:57.375822352
| | | F | | |      UTC , finish = 2025-09-03 10:45:59.504081429 UTC , thread_cap_info = ("ThreadId
| | | F | | |      101", 1, False)}
| | | F | | |      
| | | | | | F      
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 69
| | | | | | E      , num_strict_rules = 39 , num_top_rules = 39 , num_weak_rules = 30 , alphabet_size
| | | | | | E      = 32 , total_length = 246} , self = 61 , parent = Nothing , duration =
| | | | | | E      1.059988556000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E      10:45:57.574183651 UTC , finish = 2025-09-03 10:45:58.634172207 UTC , thread_cap_info
| | | | | | E      = ("ThreadId 103", 1, False)}
| | | | | | E      
| | | | F | |      
| | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 38
| | | | E | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 30 , alphabet_size
| | | | E | |      = 21 , total_length = 157} , self = 104 , parent = Nothing , duration =
| | | | E | |      9.410974682000 , status = Except "<<timeout>>" , start = 2025-09-03 10:45:57.715962229
| | | | E | |      UTC , finish = 2025-09-03 10:46:07.126936911 UTC , thread_cap_info = ("ThreadId
| | | | E | |      104", 1, False)}
| | | | E | |      
| | | | | S |      
| | | | |   E      
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 68 , num_strict_rules
| | | | | F        = 38 , num_top_rules = 38 , num_weak_rules = 30 , alphabet_size = 32 ,
| | | | | F        total_length = 242} , self = 70 , parent = Nothing , duration = 0.437745215000
| | | | | F        , status = Fail , start = 2025-09-03 10:45:58.761589349 UTC , finish =
| | | | | F        2025-09-03 10:45:59.199334564 UTC , thread_cap_info = ("ThreadId 111",
| | | | | F        1, False)}
| | | | | F        
| S | | | |        
| F | | | |        Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| F | | | |        = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| F | | | |        num_rules = 1160 , num_strict_rules = 1160 , num_top_rules = 0 , num_weak_rules
| F | | | |        = 0 , alphabet_size = 308 , total_length = 7960} , self = 78 , parent =
| F | | | |        Nothing , duration = 0.976971109000 , status = Fail , start = 2025-09-03
| F | | | |        10:45:58.777006407 UTC , finish = 2025-09-03 10:45:59.753977516 UTC , thread_cap_info
| F | | | |        = ("ThreadId 113", 2, False)}
| F | | | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 68 , num_strict_rules
| | | | | | F      = 38 , num_top_rules = 38 , num_weak_rules = 30 , alphabet_size = 32 ,
| | | | | | F      total_length = 242} , self = 69 , parent = Nothing , duration = 0.306033068000
| | | | | | F      , status = Fail , start = 2025-09-03 10:45:58.780906981 UTC , finish =
| | | | | | F      2025-09-03 10:45:59.086940049 UTC , thread_cap_info = ("ThreadId 112",
| | | | | | F      1, False)}
| | | | | | F      
| | S | | | |      
| |   | | | F      
| | S | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | |        = 68 , num_strict_rules = 38 , num_top_rules = 38 , num_weak_rules = 30
| | S | | |        , alphabet_size = 32 , total_length = 242} , self = 83 , parent = Nothing
| | S | | |        , duration = 3.273128843000 , status = Success , start = 2025-09-03 10:45:59.134196436
| | S | | |        UTC , finish = 2025-09-03 10:46:02.407325279 UTC , thread_cap_info = ("ThreadId
| | S | | |        117", 1, False)}
| | S | | |        
| | | | | F        
| | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 68
| | | | | E        , num_strict_rules = 38 , num_top_rules = 38 , num_weak_rules = 30 , alphabet_size
| | | | | E        = 32 , total_length = 242} , self = 85 , parent = Nothing , duration =
| | | | | E        3.253334708000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E        10:45:59.255542133 UTC , finish = 2025-09-03 10:46:02.508876841 UTC , thread_cap_info
| | | | | E        = ("ThreadId 118", 1, False)}
| | | | | E        
| | | | | | S      Info { what = "Context { when = When_Empty, close = Empty, side = R, tracing
| | | | | | S      = False}" , input_size = Size { num_rules = 1160 , num_strict_rules = 1160
| | | | | | S      , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 308 , total_length
| | | | | | S      = 7960} , self = 74 , parent = Nothing , duration = 0.227237820000 , status
| | | | | | S      = Success , start = 2025-09-03 10:45:59.491987843 UTC , finish = 2025-09-03
| | | | | | S      10:45:59.719225663 UTC , thread_cap_info = ("ThreadId 125", 3, False)}
| | | | | | S      
| | | | | | | S    Info { what = "Context { when = When_Empty, close = Empty, side = R, tracing
| | | | | | | S    = False}" , input_size = Size { num_rules = 1160 , num_strict_rules = 1160
| | | | | | | S    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 308 , total_length
| | | | | | | S    = 7960} , self = 76 , parent = Nothing , duration = 0.240294813000 , status
| | | | | | | S    = Success , start = 2025-09-03 10:45:59.494975074 UTC , finish = 2025-09-03
| | | | | | | S    10:45:59.735269887 UTC , thread_cap_info = ("ThreadId 127", 3, False)}
| | | | | | | S    
| | | F | | | |    
| | | F | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 38
| | | F | | | |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 30 , alphabet_size
| | | F | | | |    = 21 , total_length = 157} , self = 94 , parent = Nothing , duration =
| | | F | | | |    4.534854507000 , status = Fail , start = 2025-09-03 10:45:59.715104533
| | | F | | | |    UTC , finish = 2025-09-03 10:46:04.24995904 UTC , thread_cap_info = ("ThreadId
| | | F | | | |    129", 1, False)}
| | | F | | | |    
| | | | | | S |    
| | | | | | S |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S |    = Size { num_rules = 2964 , num_strict_rules = 1804 , num_top_rules = 1804
| | | | | | S |    , num_weak_rules = 1160 , alphabet_size = 574 , total_length = 16896} ,
| | | | | | S |    self = 81 , parent = Nothing , duration = 1.274853916000 , status = Success
| | | | | | S |    , start = 2025-09-03 10:45:59.719321027 UTC , finish = 2025-09-03 10:46:00.994174943
| | | | | | S |    UTC , thread_cap_info = ("ThreadId 130", 3, False)}
| | | | | | S |    
| | | | | | | S    
| | | | | | | S    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | S    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | S    = Size { num_rules = 3572 , num_strict_rules = 2412 , num_top_rules = 2412
| | | | | | | S    , num_weak_rules = 1160 , alphabet_size = 364 , total_length = 26500} ,
| | | | | | | S    self = 82 , parent = Nothing , duration = 2.658760046000 , status = Success
| | | | | | | S    , start = 2025-09-03 10:45:59.735401412 UTC , finish = 2025-09-03 10:46:02.394161458
| | | | | | | S    UTC , thread_cap_info = ("ThreadId 131", 3, False)}
| | | | | | | S    
| F | | | | | |    
| E | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 1160 ,
| E | | | | | |    num_strict_rules = 1160 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size
| E | | | | | |    = 308 , total_length = 7960} , self = 92 , parent = Nothing , duration
| E | | | | | |    = 3.083223595000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | | | | | |    10:45:59.805640448 UTC , finish = 2025-09-03 10:46:02.888864043 UTC , thread_cap_info
| E | | | | | |    = ("ThreadId 134", 2, False)}
| E | | | | | |    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 1160 ,
| | | | | | | | E  num_strict_rules = 1160 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size
| | | | | | | | E  = 308 , total_length = 7960} , self = 93 , parent = Nothing , duration
| | | | | | | | E  = 3.080028608000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | | E  10:45:59.814153424 UTC , finish = 2025-09-03 10:46:02.894182032 UTC , thread_cap_info
| | | | | | | | E  = ("ThreadId 136", 2, False)}
| | | | | | | | E  
| | | | | | S | |  
| | | | | | S | |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S | |  verbose = False}" , input_size = Size { num_rules = 1996 , num_strict_rules
| | | | | | S | |  = 836 , num_top_rules = 836 , num_weak_rules = 1160 , alphabet_size = 560
| | | | | | S | |  , total_length = 12644} , self = 106 , parent = Nothing , duration = 9.392543592000
| | | | | | S | |  , status = Success , start = 2025-09-03 10:46:01.015690079 UTC , finish
| | | | | | S | |  = 2025-09-03 10:46:10.408233671 UTC , thread_cap_info = ("ThreadId 125",
| | | | | | S | |  3, False)}
| | | | | | S | |  
| | | | | | | S |  
| | S | | | |   |  
| | S | | | |   |  Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S | | | |   |  verbose = False}" , input_size = Size { num_rules = 1784 , num_strict_rules
| | S | | | |   |  = 624 , num_top_rules = 624 , num_weak_rules = 1160 , alphabet_size = 362
| | S | | | |   |  , total_length = 12946} , self = 112 , parent = Nothing , duration = 13.390437584000
| | S | | | |   |  , status = Success , start = 2025-09-03 10:46:02.415717998 UTC , finish
| | S | | | |   |  = 2025-09-03 10:46:15.806155582 UTC , thread_cap_info = ("ThreadId 127",
| | S | | | |   |  3, False)}
| | S | | | |   |  
| | | | | E |   |  
| | | | | F |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | | | | F |   |  = 36 , num_top_rules = 36 , num_weak_rules = 30 , alphabet_size = 31 ,
| | | | | F |   |  total_length = 236} , self = 90 , parent = Nothing , duration = 0.176552165000
| | | | | F |   |  , status = Fail , start = 2025-09-03 10:46:02.525934958 UTC , finish =
| | | | | F |   |  2025-09-03 10:46:02.702487123 UTC , thread_cap_info = ("ThreadId 145",
| | | | | F |   |  1, False)}
| | | | | F |   |  
| | | | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | | | | | | F |  = 36 , num_top_rules = 36 , num_weak_rules = 30 , alphabet_size = 31 ,
| | | | | | | F |  total_length = 236} , self = 91 , parent = Nothing , duration = 0.182978517000
| | | | | | | F |  , status = Fail , start = 2025-09-03 10:46:02.525937001 UTC , finish =
| | | | | | | F |  2025-09-03 10:46:02.708915518 UTC , thread_cap_info = ("ThreadId 146",
| | | | | | | F |  1, False)}
| | | | | | | F |  
| | | | | F | | |  
| | | | | S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | |  = 66 , num_strict_rules = 36 , num_top_rules = 36 , num_weak_rules = 30
| | | | | S | | |  , alphabet_size = 31 , total_length = 236} , self = 95 , parent = Nothing
| | | | | S | | |  , duration = 2.102833262000 , status = Success , start = 2025-09-03 10:46:02.702532284
| | | | | S | | |  UTC , finish = 2025-09-03 10:46:04.805365546 UTC , thread_cap_info = ("ThreadId
| | | | | S | | |  149", 1, False)}
| | | | | S | | |  
| | | | | | | F |  
| | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 66
| | | | | | | E |  , num_strict_rules = 36 , num_top_rules = 36 , num_weak_rules = 30 , alphabet_size
| | | | | | | E |  = 31 , total_length = 236} , self = 97 , parent = Nothing , duration =
| | | | | | | E |  2.192239261000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E |  10:46:02.714347749 UTC , finish = 2025-09-03 10:46:04.90658701 UTC , thread_cap_info
| | | | | | | E |  = ("ThreadId 150", 1, False)}
| | | | | | | E |  
| E | | | | | | |  
|   | | | | | | E  
|   | F | | | |    
| F |   | | | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F |   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   | | | |    = 38 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 30 ,
| F |   | | | |    alphabet_size = 21 , total_length = 157} , self = 111 , parent = Nothing
| F |   | | | |    , duration = 10.777789454000 , status = Fail , start = 2025-09-03 10:46:04.258020313
| F |   | | | |    UTC , finish = 2025-09-03 10:46:15.035809767 UTC , thread_cap_info = ("ThreadId
| F |   | | | |    155", 1, False)}
| F |   | | | |    
| | |   | S | |    
| | |   |   | E    
| | | F |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | F |   |      = 35 , num_top_rules = 35 , num_weak_rules = 30 , alphabet_size = 31 ,
| | | F |   |      total_length = 232} , self = 102 , parent = Nothing , duration = 0.286741589000
| | | F |   |      , status = Fail , start = 2025-09-03 10:46:04.977061397 UTC , finish =
| | | F |   |      2025-09-03 10:46:05.263802986 UTC , thread_cap_info = ("ThreadId 160",
| | | F |   |      1, False)}
| | | F |   |      
| | | | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | | | F |      = 35 , num_top_rules = 35 , num_weak_rules = 30 , alphabet_size = 31 ,
| | | | | F |      total_length = 232} , self = 103 , parent = Nothing , duration = 0.285255698000
| | | | | F |      , status = Fail , start = 2025-09-03 10:46:04.99416169 UTC , finish = 2025-09-03
| | | | | F |      10:46:05.279417388 UTC , thread_cap_info = ("ThreadId 161", 1, False)}
| | | | | F |      
| | | F | | |      
| | | F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | |      = 65 , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 30
| | | F | | |      , alphabet_size = 31 , total_length = 232} , self = 105 , parent = Nothing
| | | F | | |      , duration = 2.699958239000 , status = Fail , start = 2025-09-03 10:46:05.274198553
| | | F | | |      UTC , finish = 2025-09-03 10:46:07.974156792 UTC , thread_cap_info = ("ThreadId
| | | F | | |      165", 1, False)}
| | | F | | |      
| | | | | F |      
| | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 65
| | | | | E |      , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 30 , alphabet_size
| | | | | E |      = 31 , total_length = 232} , self = 110 , parent = Nothing , duration =
| | | | | E |      9.043958394000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:05.33058395
| | | | | E |      UTC , finish = 2025-09-03 10:46:14.374542344 UTC , thread_cap_info = ("ThreadId
| | | | | E |      166", 1, False)}
| | | | | E |      
| | | | E | |      
| | | | E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 38
| | | | E | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 30 , alphabet_size
| | | | E | |      = 21 , total_length = 157} , self = 119 , parent = Nothing , duration =
| | | | E | |      12.071690975000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:07.152223135
| | | | E | |      UTC , finish = 2025-09-03 10:46:19.22391411 UTC , thread_cap_info = ("ThreadId
| | | | E | |      169", 1, False)}
| | | | E | |      
| | | F | | |      
| | | F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 65
| | | F | | |      , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 30 , alphabet_size
| | | F | | |      = 31 , total_length = 232} , self = 107 , parent = Nothing , duration =
| | | F | | |      4.817492083000 , status = Fail , start = 2025-09-03 10:46:08.020033137
| | | F | | |      UTC , finish = 2025-09-03 10:46:12.83752522 UTC , thread_cap_info = ("ThreadId
| | | F | | |      170", 1, False)}
| | | F | | |      
| | | | | | S      
| | | | | | F      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | F      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | F      = Size { num_rules = 1362 , num_strict_rules = 442 , num_top_rules = 442
| | | | | | F      , num_weak_rules = 920 , alphabet_size = 278 , total_length = 8854} , self
| | | | | | F      = 108 , parent = Nothing , duration = 3.197535891000 , status = Fail ,
| | | | | | F      start = 2025-09-03 10:46:10.40825267 UTC , finish = 2025-09-03 10:46:13.605788561
| | | | | | F      UTC , thread_cap_info = ("ThreadId 173", 2, False)}
| | | | | | F      
| | | F | | |      
| | | F | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | |      = 65 , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 30
| | | F | | |      , alphabet_size = 31 , total_length = 232} , self = 120 , parent = Nothing
| | | F | | |      , duration = 12.740600343000 , status = Fail , start = 2025-09-03 10:46:12.83756045
| | | F | | |      UTC , finish = 2025-09-03 10:46:25.578160793 UTC , thread_cap_info = ("ThreadId
| | | F | | |      175", 1, False)}
| | | F | | |      
| | | | | | F      
| | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 1362 ,
| | | | | | E      num_strict_rules = 442 , num_top_rules = 442 , num_weak_rules = 920 , alphabet_size
| | | | | | E      = 278 , total_length = 8854} , self = 116 , parent = Nothing , duration
| | | | | | E      = 3.021863914000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:13.637841554
| | | | | | E      UTC , finish = 2025-09-03 10:46:16.659705468 UTC , thread_cap_info = ("ThreadId
| | | | | | E      177", 2, False)}
| | | | | | E      
| | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 1362 ,
| | | | | | | E    num_strict_rules = 442 , num_top_rules = 442 , num_weak_rules = 920 , alphabet_size
| | | | | | | E    = 278 , total_length = 8854} , self = 115 , parent = Nothing , duration
| | | | | | | E    = 3.015522074000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:13.644171556
| | | | | | | E    UTC , finish = 2025-09-03 10:46:16.65969363 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    178", 2, False)}
| | | | | | | E    
| | | | | E | |    
| | | | | E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E | |    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 65
| | | | | E | |    , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 30 , alphabet_size
| | | | | E | |    = 31 , total_length = 232} , self = 123 , parent = Nothing , duration =
| | | | | E | |    12.125542218000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:14.417974353
| | | | | E | |    UTC , finish = 2025-09-03 10:46:26.543516571 UTC , thread_cap_info = ("ThreadId
| | | | | E | |    181", 1, False)}
| | | | | E | |    
| F | | | | | |    
| F | | | | | |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |    = 38 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 30 ,
| F | | | | | |    alphabet_size = 21 , total_length = 157} , self = 126 , parent = Nothing
| F | | | | | |    , duration = 15.147318009000 , status = Fail , start = 2025-09-03 10:46:15.082530136
| F | | | | | |    UTC , finish = 2025-09-03 10:46:30.229848145 UTC , thread_cap_info = ("ThreadId
| F | | | | | |    182", 1, False)}
| F | | | | | |    
| | S | | | | |    
| | F | | | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F | | | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F | | | | |    = Size { num_rules = 1132 , num_strict_rules = 28 , num_top_rules = 28
| | F | | | | |    , num_weak_rules = 1104 , alphabet_size = 305 , total_length = 7728} ,
| | F | | | | |    self = 113 , parent = Nothing , duration = 0.136057753000 , status = Fail
| | F | | | | |    , start = 2025-09-03 10:46:15.806177062 UTC , finish = 2025-09-03 10:46:15.942234815
| | F | | | | |    UTC , thread_cap_info = ("ThreadId 183", 3, False)}
| | F | | | | |    
| | F | | | | |    
| | E | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 1132 ,
| | E | | | | |    num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 1104 , alphabet_size
| | E | | | | |    = 305 , total_length = 7728} , self = 117 , parent = Nothing , duration
| | E | | | | |    = 3.038662943000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:15.94523732
| | E | | | | |    UTC , finish = 2025-09-03 10:46:18.983900263 UTC , thread_cap_info = ("ThreadId
| | E | | | | |    186", 3, False)}
| | E | | | | |    
| | | | | | | | E  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 1132 ,
| | | | | | | | E  num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 1104 , alphabet_size
| | | | | | | | E  = 305 , total_length = 7728} , self = 118 , parent = Nothing , duration
| | | | | | | | E  = 3.022621372000 , status = Except "<<timeout>>" , start = 2025-09-03 10:46:15.961292135
| | | | | | | | E  UTC , finish = 2025-09-03 10:46:18.983913507 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  185", 3, False)}
| | | | | | | | E  
| | | | | | | E |  
| | | | | | E   |  
| | | | | | F   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F   |  = 1362 , num_strict_rules = 442 , num_top_rules = 442 , num_weak_rules
| | | | | | F   |  = 920 , alphabet_size = 278 , total_length = 8854} , self = 121 , parent
| | | | | | F   |  = Nothing , duration = 9.026799546000 , status = Fail , start = 2025-09-03
| | | | | | F   |  10:46:16.65973762 UTC , finish = 2025-09-03 10:46:25.686537166 UTC , thread_cap_info
| | | | | | F   |  = ("ThreadId 189", 2, False)}
| | | | | | F   |  
| | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1362
| | | | | | | E |  , num_strict_rules = 442 , num_top_rules = 442 , num_weak_rules = 920 ,
| | | | | | | E |  alphabet_size = 278 , total_length = 8854} , self = 122 , parent = Nothing
| | | | | | | E |  , duration = 9.043498553000 , status = Except "<<timeout>>" , start = 2025-09-03
| | | | | | | E |  10:46:16.690659484 UTC , finish = 2025-09-03 10:46:25.734158037 UTC , thread_cap_info
| | | | | | | E |  = ("ThreadId 190", 2, False)}
| | | | | | | E |  
| | E | | | | | |  
| |   | | | | | E  
| | F | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |    = 1132 , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules =
| | F | | | | |    1104 , alphabet_size = 305 , total_length = 7728} , self = 124 , parent
| | F | | | | |    = Nothing , duration = 9.026133200000 , status = Fail , start = 2025-09-03
| | F | | | | |    10:46:18.983933181 UTC , finish = 2025-09-03 10:46:28.010066381 UTC , thread_cap_info
| | F | | | | |    = ("ThreadId 195", 3, False)}
| | F | | | | |    
| | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1132
| | | | | | | | E  , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 1104 ,
| | | | | | | | E  alphabet_size = 305 , total_length = 7728} , self = 125 , parent = Nothing
| | | | | | | | E  , duration = 9.013293555000 , status = Except "<<timeout>>" , start = 2025-09-03
| | | | | | | | E  10:46:18.996819579 UTC , finish = 2025-09-03 10:46:28.010113134 UTC , thread_cap_info
| | | | | | | | E  = ("ThreadId 196", 3, False)}
| | | | | | | | E  
| | | | E | | | |  
| | | F   | | | |  
| | |     | F | |  
| | |     |   E |  
| | |     E     |  
| | F           |  
| |             E  
| F                
F                  
S                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                  = True})" , input_size = Size { num_rules = 30 , num_strict_rules = 30
S                  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 18 , total_length
S                  = 116} , self = 128 , parent = Nothing , duration = 0.434485878000 , status
S                  = Success , start = 2025-09-03 10:46:30.252776982 UTC , finish = 2025-09-03
S                  10:46:30.68726286 UTC , thread_cap_info = ("ThreadId 213", 0, False)}
S                  
S                  
