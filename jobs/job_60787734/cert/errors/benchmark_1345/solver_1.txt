last 491 length 1901
CNF 491 vars 1901 clauses
last 501 length 2032
CNF 501 vars 2032 clauses
last 522 length 2018
CNF 522 vars 2018 clauses
last 517 length 2090
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065
last 2266 length 8065
CNF 517 vars 2090 clauses
CNF 2266 vars 8065 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8490
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907
last 2372 length 8490
last 6755 length 27907
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065, status: Unsatisfied, time: 0.122321905s
last 4265 length 18963
last 5228 length 20663
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28083
last 3921 length 20114
last 8971 length 36671
last 5531 length 21584
CNF 2372 vars 8490 clauses
CNF 6755 vars 27907 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16733
CNF 4265 vars 18963 clauses
CNF 5228 vars 20663 clauses
last 6801 length 28083
CNF 3921 vars 20114 clauses
last 8867 length 35594
CNF 8971 vars 36671 clauses
CNF 5531 vars 21584 clauses
last 4219 length 16733
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907, status: Satisfied, time: 0.296760495s
CNF 6801 vars 28083 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 8490, status: Unsatisfied, time: 0.347604653s
CNF 8867 vars 35594 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6801, clauses: 28083, status: Satisfied, time: 0.233020249s
CNF 4219 vars 16733 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4294, clauses: 17019
last 492 length 1997
last 443 length 1715
last 508 length 2055
CNF 443 vars 1715 clauses
CNF 492 vars 1997 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16245, clauses: 63602
last 474 length 1832
CNF 508 vars 2055 clauses
CNF 474 vars 1832 clauses
last 16245 length 63602
CNF 16245 vars 63602 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7640
last 2160 length 7640
CNF 2160 vars 7640 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065
last 2266 length 8065
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2160, clauses: 7640, status: Unsatisfied, time: 0.088503842s
CNF 2266 vars 8065 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8065, status: Unsatisfied, time: 0.219273082s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907
last 6755 length 27907
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4144, clauses: 16447
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27731
CNF 6755 vars 27907 clauses
last 4144 length 16447
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4219, clauses: 16733
last 6709 length 27731
last 4219 length 16733
CNF 4144 vars 16447 clauses
CNF 6709 vars 27731 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6755, clauses: 27907, status: Satisfied, time: 0.112726953s
CNF 4219 vars 16733 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27731, status: Satisfied, time: 0.093032816s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, c, c] {- Input 0 -}
  [c, a] -> [] {- Input 1 -}
  [c, b] -> [a, a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, c, c] {- Input 0 -}
  [a, c, a] -> [a] {- Input 1 -}
  [b, c, a] -> [b] {- Input 1 -}
  [c, c, a] -> [c] {- Input 1 -}
  [c, b] -> [a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, c, b, a] {- Mirror (Input 0) -}
  [a, c, a] -> [a] {- Mirror (Input 1) -}
  [a, c, b] -> [b] {- Mirror (Input 1) -}
  [a, c, c] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [a, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -1A 1A 0A \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( b
  , Wk  / 1A 0A  1A \
        | 1A -1A 0A |
        \ -  -   0A / )
  ( c
  , Wk  / -1A 1A 1A \
        | -1A -  0A |
        \ -   -  0A / )
  ( a#
  , Wk  / -1A 1A 1A \
        | -   -  -  |
        \ -   -  0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -   0A 0A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( b
  , Wk  / 0A - -1A \
        | 1A - -1A |
        \ -  - 0A  / )
  ( c
  , Wk  / -1A 1A 1A  \
        | 0A  -  -2A |
        \ -   -  0A  / )
  ( a#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee\EDG(3/5,5)\Matrix{\ArcticBZ}{3}\EDG(2/5,5)\Matrix{\ArcticBZ}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.556134720000
  min duration 0.009489878000
  total durat. 1.519429823000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.415116598000
  min duration 0.012341387000
  total durat. 1.401105416000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.573953929000
  min duration 0.515370265000
  total durat. 2.147956576000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.447241674000
  min duration 0.063681042000
  total durat. 1.023342085000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.512332534000
  min duration 0.118307241000
  total durat. 1.318273087000
**************************************************
F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                    = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F                    = 5 , total_length = 33} , self = 59 , parent = Nothing , duration = 0.344059749000
F                    , status = Fail , start = 2025-09-03 11:40:37.860283555 UTC , finish =
F                    2025-09-03 11:40:38.204343304 UTC , thread_cap_info = ("ThreadId 79", 3,
F                    False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F                  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F                  = 36} , self = 55 , parent = Nothing , duration = 0.117491887000 , status
| F                  = Fail , start = 2025-09-03 11:40:37.862400203 UTC , finish = 2025-09-03
| F                  11:40:37.97989209 UTC , thread_cap_info = ("ThreadId 78", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | F                = 46 , num_top_rules = 46 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F                total_length = 400} , self = 65 , parent = Nothing , duration = 0.535021674000
| | F                , status = Fail , start = 2025-09-03 11:40:37.870663204 UTC , finish =
| | F                2025-09-03 11:40:38.405684878 UTC , thread_cap_info = ("ThreadId 85", 2,
| | F                False)}
| | F                
| | | S              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | S              , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | S              = 5 , total_length = 33} , self = 64 , parent = Nothing , duration = 0.515370265000
| | | S              , status = Success , start = 2025-09-03 11:40:37.888100968 UTC , finish
| | | S              = 2025-09-03 11:40:38.403471233 UTC , thread_cap_info = ("ThreadId 88",
| | | S              3, False)}
| | | S              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | F            = 46 , num_top_rules = 46 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | F            total_length = 400} , self = 61 , parent = Nothing , duration = 0.415116598000
| | | | F            , status = Fail , start = 2025-09-03 11:40:37.88815347 UTC , finish = 2025-09-03
| | | | F            11:40:38.303270068 UTC , thread_cap_info = ("ThreadId 86", 2, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | F          = 5 , total_length = 36} , self = 67 , parent = Nothing , duration = 0.512332534000
| | | | | F          , status = Fail , start = 2025-09-03 11:40:37.909768638 UTC , finish =
| | | | | F          2025-09-03 11:40:38.422101172 UTC , thread_cap_info = ("ThreadId 91", 3,
| | | | | F          False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F        = 162} , self = 60 , parent = Nothing , duration = 0.370314170000 , status
| | | | | | F        = Fail , start = 2025-09-03 11:40:37.929506361 UTC , finish = 2025-09-03
| | | | | | F        11:40:38.299820531 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F      = 162} , self = 62 , parent = Nothing , duration = 0.410076047000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:40:37.942100534 UTC , finish = 2025-09-03
| | | | | | | F      11:40:38.352176581 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | F      
| F | | | | | |      
| S | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| S | | | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| S | | | | | |      = 5 , total_length = 36} , self = 68 , parent = Nothing , duration = 0.521384549000
| S | | | | | |      , status = Success , start = 2025-09-03 11:40:37.98109734 UTC , finish
| S | | | | | |      = 2025-09-03 11:40:38.502481889 UTC , thread_cap_info = ("ThreadId 105",
| S | | | | | |      3, False)}
| S | | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | | F    = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | F    total_length = 409} , self = 71 , parent = Nothing , duration = 0.556134720000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:40:37.982581075 UTC , finish =
| | | | | | | | F    2025-09-03 11:40:38.538715795 UTC , thread_cap_info = ("ThreadId 103",
| | | | | | | | F    2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| | | | | | | | | F  = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | F  total_length = 409} , self = 63 , parent = Nothing , duration = 0.367334473000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:40:38.027454779 UTC , finish =
| | | | | | | | | F  2025-09-03 11:40:38.394789252 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | | | F  2, False)}
| | | | | | | | | F  
F | | | | | | | | |  
E | | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E | | | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
E | | | | | | | | |  = 5 , total_length = 33} , self = 70 , parent = Nothing , duration = 0.318395292000
E | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:38.204370266
E | | | | | | | | |  UTC , finish = 2025-09-03 11:40:38.522765558 UTC , thread_cap_info = ("ThreadId
E | | | | | | | | |  112", 3, False)}
E | | | | | | | | |  
| | | | | | F | | |  
| | | | F |   | | |  
| | | |   |   F | |  
| | | |   |     | F  
| | | S   |     |    
| | F     |     |    
| |       F     |    
| S             |    
E               |    
                F    
F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F                    = 5 , total_length = 30} , self = 85 , parent = Nothing , duration = 0.118307241000
F                    , status = Fail , start = 2025-09-03 11:40:38.564192819 UTC , finish =
F                    2025-09-03 11:40:38.68250006 UTC , thread_cap_info = ("ThreadId 143", 3,
F                    False)}
F                    
| S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| S                  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| S                  = 5 , total_length = 33} , self = 87 , parent = Nothing , duration = 0.537247833000
| S                  , status = Success , start = 2025-09-03 11:40:38.586765982 UTC , finish
| S                  = 2025-09-03 11:40:39.124013815 UTC , thread_cap_info = ("ThreadId 147",
| S                  3, False)}
| S                  
| | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S                = 5 , total_length = 30} , self = 89 , parent = Nothing , duration = 0.573953929000
| | S                , status = Success , start = 2025-09-03 11:40:38.595623399 UTC , finish
| | S                = 2025-09-03 11:40:39.169577328 UTC , thread_cap_info = ("ThreadId 148",
| | S                3, False)}
| | S                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F              = 5 , total_length = 33} , self = 86 , parent = Nothing , duration = 0.343573563000
| | | F              , status = Fail , start = 2025-09-03 11:40:38.602100413 UTC , finish =
| | | F              2025-09-03 11:40:38.945673976 UTC , thread_cap_info = ("ThreadId 146",
| | | F              3, False)}
| | | F              
F | | |              
E | | |              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E | | |              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
E | | |              = 5 , total_length = 30} , self = 91 , parent = Nothing , duration = 0.447241674000
E | | |              , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:38.722687348
E | | |              UTC , finish = 2025-09-03 11:40:39.169929022 UTC , thread_cap_info = ("ThreadId
E | | |              151", 3, False)}
E | | |              
| | | F              
| | | E              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E              , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | E              = 5 , total_length = 33} , self = 94 , parent = Nothing , duration = 0.194024077000
| | | E              , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:38.981463002
| | | E              UTC , finish = 2025-09-03 11:40:39.175487079 UTC , thread_cap_info = ("ThreadId
| | | E              152", 3, False)}
| | | E              
| S | |              
|   S |              
E     |              
      E              
