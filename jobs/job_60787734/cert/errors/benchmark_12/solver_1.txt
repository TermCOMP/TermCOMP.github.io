last 1496 length 5997
CNF 1496 vars 5997 clauses
last 1844 length 7641
CNF 1844 vars 7641 clauses
last 388 length 1507
CNF 388 vars 1507 clauses
last 515 length 2071
last 686 length 2770
CNF 686 vars 2770 clauses
last 533 length 2073
CNF 533 vars 2073 clauses
CNF 515 vars 2071 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1462, clauses: 5320
last 1462 length 5320
CNF 1462 vars 5320 clauses
last 3998 length 16204
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2174, clauses: 8010
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1462, clauses: 5320, status: Satisfied, time: 0.092618181s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4475, clauses: 18533
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5524, clauses: 22851
CNF 3998 vars 16204 clauses
last 6183 length 25057
last 3376 length 13735
last 2174 length 8010
last 5524 length 22851
last 394 length 1544
last 421 length 1725
last 5180 length 21919
CNF 6183 vars 25057 clauses
CNF 3376 vars 13735 clauses
CNF 2174 vars 8010 clauses
CNF 5524 vars 22851 clauses
CNF 421 vars 1725 clauses
CNF 5180 vars 21919 clauses
CNF 394 vars 1544 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5524, clauses: 22851, status: Satisfied, time: 0.142090161s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2174, clauses: 8010, status: Satisfied, time: 0.147518844s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1354, clauses: 4855
last 1354 length 4855
CNF 1354 vars 4855 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4427, clauses: 18353
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1354, clauses: 4855, status: Unsatisfied, time: 0.095879796s
last 559 length 2259
last 458 length 1757
last 4427 length 18353
CNF 458 vars 1757 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2704, clauses: 10840
last 2704 length 10840
CNF 2704 vars 10840 clauses
CNF 559 vars 2259 clauses
CNF 4427 vars 18353 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1845, clauses: 6689
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10335, clauses: 42137
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6643, clauses: 26335
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2704, clauses: 10840, status: Unsatisfied, time: 0.124214247s
last 1845 length 6689
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5140, clauses: 21249
last 10335 length 42137
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4427, clauses: 18353, status: Unsatisfied, time: 0.415730214s
last 6643 length 26335
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20188, clauses: 84767
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2209, clauses: 8392
last 5140 length 21249
CNF 10335 vars 42137 clauses
CNF 1845 vars 6689 clauses
last 20188 length 84767
CNF 6643 vars 26335 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25193, clauses: 105776
last 2209 length 8392
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7606, clauses: 31451
CNF 5140 vars 21249 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1845, clauses: 6689, status: Satisfied, time: 0.337849841s
last 25193 length 105776
last 7606 length 31451
CNF 2209 vars 8392 clauses
CNF 7606 vars 31451 clauses
CNF 20188 vars 84767 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6643, clauses: 26335, status: Satisfied, time: 0.494740351s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2209, clauses: 8392, status: Unsatisfied, time: 0.319084396s
CNF 25193 vars 105776 clauses
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10335, clauses: 42137, status: Satisfied, time: 0.560232646s

summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 5 strict rules and 3 weak rules on 4 letters       EDG
SRS with 5 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b] -> [a, a, a] {- Input 0 -}
  [b, a, b] -> [a] {- Input 1 -}
  [b, a, a] -> [b, a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b] -> [a, a, a] {- Mirror (Input 0) -}
  [b, a, b] -> [a] {- Mirror (Input 1) -}
  [a, a, b] -> [b, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, b] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, b] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -  0A  0A \
        | 0A -1A -  |
        \ -  -   0A / )
  ( b
  , Wk  / -1A -1A 0A \
        | 0A  1A  1A |
        \ -   -   0A / )
  ( a#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
  ( b#
  , Wk  / 0A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, b] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, b] |-> [a#] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 3A 4A - \
        | 1A 3A 4A - |
        | 1A 3A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b] ->= [a, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee\EDG(5/3,4)\Matrix{\ArcticBZ}{3}\EDG(3/3,4)\Matrix{\Arctic}{3}(1/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.375678377000
  min duration 0.037207292000
  total durat. 1.090841483000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.669652438000
  min duration 0.212070564000
  total durat. 1.234342573000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.511505295000
  min duration 1.511505295000
  total durat. 1.511505295000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 15}
    , self = 94
    , parent = Nothing
    , duration = 1.511505295000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:22.097671434 UTC
    , finish = 2025-09-03 10:45:23.609176729 UTC
    , thread_cap_info = ("ThreadId 36", 1, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                    = 15} , self = 78 , parent = Nothing , duration = 0.526910710000 , status
F                    = Fail , start = 2025-09-03 10:45:22.097614823 UTC , finish = 2025-09-03
F                    10:45:22.624525533 UTC , thread_cap_info = ("ThreadId 37", 0, False)}
F                    
| E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                  = 15} , self = 94 , parent = Nothing , duration = 1.511505295000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.097671434 UTC ,
| E                  finish = 2025-09-03 10:45:23.609176729 UTC , thread_cap_info = ("ThreadId
| E                  36", 1, False)}
| E                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | F                = 32 , num_top_rules = 32 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | F                = 276} , self = 70 , parent = Nothing , duration = 0.375678377000 , status
| | F                = Fail , start = 2025-09-03 10:45:22.129824714 UTC , finish = 2025-09-03
| | F                10:45:22.505503091 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | F              = 32 , num_top_rules = 32 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | F              = 276} , self = 68 , parent = Nothing , duration = 0.281413858000 , status
| | | F              = Fail , start = 2025-09-03 10:45:22.129829527 UTC , finish = 2025-09-03
| | | F              10:45:22.411243385 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | F              
| | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S            = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | S            = 3 , total_length = 25} , self = 61 , parent = Nothing , duration = 0.212070564000
| | | | S            , status = Success , start = 2025-09-03 10:45:22.183600055 UTC , finish
| | | | S            = 2025-09-03 10:45:22.395670619 UTC , thread_cap_info = ("ThreadId 106",
| | | | S            1, False)}
| | | | S            
| | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S          = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | S          = 4 , total_length = 37} , self = 75 , parent = Nothing , duration = 0.352619571000
| | | | | S          , status = Success , start = 2025-09-03 10:45:22.19864973 UTC , finish
| | | | | S          = 2025-09-03 10:45:22.551269301 UTC , thread_cap_info = ("ThreadId 108",
| | | | | S          1, False)}
| | | | | S          
| | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | S        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | | | | | S        = 4 , total_length = 37} , self = 74 , parent = Nothing , duration = 0.328519516000
| | | | | | S        , status = Success , start = 2025-09-03 10:45:22.210112932 UTC , finish
| | | | | | S        = 2025-09-03 10:45:22.538632448 UTC , thread_cap_info = ("ThreadId 110",
| | | | | | S        1, False)}
| | | | | | S        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | E      = 3 , total_length = 25} , self = 63 , parent = Nothing , duration = 0.151366680000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.250945278
| | | | | | | E      UTC , finish = 2025-09-03 10:45:22.402311958 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      113", 1, False)}
| | | | | | | E      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | | F    = 14 , num_top_rules = 14 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | F    = 168} , self = 73 , parent = Nothing , duration = 0.285096593000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 10:45:22.25272299 UTC , finish = 2025-09-03
| | | | | | | | F    10:45:22.537819583 UTC , thread_cap_info = ("ThreadId 111", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | | | F  = 14 , num_top_rules = 14 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | | F  = 168} , self = 69 , parent = Nothing , duration = 0.240924207000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 10:45:22.252730295 UTC , finish = 2025-09-03
| | | | | | | | | F  10:45:22.493654502 UTC , thread_cap_info = ("ThreadId 112", 3, False)}
| | | | | | | | | F  
| | | | S | | | | |  
| | | |   | | E | |  
| | | | F | |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F | |   | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | F | |   | |  = 21} , self = 72 , parent = Nothing , duration = 0.135172700000 , status
| | | | F | |   | |  = Fail , start = 2025-09-03 10:45:22.402633942 UTC , finish = 2025-09-03
| | | | F | |   | |  10:45:22.537806642 UTC , thread_cap_info = ("ThreadId 120", 1, False)}
| | | | F | |   | |  
| | | | | | | F | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F | |  = 21} , self = 71 , parent = Nothing , duration = 0.121644840000 , status
| | | | | | | F | |  = Fail , start = 2025-09-03 10:45:22.407786141 UTC , finish = 2025-09-03
| | | | | | | F | |  10:45:22.529430981 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| | | | | | | F | |  
| | | F | | | | | |  
| | |   | | | | | F  
| | F   | | | | |    
| |     | | | F |    
| |     F | |   |    
| |       | |   F    
| |       | S        
| | F     |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |          = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | F     |          = 3 , total_length = 21} , self = 83 , parent = Nothing , duration = 0.138498616000
| | F     |          , status = Fail , start = 2025-09-03 10:45:22.538651965 UTC , finish =
| | F     |          2025-09-03 10:45:22.677150581 UTC , thread_cap_info = ("ThreadId 131",
| | F     |          1, False)}
| | F     |          
| | |     S          
| | | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | F              = 3 , total_length = 21} , self = 87 , parent = Nothing , duration = 0.652162394000
| | | F              , status = Fail , start = 2025-09-03 10:45:22.554912937 UTC , finish =
| | | F              2025-09-03 10:45:23.207075331 UTC , thread_cap_info = ("ThreadId 134",
| | | F              1, False)}
| | | F              
F | | |              
E | | |              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | |              , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | |              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | |              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | |              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | |              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | |              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | |              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | |              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E | | |              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | |              = 15} , self = 93 , parent = Nothing , duration = 0.984597404000 , status
E | | |              = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.624542522 UTC ,
E | | |              finish = 2025-09-03 10:45:23.609139926 UTC , thread_cap_info = ("ThreadId
E | | |              136", 0, False)}
E | | |              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F            = 29} , self = 85 , parent = Nothing , duration = 0.161972982000 , status
| | | | F            = Fail , start = 2025-09-03 10:45:22.667368508 UTC , finish = 2025-09-03
| | | | F            10:45:22.82934149 UTC , thread_cap_info = ("ThreadId 141", 1, False)}
| | | | F            
| | F | |            
| | F | |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | F | |            = 3 , total_length = 21} , self = 86 , parent = Nothing , duration = 0.502191849000
| | F | |            , status = Fail , start = 2025-09-03 10:45:22.677204627 UTC , finish =
| | F | |            2025-09-03 10:45:23.179396476 UTC , thread_cap_info = ("ThreadId 143",
| | F | |            1, False)}
| | F | |            
| | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S          = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S          = 4 , total_length = 29} , self = 88 , parent = Nothing , duration = 0.669652438000
| | | | | S          , status = Success , start = 2025-09-03 10:45:22.708548464 UTC , finish
| | | | | S          = 2025-09-03 10:45:23.378200902 UTC , thread_cap_info = ("ThreadId 148",
| | | | | S          1, False)}
| | | | | S          
| | | | F |          
| | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | E |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | E |          = 4 , total_length = 29} , self = 90 , parent = Nothing , duration = 0.747844745000
| | | | E |          , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:22.849156639
| | | | E |          UTC , finish = 2025-09-03 10:45:23.597001384 UTC , thread_cap_info = ("ThreadId
| | | | E |          149", 1, False)}
| | | | E |          
| | F | | |          
| |   F | |          
| |     | S          
| |     E            
E |                  
  E                  
