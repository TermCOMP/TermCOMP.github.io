last 588 length 2399
last 621 length 2664
CNF 588 vars 2399 clauses
CNF 621 vars 2664 clauses
last 662 length 2696
CNF 662 vars 2696 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2228, clauses: 8046
last 2228 length 8046
last 599 length 2446
CNF 2228 vars 8046 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2216, clauses: 7947
CNF 599 vars 2446 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7088, clauses: 29373
last 2216 length 7947
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2228, clauses: 8046, status: Unsatisfied, time: 0.138061405s
last 5729 length 30681
last 7101 length 45964
last 7088 length 29373
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7086, clauses: 29367
CNF 2216 vars 7947 clauses
CNF 5729 vars 30681 clauses
last 8087 length 35594
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4495, clauses: 17752
CNF 7101 vars 45964 clauses
CNF 7088 vars 29373 clauses
last 7086 length 29367
last 12112 length 51427
CNF 8087 vars 35594 clauses
last 4495 length 17752
CNF 7086 vars 29367 clauses
CNF 12112 vars 51427 clauses
CNF 4495 vars 17752 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2216, clauses: 7947, status: Unsatisfied, time: 0.453590781s
[Info] pool sizes (success) 32636 seen 8292 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7088, clauses: 29373, status: Unsatisfied, time: 0.638118877s
[Info] pool sizes (success) 55248 seen 16647 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7086, clauses: 29367, status: Unsatisfied, time: 0.435128426s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4489, clauses: 17716
last 4489 length 17716
CNF 4489 vars 17716 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3628, clauses: 13667
last 3628 length 13667
CNF 3628 vars 13667 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3648, clauses: 13847
last 3648 length 13847
**************************************************
CNF 3648 vars 13847 clauses
last 17868 length 89668
summary
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4495, clauses: 17752, status: Unsatisfied, time: 0.717743017s
CNF 17868 vars 89668 clauses
**************************************************last 14466 length 91964
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4489, clauses: 17716, status: Unsatisfied, time: 0.410300606s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3628, clauses: 13667, status: Unsatisfied, time: 0.361002194s

SRS with 4 rules on 3 letters       looping derivation
from
  [b, b, b, b, a, b, a, b, a, b, c]
to
  [b, b, b, b, b, a, b, a, b, a, b, c]
via 12 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a] -> [b] {- Input 1 -}
  [a, b, c] -> [c, b, a, c, a] {- Input 2 -}
  [c] -> [] {- Input 3 -}
reason
  Nontermination
    Derive   { from = [b, b, b, b, a, b, a, b, a, b, c], via = [(Step   { rule = 2, position = 8}, [b, b, b, b, a, b, a, b, c, b, a, c, a]), (Step   { rule = 0, position = 10}, [b, b, b, b, a, b, a, b, c, b, c, a]), (Step   { rule = 0, position = 11}, [b, b, b, b, a, b, a, b, c, b, c]), (Step   { rule = 2, position = 6}, [b, b, b, b, a, b, c, b, a, c, a, b, c]), (Step   { rule = 0, position = 8}, [b, b, b, b, a, b, c, b, c, a, b, c]), (Step   { rule = 2, position = 4}, [b, b, b, b, c, b, a, c, a, b, c, a, b, c]), (Step   { rule = 3, position = 7}, [b, b, b, b, c, b, a, a, b, c, a, b, c]), (Step   { rule = 3, position = 4}, [b, b, b, b, b, a, a, b, c, a, b, c]), (Step   { rule = 2, position = 6}, [b, b, b, b, b, a, c, b, a, c, a, a, b, c]), (Step   { rule = 3, position = 9}, [b, b, b, b, b, a, c, b, a, a, a, b, c]), (Step   { rule = 3, position = 6}, [b, b, b, b, b, a, b, a, a, a, b, c]), (Step   { rule = 1, position = 8}, [b, b, b, b, b, a, b, a, b, a, b, c])], to = [b, b, b, b, b, a, b, a, b, a, b, c]}

**************************************************
skeleton: (4,3)\Loop{12}[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16023, clauses: 63884
last 16023 length 63884

Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.498217083000
  min duration 0.015843802000
  total durat. 1.049854065000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.855929230000
  min duration 0.676915460000
  total durat. 1.532844690000
**************************************************
S                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
S                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
S                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
S                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
S                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
S                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                    = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
S                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S                    = 12} , self = 65 , parent = Nothing , duration = 0.913777657000 , status
S                    = Success , start = 2025-09-03 11:53:42.214803426 UTC , finish = 2025-09-03
S                    11:53:43.128581083 UTC , thread_cap_info = ("ThreadId 35", 1, False)}
S                    
| S                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| S                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| S                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| S                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| S                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| S                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| S                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| S                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| S                  = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| S                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| S                  = 12} , self = 67 , parent = Nothing , duration = 0.912586312000 , status
| S                  = Success , start = 2025-09-03 11:53:42.219550154 UTC , finish = 2025-09-03
| S                  11:53:43.132136466 UTC , thread_cap_info = ("ThreadId 36", 1, False)}
| S                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F                = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | F                = 38} , self = 54 , parent = Nothing , duration = 0.227745784000 , status
| | F                = Fail , start = 2025-09-03 11:53:42.227592648 UTC , finish = 2025-09-03
| | F                11:53:42.455338432 UTC , thread_cap_info = ("ThreadId 75", 2, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F              = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F              = 180} , self = 61 , parent = Nothing , duration = 0.516812449000 , status
| | | F              = Fail , start = 2025-09-03 11:53:42.235447734 UTC , finish = 2025-09-03
| | | F              11:53:42.752260183 UTC , thread_cap_info = ("ThreadId 79", 2, False)}
| | | F              
| | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F            = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | | F            alphabet_size = 4 , total_length = 39} , self = 59 , parent = Nothing ,
| | | | F            duration = 0.376479290000 , status = Fail , start = 2025-09-03 11:53:42.242372869
| | | | F            UTC , finish = 2025-09-03 11:53:42.618852159 UTC , thread_cap_info = ("ThreadId
| | | | F            84", 0, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | F          = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F          = 180} , self = 60 , parent = Nothing , duration = 0.498217083000 , status
| | | | | F          = Fail , start = 2025-09-03 11:53:42.252697397 UTC , finish = 2025-09-03
| | | | | F          11:53:42.75091448 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | | | | F        alphabet_size = 4 , total_length = 38} , self = 63 , parent = Nothing ,
| | | | | | F        duration = 0.560494976000 , status = Fail , start = 2025-09-03 11:53:42.272130585
| | | | | | F        UTC , finish = 2025-09-03 11:53:42.832625561 UTC , thread_cap_info = ("ThreadId
| | | | | | F        83", 2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | | | F      = 4 , total_length = 39} , self = 66 , parent = Nothing , duration = 0.855929230000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:53:42.274863325 UTC , finish =
| | | | | | | F      2025-09-03 11:53:43.130792555 UTC , thread_cap_info = ("ThreadId 88", 0,
| | | | | | | F      False)}
| | | | | | | F      
| | F | | | | |      
| | F | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | F | | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | F | | | | |      = 4 , total_length = 38} , self = 68 , parent = Nothing , duration = 0.676915460000
| | F | | | | |      , status = Fail , start = 2025-09-03 11:53:42.455371299 UTC , finish =
| | F | | | | |      2025-09-03 11:53:43.132286759 UTC , thread_cap_info = ("ThreadId 103",
| | F | | | | |      2, False)}
| | F | | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | F    = 44 , num_top_rules = 44 , num_weak_rules = 36 , alphabet_size = 14 ,
| | | | | | | | F    total_length = 432} , self = 64 , parent = Nothing , duration = 0.383670264000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:53:42.492623844 UTC , finish =
| | | | | | | | F    2025-09-03 11:53:42.876294108 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | | F    1, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | | F  = 44 , num_top_rules = 44 , num_weak_rules = 36 , alphabet_size = 14 ,
| | | | | | | | | F  total_length = 432} , self = 62 , parent = Nothing , duration = 0.308047396000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:53:42.49265857 UTC , finish = 2025-09-03
| | | | | | | | | F  11:53:42.800705966 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | | | | | | | | F  
| | | | F | | | | |  
| | | |   F | | | |  
| | | F     | | | |  
| | |       | | | F  
| | |       F | |    
| | |         | F    
S | |         |      
  | |         F      
  S |                
    F                
