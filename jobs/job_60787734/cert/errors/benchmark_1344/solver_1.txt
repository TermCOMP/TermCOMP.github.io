last 566 length 2282
CNF 566 vars 2282 clauses
last 557 length 2408
CNF 557 vars 2408 clauses
last 639 length 2569
last 578 length 2487
CNF 639 vars 2569 clauses
CNF 578 vars 2487 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8158
last 2266 length 8158
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8667
last 2384 length 8667
CNF 2266 vars 8158 clauses
last 3856 length 17502
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6461, clauses: 26657
last 4426 length 22205
CNF 2384 vars 8667 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6507, clauses: 26839
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2266, clauses: 8158, status: Unsatisfied, time: 0.181207373s
last 10212 length 49322
last 6461 length 26657
CNF 3856 vars 17502 clauses
CNF 4426 vars 22205 clauses
last 11380 length 49390
last 6507 length 26839
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8667, status: Satisfied, time: 0.426160569s
last 13111 length 56657
last 9904 length 47992
CNF 6461 vars 26657 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4043, clauses: 16003
CNF 10212 vars 49322 clauses
CNF 11380 vars 49390 clauses
CNF 9904 vars 47992 clauses
CNF 13111 vars 56657 clauses
last 4043 length 16003
last 470 length 1922
last 494 length 2167
CNF 470 vars 1922 clauses
CNF 494 vars 2167 clauses
CNF 4043 vars 16003 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6321
last 1763 length 6321
CNF 1763 vars 6321 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6321, status: Unsatisfied, time: 0.18285318s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6461, clauses: 26657, status: Satisfied, time: 0.700122286s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23761
last 5748 length 23761
CNF 5748 vars 23761 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3542, clauses: 14072
last 3542 length 14072
CNF 3542 vars 14072 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 6 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, c, b] {- Input 0 -}
  [b, c] -> [] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, c, b] {- Input 0 -}
  [a, b, c] -> [a] {- Input 1 -}
  [b, b, c] -> [b] {- Input 1 -}
  [c, b, c] -> [c] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [b, c, b, a] {- Mirror (Input 0) -}
  [c, b, a] -> [a] {- Mirror (Input 1) -}
  [c, b, b] -> [b] {- Mirror (Input 1) -}
  [c, b, c] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, c, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#, a] |-> [c#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, c, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, c, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [a, a] ->= [b, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A - 1A \
        | 1A - 1A |
        \ -  - 0A / )
  ( b
  , Wk  / -1A -1A 0A \
        | 1A  1A  -  |
        \ -   -   0A / )
  ( c
  , Wk  / -2A -1A 0A \
        | 1A  -   1A |
        \ -   -   0A / )
  ( a#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / -1A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, c, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [a, a] ->= [b, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, c, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(5/5,6)\Weight\EDG(3/5,5)\Matrix{\ArcticBZ}{3}(2/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.764836968000
  min duration 0.018359525000
  total durat. 2.094188463000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.647468729000
  min duration 0.006075782000
  total durat. 2.076441066000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.077272076000
  min duration 1.077272076000
  total durat. 1.077272076000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 35}
    , self = 76
    , parent = Nothing
    , duration = 1.077272076000
    , status = Success
    , start = 2025-09-03 11:40:36.851042252 UTC
    , finish = 2025-09-03 11:40:37.928314328 UTC
    , thread_cap_info = ("ThreadId 85", 3, False)}
**************************************************
F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                    = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F                    = 5 , total_length = 35} , self = 59 , parent = Nothing , duration = 0.534423002000
F                    , status = Fail , start = 2025-09-03 11:40:36.84759148 UTC , finish = 2025-09-03
F                    11:40:37.382014482 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
F                    
| S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| S                  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| S                  = 5 , total_length = 35} , self = 76 , parent = Nothing , duration = 1.077272076000
| S                  , status = Success , start = 2025-09-03 11:40:36.851042252 UTC , finish
| S                  = 2025-09-03 11:40:37.928314328 UTC , thread_cap_info = ("ThreadId 85",
| S                  3, False)}
| S                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 93 , num_strict_rules
| | F                = 66 , num_top_rules = 66 , num_weak_rules = 27 , alphabet_size = 17 ,
| | F                total_length = 534} , self = 72 , parent = Nothing , duration = 0.764836968000
| | F                , status = Fail , start = 2025-09-03 11:40:36.851860996 UTC , finish =
| | F                2025-09-03 11:40:37.616697964 UTC , thread_cap_info = ("ThreadId 90", 1,
| | F                False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 93 , num_strict_rules
| | | F              = 66 , num_top_rules = 66 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | F              total_length = 534} , self = 69 , parent = Nothing , duration = 0.647468729000
| | | F              , status = Fail , start = 2025-09-03 11:40:36.871091783 UTC , finish =
| | | F              2025-09-03 11:40:37.518560512 UTC , thread_cap_info = ("ThreadId 92", 1,
| | | F              False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 162} , self = 60 , parent = Nothing , duration = 0.551822557000 , status
| | | | F            = Fail , start = 2025-09-03 11:40:36.871121645 UTC , finish = 2025-09-03
| | | | F            11:40:37.422944202 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F          = 162} , self = 63 , parent = Nothing , duration = 0.562806060000 , status
| | | | | F          = Fail , start = 2025-09-03 11:40:36.891082352 UTC , finish = 2025-09-03
| | | | | F          11:40:37.453888412 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| | | | | F          
| | | | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S        = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | S        = 5 , total_length = 39} , self = 61 , parent = Nothing , duration = 0.540398572000
| | | | | | S        , status = Success , start = 2025-09-03 11:40:36.911092379 UTC , finish
| | | | | | S        = 2025-09-03 11:40:37.451490951 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | S        3, False)}
| | | | | | S        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | E      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | E      = 5 , total_length = 39} , self = 64 , parent = Nothing , duration = 0.549755538000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:36.930754134
| | | | | | | E      UTC , finish = 2025-09-03 11:40:37.480509672 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      101", 3, False)}
| | | | | | | E      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | | | | F    = 57 , num_top_rules = 57 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | F    total_length = 474} , self = 70 , parent = Nothing , duration = 0.603597101000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:40:36.991091419 UTC , finish =
| | | | | | | | F    2025-09-03 11:40:37.59468852 UTC , thread_cap_info = ("ThreadId 104", 1,
| | | | | | | | F    False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | | | | | F  = 57 , num_top_rules = 57 , num_weak_rules = 27 , alphabet_size = 17 ,
| | | | | | | | | F  total_length = 474} , self = 73 , parent = Nothing , duration = 0.643474206000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:40:37.012000273 UTC , finish =
| | | | | | | | | F  2025-09-03 11:40:37.655474479 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | | F  1, False)}
| | | | | | | | | F  
F | | | | | | | | |  
E | | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E | | | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
E | | | | | | | | |  = 5 , total_length = 35} , self = 78 , parent = Nothing , duration = 0.653531785000
E | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:40:37.382063427
E | | | | | | | | |  UTC , finish = 2025-09-03 11:40:38.035595212 UTC , thread_cap_info = ("ThreadId
E | | | | | | | | |  113", 3, False)}
E | | | | | | | | |  
| | | | F | | | | |  
| | | |   | S | | |  
| | | |   F   | | |  
| | | |       E | |  
| | | | F       | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F       | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F       | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F       | |  = 28} , self = 74 , parent = Nothing , duration = 0.169203917000 , status
| | | | F       | |  = Fail , start = 2025-09-03 11:40:37.510464512 UTC , finish = 2025-09-03
| | | | F       | |  11:40:37.679668429 UTC , thread_cap_info = ("ThreadId 127", 3, False)}
| | | | F       | |  
| | | | | F     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F     | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | F     | |  = 28} , self = 71 , parent = Nothing , duration = 0.101873842000 , status
| | | | | F     | |  = Fail , start = 2025-09-03 11:40:37.51252793 UTC , finish = 2025-09-03
| | | | | F     | |  11:40:37.614401772 UTC , thread_cap_info = ("ThreadId 126", 0, False)}
| | | | | F     | |  
| | | F | |     | |  
| | |   | |     F |  
| | |   | F       |  
| | | F |         |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |         |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |         |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F |         |  = 4 , total_length = 28} , self = 75 , parent = Nothing , duration = 0.265173169000
| | | F |         |  , status = Fail , start = 2025-09-03 11:40:37.614464035 UTC , finish =
| | | F |         |  2025-09-03 11:40:37.879637204 UTC , thread_cap_info = ("ThreadId 132",
| | | F |         |  3, False)}
| | | F |         |  
| | F | |         |  
| |   | |         F  
| |   | F            
| |   F              
| S                  
E                    
