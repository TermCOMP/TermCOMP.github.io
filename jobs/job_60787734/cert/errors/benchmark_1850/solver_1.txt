last 302 length 1163
CNF 302 vars 1163 clauses
last 232 length 873
last 302 length 1163
CNF 232 vars 873 clauses
CNF 302 vars 1163 clauses
last 232 length 873
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1812, clauses: 6317
last 1812 length 6317
CNF 232 vars 873 clauses
CNF 1812 vars 6317 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5157, clauses: 21107
last 5157 length 21107
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1812, clauses: 6317
last 1812 length 6317
last 3084 length 12505
CNF 1812 vars 6317 clauses
CNF 5157 vars 21107 clauses
last 3370 length 13737
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5157, clauses: 21107
last 4332 length 17569
CNF 3084 vars 12505 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1812, clauses: 6317, status: Unsatisfied, time: 0.139504227s
last 4251 length 17271
last 3831 length 15683
last 3860 length 15849
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5157, clauses: 21107, status: Satisfied, time: 0.265300135s
CNF 3370 vars 13737 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1812, clauses: 6317, status: Unsatisfied, time: 0.253021785s
last 5157 length 21107
CNF 4332 vars 17569 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3142, clauses: 12039
CNF 3831 vars 15683 clauses
CNF 4251 vars 17271 clauses
CNF 3860 vars 15849 clauses
CNF 5157 vars 21107 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3142, clauses: 12039
last 3142 length 12039
CNF 3142 vars 12039 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       DP
SRS with 6 strict rules and 3 weak rules on 6 letters       weights
SRS with 2 strict rules and 3 weak rules on 5 letters       EDG
SRS with 2 strict rules and 3 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 5 letters       weights
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [c, b] {- Input 0 -}
  [b, b] -> [c, a] {- Input 1 -}
  [c, c] -> [b, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, a] {- DP Nontop (Input 2) -}
  [a#, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [c#, b] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [c#, a] {- DP (Top 0) (Input 1) -}
  [c#, c] |-> [a#] {- DP (Top 1) (Input 2) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Input 2) -}
reason
  (a, 2/1)
  (b, 2/1)
  (c, 2/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, a] {- DP Nontop (Input 2) -}
  [b#, b] |-> [c#, a] {- DP (Top 0) (Input 1) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b] |-> [c#, a] {- DP (Top 0) (Input 1) -}
  [c#, c] |-> [b#, a] {- DP (Top 0) (Input 2) -}
  [a, a] ->= [c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  2A 1A \
        | -1A -  -  |
        \ -   -  0A / )
  ( b
  , Wk  / -1A 1A 0A \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( c
  , Wk  / 0A 1A  1A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( b#
  , Wk  / - 2A 1A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / - 2A 2A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b#, b] |-> [c#, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, a] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [c, a] {- DP Nontop (Input 1) -}
  [c, c] ->= [b, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Deepee(6/3,6)\Weight\EDG(2/3,5)\Matrix{\ArcticBZ}{3}(1/3,5)\Weight(0/3,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.458103323000
  min duration 0.052510069000
  total durat. 1.295234316000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.418859857000
  min duration 0.012798827000
  total durat. 1.195876363000
**************************************************
F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
F                  = 5 , total_length = 20} , self = 59 , parent = Nothing , duration = 0.379347409000
F                  , status = Fail , start = 2025-09-03 13:25:10.18334379 UTC , finish = 2025-09-03
F                  13:25:10.562691199 UTC , thread_cap_info = ("ThreadId 73", 3, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F                = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| F                = 198} , self = 71 , parent = Nothing , duration = 0.458103323000 , status
| F                = Fail , start = 2025-09-03 13:25:10.189605642 UTC , finish = 2025-09-03
| F                13:25:10.647708965 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 60 , parent = Nothing , duration = 0.362522839000 , status
| | F              = Fail , start = 2025-09-03 13:25:10.20753416 UTC , finish = 2025-09-03
| | F              13:25:10.570056999 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | F            = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | F            = 198} , self = 67 , parent = Nothing , duration = 0.418859857000 , status
| | | F            = Fail , start = 2025-09-03 13:25:10.207550083 UTC , finish = 2025-09-03
| | | F            13:25:10.62640994 UTC , thread_cap_info = ("ThreadId 89", 2, False)}
| | | F            
| | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | S          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | S          = 5 , total_length = 20} , self = 61 , parent = Nothing , duration = 0.393176586000
| | | | S          , status = Success , start = 2025-09-03 13:25:10.207699155 UTC , finish
| | | | S          = 2025-09-03 13:25:10.600875741 UTC , thread_cap_info = ("ThreadId 96",
| | | | S          3, False)}
| | | | S          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F        = 162} , self = 65 , parent = Nothing , duration = 0.384911653000 , status
| | | | | F        = Fail , start = 2025-09-03 13:25:10.222938196 UTC , finish = 2025-09-03
| | | | | F        13:25:10.607849849 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F      = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | F      = 5 , total_length = 20} , self = 63 , parent = Nothing , duration = 0.339577673000
| | | | | | F      , status = Fail , start = 2025-09-03 13:25:10.263466749 UTC , finish =
| | | | | | F      2025-09-03 13:25:10.603044422 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | F      3, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | | | F    = 198} , self = 69 , parent = Nothing , duration = 0.336044172000 , status
| | | | | | | F    = Fail , start = 2025-09-03 13:25:10.302765618 UTC , finish = 2025-09-03
| | | | | | | F    13:25:10.63880979 UTC , thread_cap_info = ("ThreadId 102", 2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | | | | F  = 198} , self = 70 , parent = Nothing , duration = 0.301523757000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 13:25:10.341884981 UTC , finish = 2025-09-03
| | | | | | | | F  13:25:10.643408738 UTC , thread_cap_info = ("ThreadId 103", 2, False)}
| | | | | | | | F  
F | | | | | | | |  
  | F | | | | | |  
  |   | S | | | |  
  |   |   | F | |  
  |   |   F   | |  
  |   F       | |  
  |           F |  
  |             F  
  F                
