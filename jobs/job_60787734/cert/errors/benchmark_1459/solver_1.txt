last 895 length 3825
CNF 895 vars 3825 clauses
last 1068 length 4663
CNF 1068 vars 4663 clauses
last 2402 length 11882
last 895 length 3825
CNF 2402 vars 11882 clauses
last 1068 length 4663
CNF 895 vars 3825 clauses
CNF 1068 vars 4663 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1736, clauses: 6543
last 3733 length 17206
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5348, clauses: 22241
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1736, clauses: 6543
last 3949 length 19244
last 1736 length 6543
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5348, clauses: 22241
CNF 3733 vars 17206 clauses
last 3949 length 19244
last 5348 length 22241
last 1736 length 6543
last 5236 length 24519
CNF 3949 vars 19244 clauses
last 5348 length 22241
CNF 1736 vars 6543 clauses
last 5236 length 24519
CNF 5348 vars 22241 clauses
CNF 3949 vars 19244 clauses
CNF 1736 vars 6543 clauses
CNF 5236 vars 24519 clauses
CNF 5348 vars 22241 clauses
CNF 5236 vars 24519 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1736, clauses: 6543, status: Unsatisfied, time: 0.308035604s
last 4371 length 17105
CNF 4371 vars 17105 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1736, clauses: 6543, status: Unsatisfied, time: 0.241261036s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3242, clauses: 13443
last 3242 length 13443
CNF 3242 vars 13443 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3242, clauses: 13443
last 3242 length 13443
CNF 3242 vars 13443 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105, status: Satisfied, time: 0.26991058s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105
last 4371 length 17105
CNF 4371 vars 17105 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105, status: Satisfied, time: 0.32328471s
last 5236 length 24519
CNF 5236 vars 24519 clauses
last 3949 length 19244
CNF 3949 vars 19244 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5348, clauses: 22241, status: Unsatisfied, time: 1.211591302s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5348, clauses: 22241, status: Unsatisfied, time: 1.111901891s
last 3949 length 19244
CNF 3949 vars 19244 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2848, clauses: 11407
last 2848 length 11407
CNF 2848 vars 11407 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2848, clauses: 11407
last 2848 length 11407
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105
last 4371 length 17105
CNF 2848 vars 11407 clauses
CNF 4371 vars 17105 clauses
last 5236 length 24519
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3242, clauses: 13443, status: Unsatisfied, time: 1.157475534s
CNF 5236 vars 24519 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3242, clauses: 13443, status: Unsatisfied, time: 1.319939513s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105, status: Satisfied, time: 0.505247477s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105
last 4371 length 17105
CNF 4371 vars 17105 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2848, clauses: 11407, status: Unsatisfied, time: 0.74787288s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9001, clauses: 39234
last 9001 length 39234
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4371, clauses: 17105, status: Satisfied, time: 0.168504156s
CNF 9001 vars 39234 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5318, clauses: 20961
**************************************************
last 5318 length 20961
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2848, clauses: 11407, status: Unsatisfied, time: 0.867114687s
summary
**************************************************
SRS with 3 rules on 2 letters       weights
SRS with 2 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 rules on 4 letters       mirror
SRS with 8 rules on 4 letters       DP
SRS with 40 strict rules and 8 weak rules on 8 letters       weights
SRS with 8 strict rules and 8 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 8 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 8 weak rules on 6 letters       weights
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

  2 SRS with 4 strict rules and 8 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 8 weak rules on 6 letters       weights
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b] -> [b, b, a, a] {- Input 0 -}
  [b, a, b, a] -> [a, b, a, b] {- Input 1 -}
  [b, a, b, b] -> [a, b, a, a] {- Input 2 -}
reason
  (a, 0/1)
  (b, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, a, b] -> [b, b, a, a] {- Input 0 -}
  [b, a, b, a] -> [a, b, a, b] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, a], [a, a]] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, a], [a, a]] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, a], [a, b]] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, a], [a, b], [a, a]] -> [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] -> [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] -> [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] -> [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] -> [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([a, a]#, 0/1)
  ([a, b]#, 0/1)
  ([b, a]#, 0/1)
  ([b, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 3A 3A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9001, clauses: 39234

  last 9001 length 39234
( [b, b]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 1/1)
  ([b, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [a, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a], [a, b], [b, a]] |-> [ [a, b]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  CNF 5318 vars 20961 clauses
( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 3A 3A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [b, a], [a, b], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, b]#, 1/1)
  ([b, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [a, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, a] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [a, b], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Weight(2,2)\TileAllAll{2}\Mirror(8,4)\Deepee(40/8,8)\Weight(8/8,8)\EDG[(4/8,6)\Matrix{\Arctic}{3}(2/8,6)\Weight(0/8,4)\EDG[],(4/8,6)\Matrix{\Arctic}{3}(2/8,6)\Weight(0/8,4)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 9001 vars 39234 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.836574628000
  min duration 0.071455473000
  total durat. 2.744282938000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.350681626000
  min duration 0.062858590000
  total durat. 1.394219487000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.424225533000
  min duration 1.330298533000
  total durat. 2.754524066000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 86
    , parent = Nothing
    , duration = 1.330298533000
    , status = Fail
    , start = 2025-09-03 11:54:59.800795456 UTC
    , finish = 2025-09-03 11:55:01.131093989 UTC
    , thread_cap_info = ("ThreadId 108", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 85
    , parent = Nothing
    , duration = 1.424225533000
    , status = Fail
    , start = 2025-09-03 11:54:59.696560854 UTC
    , finish = 2025-09-03 11:55:01.120786387 UTC
    , thread_cap_info = ("ThreadId 90", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.839658860000
  min duration 0.272504906000
  total durat. 1.978837491000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.470973528000
  min duration 1.214766550000
  total durat. 2.685740078000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 88
    , parent = Nothing
    , duration = 1.214766550000
    , status = Fail
    , start = 2025-09-03 11:55:00.213152208 UTC
    , finish = 2025-09-03 11:55:01.427918758 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 89
    , parent = Nothing
    , duration = 1.470973528000
    , status = Fail
    , start = 2025-09-03 11:55:00.27041841 UTC
    , finish = 2025-09-03 11:55:01.741391938 UTC
    , thread_cap_info = ("ThreadId 129", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.783751116000
  min duration 0.426162951000
  total durat. 2.653127262000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.512321857000
  min duration 0.488887970000
  total durat. 1.001209827000
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F                  = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
F                  = 80} , self = 62 , parent = Nothing , duration = 0.389822042000 , status
F                  = Fail , start = 2025-09-03 11:54:59.621799432 UTC , finish = 2025-09-03
F                  11:55:00.011621474 UTC , thread_cap_info = ("ThreadId 68", 3, False)}
F                  
| F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F                = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                = 80} , self = 46 , parent = Nothing , duration = 0.101801076000 , status
| F                = Fail , start = 2025-09-03 11:54:59.626945395 UTC , finish = 2025-09-03
| F                11:54:59.728746471 UTC , thread_cap_info = ("ThreadId 70", 3, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F              = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F              = 32} , self = 57 , parent = Nothing , duration = 0.105036613000 , status
| | F              = Fail , start = 2025-09-03 11:54:59.663169562 UTC , finish = 2025-09-03
| | F              11:54:59.768206175 UTC , thread_cap_info = ("ThreadId 84", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F            = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F            = 32} , self = 59 , parent = Nothing , duration = 0.129917263000 , status
| | | F            = Fail , start = 2025-09-03 11:54:59.670849908 UTC , finish = 2025-09-03
| | | F            11:54:59.800767171 UTC , thread_cap_info = ("ThreadId 83", 1, False)}
| | | F            
| | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F          = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F          = 4 , total_length = 32} , self = 66 , parent = Nothing , duration = 0.512321857000
| | | | F          , status = Fail , start = 2025-09-03 11:54:59.696557898 UTC , finish =
| | | | F          2025-09-03 11:55:00.208879755 UTC , thread_cap_info = ("ThreadId 89", 1,
| | | | F          False)}
| | | | F          
| | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F        = 4 , total_length = 32} , self = 85 , parent = Nothing , duration = 1.424225533000
| | | | | F        , status = Fail , start = 2025-09-03 11:54:59.696560854 UTC , finish =
| | | | | F        2025-09-03 11:55:01.120786387 UTC , thread_cap_info = ("ThreadId 90", 1,
| | | | | F        False)}
| | | | | F        
| F | | | |        
| F | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F | | | |        = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| F | | | |        = 120} , self = 65 , parent = Nothing , duration = 0.412736433000 , status
| F | | | |        = Fail , start = 2025-09-03 11:54:59.762028463 UTC , finish = 2025-09-03
| F | | | |        11:55:00.174764896 UTC , thread_cap_info = ("ThreadId 104", 2, False)}
| F | | | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | F      = 120} , self = 63 , parent = Nothing , duration = 0.267564955000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:54:59.766691371 UTC , finish = 2025-09-03
| | | | | | F      11:55:00.034256326 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | | | | | F      
| | F | | | |      
| | F | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | |      = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F | | | |      = 4 , total_length = 32} , self = 68 , parent = Nothing , duration = 0.488887970000
| | F | | | |      , status = Fail , start = 2025-09-03 11:54:59.781096961 UTC , finish =
| | F | | | |      2025-09-03 11:55:00.269984931 UTC , thread_cap_info = ("ThreadId 106",
| | F | | | |      1, False)}
| | F | | | |      
| | | F | | |      
| | | F | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F | | |      = 4 , total_length = 32} , self = 86 , parent = Nothing , duration = 1.330298533000
| | | F | | |      , status = Fail , start = 2025-09-03 11:54:59.800795456 UTC , finish =
| | | F | | |      2025-09-03 11:55:01.131093989 UTC , thread_cap_info = ("ThreadId 108",
| | | F | | |      1, False)}
| | | F | | |      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | F    = 120} , self = 67 , parent = Nothing , duration = 0.390133830000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:54:59.843123571 UTC , finish = 2025-09-03
| | | | | | | F    11:55:00.233257401 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | | F  = 120} , self = 64 , parent = Nothing , duration = 0.211557209000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 11:54:59.847133153 UTC , finish = 2025-09-03
| | | | | | | | F  11:55:00.058690362 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | | | | | | F  
F | | | | | | | |  
  | | | | | F | |  
S | | | | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | |   | |  = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
S | | | | |   | |  alphabet_size = 6 , total_length = 120} , self = 69 , parent = Nothing
S | | | | |   | |  , duration = 0.426162951000 , status = Success , start = 2025-09-03 11:55:00.034280162
S | | | | |   | |  UTC , finish = 2025-09-03 11:55:00.460443113 UTC , thread_cap_info = ("ThreadId
S | | | | |   | |  123", 2, False)}
S | | | | |   | |  
| | | | | |   | F  
| | | | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S |    = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | | | | S |    alphabet_size = 6 , total_length = 120} , self = 76 , parent = Nothing
| | | | | | S |    , duration = 0.758324450000 , status = Success , start = 2025-09-03 11:55:00.068210444
| | | | | | S |    UTC , finish = 2025-09-03 11:55:00.826534894 UTC , thread_cap_info = ("ThreadId
| | | | | | S |    124", 2, False)}
| | | | | | S |    
| F | | | | | |    
| E | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | | | | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| E | | | | | |    = 6 , total_length = 120} , self = 71 , parent = Nothing , duration = 0.272504906000
| E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:55:00.196709319
| E | | | | | |    UTC , finish = 2025-09-03 11:55:00.469214225 UTC , thread_cap_info = ("ThreadId
| E | | | | | |    125", 2, False)}
| E | | | | | |    
| | | | F | | |    
| | | | F | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F | | |    = 4 , total_length = 32} , self = 88 , parent = Nothing , duration = 1.214766550000
| | | | F | | |    , status = Fail , start = 2025-09-03 11:55:00.213152208 UTC , finish =
| | | | F | | |    2025-09-03 11:55:01.427918758 UTC , thread_cap_info = ("ThreadId 126",
| | | | F | | |    1, False)}
| | | | F | | |    
| | | | | | | F    
| | F | | | |      
| | F | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F | | | |      = 4 , total_length = 32} , self = 89 , parent = Nothing , duration = 1.470973528000
| | F | | | |      , status = Fail , start = 2025-09-03 11:55:00.27041841 UTC , finish = 2025-09-03
| | F | | | |      11:55:01.741391938 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | F | | | |      
| | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | E    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | | | | | | E    = 6 , total_length = 120} , self = 78 , parent = Nothing , duration = 0.587089892000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 11:55:00.289344551
| | | | | | | E    UTC , finish = 2025-09-03 11:55:00.876434443 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    130", 2, False)}
| | | | | | | E    
S | | | | | | |    
  E | | | | | |    
F   | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F   | | | | | |    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
F   | | | | | |    = 120} , self = 84 , parent = Nothing , duration = 0.513643269000 , status
F   | | | | | |    = Fail , start = 2025-09-03 11:55:00.4772432 UTC , finish = 2025-09-03
F   | | | | | |    11:55:00.990886469 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
F   | | | | | |    
| F | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F | | | | | |    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| F | | | | | |    = 120} , self = 83 , parent = Nothing , duration = 0.350681626000 , status
| F | | | | | |    = Fail , start = 2025-09-03 11:55:00.637850698 UTC , finish = 2025-09-03
| F | | | | | |    11:55:00.988532324 UTC , thread_cap_info = ("ThreadId 138", 2, False)}
| F | | | | | |    
| | | | | | S |    
| | | | | |   E    
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | F      = 120} , self = 90 , parent = Nothing , duration = 0.836574628000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:55:00.934063083 UTC , finish = 2025-09-03
| | | | | | F      11:55:01.770637711 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | F    = 120} , self = 87 , parent = Nothing , duration = 0.294719418000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:55:00.946880355 UTC , finish = 2025-09-03
| | | | | | | F    11:55:01.241599773 UTC , thread_cap_info = ("ThreadId 146", 2, False)}
| | | | | | | F    
| F | | | | | |    
F   | | | | | |    
S   | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | | | | |    = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
S   | | | | | |    alphabet_size = 6 , total_length = 120} , self = 91 , parent = Nothing
S   | | | | | |    , duration = 0.783751116000 , status = Success , start = 2025-09-03 11:55:01.0091013
S   | | | | | |    UTC , finish = 2025-09-03 11:55:01.792852416 UTC , thread_cap_info = ("ThreadId
S   | | | | | |    147", 2, False)}
S   | | | | | |    
| E | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | | | | | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| E | | | | | |    = 6 , total_length = 120} , self = 93 , parent = Nothing , duration = 0.839658860000
| E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:55:01.027280487
| E | | | | | |    UTC , finish = 2025-09-03 11:55:01.866939347 UTC , thread_cap_info = ("ThreadId
| E | | | | | |    148", 2, False)}
| E | | | | | |    
| | | | | F | |    
| | | | | F | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | |    = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F | |    = 4 , total_length = 32} , self = 95 , parent = Nothing , duration = 0.823195320000
| | | | | F | |    , status = Fail , start = 2025-09-03 11:55:01.127383147 UTC , finish =
| | | | | F | |    2025-09-03 11:55:01.950578467 UTC , thread_cap_info = ("ThreadId 149",
| | | | | F | |    1, False)}
| | | | | F | |    
| | | F | | | |    
| | |   | | | F    
| | | S | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | |      = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
| | | S | | |      alphabet_size = 6 , total_length = 120} , self = 96 , parent = Nothing
| | | S | | |      , duration = 0.684888745000 , status = Success , start = 2025-09-03 11:55:01.336679085
| | | S | | |      UTC , finish = 2025-09-03 11:55:02.02156783 UTC , thread_cap_info = ("ThreadId
| | | S | | |      155", 2, False)}
| | | S | | |      
| | | | F | |      
| | F |   | |      
| |   |   | F      
S |   |   |        
E |   |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E |   |   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
E |   |   |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
E |   |   |        = 6 , total_length = 120} , self = 99 , parent = Nothing , duration = 0.279583833000
E |   |   |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:55:01.806687591
E |   |   |        UTC , finish = 2025-09-03 11:55:02.086271424 UTC , thread_cap_info = ("ThreadId
E |   |   |        160", 2, False)}
E |   |   |        
| E   |   |        
|     |   F        
|     S            
E                  
