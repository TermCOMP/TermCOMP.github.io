last 1808 length 7879
last 1294 length 6088
CNF 1808 vars 7879 clauses
last 4078 length 25582
CNF 1294 vars 6088 clauses
CNF 4078 vars 25582 clauses
last 3189 length 15595
last 3269 length 14497
CNF 3189 vars 15595 clauses
last 4226 length 21530
CNF 3269 vars 14497 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2478, clauses: 9626
last 2478 length 9626
CNF 2478 vars 9626 clauses
CNF 4226 vars 21530 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7586, clauses: 31806
last 7586 length 31806
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2478, clauses: 9626, status: Satisfied, time: 0.015960478s
CNF 7586 vars 31806 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4088, clauses: 17040
last 4088 length 17040
CNF 4088 vars 17040 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10574, clauses: 44357
last 10574 length 44357
CNF 10574 vars 44357 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4088, clauses: 17040, status: Satisfied, time: 0.107668504s
last 1246 length 5934
CNF 1246 vars 5934 clauses
last 1644 length 7233
CNF 1644 vars 7233 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 9111
last 2372 length 9111
CNF 2372 vars 9111 clauses
last 1724 length 7783
CNF 1724 vars 7783 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2372, clauses: 9111, status: Unsatisfied, time: 0.137036101s
last 2212 length 11132
CNF 2212 vars 11132 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7540, clauses: 31630
last 7540 length 31630
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2999, clauses: 11457
last 2999 length 11457
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4725, clauses: 19819
CNF 7540 vars 31630 clauses
last 9953 length 54840
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8836, clauses: 37025
CNF 2999 vars 11457 clauses
last 4725 length 19819
last 14083 length 66189
last 8836 length 37025
CNF 9953 vars 54840 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7540, clauses: 31630, status: Unsatisfied, time: 0.534825936s
CNF 4725 vars 19819 clauses
last 17845 length 90180
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2999, clauses: 11457, status: Satisfied, time: 0.562201025s
last 24838 length 117184
CNF 14083 vars 66189 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4725, clauses: 19819, status: Unsatisfied, time: 0.757061899s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3909, clauses: 15936
last 2204 length 11102
CNF 17845 vars 90180 clauses
last 1716 length 7753
CNF 24838 vars 117184 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13025, clauses: 55977
last 3909 length 15936
CNF 2204 vars 11102 clauses
CNF 1716 vars 7753 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13034, clauses: 57783
last 13025 length 55977
CNF 3909 vars 15936 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2893, clauses: 11068
last 13034 length 57783
CNF 13025 vars 55977 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15117, clauses: 65846
last 2893 length 11068
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3909, clauses: 15936, status: Unsatisfied, time: 0.962009622s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8790, clauses: 36855
CNF 13034 vars 57783 clauses
last 15117 length 65846
CNF 2893 vars 11068 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13025, clauses: 55977, status: Satisfied, time: 1.064004826s
last 8790 length 36855
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34056, clauses: 143145
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30575, clauses: 128595
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2893, clauses: 11068, status: Satisfied, time: 0.760302761s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7283, clauses: 29157
CNF 8790 vars 36855 clauses
last 34056 length 143145
CNF 15117 vars 65846 clauses
last 7283 length 29157
last 1202 length 5475
last 2024 length 10005
CNF 7283 vars 29157 clauses
CNF 34056 vars 143145 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15117, clauses: 65846, status: Satisfied, time: 0.822903067s
CNF 1202 vars 5475 clauses
CNF 2024 vars 10005 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2682, clauses: 9941
last 2682 length 9941
CNF 2682 vars 9941 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2682, clauses: 9941, status: Satisfied, time: 0.108754272s
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 16 rules on 4 letters       mirror
SRS with 16 rules on 4 letters       DP
SRS with 56 strict rules and 16 weak rules on 8 letters       EDG
SRS with 56 strict rules and 16 weak rules on 8 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 16 weak rules on 6 letters       weights
SRS with 1 strict rules and 16 weak rules on 5 letters       EDG
SRS with 1 strict rules and 16 weak rules on 5 letters       Usable
SRS with 1 rules on 4 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b, b] -> [b, b, a, b, b, a, a, a] {- Input 0 -}
  [b, b, a] -> [] {- Input 1 -}
  [a] -> [b, b, b] {- Input 2 -}
  [a] -> [b] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a], [a, a]] -> [ [a, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] -> [ [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] -> [ [b, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[a, a], [a, a]] -> [[a, b], [b, a]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, a], [a, b]] -> [[a, b], [b, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, a]] -> [[b, b], [b, a]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, a], [a, b]] -> [[b, b], [b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] -> [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] -> [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] -> [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] -> [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [b, a], [b, b], [a, b]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [b, b], [a, b]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [b, a], [b, b], [b, b]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [b, b], [b, b]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, a]] -> [ [b, a] , [b, b] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [b, a]] -> [ [b, a] , [b, b] , [b, b] , [b, b] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[a, b], [b, a]] -> [ [b, b] , [b, b] , [b, b] , [b, b] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a], [a, a]] -> [ [b, a] , [a, b] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[a, b], [a, a]] -> [ [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[a, a], [b, a]] -> [ [b, a] , [b, b] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[a, b], [b, a]] -> [ [b, b] , [b, b] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) ] -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) ] -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 4A 4A 6A - \
        | 4A 4A 6A - |
        | 4A 4A 6A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 2A 2A 3A - \
        | 2A 2A 3A - |
        | 2A 2A 3A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([b, a]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([a, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,2)\TileAllAll{2}\Mirror(16,4)\Deepee\EDG(56/16,8)\Matrix{\Arctic}{3}(3/16,6)\Weight\EDG(1/16,5)\Usable(1,4)\Weight(0,0)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 9602 length 53661

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.197308114000
  min duration 0.066171954000
  total durat. 6.486254288000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 91
    , parent = Nothing
    , duration = 2.062942112000
    , status = Fail
    , start = 2025-09-03 13:50:28.9854922 UTC
    , finish = 2025-09-03 13:50:31.048434312 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 92
    , parent = Nothing
    , duration = 2.197308114000
    , status = Fail
    , start = 2025-09-03 13:50:28.947055985 UTC
    , finish = 2025-09-03 13:50:31.144364099 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.908603417000
  min duration 0.041270151000
  total durat. 5.454972653000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 81
    , parent = Nothing
    , duration = 1.423107251000
    , status = Fail
    , start = 2025-09-03 13:50:28.986585805 UTC
    , finish = 2025-09-03 13:50:30.409693056 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 90
    , parent = Nothing
    , duration = 1.908603417000
    , status = Fail
    , start = 2025-09-03 13:50:28.980200679 UTC
    , finish = 2025-09-03 13:50:30.888804096 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.082491067000
  min duration 1.082491067000
  total durat. 1.082491067000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 3
      , total_length = 55}
    , self = 80
    , parent = Nothing
    , duration = 1.082491067000
    , status = Fail
    , start = 2025-09-03 13:50:29.266615585 UTC
    , finish = 2025-09-03 13:50:30.349106652 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 6
  max duration 2.312211164000
  min duration 0.295503318000
  total durat. 6.823792971000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 63}
    , self = 84
    , parent = Nothing
    , duration = 1.006382046000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:50:29.586603624 UTC
    , finish = 2025-09-03 13:50:30.59298567 UTC
    , thread_cap_info = ("ThreadId 139", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 61}
    , self = 105
    , parent = Nothing
    , duration = 1.291088208000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:50:31.386857601 UTC
    , finish = 2025-09-03 13:50:32.677945809 UTC
    , thread_cap_info = ("ThreadId 164", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 98
    , parent = Nothing
    , duration = 1.539502596000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:50:31.067138211 UTC
    , finish = 2025-09-03 13:50:32.606640807 UTC
    , thread_cap_info = ("ThreadId 160", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 115
    , parent = Nothing
    , duration = 2.312211164000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:50:31.147388467 UTC
    , finish = 2025-09-03 13:50:33.459599631 UTC
    , thread_cap_info = ("ThreadId 161", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.415912638000
  min duration 1.415912638000
  total durat. 1.415912638000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 3
      , total_length = 55}
    , self = 89
    , parent = Nothing
    , duration = 1.415912638000
    , status = Fail
    , start = 2025-09-03 13:50:29.471253736 UTC
    , finish = 2025-09-03 13:50:30.887166374 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.338598314000
  min duration 0.204548374000
  total durat. 7.370743893000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 63}
    , self = 82
    , parent = Nothing
    , duration = 1.001821853000
    , status = Success
    , start = 2025-09-03 13:50:29.446754114 UTC
    , finish = 2025-09-03 13:50:30.448575967 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 61}
    , self = 100
    , parent = Nothing
    , duration = 1.404238819000
    , status = Success
    , start = 2025-09-03 13:50:31.247028442 UTC
    , finish = 2025-09-03 13:50:32.651267261 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 96
    , parent = Nothing
    , duration = 2.133914768000
    , status = Success
    , start = 2025-09-03 13:50:30.426612326 UTC
    , finish = 2025-09-03 13:50:32.560527094 UTC
    , thread_cap_info = ("ThreadId 148", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 111
    , parent = Nothing
    , duration = 2.338598314000
    , status = Success
    , start = 2025-09-03 13:50:30.907207883 UTC
    , finish = 2025-09-03 13:50:33.245806197 UTC
    , thread_cap_info = ("ThreadId 157", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.870277189000
  min duration 1.870277189000
  total durat. 1.870277189000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 3
      , total_length = 55}
    , self = 95
    , parent = Nothing
    , duration = 1.870277189000
    , status = Fail
    , start = 2025-09-03 13:50:30.377779787 UTC
    , finish = 2025-09-03 13:50:32.248056976 UTC
    , thread_cap_info = ("ThreadId 146", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.400673438000
  min duration 4.400673438000
  total durat. 4.400673438000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 110
    , parent = Nothing
    , duration = 4.400673438000
    , status = Fail
    , start = 2025-09-03 13:50:28.575128789 UTC
    , finish = 2025-09-03 13:50:32.975802227 UTC
    , thread_cap_info = ("ThreadId 32", 1, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                  = 22} , self = 44 , parent = Nothing , duration = 0.291614421000 , status
F                  = Fail , start = 2025-09-03 13:50:28.575124924 UTC , finish = 2025-09-03
F                  13:50:28.866739345 UTC , thread_cap_info = ("ThreadId 31", 1, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                = 22} , self = 110 , parent = Nothing , duration = 4.400673438000 , status
| F                = Fail , start = 2025-09-03 13:50:28.575128789 UTC , finish = 2025-09-03
| F                13:50:32.975802227 UTC , thread_cap_info = ("ThreadId 32", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F              = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F              = 120} , self = 48 , parent = Nothing , duration = 0.332348559000 , status
| | F              = Fail , start = 2025-09-03 13:50:28.57644474 UTC , finish = 2025-09-03
| | F              13:50:28.908793299 UTC , thread_cap_info = ("ThreadId 62", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F            = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F            = 120} , self = 43 , parent = Nothing , duration = 0.214855616000 , status
| | | F            = Fail , start = 2025-09-03 13:50:28.576451767 UTC , finish = 2025-09-03
| | | F            13:50:28.791307383 UTC , thread_cap_info = ("ThreadId 64", 2, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | F          = 11 , num_top_rules = 11 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F          = 114} , self = 46 , parent = Nothing , duration = 0.302112481000 , status
| | | | F          = Fail , start = 2025-09-03 13:50:28.586307618 UTC , finish = 2025-09-03
| | | | F          13:50:28.888420099 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F        = 11 , num_top_rules = 11 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | F        = 114} , self = 45 , parent = Nothing , duration = 0.284941513000 , status
| | | | | F        = Fail , start = 2025-09-03 13:50:28.586312399 UTC , finish = 2025-09-03
| | | | | F        13:50:28.871253912 UTC , thread_cap_info = ("ThreadId 72", 0, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 3 , total_length
| | | | | | F      = 61} , self = 39 , parent = Nothing , duration = 0.106418238000 , status
| | | | | | F      = Fail , start = 2025-09-03 13:50:28.626669254 UTC , finish = 2025-09-03
| | | | | | F      13:50:28.733087492 UTC , thread_cap_info = ("ThreadId 74", 0, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 3 , total_length
| | | | | | | F    = 61} , self = 41 , parent = Nothing , duration = 0.126993355000 , status
| | | | | | | F    = Fail , start = 2025-09-03 13:50:28.646595977 UTC , finish = 2025-09-03
| | | | | | | F    13:50:28.773589332 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
| | | | | | | F    
| | | | | | F |    
| | | | | |   F    
| | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S      = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | S      = 3 , total_length = 61} , self = 61 , parent = Nothing , duration = 0.204548374000
| | | | | | S      , status = Success , start = 2025-09-03 13:50:28.78308898 UTC , finish
| | | | | | S      = 2025-09-03 13:50:28.987637354 UTC , thread_cap_info = ("ThreadId 87",
| | | | | | S      0, False)}
| | | | | | S      
| | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | E    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | E    = 3 , total_length = 61} , self = 63 , parent = Nothing , duration = 0.379105639000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 13:50:28.788423835
| | | | | | | E    UTC , finish = 2025-09-03 13:50:29.167529474 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    90", 0, False)}
| | | | | | | E    
| | | F | | | |    
F | |   | | | |    
  | |   | F | |    
  | |   F   | |    
S | |       | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | |       | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | |       | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | |       | |    = 16 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 5
S | |       | |    , alphabet_size = 4 , total_length = 114} , self = 65 , parent = Nothing
S | |       | |    , duration = 0.287621765000 , status = Success , start = 2025-09-03 13:50:28.891985754
S | |       | |    UTC , finish = 2025-09-03 13:50:29.179607519 UTC , thread_cap_info = ("ThreadId
S | |       | |    95", 0, False)}
S | |       | |    
| | | E     | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E     | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E     | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E     | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | E     | |    , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 5 , alphabet_size
| | | E     | |    = 4 , total_length = 114} , self = 70 , parent = Nothing , duration = 0.295503318000
| | | E     | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:50:28.90678564
| | | E     | |    UTC , finish = 2025-09-03 13:50:29.202288958 UTC , thread_cap_info = ("ThreadId
| | | E     | |    103", 0, False)}
| | | E     | |    
| | F |     | |    
| | F |     | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | F |     | |    = 56 , num_top_rules = 56 , num_weak_rules = 16 , alphabet_size = 8 , total_length
| | F |     | |    = 606} , self = 92 , parent = Nothing , duration = 2.197308114000 , status
| | F |     | |    = Fail , start = 2025-09-03 13:50:28.947055985 UTC , finish = 2025-09-03
| | F |     | |    13:50:31.144364099 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| | F |     | |    
| | | | F   | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | F   | |    = 56 , num_top_rules = 56 , num_weak_rules = 16 , alphabet_size = 8 , total_length
| | | | F   | |    = 606} , self = 90 , parent = Nothing , duration = 1.908603417000 , status
| | | | F   | |    = Fail , start = 2025-09-03 13:50:28.980200679 UTC , finish = 2025-09-03
| | | | F   | |    13:50:30.888804096 UTC , thread_cap_info = ("ThreadId 110", 1, False)}
| | | | F   | |    
| | | | | F | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | F | |    = 44 , num_top_rules = 44 , num_weak_rules = 16 , alphabet_size = 7 , total_length
| | | | | F | |    = 494} , self = 91 , parent = Nothing , duration = 2.062942112000 , status
| | | | | F | |    = Fail , start = 2025-09-03 13:50:28.9854922 UTC , finish = 2025-09-03
| | | | | F | |    13:50:31.048434312 UTC , thread_cap_info = ("ThreadId 114", 2, False)}
| | | | | F | |    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | F  = 44 , num_top_rules = 44 , num_weak_rules = 16 , alphabet_size = 7 , total_length
| | | | | | | | F  = 494} , self = 81 , parent = Nothing , duration = 1.423107251000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 13:50:28.986585805 UTC , finish = 2025-09-03
| | | | | | | | F  13:50:30.409693056 UTC , thread_cap_info = ("ThreadId 115", 2, False)}
| | | | | | | | F  
| | | | | | S | |  
| | | | | |   E |  
S | | | | |     |  
  | | E | |     |  
F | |   | |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |   | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |   | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |   | |     |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F | |   | |     |  = 3 , total_length = 55} , self = 78 , parent = Nothing , duration = 0.200504635000
F | |   | |     |  , status = Fail , start = 2025-09-03 13:50:29.227974268 UTC , finish =
F | |   | |     |  2025-09-03 13:50:29.428478903 UTC , thread_cap_info = ("ThreadId 128",
F | |   | |     |  0, False)}
F | |   | |     |  
| | | F | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F | |     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F | |     |  = 3 , total_length = 55} , self = 80 , parent = Nothing , duration = 1.082491067000
| | | F | |     |  , status = Fail , start = 2025-09-03 13:50:29.266615585 UTC , finish =
| | | F | |     |  2025-09-03 13:50:30.349106652 UTC , thread_cap_info = ("ThreadId 130",
| | | F | |     |  0, False)}
| | | F | |     |  
| | | | | | F   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | F   |  = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F   |  = 63} , self = 79 , parent = Nothing , duration = 0.235445135000 , status
| | | | | | F   |  = Fail , start = 2025-09-03 13:50:29.323242472 UTC , finish = 2025-09-03
| | | | | | F   |  13:50:29.558687607 UTC , thread_cap_info = ("ThreadId 134", 0, False)}
| | | | | | F   |  
F | | | | | |   |  
S | | | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | |   |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
S | | | | | |   |  alphabet_size = 4 , total_length = 63} , self = 82 , parent = Nothing ,
S | | | | | |   |  duration = 1.001821853000 , status = Success , start = 2025-09-03 13:50:29.446754114
S | | | | | |   |  UTC , finish = 2025-09-03 13:50:30.448575967 UTC , thread_cap_info = ("ThreadId
S | | | | | |   |  136", 0, False)}
S | | | | | |   |  
| | | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | F |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | F |  = 3 , total_length = 55} , self = 89 , parent = Nothing , duration = 1.415912638000
| | | | | | | F |  , status = Fail , start = 2025-09-03 13:50:29.471253736 UTC , finish =
| | | | | | | F |  2025-09-03 13:50:30.887166374 UTC , thread_cap_info = ("ThreadId 137",
| | | | | | | F |  0, False)}
| | | | | | | F |  
| | | | | | F | |  
| | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | E | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | E | |  = 4 , total_length = 63} , self = 84 , parent = Nothing , duration = 1.006382046000
| | | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:50:29.586603624
| | | | | | E | |  UTC , finish = 2025-09-03 13:50:30.59298567 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |  139", 0, False)}
| | | | | | E | |  
| | | F | | | | |  
| | | F | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F | | | | |  = 3 , total_length = 55} , self = 95 , parent = Nothing , duration = 1.870277189000
| | | F | | | | |  , status = Fail , start = 2025-09-03 13:50:30.377779787 UTC , finish =
| | | F | | | | |  2025-09-03 13:50:32.248056976 UTC , thread_cap_info = ("ThreadId 146",
| | | F | | | | |  0, False)}
| | | F | | | | |  
| | | | | | | | F  
| | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S  = 60 , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 16
| | | | | | | | S  , alphabet_size = 7 , total_length = 494} , self = 96 , parent = Nothing
| | | | | | | | S  , duration = 2.133914768000 , status = Success , start = 2025-09-03 13:50:30.426612326
| | | | | | | | S  UTC , finish = 2025-09-03 13:50:32.560527094 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S  148", 2, False)}
| | | | | | | | S  
S | | | | | | | |  
  | | | | | E | |  
F | | | | |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F | | | | |   | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F | | | | |   | |  = 61} , self = 93 , parent = Nothing , duration = 0.633981700000 , status
F | | | | |   | |  = Fail , start = 2025-09-03 13:50:30.594503219 UTC , finish = 2025-09-03
F | | | | |   | |  13:50:31.228484919 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
F | | | | |   | |  
| | | | | | F | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F | |  = 61} , self = 94 , parent = Nothing , duration = 0.760075173000 , status
| | | | | | F | |  = Fail , start = 2025-09-03 13:50:30.607020178 UTC , finish = 2025-09-03
| | | | | | F | |  13:50:31.367095351 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
| | | | | | F | |  
| | | | | | | F |  
| | | | F | |   |  
| | | | S | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |   |  = 72 , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 16
| | | | S | |   |  , alphabet_size = 8 , total_length = 606} , self = 111 , parent = Nothing
| | | | S | |   |  , duration = 2.338598314000 , status = Success , start = 2025-09-03 13:50:30.907207883
| | | | S | |   |  UTC , finish = 2025-09-03 13:50:33.245806197 UTC , thread_cap_info = ("ThreadId
| | | | S | |   |  157", 1, False)}
| | | | S | |   |  
| | | | | F |   |  
| | | | | E |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | | | E |   |  , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 16 , alphabet_size
| | | | | E |   |  = 7 , total_length = 494} , self = 98 , parent = Nothing , duration = 1.539502596000
| | | | | E |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:50:31.067138211
| | | | | E |   |  UTC , finish = 2025-09-03 13:50:32.606640807 UTC , thread_cap_info = ("ThreadId
| | | | | E |   |  160", 2, False)}
| | | | | E |   |  
| | F | | | |   |  
| | E | | | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 72
| | E | | | |   |  , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 16 , alphabet_size
| | E | | | |   |  = 8 , total_length = 606} , self = 115 , parent = Nothing , duration =
| | E | | | |   |  2.312211164000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | | |   |  13:50:31.147388467 UTC , finish = 2025-09-03 13:50:33.459599631 UTC , thread_cap_info
| | E | | | |   |  = ("ThreadId 161", 1, False)}
| | E | | | |   |  
F | | | | | |   |  
S | | | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | |   |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
S | | | | | |   |  = 4 , total_length = 61} , self = 100 , parent = Nothing , duration = 1.404238819000
S | | | | | |   |  , status = Success , start = 2025-09-03 13:50:31.247028442 UTC , finish
S | | | | | |   |  = 2025-09-03 13:50:32.651267261 UTC , thread_cap_info = ("ThreadId 163",
S | | | | | |   |  0, False)}
S | | | | | |   |  
| | | | | | F   |  
| | | | | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | E   |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | E   |  = 4 , total_length = 61} , self = 105 , parent = Nothing , duration = 1.291088208000
| | | | | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:50:31.386857601
| | | | | | E   |  UTC , finish = 2025-09-03 13:50:32.677945809 UTC , thread_cap_info = ("ThreadId
| | | | | | E   |  164", 0, False)}
| | | | | | E   |  
| | | F | | |   |  
| | |   | | |   S  
| | |   | E |      
S | |   |   |      
  | |   |   E      
F | |   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |   |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | |   |          = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F | |   |          = 49} , self = 112 , parent = Nothing , duration = 0.581714742000 , status
F | |   |          = Fail , start = 2025-09-03 13:50:32.680158418 UTC , finish = 2025-09-03
F | |   |          13:50:33.26187316 UTC , thread_cap_info = ("ThreadId 182", 0, False)}
F | |   |          
| | | F |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F |          = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F |          = 49} , self = 114 , parent = Nothing , duration = 0.585774515000 , status
| | | F |          = Fail , start = 2025-09-03 13:50:32.690892806 UTC , finish = 2025-09-03
| | | F |          13:50:33.276667321 UTC , thread_cap_info = ("ThreadId 183", 0, False)}
| | | F |          
| F | | |          
|   | | S          
F   | |            
    | F            
    E              
