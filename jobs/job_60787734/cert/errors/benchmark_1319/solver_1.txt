last 1698 length 7121
CNF 1698 vars 7121 clauses
last 1603 length 6734
last 735 length 3042
last 2068 length 9213
CNF 1603 vars 6734 clauses
CNF 2068 vars 9213 clauses
CNF 735 vars 3042 clauses
last 1325 length 5530
CNF 1325 vars 5530 clauses
last 2403 length 11773
last 1244 length 5054
CNF 2403 vars 11773 clauses
last 678 length 2946
CNF 678 vars 2946 clauses
CNF 1244 vars 5054 clauses
last 532 length 2157
last 630 length 2506
CNF 532 vars 2157 clauses
CNF 630 vars 2506 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5683, clauses: 20320
last 5683 length 20320
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2477, clauses: 8940
last 2477 length 8940
CNF 5683 vars 20320 clauses
CNF 2477 vars 8940 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6516, clauses: 23441
last 6516 length 23441
CNF 6516 vars 23441 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5683, clauses: 20320, status: Satisfied, time: 0.174927944s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2477, clauses: 8940, status: Satisfied, time: 0.19323825s
last 1543 length 6433
last 1513 length 6282
CNF 1543 vars 6433 clauses
CNF 1513 vars 6282 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2510, clauses: 9015
last 2510 length 9015
CNF 2510 vars 9015 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2510, clauses: 9015, status: Satisfied, time: 0.133097296s
last 584 length 2433
last 580 length 2529
CNF 584 vars 2433 clauses
CNF 580 vars 2529 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23063, clauses: 96123
last 23063 length 96123
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5397, clauses: 19235
last 5397 length 19235
last 534 length 2171
last 502 length 2058
CNF 5397 vars 19235 clauses
CNF 23063 vars 96123 clauses
CNF 534 vars 2171 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6516, clauses: 23441, status: Satisfied, time: 0.770866569s
CNF 502 vars 2058 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2055, clauses: 7262
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6415, clauses: 26503
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20006, clauses: 83220
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2181, clauses: 7715
last 2055 length 7262
last 1560 length 6315
last 1658 length 6914
last 6415 length 26503
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6711, clauses: 27775
last 20006 length 83220
last 2181 length 7715
CNF 2055 vars 7262 clauses
CNF 1560 vars 6315 clauses
CNF 1658 vars 6914 clauses
last 6711 length 27775
CNF 6415 vars 26503 clauses
CNF 2181 vars 7715 clauses
CNF 20006 vars 83220 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2055, clauses: 7262, status: Unsatisfied, time: 0.387423946s
CNF 6711 vars 27775 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6122, clauses: 21882
last 6122 length 21882
CNF 6122 vars 21882 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2181, clauses: 7715, status: Unsatisfied, time: 0.494893124s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6122, clauses: 21882, status: Satisfied, time: 0.280043664s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4148, clauses: 16681
last 4148 length 16681
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3968, clauses: 15833
last 3968 length 15833
CNF 4148 vars 16681 clauses
CNF 3968 vars 15833 clauses
last 1699 length 7180
CNF 1699 vars 7180 clauses
last 1511 length 6167
CNF 1511 vars 6167 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6415, clauses: 26503, status: Unsatisfied, time: 1.156838899s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6711, clauses: 27775, status: Unsatisfied, time: 1.067167646s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5911, clauses: 21061
last 5911 length 21061
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4148, clauses: 16681, status: Unsatisfied, time: 0.609795593s
CNF 5911 vars 21061 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3968, clauses: 15833, status: Unsatisfied, time: 0.625088957s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20006, clauses: 83220, status: Satisfied, time: 1.973985534s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3352, clauses: 12388
last 3352 length 12388
CNF 3352 vars 12388 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3556, clauses: 13256
last 3556 length 13256
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3352, clauses: 12388, status: Unsatisfied, time: 0.163630493s
CNF 3556 vars 13256 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       weights
SRS with 13 rules on 9 letters       mirror
SRS with 13 rules on 9 letters       DP
SRS with 28 strict rules and 13 weak rules on 15 letters       weights
SRS with 4 strict rules and 13 weak rules on 11 letters       EDG
SRS with 3 strict rules and 13 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 13 weak rules on 11 letters       EDG
SRS with 2 strict rules and 13 weak rules on 11 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 13 weak rules on 11 letters       weights
SRS with 0 strict rules and 13 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [b, a, b] -> [] {- Input 1 -}
  [c, c] -> [a, a, a, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, b], [b, c], [c, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b], [b, c], [c, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, b], [b, c], [c, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, b], [b, c], [c, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b], [b, c], [c, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, b], [b, c], [c, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, b], [b, c], [c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b], [b, c], [c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, b], [b, c], [c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, b], [b, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b], [b, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, b], [b, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, c], [c, a]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, c], [c, b]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, c], [c, c]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, c], [c, a]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, c], [c, b]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, c], [c, c]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, c], [c, a]] -> [ [c, a] , [a, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, c], [c, c], [c, b]] -> [ [c, a] , [a, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, c], [c, c]] -> [ [c, a] , [a, a] , [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 1/2)
  ([a, b], 0/1)
  ([a, c], 1/1)
  ([b, a], 1/2)
  ([b, b], 0/1)
  ([b, c], 1/2)
  ([c, a], 1/2)
  ([c, b], 0/1)
  ([c, c], 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, b], [b, c], [c, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b], [b, c], [c, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, b], [b, c], [c, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, b], [b, c], [c, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b], [b, c], [c, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, b], [b, c], [c, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, b], [b, c], [c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b], [b, c], [c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, b], [b, c], [c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, b], [b, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[b, c], [c, c], [c, a]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, c], [c, b]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [ [c, a] , [b, c] , [a, b] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [ [c, b] , [b, c] , [a, b] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [ [c, c] , [b, c] , [a, b] ] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [ [c, a] , [b, c] , [b, b] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [ [c, b] , [b, c] , [b, b] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [ [c, c] , [b, c] , [b, b] ] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [ [c, a] , [b, c] , [c, b] ] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [ [c, b] , [b, c] , [c, b] ] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [ [c, c] , [b, c] , [c, b] ] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, c], [a, b], [b, a], [a, b]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, c], [a, b], [b, a], [c, b]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a], [c, c], [b, c]] -> [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [b, c]] -> [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [c, a]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [c, a]# , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, a]#, [c, a]] |-> [ [c, a]# , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, a]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [b, a], [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 7/2)
  ([a, b], 0/1)
  ([a, c], 7/1)
  ([b, a], 7/2)
  ([b, b], 0/1)
  ([b, c], 7/2)
  ([c, a], 7/2)
  ([c, b], 0/1)
  ([c, c], 7/1)
  ([a, a]#, 6/1)
  ([a, b]#, 4/1)
  ([a, c]#, 3/1)
  ([b, c]#, 2/1)
  ([c, a]#, 5/1)
  ([c, b]#, 4/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [c, b]# , [b, c] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, b]#, [c, a]] |-> [ [c, b]# , [b, c] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 6A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 6A 9A 9A - \
        | 6A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 15A 15A 15A - \
        | 12A 15A 15A - |
        | 12A 15A 15A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 3A 3A 6A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 12A 12A 15A - \
        | 9A  12A 12A - |
        | 9A  12A 12A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 9A 11A 11A - \
        | 9A 11A 11A - |
        | 9A 11A 11A - |
        \ -  -   -   - / )
  ( [c, b]#
  , Wk  / 6A 7A 9A - \
        | 6A 7A 9A - |
        | 6A 7A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / -1A 0A  0A \
        | 0A  -1A -  |
        \ -   -   0A / )
  ( [a, b]
  , Wk  / 0A  -2A -1A \
        | -1A 0A  0A  |
        \ -   -   0A  / )
  ( [a, c]
  , Wk  / -1A -   0A \
        | -1A -1A 1A |
        \ -   -   0A / )
  ( [b, a]
  , Wk  / -1A -  0A \
        | 0A  0A 2A |
        \ -   -  0A / )
  ( [b, b]
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( [b, c]
  , Wk  / 0A -2A 0A \
        | -  -1A -  |
        \ -  -   0A / )
  ( [c, a]
  , Wk  / 0A  -1A 0A \
        | -1A 1A  -  |
        \ -   -   0A / )
  ( [c, b]
  , Wk  / -  1A 0A \
        | 0A -  -  |
        \ -  -  0A / )
  ( [c, c]
  , Wk  / -   0A 0A \
        | -1A 0A 1A |
        \ -   -  0A / )
  ( [a, b]#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
  ( [c, b]#
  , Wk  / - 0A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [c, b]# , [b, c] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 1/1)
  ([c, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [b, a], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [b, a], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Weight\Mirror(13,9)\Deepee(28/13,15)\Weight(4/13,11)\EDG(3/13,11)\Matrix{\Arctic}{3}\EDG(2/13,11)\Matrix{\ArcticBZ}{3}(1/13,11)\Weight(0/13,9)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3556, clauses: 13256, status: Unsatisfied, time: 0.368361757s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21515, clauses: 89591
last 21515 length 89591
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.456956407000
  min duration 0.082193403000
  total durat. 2.004698866000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.501868831000
  min duration 0.072178726000
  total durat. 1.922548602000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.113105478000
  min duration 3.113105478000
  total durat. 3.113105478000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 11
      , total_length = 83}
    , self = 116
    , parent = Nothing
    , duration = 3.113105478000
    , status = Success
    , start = 2025-09-03 11:32:08.686159697 UTC
    , finish = 2025-09-03 11:32:11.799265175 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.624252979000
  min duration 1.303367480000
  total durat. 2.927620459000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 32}
    , self = 113
    , parent = Nothing
    , duration = 1.303367480000
    , status = Fail
    , start = 2025-09-03 11:32:09.568156983 UTC
    , finish = 2025-09-03 11:32:10.871524463 UTC
    , thread_cap_info = ("ThreadId 162", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 32}
    , self = 112
    , parent = Nothing
    , duration = 1.624252979000
    , status = Fail
    , start = 2025-09-03 11:32:09.210565453 UTC
    , finish = 2025-09-03 11:32:10.834818432 UTC
    , thread_cap_info = ("ThreadId 153", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.323682478000
  min duration 0.360539668000
  total durat. 3.212898685000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 13
      , alphabet_size = 11
      , total_length = 99}
    , self = 93
    , parent = Nothing
    , duration = 1.323682478000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:32:08.187498462 UTC
    , finish = 2025-09-03 11:32:09.51118094 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.443897531000
  min duration 0.913593340000
  total durat. 2.357490871000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 32}
    , self = 115
    , parent = Nothing
    , duration = 1.443897531000
    , status = Fail
    , start = 2025-09-03 11:32:10.222450016 UTC
    , finish = 2025-09-03 11:32:11.666347547 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.337855744000
  min duration 0.325698813000
  total durat. 3.037361665000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 13
      , alphabet_size = 11
      , total_length = 99}
    , self = 91
    , parent = Nothing
    , duration = 1.337855744000
    , status = Success
    , start = 2025-09-03 11:32:08.160425575 UTC
    , finish = 2025-09-03 11:32:09.498281319 UTC
    , thread_cap_info = ("ThreadId 105", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.247226797000
  min duration 0.856962946000
  total durat. 5.240840612000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 32}
    , self = 101
    , parent = Nothing
    , duration = 1.136650869000
    , status = Fail
    , start = 2025-09-03 11:32:09.070513117 UTC
    , finish = 2025-09-03 11:32:10.207163986 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 11
      , total_length = 83}
    , self = 118
    , parent = Nothing
    , duration = 3.247226797000
    , status = Fail
    , start = 2025-09-03 11:32:08.686149384 UTC
    , finish = 2025-09-03 11:32:11.933376181 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.146033291000
  min duration 1.146033291000
  total durat. 1.146033291000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 32}
    , self = 121
    , parent = Nothing
    , duration = 1.146033291000
    , status = Fail
    , start = 2025-09-03 11:32:10.842797354 UTC
    , finish = 2025-09-03 11:32:11.988830645 UTC
    , thread_cap_info = ("ThreadId 187", 0, False)}
**************************************************
F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F                = 5 , num_top_rules = 5 , num_weak_rules = 13 , alphabet_size = 11 , total_length
F                = 99} , self = 59 , parent = Nothing , duration = 0.192253499000 , status
F                = Fail , start = 2025-09-03 11:32:07.98310649 UTC , finish = 2025-09-03
F                11:32:08.175359989 UTC , thread_cap_info = ("ThreadId 64", 3, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F              = 5 , num_top_rules = 5 , num_weak_rules = 13 , alphabet_size = 11 , total_length
| F              = 99} , self = 55 , parent = Nothing , duration = 0.172333873000 , status
| F              = Fail , start = 2025-09-03 11:32:07.988049682 UTC , finish = 2025-09-03
| F              11:32:08.160383555 UTC , thread_cap_info = ("ThreadId 63", 3, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F            = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size = 11 , total_length
| | F            = 88} , self = 52 , parent = Nothing , duration = 0.138948712000 , status
| | F            = Fail , start = 2025-09-03 11:32:07.991437569 UTC , finish = 2025-09-03
| | F            11:32:08.130386281 UTC , thread_cap_info = ("ThreadId 67", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | F          = 13 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F          = 71} , self = 60 , parent = Nothing , duration = 0.122093869000 , status
| | | F          = Fail , start = 2025-09-03 11:32:08.068000787 UTC , finish = 2025-09-03
| | | F          11:32:08.190094656 UTC , thread_cap_info = ("ThreadId 86", 1, False)}
| | | F          
| | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S        = 16 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 ,
| | | | S        alphabet_size = 11 , total_length = 88} , self = 65 , parent = Nothing
| | | | S        , duration = 0.403478058000 , status = Success , start = 2025-09-03 11:32:08.078739267
| | | | S        UTC , finish = 2025-09-03 11:32:08.482217325 UTC , thread_cap_info = ("ThreadId
| | | | S        93", 2, False)}
| | | | S        
| | F | |        
| | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | E | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size
| | E | |        = 11 , total_length = 88} , self = 67 , parent = Nothing , duration = 0.360539668000
| | E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:32:08.14750943
| | E | |        UTC , finish = 2025-09-03 11:32:08.508049098 UTC , thread_cap_info = ("ThreadId
| | E | |        101", 2, False)}
| | E | |        
| F | | |        
| S | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | |        = 18 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 13 ,
| S | | |        alphabet_size = 11 , total_length = 99} , self = 91 , parent = Nothing
| S | | |        , duration = 1.337855744000 , status = Success , start = 2025-09-03 11:32:08.160425575
| S | | |        UTC , finish = 2025-09-03 11:32:09.498281319 UTC , thread_cap_info = ("ThreadId
| S | | |        105", 3, False)}
| S | | |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F      = 39} , self = 64 , parent = Nothing , duration = 0.158605189000 , status
| | | | | F      = Fail , start = 2025-09-03 11:32:08.170897935 UTC , finish = 2025-09-03
| | | | | F      11:32:08.329503124 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | F    = 39} , self = 63 , parent = Nothing , duration = 0.140877053000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:32:08.170905454 UTC , finish = 2025-09-03
| | | | | | F    11:32:08.311782507 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| | | | | | F    
F | | | | | |    
E | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
E | | | | | |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 13 , alphabet_size
E | | | | | |    = 11 , total_length = 99} , self = 93 , parent = Nothing , duration = 1.323682478000
E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:32:08.187498462
E | | | | | |    UTC , finish = 2025-09-03 11:32:09.51118094 UTC , thread_cap_info = ("ThreadId
E | | | | | |    111", 3, False)}
E | | | | | |    
| | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | S  = 5 , total_length = 41} , self = 72 , parent = Nothing , duration = 0.325698813000
| | | | | | | S  , status = Success , start = 2025-09-03 11:32:08.187505443 UTC , finish
| | | | | | | S  = 2025-09-03 11:32:08.513204256 UTC , thread_cap_info = ("ThreadId 110",
| | | | | | | S  0, False)}
| | | | | | | S  
| | | F | | | |  
| | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | E | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | E | | | |  = 5 , total_length = 41} , self = 76 , parent = Nothing , duration = 0.499604950000
| | | E | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:32:08.26785886
| | | E | | | |  UTC , finish = 2025-09-03 11:32:08.76746381 UTC , thread_cap_info = ("ThreadId
| | | E | | | |  117", 0, False)}
| | | E | | | |  
| | | | | | F |  
| | | | | F   |  
| | | | | S   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | S   |  = 5 , total_length = 39} , self = 77 , parent = Nothing , duration = 0.444341215000
| | | | | S   |  , status = Success , start = 2025-09-03 11:32:08.39490167 UTC , finish
| | | | | S   |  = 2025-09-03 11:32:08.839242885 UTC , thread_cap_info = ("ThreadId 121",
| | | | | S   |  0, False)}
| | | | | S   |  
| | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | E |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | E |  = 5 , total_length = 39} , self = 82 , parent = Nothing , duration = 0.455007081000
| | | | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:32:08.454877593
| | | | | | E |  UTC , finish = 2025-09-03 11:32:08.909884674 UTC , thread_cap_info = ("ThreadId
| | | | | | E |  122", 0, False)}
| | | | | | E |  
| | | | S | | |  
| | E |   | | |  
| | F |   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F |   | | |  = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 11 , total_length
| | F |   | | |  = 83} , self = 74 , parent = Nothing , duration = 0.172687559000 , status
| | F |   | | |  = Fail , start = 2025-09-03 11:32:08.5092629 UTC , finish = 2025-09-03
| | F |   | | |  11:32:08.681950459 UTC , thread_cap_info = ("ThreadId 129", 2, False)}
| | F |   | | |  
| | | |   | | S  
| | | | F | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | F | |    = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 11 , total_length
| | | | F | |    = 83} , self = 75 , parent = Nothing , duration = 0.157601553000 , status
| | | | F | |    = Fail , start = 2025-09-03 11:32:08.528512441 UTC , finish = 2025-09-03
| | | | F | |    11:32:08.686113994 UTC , thread_cap_info = ("ThreadId 128", 2, False)}
| | | | F | |    
| | F | | | |    
| |   | F | |    
| | F |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   | |    = 15 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 ,
| | F |   | |    alphabet_size = 11 , total_length = 83} , self = 118 , parent = Nothing
| | F |   | |    , duration = 3.247226797000 , status = Fail , start = 2025-09-03 11:32:08.686149384
| | F |   | |    UTC , finish = 2025-09-03 11:32:11.933376181 UTC , thread_cap_info = ("ThreadId
| | F |   | |    133", 2, False)}
| | F |   | |    
| | | | S | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | | | S | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size
| | | | S | |    = 11 , total_length = 83} , self = 116 , parent = Nothing , duration =
| | | | S | |    3.113105478000 , status = Success , start = 2025-09-03 11:32:08.686159697
| | | | S | |    UTC , finish = 2025-09-03 11:32:11.799265175 UTC , thread_cap_info = ("ThreadId
| | | | S | |    134", 2, False)}
| | | | S | |    
| | | E | | |    
| | |   | S |    
| | |   |   E    
| | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F |        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F |        = 32} , self = 89 , parent = Nothing , duration = 0.240216655000 , status
| | | F |        = Fail , start = 2025-09-03 11:32:08.94778885 UTC , finish = 2025-09-03
| | | F |        11:32:09.188005505 UTC , thread_cap_info = ("ThreadId 141", 0, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F      = 32} , self = 90 , parent = Nothing , duration = 0.369965976000 , status
| | | | | F      = Fail , start = 2025-09-03 11:32:09.047540903 UTC , finish = 2025-09-03
| | | | | F      11:32:09.417506879 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | F    = 32} , self = 98 , parent = Nothing , duration = 0.501868831000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:32:09.066181267 UTC , finish = 2025-09-03
| | | | | | F    11:32:09.568050098 UTC , thread_cap_info = ("ThreadId 149", 0, False)}
| | | | | | F    
| | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | F  = 5 , total_length = 32} , self = 101 , parent = Nothing , duration = 1.136650869000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:32:09.070513117 UTC , finish =
| | | | | | | F  2025-09-03 11:32:10.207163986 UTC , thread_cap_info = ("ThreadId 150",
| | | | | | | F  0, False)}
| | | | | | | F  
| | | F | | | |  
| | | F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F | | | |  = 5 , total_length = 32} , self = 112 , parent = Nothing , duration = 1.624252979000
| | | F | | | |  , status = Fail , start = 2025-09-03 11:32:09.210565453 UTC , finish =
| | | F | | | |  2025-09-03 11:32:10.834818432 UTC , thread_cap_info = ("ThreadId 153",
| | | F | | | |  0, False)}
| | | F | | | |  
| | | | | F | |  
| | | | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | F | |  = 5 , total_length = 32} , self = 102 , parent = Nothing , duration = 0.856962946000
| | | | | F | |  , status = Fail , start = 2025-09-03 11:32:09.427621289 UTC , finish =
| | | | | F | |  2025-09-03 11:32:10.284584235 UTC , thread_cap_info = ("ThreadId 155",
| | | | | F | |  0, False)}
| | | | | F | |  
| S | | | | | |  
E   | | | | | |  
F   | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
F   | | | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size = 11 , total_length
F   | | | | | |  = 91} , self = 99 , parent = Nothing , duration = 0.456956407000 , status
F   | | | | | |  = Fail , start = 2025-09-03 11:32:09.51263211 UTC , finish = 2025-09-03
F   | | | | | |  11:32:09.969588517 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
F   | | | | | |  
| F | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| F | | | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size = 11 , total_length
| F | | | | | |  = 91} , self = 100 , parent = Nothing , duration = 0.461463349000 , status
| F | | | | | |  = Fail , start = 2025-09-03 11:32:09.512634008 UTC , finish = 2025-09-03
| F | | | | | |  11:32:09.974097357 UTC , thread_cap_info = ("ThreadId 161", 3, False)}
| F | | | | | |  
| | | | | | F |  
| | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | F |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | F |  = 5 , total_length = 32} , self = 113 , parent = Nothing , duration = 1.303367480000
| | | | | | F |  , status = Fail , start = 2025-09-03 11:32:09.568156983 UTC , finish =
| | | | | | F |  2025-09-03 11:32:10.871524463 UTC , thread_cap_info = ("ThreadId 162",
| | | | | | F |  0, False)}
| | | | | | F |  
F | | | | | | |  
S | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | |  = 17 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 ,
S | | | | | | |  alphabet_size = 11 , total_length = 91} , self = 103 , parent = Nothing
S | | | | | | |  , duration = 0.525987835000 , status = Success , start = 2025-09-03 11:32:09.969643835
S | | | | | | |  UTC , finish = 2025-09-03 11:32:10.49563167 UTC , thread_cap_info = ("ThreadId
S | | | | | | |  169", 3, False)}
S | | | | | | |  
| F | | | | | |  
| E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| E | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size
| E | | | | | |  = 11 , total_length = 91} , self = 105 , parent = Nothing , duration =
| E | | | | | |  0.574064508000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | | | | | |  11:32:09.991818408 UTC , finish = 2025-09-03 11:32:10.565882916 UTC , thread_cap_info
| E | | | | | |  = ("ThreadId 170", 3, False)}
| E | | | | | |  
| | | | | | | F  
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | F  = 5 , total_length = 32} , self = 115 , parent = Nothing , duration = 1.443897531000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:32:10.222450016 UTC , finish =
| | | | | | | F  2025-09-03 11:32:11.666347547 UTC , thread_cap_info = ("ThreadId 173",
| | | | | | | F  0, False)}
| | | | | | | F  
| | | | | F | |  
| | | | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | F | |  = 5 , total_length = 32} , self = 114 , parent = Nothing , duration = 0.913593340000
| | | | | F | |  , status = Fail , start = 2025-09-03 11:32:10.290428843 UTC , finish =
| | | | | F | |  2025-09-03 11:32:11.204022183 UTC , thread_cap_info = ("ThreadId 174",
| | | | | F | |  0, False)}
| | | | | F | |  
S | | | | | | |  
  E | | | | | |  
F   | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F   | | | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size = 11 , total_length
F   | | | | | |  = 87} , self = 111 , parent = Nothing , duration = 0.127108468000 , status
F   | | | | | |  = Fail , start = 2025-09-03 11:32:10.616728168 UTC , finish = 2025-09-03
F   | | | | | |  11:32:10.743836636 UTC , thread_cap_info = ("ThreadId 182", 2, False)}
F   | | | | | |  
| F | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F | | | | | |  = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size = 11 , total_length
| F | | | | | |  = 87} , self = 110 , parent = Nothing , duration = 0.105783229000 , status
| F | | | | | |  = Fail , start = 2025-09-03 11:32:10.628848332 UTC , finish = 2025-09-03
| F | | | | | |  11:32:10.734631561 UTC , thread_cap_info = ("ThreadId 181", 2, False)}
| F | | | | | |  
| F | | | | | |  
F   | | | | | |  
    | F | | | |  
F   |   | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F   |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |   | | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F   |   | | | |  = 5 , total_length = 32} , self = 121 , parent = Nothing , duration = 1.146033291000
F   |   | | | |  , status = Fail , start = 2025-09-03 11:32:10.842797354 UTC , finish =
F   |   | | | |  2025-09-03 11:32:11.988830645 UTC , thread_cap_info = ("ThreadId 187",
F   |   | | | |  0, False)}
F   |   | | | |  
|   |   | | F |  
|   |   | F   |  
|   |   |     F  
|   |   S        
|   F            
F                
