last 635 length 2568
CNF 635 vars 2568 clauses
last 581 length 2475
CNF 581 vars 2475 clauses
last 719 length 2998
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2155, clauses: 7756
CNF 719 vars 2998 clauses
last 852 length 3439
last 2155 length 7756
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6165, clauses: 25395
CNF 852 vars 3439 clauses
CNF 2155 vars 7756 clauses
last 6165 length 25395
last 4258 length 19136
last 5346 length 26174
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2472, clauses: 9131
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6547, clauses: 26997
CNF 6165 vars 25395 clauses
CNF 4258 vars 19136 clauses
CNF 5346 vars 26174 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2155, clauses: 7756, status: Unsatisfied, time: 0.30009517s
last 10253 length 49638
last 2472 length 9131
last 11017 length 48241
last 6547 length 26997
last 11163 length 52474
last 15861 length 68445
CNF 2472 vars 9131 clauses
CNF 11017 vars 48241 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3865, clauses: 15227
CNF 10253 vars 49638 clauses
CNF 6547 vars 26997 clauses
CNF 11163 vars 52474 clauses
last 3865 length 15227
CNF 15861 vars 68445 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2472, clauses: 9131, status: Unsatisfied, time: 0.509552089s
CNF 3865 vars 15227 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4179, clauses: 16547
last 4179 length 16547
CNF 4179 vars 16547 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6165, clauses: 25395, status: Unsatisfied, time: 1.372587349s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3865, clauses: 15227, status: Unsatisfied, time: 0.735495689s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4179, clauses: 16547, status: Unsatisfied, time: 0.528515431s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16227, clauses: 63515
last 16227 length 63515
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3509, clauses: 13378
last 3509 length 13378
CNF 16227 vars 63515 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6547, clauses: 26997, status: Unsatisfied, time: 1.694114997s
CNF 3509 vars 13378 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4011, clauses: 15914
last 4011 length 15914
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10571, clauses: 42848
last 10571 length 42848
CNF 4011 vars 15914 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3509, clauses: 13378, status: Unsatisfied, time: 0.498982154s
CNF 10571 vars 42848 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4011, clauses: 15914, status: Unsatisfied, time: 0.737104698s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11107, clauses: 45249
last 11107 length 45249
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 48014, clauses: 201134
last 48014 length 201134
CNF 11107 vars 45249 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18345, clauses: 74657
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6545, clauses: 24664
last 18345 length 74657
last 6545 length 24664
CNF 6545 vars 24664 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7462, clauses: 29093
last 7462 length 29093
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16227, clauses: 63515, status: Satisfied, time: 1.970379251s
CNF 7462 vars 29093 clauses
CNF 18345 vars 74657 clauses
CNF 48014 vars 201134 clauses
last 5438 length 24520
last 6971 length 34198
CNF 5438 vars 24520 clauses
CNF 6971 vars 34198 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18345, clauses: 74657, status: Satisfied, time: 2.795140583s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10196, clauses: 37734
last 10196 length 37734
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6545, clauses: 24664, status: Unsatisfied, time: 3.128820182s
CNF 10196 vars 37734 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7462, clauses: 29093, status: Unsatisfied, time: 2.797136436s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10196, clauses: 37734, status: Satisfied, time: 0.505848412s
last 5300 length 23913
last 6694 length 33081
CNF 5300 vars 23913 clauses
CNF 6694 vars 33081 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12875, clauses: 59559
last 12875 length 59559
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13323, clauses: 61591
last 13323 length 61591
CNF 12875 vars 59559 clauses
CNF 13323 vars 61591 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12875, clauses: 59559, status: Satisfied, time: 0.299046572s
last 5356 length 24194
last 6868 length 33796
CNF 5356 vars 24194 clauses
CNF 6868 vars 33796 clauses
last 537 length 2208
last 589 length 2516
CNF 537 vars 2208 clauses
CNF 589 vars 2516 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9940, clauses: 36775
last 9940 length 36775
CNF 9940 vars 36775 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2049, clauses: 7295
last 2049 length 7295
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9892, clauses: 36565
last 9892 length 36565
CNF 2049 vars 7295 clauses
CNF 9892 vars 36565 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13323, clauses: 61591, status: Satisfied, time: 1.317663037s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2049, clauses: 7295, status: Unsatisfied, time: 0.490704221s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6119, clauses: 25219
last 6119 length 25219
CNF 6119 vars 25219 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 14941
last 3790 length 14941
CNF 3790 vars 14941 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9892, clauses: 36565, status: Satisfied, time: 0.772257012s
last 434 length 1763
CNF 434 vars 1763 clauses
last 447 length 1773
CNF 447 vars 1773 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5874
last 1652 length 5874
CNF 1652 vars 5874 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21271
last 5160 length 21271
last 5332 length 24102
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 5874, status: Unsatisfied, time: 0.446568435s
CNF 5332 vars 24102 clauses
CNF 5160 vars 21271 clauses
last 6837 length 33677
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9940, clauses: 36775, status: Satisfied, time: 1.738429771s
CNF 6837 vars 33677 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3194, clauses: 12660
last 3194 length 12660
CNF 3194 vars 12660 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6119, clauses: 25219, status: Unsatisfied, time: 1.199604333s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       mirror
SRS with 27 rules on 9 letters       DP
SRS with 61 strict rules and 27 weak rules on 15 letters       EDG
SRS with 55 strict rules and 27 weak rules on 15 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 17 strict rules and 27 weak rules on 15 letters       weights
SRS with 7 strict rules and 27 weak rules on 12 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 27 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 6 strict rules and 27 weak rules on 11 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 27 weak rules on 11 letters       weights
  SRS with 0 strict rules and 27 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [b, c] {- Input 1 -}
  [c, b, b] -> [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, a]] -> [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, b], [b, b], [b, a]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, c], [c, b], [b, b], [b, b]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c], [c, b], [b, b], [b, c]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, c], [c, b], [b, b], [b, a]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c], [c, b], [b, b], [b, b]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c], [c, b], [b, b], [b, c]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, c], [c, b], [b, b], [b, a]] -> [ [c, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, c], [c, b], [b, b], [b, b]] -> [ [c, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c], [c, b], [b, b], [b, c]] -> [ [c, a] , [a, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, a], [a, a], [a, a]] -> [ [c, a] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [a, a], [a, a]] -> [ [c, b] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [a, a]] -> [ [c, c] , [b, c] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[a, a], [a, a], [b, a]] -> [ [c, a] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b], [a, a], [b, a]] -> [ [c, b] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [b, a]] -> [ [c, c] , [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, a], [a, a], [c, a]] -> [ [c, a] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[a, b], [a, a], [c, a]] -> [ [c, b] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [c, a]] -> [ [c, c] , [b, c] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [b, b], [c, b], [a, c]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [c, b], [a, c]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [b, b], [c, b], [a, c]] -> [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b], [c, b], [b, c]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b], [c, b], [b, c]] -> [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [b, b], [c, b], [c, c]] -> [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [b, b], [c, b], [c, c]] -> [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [b, b], [c, b], [c, c]] -> [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [c, a]] |-> [ [b, c]# , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [a, a] , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [b, a]# , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 12A 13A 15A - \
        | 12A 13A 15A - |
        | 12A 13A 15A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 12A 13A 15A - \
        | 12A 13A 15A - |
        | 12A 13A 15A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [b, b], [c, b], [a, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [a, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [b, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [c, b], [c, c]] |-> [ [a, a]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [b, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [c, b], [c, c]] |-> [ [a, b]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([a, c]#, 0/1)
  ([b, a]#, 2/1)
  ([b, b]#, 2/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [b, b], [c, b], [a, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [a, a], [a, a]] |-> [ [b, c]# , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [b, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [c, b], [c, c]] |-> [ [a, c]# , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, c]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 14A 16A 16A - \
        | 14A 16A 16A - |
        | 14A 16A 16A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 16A 16A 17A - \
        | 16A 16A 17A - |
        | 16A 16A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a], [b, a]] |-> [ [b, c]# , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, c]#, 1/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a], [a, a]] ->= [ [c, a] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [a, a]] ->= [ [c, b] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [a, a]] ->= [ [c, c] , [b, c] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [b, a]] ->= [ [c, a] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [c, b] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [c, c] , [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[a, a], [a, a], [c, a]] ->= [ [c, a] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[a, b], [a, a], [c, a]] ->= [ [c, b] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [c, a]] ->= [ [c, c] , [b, c] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [c, b], [a, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [a, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [a, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [b, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [b, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [b, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [c, b], [c, c]] ->= [ [a, a] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b], [c, b], [c, c]] ->= [ [a, b] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b], [c, b], [c, c]] ->= [ [a, c] , [b, a] , [a, b] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}\Mirror(27,9)\Deepee(61/27,15)\EDG(55/27,15)\Matrix{\Arctic}{3}(17/27,15)\Weight(7/27,12)\EDG[(1/27,10)\Usable(1,2)\Weight(0,0)\EDG[],(6/27,11)\Matrix{\Arctic}{3}(1/27,11)\Weight(0/27,9)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3194, clauses: 12660, status: Unsatisfied, time: 0.281678634s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12568
last 3340 length 12568
CNF 3340 vars 12568 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5160, clauses: 21271, status: Unsatisfied, time: 0.59594733s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9693, clauses: 35828
last 9693 length 35828
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2701, clauses: 10185
last 2701 length 10185
CNF 2701 vars 10185 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 9693 vars 35828 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 1.691600182000
  min duration 0.038124121000
  total durat. 6.943907359000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 66
    , parent = Nothing
    , duration = 1.087734864000
    , status = Fail
    , start = 2025-09-03 11:49:41.037179965 UTC
    , finish = 2025-09-03 11:49:42.124914829 UTC
    , thread_cap_info = ("ThreadId 97", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 207}
    , self = 80
    , parent = Nothing
    , duration = 1.691600182000
    , status = Fail
    , start = 2025-09-03 11:49:45.560147605 UTC
    , finish = 2025-09-03 11:49:47.251747787 UTC
    , thread_cap_info = ("ThreadId 148", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 1.698972482000
  min duration 0.041320660000
  total durat. 7.215864754000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 101
    , parent = Nothing
    , duration = 1.034076841000
    , status = Fail
    , start = 2025-09-03 11:49:47.496028124 UTC
    , finish = 2025-09-03 11:49:48.530104965 UTC
    , thread_cap_info = ("ThreadId 160", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 34
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 207}
    , self = 83
    , parent = Nothing
    , duration = 1.698972482000
    , status = Fail
    , start = 2025-09-03 11:49:45.578096974 UTC
    , finish = 2025-09-03 11:49:47.277069456 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.941980434000
  min duration 1.446693312000
  total durat. 5.315480155000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 67
    , parent = Nothing
    , duration = 1.446693312000
    , status = Fail
    , start = 2025-09-03 11:49:41.070907188 UTC
    , finish = 2025-09-03 11:49:42.5176005 UTC
    , thread_cap_info = ("ThreadId 104", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 138
    , parent = Nothing
    , duration = 1.926806409000
    , status = Fail
    , start = 2025-09-03 11:49:49.338011606 UTC
    , finish = 2025-09-03 11:49:51.264818015 UTC
    , thread_cap_info = ("ThreadId 190", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 70
    , parent = Nothing
    , duration = 1.941980434000
    , status = Fail
    , start = 2025-09-03 11:49:41.172013456 UTC
    , finish = 2025-09-03 11:49:43.11399389 UTC
    , thread_cap_info = ("ThreadId 109", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 5.081859068000
  min duration 0.943446685000
  total durat. 13.268523258000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 123
    , parent = Nothing
    , duration = 1.201176640000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:49.141284395 UTC
    , finish = 2025-09-03 11:49:50.342461035 UTC
    , thread_cap_info = ("ThreadId 186", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 134
    , parent = Nothing
    , duration = 2.535506335000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:48.621631504 UTC
    , finish = 2025-09-03 11:49:51.157137839 UTC
    , thread_cap_info = ("ThreadId 174", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 390}
    , self = 75
    , parent = Nothing
    , duration = 3.506534530000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:41.937207455 UTC
    , finish = 2025-09-03 11:49:45.443741985 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 84
    , parent = Nothing
    , duration = 5.081859068000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:42.244882671 UTC
    , finish = 2025-09-03 11:49:47.326741739 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.097331618000
  min duration 1.099176203000
  total durat. 3.196507821000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 102
    , parent = Nothing
    , duration = 1.099176203000
    , status = Success
    , start = 2025-09-03 11:49:47.693935288 UTC
    , finish = 2025-09-03 11:49:48.793111491 UTC
    , thread_cap_info = ("ThreadId 162", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 113
    , parent = Nothing
    , duration = 2.097331618000
    , status = Success
    , start = 2025-09-03 11:49:47.817194112 UTC
    , finish = 2025-09-03 11:49:49.91452573 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.858569927000
  min duration 0.663235873000
  total durat. 1.521805800000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 6.836295882000
  min duration 6.227927778000
  total durat. 13.064223660000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 104
    , parent = Nothing
    , duration = 6.227927778000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:42.599889057 UTC
    , finish = 2025-09-03 11:49:48.827816835 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 116
    , parent = Nothing
    , duration = 6.836295882000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:43.223922998 UTC
    , finish = 2025-09-03 11:49:50.06021888 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 5.213037083000
  min duration 0.880275927000
  total durat. 13.363716985000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 120
    , parent = Nothing
    , duration = 1.276965816000
    , status = Success
    , start = 2025-09-03 11:49:49.026418817 UTC
    , finish = 2025-09-03 11:49:50.303384633 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 27
      , alphabet_size = 11
      , total_length = 202}
    , self = 132
    , parent = Nothing
    , duration = 2.511998084000
    , status = Success
    , start = 2025-09-03 11:49:48.541030749 UTC
    , finish = 2025-09-03 11:49:51.053028833 UTC
    , thread_cap_info = ("ThreadId 173", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 390}
    , self = 73
    , parent = Nothing
    , duration = 3.481440075000
    , status = Success
    , start = 2025-09-03 11:49:41.819641911 UTC
    , finish = 2025-09-03 11:49:45.301081986 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 510}
    , self = 81
    , parent = Nothing
    , duration = 5.213037083000
    , status = Success
    , start = 2025-09-03 11:49:42.060467877 UTC
    , finish = 2025-09-03 11:49:47.27350496 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.789014542000
  min duration 0.528342239000
  total durat. 2.646113807000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.042711846000
  min duration 0.993842769000
  total durat. 2.036554615000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 72
    , parent = Nothing
    , duration = 1.042711846000
    , status = Fail
    , start = 2025-09-03 11:49:42.922940723 UTC
    , finish = 2025-09-03 11:49:43.965652569 UTC
    , thread_cap_info = ("ThreadId 131", 0, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.710668721000
  min duration 3.692275364000
  total durat. 7.402944085000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 34}
    , self = 91
    , parent = Nothing
    , duration = 3.692275364000
    , status = Fail
    , start = 2025-09-03 11:49:43.978031988 UTC
    , finish = 2025-09-03 11:49:47.670307352 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 45}
    , self = 92
    , parent = Nothing
    , duration = 3.710668721000
    , status = Fail
    , start = 2025-09-03 11:49:44.097165828 UTC
    , finish = 2025-09-03 11:49:47.807834549 UTC
    , thread_cap_info = ("ThreadId 138", 0, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F                    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 162} , self = 59 , parent = Nothing , duration = 0.658265348000 , status
F                    = Fail , start = 2025-09-03 11:49:40.990640402 UTC , finish = 2025-09-03
F                    11:49:41.64890575 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F                  = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 162} , self = 61 , parent = Nothing , duration = 0.677681198000 , status
| F                  = Fail , start = 2025-09-03 11:49:40.99714216 UTC , finish = 2025-09-03
| F                  11:49:41.674823358 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F                = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F                = 45} , self = 58 , parent = Nothing , duration = 0.157392437000 , status
| | F                = Fail , start = 2025-09-03 11:49:41.014595491 UTC , finish = 2025-09-03
| | F                11:49:41.171987928 UTC , thread_cap_info = ("ThreadId 77", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F              = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F              = 45} , self = 57 , parent = Nothing , duration = 0.122775869000 , status
| | | F              = Fail , start = 2025-09-03 11:49:41.022672654 UTC , finish = 2025-09-03
| | | F              11:49:41.145448523 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | F            = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | F            total_length = 510} , self = 65 , parent = Nothing , duration = 0.914416672000
| | | | F            , status = Fail , start = 2025-09-03 11:49:41.022762543 UTC , finish =
| | | | F            2025-09-03 11:49:41.937179215 UTC , thread_cap_info = ("ThreadId 98", 1,
| | | | F            False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | | F          = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | F          total_length = 510} , self = 66 , parent = Nothing , duration = 1.087734864000
| | | | | F          , status = Fail , start = 2025-09-03 11:49:41.037179965 UTC , finish =
| | | | | F          2025-09-03 11:49:42.124914829 UTC , thread_cap_info = ("ThreadId 97", 1,
| | | | | F          False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | F        = 5 , total_length = 34} , self = 60 , parent = Nothing , duration = 0.629900093000
| | | | | | F        , status = Fail , start = 2025-09-03 11:49:41.038389501 UTC , finish =
| | | | | | F        2025-09-03 11:49:41.668289594 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | F        0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | F      = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | F      total_length = 390} , self = 62 , parent = Nothing , duration = 0.748735168000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:49:41.068234319 UTC , finish =
| | | | | | | F      2025-09-03 11:49:41.816969487 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | F      1, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | | F    = 5 , total_length = 34} , self = 67 , parent = Nothing , duration = 1.446693312000
| | | | | | | | F    , status = Fail , start = 2025-09-03 11:49:41.070907188 UTC , finish =
| | | | | | | | F    2025-09-03 11:49:42.5176005 UTC , thread_cap_info = ("ThreadId 104", 0,
| | | | | | | | F    False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | | F  = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | F  total_length = 390} , self = 63 , parent = Nothing , duration = 0.847046461000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 11:49:41.077150705 UTC , finish =
| | | | | | | | | F  2025-09-03 11:49:41.924197166 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | | | F  1, False)}
| | | | | | | | | F  
| | | F | | | | | |  
| | | F | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | | | |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | F | | | | | |  alphabet_size = 5 , total_length = 45} , self = 64 , parent = Nothing ,
| | | F | | | | | |  duration = 0.789014542000 , status = Fail , start = 2025-09-03 11:49:41.147459806
| | | F | | | | | |  UTC , finish = 2025-09-03 11:49:41.936474348 UTC , thread_cap_info = ("ThreadId
| | | F | | | | | |  108", 0, False)}
| | | F | | | | | |  
| | F | | | | | | |  
| | F | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | F | | | | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | F | | | | | | |  = 5 , total_length = 45} , self = 70 , parent = Nothing , duration = 1.941980434000
| | F | | | | | | |  , status = Fail , start = 2025-09-03 11:49:41.172013456 UTC , finish =
| | F | | | | | | |  2025-09-03 11:49:43.11399389 UTC , thread_cap_info = ("ThreadId 109", 0,
| | F | | | | | | |  False)}
| | F | | | | | | |  
F | | | | | | | | |  
  | | | | | F | | |  
F | | | | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
F | | | | |   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F | | | | |   | | |  = 5 , total_length = 34} , self = 68 , parent = Nothing , duration = 0.858569927000
F | | | | |   | | |  , status = Fail , start = 2025-09-03 11:49:41.66832898 UTC , finish = 2025-09-03
F | | | | |   | | |  11:49:42.526898907 UTC , thread_cap_info = ("ThreadId 113", 0, False)}
F | | | | |   | | |  
| F | | | |   | | |  
|   | | | |   F | |  
| S | | | |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |     | |  = 67 , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 27
| S | | | |     | |  , alphabet_size = 15 , total_length = 390} , self = 73 , parent = Nothing
| S | | | |     | |  , duration = 3.481440075000 , status = Success , start = 2025-09-03 11:49:41.819641911
| S | | | |     | |  UTC , finish = 2025-09-03 11:49:45.301081986 UTC , thread_cap_info = ("ThreadId
| S | | | |     | |  122", 1, False)}
| S | | | |     | |  
| | | | | |     | F  
| | | F | |     |    
| | |   F |     |    
| | | E   |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |     |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 67
| | | E   |     |    , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size
| | | E   |     |    = 15 , total_length = 390} , self = 75 , parent = Nothing , duration =
| | | E   |     |    3.506534530000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E   |     |    11:49:41.937207455 UTC , finish = 2025-09-03 11:49:45.443741985 UTC , thread_cap_info
| | | E   |     |    = ("ThreadId 124", 1, False)}
| | | E   |     |    
| | | | F |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F |     |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F |     |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | F |     |    = 5 , total_length = 45} , self = 69 , parent = Nothing , duration = 0.663235873000
| | | | F |     |    , status = Fail , start = 2025-09-03 11:49:42.041213267 UTC , finish =
| | | | F |     |    2025-09-03 11:49:42.70444914 UTC , thread_cap_info = ("ThreadId 125", 0,
| | | | F |     |    False)}
| | | | F |     |    
| | | | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S   |    = 82 , num_strict_rules = 55 , num_top_rules = 55 , num_weak_rules = 27
| | | | | | S   |    , alphabet_size = 15 , total_length = 510} , self = 81 , parent = Nothing
| | | | | | S   |    , duration = 5.213037083000 , status = Success , start = 2025-09-03 11:49:42.060467877
| | | | | | S   |    UTC , finish = 2025-09-03 11:49:47.27350496 UTC , thread_cap_info = ("ThreadId
| | | | | | S   |    126", 1, False)}
| | | | | | S   |    
| | | | | F |   |    
| | | | | E |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 82
| | | | | E |   |    , num_strict_rules = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size
| | | | | E |   |    = 15 , total_length = 510} , self = 84 , parent = Nothing , duration =
| | | | | E |   |    5.081859068000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |   |    11:49:42.244882671 UTC , finish = 2025-09-03 11:49:47.326741739 UTC , thread_cap_info
| | | | | E |   |    = ("ThreadId 128", 1, False)}
| | | | | E |   |    
| | | | | | |   F    
F | | | | | |        
F | | | | | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | |        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F | | | | | |        = 5 , total_length = 34} , self = 71 , parent = Nothing , duration = 0.993842769000
F | | | | | |        , status = Fail , start = 2025-09-03 11:49:42.594891842 UTC , finish =
F | | | | | |        2025-09-03 11:49:43.588734611 UTC , thread_cap_info = ("ThreadId 129",
F | | | | | |        0, False)}
F | | | | | |        
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | | E      = 5 , total_length = 34} , self = 104 , parent = Nothing , duration = 6.227927778000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:42.599889057
| | | | | | | E      UTC , finish = 2025-09-03 11:49:48.827816835 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      130", 0, False)}
| | | | | | | E      
| | | | F | | |      
| | | | F | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |      = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | F | | |      alphabet_size = 5 , total_length = 45} , self = 72 , parent = Nothing ,
| | | | F | | |      duration = 1.042711846000 , status = Fail , start = 2025-09-03 11:49:42.922940723
| | | | F | | |      UTC , finish = 2025-09-03 11:49:43.965652569 UTC , thread_cap_info = ("ThreadId
| | | | F | | |      131", 0, False)}
| | | | F | | |      
| | F | | | | |      
| | E | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E | | | | |      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | E | | | | |      = 5 , total_length = 45} , self = 116 , parent = Nothing , duration = 6.836295882000
| | E | | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:43.223922998
| | E | | | | |      UTC , finish = 2025-09-03 11:49:50.06021888 UTC , thread_cap_info = ("ThreadId
| | E | | | | |      134", 0, False)}
| | E | | | | |      
F | | | | | | |      
  | | | F | | |      
F | | |   | | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | | |   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |   | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |   | | |      = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F | | |   | | |      = 5 , total_length = 34} , self = 91 , parent = Nothing , duration = 3.692275364000
F | | |   | | |      , status = Fail , start = 2025-09-03 11:49:43.978031988 UTC , finish =
F | | |   | | |      2025-09-03 11:49:47.670307352 UTC , thread_cap_info = ("ThreadId 137",
F | | |   | | |      0, False)}
F | | |   | | |      
| | | | F | | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |      = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | F | | |      alphabet_size = 5 , total_length = 45} , self = 92 , parent = Nothing ,
| | | | F | | |      duration = 3.710668721000 , status = Fail , start = 2025-09-03 11:49:44.097165828
| | | | F | | |      UTC , finish = 2025-09-03 11:49:47.807834549 UTC , thread_cap_info = ("ThreadId
| | | | F | | |      138", 0, False)}
| | | | F | | |      
| S | | | | | |      
|   | E | | | |      
| F |   | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| F |   | | | |      = 7 , num_top_rules = 7 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| F |   | | | |      = 207} , self = 80 , parent = Nothing , duration = 1.691600182000 , status
| F |   | | | |      = Fail , start = 2025-09-03 11:49:45.560147605 UTC , finish = 2025-09-03
| F |   | | | |      11:49:47.251747787 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| F |   | | | |      
| | | F | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | F | | | |      = 7 , num_top_rules = 7 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | F | | | |      = 207} , self = 83 , parent = Nothing , duration = 1.698972482000 , status
| | | F | | | |      = Fail , start = 2025-09-03 11:49:45.578096974 UTC , finish = 2025-09-03
| | | F | | | |      11:49:47.277069456 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | | F | | | |      
| F | | | | | |      
| S | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |      = 34 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 27 ,
| S | | | | | |      alphabet_size = 11 , total_length = 207} , self = 93 , parent = Nothing
| S | | | | | |      , duration = 0.880275927000 , status = Success , start = 2025-09-03 11:49:47.25203378
| S | | | | | |      UTC , finish = 2025-09-03 11:49:48.132309707 UTC , thread_cap_info = ("ThreadId
| S | | | | | |      152", 1, False)}
| S | | | | | |      
| | | | | | S |      
| | | F | |   |      
| | | E | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | E | |   |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 27 , alphabet_size
| | | E | |   |      = 11 , total_length = 207} , self = 95 , parent = Nothing , duration =
| | | E | |   |      0.943446685000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | |   |      11:49:47.277114404 UTC , finish = 2025-09-03 11:49:48.220561089 UTC , thread_cap_info
| | | E | |   |      = ("ThreadId 154", 1, False)}
| | | E | |   |      
| | | | | E   |      
| | | | | F   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   |      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | F   |      = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | F   |      = 202} , self = 100 , parent = Nothing , duration = 0.983861614000 , status
| | | | | F   |      = Fail , start = 2025-09-03 11:49:47.465707695 UTC , finish = 2025-09-03
| | | | | F   |      11:49:48.449569309 UTC , thread_cap_info = ("ThreadId 159", 1, False)}
| | | | | F   |      
| | | | | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | F |      = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | | | | F |      = 202} , self = 101 , parent = Nothing , duration = 1.034076841000 , status
| | | | | | F |      = Fail , start = 2025-09-03 11:49:47.496028124 UTC , finish = 2025-09-03
| | | | | | F |      11:49:48.530104965 UTC , thread_cap_info = ("ThreadId 160", 1, False)}
| | | | | | F |      
F | | | | | | |      
S | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
S | | | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | | | | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
S | | | | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
S | | | | | | |      = 5 , total_length = 34} , self = 102 , parent = Nothing , duration = 1.099176203000
S | | | | | | |      , status = Success , start = 2025-09-03 11:49:47.693935288 UTC , finish
S | | | | | | |      = 2025-09-03 11:49:48.793111491 UTC , thread_cap_info = ("ThreadId 162",
S | | | | | | |      0, False)}
S | | | | | | |      
| | | | F | | |      
| | | | S | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | | | S | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | S | | |      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | S | | |      = 5 , total_length = 45} , self = 113 , parent = Nothing , duration = 2.097331618000
| | | | S | | |      , status = Success , start = 2025-09-03 11:49:47.817194112 UTC , finish
| | | | S | | |      = 2025-09-03 11:49:49.91452573 UTC , thread_cap_info = ("ThreadId 163",
| | | | S | | |      0, False)}
| | | | S | | |      
| S | | | | | |      
|   | E | | | |      
| F |   | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F |   | | | |      = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| F |   | | | |      = 202} , self = 109 , parent = Nothing , duration = 0.643571872000 , status
| F |   | | | |      = Fail , start = 2025-09-03 11:49:48.379505793 UTC , finish = 2025-09-03
| F |   | | | |      11:49:49.023077665 UTC , thread_cap_info = ("ThreadId 170", 1, False)}
| F |   | | | |      
| | | F | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | F | | | |      = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| | | F | | | |      = 202} , self = 110 , parent = Nothing , duration = 0.728661309000 , status
| | | F | | | |      = Fail , start = 2025-09-03 11:49:48.399067335 UTC , finish = 2025-09-03
| | | F | | | |      11:49:49.127728644 UTC , thread_cap_info = ("ThreadId 171", 1, False)}
| | | F | | | |      
| | | | | F | |      
| | | | |   F |      
| | | | | S   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   |      = 33 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 ,
| | | | | S   |      alphabet_size = 11 , total_length = 202} , self = 132 , parent = Nothing
| | | | | S   |      , duration = 2.511998084000 , status = Success , start = 2025-09-03 11:49:48.541030749
| | | | | S   |      UTC , finish = 2025-09-03 11:49:51.053028833 UTC , thread_cap_info = ("ThreadId
| | | | | S   |      173", 1, False)}
| | | | | S   |      
| | | | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | | | E |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size
| | | | | | E |      = 11 , total_length = 202} , self = 134 , parent = Nothing , duration =
| | | | | | E |      2.535506335000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E |      11:49:48.621631504 UTC , finish = 2025-09-03 11:49:51.157137839 UTC , thread_cap_info
| | | | | | E |      = ("ThreadId 174", 1, False)}
| | | | | | E |      
S | | | | | | |      
  | | | | | | E      
  F | | | | |        
S   | | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | | | |        = 33 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 ,
S   | | | | |        alphabet_size = 11 , total_length = 202} , self = 120 , parent = Nothing
S   | | | | |        , duration = 1.276965816000 , status = Success , start = 2025-09-03 11:49:49.026418817
S   | | | | |        UTC , finish = 2025-09-03 11:49:50.303384633 UTC , thread_cap_info = ("ThreadId
S   | | | | |        184", 1, False)}
S   | | | | |        
| F | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F | | | | |        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F | | | | |        = 30} , self = 111 , parent = Nothing , duration = 0.227237676000 , status
| F | | | | |        = Fail , start = 2025-09-03 11:49:49.061892369 UTC , finish = 2025-09-03
| F | | | | |        11:49:49.289130045 UTC , thread_cap_info = ("ThreadId 182", 0, False)}
| F | | | | |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | F      = 30} , self = 112 , parent = Nothing , duration = 0.227821869000 , status
| | | | | | | F      = Fail , start = 2025-09-03 11:49:49.070703242 UTC , finish = 2025-09-03
| | | | | | | F      11:49:49.298525111 UTC , thread_cap_info = ("ThreadId 183", 0, False)}
| | | | | | | F      
| | | F | | | |      
| | | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | E | | | |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 27 , alphabet_size
| | | E | | | |      = 11 , total_length = 202} , self = 123 , parent = Nothing , duration =
| | | E | | | |      1.201176640000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | | |      11:49:49.141284395 UTC , finish = 2025-09-03 11:49:50.342461035 UTC , thread_cap_info
| | | E | | | |      = ("ThreadId 186", 1, False)}
| | | E | | | |      
| F | | | | | |      
|   | | | | | F      
| F | | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | |        = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | | | | |        = 5 , total_length = 30} , self = 115 , parent = Nothing , duration = 0.698856933000
| F | | | | |        , status = Fail , start = 2025-09-03 11:49:49.298545378 UTC , finish =
| F | | | | |        2025-09-03 11:49:49.997402311 UTC , thread_cap_info = ("ThreadId 188",
| F | | | | |        0, False)}
| F | | | | |        
| | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | F      = 5 , total_length = 30} , self = 138 , parent = Nothing , duration = 1.926806409000
| | | | | | | F      , status = Fail , start = 2025-09-03 11:49:49.338011606 UTC , finish =
| | | | | | | F      2025-09-03 11:49:51.264818015 UTC , thread_cap_info = ("ThreadId 190",
| | | | | | | F      0, False)}
| | | | | | | F      
| | | | S | | |      
| F | |   | | |      
|   E |   | | |      
S     |   | | |      
      E   | | |      
F         | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F         | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F         | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
F         | | |      = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
F         | | |      = 199} , self = 136 , parent = Nothing , duration = 0.870932700000 , status
F         | | |      = Fail , start = 2025-09-03 11:49:50.343998326 UTC , finish = 2025-09-03
F         | | |      11:49:51.214931026 UTC , thread_cap_info = ("ThreadId 207", 1, False)}
F         | | |      
| F       | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F       | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F       | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| F       | | |      = 5 , num_top_rules = 5 , num_weak_rules = 27 , alphabet_size = 11 , total_length
| F       | | |      = 199} , self = 131 , parent = Nothing , duration = 0.660772965000 , status
| F       | | |      = Fail , start = 2025-09-03 11:49:50.368904395 UTC , finish = 2025-09-03
| F       | | |      11:49:51.02967736 UTC , thread_cap_info = ("ThreadId 206", 1, False)}
| F       | | |      
| | F     | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F     | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     | | |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F     | | |      = 4 , total_length = 26} , self = 130 , parent = Nothing , duration = 0.528342239000
| | F     | | |      , status = Fail , start = 2025-09-03 11:49:50.399560265 UTC , finish =
| | F     | | |      2025-09-03 11:49:50.927902504 UTC , thread_cap_info = ("ThreadId 210",
| | F     | | |      0, False)}
| | F     | | |      
| | F     | | |      
| F       | | |      
|         S | |      
|           E |      
F             |      
              F      
