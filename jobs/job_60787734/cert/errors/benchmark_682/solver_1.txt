last 15871 length 158204
last 21975 length 128456
CNF 21975 vars 128456 clauses
CNF 15871 vars 158204 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4407, clauses: 18560
last 4407 length 18560
CNF 4407 vars 18560 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4407, clauses: 18560, status: Satisfied, time: 0.202286151s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7413, clauses: 33674
last 7413 length 33674
CNF 7413 vars 33674 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7413, clauses: 33674, status: Unsatisfied, time: 0.501701175s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22715, clauses: 99255
last 22715 length 99255
CNF 22715 vars 99255 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21429, clauses: 90898
last 21429 length 90898
CNF 21429 vars 90898 clauses
last 21765 length 127593
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13818, clauses: 61229
last 13818 length 61229
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21429, clauses: 90898, status: Satisfied, time: 0.744900664s
CNF 13818 vars 61229 clauses
CNF 21765 vars 127593 clauses
last 15751 length 157757
**************************************************
summary
**************************************************
SRS with 14 rules on 3 letters       DP
SRS with 15 strict rules and 14 weak rules on 4 letters       EDG
SRS with 15 strict rules and 14 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 14 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- Input 0 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 1 -}
  [0, 1, 2, 1] -> [1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2] {- Input 2 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 3 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 4 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 5 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 6 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 7 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 8 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 9 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 10 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 11 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 12 -}
  [0, 1, 2, 1] -> [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Input 13 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 2) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 3) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 4) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 5) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 6) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 7) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 8) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 9) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 10) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 11) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 12) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 13) -}
  [0#, 1, 2, 1] |-> [0#, 1, 2] {- Many [ DP (Top 46) (Input 13) , DP (Top 43) (Input 12) , DP (Top 40) (Input 11) , DP (Top 37) (Input 10) , DP (Top 34) (Input 9) , DP (Top 31) (Input 8) , DP (Top 28) (Input 7) , DP (Top 25) (Input 6) , DP (Top 22) (Input 5) , DP (Top 19) (Input 4) , DP (Top 16) (Input 3) , DP (Top 13) (Input 2) , DP (Top 10) (Input 1) , DP (Top 7) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2] {- Many [ DP (Top 43) (Input 13) , DP (Top 40) (Input 12) , DP (Top 37) (Input 11) , DP (Top 34) (Input 10) , DP (Top 31) (Input 9) , DP (Top 28) (Input 8) , DP (Top 25) (Input 7) , DP (Top 22) (Input 6) , DP (Top 19) (Input 5) , DP (Top 16) (Input 4) , DP (Top 13) (Input 3) , DP (Top 10) (Input 2) , DP (Top 7) (Input 1) , DP (Top 4) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2, 0, 1, 2] {- Many [ DP (Top 40) (Input 13) , DP (Top 37) (Input 12) , DP (Top 34) (Input 11) , DP (Top 31) (Input 10) , DP (Top 28) (Input 9) , DP (Top 25) (Input 8) , DP (Top 22) (Input 7) , DP (Top 19) (Input 6) , DP (Top 16) (Input 5) , DP (Top 13) (Input 4) , DP (Top 10) (Input 3) , DP (Top 7) (Input 2) , DP (Top 4) (Input 1) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 37) (Input 13) , DP (Top 34) (Input 12) , DP (Top 31) (Input 11) , DP (Top 28) (Input 10) , DP (Top 25) (Input 9) , DP (Top 22) (Input 8) , DP (Top 19) (Input 7) , DP (Top 16) (Input 6) , DP (Top 13) (Input 5) , DP (Top 10) (Input 4) , DP (Top 7) (Input 3) , DP (Top 4) (Input 2) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 34) (Input 13) , DP (Top 31) (Input 12) , DP (Top 28) (Input 11) , DP (Top 25) (Input 10) , DP (Top 22) (Input 9) , DP (Top 19) (Input 8) , DP (Top 16) (Input 7) , DP (Top 13) (Input 6) , DP (Top 10) (Input 5) , DP (Top 7) (Input 4) , DP (Top 4) (Input 3) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 31) (Input 13) , DP (Top 28) (Input 12) , DP (Top 25) (Input 11) , DP (Top 22) (Input 10) , DP (Top 19) (Input 9) , DP (Top 16) (Input 8) , DP (Top 13) (Input 7) , DP (Top 10) (Input 6) , DP (Top 7) (Input 5) , DP (Top 4) (Input 4) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 28) (Input 13) , DP (Top 25) (Input 12) , DP (Top 22) (Input 11) , DP (Top 19) (Input 10) , DP (Top 16) (Input 9) , DP (Top 13) (Input 8) , DP (Top 10) (Input 7) , DP (Top 7) (Input 6) , DP (Top 4) (Input 5) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 25) (Input 13) , DP (Top 22) (Input 12) , DP (Top 19) (Input 11) , DP (Top 16) (Input 10) , DP (Top 13) (Input 9) , DP (Top 10) (Input 8) , DP (Top 7) (Input 7) , DP (Top 4) (Input 6) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 22) (Input 13) , DP (Top 19) (Input 12) , DP (Top 16) (Input 11) , DP (Top 13) (Input 10) , DP (Top 10) (Input 9) , DP (Top 7) (Input 8) , DP (Top 4) (Input 7) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 19) (Input 13) , DP (Top 16) (Input 12) , DP (Top 13) (Input 11) , DP (Top 10) (Input 10) , DP (Top 7) (Input 9) , DP (Top 4) (Input 8) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 16) (Input 13) , DP (Top 13) (Input 12) , DP (Top 10) (Input 11) , DP (Top 7) (Input 10) , DP (Top 4) (Input 9) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 13) (Input 13) , DP (Top 10) (Input 12) , DP (Top 7) (Input 11) , DP (Top 4) (Input 10) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 10) (Input 13) , DP (Top 7) (Input 12) , DP (Top 4) (Input 11) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 7) (Input 13) , DP (Top 4) (Input 12) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP (Top 4) (Input 13) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [0#, 1, 2, 1] |-> [0#, 1, 2] {- Many [ DP (Top 46) (Input 13) , DP (Top 43) (Input 12) , DP (Top 40) (Input 11) , DP (Top 37) (Input 10) , DP (Top 34) (Input 9) , DP (Top 31) (Input 8) , DP (Top 28) (Input 7) , DP (Top 25) (Input 6) , DP (Top 22) (Input 5) , DP (Top 19) (Input 4) , DP (Top 16) (Input 3) , DP (Top 13) (Input 2) , DP (Top 10) (Input 1) , DP (Top 7) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2] {- Many [ DP (Top 43) (Input 13) , DP (Top 40) (Input 12) , DP (Top 37) (Input 11) , DP (Top 34) (Input 10) , DP (Top 31) (Input 9) , DP (Top 28) (Input 8) , DP (Top 25) (Input 7) , DP (Top 22) (Input 6) , DP (Top 19) (Input 5) , DP (Top 16) (Input 4) , DP (Top 13) (Input 3) , DP (Top 10) (Input 2) , DP (Top 7) (Input 1) , DP (Top 4) (Input 0) ] -}
  [0#, 1, 2, 1] |-> [0#, 1, 2, 0, 1, 2, 0, 1, 2] {- Many [ DP (Top 40) (Input 13) , DP (Top 37) (Input 12) , DP (Top 34) (Input 11) , DP (Top 31) (Input 10) , DP (Top 28) (Input 9) , DP (Top 25) (Input 8) , DP (Top 22) (Input 7) , DP (Top 19) (Input 6) , DP (Top 16) (Input 5) , DP (Top 13) (Input 4) , DP (Top 10) (Input 3) , DP (Top 7) (Input 2) , DP (Top 4) (Input 1) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 37) (Input 13) , DP (Top 34) (Input 12) , DP (Top 31) (Input 11) , DP (Top 28) (Input 10) , DP (Top 25) (Input 9) , DP (Top 22) (Input 8) , DP (Top 19) (Input 7) , DP (Top 16) (Input 6) , DP (Top 13) (Input 5) , DP (Top 10) (Input 4) , DP (Top 7) (Input 3) , DP (Top 4) (Input 2) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 34) (Input 13) , DP (Top 31) (Input 12) , DP (Top 28) (Input 11) , DP (Top 25) (Input 10) , DP (Top 22) (Input 9) , DP (Top 19) (Input 8) , DP (Top 16) (Input 7) , DP (Top 13) (Input 6) , DP (Top 10) (Input 5) , DP (Top 7) (Input 4) , DP (Top 4) (Input 3) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 31) (Input 13) , DP (Top 28) (Input 12) , DP (Top 25) (Input 11) , DP (Top 22) (Input 10) , DP (Top 19) (Input 9) , DP (Top 16) (Input 8) , DP (Top 13) (Input 7) , DP (Top 10) (Input 6) , DP (Top 7) (Input 5) , DP (Top 4) (Input 4) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 28) (Input 13) , DP (Top 25) (Input 12) , DP (Top 22) (Input 11) , DP (Top 19) (Input 10) , DP (Top 16) (Input 9) , DP (Top 13) (Input 8) , DP (Top 10) (Input 7) , DP (Top 7) (Input 6) , DP (Top 4) (Input 5) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 25) (Input 13) , DP (Top 22) (Input 12) , DP (Top 19) (Input 11) , DP (Top 16) (Input 10) , DP (Top 13) (Input 9) , DP (Top 10) (Input 8) , DP (Top 7) (Input 7) , DP (Top 4) (Input 6) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 22) (Input 13) , DP (Top 19) (Input 12) , DP (Top 16) (Input 11) , DP (Top 13) (Input 10) , DP (Top 10) (Input 9) , DP (Top 7) (Input 8) , DP (Top 4) (Input 7) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 19) (Input 13) , DP (Top 16) (Input 12) , DP (Top 13) (Input 11) , DP (Top 10) (Input 10) , DP (Top 7) (Input 9) , DP (Top 4) (Input 8) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 16) (Input 13) , DP (Top 13) (Input 12) , DP (Top 10) (Input 11) , DP (Top 7) (Input 10) , DP (Top 4) (Input 9) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 13) (Input 13) , DP (Top 10) (Input 12) , DP (Top 7) (Input 11) , DP (Top 4) (Input 10) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 10) (Input 13) , DP (Top 7) (Input 12) , DP (Top 4) (Input 11) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- Many [ DP (Top 7) (Input 13) , DP (Top 4) (Input 12) ] -}
  [0#, 1, 2, 1] |-> [ 0# , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP (Top 4) (Input 13) -}
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 2) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 3) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 4) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 5) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 6) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 7) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 8) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 9) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 10) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 11) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 12) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 13) -}
reason
  ( 1
  , Wk  / 0A 1A -  \
        | 1A -  2A |
        \ -  -  0A / )
  ( 2
  , Wk  / -   -   0A \
        | -2A -2A -  |
        \ -   -   0A / )
  ( 0
  , Wk  / 1A - -  \
        | 1A - -  |
        \ -  - 0A / )
  ( 0#
  , Wk  / 1A - -2A \
        | -  - -   |
        \ -  - 0A  / )
   property Termination
has value Just True
for SRS
  [0, 1, 2, 1] ->= [1, 2, 1, 1, 0, 1, 2, 0, 1, 2] {- DP Nontop (Input 0) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 1) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 2) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 3) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 4) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 5) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 6) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 7) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 8) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 9) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 10) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 11) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 12) -}
  [0, 1, 2, 1] ->= [ 1 , 2 , 1 , 1 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] {- DP Nontop (Input 13) -}
reason
  EDG

**************************************************
skeleton: (14,3)\Deepee\EDG(15/14,4)\Matrix{\ArcticBZ}{3}(0/14,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 15751 vars 157757 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4196, clauses: 17613
last 4196 length 17613
CNF 4196 vars 17613 clauses

Success : "EDG { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
  total number 6
  max duration 3.054760940000
  min duration 0.000009763000
  total durat. 3.342624687000
  Info
    { what = "EDG   { usable = True, tcap_inverse = True, tracing = False, verbose = False}"
    , input_size = Size
      { num_rules = 254
      , num_strict_rules = 170
      , num_top_rules = 170
      , num_weak_rules = 84
      , alphabet_size = 9
      , total_length = 8034}
    , self = 57
    , parent = Nothing
    , duration = 3.054760940000
    , status = Success
    , start = 2025-09-03 12:38:55.083845546 UTC
    , finish = 2025-09-03 12:38:58.138606486 UTC
    , thread_cap_info = ("ThreadId 77", 1, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.548669820000
  min duration 2.548669820000
  total durat. 2.548669820000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 489}
    , self = 54
    , parent = Nothing
    , duration = 2.548669820000
    , status = Fail
    , start = 2025-09-03 12:38:55.038983681 UTC
    , finish = 2025-09-03 12:38:57.587653501 UTC
    , thread_cap_info = ("ThreadId 68", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.199175549000
  min duration 3.019992922000
  total durat. 12.350163397000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 889}
    , self = 61
    , parent = Nothing
    , duration = 3.019992922000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:55.163856628 UTC
    , finish = 2025-09-03 12:38:58.18384955 UTC
    , thread_cap_info = ("ThreadId 94", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 169
      , num_strict_rules = 85
      , num_top_rules = 85
      , num_weak_rules = 84
      , alphabet_size = 9
      , total_length = 5508}
    , self = 75
    , parent = Nothing
    , duration = 3.022030939000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:58.206783361 UTC
    , finish = 2025-09-03 12:39:01.2288143 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 482}
    , self = 80
    , parent = Nothing
    , duration = 3.108963987000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:58.324582116 UTC
    , finish = 2025-09-03 12:39:01.433546103 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 84
      , alphabet_size = 10
      , total_length = 3124}
    , self = 69
    , parent = Nothing
    , duration = 3.199175549000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:55.3475826 UTC
    , finish = 2025-09-03 12:38:58.546758149 UTC
    , thread_cap_info = ("ThreadId 98", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.116328713000
  min duration 3.116328713000
  total durat. 3.116328713000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 84
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 2982}
    , self = 59
    , parent = Nothing
    , duration = 3.116328713000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:38:55.048458256 UTC
    , finish = 2025-09-03 12:38:58.164786969 UTC
    , thread_cap_info = ("ThreadId 87", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.500553562000
  min duration 2.500553562000
  total durat. 2.500553562000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 489}
    , self = 53
    , parent = Nothing
    , duration = 2.500553562000
    , status = Fail
    , start = 2025-09-03 12:38:55.043986508 UTC
    , finish = 2025-09-03 12:38:57.54454007 UTC
    , thread_cap_info = ("ThreadId 69", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.200093274000
  min duration 3.023003813000
  total durat. 9.246789876000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 889}
    , self = 65
    , parent = Nothing
    , duration = 3.023003813000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:55.183854391 UTC
    , finish = 2025-09-03 12:38:58.206858204 UTC
    , thread_cap_info = ("ThreadId 95", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 169
      , num_strict_rules = 85
      , num_top_rules = 85
      , num_weak_rules = 84
      , alphabet_size = 9
      , total_length = 5508}
    , self = 76
    , parent = Nothing
    , duration = 3.023692789000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:58.225499784 UTC
    , finish = 2025-09-03 12:39:01.249192573 UTC
    , thread_cap_info = ("ThreadId 116", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 84
      , alphabet_size = 10
      , total_length = 3124}
    , self = 70
    , parent = Nothing
    , duration = 3.200093274000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:38:55.36385934 UTC
    , finish = 2025-09-03 12:38:58.563952614 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.120006157000
  min duration 3.120006157000
  total durat. 3.120006157000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 84
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 7
      , total_length = 2982}
    , self = 62
    , parent = Nothing
    , duration = 3.120006157000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:38:55.063851283 UTC
    , finish = 2025-09-03 12:38:58.18385744 UTC
    , thread_cap_info = ("ThreadId 89", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.919102304000
  min duration 2.919102304000
  total durat. 2.919102304000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 889}
    , self = 73
    , parent = Nothing
    , duration = 2.919102304000
    , status = Success
    , start = 2025-09-03 12:38:58.246520599 UTC
    , finish = 2025-09-03 12:39:01.165622903 UTC
    , thread_cap_info = ("ThreadId 117", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.031844022000
  min duration 2.031844022000
  total durat. 2.031844022000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 889}
    , self = 77
    , parent = Nothing
    , duration = 2.031844022000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:38:59.305014325 UTC
    , finish = 2025-09-03 12:39:01.336858347 UTC
    , thread_cap_info = ("ThreadId 127", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.024559701000
  min duration 1.024559701000
  total durat. 1.024559701000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 14
      , alphabet_size = 4
      , total_length = 889}
    , self = 72
    , parent = Nothing
    , duration = 1.024559701000
    , status = Fail
    , start = 2025-09-03 12:38:58.188022152 UTC
    , finish = 2025-09-03 12:38:59.212581853 UTC
    , thread_cap_info = ("ThreadId 113", 0, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 4.063722849000
  min duration 4.063722849000
  total durat. 4.063722849000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 14
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 469}
    , self = 71
    , parent = Nothing
    , duration = 4.063722849000
    , status = Fail
    , start = 2025-09-03 12:38:55.028344322 UTC
    , finish = 2025-09-03 12:38:59.092067171 UTC
    , thread_cap_info = ("ThreadId 23", 3, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = True}" , input_size = Size { num_rules = 14 , num_strict_rules = 14 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                    = 469} , self = 71 , parent = Nothing , duration = 4.063722849000 , status
F                    = Fail , start = 2025-09-03 12:38:55.028344322 UTC , finish = 2025-09-03
F                    12:38:59.092067171 UTC , thread_cap_info = ("ThreadId 23", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| F                  = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| F                  = 489} , self = 54 , parent = Nothing , duration = 2.548669820000 , status
| F                  = Fail , start = 2025-09-03 12:38:55.038983681 UTC , finish = 2025-09-03
| F                  12:38:57.587653501 UTC , thread_cap_info = ("ThreadId 68", 0, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | F                = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| | F                = 489} , self = 53 , parent = Nothing , duration = 2.500553562000 , status
| | F                = Fail , start = 2025-09-03 12:38:55.043986508 UTC , finish = 2025-09-03
| | F                12:38:57.54454007 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| | F                
| | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | E              = 84 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | | E              = 2982} , self = 59 , parent = Nothing , duration = 3.116328713000 , status
| | | E              = Except "AsyncCancelled" , start = 2025-09-03 12:38:55.048458256 UTC ,
| | | E              finish = 2025-09-03 12:38:58.164786969 UTC , thread_cap_info = ("ThreadId
| | | E              87", 2, False)}
| | | E              
| | | | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | E            = 84 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length
| | | | E            = 2982} , self = 62 , parent = Nothing , duration = 3.120006157000 , status
| | | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:38:55.063851283 UTC ,
| | | | E            finish = 2025-09-03 12:38:58.18385744 UTC , thread_cap_info = ("ThreadId
| | | | E            89", 2, False)}
| | | | E            
| | | | | S          Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | S          verbose = False}" , input_size = Size { num_rules = 195 , num_strict_rules
| | | | | S          = 111 , num_top_rules = 111 , num_weak_rules = 84 , alphabet_size = 10
| | | | | S          , total_length = 6126} , self = 50 , parent = Nothing , duration = 0.254367671000
| | | | | S          , status = Success , start = 2025-09-03 12:38:55.082763711 UTC , finish
| | | | | S          = 2025-09-03 12:38:55.337131382 UTC , thread_cap_info = ("ThreadId 79",
| | | | | S          1, False)}
| | | | | S          
| | | | | | S        Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | S        verbose = False}" , input_size = Size { num_rules = 254 , num_strict_rules
| | | | | | S        = 170 , num_top_rules = 170 , num_weak_rules = 84 , alphabet_size = 9 ,
| | | | | | S        total_length = 8034} , self = 57 , parent = Nothing , duration = 3.054760940000
| | | | | | S        , status = Success , start = 2025-09-03 12:38:55.083845546 UTC , finish
| | | | | | S        = 2025-09-03 12:38:58.138606486 UTC , thread_cap_info = ("ThreadId 77",
| | | | | | S        1, False)}
| | | | | | S        
| | | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | | | E      = 15 , num_top_rules = 15 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| | | | | | | E      = 889} , self = 61 , parent = Nothing , duration = 3.019992922000 , status
| | | | | | | E      = Except "<<timeout>>" , start = 2025-09-03 12:38:55.163856628 UTC , finish
| | | | | | | E      = 2025-09-03 12:38:58.18384955 UTC , thread_cap_info = ("ThreadId 94",
| | | | | | | E      0, False)}
| | | | | | | E      
| | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | | | | E    = 15 , num_top_rules = 15 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| | | | | | | | E    = 889} , self = 65 , parent = Nothing , duration = 3.023003813000 , status
| | | | | | | | E    = Except "<<timeout>>" , start = 2025-09-03 12:38:55.183854391 UTC , finish
| | | | | | | | E    = 2025-09-03 12:38:58.206858204 UTC , thread_cap_info = ("ThreadId 95",
| | | | | | | | E    0, False)}
| | | | | | | | E    
| | | | | S | | |    
| | | | | E | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | E | | |    = 17 , num_top_rules = 17 , num_weak_rules = 84 , alphabet_size = 10 ,
| | | | | E | | |    total_length = 3124} , self = 69 , parent = Nothing , duration = 3.199175549000
| | | | | E | | |    , status = Except "<<timeout>>" , start = 2025-09-03 12:38:55.3475826 UTC
| | | | | E | | |    , finish = 2025-09-03 12:38:58.546758149 UTC , thread_cap_info = ("ThreadId
| | | | | E | | |    98", 1, False)}
| | | | | E | | |    
| | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | | | | | | | E  = 17 , num_top_rules = 17 , num_weak_rules = 84 , alphabet_size = 10 ,
| | | | | | | | | E  total_length = 3124} , self = 70 , parent = Nothing , duration = 3.200093274000
| | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 12:38:55.36385934
| | | | | | | | | E  UTC , finish = 2025-09-03 12:38:58.563952614 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  99", 1, False)}
| | | | | | | | | E  
| | F | | | | | | |  
| F   | | | | | | |  
| S   | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   | | | | | | |  = 17 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 14 ,
| S   | | | | | | |  alphabet_size = 4 , total_length = 489} , self = 55 , parent = Nothing
| S   | | | | | | |  , duration = 0.439020972000 , status = Success , start = 2025-09-03 12:38:57.603874348
| S   | | | | | | |  UTC , finish = 2025-09-03 12:38:58.04289532 UTC , thread_cap_info = ("ThreadId
| S   | | | | | | |  102", 0, False)}
| S   | | | | | | |  
| | E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | E | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size
| | E | | | | | | |  = 4 , total_length = 489} , self = 60 , parent = Nothing , duration = 0.484014815000
| | E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:38:57.685703194
| | E | | | | | | |  UTC , finish = 2025-09-03 12:38:58.169718009 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | |  103", 0, False)}
| | E | | | | | | |  
| S | | | | | | | |  
|   | | | | S | | |  
|   | E | |   | | |  
|   E   | |   | | |  
|       | |   E | |  
|       E |     | |  
| F       |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F       |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F       |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F       |     | |  = 29 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 14
| F       |     | |  , alphabet_size = 4 , total_length = 889} , self = 72 , parent = Nothing
| F       |     | |  , duration = 1.024559701000 , status = Fail , start = 2025-09-03 12:38:58.188022152
| F       |     | |  UTC , finish = 2025-09-03 12:38:59.212581853 UTC , thread_cap_info = ("ThreadId
| F       |     | |  113", 0, False)}
| F       |     | |  
| | E     |     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E     |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E     |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 169 , num_strict_rules
| | E     |     | |  = 85 , num_top_rules = 85 , num_weak_rules = 84 , alphabet_size = 9 , total_length
| | E     |     | |  = 5508} , self = 75 , parent = Nothing , duration = 3.022030939000 , status
| | E     |     | |  = Except "<<timeout>>" , start = 2025-09-03 12:38:58.206783361 UTC , finish
| | E     |     | |  = 2025-09-03 12:39:01.2288143 UTC , thread_cap_info = ("ThreadId 115",
| | E     |     | |  2, False)}
| | E     |     | |  
| | |     |     E |  
| | | E   |       |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E   |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E   |       |  = False\n , verbose = False}" , input_size = Size { num_rules = 169 , num_strict_rules
| | | E   |       |  = 85 , num_top_rules = 85 , num_weak_rules = 84 , alphabet_size = 9 , total_length
| | | E   |       |  = 5508} , self = 76 , parent = Nothing , duration = 3.023692789000 , status
| | | E   |       |  = Except "<<timeout>>" , start = 2025-09-03 12:38:58.225499784 UTC , finish
| | | E   |       |  = 2025-09-03 12:39:01.249192573 UTC , thread_cap_info = ("ThreadId 116",
| | | E   |       |  2, False)}
| | | E   |       |  
| | | | S |       |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S |       |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
| | | | S |       |  , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 14 , alphabet_size
| | | | S |       |  = 4 , total_length = 889} , self = 73 , parent = Nothing , duration = 2.919102304000
| | | | S |       |  , status = Success , start = 2025-09-03 12:38:58.246520599 UTC , finish
| | | | S |       |  = 2025-09-03 12:39:01.165622903 UTC , thread_cap_info = ("ThreadId 117",
| | | | S |       |  0, False)}
| | | | S |       |  
| | | | | | E     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E     |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | E     |  = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| | | | | | E     |  = 482} , self = 80 , parent = Nothing , duration = 3.108963987000 , status
| | | | | | E     |  = Except "<<timeout>>" , start = 2025-09-03 12:38:58.324582116 UTC , finish
| | | | | | E     |  = 2025-09-03 12:39:01.433546103 UTC , thread_cap_info = ("ThreadId 120",
| | | | | | E     |  0, False)}
| | | | | | E     |  
| | | | | E |     |  
| | | | |   |     E  
F | | | |   |        
  F | | |   |        
E   | | |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   | | |   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   | | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   | | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
E   | | |   |        , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 14 , alphabet_size
E   | | |   |        = 4 , total_length = 889} , self = 77 , parent = Nothing , duration = 2.031844022000
E   | | |   |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:38:59.305014325
E   | | |   |        UTC , finish = 2025-09-03 12:39:01.336858347 UTC , thread_cap_info = ("ThreadId
E   | | |   |        127", 0, False)}
E   | | |   |        
|   | | S   |        
|   E |     |        
|     E     |        
E           |        
            E        
