last 562 length 2432
last 597 length 2430
CNF 562 vars 2432 clauses
CNF 597 vars 2430 clauses
last 463 length 1882
CNF 463 vars 1882 clauses
last 435 length 1926
CNF 435 vars 1926 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2615, clauses: 9447
last 2615 length 9447
CNF 2615 vars 9447 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5794, clauses: 23657
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2615, clauses: 9447, status: Unsatisfied, time: 0.067567066s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2008, clauses: 7168
last 3739 length 16682
last 5794 length 23657
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5039, clauses: 20585
last 3909 length 20029
last 2008 length 7168
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3819, clauses: 14846
last 8100 length 40630
last 8969 length 39357
CNF 3739 vars 16682 clauses
CNF 5794 vars 23657 clauses
last 5039 length 20585
last 10052 length 47974
last 13621 length 58269
CNF 3909 vars 20029 clauses
last 3819 length 14846
CNF 2008 vars 7168 clauses
CNF 8969 vars 39357 clauses
CNF 8100 vars 40630 clauses
CNF 5039 vars 20585 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5794, clauses: 23657, status: Satisfied, time: 0.565054944s
CNF 10052 vars 47974 clauses
CNF 13621 vars 58269 clauses
CNF 3819 vars 14846 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2008, clauses: 7168, status: Unsatisfied, time: 0.631785784s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5039, clauses: 20585, status: Satisfied, time: 0.343378299s
last 296 length 1193
last 348 length 1446
last 413 length 1692
CNF 348 vars 1446 clauses
CNF 296 vars 1193 clauses
CNF 413 vars 1692 clauses
last 430 length 1909
CNF 430 vars 1909 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1598, clauses: 5592
last 1598 length 5592
CNF 1598 vars 5592 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1902, clauses: 6743
last 1902 length 6743
CNF 1902 vars 6743 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1598, clauses: 5592, status: Unsatisfied, time: 0.08912404s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1902, clauses: 6743, status: Unsatisfied, time: 0.061684545s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4616, clauses: 18913
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4993, clauses: 20409
last 4616 length 18913
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3176, clauses: 12327
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2914, clauses: 11284
last 4993 length 20409
last 3176 length 12327
last 2914 length 11284
CNF 4616 vars 18913 clauses
CNF 4993 vars 20409 clauses
CNF 3176 vars 12327 clauses
CNF 2914 vars 11284 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4616, clauses: 18913, status: Satisfied, time: 0.356522266s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4993, clauses: 20409, status: Unsatisfied, time: 0.688338017s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3176, clauses: 12327, status: Unsatisfied, time: 0.688096808s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17784, clauses: 68084
last 17784 length 68084
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       context
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 6 strict rules and 6 weak rules on 6 letters       EDG
SRS with 6 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 6 weak rules on 6 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       EDG
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [b, a, c, b] {- Input 1 -}
  [b] -> [c] {- Input 2 -}
  [b, c] -> [a] {- Input 3 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, a] -> [b, a, c, b] {- Input 1 -}
  [b] -> [c] {- Input 2 -}
  [b, c] -> [a] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [a, a] -> [b, c, a, b] {- Mirror (Input 1) -}
  [b] -> [c] {- Mirror (Input 2) -}
  [c, b] -> [a] {- Mirror (Input 3) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, b] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
  [a#, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a] |-> [b#, c, a, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#] |-> [c#] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b] |-> [a#] {- DP (Top 0) (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#] |-> [c#] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b] |-> [a#] {- DP (Top 0) (Mirror (Input 3)) -}
  [a#, a] |-> [b#, c, a, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, b] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25043, clauses: 98433
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3088, clauses: 11556
CNF 17784 vars 68084 clauses
reason
last 25043 length 98433
last 3088 length 11556
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8500, clauses: 33933
  last 8500 length 33933
( a
  , Wk  / 1A 1A  1A \
        | 1A -1A 1A |
        \ -  -   0A / )
  ( b
  , Wk  / 0A 0A 0A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( c
  , Wk  / -2A 0A 0A \
        | -   0A 0A |
        \ -   -  0A / )
  ( a#
  , Wk  / 1A 1A 1A \
        | -  -  -  |
        \ -  -  0A / )
  ( b#
  , Wk  / - 1A 2A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / - 1A 2A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#] |-> [c#] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, c, a, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, a] |-> [c#, a, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, b] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 2/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, b] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, b] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
reason
  ( a
  , Wk  / -  1A 0A \
        | 1A 1A 0A |
        \ -  -  0A / )
  ( b
  , Wk  / 1A 1A 0A \
        | 0A 0A -  |
        \ -  -  0A / )
  ( c
  , Wk  / 0A -   -  \
        | 0A -1A -  |
        \ -  -   0A / )
  ( a#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [a, a] ->= [b, c, a, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [c] {- DP Nontop (Mirror (Input 2)) -}
  [c, b] ->= [a] {- DP Nontop (Mirror (Input 3)) -}
reason
  EDG

**************************************************
skeleton: (4,3)\Context\Mirror(6,3)\Deepee\EDG(6/6,6)\Matrix{\ArcticBZ}{3}(5/6,6)\Weight\EDG(1/6,4)\Matrix{\ArcticBZ}{3}(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 3088 vars 11556 clauses
CNF 8500 vars 33933 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.840018208000
  min duration 0.010081586000
  total durat. 2.403363918000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.826742602000
  min duration 0.017268446000
  total durat. 2.493687632000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.825859827000
  min duration 0.720067841000
  total durat. 2.322359982000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.799166439000
  min duration 0.040812940000
  total durat. 1.488050273000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.818143669000
  min duration 0.127003886000
  total durat. 1.321656470000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.089847448000
  min duration 2.089847448000
  total durat. 2.089847448000CNF 25043 vars 98433 clauses

  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 94
    , parent = Nothing
    , duration = 2.089847448000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:49:07.278555882 UTC
    , finish = 2025-09-03 11:49:09.36840333 UTC
    , thread_cap_info = ("ThreadId 35", 2, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 12} , self = 94 , parent = Nothing , duration = 2.089847448000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 11:49:07.278555882 UTC ,
E                      finish = 2025-09-03 11:49:09.36840333 UTC , thread_cap_info = ("ThreadId
E                      35", 2, False)}
E                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F                    = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| F                    = 32} , self = 55 , parent = Nothing , duration = 0.131718920000 , status
| F                    = Fail , start = 2025-09-03 11:49:07.304421388 UTC , finish = 2025-09-03
| F                    11:49:07.436140308 UTC , thread_cap_info = ("ThreadId 78", 0, False)}
| F                    
| | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                  = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | F                  alphabet_size = 6 , total_length = 43} , self = 59 , parent = Nothing ,
| | F                  duration = 0.242606460000 , status = Fail , start = 2025-09-03 11:49:07.315190927
| | F                  UTC , finish = 2025-09-03 11:49:07.557797387 UTC , thread_cap_info = ("ThreadId
| | F                  83", 0, False)}
| | F                  
| | | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | S                , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | S                = 6 , total_length = 43} , self = 62 , parent = Nothing , duration = 0.825859827000
| | | S                , status = Success , start = 2025-09-03 11:49:07.328386207 UTC , finish
| | | S                = 2025-09-03 11:49:08.154246034 UTC , thread_cap_info = ("ThreadId 84",
| | | S                0, False)}
| | | S                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | F              = 46 , num_top_rules = 46 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | F              total_length = 405} , self = 64 , parent = Nothing , duration = 0.840018208000
| | | | F              , status = Fail , start = 2025-09-03 11:49:07.328386604 UTC , finish =
| | | | F              2025-09-03 11:49:08.168404812 UTC , thread_cap_info = ("ThreadId 89", 3,
| | | | F              False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | F            = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F            = 180} , self = 60 , parent = Nothing , duration = 0.657236878000 , status
| | | | | F            = Fail , start = 2025-09-03 11:49:07.348378231 UTC , finish = 2025-09-03
| | | | | F            11:49:08.005615109 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | | | F          = 46 , num_top_rules = 46 , num_weak_rules = 36 , alphabet_size = 15 ,
| | | | | | F          total_length = 405} , self = 65 , parent = Nothing , duration = 0.826742602000
| | | | | | F          , status = Fail , start = 2025-09-03 11:49:07.350358774 UTC , finish =
| | | | | | F          2025-09-03 11:49:08.177101376 UTC , thread_cap_info = ("ThreadId 90", 3,
| | | | | | F          False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | F        = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F        = 180} , self = 61 , parent = Nothing , duration = 0.703719379000 , status
| | | | | | | F        = Fail , start = 2025-09-03 11:49:07.36838205 UTC , finish = 2025-09-03
| | | | | | | F        11:49:08.072101429 UTC , thread_cap_info = ("ThreadId 95", 2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F      = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | | | | | F      = 5 , total_length = 32} , self = 66 , parent = Nothing , duration = 0.818143669000
| | | | | | | | F      , status = Fail , start = 2025-09-03 11:49:07.383707006 UTC , finish =
| | | | | | | | F      2025-09-03 11:49:08.201850675 UTC , thread_cap_info = ("ThreadId 98", 0,
| | | | | | | | F      False)}
| | | | | | | | F      
| F | | | | | | |      
| S | | | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | | | | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| S | | | | | | |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| S | | | | | | |      = 5 , total_length = 32} , self = 68 , parent = Nothing , duration = 0.776432314000
| S | | | | | | |      , status = Success , start = 2025-09-03 11:49:07.447488853 UTC , finish
| S | | | | | | |      = 2025-09-03 11:49:08.223921167 UTC , thread_cap_info = ("ThreadId 104",
| S | | | | | | |      0, False)}
| S | | | | | | |      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 123 , num_strict_rules
| | | | | | | | | F    = 87 , num_top_rules = 87 , num_weak_rules = 36 , alphabet_size = 18 ,
| | | | | | | | | F    total_length = 612} , self = 74 , parent = Nothing , duration = 0.794581953000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 11:49:07.448442638 UTC , finish =
| | | | | | | | | F    2025-09-03 11:49:08.243024591 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | | F    3, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 123 , num_strict_rules
| | | | | | | | | | F  = 87 , num_top_rules = 87 , num_weak_rules = 36 , alphabet_size = 18 ,
| | | | | | | | | | F  total_length = 612} , self = 70 , parent = Nothing , duration = 0.760218634000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:49:07.468391999 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:49:08.228610633 UTC , thread_cap_info = ("ThreadId 103",
| | | | | | | | | | F  3, False)}
| | | | | | | | | | F  
| | F | | | | | | | |  
| | E | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E | | | | | | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | E | | | | | | | |  = 6 , total_length = 43} , self = 67 , parent = Nothing , duration = 0.648070894000
| | E | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:07.570009447
| | E | | | | | | | |  UTC , finish = 2025-09-03 11:49:08.218080341 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | |  110", 0, False)}
| | E | | | | | | | |  
| | | | | F | | | | |  
| | | | |   | F | | |  
| | | S |   |   | | |  
| | |   F   |   | | |  
| | |       F   | | |  
| | |           F | |  
| | E             | |  
| S               | |  
|                 | F  
|                 F    
| F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                    = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| F                    = 4 , total_length = 24} , self = 85 , parent = Nothing , duration = 0.127003886000
| F                    , status = Fail , start = 2025-09-03 11:49:08.259267988 UTC , finish =
| F                    2025-09-03 11:49:08.386271874 UTC , thread_cap_info = ("ThreadId 141",
| F                    2, False)}
| F                    
| | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                  = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | F                  = 5 , total_length = 29} , self = 86 , parent = Nothing , duration = 0.133902455000
| | F                  , status = Fail , start = 2025-09-03 11:49:08.260597054 UTC , finish =
| | F                  2025-09-03 11:49:08.394499509 UTC , thread_cap_info = ("ThreadId 143",
| | F                  0, False)}
| | F                  
| | | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | S                = 4 , total_length = 24} , self = 87 , parent = Nothing , duration = 0.720067841000
| | | S                , status = Success , start = 2025-09-03 11:49:08.292190161 UTC , finish
| | | S                = 2025-09-03 11:49:09.012258002 UTC , thread_cap_info = ("ThreadId 147",
| | | S                2, False)}
| | | S                
| | | | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | F              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | F              = 5 , total_length = 29} , self = 92 , parent = Nothing , duration = 0.996514912000
| | | | F              , status = Fail , start = 2025-09-03 11:49:08.292190166 UTC , finish =
| | | | F              2025-09-03 11:49:09.288705078 UTC , thread_cap_info = ("ThreadId 144",
| | | | F              0, False)}
| | | | F              
| F | | |              
|   F | |              
| E   | |              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   | |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E   | |              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| E   | |              = 4 , total_length = 24} , self = 89 , parent = Nothing , duration = 0.799166439000
| E   | |              , status = Except "AsyncCancelled" , start = 2025-09-03 11:49:08.402908371
| E   | |              UTC , finish = 2025-09-03 11:49:09.20207481 UTC , thread_cap_info = ("ThreadId
| E   | |              150", 2, False)}
| E   | |              
| | F | |              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | F | |              , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | F | |              = 5 , total_length = 29} , self = 93 , parent = Nothing , duration = 0.905743871000
| | F | |              , status = Fail , start = 2025-09-03 11:49:08.404223933 UTC , finish =
| | F | |              2025-09-03 11:49:09.309967804 UTC , thread_cap_info = ("ThreadId 151",
| | F | |              0, False)}
| | F | |              
| | | S |              
| E |   |              
|   |   F              
|   F                  
E                      
