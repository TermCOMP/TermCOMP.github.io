last 443 length 1748
CNF 443 vars 1748 clauses
last 379 length 1461
CNF 379 vars 1461 clauses
last 786 length 3193
CNF 786 vars 3193 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1667, clauses: 5973
last 681 length 2864
last 1667 length 5973
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2379, clauses: 8765
CNF 681 vars 2864 clauses
CNF 1667 vars 5973 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4624, clauses: 18967
last 2379 length 8765
last 4624 length 18967
last 3621 length 16704
CNF 2379 vars 8765 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1667, clauses: 5973, status: Satisfied, time: 0.120710339s
last 4107 length 20962
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5963, clauses: 24517
CNF 4624 vars 18967 clauses
CNF 3621 vars 16704 clauses
last 8230 length 38625
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2379, clauses: 8765, status: Satisfied, time: 0.433188748s
last 5963 length 24517
last 10470 length 45357
last 8862 length 36231
CNF 4107 vars 20962 clauses
last 12772 length 53341
last 375 length 1466
last 349 length 1382
CNF 8230 vars 38625 clauses
CNF 10470 vars 45357 clauses
CNF 12772 vars 53341 clauses
last 593 length 2391
CNF 8862 vars 36231 clauses
last 561 length 2265
CNF 375 vars 1466 clauses
CNF 349 vars 1382 clauses
CNF 593 vars 2391 clauses
CNF 561 vars 2265 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1559, clauses: 5508
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4576, clauses: 18787
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14960, clauses: 58941
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2168, clauses: 7836
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5625, clauses: 23091
last 1559 length 5508
last 4576 length 18787
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17649, clauses: 72443
last 14960 length 58941
last 2168 length 7836
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42767, clauses: 179000
last 5625 length 23091
CNF 1559 vars 5508 clauses
CNF 4576 vars 18787 clauses
last 17649 length 72443
CNF 14960 vars 58941 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 44772, clauses: 187310
last 42767 length 179000
CNF 2168 vars 7836 clauses
CNF 5625 vars 23091 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1559, clauses: 5508, status: Satisfied, time: 0.799750379s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4576, clauses: 18787, status: Satisfied, time: 0.747405122s
CNF 17649 vars 72443 clauses
last 44772 length 187310
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2168, clauses: 7836, status: Satisfied, time: 0.764474307s
CNF 42767 vars 179000 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5625, clauses: 23091, status: Satisfied, time: 0.606244695s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14960, clauses: 58941, status: Satisfied, time: 1.02021148s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 5 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a, b] -> [b, b, a, a] {- Input 1 -}
  [b] -> [c, a] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [b, a] -> [b] {- Input 0 -}
  [c, a] -> [c] {- Input 0 -}
  [a, a, b] -> [b, b, a, a] {- Input 1 -}
  [b] -> [c, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [a, b] -> [b] {- Mirror (Input 0) -}
  [a, c] -> [c] {- Mirror (Input 0) -}
  [b, a, a] -> [a, a, b, b] {- Mirror (Input 1) -}
  [b] -> [a, c] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a, c] {- DP Nontop (Mirror (Input 2)) -}
  [b#] |-> [a#, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, a] |-> [a#, b, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a, c] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b#
  , Wk  / 9A 10A 10A - \
        | 9A 10A 10A - |
        | 9A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  2A -   \
        | -1A 0A -1A |
        \ -   -  0A  / )
  ( b
  , Wk  / 0A  - -   \
        | -1A - -1A |
        \ -   - 0A  / )
  ( c
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / 1A -2A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b] ->= [a, c] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(5/5,5)\Weight\EDG(2/5,4)\Matrix{\Arctic}{3}\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.021875855000
  min duration 0.012030781000
  total durat. 4.097688561000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 489}
    , self = 79
    , parent = Nothing
    , duration = 1.021875855000
    , status = Fail
    , start = 2025-09-03 10:52:29.283767762 UTC
    , finish = 2025-09-03 10:52:30.305643617 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.967105214000
  min duration 0.016375118000
  total durat. 4.201883791000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.040429531000
  min duration 2.040429531000
  total durat. 2.040429531000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 24}
    , self = 84
    , parent = Nothing
    , duration = 2.040429531000
    , status = Success
    , start = 2025-09-03 10:52:30.344674806 UTC
    , finish = 2025-09-03 10:52:32.385104337 UTC
    , thread_cap_info = ("ThreadId 140", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.789398651000
  min duration 0.715553994000
  total durat. 1.504952645000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.921353908000
  min duration 0.539331635000
  total durat. 3.334628985000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 24}
    , self = 82
    , parent = Nothing
    , duration = 1.921353908000
    , status = Success
    , start = 2025-09-03 10:52:30.444136886 UTC
    , finish = 2025-09-03 10:52:32.365490794 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F                    = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
F                    = 43} , self = 44 , parent = Nothing , duration = 0.115677783000 , status
F                    = Fail , start = 2025-09-03 10:52:28.981781679 UTC , finish = 2025-09-03
F                    10:52:29.097459462 UTC , thread_cap_info = ("ThreadId 78", 1, False)}
F                    
| S                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S                  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| S                  = 4 , total_length = 28} , self = 58 , parent = Nothing , duration = 0.539331635000
| S                  , status = Success , start = 2025-09-03 10:52:28.984371341 UTC , finish
| S                  = 2025-09-03 10:52:29.523702976 UTC , thread_cap_info = ("ThreadId 79",
| S                  1, False)}
| S                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F                = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                = 153} , self = 65 , parent = Nothing , duration = 0.805807286000 , status
| | F                = Fail , start = 2025-09-03 10:52:29.003479111 UTC , finish = 2025-09-03
| | F                10:52:29.809286397 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| | F                
| | | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S              = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | S              alphabet_size = 5 , total_length = 43} , self = 66 , parent = Nothing ,
| | | S              duration = 0.873943442000 , status = Success , start = 2025-09-03 10:52:29.009900587
| | | S              UTC , finish = 2025-09-03 10:52:29.883844029 UTC , thread_cap_info = ("ThreadId
| | | S              89", 1, False)}
| | | S              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F            = 153} , self = 73 , parent = Nothing , duration = 0.895302829000 , status
| | | | F            = Fail , start = 2025-09-03 10:52:29.028550519 UTC , finish = 2025-09-03
| | | | F            10:52:29.923853348 UTC , thread_cap_info = ("ThreadId 86", 3, False)}
| | | | F            
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | E          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | E          = 4 , total_length = 28} , self = 60 , parent = Nothing , duration = 0.715553994000
| | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:29.028556637
| | | | | E          UTC , finish = 2025-09-03 10:52:29.744110631 UTC , thread_cap_info = ("ThreadId
| | | | | E          88", 1, False)}
| | | | | E          
F | | | | |          
E | | | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E | | | | |          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
E | | | | |          = 5 , total_length = 43} , self = 68 , parent = Nothing , duration = 0.789398651000
E | | | | |          , status = Except "AsyncCancelled" , start = 2025-09-03 10:52:29.097492687
E | | | | |          UTC , finish = 2025-09-03 10:52:29.886891338 UTC , thread_cap_info = ("ThreadId
E | | | | |          93", 1, False)}
E | | | | |          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | | | F        = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | F        total_length = 366} , self = 75 , parent = Nothing , duration = 0.940892062000
| | | | | | F        , status = Fail , start = 2025-09-03 10:52:29.185138126 UTC , finish =
| | | | | | F        2025-09-03 10:52:30.126030188 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | F        1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | | | | F      = 37 , num_top_rules = 37 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | | | F      total_length = 366} , self = 74 , parent = Nothing , duration = 0.839203717000
| | | | | | | F      , status = Fail , start = 2025-09-03 10:52:29.185952293 UTC , finish =
| | | | | | | F      2025-09-03 10:52:30.02515601 UTC , thread_cap_info = ("ThreadId 106", 1,
| | | | | | | F      False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | | | | | F    = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | F    total_length = 489} , self = 79 , parent = Nothing , duration = 1.021875855000
| | | | | | | | F    , status = Fail , start = 2025-09-03 10:52:29.283767762 UTC , finish =
| | | | | | | | F    2025-09-03 10:52:30.305643617 UTC , thread_cap_info = ("ThreadId 110",
| | | | | | | | F    1, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | | | | | | F  = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | | | | | F  total_length = 489} , self = 76 , parent = Nothing , duration = 0.967105214000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 10:52:29.303449196 UTC , finish =
| | | | | | | | | F  2025-09-03 10:52:30.27055441 UTC , thread_cap_info = ("ThreadId 111", 1,
| | | | | | | | | F  False)}
| | | | | | | | | F  
| S | | | | | | | |  
|   | | | E | | | |  
| F | | |   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F | | |   | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F | | |   | | | |  = 24} , self = 78 , parent = Nothing , duration = 0.524551763000 , status
| F | | |   | | | |  = Fail , start = 2025-09-03 10:52:29.78108878 UTC , finish = 2025-09-03
| F | | |   | | | |  10:52:30.305640543 UTC , thread_cap_info = ("ThreadId 118", 1, False)}
| F | | |   | | | |  
| | | | | F | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | F | | | |  = 24} , self = 77 , parent = Nothing , duration = 0.500554319000 , status
| | | | | F | | | |  = Fail , start = 2025-09-03 10:52:29.783444958 UTC , finish = 2025-09-03
| | | | | F | | | |  10:52:30.283999277 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| | | | | F | | | |  
| | F | | | | | | |  
| |   S | | | | | |  
E |     | | | | | |  
F |     | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |     | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |     | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F |     | | | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
F |     | | | | | |  = 36} , self = 80 , parent = Nothing , duration = 0.752114152000 , status
F |     | | | | | |  = Fail , start = 2025-09-03 10:52:29.912261491 UTC , finish = 2025-09-03
F |     | | | | | |  10:52:30.664375643 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
F |     | | | | | |  
| | F   | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F   | | | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F   | | | | | |  = 36} , self = 81 , parent = Nothing , duration = 0.867664811000 , status
| | F   | | | | | |  = Fail , start = 2025-09-03 10:52:29.917556857 UTC , finish = 2025-09-03
| | F   | | | | | |  10:52:30.785221668 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | F   | | | | | |  
| | |   F | | | | |  
| | |     | | F | |  
| | |     | F   | |  
| | |     |     | F  
| | |     F     |    
| F |           |    
|   |           F    
| S |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| S |                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| S |                = 4 , total_length = 24} , self = 84 , parent = Nothing , duration = 2.040429531000
| S |                , status = Success , start = 2025-09-03 10:52:30.344674806 UTC , finish
| S |                = 2025-09-03 10:52:32.385104337 UTC , thread_cap_info = ("ThreadId 140",
| S |                1, False)}
| S |                
| | | S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S              = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | S              = 4 , total_length = 24} , self = 82 , parent = Nothing , duration = 1.921353908000
| | | S              , status = Success , start = 2025-09-03 10:52:30.444136886 UTC , finish
| | | S              = 2025-09-03 10:52:32.365490794 UTC , thread_cap_info = ("ThreadId 139",
| | | S              1, False)}
| | | S              
F | | |              
  | F |              
  |   S              
  S                  
