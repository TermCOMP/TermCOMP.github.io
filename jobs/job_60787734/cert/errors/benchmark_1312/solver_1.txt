last 2825 length 11949
CNF 2825 vars 11949 clauses
last 3506 length 14971
CNF 3506 vars 14971 clauses
last 5941 length 24329
CNF 5941 vars 24329 clauses
last 567 length 2230
CNF 567 vars 2230 clauses
last 474 length 1835
CNF 474 vars 1835 clauses
last 771 length 3220
last 859 length 3473
CNF 771 vars 3220 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1877, clauses: 6729
last 7621 length 32295
CNF 859 vars 3473 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5792, clauses: 23943
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2595, clauses: 9560
last 10157 length 46484
last 1877 length 6729
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12682, clauses: 48910
CNF 7621 vars 32295 clauses
last 14056 length 60314
last 5792 length 23943
last 2595 length 9560
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7137, clauses: 29531
CNF 10157 vars 46484 clauses
CNF 1877 vars 6729 clauses
last 12682 length 48910
CNF 14056 vars 60314 clauses
CNF 5792 vars 23943 clauses
CNF 2595 vars 9560 clauses
last 7137 length 29531
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1877, clauses: 6729, status: Satisfied, time: 0.584128472s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5792, clauses: 23943, status: Satisfied, time: 0.598663073s
CNF 12682 vars 48910 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2595, clauses: 9560, status: Satisfied, time: 0.66133196s
CNF 7137 vars 29531 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, b] -> [] {- Input 1 -}
  [a, b, b] -> [b, b, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [b, a] -> [] {- Mirror (Input 1) -}
  [b, b, a] -> [a, a, b, b] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [c, b] {- Mirror (Input 0) -}
  [a, b, a] -> [a] {- Mirror (Input 1) -}
  [b, b, a] -> [b] {- Mirror (Input 1) -}
  [c, b, a] -> [c] {- Mirror (Input 1) -}
  [b, b, a] -> [a, a, b, b] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b, c] {- Input 0 -}
  [a, b, a] -> [a] {- Input 1 -}
  [a, b, b] -> [b] {- Input 1 -}
  [a, b, c] -> [c] {- Input 1 -}
  [a, b, b] -> [b, b, a, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [a, b, b] ->= [b, b, a, a] {- DP Nontop (Input 2) -}
  [a#, b, b] |-> [a#] {- DP (Top 3) (Input 2) -}
  [a#, b, b] |-> [a#, a] {- DP (Top 2) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [a#] {- DP (Top 3) (Input 2) -}
  [a#, b, b] |-> [a#, a] {- DP (Top 2) (Input 2) -}
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [a, b, b] ->= [b, b, a, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A -   -2A \
        | 0A -1A 1A  |
        \ -  -   0A  / )
  ( b
  , Wk  / 0A 1A -  \
        | 0A -  1A |
        \ -  -  0A / )
  ( c
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
  ( a#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a] ->= [b, c] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, b, c] ->= [c] {- DP Nontop (Input 1) -}
  [a, b, b] ->= [b, b, a, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee\EDG(2/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7137, clauses: 29531, status: Satisfied, time: 0.726799517s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.384160585000
  min duration 0.018695770000
  total durat. 2.992145157000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 79
      , num_strict_rules = 52
      , num_top_rules = 52
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 481}
    , self = 64
    , parent = Nothing
    , duration = 1.384160585000
    , status = Fail
    , start = 2025-09-03 11:30:07.563030164 UTC
    , finish = 2025-09-03 11:30:08.947190749 UTC
    , thread_cap_info = ("ThreadId 85", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.222093202000
  min duration 0.015797065000
  total durat. 1.880706741000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 79
      , num_strict_rules = 52
      , num_top_rules = 52
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 481}
    , self = 63
    , parent = Nothing
    , duration = 1.222093202000
    , status = Fail
    , start = 2025-09-03 11:30:07.582397231 UTC
    , finish = 2025-09-03 11:30:08.804490433 UTC
    , thread_cap_info = ("ThreadId 86", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.382111511000
  min duration 1.382111511000
  total durat. 1.382111511000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 66
    , parent = Nothing
    , duration = 1.382111511000
    , status = Success
    , start = 2025-09-03 11:30:07.783097767 UTC
    , finish = 2025-09-03 11:30:09.165209278 UTC
    , thread_cap_info = ("ThreadId 110", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.395480901000
  min duration 1.202435362000
  total durat. 2.597916263000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 46}
    , self = 71
    , parent = Nothing
    , duration = 1.202435362000
    , status = Success
    , start = 2025-09-03 11:30:08.063085409 UTC
    , finish = 2025-09-03 11:30:09.265520771 UTC
    , thread_cap_info = ("ThreadId 114", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 31}
    , self = 65
    , parent = Nothing
    , duration = 1.395480901000
    , status = Success
    , start = 2025-09-03 11:30:07.768251918 UTC
    , finish = 2025-09-03 11:30:09.163732819 UTC
    , thread_cap_info = ("ThreadId 108", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = True}"
  total number 1
  max duration 1.876132822000
  min duration 1.876132822000
  total durat. 1.876132822000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 73
    , parent = Nothing
    , duration = 1.876132822000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:30:07.42699863 UTC
    , finish = 2025-09-03 11:30:09.303131452 UTC
    , thread_cap_info = ("ThreadId 22", 0, False)}
**************************************************
E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                  = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
E                  = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 12} , self
E                  = 73 , parent = Nothing , duration = 1.876132822000 , status = Except "AsyncCancelled"
E                  , start = 2025-09-03 11:30:07.42699863 UTC , finish = 2025-09-03 11:30:09.303131452
E                  UTC , thread_cap_info = ("ThreadId 22", 0, False)}
E                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                = 12} , self = 59 , parent = Nothing , duration = 0.540050950000 , status
| F                = Fail , start = 2025-09-03 11:30:07.427001603 UTC , finish = 2025-09-03
| F                11:30:07.967052553 UTC , thread_cap_info = ("ThreadId 46", 0, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 42 , parent = Nothing , duration = 0.128924354000 , status
| | F              = Fail , start = 2025-09-03 11:30:07.43254696 UTC , finish = 2025-09-03
| | F              11:30:07.561471314 UTC , thread_cap_info = ("ThreadId 69", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | F            = 23 , num_top_rules = 23 , num_weak_rules = 27 , alphabet_size = 12 ,
| | | F            total_length = 293} , self = 62 , parent = Nothing , duration = 0.944471078000
| | | F            , status = Fail , start = 2025-09-03 11:30:07.458579421 UTC , finish =
| | | F            2025-09-03 11:30:08.403050499 UTC , thread_cap_info = ("ThreadId 78", 1,
| | | F            False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | | F          = 23 , num_top_rules = 23 , num_weak_rules = 27 , alphabet_size = 12 ,
| | | | F          total_length = 293} , self = 57 , parent = Nothing , duration = 0.279682393000
| | | | F          , status = Fail , start = 2025-09-03 11:30:07.463966538 UTC , finish =
| | | | F          2025-09-03 11:30:07.743648931 UTC , thread_cap_info = ("ThreadId 79", 1,
| | | | F          False)}
| | | | F          
| | F | |          
| | F | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | F | |          = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F | |          total_length = 481} , self = 64 , parent = Nothing , duration = 1.384160585000
| | F | |          , status = Fail , start = 2025-09-03 11:30:07.563030164 UTC , finish =
| | F | |          2025-09-03 11:30:08.947190749 UTC , thread_cap_info = ("ThreadId 85", 1,
| | F | |          False)}
| | F | |          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 79 , num_strict_rules
| | | | | F        = 52 , num_top_rules = 52 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | | F        total_length = 481} , self = 63 , parent = Nothing , duration = 1.222093202000
| | | | | F        , status = Fail , start = 2025-09-03 11:30:07.582397231 UTC , finish =
| | | | | F        2025-09-03 11:30:08.804490433 UTC , thread_cap_info = ("ThreadId 86", 1,
| | | | | F        False)}
| | | | | F        
| | | | F |        
| | | | F |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F |        = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F |        = 46} , self = 60 , parent = Nothing , duration = 0.281965082000 , status
| | | | F |        = Fail , start = 2025-09-03 11:30:07.762459861 UTC , finish = 2025-09-03
| | | | F |        11:30:08.044424943 UTC , thread_cap_info = ("ThreadId 107", 0, False)}
| | | | F |        
| | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | S      = 4 , total_length = 31} , self = 65 , parent = Nothing , duration = 1.395480901000
| | | | | | S      , status = Success , start = 2025-09-03 11:30:07.768251918 UTC , finish
| | | | | | S      = 2025-09-03 11:30:09.163732819 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | S      0, False)}
| | | | | | S      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F    = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | F    = 46} , self = 61 , parent = Nothing , duration = 0.515893370000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:30:07.771771787 UTC , finish = 2025-09-03
| | | | | | | F    11:30:08.287665157 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | | | | | | F    
| | | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | S  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | | S  = 4 , total_length = 31} , self = 66 , parent = Nothing , duration = 1.382111511000
| | | | | | | | S  , status = Success , start = 2025-09-03 11:30:07.783097767 UTC , finish
| | | | | | | | S  = 2025-09-03 11:30:09.165209278 UTC , thread_cap_info = ("ThreadId 110",
| | | | | | | | S  0, False)}
| | | | | | | | S  
| F | | | | | | |  
|   | | F | | | |  
| S | |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |   | | | |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| S | |   | | | |  alphabet_size = 5 , total_length = 46} , self = 71 , parent = Nothing ,
| S | |   | | | |  duration = 1.202435362000 , status = Success , start = 2025-09-03 11:30:08.063085409
| S | |   | | | |  UTC , finish = 2025-09-03 11:30:09.265520771 UTC , thread_cap_info = ("ThreadId
| S | |   | | | |  114", 0, False)}
| S | |   | | | |  
| | | |   | | F |  
| | | F   | |   |  
| | |     F |   |  
| | F       |   |  
| |         S   |  
| |             S  
| S                
E                  
