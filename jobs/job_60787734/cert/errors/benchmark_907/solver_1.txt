last 981 length 4009
CNF 981 vars 4009 clauses
last 805 length 3438
last 793 length 3206
last 1698 length 7428
CNF 805 vars 3438 clauses
CNF 1698 vars 7428 clauses
CNF 793 vars 3206 clauses
last 652 length 2661
last 1763 length 7436
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2584, clauses: 9883
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6453, clauses: 26818
last 4631 length 19083
last 6700 length 28785
last 7261 length 30483
CNF 652 vars 2661 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2489, clauses: 9351
CNF 1763 vars 7436 clauses
last 2584 length 9883
last 6453 length 26818
CNF 4631 vars 19083 clauses
last 11352 length 50483
CNF 6700 vars 28785 clauses
last 2489 length 9351
CNF 7261 vars 30483 clauses
CNF 2584 vars 9883 clauses
CNF 6453 vars 26818 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6658, clauses: 27735
CNF 11352 vars 50483 clauses
CNF 2489 vars 9351 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2584, clauses: 9883, status: Satisfied, time: 0.243276719s
last 6658 length 27735
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6453, clauses: 26818, status: Satisfied, time: 0.218391085s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2489, clauses: 9351, status: Satisfied, time: 0.201172041s
CNF 6658 vars 27735 clauses
last 616 length 2448
last 823 length 3286
CNF 823 vars 3286 clauses
CNF 616 vars 2448 clauses
last 670 length 2730
last 612 length 2526
CNF 670 vars 2730 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2280, clauses: 8675
last 2280 length 8675
CNF 612 vars 2526 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5532, clauses: 22927
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8440
CNF 2280 vars 8675 clauses
last 5532 length 22927
last 2278 length 8440
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6320, clauses: 26319
last 6320 length 26319
CNF 5532 vars 22927 clauses
CNF 2278 vars 8440 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2280, clauses: 8675, status: Satisfied, time: 0.108223379s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5532, clauses: 22927, status: Satisfied, time: 0.08265413s
CNF 6320 vars 26319 clauses
last 606 length 2531
last 474 length 1951
CNF 606 vars 2531 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8440, status: Unsatisfied, time: 0.101520829s
CNF 474 vars 1951 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1414, clauses: 5074
last 1414 length 5074
CNF 1414 vars 5074 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1414, clauses: 5074, status: Satisfied, time: 0.063291893s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9986, clauses: 41004
last 9986 length 41004
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3916, clauses: 16115
last 3916 length 16115
CNF 3916 vars 16115 clauses
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       DP
SRS with 7 strict rules and 2 weak rules on 4 letters       EDG
SRS with 7 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 2 weak rules on 4 letters       EDG
SRS with 6 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 2 weak rules on 4 letters       weights
SRS with 1 strict rules and 2 weak rules on 3 letters       EDG
SRS with 1 strict rules and 2 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a] -> [a, b, b] {- Input 0 -}
  [b, b] -> [b, a, a, a] {- Input 1 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [b#, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [b#, a, a, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [b#, b] |-> [b#, a, a, a] {- DP (Top 0) (Input 1) -}
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 3A 3A - \
        | 1A 3A 3A - |
        | 1A 3A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 18A 18A 18A - \
        | 18A 18A 18A - |
        | 18A 18A 18A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b] {- DP (Top 0) (Input 0) -}
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 23A 24A 24A - \
        | 23A 24A 24A - |
        | 23A 24A 24A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b] {- DP Nontop (Input 0) -}
  [b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  EDG

**************************************************
skeleton: (2,2)\Deepee\EDG(7/2,4)\Matrix{\Arctic}{3}\EDG(6/2,4)\Matrix{\Arctic}{3}(3/2,4)\Weight\EDG(1/2,3)\Matrix{\Arctic}{3}(0/2,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.610452775000
  min duration 0.018581848000
  total durat. 1.719476268000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.575060820000
  min duration 0.014209921000
  total durat. 2.125123047000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.551787963000
  min duration 0.100533896000
  total durat. 1.206566670000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.595357999000
  min duration 0.106452296000
  total durat. 1.333812585000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.160266083000
  min duration 1.160266083000
  total durat. 1.160266083000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 13}
    , self = 100
    , parent = Nothing
    , duration = 1.160266083000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:28:49.067280205 UTC
    , finish = 2025-09-03 13:28:50.227546288 UTC
    , thread_cap_info = ("ThreadId 104", 2, False)}
**************************************************
F                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                        = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
F                        = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 13} , self
F                        = 58 , parent = Nothing , duration = 0.182476566000 , status = Fail , start
F                        = 2025-09-03 13:28:49.002439676 UTC , finish = 2025-09-03 13:28:49.184916242
F                        UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                        
| F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F                      = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                      = 68} , self = 59 , parent = Nothing , duration = 0.181042170000 , status
| F                      = Fail , start = 2025-09-03 13:28:49.007791019 UTC , finish = 2025-09-03
| F                      13:28:49.188833189 UTC , thread_cap_info = ("ThreadId 82", 1, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | F                    = 36 , num_top_rules = 36 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F                    = 308} , self = 65 , parent = Nothing , duration = 0.575060820000 , status
| | F                    = Fail , start = 2025-09-03 13:28:49.013844055 UTC , finish = 2025-09-03
| | F                    13:28:49.588904875 UTC , thread_cap_info = ("ThreadId 93", 0, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                  = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                  = 68} , self = 62 , parent = Nothing , duration = 0.422641071000 , status
| | | F                  = Fail , start = 2025-09-03 13:28:49.026563357 UTC , finish = 2025-09-03
| | | F                  13:28:49.449204428 UTC , thread_cap_info = ("ThreadId 84", 1, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | F                = 36 , num_top_rules = 36 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | F                = 308} , self = 72 , parent = Nothing , duration = 0.610452775000 , status
| | | | F                = Fail , start = 2025-09-03 13:28:49.030563695 UTC , finish = 2025-09-03
| | | | F                13:28:49.64101647 UTC , thread_cap_info = ("ThreadId 92", 0, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F              = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F              = 41} , self = 60 , parent = Nothing , duration = 0.295650114000 , status
| | | | | F              = Fail , start = 2025-09-03 13:28:49.032954101 UTC , finish = 2025-09-03
| | | | | F              13:28:49.328604215 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F            = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F            = 41} , self = 61 , parent = Nothing , duration = 0.399423259000 , status
| | | | | | F            = Fail , start = 2025-09-03 13:28:49.039744011 UTC , finish = 2025-09-03
| | | | | | F            13:28:49.43916727 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | | | F            
| | | | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S          = 9 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 2 , alphabet_size
| | | | | | | S          = 4 , total_length = 49} , self = 66 , parent = Nothing , duration = 0.595357999000
| | | | | | | S          , status = Success , start = 2025-09-03 13:28:49.04282309 UTC , finish
| | | | | | | S          = 2025-09-03 13:28:49.638181089 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | S          3, False)}
| | | | | | | S          
| | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | E        = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E        = 13} , self = 100 , parent = Nothing , duration = 1.160266083000 , status
| | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 13:28:49.067280205 UTC ,
| | | | | | | | E        finish = 2025-09-03 13:28:50.227546288 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E        104", 2, False)}
| | | | | | | | E        
| | | | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | | E      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 2 , alphabet_size
| | | | | | | | | E      = 4 , total_length = 49} , self = 68 , parent = Nothing , duration = 0.551787963000
| | | | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:28:49.088410259
| | | | | | | | | E      UTC , finish = 2025-09-03 13:28:49.640198222 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E      108", 3, False)}
| | | | | | | | | E      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | | | F    = 28 , num_top_rules = 28 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | | | F    = 268} , self = 64 , parent = Nothing , duration = 0.479265277000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-03 13:28:49.107406605 UTC , finish = 2025-09-03
| | | | | | | | | | F    13:28:49.586671882 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | | | | F  = 28 , num_top_rules = 28 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | | | | F  = 268} , self = 63 , parent = Nothing , duration = 0.442065200000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-03 13:28:49.127010062 UTC , finish = 2025-09-03
| | | | | | | | | | | F  13:28:49.569075262 UTC , thread_cap_info = ("ThreadId 107", 0, False)}
| | | | | | | | | | | F  
F | | | | | | | | | | |  
  F | | | | | | | | | |  
    | | | F | | | | | |  
S   | | |   | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | |   | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | |   | | | | | |  = 7 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
S   | | |   | | | | | |  = 4 , total_length = 41} , self = 69 , parent = Nothing , duration = 0.303474461000
S   | | |   | | | | | |  , status = Success , start = 2025-09-03 13:28:49.337181872 UTC , finish
S   | | |   | | | | | |  = 2025-09-03 13:28:49.640656333 UTC , thread_cap_info = ("ThreadId 109",
S   | | |   | | | | | |  3, False)}
S   | | |   | | | | | |  
|   | | |   F | | | | |  
| E | | |     | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | |     | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | |     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | |     | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E | | |     | | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| E | | |     | | | | |  = 4 , total_length = 41} , self = 76 , parent = Nothing , duration = 0.236655783000
| E | | |     | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:28:49.439196697
| E | | |     | | | | |  UTC , finish = 2025-09-03 13:28:49.67585248 UTC , thread_cap_info = ("ThreadId
| E | | |     | | | | |  115", 3, False)}
| E | | |     | | | | |  
| | | F |     | | | | |  
| | |   |     | | | | F  
| | |   |     | | | F    
| | F   |     | | |      
| |     |     S | |      
| |     |       | E      
S |     |       |        
  |     F       |        
  E             |        
S               |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S               |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S               |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S               |        = 8 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
S               |        = 4 , total_length = 43} , self = 85 , parent = Nothing , duration = 0.328527829000
S               |        , status = Success , start = 2025-09-03 13:28:49.681769368 UTC , finish
S               |        = 2025-09-03 13:28:50.010297197 UTC , thread_cap_info = ("ThreadId 138",
S               |        3, False)}
S               |        
| E             |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E             |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E             |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E             |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E             |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E             |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E             |        , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
| E             |        = 4 , total_length = 43} , self = 87 , parent = Nothing , duration = 0.317589028000
| E             |        , status = Except "AsyncCancelled" , start = 2025-09-03 13:28:49.693019536
| E             |        UTC , finish = 2025-09-03 13:28:50.010608564 UTC , thread_cap_info = ("ThreadId
| E             |        141", 3, False)}
| E             |        
| | F           |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F           |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F           |        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F           |        = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F           |        = 35} , self = 84 , parent = Nothing , duration = 0.158399686000 , status
| | F           |        = Fail , start = 2025-09-03 13:28:49.726686105 UTC , finish = 2025-09-03
| | F           |        13:28:49.885085791 UTC , thread_cap_info = ("ThreadId 140", 3, False)}
| | F           |        
| | | F         |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F         |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F         |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F         |        = 6 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| | | F         |        = 4 , total_length = 35} , self = 93 , parent = Nothing , duration = 0.280260550000
| | | F         |        , status = Fail , start = 2025-09-03 13:28:49.786581448 UTC , finish =
| | | F         |        2025-09-03 13:28:50.066841998 UTC , thread_cap_info = ("ThreadId 145",
| | | F         |        3, False)}
| | | F         |        
| | F |         |        
S |   |         |        
  E   |         |        
S     |         |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S     |         |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |         |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |         |        = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
S     |         |        = 3 , total_length = 20} , self = 95 , parent = Nothing , duration = 0.106452296000
S     |         |        , status = Success , start = 2025-09-03 13:28:50.054935745 UTC , finish
S     |         |        = 2025-09-03 13:28:50.161388041 UTC , thread_cap_info = ("ThreadId 159",
S     |         |        3, False)}
S     |         |        
|     F         |        
| E             |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E             |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E             |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E             |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E             |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E             |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E             |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| E             |        = 3 , total_length = 20} , self = 97 , parent = Nothing , duration = 0.100533896000
| E             |        , status = Except "AsyncCancelled" , start = 2025-09-03 13:28:50.107339377
| E             |        UTC , finish = 2025-09-03 13:28:50.207873273 UTC , thread_cap_info = ("ThreadId
| E             |        162", 3, False)}
| E             |        
S |             |        
  E             |        
                E        
