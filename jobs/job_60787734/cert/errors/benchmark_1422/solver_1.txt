last 3745 length 18500
CNF 3745 vars 18500 clauses
last 1335 length 5655
last 1567 length 6957
CNF 1335 vars 5655 clauses
CNF 1567 vars 6957 clauses
last 845 length 3551
last 4010 length 17816
CNF 4010 vars 17816 clauses
CNF 845 vars 3551 clauses
last 1098 length 4736
CNF 1098 vars 4736 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2844, clauses: 10649
last 2844 length 10649
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2122, clauses: 7714
last 2122 length 7714
last 5062 length 22777
CNF 5062 vars 22777 clauses
CNF 2122 vars 7714 clauses
CNF 2844 vars 10649 clauses
last 6523 length 31161
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9826, clauses: 41287
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2122, clauses: 7714, status: Unsatisfied, time: 0.208703579s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6306, clauses: 23513
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8234, clauses: 34604
last 6986 length 35190
last 6882 length 31456
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2844, clauses: 10649, status: Satisfied, time: 0.308511547s
last 9826 length 41287
CNF 6523 vars 31161 clauses
last 6306 length 23513
last 8234 length 34604
CNF 6986 vars 35190 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4941, clauses: 20529
CNF 6882 vars 31456 clauses
**************************************************CNF 6306 vars 23513 clauses
last 4941 length 20529

CNF 8234 vars 34604 clauses
CNF 4941 vars 20529 clauses
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 10 strict rules and 3 weak rules on 4 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, b, a] -> [a, b, a, a] {- Input 0 -}
  [a, a, a, a] -> [b, a, a, b] {- Input 1 -}
  [a, a, a, b] -> [b, b, b, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, b, a] ->= [a, b, a, a] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, b, b] {- DP Nontop (Input 2) -}
  [a#, a, a, a] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [a#, a, a, a] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [a#, a, a, a] |-> [b#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, b] |-> [b#, b] {- DP (Top 2) (Input 2) -}
  [a#, a, a, b] |-> [b#, b, b] {- DP (Top 1) (Input 2) -}
  [a#, a, a, b] |-> [b#, b, b, b] {- DP (Top 0) (Input 2) -}
  [b#, b, b, a] |-> [a#, a] {- DP (Top 2) (Input 0) -}
  [b#, b, b, a] |-> [a#, b, a, a] {- DP (Top 0) (Input 0) -}
  [b#, b, b, a] |-> [b#, a, a] {- DP (Top 1) (Input 0) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, b, a] ->= [a, b, a, a] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, b, b] {- DP Nontop (Input 2) -}
  [a#, a, a, a] |-> [b#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, b] |-> [b#, b, b, b] {- DP (Top 0) (Input 2) -}
  [b#, b, b, a] |-> [a#, b, a, a] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [b#, a, a, b] {- DP (Top 0) (Input 1) -}
  [b#, b, b, a] |-> [a#, b, a, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a, b] |-> [b#, b, b, b] {- DP (Top 0) (Input 2) -}
  [b, b, b, a] ->= [a, b, a, a] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, b, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 6A 7A 7A - \
        | 6A 7A 7A - |
        | 6A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [b#, a, a, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, b] |-> [b#, b, b, b] {- DP (Top 0) (Input 2) -}
  [b, b, b, a] ->= [a, b, a, a] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, b, b] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, b, a] ->= [a, b, a, a] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, a, a, b] {- DP Nontop (Input 1) -}
  [a, a, a, b] ->= [b, b, b, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(10/3,4)\Weight\EDG(3/3,4)\Matrix{\Arctic}{3}(2/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.498342614000
  min duration 0.065919120000
  total durat. 1.128715543000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.865638747000
  min duration 0.046872954000
  total durat. 1.227025398000
**************************************************
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules
F                = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 24} , self
F                = 55 , parent = Nothing , duration = 0.219630576000 , status = Fail , start
F                = 2025-09-03 11:52:01.623930501 UTC , finish = 2025-09-03 11:52:01.843561077
F                UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F              = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 120} , self = 60 , parent = Nothing , duration = 0.419087575000 , status
| F              = Fail , start = 2025-09-03 11:52:01.630654418 UTC , finish = 2025-09-03
| F              11:52:02.049741993 UTC , thread_cap_info = ("ThreadId 57", 2, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F            = 120} , self = 37 , parent = Nothing , duration = 0.111892786000 , status
| | F            = Fail , start = 2025-09-03 11:52:01.630658868 UTC , finish = 2025-09-03
| | F            11:52:01.742551654 UTC , thread_cap_info = ("ThreadId 59", 2, False)}
| | F            
| | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E          = 24} , self = 71 , parent = Nothing , duration = 0.982849151000 , status
| | | E          = Except "AsyncCancelled" , start = 2025-09-03 11:52:01.635923095 UTC ,
| | | E          finish = 2025-09-03 11:52:02.618772246 UTC , thread_cap_info = ("ThreadId
| | | E          64", 0, False)}
| | | E          
| | F |          
| | F |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F |          = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | F |          = 140} , self = 63 , parent = Nothing , duration = 0.498342614000 , status
| | F |          = Fail , start = 2025-09-03 11:52:01.748659314 UTC , finish = 2025-09-03
| | F |          11:52:02.247001928 UTC , thread_cap_info = ("ThreadId 91", 0, False)}
| | F |          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F        = 140} , self = 67 , parent = Nothing , duration = 0.865638747000 , status
| | | | F        = Fail , start = 2025-09-03 11:52:01.74866088 UTC , finish = 2025-09-03
| | | | F        11:52:02.614299627 UTC , thread_cap_info = ("ThreadId 92", 0, False)}
| | | | F        
F | | | |        
S | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |        = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
S | | | |        = 4 , total_length = 48} , self = 65 , parent = Nothing , duration = 0.721070254000
S | | | |        , status = Success , start = 2025-09-03 11:52:01.870089181 UTC , finish
S | | | |        = 2025-09-03 11:52:02.591159435 UTC , thread_cap_info = ("ThreadId 104",
S | | | |        1, False)}
S | | | |        
| | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | E      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | E      = 4 , total_length = 48} , self = 68 , parent = Nothing , duration = 0.729646918000
| | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 11:52:01.884684312
| | | | | E      UTC , finish = 2025-09-03 11:52:02.61433123 UTC , thread_cap_info = ("ThreadId
| | | | | E      105", 1, False)}
| | | | | E      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | F    = 32} , self = 61 , parent = Nothing , duration = 0.145366234000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:52:01.924158901 UTC , finish = 2025-09-03
| | | | | | F    11:52:02.069525135 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F  = 32} , self = 62 , parent = Nothing , duration = 0.202620911000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:52:01.936958841 UTC , finish = 2025-09-03
| | | | | | | F  11:52:02.139579752 UTC , thread_cap_info = ("ThreadId 107", 1, False)}
| | | | | | | F  
| F | | | | | |  
|   | | | | F |  
| F | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | |   |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| F | | | |   |  = 3 , total_length = 32} , self = 64 , parent = Nothing , duration = 0.351909076000
| F | | | |   |  , status = Fail , start = 2025-09-03 11:52:02.104133764 UTC , finish =
| F | | | |   |  2025-09-03 11:52:02.45604284 UTC , thread_cap_info = ("ThreadId 111", 1,
| F | | | |   |  False)}
| F | | | |   |  
| | | | | |   F  
| | F | | |      
| F   | | |      
S     | | |      
      | F |      
      |   E      
      E          
