YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l5, l6, (undef1 <= arg1) /\ (arg2 > 0) /\ (arg1 > 0) /\ (undef1 > 0), par{arg1 -> undef1, arg2 -> 0, arg3 -> undef3}>
<l5, l6, (undef5 > ~(1)) /\ (arg2 > 0) /\ (undef4 <= arg1) /\ (arg1 > 0) /\ (undef4 > 0), par{arg1 -> undef4, arg2 -> undef5, arg3 -> undef6}>
<l6, l2, (arg1 >= undef7) /\ (undef10 > 1) /\ (arg1 > 0) /\ (undef7 > 0), par{arg1 -> undef7, arg3 -> 0}>
<l6, l2, (undef14 > 1) /\ (undef13 > ~(1)) /\ (undef11 <= arg1) /\ (arg1 > 0) /\ (undef11 > 0), par{arg1 -> undef11, arg3 -> undef13}>
<l5, l3, (arg1 > 0) /\ (0 = arg2), par{arg1 -> 0, arg2 -> 0, arg3 -> 0}>
<l6, l3, (arg1 > 0), par{arg1 -> 0, arg3 -> 0}>
<l2, l3, (arg1 > 0) /\ (undef24 > 1), par{arg1 -> arg3}>
<l3, l4, (arg2 > 1) /\ (arg1 > 1) /\ (arg2 > undef28) /\ (arg1 <= arg2) /\ (arg1 = arg3), par{arg3 -> arg1}>
<l4, l3, (arg2 > 1) /\ (arg1 > 1) /\ (arg1 <= arg2) /\ (arg2 > undef30) /\ (arg1 > (arg2 - (arg1 * undef30))) /\ ((arg2 - (arg1 * undef30)) >= 0) /\ (arg1 = arg3), par{arg2 -> undef30, arg3 -> arg1}>
<l1, l5, true, par{arg1 -> undef32, arg2 -> undef33, arg3 -> undef34}>

Fresh variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef10, undef11, undef13, undef14, undef24, undef28, undef30, undef32, undef33, undef34, 

Undef variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef10, undef11, undef13, undef14, undef24, undef28, undef30, undef32, undef33, undef34, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (undef1 <= undef32) /\ (undef33 > 0) /\ (undef32 > 0) /\ (undef1 > 0) /\ (undef1 >= undef7) /\ (undef10 > 1) /\ (undef1 > 0) /\ (undef7 > 0) /\ (undef7 > 0) /\ (undef24 > 1), par{arg1 -> 0, arg2 -> 0, arg3 -> 0}>
<l0, l3, (undef1 <= undef32) /\ (undef33 > 0) /\ (undef32 > 0) /\ (undef1 > 0) /\ (undef14 > 1) /\ (undef13 > ~(1)) /\ (undef11 <= undef1) /\ (undef1 > 0) /\ (undef11 > 0) /\ (undef11 > 0) /\ (undef24 > 1), par{arg1 -> undef13, arg2 -> 0, arg3 -> undef13}>
<l0, l3, (undef1 <= undef32) /\ (undef33 > 0) /\ (undef32 > 0) /\ (undef1 > 0) /\ (undef1 > 0), par{arg1 -> 0, arg2 -> 0, arg3 -> 0}>
<l0, l3, (undef5 > ~(1)) /\ (undef33 > 0) /\ (undef4 <= undef32) /\ (undef32 > 0) /\ (undef4 > 0) /\ (undef4 >= undef7) /\ (undef10 > 1) /\ (undef4 > 0) /\ (undef7 > 0) /\ (undef7 > 0) /\ (undef24 > 1), par{arg1 -> 0, arg2 -> undef5, arg3 -> 0}>
<l0, l3, (undef5 > ~(1)) /\ (undef33 > 0) /\ (undef4 <= undef32) /\ (undef32 > 0) /\ (undef4 > 0) /\ (undef14 > 1) /\ (undef13 > ~(1)) /\ (undef11 <= undef4) /\ (undef4 > 0) /\ (undef11 > 0) /\ (undef11 > 0) /\ (undef24 > 1), par{arg1 -> undef13, arg2 -> undef5, arg3 -> undef13}>
<l0, l3, (undef5 > ~(1)) /\ (undef33 > 0) /\ (undef4 <= undef32) /\ (undef32 > 0) /\ (undef4 > 0) /\ (undef4 > 0), par{arg1 -> 0, arg2 -> undef5, arg3 -> 0}>
<l0, l3, (undef32 > 0) /\ (0 = undef33), par{arg1 -> 0, arg2 -> 0, arg3 -> 0}>
<l3, l3, (arg2 > 1) /\ (arg1 > 1) /\ (arg2 > undef28) /\ (arg1 <= arg2) /\ (arg1 = arg3) /\ (arg2 > 1) /\ (arg1 > 1) /\ (arg1 <= arg2) /\ (arg2 > undef30) /\ (arg1 = arg1), par{arg2 -> undef30, arg3 -> arg1}>

Fresh variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef10, undef11, undef13, undef14, undef24, undef28, undef30, undef32, undef33, undef34, 

Undef variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef10, undef11, undef13, undef14, undef24, undef28, undef30, undef32, undef33, undef34, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, arg1 <= arg2 /\ 1 + undef28 <= arg2 /\ 1 + undef30 <= arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ arg1 = arg3, {arg2 -> undef30, arg3 -> arg1, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l3, undef1 <= undef32 /\ undef7 <= undef1 /\ 1 <= undef1 /\ 1 <= undef7 /\ 1 <= undef32 /\ 1 <= undef33 /\ 2 <= undef10 /\ 2 <= undef24, {arg1 -> 0, arg2 -> 0, arg3 -> 0, rest remain the same}>
<l0, l3, undef1 <= undef32 /\ undef11 <= undef1 /\ 0 <= undef13 /\ 1 <= undef1 /\ 1 <= undef11 /\ 1 <= undef32 /\ 1 <= undef33 /\ 2 <= undef14 /\ 2 <= undef24, {arg1 -> undef13, arg2 -> 0, arg3 -> undef13, rest remain the same}>
<l0, l3, undef1 <= undef32 /\ 1 <= undef1 /\ 1 <= undef32 /\ 1 <= undef33, {arg1 -> 0, arg2 -> 0, arg3 -> 0, rest remain the same}>
<l0, l3, undef4 <= undef32 /\ undef7 <= undef4 /\ 0 <= undef5 /\ 1 <= undef4 /\ 1 <= undef7 /\ 1 <= undef32 /\ 1 <= undef33 /\ 2 <= undef10 /\ 2 <= undef24, {arg1 -> 0, arg2 -> undef5, arg3 -> 0, rest remain the same}>
<l0, l3, undef4 <= undef32 /\ undef11 <= undef4 /\ 0 <= undef5 /\ 0 <= undef13 /\ 1 <= undef4 /\ 1 <= undef11 /\ 1 <= undef32 /\ 1 <= undef33 /\ 2 <= undef14 /\ 2 <= undef24, {arg1 -> undef13, arg2 -> undef5, arg3 -> undef13, rest remain the same}>
<l0, l3, undef4 <= undef32 /\ 0 <= undef5 /\ 1 <= undef4 /\ 1 <= undef32 /\ 1 <= undef33, {arg1 -> 0, arg2 -> undef5, arg3 -> 0, rest remain the same}>
<l0, l3, 1 <= undef32 /\ undef33 = 0, {arg1 -> 0, arg2 -> 0, arg3 -> 0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Detected abstraction incompatible with non-termination check.
Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002999

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000620s
[33mRanking function: [36m-arg1 + arg2[0m
New Graphs: 
[32mProgram Terminates[0m

