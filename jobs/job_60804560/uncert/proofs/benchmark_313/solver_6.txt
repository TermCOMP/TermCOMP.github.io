YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (arg2 > 0) /\ (undef1 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> 0, arg3 -> undef3}>
<l2, l2, (undef5 > arg2) /\ (arg1 > 1) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef5, arg3 -> undef6}>
<l2, l2, (arg1 > 1), par{arg1 -> (arg1 - 1), arg2 -> 1, arg3 -> undef9}>
<l2, l4, (undef10 > 1) /\ (undef11 > 3) /\ (arg1 < 2), par{arg1 -> undef10, arg2 -> undef11, arg3 -> 0}>
<l4, l4, ((undef13 - 1) <= arg2) /\ ((undef14 + 1) <= arg2) /\ (arg1 > 1) /\ (arg2 > 0) /\ (undef13 > 1) /\ (undef14 > ~(1)) /\ ((arg3 + 2) <= arg1) /\ ((undef15 + 2) <= arg2), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>
<l1, l3, true, par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18}>

Fresh variables:
undef1, undef3, undef5, undef6, undef9, undef10, undef11, undef13, undef14, undef15, undef16, undef17, undef18, 

Undef variables:
undef1, undef3, undef5, undef6, undef9, undef10, undef11, undef13, undef14, undef15, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = 0) /\ (arg3 = undef3) /\ (undef17 > 0) /\ (undef1 > ~(1)) /\ (undef16 > 0)>
<l2, l2, (undef5 > arg2) /\ (arg1 > 1) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef5, arg3 -> undef6}>
<l2, l2, (arg1 > 1), par{arg1 -> (arg1 - 1), arg2 -> 1, arg3 -> undef9}>
<l2, l4, (undef10 > 1) /\ (undef11 > 3) /\ (arg1 < 2), par{arg1 -> undef10, arg2 -> undef11, arg3 -> 0}>
<l4, l4, ((undef13 - 1) <= arg2) /\ ((undef14 + 1) <= arg2) /\ (arg1 > 1) /\ (arg2 > 0) /\ (undef13 > 1) /\ (undef14 > ~(1)) /\ ((arg3 + 2) <= arg1) /\ ((undef15 + 2) <= arg2), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>

Fresh variables:
undef1, undef3, undef5, undef6, undef9, undef10, undef11, undef13, undef14, undef15, undef16, undef17, undef18, 

Undef variables:
undef1, undef3, undef5, undef6, undef9, undef10, undef11, undef13, undef14, undef15, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg2 <= undef5 /\ 1 <= arg2 /\ 2 <= arg1, {arg1 -> -1 + arg1, arg2 -> undef5, arg3 -> undef6, rest remain the same}>
<l2, l2, 2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1, arg3 -> undef9, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 2:
Transitions:
<l4, l4, 0 <= undef14 /\ 1 <= arg2 /\ 1 + undef14 <= arg2 /\ undef13 <= 1 + arg2 /\ 2 <= arg1 /\ 2 + arg3 <= arg1 /\ 2 + undef15 <= arg2 /\ 2 <= undef13, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef1 /\ 1 <= undef16 /\ 1 <= undef17 /\ arg1 = undef1 /\ arg2 = 0 /\ arg3 = undef3, {all remain the same}>

Graph 2
<l2, l4, arg1 <= 1 /\ 2 <= undef10 /\ 4 <= undef11, {arg1 -> undef10, arg2 -> undef11, arg3 -> 0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002853

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000706s
[33mRanking function: [36m-2 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001528

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000714s
[33mRanking function: [36m-1 + arg2[0m
New Graphs: 
[32mProgram Terminates[0m

