YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l5, (undef1 <= arg2) /\ (arg1 > 0) /\ (arg2 > 3) /\ (undef1 > 3) /\ ((arg5 + 2) <= arg2) /\ (0 = arg4), par{arg1 -> undef1, arg2 -> undef2, arg3 -> 0, arg4 -> arg5, arg5 -> undef5}>
<l2, l5, (arg1 > 0) /\ (undef6 > 3), par{arg1 -> undef6, arg3 -> 0, arg4 -> undef9, arg5 -> undef10}>
<l5, l6, (undef16 > 0) /\ (undef16 < arg2) /\ (undef17 > ~(1)) /\ ((undef11 + 3) <= arg1) /\ (arg1 > 3) /\ (undef11 > 0) /\ (undef12 > 3) /\ ((arg4 + 2) <= arg1) /\ (0 = arg3), par{arg1 -> undef11, arg2 -> undef12, arg3 -> undef13, arg4 -> undef14, arg5 -> arg4}>
<l6, l7, (undef18 <= arg2) /\ (arg3 > 0) /\ (arg1 > 0) /\ (arg2 > 3) /\ (undef18 > 3) /\ ((arg5 + 2) <= arg2) /\ ((arg4 + 4) <= arg2), par{arg1 -> undef18, arg2 -> arg3, arg3 -> undef20, arg4 -> undef21, arg5 -> undef22}>
<l2, l4, (undef24 <= arg1) /\ (arg2 > ~(1)) /\ (arg1 > 0) /\ (undef24 > 0), par{arg1 -> 1, arg2 -> undef24, arg3 -> undef25, arg4 -> undef26, arg5 -> undef27}>
<l5, l4, (undef33 > 0) /\ (undef33 < arg2) /\ (undef28 > ~(1)) /\ (arg2 > ~(1)) /\ ((undef29 + 3) <= arg1) /\ (arg1 > 3) /\ (undef29 > 0) /\ ((arg4 + 2) <= arg1) /\ (0 = arg3), par{arg1 -> undef28, arg2 -> undef29, arg3 -> undef30, arg4 -> undef31, arg5 -> undef32}>
<l4, l4, (undef39 < undef40) /\ (arg1 > 1) /\ (undef39 > ~(1)) /\ (undef41 > ~(1)) /\ (undef40 > ~(1)) /\ ((arg1 - 1) < arg1) /\ (undef35 <= arg2) /\ (arg2 > 0) /\ (undef35 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef35, arg3 -> undef36, arg4 -> undef37, arg5 -> undef38}>
<l7, l7, ((undef42 + 1) <= arg1) /\ (arg2 > 0) /\ (arg1 > 0) /\ (undef42 > ~(1)), par{arg1 -> undef42, arg3 -> undef44, arg4 -> undef45, arg5 -> undef46}>
<l1, l2, true, par{arg1 -> undef47, arg2 -> undef48, arg3 -> undef49, arg4 -> undef50, arg5 -> undef51}>

Fresh variables:
undef1, undef2, undef5, undef6, undef9, undef10, undef11, undef12, undef13, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, 

Undef variables:
undef1, undef2, undef5, undef6, undef9, undef10, undef11, undef12, undef13, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l7, (undef47 > 0) /\ (undef6 > 3) /\ (undef16 > 0) /\ (undef16 < undef48) /\ (undef17 > ~(1)) /\ ((undef11 + 3) <= undef6) /\ (undef6 > 3) /\ (undef11 > 0) /\ (undef12 > 3) /\ ((undef9 + 2) <= undef6) /\ (0 = 0) /\ (undef18 <= undef12) /\ (undef13 > 0) /\ (undef11 > 0) /\ (undef12 > 3) /\ (undef18 > 3) /\ ((undef9 + 2) <= undef12) /\ ((undef14 + 4) <= undef12), par{arg1 -> undef18, arg2 -> undef13, arg4 -> undef21, arg5 -> undef22}>
<l0, l4, (undef47 > 0) /\ (undef6 > 3) /\ (undef33 > 0) /\ (undef33 < undef48) /\ (undef28 > ~(1)) /\ (undef48 > ~(1)) /\ ((undef29 + 3) <= undef6) /\ (undef6 > 3) /\ (undef29 > 0) /\ ((undef9 + 2) <= undef6) /\ (0 = 0), par{arg1 -> undef28, arg2 -> undef29, arg4 -> undef31, arg5 -> undef32}>
<l0, l4, (undef24 <= undef47) /\ (undef48 > ~(1)) /\ (undef47 > 0) /\ (undef24 > 0), par{arg1 -> 1, arg2 -> undef24, arg4 -> undef26, arg5 -> undef27}>
<l4, l4, (undef39 < undef40) /\ (arg1 > 1) /\ (undef39 > ~(1)) /\ (undef41 > ~(1)) /\ (undef40 > ~(1)) /\ ((arg1 - 1) < arg1) /\ (undef35 <= arg2) /\ (arg2 > 0) /\ (undef35 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef35, arg4 -> undef37, arg5 -> undef38}>
<l7, l7, ((undef42 + 1) <= arg1) /\ (arg2 > 0) /\ (arg1 > 0) /\ (undef42 > ~(1)), par{arg1 -> undef42, arg4 -> undef45, arg5 -> undef46}>

Fresh variables:
undef1, undef2, undef5, undef6, undef9, undef10, undef11, undef12, undef13, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, 

Undef variables:
undef1, undef2, undef5, undef6, undef9, undef10, undef11, undef12, undef13, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, undef35 <= arg2 /\ 0 <= undef39 /\ 0 <= undef40 /\ 0 <= undef41 /\ 2 <= arg1 /\ 1 <= arg2 /\ 1 <= undef35 /\ 1 + undef39 <= undef40, {arg1 -> -1 + arg1, arg2 -> undef35, arg4 -> undef37, arg5 -> undef38, rest remain the same}>
Variables:
arg1, arg2, arg4, arg5

Graph 2:
Transitions:
<l7, l7, 0 <= undef42 /\ 1 <= arg1 /\ 1 + undef42 <= arg1 /\ 1 <= arg2, {arg1 -> undef42, arg4 -> undef45, arg5 -> undef46, rest remain the same}>
Variables:
arg1, arg2, arg4, arg5

Precedence: 
Graph 0

Graph 1
<l0, l4, 0 <= undef28 /\ 0 <= undef48 /\ 3 + undef29 <= undef6 /\ 2 + undef9 <= undef6 /\ 1 <= undef29 /\ 1 + undef33 <= undef48 /\ 1 <= undef33 /\ 1 <= undef47 /\ 4 <= undef6, {arg1 -> undef28, arg2 -> undef29, arg4 -> undef31, arg5 -> undef32, rest remain the same}>
<l0, l4, undef24 <= undef47 /\ 0 <= undef48 /\ 1 <= undef24 /\ 1 <= undef47, {arg1 -> 1, arg2 -> undef24, arg4 -> undef26, arg5 -> undef27, rest remain the same}>

Graph 2
<l0, l7, undef18 <= undef12 /\ 0 <= undef17 /\ 3 + undef11 <= undef6 /\ 2 + undef9 <= undef6 /\ 2 + undef9 <= undef12 /\ 1 <= undef11 /\ 1 <= undef13 /\ 1 + undef16 <= undef48 /\ 1 <= undef16 /\ 1 <= undef47 /\ 4 <= undef6 /\ 4 <= undef12 /\ 4 + undef14 <= undef12 /\ 4 <= undef18, {arg1 -> undef18, arg2 -> undef13, arg4 -> undef21, arg5 -> undef22, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )
( 7 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002158

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000714s
[33mRanking function: [36m-2 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.00194

Checking conditional termination of SCC {l7}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000560s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m

