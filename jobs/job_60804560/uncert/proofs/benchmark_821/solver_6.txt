YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, (1 <= (0 + e^0)) /\ ((0 + n^0) <= 100), par{e^0 -> (1 + e^0), n^0 -> (11 + n^0)}>
<l2, l1, true>
<l1, l3, (1 <= (0 + e^0)) /\ (101 <= (0 + n^0)), par{e^0 -> (~(1) + e^0), n^0 -> (~(10) + n^0)}>
<l3, l1, true>
<l4, l1, (undef10 = undef10), par{e^0 -> 1, n^0 -> undef10}>
<l5, l4, true>

Fresh variables:
undef10, 

Undef variables:
undef10, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (e^0 = 1) /\ (n^0 = undef10) /\ (undef10 = undef10)>
<l1, l1, (1 <= (0 + e^0)) /\ ((0 + n^0) <= 100), par{e^0 -> (1 + e^0), n^0 -> (11 + n^0)}>
<l1, l1, (1 <= (0 + e^0)) /\ (101 <= (0 + n^0)), par{e^0 -> (~(1) + e^0), n^0 -> (~(10) + n^0)}>

Fresh variables:
undef10, 

Undef variables:
undef10, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 <= e^0 /\ n^0 <= 100, {e^0 -> 1 + e^0, n^0 -> 11 + n^0, rest remain the same}>
<l1, l1, 1 <= e^0 /\ 101 <= n^0, {e^0 -> -1 + e^0, n^0 -> -10 + n^0, rest remain the same}>
Variables:
e^0, n^0

Precedence: 
Graph 0

Graph 1
<l0, l1, n^0 = undef10 /\ e^0 = 1, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.090901

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000820s
[33mRanking function: [36m181 + 21*e^0 - 2*n^0[0m
New Graphs: 
Transitions:
<l1, l1, 1 <= e^0 /\ 101 <= n^0, {e^0 -> -1 + e^0, n^0 -> -10 + n^0, rest remain the same}>
Variables:
e^0, n^0
Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000269s
[33mRanking function: [36m-1 + e^0[0m
New Graphs: 
[32mProgram Terminates[0m

