NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, true>
<l3, l4, ((0 + tmp2^0) <= 0) /\ (0 <= (0 + tmp2^0)) /\ (undef5 = 0), par{x^0 -> 1}>
<l3, l1, (1 <= (0 + tmp2^0))>
<l3, l1, ((1 + tmp2^0) <= 0)>
<l2, l3, (undef10 = undef10), par{tmp2^0 -> undef10}>
<l4, l5, true>
<l5, l4, true>
<l6, l7, true>
<l8, l2, true, par{x^0 -> 1}>
<l9, l8, true>

Fresh variables:
undef5, undef10, 

Undef variables:
undef5, undef10, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, true>
<l2, l4, (undef10 = undef10) /\ ((0 + undef10) <= 0) /\ (0 <= (0 + undef10)) /\ (undef5 = 0)>
<l2, l2, (undef10 = undef10) /\ (1 <= (0 + undef10))>
<l2, l2, (undef10 = undef10) /\ ((1 + undef10) <= 0)>
<l4, l4, true>

Fresh variables:
undef5, undef10, 

Undef variables:
undef5, undef10, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= undef10, {all remain the same}>
<l2, l2, 1 + undef10 <= 0, {all remain the same}>
Variables:

Graph 2:
Transitions:
<l4, l4, true, {all remain the same}>
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, true, {all remain the same}>

Graph 2
<l2, l4, undef5 = 0 /\ undef10 = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000755

> No variable changes in termination graph.
Checking conditional unfeasibility...
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, true, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, true, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000139s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000158s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 <= undef10, {all remain the same}>
<l2, l2, 1 + undef10 <= 0, {all remain the same}>
Variables:

Checking conditional non-termination of SCC {l2}...
> No exit transition to close.
Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l2, end, true, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, true, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l0, l2, true, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

