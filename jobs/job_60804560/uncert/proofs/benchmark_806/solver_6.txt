YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, (64 <= (0 + i^0)), par{ctr23^0 -> 7}>
<l1, l3, ((1 + i^0) <= 64) /\ (undef23 = undef23), par{i^0 -> (1 + i^0), seed^0 -> undef23}>
<l4, l5, ((1 + ctr23^0) <= 0)>
<l4, l6, (0 <= (0 + ctr23^0)) /\ (undef64 = undef64) /\ (undef84 = undef84) /\ (undef69 = undef69) /\ (undef83 = undef83) /\ (undef70 = undef70) /\ (undef82 = undef82) /\ (undef71 = undef71) /\ (undef81 = undef81) /\ (undef85 = undef85) /\ (undef86 = ((0 + undef81) + undef84)) /\ (undef87 = ((0 + undef82) + undef83)) /\ (undef88 = ((0 + undef81) + undef83)) /\ (undef90 = ((0 + undef82) + undef84)) /\ (undef80 = undef80) /\ (undef72 = undef72) /\ (undef73 = undef73) /\ (undef74 = undef74) /\ (undef75 = undef75) /\ (undef76 = undef76) /\ (undef77 = undef77) /\ (undef89 = undef89) /\ (undef91 = undef91), par{ctr23^0 -> (~(1) + ctr23^0), tmp05^0 -> undef64, tmp1013^0 -> ((0 + undef64) + undef71), tmp1114^0 -> ((0 + undef69) + undef70), tmp1215^0 -> ((0 + undef69) + (~(1) * undef70)), tmp1316^0 -> ((0 + undef64) + (~(1) * undef71)), tmp16^0 -> undef69, tmp27^0 -> undef70, tmp38^0 -> undef71, tmp49^0 -> undef72, tmp510^0 -> undef73, tmp611^0 -> undef74, tmp712^0 -> undef75, z117^0 -> undef76, z218^0 -> undef77, z319^0 -> ((0 + undef89) + undef80), z420^0 -> ((0 + undef91) + undef80), z521^0 -> undef80}>
<l3, l1, true>
<l2, l7, true>
<l6, l4, true>
<l7, l6, ((1 + ctr23^0) <= 0), par{ctr23^0 -> 7}>
<l7, l2, (0 <= (0 + ctr23^0)) /\ (undef175 = undef175) /\ (undef195 = undef195) /\ (undef180 = undef180) /\ (undef194 = undef194) /\ (undef181 = undef181) /\ (undef193 = undef193) /\ (undef182 = undef182) /\ (undef192 = undef192) /\ (undef196 = undef196) /\ (undef197 = ((0 + undef192) + undef195)) /\ (undef198 = ((0 + undef193) + undef194)) /\ (undef199 = ((0 + undef192) + undef194)) /\ (undef201 = ((0 + undef193) + undef195)) /\ (undef191 = undef191) /\ (undef183 = undef183) /\ (undef184 = undef184) /\ (undef185 = undef185) /\ (undef186 = undef186) /\ (undef187 = undef187) /\ (undef188 = undef188) /\ (undef200 = undef200) /\ (undef202 = undef202), par{ctr23^0 -> (~(1) + ctr23^0), tmp05^0 -> undef175, tmp1013^0 -> ((0 + undef175) + undef182), tmp1114^0 -> ((0 + undef180) + undef181), tmp1215^0 -> ((0 + undef180) + (~(1) * undef181)), tmp1316^0 -> ((0 + undef175) + (~(1) * undef182)), tmp16^0 -> undef180, tmp27^0 -> undef181, tmp38^0 -> undef182, tmp49^0 -> undef183, tmp510^0 -> undef184, tmp611^0 -> undef185, tmp712^0 -> undef186, z117^0 -> undef187, z218^0 -> undef188, z319^0 -> ((0 + undef200) + undef191), z420^0 -> ((0 + undef202) + undef191), z521^0 -> undef191}>
<l8, l3, true, par{i^0 -> 0, seed^0 -> 0}>
<l9, l8, true>

Fresh variables:
undef23, undef64, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef175, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, 

Undef variables:
undef23, undef64, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef175, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (i^0 = 0)>
<l2, l6, ((1 + ctr23^0) <= 0), par{ctr23^0 -> 7}>
<l2, l2, (0 <= (0 + ctr23^0)) /\ (undef175 = undef175) /\ (undef195 = undef195) /\ (undef180 = undef180) /\ (undef194 = undef194) /\ (undef181 = undef181) /\ (undef193 = undef193) /\ (undef182 = undef182) /\ (undef192 = undef192) /\ (undef196 = undef196) /\ (undef197 = ((0 + undef192) + undef195)) /\ (undef198 = ((0 + undef193) + undef194)) /\ (undef199 = ((0 + undef192) + undef194)) /\ (undef201 = ((0 + undef193) + undef195)) /\ (undef191 = undef191) /\ (undef183 = undef183) /\ (undef184 = undef184) /\ (undef185 = undef185) /\ (undef186 = undef186) /\ (undef187 = undef187) /\ (undef188 = undef188) /\ (undef200 = undef200) /\ (undef202 = undef202), par{ctr23^0 -> (~(1) + ctr23^0)}>
<l3, l2, (64 <= (0 + i^0)), par{ctr23^0 -> 7}>
<l3, l3, ((1 + i^0) <= 64) /\ (undef23 = undef23), par{i^0 -> (1 + i^0)}>
<l6, l5, ((1 + ctr23^0) <= 0)>
<l6, l6, (0 <= (0 + ctr23^0)) /\ (undef64 = undef64) /\ (undef84 = undef84) /\ (undef69 = undef69) /\ (undef83 = undef83) /\ (undef70 = undef70) /\ (undef82 = undef82) /\ (undef71 = undef71) /\ (undef81 = undef81) /\ (undef85 = undef85) /\ (undef86 = ((0 + undef81) + undef84)) /\ (undef87 = ((0 + undef82) + undef83)) /\ (undef88 = ((0 + undef81) + undef83)) /\ (undef90 = ((0 + undef82) + undef84)) /\ (undef80 = undef80) /\ (undef72 = undef72) /\ (undef73 = undef73) /\ (undef74 = undef74) /\ (undef75 = undef75) /\ (undef76 = undef76) /\ (undef77 = undef77) /\ (undef89 = undef89) /\ (undef91 = undef91), par{ctr23^0 -> (~(1) + ctr23^0)}>

Fresh variables:
undef23, undef64, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef175, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, 

Undef variables:
undef23, undef64, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef175, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, i^0 <= 63, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0

Graph 2:
Transitions:
<l2, l2, 0 <= ctr23^0 /\ undef192 + undef194 = undef199 /\ undef192 + undef195 = undef197 /\ undef193 + undef194 = undef198 /\ undef193 + undef195 = undef201, {ctr23^0 -> -1 + ctr23^0, rest remain the same}>
Variables:
ctr23^0

Graph 3:
Transitions:
<l6, l6, 0 <= ctr23^0 /\ undef81 + undef83 = undef88 /\ undef81 + undef84 = undef86 /\ undef82 + undef83 = undef87 /\ undef82 + undef84 = undef90, {ctr23^0 -> -1 + ctr23^0, rest remain the same}>
Variables:
ctr23^0

Graph 4:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l3, i^0 = 0, {all remain the same}>

Graph 2
<l3, l2, 64 <= i^0, {ctr23^0 -> 7, rest remain the same}>

Graph 3
<l2, l6, 1 + ctr23^0 <= 0, {ctr23^0 -> 7, rest remain the same}>

Graph 4
<l6, l5, 1 + ctr23^0 <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 2 )
( 3 , 1 )
( 5 , 4 )
( 6 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000691

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000317s
[33mRanking function: [36m63 - i^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.000854

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000562s
[33mRanking function: [36mctr23^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.00082

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000590s
[33mRanking function: [36mctr23^0[0m
New Graphs: 
Proving termination of subgraph 4
Analyzing SCC {l5}...
No cycles found.

[32mProgram Terminates[0m

