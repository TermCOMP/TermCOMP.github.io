YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, true>
<l4, l5, true>
<l6, l4, true>
<l6, l4, true>
<l7, l8, true, par{j^0 -> (1 + j^0)}>
<l8, l9, true>
<l10, l7, (undef33 = undef33), par{tmp5^0 -> undef33, x3^0 -> (0 + j^0), y4^0 -> (1 + j^0)}>
<l10, l7, true>
<l9, l1, ((0 + i^0) <= (0 + j^0)), par{i^0 -> (~(1) + i^0)}>
<l9, l10, ((1 + j^0) <= (0 + i^0))>
<l2, l6, ((1 + i^0) <= 0)>
<l2, l8, (0 <= (0 + i^0))>
<l11, l1, true, par{i^0 -> 4, j^0 -> 0}>
<l3, l11, true>

Fresh variables:
undef33, 

Undef variables:
undef33, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l8, (i^0 = 4) /\ (j^0 = 0) /\ (0 <= (0 + 4))>
<l8, l5, ((0 + i^0) <= (0 + j^0)) /\ ((1 + (~(1) + i^0)) <= 0), par{i^0 -> (~(1) + i^0)}>
<l8, l5, ((0 + i^0) <= (0 + j^0)) /\ ((1 + (~(1) + i^0)) <= 0), par{i^0 -> (~(1) + i^0)}>
<l8, l8, ((0 + i^0) <= (0 + j^0)) /\ (0 <= (0 + (~(1) + i^0))), par{i^0 -> (~(1) + i^0)}>
<l8, l8, ((1 + j^0) <= (0 + i^0)) /\ (undef33 = undef33), par{j^0 -> (1 + j^0)}>
<l8, l8, ((1 + j^0) <= (0 + i^0)), par{j^0 -> (1 + j^0)}>

Fresh variables:
undef33, 

Undef variables:
undef33, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l8, l8, 1 <= i^0 /\ i^0 <= j^0, {i^0 -> -1 + i^0, rest remain the same}>
<l8, l8, 1 + j^0 <= i^0, {j^0 -> 1 + j^0, rest remain the same}>
<l8, l8, 1 + j^0 <= i^0, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
i^0, j^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l8, j^0 = 0 /\ i^0 = 4, {all remain the same}>

Graph 2
<l8, l5, i^0 <= 0 /\ i^0 <= j^0, {i^0 -> -1 + i^0, rest remain the same}>
<l8, l5, i^0 <= 0 /\ i^0 <= j^0, {i^0 -> -1 + i^0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 5 , 2 )
( 8 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.015346

Checking conditional termination of SCC {l8}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000717s
[33mRanking function: [36mi^0[0m
New Graphs: 
Transitions:
<l8, l8, 1 + j^0 <= i^0, {j^0 -> 1 + j^0, rest remain the same}>
<l8, l8, 1 + j^0 <= i^0, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
i^0, j^0
Checking conditional termination of SCC {l8}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000549s
[33mRanking function: [36m-1 + i^0 - j^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l5}...
No cycles found.

[32mProgram Terminates[0m

