YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, (undef2 = undef2), par{oldX0^0 -> (0 + x0^0), oldX1^0 -> undef2, x0^0 -> (0 + undef2)}>
<l1, l3, (undef4 = (0 + x0^0)), par{oldX0^0 -> undef4, x0^0 -> (~(1) + undef4)}>
<l4, l2, (undef8 = undef8), par{oldX0^0 -> (0 + x0^0), oldX1^0 -> undef8, x0^0 -> (0 + undef8)}>
<l5, l1, (undef10 = (0 + x0^0)) /\ (0 <= (0 + undef10)), par{oldX0^0 -> undef10, x0^0 -> (0 + undef10)}>
<l5, l4, (undef13 = (0 + x0^0)) /\ ((1 + undef13) <= 0), par{oldX0^0 -> undef13, x0^0 -> (0 + undef13)}>
<l3, l5, (undef16 = (0 + x0^0)), par{oldX0^0 -> undef16, x0^0 -> (0 + undef16)}>
<l6, l2, true>
<l6, l1, true>
<l6, l4, true>
<l6, l5, true>
<l6, l3, true>
<l7, l6, true>

Fresh variables:
undef2, undef4, undef8, undef10, undef13, undef16, 

Undef variables:
undef2, undef4, undef8, undef10, undef13, undef16, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, true>
<l0, l1, true>
<l0, l2, (undef8 = undef8), par{x0^0 -> (0 + undef8)}>
<l0, l1, (undef10 = (0 + x0^0)) /\ (0 <= (0 + undef10)), par{x0^0 -> (0 + undef10)}>
<l0, l2, (undef13 = (0 + x0^0)) /\ ((1 + undef13) <= 0) /\ (undef8 = undef8), par{x0^0 -> (0 + undef8)}>
<l0, l1, (undef16 = (0 + x0^0)) /\ (undef10 = (0 + (0 + undef16))) /\ (0 <= (0 + undef10)), par{x0^0 -> (0 + undef10)}>
<l0, l2, (undef16 = (0 + x0^0)) /\ (undef13 = (0 + (0 + undef16))) /\ ((1 + undef13) <= 0) /\ (undef8 = undef8), par{x0^0 -> (0 + undef8)}>
<l1, l2, (undef2 = undef2), par{x0^0 -> (0 + undef2)}>
<l1, l1, (undef4 = (0 + x0^0)) /\ (undef16 = (0 + (~(1) + undef4))) /\ (undef10 = (0 + (0 + undef16))) /\ (0 <= (0 + undef10)), par{x0^0 -> (0 + undef10)}>
<l1, l2, (undef4 = (0 + x0^0)) /\ (undef16 = (0 + (~(1) + undef4))) /\ (undef13 = (0 + (0 + undef16))) /\ ((1 + undef13) <= 0) /\ (undef8 = undef8), par{x0^0 -> (0 + undef8)}>

Fresh variables:
undef2, undef4, undef8, undef10, undef13, undef16, 

Undef variables:
undef2, undef4, undef8, undef10, undef13, undef16, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 0 <= undef10 /\ x0^0 = undef4 /\ undef10 = undef16 /\ undef4 = 1 + undef16, {x0^0 -> undef10, rest remain the same}>
Variables:
x0^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, true, {all remain the same}>
<l0, l1, 0 <= undef10 /\ x0^0 = undef10, {x0^0 -> undef10, rest remain the same}>
<l0, l1, 0 <= undef10 /\ x0^0 = undef16 /\ undef10 = undef16, {x0^0 -> undef10, rest remain the same}>

Graph 2
<l0, l2, true, {all remain the same}>
<l0, l2, true, {x0^0 -> undef8, rest remain the same}>
<l0, l2, 1 + undef13 <= 0 /\ x0^0 = undef13, {x0^0 -> undef8, rest remain the same}>
<l0, l2, 1 + undef13 <= 0 /\ x0^0 = undef16 /\ undef13 = undef16, {x0^0 -> undef8, rest remain the same}>
<l1, l2, true, {x0^0 -> undef2, rest remain the same}>
<l1, l2, 1 + undef13 <= 0 /\ x0^0 = undef4 /\ undef13 = undef16 /\ undef4 = 1 + undef16, {x0^0 -> undef8, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 2 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001006

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000420s
[33mRanking function: [36m-1 + x0^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

