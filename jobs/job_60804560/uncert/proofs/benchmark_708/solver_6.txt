YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, ((0 + i^0) <= (0 + j^0)), par{i^0 -> (1 + i^0)}>
<l1, l3, ((1 + j^0) <= (0 + i^0)), par{j^0 -> (1 + j^0)}>
<l3, l1, true>
<l2, l1, ((1 + i^0) <= (0 + n^0)), par{j^0 -> 0}>
<l4, l2, true, par{i^0 -> 0}>
<l5, l4, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (i^0 = 0) /\ (j^0 = 0) /\ ((1 + 0) <= (0 + n^0))>
<l1, l1, ((0 + i^0) <= (0 + j^0)) /\ ((1 + (1 + i^0)) <= (0 + n^0)), par{i^0 -> (1 + i^0), j^0 -> 0}>
<l1, l1, ((1 + j^0) <= (0 + i^0)), par{j^0 -> (1 + j^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, i^0 <= j^0 /\ 2 + i^0 <= n^0, {i^0 -> 1 + i^0, j^0 -> 0, rest remain the same}>
<l1, l1, 1 + j^0 <= i^0, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
i^0, j^0, n^0

Precedence: 
Graph 0

Graph 1
<l0, l1, 1 <= n^0 /\ i^0 = 0 /\ j^0 = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002528

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000618s
[33mRanking function: [36m-2*i^0 + 2*n^0[0m
New Graphs: 
Transitions:
<l1, l1, 1 + j^0 <= i^0, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
i^0, j^0
Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000321s
[33mRanking function: [36m-1 + i^0 - j^0[0m
New Graphs: 
[32mProgram Terminates[0m

