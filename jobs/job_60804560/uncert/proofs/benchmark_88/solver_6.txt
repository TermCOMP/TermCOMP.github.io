YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (undef1 <= arg1) /\ (arg1 > 0) /\ (undef1 > 0) /\ (0 = arg2), par{arg1 -> undef1, arg2 -> 0, arg3 -> 0, arg4 -> 0, arg5 -> 0, arg6 -> 0, arg7 -> 0, arg8 -> 0}>
<l3, l2, (undef9 <= arg1) /\ (undef10 > ~(1)) /\ (arg1 > 0) /\ (undef9 > 0) /\ (1 = arg2), par{arg1 -> undef9, arg2 -> undef10, arg3 -> 0, arg4 -> 0, arg5 -> 0, arg6 -> 1, arg7 -> 1, arg8 -> 1}>
<l3, l2, (undef18 > ~(1)) /\ (undef19 > ~(1)) /\ (undef17 <= arg1) /\ (arg1 > 0) /\ (undef17 > 0) /\ (2 = arg2), par{arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> 0, arg5 -> 0, arg6 -> 2, arg7 -> 2, arg8 -> 2}>
<l3, l2, (undef26 > ~(1)) /\ (arg2 > 2) /\ (undef28 > ~(1)) /\ (undef27 > ~(1)) /\ (arg1 >= undef25) /\ (arg1 > 0) /\ (undef25 > 0), par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, arg4 -> undef28, arg5 -> undef28, arg6 -> arg2, arg7 -> 3, arg8 -> arg2}>
<l2, l2, (arg4 > ~(1)) /\ (arg6 > ~(1)) /\ (arg7 >= arg6) /\ ((2 * arg2) >= 0) /\ ((3 * arg3) >= 0) /\ (((3 * arg3) - (2 * arg2)) < 0) /\ (undef33 <= arg1) /\ (arg1 > 0) /\ (undef33 > 0) /\ (arg4 = arg5) /\ (arg6 = arg8), par{arg1 -> undef33, arg2 -> 0, arg3 -> 0, arg5 -> arg4, arg8 -> arg6}>
<l2, l2, (arg4 > ~(1)) /\ (arg6 > ~(1)) /\ (arg7 > ~(1)) /\ (arg7 < arg6) /\ (undef42 > ~(1)) /\ ((arg7 + 1) >= arg6) /\ ((2 * arg2) >= 0) /\ ((3 * arg3) >= 0) /\ ((2 * undef42) >= 0) /\ (((3 * arg3) - (2 * arg2)) < (0 - (2 * undef42))) /\ (undef41 <= arg1) /\ (arg1 > 0) /\ (undef41 > 0) /\ (arg4 = arg5) /\ (arg6 = arg8), par{arg1 -> undef41, arg2 -> undef42, arg3 -> 0, arg4 -> (arg4 - (0 - (2 * undef42))), arg5 -> (arg4 - (0 - (2 * undef42))), arg7 -> (arg7 + 1), arg8 -> arg6}>
<l2, l2, (arg6 > ~(1)) /\ ((arg7 + 1) < arg6) /\ (arg4 > ~(1)) /\ (arg7 > ~(1)) /\ (undef50 > ~(1)) /\ (undef51 > ~(1)) /\ ((2 * arg2) >= 0) /\ ((3 * arg3) >= 0) /\ ((2 * undef50) >= 0) /\ ((3 * undef51) >= 0) /\ (((3 * undef51) - (2 * undef50)) > ((3 * arg3) - (2 * arg2))) /\ (undef49 <= arg1) /\ (arg1 > 0) /\ (undef49 > 0) /\ (arg4 = arg5) /\ (arg6 = arg8), par{arg1 -> undef49, arg2 -> undef50, arg3 -> undef51, arg4 -> (arg4 - ((3 * undef51) - (2 * undef50))), arg5 -> (arg4 - ((3 * undef51) - (2 * undef50))), arg7 -> (arg7 + 2), arg8 -> arg6}>
<l1, l3, true, par{arg1 -> undef57, arg2 -> undef58, arg3 -> undef59, arg4 -> undef60, arg5 -> undef61, arg6 -> undef62, arg7 -> undef63, arg8 -> undef64}>

Fresh variables:
undef1, undef9, undef10, undef17, undef18, undef19, undef25, undef26, undef27, undef28, undef33, undef41, undef42, undef49, undef50, undef51, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, 

Undef variables:
undef1, undef9, undef10, undef17, undef18, undef19, undef25, undef26, undef27, undef28, undef33, undef41, undef42, undef49, undef50, undef51, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef1 <= undef57) /\ (undef57 > 0) /\ (undef1 > 0) /\ (0 = undef58), par{arg1 -> undef1, arg2 -> 0, arg3 -> 0, arg4 -> 0, arg5 -> 0, arg6 -> 0, arg7 -> 0, arg8 -> 0}>
<l0, l2, (undef9 <= undef57) /\ (undef10 > ~(1)) /\ (undef57 > 0) /\ (undef9 > 0) /\ (1 = undef58), par{arg1 -> undef9, arg2 -> undef10, arg3 -> 0, arg4 -> 0, arg5 -> 0, arg6 -> 1, arg7 -> 1, arg8 -> 1}>
<l0, l2, (undef18 > ~(1)) /\ (undef19 > ~(1)) /\ (undef17 <= undef57) /\ (undef57 > 0) /\ (undef17 > 0) /\ (2 = undef58), par{arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> 0, arg5 -> 0, arg6 -> 2, arg7 -> 2, arg8 -> 2}>
<l0, l2, (undef26 > ~(1)) /\ (undef58 > 2) /\ (undef28 > ~(1)) /\ (undef27 > ~(1)) /\ (undef57 >= undef25) /\ (undef57 > 0) /\ (undef25 > 0), par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, arg4 -> undef28, arg5 -> undef28, arg6 -> undef58, arg7 -> 3, arg8 -> undef58}>
<l2, l2, (arg4 > ~(1)) /\ (arg6 > ~(1)) /\ (arg7 >= arg6) /\ ((2 * arg2) >= 0) /\ ((3 * arg3) >= 0) /\ (((3 * arg3) - (2 * arg2)) < 0) /\ (undef33 <= arg1) /\ (arg1 > 0) /\ (undef33 > 0) /\ (arg4 = arg5) /\ (arg6 = arg8), par{arg1 -> undef33, arg2 -> 0, arg3 -> 0, arg5 -> arg4, arg8 -> arg6}>
<l2, l2, (arg4 > ~(1)) /\ (arg6 > ~(1)) /\ (arg7 > ~(1)) /\ (arg7 < arg6) /\ (undef42 > ~(1)) /\ ((arg7 + 1) >= arg6) /\ ((2 * arg2) >= 0) /\ ((3 * arg3) >= 0) /\ ((2 * undef42) >= 0) /\ (((3 * arg3) - (2 * arg2)) < (0 - (2 * undef42))) /\ (undef41 <= arg1) /\ (arg1 > 0) /\ (undef41 > 0) /\ (arg4 = arg5) /\ (arg6 = arg8), par{arg1 -> undef41, arg2 -> undef42, arg3 -> 0, arg4 -> (arg4 - (0 - (2 * undef42))), arg5 -> (arg4 - (0 - (2 * undef42))), arg7 -> (arg7 + 1), arg8 -> arg6}>
<l2, l2, (arg6 > ~(1)) /\ ((arg7 + 1) < arg6) /\ (arg4 > ~(1)) /\ (arg7 > ~(1)) /\ (undef50 > ~(1)) /\ (undef51 > ~(1)) /\ ((2 * arg2) >= 0) /\ ((3 * arg3) >= 0) /\ ((2 * undef50) >= 0) /\ ((3 * undef51) >= 0) /\ (((3 * undef51) - (2 * undef50)) > ((3 * arg3) - (2 * arg2))) /\ (undef49 <= arg1) /\ (arg1 > 0) /\ (undef49 > 0) /\ (arg4 = arg5) /\ (arg6 = arg8), par{arg1 -> undef49, arg2 -> undef50, arg3 -> undef51, arg4 -> (arg4 - ((3 * undef51) - (2 * undef50))), arg5 -> (arg4 - ((3 * undef51) - (2 * undef50))), arg7 -> (arg7 + 2), arg8 -> arg6}>

Fresh variables:
undef1, undef9, undef10, undef17, undef18, undef19, undef25, undef26, undef27, undef28, undef33, undef41, undef42, undef49, undef50, undef51, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, 

Undef variables:
undef1, undef9, undef10, undef17, undef18, undef19, undef25, undef26, undef27, undef28, undef33, undef41, undef42, undef49, undef50, undef51, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, undef33 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= arg4 /\ arg6 <= arg7 /\ 0 <= arg6 /\ 1 <= arg1 /\ 1 + 3*arg3 <= 2*arg2 /\ 1 <= undef33 /\ arg4 = arg5 /\ arg6 = arg8, {arg1 -> undef33, arg2 -> 0, arg3 -> 0, arg5 -> arg4, arg8 -> arg6, rest remain the same}>
<l2, l2, undef41 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= arg4 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef42 /\ 1 <= arg1 /\ 1 + 3*arg3 + 2*undef42 <= 2*arg2 /\ 1 <= undef41 /\ arg4 = arg5 /\ arg6 = arg8 /\ arg6 = 1 + arg7, {arg1 -> undef41, arg2 -> undef42, arg3 -> 0, arg4 -> arg4 + 2*undef42, arg5 -> arg4 + 2*undef42, arg7 -> 1 + arg7, arg8 -> arg6, rest remain the same}>
<l2, l2, undef49 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= arg4 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef50 /\ 0 <= undef51 /\ 1 <= arg1 /\ 1 + 3*arg3 + 2*undef50 <= 2*arg2 + 3*undef51 /\ 1 <= undef49 /\ 2 + arg7 <= arg6 /\ arg4 = arg5 /\ arg6 = arg8, {arg1 -> undef49, arg2 -> undef50, arg3 -> undef51, arg4 -> arg4 + 2*undef50 - 3*undef51, arg5 -> arg4 + 2*undef50 - 3*undef51, arg7 -> 2 + arg7, arg8 -> arg6, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8

Precedence: 
Graph 0

Graph 1
<l0, l2, undef1 <= undef57 /\ 1 <= undef1 /\ 1 <= undef57 /\ undef58 = 0, {arg1 -> undef1, arg2 -> 0, arg3 -> 0, arg4 -> 0, arg5 -> 0, arg6 -> 0, arg7 -> 0, arg8 -> 0, rest remain the same}>
<l0, l2, undef9 <= undef57 /\ 0 <= undef10 /\ 1 <= undef9 /\ 1 <= undef57 /\ undef58 = 1, {arg1 -> undef9, arg2 -> undef10, arg3 -> 0, arg4 -> 0, arg5 -> 0, arg6 -> 1, arg7 -> 1, arg8 -> 1, rest remain the same}>
<l0, l2, undef17 <= undef57 /\ 0 <= undef18 /\ 0 <= undef19 /\ 1 <= undef17 /\ 1 <= undef57 /\ undef58 = 2, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> 0, arg5 -> 0, arg6 -> 2, arg7 -> 2, arg8 -> 2, rest remain the same}>
<l0, l2, undef25 <= undef57 /\ 0 <= undef26 /\ 0 <= undef27 /\ 0 <= undef28 /\ 1 <= undef25 /\ 1 <= undef57 /\ 3 <= undef58, {arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, arg4 -> undef28, arg5 -> undef28, arg6 -> undef58, arg7 -> 3, arg8 -> undef58, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.120562

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004001s
[33mRanking function: [36m-1 + 2*arg2 - 3*arg3 + arg4 - arg5 + arg6 - arg8[0m
New Graphs: 
Transitions:
<l2, l2, undef49 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= arg4 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef50 /\ 0 <= undef51 /\ 1 <= arg1 /\ 1 + 3*arg3 + 2*undef50 <= 2*arg2 + 3*undef51 /\ 1 <= undef49 /\ 2 + arg7 <= arg6 /\ arg4 = arg5 /\ arg6 = arg8, {arg1 -> undef49, arg2 -> undef50, arg3 -> undef51, arg4 -> arg4 + 2*undef50 - 3*undef51, arg5 -> arg4 + 2*undef50 - 3*undef51, arg7 -> 2 + arg7, arg8 -> arg6, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001039s
[33mRanking function: [36m-1 + (1 / 2)*arg6 + (~(1) / 2)*arg7[0m
New Graphs: 
[32mProgram Terminates[0m

