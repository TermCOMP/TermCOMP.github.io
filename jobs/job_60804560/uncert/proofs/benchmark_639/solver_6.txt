YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (undef6 = 0) /\ (undef7 = (1 + undef6)) /\ (undef8 = (1 + undef7)) /\ (undef9 = (1 + undef8)), par{i^0 -> (1 + undef9), tmp10^0 -> (0 + undef6), tmp13^0 -> (0 + undef8), tmp___011^0 -> (0 + undef7), tmp___014^0 -> (0 + undef9)}>
<l3, l1, true>

Fresh variables:
undef6, undef7, undef8, undef9, 

Undef variables:
undef6, undef7, undef8, undef9, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef6 = 0) /\ (undef7 = (1 + undef6)) /\ (undef8 = (1 + undef7)) /\ (undef9 = (1 + undef8))>

Fresh variables:
undef6, undef7, undef8, undef9, 

Undef variables:
undef6, undef7, undef8, undef9, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, undef6 = 0 /\ 1 + undef6 = undef7 /\ 1 + undef7 = undef8 /\ 1 + undef8 = undef9, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

