YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (undef3 > ~(1)) /\ (arg2 > ~(1)) /\ (undef2 > ~(1)) /\ (arg1 > 0), par{arg1 -> 0, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5}>
<l3, l4, (arg3 <= arg2) /\ (arg3 > 0), par{arg1 -> arg3, arg2 -> arg1, arg3 -> arg2, arg4 -> arg3, arg5 -> arg3}>
<l4, l4, (arg4 < 0) /\ (arg4 < 1) /\ (arg4 = arg5), par{arg3 -> (arg3 + 1), arg4 -> (arg4 + 1), arg5 -> (arg4 + 1)}>
<l4, l4, (arg4 > 0) /\ (arg4 < 1) /\ (arg4 = arg5), par{arg3 -> (arg3 + 1), arg4 -> (arg4 + 1), arg5 -> (arg4 + 1)}>
<l4, l4, (arg4 > 0) /\ (arg4 = arg5), par{arg3 -> (arg3 - 1), arg4 -> (arg4 - 1), arg5 -> (arg4 - 1)}>
<l4, l3, (arg2 > ~(1)) /\ (0 = arg4) /\ (0 = arg5), par{arg1 -> (arg2 + 1), arg2 -> arg3, arg3 -> arg1, arg4 -> undef29, arg5 -> undef30}>
<l1, l2, true, par{arg1 -> undef31, arg2 -> undef32, arg3 -> undef33, arg4 -> undef34, arg5 -> undef35}>

Fresh variables:
undef2, undef3, undef4, undef5, undef29, undef30, undef31, undef32, undef33, undef34, undef35, 

Undef variables:
undef2, undef3, undef4, undef5, undef29, undef30, undef31, undef32, undef33, undef34, undef35, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (arg1 = undef3) /\ (arg2 = 0) /\ (arg3 = undef2) /\ (arg4 = undef3) /\ (arg5 = undef3) /\ (undef3 > ~(1)) /\ (undef32 > ~(1)) /\ (undef2 > ~(1)) /\ (undef31 > 0) /\ (undef3 <= undef2) /\ (undef3 > 0)>
<l4, l4, (arg4 < 0) /\ (arg4 < 1) /\ (arg4 = arg5), par{arg3 -> (arg3 + 1), arg4 -> (arg4 + 1), arg5 -> (arg4 + 1)}>
<l4, l4, (arg4 > 0) /\ (arg4 = arg5), par{arg3 -> (arg3 - 1), arg4 -> (arg4 - 1), arg5 -> (arg4 - 1)}>
<l4, l4, (arg2 > ~(1)) /\ (0 = arg4) /\ (0 = arg5) /\ (arg1 <= arg3) /\ (arg1 > 0), par{arg1 -> arg1, arg2 -> (arg2 + 1), arg3 -> arg3, arg4 -> arg1, arg5 -> arg1}>

Fresh variables:
undef2, undef3, undef4, undef5, undef29, undef30, undef31, undef32, undef33, undef34, undef35, 

Undef variables:
undef2, undef3, undef4, undef5, undef29, undef30, undef31, undef32, undef33, undef34, undef35, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, 1 + arg4 <= 0 /\ arg4 = arg5, {arg3 -> 1 + arg3, arg4 -> 1 + arg4, arg5 -> 1 + arg4, rest remain the same}>
<l4, l4, 1 <= arg4 /\ arg4 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg4, rest remain the same}>
<l4, l4, 1 <= arg1 /\ arg1 <= arg3 /\ 0 <= arg2 /\ arg4 = 0 /\ arg5 = 0, {arg2 -> 1 + arg2, arg4 -> arg1, arg5 -> arg1, rest remain the same}>
Variables:
arg3, arg4, arg5, arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l4, 1 <= undef3 /\ 1 <= undef31 /\ 0 <= undef2 /\ undef3 <= undef2 /\ 0 <= undef32 /\ arg1 = undef3 /\ arg2 = 0 /\ arg3 = undef2 /\ arg4 = undef3 /\ arg5 = undef3, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.009316
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l4: 0 <= arg5[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l4, l4, 1 + arg4 <= 0 /\ arg4 = arg5, {arg3 -> 1 + arg3, arg4 -> 1 + arg4, arg5 -> 1 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 <= arg4 /\ 0 <= arg5 /\ arg4 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 <= arg1 /\ arg1 <= arg3 /\ 0 <= arg2 /\ arg4 = 0 /\ arg5 = 0, {arg2 -> 1 + arg2, arg4 -> arg1, arg5 -> arg1, rest remain the same}>
Checking unfeasibility...
Time used: 0.011797

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000886s
[33mRanking function: [36m1 + 2*arg3 - arg4[0m
New Graphs: 
Transitions:
<l4, l4, 1 <= arg4 /\ 0 <= arg5 /\ arg4 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg4, rest remain the same}>
Variables:
arg3, arg4, arg5
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000342s
[33mRanking function: [36m-1 + arg4[0m
New Graphs: 
[32mProgram Terminates[0m

