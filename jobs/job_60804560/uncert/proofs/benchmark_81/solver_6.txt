YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (0 = arg2), par{arg1 -> 0, arg2 -> 0, arg3 -> 0, arg4 -> 0}>
<l2, l3, (arg1 > 0) /\ (undef5 > ~(1)) /\ (1 = arg2), par{arg1 -> undef5, arg2 -> 0, arg3 -> 1, arg4 -> 1}>
<l2, l3, (undef10 > ~(1)) /\ (arg2 > 1) /\ (undef9 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef9, arg2 -> undef10, arg3 -> arg2, arg4 -> 2}>
<l3, l3, (arg3 > ~(1)) /\ ((arg1 - 1) < arg1) /\ (arg4 >= arg3) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg1 - 1)}>
<l3, l3, (arg2 > 0) /\ (arg3 > 0) /\ (arg4 > ~(1)) /\ (arg4 < arg3) /\ ((arg4 + 1) <= arg3) /\ (undef21 > ~(1)), par{arg1 -> ((arg1 - 1) - undef21), arg2 -> ((arg1 - 1) - undef21), arg4 -> (arg4 + 1)}>
<l1, l2, true, par{arg1 -> undef22, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25}>

Fresh variables:
undef5, undef9, undef10, undef21, undef22, undef23, undef24, undef25, 

Undef variables:
undef5, undef9, undef10, undef21, undef22, undef23, undef24, undef25, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (undef22 > 0) /\ (0 = undef23), par{arg1 -> 0, arg2 -> 0, arg3 -> 0, arg4 -> 0}>
<l0, l3, (undef22 > 0) /\ (undef5 > ~(1)) /\ (1 = undef23), par{arg1 -> undef5, arg2 -> 0, arg3 -> 1, arg4 -> 1}>
<l0, l3, (undef10 > ~(1)) /\ (undef23 > 1) /\ (undef9 > ~(1)) /\ (undef22 > 0), par{arg1 -> undef9, arg2 -> undef10, arg3 -> undef23, arg4 -> 2}>
<l3, l3, (arg3 > ~(1)) /\ ((arg1 - 1) < arg1) /\ (arg4 >= arg3) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg1 - 1)}>
<l3, l3, (arg2 > 0) /\ (arg3 > 0) /\ (arg4 > ~(1)) /\ (arg4 < arg3) /\ ((arg4 + 1) <= arg3) /\ (undef21 > ~(1)), par{arg1 -> ((arg1 - 1) - undef21), arg2 -> ((arg1 - 1) - undef21), arg4 -> (arg4 + 1)}>

Fresh variables:
undef5, undef9, undef10, undef21, undef22, undef23, undef24, undef25, 

Undef variables:
undef5, undef9, undef10, undef21, undef22, undef23, undef24, undef25, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef22 /\ undef23 = 0, {arg1 -> 0, arg2 -> 0, arg3 -> 0, arg4 -> 0, rest remain the same}>
<l0, l3, 0 <= undef5 /\ 1 <= undef22 /\ undef23 = 1, {arg1 -> undef5, arg2 -> 0, arg3 -> 1, arg4 -> 1, rest remain the same}>
<l0, l3, 0 <= undef9 /\ 0 <= undef10 /\ 1 <= undef22 /\ 2 <= undef23, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef23, arg4 -> 2, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003048

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000885s
[33mRanking function: [36m-2 + 2*arg3 - 2*arg4[0m
New Graphs: 
Transitions:
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000274s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001171s
Trying to remove transition: <l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004781s
Time used: 0.004673
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009048s
Time used: 0.008667
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.016081s
Time used: 0.016022

LOG: SAT solveNonLinear - Elapsed time: 0.025129s
Cost: 1; Total time: 0.024689
[31mFailed at location 3: arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l3: arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001851s
Remaining time after improvement: 0.999312
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg2 <= 0 and entry <l0, l3, 0 <= undef9 /\ 0 <= undef10 /\ 1 <= undef22 /\ 2 <= undef23, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef23, arg4 -> 2, rest remain the same}>

LOG: CALL check - Post:arg2 <= 0 - Process 1
* Exit transition: <l0, l3, 0 <= undef9 /\ 0 <= undef10 /\ 1 <= undef22 /\ 2 <= undef23, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef23, arg4 -> 2, rest remain the same}>
* Postcondition  : arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000218s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000249s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg2 <= 0 , 
Narrowing transition: 
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000640s
[33mRanking function: [36m-2 + 2*arg3 - 2*arg4[0m
New Graphs: 
Transitions:
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000244s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001017s
Trying to remove transition: <l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003818s
Time used: 0.003743
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008604s
Time used: 0.008274
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.015445s
Time used: 0.015392

LOG: SAT solveNonLinear - Elapsed time: 0.024049s
Cost: 1; Total time: 0.023666
[31mFailed at location 3: 1 + arg1 + arg4 <= arg3[0m
Before Improving: 
[36mQuasi-invariant at l3: 1 + arg1 + arg4 <= arg3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002022s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001100s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000840s
Remaining time after improvement: 0.997162
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 + arg4 <= 1 + arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2 /\ arg1 + arg4 <= 1 + arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3 /\ arg1 + arg4 <= 1 + arg3, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2 /\ arg1 + arg4 <= 1 + arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
[33mRanking function: [36marg2[0m
New Graphs: 
Calling Safety with literal arg1 + arg4 <= 1 + arg3 and entry <l0, l3, 0 <= undef9 /\ 1 <= undef10 /\ 1 <= undef22 /\ 2 <= undef23, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef23, arg4 -> 2, rest remain the same}>

LOG: CALL check - Post:arg1 + arg4 <= 1 + arg3 - Process 2
* Exit transition: <l0, l3, 0 <= undef9 /\ 1 <= undef10 /\ 1 <= undef22 /\ 2 <= undef23, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef23, arg4 -> 2, rest remain the same}>
* Postcondition  : arg1 + arg4 <= 1 + arg3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000184s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000220s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 + arg4 <= 1 + arg3 , 
Narrowing transition: 
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2 /\ 2 + arg3 <= arg1 + arg4, {arg1 -> -1 + arg1, arg2 -> -1 + arg1, rest remain the same}>
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3 /\ 2 + arg3 <= arg1 + arg4, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000862s
[33mRanking function: [36m-2 + arg1 - arg3 + arg4[0m
New Graphs: 
Transitions:
<l3, l3, 0 <= arg4 /\ 0 <= undef21 /\ 1 <= arg2 /\ 1 <= arg3 /\ 1 + arg4 <= arg3 /\ 2 + arg3 <= arg1 + arg4, {arg1 -> -1 + arg1 - undef21, arg2 -> -1 + arg1 - undef21, arg4 -> 1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000508s
[33mRanking function: [36m-1 + arg3 - arg4[0m
New Graphs: 
[32mProgram Terminates[0m

