NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, (((0 + (~(1) * x_5^0)) + y_6^0) <= 0) /\ (undef1 = undef1), par{Result_4^0 -> undef1}>
<l1, l3, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef6 = undef6) /\ ((0 + undef6) <= 0) /\ (0 <= (0 + undef6)), par{tmp_7^0 -> undef6, y_6^0 -> (~(1) + y_6^0)}>
<l3, l1, true>
<l1, l5, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef14 = undef14), par{tmp_7^0 -> undef14}>
<l5, l4, ((1 + tmp_7^0) <= 0)>
<l5, l4, (1 <= (0 + tmp_7^0))>
<l4, l1, true>
<l6, l1, true>
<l7, l6, true>

Fresh variables:
undef1, undef6, undef14, 

Undef variables:
undef1, undef6, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, true>
<l1, l2, (((0 + (~(1) * x_5^0)) + y_6^0) <= 0) /\ (undef1 = undef1)>
<l1, l1, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef6 = undef6) /\ ((0 + undef6) <= 0) /\ (0 <= (0 + undef6)), par{y_6^0 -> (~(1) + y_6^0)}>
<l1, l1, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef14 = undef14) /\ ((1 + undef14) <= 0)>
<l1, l1, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef14 = undef14) /\ (1 <= (0 + undef14))>

Fresh variables:
undef1, undef6, undef14, 

Undef variables:
undef1, undef6, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 + x_5^0 <= y_6^0 /\ undef6 = 0, {y_6^0 -> -1 + y_6^0, rest remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>
Variables:
x_5^0, y_6^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, true, {all remain the same}>

Graph 2
<l1, l2, y_6^0 <= x_5^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 2 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002388

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000412s
[33mRanking function: [36m-1 - x_5^0 + y_6^0[0m
New Graphs: 
Transitions:
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>
Variables:
x_5^0, y_6^0
> No variable changes in termination graph.
Checking conditional unfeasibility...
Calling Safety with literal y_6^0 <= x_5^0 and entry <l1, l1, true, {all remain the same}>

LOG: CALL check - Post:y_6^0 <= x_5^0 - Process 1
* Exit transition: <l1, l1, true, {all remain the same}>
* Postcondition  : y_6^0 <= x_5^0
Quasi-invariants: 
Location 1: y_6^0 <= x_5^0 ; 
Postcondition: y_6^0 <= x_5^0

LOG: CALL check - Post:y_6^0 <= x_5^0 - Process 2
* Exit transition: <l0, l1, true, {all remain the same}>
* Postcondition  : y_6^0 <= x_5^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000108s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000128s

LOG: NarrowEntry size 1
Narrowing transition: 
<l1, l1, 1 + x_5^0 <= y_6^0 /\ undef6 = 0, {y_6^0 -> -1 + y_6^0, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l1, 1 + x_5^0 <= y_6^0, {all remain the same}>
END ENTRIES:
GRAPH:
<l1, l1, 1 + x_5^0 <= y_6^0 /\ undef6 = 0, {y_6^0 -> -1 + y_6^0, rest remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>
END GRAPH:
EXIT: <l1, l1, true, {all remain the same}>
POST: y_6^0 <= x_5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007692s
Time used: 0.007622
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018775s
Time used: 4.00016
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.007220s
Time used: 1.00016

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 5.037358s

Proving non-termination of subgraph 1
Transitions:
<l1, l1, 1 + x_5^0 <= y_6^0 /\ undef6 = 0, {y_6^0 -> -1 + y_6^0, rest remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>
Variables:
x_5^0, y_6^0

Checking conditional non-termination of SCC {l1}...
EXIT TRANSITIONS:
<l1, end, y_6^0 <= x_5^0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.023179s
Time used: 5.00258
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.027448s
Time used: 5.00112
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.029258s
Time used: 5.0006
> Checking if the negation of the conditions of every pending exit is quasi-invariant... NO

Proving non-termination of subgraph 1
Transitions:
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>
Variables:
x_5^0, y_6^0

Checking conditional non-termination of SCC {l1}...
EXIT TRANSITIONS:
<l1, end, y_6^0 <= x_5^0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007706s
Time used: 0.007565
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.013571s
Time used: 0.01351

LOG: SAT solveNonLinear - Elapsed time: 0.021276s
Cost: 1; Total time: 0.021075
[31mFailed at location 1: 1 + x_5^0 <= y_6^0[0m
Before Improving: 
[36mQuasi-invariant at l1: 1 + x_5^0 <= y_6^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005837s
Remaining time after improvement: 0.999289
Minimizing number of undef constraints...

LOG: CALL solveNonLinear

LOG: RETURN solveNonLinear - Elapsed time: 0.001241s
Number of undef constraints reduced!

[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l1: 1 + x_5^0 <= y_6^0[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l1: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {all remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {all remain the same}>

Calling reachability with...
Transition: <l1, end, true, {all remain the same}>
Conditions: 1 + x_5^0 <= y_6^0, 
OPEN EXITS: 
<l1, end, 1 + x_5^0 <= y_6^0, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l1, true, {all remain the same}>
Conditions: 1 + x_5^0 <= y_6^0, 
OPEN EXITS: 
<l0, l1, 1 + x_5^0 <= y_6^0, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

