YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l4, l5, ((2 * undef5) > 0) /\ (arg2 > 0) /\ ((((2 * undef5) + 1) - (2 * undef6)) = 1) /\ (undef5 > ~(1)) /\ (arg1 > 0) /\ (undef7 > 2), par{arg3 -> undef3, arg4 -> undef4}>
<l5, l6, ((2 * undef12) > 0) /\ (arg2 > 0) /\ ((((2 * undef12) + 1) - (2 * undef13)) = 1) /\ (undef12 > ~(1)) /\ (arg1 > 0) /\ (undef8 > 2) /\ ((((2 * undef12) + 1) - (2 * undef13)) < 2) /\ ((((2 * undef12) + 1) - (2 * undef13)) >= 0), par{arg1 -> undef8, arg2 -> 0, arg3 -> ((2 * undef12) + 1), arg4 -> undef11}>
<l6, l8, (undef14 <= arg1) /\ (arg2 < 3) /\ (arg1 > 2) /\ (undef14 > 2) /\ ((arg3 + 4) <= arg1), par{arg1 -> undef14, arg3 -> 0, arg4 -> arg3}>
<l8, l6, (arg1 >= undef18) /\ (arg3 > 2) /\ (arg1 > 2) /\ (undef18 > 2) /\ (arg1 >= (arg4 + 4)), par{arg1 -> undef18, arg2 -> (arg2 + 1), arg3 -> arg4, arg4 -> undef21}>
<l8, l8, (arg4 > arg2) /\ (arg3 < 3) /\ (undef26 > arg3) /\ (undef26 > ~(1)) /\ (undef22 <= arg1) /\ (arg1 > 2) /\ (undef22 > 2) /\ ((arg4 + 4) <= arg1), par{arg1 -> undef22, arg3 -> (arg3 + 1)}>
<l6, l7, (arg3 > 1) /\ (arg2 > 2) /\ (arg3 > undef31) /\ (arg3 > undef32) /\ (undef33 <= arg1) /\ (arg1 > 2) /\ (undef33 > 2) /\ ((arg3 + 4) <= arg1), par{arg4 -> undef30}>
<l7, l2, (arg3 > 1) /\ (arg2 > 2) /\ (arg3 > undef38) /\ (arg3 > undef39) /\ (undef34 <= arg1) /\ (arg1 > 2) /\ (undef34 > 2) /\ ((arg3 + 4) <= arg1) /\ ((arg3 - (2 * undef38)) >= 0) /\ ((arg3 - (2 * undef38)) < 2) /\ ((arg3 - (2 * undef39)) < 2) /\ ((arg3 - (2 * undef39)) >= 0), par{arg1 -> undef34, arg2 -> 0, arg4 -> undef37}>
<l2, l3, (undef40 <= arg1) /\ (arg3 > arg2) /\ (arg1 > 2) /\ (undef40 > 2) /\ ((arg3 + 4) <= arg1), par{arg1 -> undef40, arg3 -> 0, arg4 -> arg3}>
<l3, l2, (undef44 <= arg1) /\ (arg4 <= arg3) /\ (arg1 > 2) /\ (undef44 > 2) /\ ((arg4 + 4) <= arg1), par{arg1 -> undef44, arg2 -> (arg2 + 1), arg3 -> arg4, arg4 -> undef47}>
<l3, l3, (undef48 <= arg1) /\ (arg4 > arg3) /\ (arg1 > 2) /\ (undef48 > 2) /\ ((arg4 + 4) <= arg1), par{arg1 -> undef48, arg3 -> (arg3 + 1)}>
<l1, l4, true, par{arg1 -> undef52, arg2 -> undef53, arg3 -> undef54, arg4 -> undef55}>

Fresh variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef11, undef12, undef13, undef14, undef18, undef21, undef22, undef26, undef30, undef31, undef32, undef33, undef34, undef37, undef38, undef39, undef40, undef44, undef47, undef48, undef52, undef53, undef54, undef55, 

Undef variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef11, undef12, undef13, undef14, undef18, undef21, undef22, undef26, undef30, undef31, undef32, undef33, undef34, undef37, undef38, undef39, undef40, undef44, undef47, undef48, undef52, undef53, undef54, undef55, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l8, (arg2 = 0) /\ (arg3 = 0) /\ (arg4 = ((2 * undef12) + 1)) /\ ((2 * undef5) > 0) /\ (undef53 > 0) /\ ((((2 * undef5) + 1) - (2 * undef6)) = 1) /\ (undef5 > ~(1)) /\ (undef52 > 0) /\ (undef7 > 2) /\ ((2 * undef12) > 0) /\ (undef53 > 0) /\ ((((2 * undef12) + 1) - (2 * undef13)) = 1) /\ (undef12 > ~(1)) /\ (undef52 > 0) /\ (undef8 > 2) /\ ((((2 * undef12) + 1) - (2 * undef13)) < 2) /\ ((((2 * undef12) + 1) - (2 * undef13)) >= 0) /\ (undef14 <= undef8) /\ (0 < 3) /\ (undef8 > 2) /\ (undef14 > 2) /\ ((((2 * undef12) + 1) + 4) <= undef8), par{arg1 -> undef14}>
<l3, l3, (undef44 <= arg1) /\ (arg4 <= arg3) /\ (arg1 > 2) /\ (undef44 > 2) /\ ((arg4 + 4) <= arg1) /\ (undef40 <= undef44) /\ (arg4 > (arg2 + 1)) /\ (undef44 > 2) /\ (undef40 > 2) /\ ((arg4 + 4) <= undef44), par{arg1 -> undef40, arg2 -> (arg2 + 1), arg3 -> 0, arg4 -> arg4}>
<l3, l3, (undef48 <= arg1) /\ (arg4 > arg3) /\ (arg1 > 2) /\ (undef48 > 2) /\ ((arg4 + 4) <= arg1), par{arg1 -> undef48, arg3 -> (arg3 + 1)}>
<l8, l8, (arg1 >= undef18) /\ (arg3 > 2) /\ (arg1 > 2) /\ (undef18 > 2) /\ (arg1 >= (arg4 + 4)) /\ (undef14 <= undef18) /\ ((arg2 + 1) < 3) /\ (undef18 > 2) /\ (undef14 > 2) /\ ((arg4 + 4) <= undef18), par{arg1 -> undef14, arg2 -> (arg2 + 1), arg3 -> 0, arg4 -> arg4}>
<l8, l3, (arg1 >= undef18) /\ (arg3 > 2) /\ (arg1 > 2) /\ (undef18 > 2) /\ (arg1 >= (arg4 + 4)) /\ (arg4 > 1) /\ ((arg2 + 1) > 2) /\ (arg4 > undef31) /\ (arg4 > undef32) /\ (undef33 <= undef18) /\ (undef18 > 2) /\ (undef33 > 2) /\ ((arg4 + 4) <= undef18) /\ (arg4 > 1) /\ ((arg2 + 1) > 2) /\ (arg4 > undef38) /\ (arg4 > undef39) /\ (undef34 <= undef18) /\ (undef18 > 2) /\ (undef34 > 2) /\ ((arg4 + 4) <= undef18) /\ ((arg4 - (2 * undef38)) >= 0) /\ ((arg4 - (2 * undef38)) < 2) /\ ((arg4 - (2 * undef39)) < 2) /\ ((arg4 - (2 * undef39)) >= 0) /\ (undef40 <= undef34) /\ (arg4 > 0) /\ (undef34 > 2) /\ (undef40 > 2) /\ ((arg4 + 4) <= undef34), par{arg1 -> undef40, arg2 -> 0, arg3 -> 0, arg4 -> arg4}>
<l8, l8, (arg4 > arg2) /\ (arg3 < 3) /\ (undef26 > arg3) /\ (undef26 > ~(1)) /\ (undef22 <= arg1) /\ (arg1 > 2) /\ (undef22 > 2) /\ ((arg4 + 4) <= arg1), par{arg1 -> undef22, arg3 -> (arg3 + 1)}>

Fresh variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef11, undef12, undef13, undef14, undef18, undef21, undef22, undef26, undef30, undef31, undef32, undef33, undef34, undef37, undef38, undef39, undef40, undef44, undef47, undef48, undef52, undef53, undef54, undef55, 

Undef variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef11, undef12, undef13, undef14, undef18, undef21, undef22, undef26, undef30, undef31, undef32, undef33, undef34, undef37, undef38, undef39, undef40, undef44, undef47, undef48, undef52, undef53, undef54, undef55, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l8, l8, undef18 <= arg1 /\ undef14 <= undef18 /\ arg2 <= 1 /\ 3 <= arg1 /\ 3 <= arg3 /\ 3 <= undef14 /\ 3 <= undef18 /\ 4 + arg4 <= arg1 /\ 4 + arg4 <= undef18, {arg1 -> undef14, arg2 -> 1 + arg2, arg3 -> 0, rest remain the same}>
<l8, l8, undef22 <= arg1 /\ 0 <= undef26 /\ 1 + arg2 <= arg4 /\ 1 + arg3 <= undef26 /\ 3 <= arg1 /\ 3 <= undef22 /\ 4 + arg4 <= arg1 /\ arg3 <= 2, {arg1 -> undef22, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 2:
Transitions:
<l3, l3, 2 + arg2 <= arg4 /\ undef44 <= arg1 /\ arg4 <= arg3 /\ undef40 <= undef44 /\ 3 <= arg1 /\ 3 <= undef40 /\ 3 <= undef44 /\ 4 + arg4 <= arg1 /\ 4 + arg4 <= undef44, {arg1 -> undef40, arg2 -> 1 + arg2, arg3 -> 0, rest remain the same}>
<l3, l3, undef48 <= arg1 /\ 1 + arg3 <= arg4 /\ 3 <= arg1 /\ 3 <= undef48 /\ 4 + arg4 <= arg1, {arg1 -> undef48, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l8, undef14 <= undef8 /\ 1 <= undef5 /\ 1 <= undef12 /\ 1 <= undef52 /\ 1 <= undef53 /\ 3 <= undef7 /\ 3 <= undef8 /\ 3 <= undef14 /\ 5 + 2*undef12 <= undef8 /\ arg2 = 0 /\ arg3 = 0 /\ undef5 = undef6 /\ undef12 = undef13 /\ arg4 = 1 + 2*undef12, {arg1 -> undef14, rest remain the same}>

Graph 2
<l8, l3, 2 <= arg2 /\ 2 <= arg4 /\ undef18 <= arg1 /\ 2*undef38 <= arg4 /\ 2*undef39 <= arg4 /\ undef33 <= undef18 /\ undef34 <= undef18 /\ undef40 <= undef34 /\ 1 + undef31 <= arg4 /\ 1 + undef32 <= arg4 /\ 1 + undef38 <= arg4 /\ 1 + undef39 <= arg4 /\ arg4 <= 1 + 2*undef38 /\ arg4 <= 1 + 2*undef39 /\ 3 <= arg1 /\ 3 <= arg3 /\ 3 <= undef18 /\ 3 <= undef33 /\ 3 <= undef34 /\ 3 <= undef40 /\ 4 + arg4 <= arg1 /\ 4 + arg4 <= undef18 /\ 4 + arg4 <= undef34, {arg1 -> undef40, arg2 -> 0, arg3 -> 0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 2 )
( 8 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.012003

Checking conditional termination of SCC {l8}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001543s
[33mRanking function: [36m-2 + arg1 - arg2[0m
New Graphs: 
Transitions:
<l8, l8, undef22 <= arg1 /\ 0 <= undef26 /\ 1 + arg2 <= arg4 /\ 1 + arg3 <= undef26 /\ 3 <= arg1 /\ 3 <= undef22 /\ 4 + arg4 <= arg1 /\ arg3 <= 2, {arg1 -> undef22, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l8}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000639s
[33mRanking function: [36m2 - arg3[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.011855

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001350s
[33mRanking function: [36m-12 + (7 / 3)*arg1 + (~(4) / 3)*arg2 - arg4[0m
New Graphs: 
Transitions:
<l3, l3, undef48 <= arg1 /\ 1 + arg3 <= arg4 /\ 3 <= arg1 /\ 3 <= undef48 /\ 4 + arg4 <= arg1, {arg1 -> undef48, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000516s
[33mRanking function: [36m-1 - arg3 + arg4[0m
New Graphs: 
[32mProgram Terminates[0m

