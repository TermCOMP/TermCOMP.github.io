YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (undef2 > ~(1)) /\ (arg2 > ~(1)) /\ (undef1 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef1, arg4 -> undef2, arg5 -> undef1}>
<l3, l3, (arg3 > 0) /\ (arg4 > 0) /\ (arg3 = arg5), par{arg3 -> (arg3 - 1), arg4 -> (arg4 - 1), arg5 -> (arg3 - 1)}>
<l3, l3, (arg3 > 0) /\ (0 = arg4) /\ (arg3 = arg5), par{arg2 -> (arg2 + 1), arg3 -> arg1, arg4 -> (arg2 + 1), arg5 -> arg1}>
<l1, l2, true, par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> undef19, arg5 -> undef20}>

Fresh variables:
undef1, undef2, undef16, undef17, undef18, undef19, undef20, 

Undef variables:
undef1, undef2, undef16, undef17, undef18, undef19, undef20, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef1) /\ (arg2 = undef2) /\ (arg3 = undef1) /\ (arg4 = undef2) /\ (arg5 = undef1) /\ (undef2 > ~(1)) /\ (undef17 > ~(1)) /\ (undef1 > ~(1)) /\ (undef16 > 0)>
<l3, l3, (arg3 > 0) /\ (arg4 > 0) /\ (arg3 = arg5), par{arg3 -> (arg3 - 1), arg4 -> (arg4 - 1), arg5 -> (arg3 - 1)}>
<l3, l3, (arg3 > 0) /\ (0 = arg4) /\ (arg3 = arg5), par{arg2 -> (arg2 + 1), arg3 -> arg1, arg4 -> (arg2 + 1), arg5 -> arg1}>

Fresh variables:
undef1, undef2, undef16, undef17, undef18, undef19, undef20, 

Undef variables:
undef1, undef2, undef16, undef17, undef18, undef19, undef20, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg3 /\ 1 <= arg4 /\ arg3 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg3, rest remain the same}>
<l3, l3, 1 <= arg3 /\ arg3 = arg5 /\ arg4 = 0, {arg2 -> 1 + arg2, arg3 -> arg1, arg4 -> 1 + arg2, arg5 -> arg1, rest remain the same}>
Variables:
arg3, arg4, arg5, arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef16 /\ 0 <= undef1 /\ 0 <= undef2 /\ 0 <= undef17 /\ arg1 = undef1 /\ arg2 = undef2 /\ arg3 = undef1 /\ arg4 = undef2 /\ arg5 = undef1, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.005174

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000769s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002771s
Trying to remove transition: <l3, l3, 1 <= arg3 /\ arg3 = arg5 /\ arg4 = 0, {arg2 -> 1 + arg2, arg3 -> arg1, arg4 -> 1 + arg2, arg5 -> arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010401s
Time used: 0.010177
Trying to remove transition: <l3, l3, 1 <= arg3 /\ 1 <= arg4 /\ arg3 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006642s
Time used: 0.005951
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020051s
Time used: 0.019567

LOG: SAT solveNonLinear - Elapsed time: 0.020051s
Cost: 0; Total time: 0.019567
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l3: arg2 + arg3 <= arg1 + arg4[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg3 /\ 1 <= arg4 /\ arg2 + arg3 <= arg1 + arg4 /\ arg3 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg3 /\ arg2 + arg3 <= arg1 + arg4 /\ arg3 = arg5 /\ arg4 = 0, {arg2 -> 1 + arg2, arg3 -> arg1, arg4 -> 1 + arg2, arg5 -> arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg3 /\ 1 <= arg4 /\ arg2 + arg3 <= arg1 + arg4 /\ arg3 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg3 /\ arg2 + arg3 <= arg1 + arg4 /\ arg3 = arg5 /\ arg4 = 0, {arg2 -> 1 + arg2, arg3 -> arg1, arg4 -> 1 + arg2, arg5 -> arg1, rest remain the same}>
[33mRanking function: [36m2*arg1 - 2*arg2 + arg4 - arg5[0m
New Graphs: 
Transitions:
<l3, l3, 1 <= arg3 /\ 1 <= arg4 /\ arg2 + arg3 <= arg1 + arg4 /\ arg3 = arg5, {arg3 -> -1 + arg3, arg4 -> -1 + arg4, arg5 -> -1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000510s
[33mRanking function: [36m-1 + arg3[0m
New Graphs: 
INVARIANTS: 
3: arg2 + arg3 <= arg1 + arg4 , 
Quasi-INVARIANTS to narrow Graph: 
3: 
[32mProgram Terminates[0m

