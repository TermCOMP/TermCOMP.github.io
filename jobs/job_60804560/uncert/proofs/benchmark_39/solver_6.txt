NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l4, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg3 -> arg2, arg4 -> undef4}>
<l4, l4, (arg1 >= arg2) /\ (arg1 > 1) /\ (arg2 > 4) /\ (arg1 = arg3), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1), arg3 -> (arg1 - 1), arg4 -> undef8}>
<l4, l2, (arg1 < arg2) /\ (arg2 > 1) /\ ((arg1 + 1) >= (2 * arg2)) /\ (arg1 > 0) /\ (arg1 = arg3), par{arg3 -> (arg1 + 1), arg4 -> (arg2 + 1)}>
<l4, l2, (arg1 < arg2) /\ (arg2 > 1) /\ ((arg1 + 1) < (2 * arg2)) /\ (arg1 > 0) /\ (arg1 = arg3), par{arg3 -> (arg1 + 1), arg4 -> (arg2 - 1)}>
<l2, l4, (arg1 > 0) /\ (arg2 > 1) /\ (arg3 > 1) /\ (arg4 > 0) /\ (arg2 > arg1) /\ (arg2 >= arg3) /\ (arg1 <= arg4), par{arg1 -> arg3, arg2 -> arg4, arg4 -> undef20}>
<l4, l4, (arg1 > 0) /\ (arg1 >= arg2) /\ (arg2 < 5) /\ (((arg1 - 1) - (arg2 + 1)) <= 2) /\ (arg2 > ~(1)) /\ (arg1 = arg3), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 2), arg3 -> (arg1 - 1), arg4 -> undef24}>
<l4, l4, (arg1 > 0) /\ (arg1 >= arg2) /\ (arg2 < 5) /\ (((arg1 - 1) - (arg2 + 1)) > 2) /\ (arg2 > ~(1)) /\ (arg1 = arg3), par{arg2 -> (arg2 + 1), arg3 -> arg1, arg4 -> undef28}>
<l1, l3, true, par{arg1 -> undef29, arg2 -> undef30, arg3 -> undef31, arg4 -> undef32}>

Fresh variables:
undef4, undef8, undef20, undef24, undef28, undef29, undef30, undef31, undef32, 

Undef variables:
undef4, undef8, undef20, undef24, undef28, undef29, undef30, undef31, undef32, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (arg1 = undef30) /\ (arg2 = undef30) /\ (arg3 = undef30) /\ (undef29 > 0) /\ (undef30 > ~(1))>
<l4, l4, (arg1 >= arg2) /\ (arg1 > 1) /\ (arg2 > 4) /\ (arg1 = arg3), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1), arg3 -> (arg1 - 1)}>
<l4, l4, (arg1 < arg2) /\ (arg2 > 1) /\ ((arg1 + 1) < (2 * arg2)) /\ (arg1 > 0) /\ (arg1 = arg3) /\ (arg1 > 0) /\ (arg2 > 1) /\ ((arg1 + 1) > 1) /\ ((arg2 - 1) > 0) /\ (arg2 > arg1) /\ (arg2 >= (arg1 + 1)) /\ (arg1 <= (arg2 - 1)), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1), arg3 -> (arg1 + 1)}>
<l4, l4, (arg1 > 0) /\ (arg1 >= arg2) /\ (arg2 < 5) /\ (((arg1 - 1) - (arg2 + 1)) <= 2) /\ (arg2 > ~(1)) /\ (arg1 = arg3), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 2), arg3 -> (arg1 - 1)}>
<l4, l4, (arg1 > 0) /\ (arg1 >= arg2) /\ (arg2 < 5) /\ (((arg1 - 1) - (arg2 + 1)) > 2) /\ (arg2 > ~(1)) /\ (arg1 = arg3), par{arg2 -> (arg2 + 1), arg3 -> arg1}>

Fresh variables:
undef4, undef8, undef20, undef24, undef28, undef29, undef30, undef31, undef32, 

Undef variables:
undef4, undef8, undef20, undef24, undef28, undef29, undef30, undef31, undef32, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, arg2 <= arg1 /\ 2 <= arg1 /\ 5 <= arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>
<l4, l4, 0 <= arg2 /\ 1 <= arg1 /\ 5 + arg2 <= arg1 /\ arg2 <= 4 /\ arg1 = arg3, {arg2 -> 1 + arg2, arg3 -> arg1, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l4, 0 <= undef30 /\ 1 <= undef29 /\ arg1 = undef30 /\ arg2 = undef30 /\ arg3 = undef30, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.011866
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l4: arg3 <= 1 + arg2[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l4, l4, 0 <= arg2 /\ 1 <= arg1 /\ 5 + arg2 <= arg1 /\ arg2 <= 4 /\ arg1 = arg3, {arg2 -> 1 + arg2, arg3 -> arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>
Checking unfeasibility...
Time used: 0.048899

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001472s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.173372s
Trying to remove transition: <l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018389s
Time used: 4.00013
Trying to remove transition: <l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.486659s
Time used: 0.477088
Trying to remove transition: <l4, l4, arg2 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017399s
Time used: 4.00002
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.029017s
Time used: 4.00003
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.027361s
Time used: 4.00007
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.020455s
Time used: 1.00003
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.038904s
Time used: 4.00009
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l4, 0 <= undef30 /\ 1 <= undef29 /\ arg1 = undef30 /\ arg2 = undef30 /\ arg3 = undef30, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l4, 0 <= undef30 /\ 1 <= undef29 /\ arg1 = undef30 /\ arg2 = undef30 /\ arg3 = undef30, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013702s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.013752s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l4, l4, arg2 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>
Variables:
arg1, arg2, arg3

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, arg2 <= arg1 /\ 1 + arg3 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg3 <= arg1 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg3 <= arg1 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg3 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 0 <= arg2 /\ 1 + arg3 <= arg1 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 + arg2 <= 0 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ arg2 <= arg1 /\ 0 <= arg2 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg1 <= 0 /\ arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ 1 + arg2 <= 0 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg3 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg3 <= arg1 /\ arg1 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg3 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = 1, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg3 <= arg1 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg3 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg3 <= arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = 1, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.313951s
Time used: 0.312098
Improving Solution with cost 40 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004325s
Time used: 1.00032

LOG: SAT solveNonLinear - Elapsed time: 1.318276s
Cost: 40; Total time: 1.31242
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg1 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 12
Strengthening exit transition (result): 
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ arg2 <= arg1 /\ 0 <= arg2 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg2 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ 1 + arg2 <= 0 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = 1, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg1 <= 0 /\ arg2 <= arg1 /\ 0 <= arg2 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg1 <= 0 /\ arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2, {all remain the same}>
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ 1 + arg2 <= 0 /\ arg1 <= 1 /\ 2*arg2 <= 1 + arg1 /\ arg3 <= 1 + arg2, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = arg3, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4 /\ arg1 = 1, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ 2*arg2 <= 1 + arg1 /\ arg2 <= 1 /\ arg3 <= 1 + arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ arg2 <= 4, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg2 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.077444s
Time used: 0.076836
Improving Solution with cost 15 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.675872s
Time used: 0.673252
Improving Solution with cost 14 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004147s
Time used: 1.00042

LOG: SAT solveNonLinear - Elapsed time: 1.757462s
Cost: 14; Total time: 1.75051
[31mFailed at location 4: 8 + arg3 <= 2*arg1 + arg2[0m
Before Improving: 
[36mQuasi-invariant at l4: 8 + arg3 <= 2*arg1 + arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.023604s
Remaining time after improvement: 0.99649
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: 8 + arg3 <= 2*arg1 + arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 12
Strengthening exit transition (result): 
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, arg2 <= arg1 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg1 /\ 2 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2, {all remain the same}>
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {all remain the same}>
<l4, end, 1 + arg1 <= arg2 /\ 1 + arg1 <= arg3 /\ arg1 <= 1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013600s
Time used: 0.013378
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.022239s
Time used: 0.022145

LOG: SAT solveNonLinear - Elapsed time: 0.035839s
Cost: 1; Total time: 0.035523
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg3 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 3
Strengthening exit transition (result): 
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, arg1 <= 0 /\ 1 + arg1 <= arg2 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007266s
Time used: 0.007183

LOG: SAT solveNonLinear - Elapsed time: 0.007266s
Cost: 0; Total time: 0.007183
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg2 <= 1 + arg1 + arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ arg2 <= 1 + arg1 + arg3 /\ arg3 <= 1 + arg2 /\ 2 <= arg1 /\ 5 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + arg1 <= arg2 /\ 1 <= arg1 /\ arg2 <= 1 + arg1 + arg3 /\ arg3 <= 1 + arg2 /\ 2 + arg1 <= 2*arg2 /\ 2 <= arg2 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= arg1 /\ 0 <= arg2 /\ 1 <= arg1 /\ arg2 <= 1 + arg1 + arg3 /\ arg3 <= 1 + arg2 /\ arg1 <= 4 + arg2 /\ arg2 <= 4 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {arg1 -> -1 + arg1, arg2 -> 2 + arg2, arg3 -> -1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l4, end, true, {all remain the same}>
Conditions: arg1 <= arg3, 8 + arg3 <= 2*arg1 + arg2, arg3 <= arg1, arg2 <= 1 + arg1 + arg3, 
OPEN EXITS: 
<l4, end, arg2 <= 1 + arg1 + arg3 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l4, 0 <= undef30 /\ 1 <= undef29 /\ arg1 = undef30 /\ arg2 = undef30 /\ arg3 = undef30, {all remain the same}>
Conditions: arg2 <= 1 + arg1 + arg3, 8 + arg3 <= 2*arg1 + arg2, arg1 = arg3, 
OPEN EXITS: 
<l0, l4, 0 <= undef30 /\ 1 <= undef29 /\ arg2 <= 1 + arg1 + arg3 /\ 8 + arg3 <= 2*arg1 + arg2 /\ arg1 = arg3 /\ arg1 = undef30 /\ arg2 = undef30 /\ arg3 = undef30, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

