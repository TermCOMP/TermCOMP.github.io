NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l72, true>
<l1, l2, ((0 + i21^0) <= 0)>
<l1, l13, (1 <= (0 + i21^0)), par{i21^0 -> (~(1) + i21^0)}>
<l13, l1, true>
<l24, l13, ((1 + i21^0) <= 0), par{i21^0 -> (16 + i21^0)}>
<l24, l35, (0 <= (0 + i21^0))>
<l2, l46, true>
<l57, l68, true, par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l73, l35, (65536 <= (0 + fcode5^0)) /\ (undef379 = (0 + hsize^0)) /\ (undef377 = (0 + undef379)), par{hshift11^0 -> (8 + (~(1) * hshift11^0)), hsize___019^0 -> undef377, hsize_reg10^0 -> undef379, i21^0 -> (~(16) + undef377), m122^0 -> ~(1)}>
<l73, l74, ((1 + fcode5^0) <= 65536) /\ (undef424 = undef424), par{fcode5^0 -> undef424, hshift11^0 -> (1 + hshift11^0)}>
<l3, l4, true, par{i29^0 -> (~(16) + i29^0)}>
<l5, l74, (undef557 = (0 + ret_getbyte18^0)), par{ent8^0 -> (0 + undef557), fcode5^0 -> (0 + hsize^0), hshift11^0 -> 0, tmp12^0 -> undef557}>
<l6, l7, true>
<l8, l5, ((0 + tmp___017^0) <= 0), par{ret_getbyte18^0 -> 429496}>
<l8, l5, (1 <= (0 + tmp___017^0)) /\ (undef706 = undef706), par{InCnt^0 -> (~(1) + InCnt^0), ret_getbyte18^0 -> undef706}>
<l9, l5, ((0 + InCnt^0) <= 0), par{ret_getbyte18^0 -> 429496}>
<l9, l8, (1 <= (0 + InCnt^0)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), tmp___017^0 -> (0 + apsim_InCnt^0)}>
<l10, l9, true, par{free_ent^0 -> 257}>
<l11, l9, ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0)), par{free_ent^0 -> 256}>
<l11, l10, (1 <= (0 + block_compress^0))>
<l11, l10, ((1 + block_compress^0) <= 0)>
<l12, l14, (undef1027 = undef1027), par{bits33^0 -> (~(1) + bits33^0), c37^0 -> undef1027}>
<l15, l16, true>
<l17, l18, true>
<l19, l17, ((0 + bytes_out^0) <= (0 + in_count^0))>
<l19, l17, ((1 + in_count^0) <= (0 + bytes_out^0)), par{exit_stat^0 -> 2}>
<l20, l21, (undef1281 = undef1281), par{bytes_out^0 -> undef1281, offset^0 -> 0}>
<l22, l20, true>
<l23, l22, (16 <= (0 + i45^0))>
<l23, l25, ((1 + i45^0) <= 16), par{i45^0 -> (1 + i45^0)}>
<l26, l22, ((0 + n44^0) <= (0 + i45^0))>
<l26, l23, ((1 + i45^0) <= (0 + n44^0))>
<l27, l20, ((0 + offset^0) <= 0)>
<l27, l25, (1 <= (0 + offset^0)) /\ (undef1668 = undef1668), par{i45^0 -> 0, n44^0 -> undef1668}>
<l28, l21, (undef1716 = undef1716), par{maxcode^0 -> undef1716}>
<l29, l28, ((1 + maxbits^0) <= (0 + n_bits^0))>
<l29, l28, ((1 + n_bits^0) <= (0 + maxbits^0))>
<l29, l21, ((0 + n_bits^0) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + n_bits^0)), par{maxcode^0 -> (0 + maxmaxcode^0)}>
<l21, l30, true>
<l31, l21, (undef1971 = undef1971), par{clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9}>
<l32, l29, ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)), par{n_bits^0 -> (1 + n_bits^0)}>
<l32, l31, (1 <= (0 + clear_flg^0))>
<l32, l31, ((1 + clear_flg^0) <= 0)>
<l33, l32, true, par{offset^0 -> 0}>
<l34, l33, true, par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0)}>
<l36, l34, (16 <= (0 + i41^0))>
<l36, l15, ((1 + i41^0) <= 16), par{i41^0 -> (1 + i41^0)}>
<l16, l34, ((0 + n40^0) <= (0 + i41^0))>
<l16, l36, ((1 + i41^0) <= (0 + n40^0))>
<l37, l33, ((0 + offset^0) <= 0)>
<l37, l15, (1 <= (0 + offset^0)), par{i41^0 -> 0, n40^0 -> (0 + n_bits^0)}>
<l38, l21, ((0 + clear_flg^0) <= 0)>
<l38, l37, (1 <= (0 + clear_flg^0))>
<l39, l38, ((0 + free_ent^0) <= (0 + maxcode^0))>
<l39, l37, ((1 + maxcode^0) <= (0 + free_ent^0))>
<l40, l39, true, par{offset^0 -> 0}>
<l41, l12, true>
<l41, l40, true>
<l14, l40, ((0 + bits33^0) <= 0) /\ (0 <= (0 + bits33^0))>
<l14, l41, (1 <= (0 + bits33^0))>
<l14, l41, ((1 + bits33^0) <= 0)>
<l42, l12, (undef3064 = (0 + n_bits^0)), par{bits33^0 -> undef3064, bytes_out^0 -> ((0 + undef3064) + bytes_out^0)}>
<l42, l39, true>
<l43, l42, true, par{offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l44, l43, true>
<l45, l43, ((0 + bits33^0) <= 0) /\ (0 <= (0 + bits33^0))>
<l45, l44, (1 <= (0 + bits33^0))>
<l45, l44, ((1 + bits33^0) <= 0)>
<l47, l45, ((1 + bits33^0) <= 8)>
<l47, l45, (8 <= (0 + bits33^0)) /\ (undef3479 = undef3479), par{bits33^0 -> (~(8) + bits33^0), code31^0 -> undef3479}>
<l25, l26, true>
<l48, l27, ((1 + code31^0) <= 0)>
<l48, l47, (0 <= (0 + code31^0)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632), par{bits33^0 -> ((~(8) + bits33^0) + undef3661), code31^0 -> undef3632, r_off32^0 -> undef3661}>
<l7, l48, ((0 + i29^0) <= 0), par{bits33^0 -> (0 + n_bits^0), clear_flg^0 -> 1, code31^0 -> 256, free_ent^0 -> 257, r_off32^0 -> (0 + offset^0)}>
<l7, l6, (1 <= (0 + i29^0)), par{i29^0 -> (~(1) + i29^0)}>
<l4, l6, ((1 + i29^0) <= 0), par{i29^0 -> (16 + i29^0)}>
<l4, l3, (0 <= (0 + i29^0))>
<l30, l2, true>
<l49, l50, (undef3968 = undef3968), par{rat26^0 -> undef3968}>
<l50, l3, ((0 + rat26^0) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{hsize___027^0 -> undef3999, i29^0 -> (~(16) + undef3999), m130^0 -> ~(1), ratio^0 -> 0}>
<l50, l30, ((1 + ratio^0) <= (0 + rat26^0)), par{ratio^0 -> (0 + rat26^0)}>
<l51, l49, (1 <= (0 + rat26^0))>
<l51, l49, ((1 + rat26^0) <= 0)>
<l51, l50, ((0 + rat26^0) <= 0) /\ (0 <= (0 + rat26^0)), par{rat26^0 -> 2147483647}>
<l52, l11, (50 <= (0 + i3^0)) /\ (undef4267 = undef4267) /\ (undef4266 = undef4266), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> 53, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l52, l53, ((1 + i3^0) <= 50) /\ (undef4329 = undef4329), par{i3^0 -> (1 + i3^0), seed2^0 -> undef4329, tabort4^0 -> (0 + i3^0)}>
<l54, l50, ((0 + in_count^0) <= 8388607) /\ (undef4376 = undef4376), par{rat26^0 -> undef4376}>
<l54, l51, (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427), par{rat26^0 -> undef4427}>
<l55, l54, true, par{checkpoint^0 -> (10000 + in_count^0)}>
<l56, l2, ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0))>
<l56, l55, (1 <= (0 + block_compress^0))>
<l56, l55, ((1 + block_compress^0) <= 0)>
<l58, l2, ((1 + in_count^0) <= (0 + checkpoint^0))>
<l58, l56, ((0 + checkpoint^0) <= (0 + in_count^0))>
<l59, l58, ((0 + maxmaxcode^0) <= (0 + free_ent^0))>
<l59, l2, ((1 + free_ent^0) <= (0 + maxmaxcode^0)), par{free_ent^0 -> (1 + free_ent^0), tmp___115^0 -> (0 + free_ent^0)}>
<l60, l59, true, par{ent8^0 -> (0 + c7^0), out_count^0 -> (1 + out_count^0)}>
<l61, l60, ((0 + in_count^0) <= (0 + apsim_bound11113^0))>
<l61, l57, ((1 + apsim_bound11113^0) <= (0 + in_count^0))>
<l62, l61, true, par{apsim_bound11113^0 -> (1 + apsim_bound11113^0)}>
<l62, l60, true>
<l63, l62, true>
<l63, l2, (undef5165 = undef5165), par{ent8^0 -> undef5165}>
<l63, l62, true>
<l68, l63, (0 <= (0 + i6^0))>
<l68, l63, ((1 + i6^0) <= 0), par{i6^0 -> ((0 + hsize_reg10^0) + i6^0)}>
<l64, l57, (1 <= (0 + i6^0))>
<l64, l57, ((1 + i6^0) <= 0)>
<l64, l57, ((0 + i6^0) <= 0) /\ (0 <= (0 + i6^0)), par{disp9^0 -> 1}>
<l65, l60, true>
<l65, l64, true, par{disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * i6^0))}>
<l66, l65, true>
<l66, l2, (undef5675 = undef5675), par{ent8^0 -> undef5675}>
<l66, l65, true>
<l53, l52, true>
<l67, l66, (undef5862 = (0 + ret_getbyte25^0)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842), par{c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0), tmp___014^0 -> undef5862}>
<l74, l73, true>
<l69, l67, ((0 + tmp___024^0) <= 0), par{ret_getbyte25^0 -> 429496}>
<l69, l67, (1 <= (0 + tmp___024^0)) /\ (undef6011 = undef6011), par{InCnt^0 -> (~(1) + InCnt^0), ret_getbyte25^0 -> undef6011}>
<l70, l67, ((0 + InCnt^0) <= 0), par{ret_getbyte25^0 -> 429496}>
<l70, l69, (1 <= (0 + InCnt^0)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), tmp___024^0 -> (0 + apsim_InCnt^0)}>
<l46, l19, ((0 + InCnt^0) <= 0)>
<l46, l70, (1 <= (0 + InCnt^0)), par{apsim_bound11113^0 -> 0}>
<l35, l24, true, par{i21^0 -> (~(16) + i21^0)}>
<l71, l53, true, par{count^0 -> 50, i3^0 -> 0, seed2^0 -> 1}>
<l72, l71, true>

Fresh variables:
undef377, undef379, undef424, undef557, undef706, undef1027, undef1281, undef1668, undef1716, undef1971, undef3064, undef3479, undef3632, undef3661, undef3968, undef3999, undef4266, undef4267, undef4329, undef4376, undef4427, undef5165, undef5675, undef5830, undef5842, undef5862, undef6011, 

Undef variables:
undef377, undef379, undef424, undef557, undef706, undef1027, undef1281, undef1668, undef1716, undef1971, undef3064, undef3479, undef3632, undef3661, undef3968, undef3999, undef4266, undef4267, undef4329, undef4376, undef4427, undef5165, undef5675, undef5830, undef5842, undef5862, undef6011, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l53, (50 = 50) /\ (i3^0 = 0)>
<l2, l18, ((0 + InCnt^0) <= 0) /\ ((0 + bytes_out^0) <= (0 + in_count^0))>
<l2, l18, ((0 + InCnt^0) <= 0) /\ ((1 + in_count^0) <= (0 + bytes_out^0))>
<l2, l59, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ (1 <= (0 + undef5842)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((1 + undef5842) <= 0), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((0 + undef5842) <= 0) /\ (0 <= (0 + undef5842)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l2, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ (undef5675 = undef5675), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l59, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ (1 <= (0 + undef5842)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((1 + undef5842) <= 0), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef5862 = (0 + 429496)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((0 + undef5842) <= 0) /\ (0 <= (0 + undef5842)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l59, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ (1 <= (0 + undef5842)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((1 + undef5842) <= 0), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((0 + undef5842) <= 0) /\ (0 <= (0 + undef5842)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l2, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ (undef5675 = undef5675), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l59, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ (1 <= (0 + undef5842)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((1 + undef5842) <= 0), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef5842)), fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l2, l57, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef6011 = undef6011) /\ (undef5862 = (0 + undef6011)) /\ (undef5830 = undef5830) /\ (undef5842 = undef5842) /\ ((0 + undef5842) <= 0) /\ (0 <= (0 + undef5842)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef5862), disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> (1 + in_count^0)}>
<l3, l6, ((1 + (~(16) + i29^0)) <= 0), par{i29^0 -> (16 + (~(16) + i29^0))}>
<l3, l3, (0 <= (0 + (~(16) + i29^0))), par{i29^0 -> (~(16) + i29^0)}>
<l6, l12, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ ((0 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 0) /\ (0 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3064 = (0 + n_bits^0)), par{bits33^0 -> undef3064, bytes_out^0 -> ((0 + undef3064) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ ((0 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 0) /\ (0 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ ((0 + 257) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> ((~(8) + (0 + n_bits^0)) + undef3661), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ ((0 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 0) /\ (0 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ ((1 + maxcode^0) <= (0 + 257)), par{bits33^0 -> ((~(8) + (0 + n_bits^0)) + undef3661), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l12, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ (1 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3064 = (0 + n_bits^0)), par{bits33^0 -> undef3064, bytes_out^0 -> ((0 + undef3064) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ (1 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ ((0 + 257) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> ((~(8) + (0 + n_bits^0)) + undef3661), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ (1 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ ((1 + maxcode^0) <= (0 + 257)), par{bits33^0 -> ((~(8) + (0 + n_bits^0)) + undef3661), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l12, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 0) /\ (undef3064 = (0 + n_bits^0)), par{bits33^0 -> undef3064, bytes_out^0 -> ((0 + undef3064) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 0) /\ ((0 + 257) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> ((~(8) + (0 + n_bits^0)) + undef3661), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 8) /\ ((1 + ((~(8) + (0 + n_bits^0)) + undef3661)) <= 0) /\ ((1 + maxcode^0) <= (0 + 257)), par{bits33^0 -> ((~(8) + (0 + n_bits^0)) + undef3661), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l12, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ (8 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3479 = undef3479) /\ ((0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661))) <= 0) /\ (0 <= (0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)))) /\ (undef3064 = (0 + n_bits^0)), par{bits33^0 -> undef3064, bytes_out^0 -> ((0 + undef3064) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ (8 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3479 = undef3479) /\ ((0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661))) <= 0) /\ (0 <= (0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)))) /\ ((0 + 257) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ (8 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3479 = undef3479) /\ ((0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661))) <= 0) /\ (0 <= (0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)))) /\ ((1 + maxcode^0) <= (0 + 257)), par{bits33^0 -> (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l12, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ (8 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3479 = undef3479) /\ (1 <= (0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)))) /\ (undef3064 = (0 + n_bits^0)), par{bits33^0 -> undef3064, bytes_out^0 -> ((0 + undef3064) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ (8 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3479 = undef3479) /\ (1 <= (0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)))) /\ ((0 + 257) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l37, ((0 + i29^0) <= 0) /\ (0 <= (0 + 256)) /\ (undef3661 = undef3661) /\ (undef3632 = undef3632) /\ (8 <= (0 + ((~(8) + (0 + n_bits^0)) + undef3661))) /\ (undef3479 = undef3479) /\ (1 <= (0 + (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)))) /\ ((1 + maxcode^0) <= (0 + 257)), par{bits33^0 -> (~(8) + ((~(8) + (0 + n_bits^0)) + undef3661)), clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l6, l6, (1 <= (0 + i29^0)), par{i29^0 -> (~(1) + i29^0)}>
<l12, l2, (undef1027 = undef1027) /\ ((0 + (~(1) + bits33^0)) <= 0) /\ (0 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ ((0 + clear_flg^0) <= 0), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l37, (undef1027 = undef1027) /\ ((0 + (~(1) + bits33^0)) <= 0) /\ (0 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ (1 <= (0 + clear_flg^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l37, (undef1027 = undef1027) /\ ((0 + (~(1) + bits33^0)) <= 0) /\ (0 <= (0 + (~(1) + bits33^0))) /\ ((1 + maxcode^0) <= (0 + free_ent^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l12, (undef1027 = undef1027) /\ (1 <= (0 + (~(1) + bits33^0))), par{bits33^0 -> (~(1) + bits33^0)}>
<l12, l2, (undef1027 = undef1027) /\ (1 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ ((0 + clear_flg^0) <= 0), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l37, (undef1027 = undef1027) /\ (1 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ (1 <= (0 + clear_flg^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l37, (undef1027 = undef1027) /\ (1 <= (0 + (~(1) + bits33^0))) /\ ((1 + maxcode^0) <= (0 + free_ent^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l12, (undef1027 = undef1027) /\ ((1 + (~(1) + bits33^0)) <= 0), par{bits33^0 -> (~(1) + bits33^0)}>
<l12, l2, (undef1027 = undef1027) /\ ((1 + (~(1) + bits33^0)) <= 0) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ ((0 + clear_flg^0) <= 0), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l37, (undef1027 = undef1027) /\ ((1 + (~(1) + bits33^0)) <= 0) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ (1 <= (0 + clear_flg^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l12, l37, (undef1027 = undef1027) /\ ((1 + (~(1) + bits33^0)) <= 0) /\ ((1 + maxcode^0) <= (0 + free_ent^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l13, l2, ((0 + i21^0) <= 0)>
<l13, l13, (1 <= (0 + i21^0)), par{i21^0 -> (~(1) + i21^0)}>
<l15, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + maxbits^0) <= (0 + (1 + n_bits^0))) /\ (undef1716 = undef1716), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef1716, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l15, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ (undef1716 = undef1716), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef1716, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l15, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((0 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + (1 + n_bits^0))), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> (0 + maxmaxcode^0), n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l15, l2, ((0 + n40^0) <= (0 + i41^0)) /\ (1 <= (0 + clear_flg^0)) /\ (undef1971 = undef1971), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0}>
<l15, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((1 + clear_flg^0) <= 0) /\ (undef1971 = undef1971), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0}>
<l15, l2, ((1 + i41^0) <= (0 + n40^0)) /\ (16 <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + maxbits^0) <= (0 + (1 + n_bits^0))) /\ (undef1716 = undef1716), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef1716, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l15, l2, ((1 + i41^0) <= (0 + n40^0)) /\ (16 <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ (undef1716 = undef1716), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef1716, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l15, l2, ((1 + i41^0) <= (0 + n40^0)) /\ (16 <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((0 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + (1 + n_bits^0))), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> (0 + maxmaxcode^0), n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l15, l2, ((1 + i41^0) <= (0 + n40^0)) /\ (16 <= (0 + i41^0)) /\ (1 <= (0 + clear_flg^0)) /\ (undef1971 = undef1971), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0}>
<l15, l2, ((1 + i41^0) <= (0 + n40^0)) /\ (16 <= (0 + i41^0)) /\ ((1 + clear_flg^0) <= 0) /\ (undef1971 = undef1971), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0}>
<l15, l15, ((1 + i41^0) <= (0 + n40^0)) /\ ((1 + i41^0) <= 16), par{i41^0 -> (1 + i41^0)}>
<l35, l13, ((1 + (~(16) + i21^0)) <= 0), par{i21^0 -> (16 + (~(16) + i21^0))}>
<l35, l35, (0 <= (0 + (~(16) + i21^0))), par{i21^0 -> (~(16) + i21^0)}>
<l37, l2, ((0 + offset^0) <= 0) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + maxbits^0) <= (0 + (1 + n_bits^0))) /\ (undef1716 = undef1716), par{maxcode^0 -> undef1716, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l37, l2, ((0 + offset^0) <= 0) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ (undef1716 = undef1716), par{maxcode^0 -> undef1716, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l37, l2, ((0 + offset^0) <= 0) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((0 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + (1 + n_bits^0))), par{maxcode^0 -> (0 + maxmaxcode^0), n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l37, l2, ((0 + offset^0) <= 0) /\ (1 <= (0 + clear_flg^0)) /\ (undef1971 = undef1971), par{clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0}>
<l37, l2, ((0 + offset^0) <= 0) /\ ((1 + clear_flg^0) <= 0) /\ (undef1971 = undef1971), par{clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0}>
<l37, l15, (1 <= (0 + offset^0)), par{i41^0 -> 0, n40^0 -> (0 + n_bits^0)}>
<l53, l74, (50 <= (0 + i3^0)) /\ (undef4267 = undef4267) /\ (undef4266 = undef4266) /\ ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0)) /\ (1 <= (0 + (0 + 50))) /\ (1 <= (0 + (0 + 53))) /\ (undef706 = undef706) /\ (undef557 = (0 + undef706)), par{InCnt^0 -> (~(1) + (0 + 50)), apsim_InCnt^0 -> (~(1) + 53), bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l53, l74, (50 <= (0 + i3^0)) /\ (undef4267 = undef4267) /\ (undef4266 = undef4266) /\ (1 <= (0 + block_compress^0)) /\ (1 <= (0 + (0 + 50))) /\ (1 <= (0 + (0 + 53))) /\ (undef706 = undef706) /\ (undef557 = (0 + undef706)), par{InCnt^0 -> (~(1) + (0 + 50)), apsim_InCnt^0 -> (~(1) + 53), bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l53, l74, (50 <= (0 + i3^0)) /\ (undef4267 = undef4267) /\ (undef4266 = undef4266) /\ ((1 + block_compress^0) <= 0) /\ (1 <= (0 + (0 + 50))) /\ (1 <= (0 + (0 + 53))) /\ (undef706 = undef706) /\ (undef557 = (0 + undef706)), par{InCnt^0 -> (~(1) + (0 + 50)), apsim_InCnt^0 -> (~(1) + 53), bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l53, l53, ((1 + i3^0) <= 50) /\ (undef4329 = undef4329), par{i3^0 -> (1 + i3^0)}>
<l57, l59, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l57, l57, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l57, l59, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))), par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l57, l2, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ (undef5165 = undef5165), par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l57, l59, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l57, l57, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l57, l59, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))), par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l57, l59, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l57, l57, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0))}>
<l57, l59, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0), par{i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l57, l2, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ (undef5165 = undef5165), par{i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0))}>
<l57, l59, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l57, l57, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0))}>
<l57, l59, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0), par{i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((1 + in_count^0) <= (0 + checkpoint^0))>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0))>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((0 + in_count^0) <= 8388607) /\ (undef4376 = undef4376) /\ ((0 + undef4376) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> undef4376, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((0 + in_count^0) <= 8388607) /\ (undef4376 = undef4376) /\ ((1 + ratio^0) <= (0 + undef4376)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> undef4376, ratio^0 -> (0 + undef4376)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ (1 <= (0 + undef4427)) /\ (undef3968 = undef3968) /\ ((0 + undef3968) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> undef3968, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ (1 <= (0 + undef4427)) /\ (undef3968 = undef3968) /\ ((1 + ratio^0) <= (0 + undef3968)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> undef3968, ratio^0 -> (0 + undef3968)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((1 + undef4427) <= 0) /\ (undef3968 = undef3968) /\ ((0 + undef3968) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> undef3968, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((1 + undef4427) <= 0) /\ (undef3968 = undef3968) /\ ((1 + ratio^0) <= (0 + undef3968)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> undef3968, ratio^0 -> (0 + undef3968)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((0 + undef4427) <= 0) /\ (0 <= (0 + undef4427)) /\ ((0 + 2147483647) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> 2147483647, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((0 + undef4427) <= 0) /\ (0 <= (0 + undef4427)) /\ ((1 + ratio^0) <= (0 + 2147483647)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> 2147483647, ratio^0 -> (0 + 2147483647)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((0 + in_count^0) <= 8388607) /\ (undef4376 = undef4376) /\ ((0 + undef4376) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> undef4376, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((0 + in_count^0) <= 8388607) /\ (undef4376 = undef4376) /\ ((1 + ratio^0) <= (0 + undef4376)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> undef4376, ratio^0 -> (0 + undef4376)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ (1 <= (0 + undef4427)) /\ (undef3968 = undef3968) /\ ((0 + undef3968) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> undef3968, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ (1 <= (0 + undef4427)) /\ (undef3968 = undef3968) /\ ((1 + ratio^0) <= (0 + undef3968)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> undef3968, ratio^0 -> (0 + undef3968)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((1 + undef4427) <= 0) /\ (undef3968 = undef3968) /\ ((0 + undef3968) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> undef3968, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((1 + undef4427) <= 0) /\ (undef3968 = undef3968) /\ ((1 + ratio^0) <= (0 + undef3968)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> undef3968, ratio^0 -> (0 + undef3968)}>
<l59, l3, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((0 + undef4427) <= 0) /\ (0 <= (0 + undef4427)) /\ ((0 + 2147483647) <= (0 + ratio^0)) /\ (undef3999 = (0 + hsize^0)), par{checkpoint^0 -> (10000 + in_count^0), i29^0 -> (~(16) + undef3999), rat26^0 -> 2147483647, ratio^0 -> 0}>
<l59, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ (8388608 <= (0 + in_count^0)) /\ (undef4427 = undef4427) /\ ((0 + undef4427) <= 0) /\ (0 <= (0 + undef4427)) /\ ((1 + ratio^0) <= (0 + 2147483647)), par{checkpoint^0 -> (10000 + in_count^0), rat26^0 -> 2147483647, ratio^0 -> (0 + 2147483647)}>
<l59, l2, ((1 + free_ent^0) <= (0 + maxmaxcode^0)), par{free_ent^0 -> (1 + free_ent^0)}>
<l74, l35, (65536 <= (0 + fcode5^0)) /\ (undef379 = (0 + hsize^0)) /\ (undef377 = (0 + undef379)), par{hshift11^0 -> (8 + (~(1) * hshift11^0)), hsize_reg10^0 -> undef379, i21^0 -> (~(16) + undef377)}>
<l74, l74, ((1 + fcode5^0) <= 65536) /\ (undef424 = undef424), par{fcode5^0 -> undef424, hshift11^0 -> (1 + hshift11^0)}>

Fresh variables:
undef377, undef379, undef424, undef557, undef706, undef1027, undef1281, undef1668, undef1716, undef1971, undef3064, undef3479, undef3632, undef3661, undef3968, undef3999, undef4266, undef4267, undef4329, undef4376, undef4427, undef5165, undef5675, undef5830, undef5842, undef5862, undef6011, 

Undef variables:
undef377, undef379, undef424, undef557, undef706, undef1027, undef1281, undef1668, undef1716, undef1971, undef3064, undef3479, undef3632, undef3661, undef3968, undef3999, undef4266, undef4267, undef4329, undef4376, undef4427, undef5165, undef5675, undef5830, undef5842, undef5862, undef6011, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l53, l53, i3^0 <= 49, {i3^0 -> 1 + i3^0, rest remain the same}>
Variables:
i3^0

Graph 2:
Transitions:
<l74, l74, fcode5^0 <= 65535, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
fcode5^0, hshift11^0

Graph 3:
Transitions:
<l35, l35, 16 <= i21^0, {i21^0 -> -16 + i21^0, rest remain the same}>
Variables:
i21^0

Graph 4:
Transitions:
<l13, l13, 1 <= i21^0, {i21^0 -> -1 + i21^0, rest remain the same}>
Variables:
i21^0

Graph 5:
Transitions:
<l2, l59, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l57, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 <= undef5842 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 + undef5842 <= 0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ undef5842 = 0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l2, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l59, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l57, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 <= undef5842 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 + undef5842 <= 0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ undef5842 = 0 /\ undef5862 = 429496, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l59, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l57, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 <= undef5842 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 + undef5842 <= 0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef5842 = 0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l2, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l59, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l57, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 <= undef5842 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 + undef5842 <= 0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> hsize_reg10^0 - undef5842, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l57, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef5842 = 0 /\ undef5862 = undef6011, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef5862, disp9^0 -> 1, fcode5^0 -> undef5830, i6^0 -> undef5842, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l3, l6, i29^0 <= 15, {all remain the same}>
<l3, l3, 16 <= i29^0, {i29^0 -> -16 + i29^0, rest remain the same}>
<l6, l12, i29^0 <= 0 /\ n_bits^0 = undef3064 /\ n_bits^0 + undef3661 = 8, {bits33^0 -> undef3064, bytes_out^0 -> bytes_out^0 + undef3064, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ 257 <= maxcode^0 /\ n_bits^0 + undef3661 = 8, {bits33^0 -> -8 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ maxcode^0 <= 256 /\ n_bits^0 + undef3661 = 8, {bits33^0 -> -8 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l12, i29^0 <= 0 /\ 9 <= n_bits^0 + undef3661 /\ n_bits^0 + undef3661 <= 15 /\ n_bits^0 = undef3064, {bits33^0 -> undef3064, bytes_out^0 -> bytes_out^0 + undef3064, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ 257 <= maxcode^0 /\ 9 <= n_bits^0 + undef3661 /\ n_bits^0 + undef3661 <= 15, {bits33^0 -> -8 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ 9 <= n_bits^0 + undef3661 /\ n_bits^0 + undef3661 <= 15 /\ maxcode^0 <= 256, {bits33^0 -> -8 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l12, i29^0 <= 0 /\ n_bits^0 + undef3661 <= 7 /\ n_bits^0 = undef3064, {bits33^0 -> undef3064, bytes_out^0 -> bytes_out^0 + undef3064, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ 257 <= maxcode^0 /\ n_bits^0 + undef3661 <= 7, {bits33^0 -> -8 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ maxcode^0 <= 256 /\ n_bits^0 + undef3661 <= 7, {bits33^0 -> -8 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l12, i29^0 <= 0 /\ n_bits^0 = undef3064 /\ n_bits^0 + undef3661 = 16, {bits33^0 -> undef3064, bytes_out^0 -> bytes_out^0 + undef3064, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ 257 <= maxcode^0 /\ n_bits^0 + undef3661 = 16, {bits33^0 -> -16 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ maxcode^0 <= 256 /\ n_bits^0 + undef3661 = 16, {bits33^0 -> -16 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l12, i29^0 <= 0 /\ 17 <= n_bits^0 + undef3661 /\ n_bits^0 = undef3064, {bits33^0 -> undef3064, bytes_out^0 -> bytes_out^0 + undef3064, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ 257 <= maxcode^0 /\ 17 <= n_bits^0 + undef3661, {bits33^0 -> -16 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l37, i29^0 <= 0 /\ maxcode^0 <= 256 /\ 17 <= n_bits^0 + undef3661, {bits33^0 -> -16 + n_bits^0 + undef3661, clear_flg^0 -> 1, free_ent^0 -> 257, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l6, l6, 1 <= i29^0, {i29^0 -> -1 + i29^0, rest remain the same}>
<l12, l2, clear_flg^0 <= 0 /\ free_ent^0 <= maxcode^0 /\ bits33^0 = 1, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l37, free_ent^0 <= maxcode^0 /\ 1 <= clear_flg^0 /\ bits33^0 = 1, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l37, 1 + maxcode^0 <= free_ent^0 /\ bits33^0 = 1, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l12, 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, rest remain the same}>
<l12, l2, clear_flg^0 <= 0 /\ free_ent^0 <= maxcode^0 /\ 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l37, free_ent^0 <= maxcode^0 /\ 1 <= clear_flg^0 /\ 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l37, 1 + maxcode^0 <= free_ent^0 /\ 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l12, bits33^0 <= 0, {bits33^0 -> -1 + bits33^0, rest remain the same}>
<l12, l2, bits33^0 <= 0 /\ clear_flg^0 <= 0 /\ free_ent^0 <= maxcode^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l37, bits33^0 <= 0 /\ free_ent^0 <= maxcode^0 /\ 1 <= clear_flg^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l12, l37, bits33^0 <= 0 /\ 1 + maxcode^0 <= free_ent^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l15, l2, n40^0 <= i41^0 /\ maxbits^0 <= n_bits^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef1716, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l15, l2, n40^0 <= i41^0 /\ 2 + n_bits^0 <= maxbits^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef1716, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l15, l2, n40^0 <= i41^0 /\ clear_flg^0 = 0 /\ maxbits^0 = 1 + n_bits^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> maxmaxcode^0, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l15, l2, n40^0 <= i41^0 /\ 1 <= clear_flg^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0, rest remain the same}>
<l15, l2, n40^0 <= i41^0 /\ 1 + clear_flg^0 <= 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0, rest remain the same}>
<l15, l2, maxbits^0 <= n_bits^0 /\ 1 + i41^0 <= n40^0 /\ 16 <= i41^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef1716, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l15, l2, 1 + i41^0 <= n40^0 /\ 16 <= i41^0 /\ 2 + n_bits^0 <= maxbits^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef1716, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l15, l2, 1 + i41^0 <= n40^0 /\ 16 <= i41^0 /\ clear_flg^0 = 0 /\ maxbits^0 = 1 + n_bits^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> maxmaxcode^0, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l15, l2, 1 <= clear_flg^0 /\ 1 + i41^0 <= n40^0 /\ 16 <= i41^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0, rest remain the same}>
<l15, l2, 1 + clear_flg^0 <= 0 /\ 1 + i41^0 <= n40^0 /\ 16 <= i41^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0, rest remain the same}>
<l15, l15, 1 + i41^0 <= n40^0 /\ i41^0 <= 15, {i41^0 -> 1 + i41^0, rest remain the same}>
<l37, l2, maxbits^0 <= n_bits^0 /\ offset^0 <= 0 /\ clear_flg^0 = 0, {maxcode^0 -> undef1716, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l37, l2, offset^0 <= 0 /\ 2 + n_bits^0 <= maxbits^0 /\ clear_flg^0 = 0, {maxcode^0 -> undef1716, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l37, l2, offset^0 <= 0 /\ clear_flg^0 = 0 /\ maxbits^0 = 1 + n_bits^0, {maxcode^0 -> maxmaxcode^0, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l37, l2, offset^0 <= 0 /\ 1 <= clear_flg^0, {clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0, rest remain the same}>
<l37, l2, offset^0 <= 0 /\ 1 + clear_flg^0 <= 0, {clear_flg^0 -> 0, maxcode^0 -> undef1971, n_bits^0 -> 9, offset^0 -> 0, rest remain the same}>
<l37, l15, 1 <= offset^0, {i41^0 -> 0, n40^0 -> n_bits^0, rest remain the same}>
<l57, l59, disp9^0 <= i6^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l57, disp9^0 <= i6^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, rest remain the same}>
<l57, l59, disp9^0 <= i6^0, {i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l2, disp9^0 <= i6^0, {i6^0 -> -disp9^0 + i6^0, rest remain the same}>
<l57, l59, disp9^0 <= i6^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l57, disp9^0 <= i6^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, rest remain the same}>
<l57, l59, disp9^0 <= i6^0, {i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l59, 1 + i6^0 <= disp9^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l57, 1 + i6^0 <= disp9^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, rest remain the same}>
<l57, l59, 1 + i6^0 <= disp9^0, {i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l2, 1 + i6^0 <= disp9^0, {i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, rest remain the same}>
<l57, l59, 1 + i6^0 <= disp9^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l57, l57, 1 + i6^0 <= disp9^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, rest remain the same}>
<l57, l59, 1 + i6^0 <= disp9^0, {i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l59, l2, maxmaxcode^0 <= free_ent^0 /\ 1 + in_count^0 <= checkpoint^0, {all remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ block_compress^0 = 0, {all remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef4376 <= ratio^0 /\ 1 <= block_compress^0 /\ in_count^0 <= 8388607 /\ hsize^0 = undef3999, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> undef4376, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 <= block_compress^0 /\ 1 + ratio^0 <= undef4376 /\ in_count^0 <= 8388607, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> undef4376, ratio^0 -> undef4376, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef3968 <= ratio^0 /\ 1 <= block_compress^0 /\ 1 <= undef4427 /\ 8388608 <= in_count^0 /\ hsize^0 = undef3999, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> undef3968, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 <= block_compress^0 /\ 1 + ratio^0 <= undef3968 /\ 1 <= undef4427 /\ 8388608 <= in_count^0, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> undef3968, ratio^0 -> undef3968, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef3968 <= ratio^0 /\ 1 <= block_compress^0 /\ 1 + undef4427 <= 0 /\ 8388608 <= in_count^0 /\ hsize^0 = undef3999, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> undef3968, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 <= block_compress^0 /\ 1 + ratio^0 <= undef3968 /\ 1 + undef4427 <= 0 /\ 8388608 <= in_count^0, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> undef3968, ratio^0 -> undef3968, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 <= block_compress^0 /\ 2147483647 <= ratio^0 /\ 8388608 <= in_count^0 /\ hsize^0 = undef3999 /\ undef4427 = 0, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> 2147483647, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 <= block_compress^0 /\ 8388608 <= in_count^0 /\ ratio^0 <= 2147483646 /\ undef4427 = 0, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> 2147483647, ratio^0 -> 2147483647, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef4376 <= ratio^0 /\ 1 + block_compress^0 <= 0 /\ in_count^0 <= 8388607 /\ hsize^0 = undef3999, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> undef4376, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + block_compress^0 <= 0 /\ 1 + ratio^0 <= undef4376 /\ in_count^0 <= 8388607, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> undef4376, ratio^0 -> undef4376, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef3968 <= ratio^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= undef4427 /\ 8388608 <= in_count^0 /\ hsize^0 = undef3999, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> undef3968, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + block_compress^0 <= 0 /\ 1 + ratio^0 <= undef3968 /\ 1 <= undef4427 /\ 8388608 <= in_count^0, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> undef3968, ratio^0 -> undef3968, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef3968 <= ratio^0 /\ 1 + block_compress^0 <= 0 /\ 1 + undef4427 <= 0 /\ 8388608 <= in_count^0 /\ hsize^0 = undef3999, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> undef3968, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + block_compress^0 <= 0 /\ 1 + ratio^0 <= undef3968 /\ 1 + undef4427 <= 0 /\ 8388608 <= in_count^0, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> undef3968, ratio^0 -> undef3968, rest remain the same}>
<l59, l3, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + block_compress^0 <= 0 /\ 2147483647 <= ratio^0 /\ 8388608 <= in_count^0 /\ hsize^0 = undef3999 /\ undef4427 = 0, {checkpoint^0 -> 10000 + in_count^0, i29^0 -> -16 + undef3999, rat26^0 -> 2147483647, ratio^0 -> 0, rest remain the same}>
<l59, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + block_compress^0 <= 0 /\ 8388608 <= in_count^0 /\ ratio^0 <= 2147483646 /\ undef4427 = 0, {checkpoint^0 -> 10000 + in_count^0, rat26^0 -> 2147483647, ratio^0 -> 2147483647, rest remain the same}>
<l59, l2, 1 + free_ent^0 <= maxmaxcode^0, {free_ent^0 -> 1 + free_ent^0, rest remain the same}>
Variables:
InCnt^0, apsim_InCnt^0, c7^0, fcode5^0, i6^0, in_count^0, out_count^0, disp9^0, hsize_reg10^0, i29^0, bits33^0, bytes_out^0, n_bits^0, offset^0, maxcode^0, clear_flg^0, free_ent^0, i41^0, maxbits^0, n40^0, maxmaxcode^0, apsim_bound11113^0, checkpoint^0, block_compress^0, hsize^0, rat26^0, ratio^0

Graph 6:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l53, i3^0 = 0, {all remain the same}>

Graph 2
<l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l53, l74, 1 <= block_compress^0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l53, l74, 1 + block_compress^0 <= 0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

Graph 3
<l74, l35, 65536 <= fcode5^0 /\ hsize^0 = undef379 /\ undef377 = undef379, {hshift11^0 -> 8 - hshift11^0, hsize_reg10^0 -> undef379, i21^0 -> -16 + undef377, rest remain the same}>

Graph 4
<l35, l13, i21^0 <= 15, {all remain the same}>

Graph 5
<l13, l2, i21^0 <= 0, {all remain the same}>

Graph 6
<l2, l18, InCnt^0 <= 0 /\ bytes_out^0 <= in_count^0, {all remain the same}>
<l2, l18, InCnt^0 <= 0 /\ 1 + in_count^0 <= bytes_out^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 5 )
( 3 , 5 )
( 6 , 5 )
( 12 , 5 )
( 13 , 4 )
( 15 , 5 )
( 18 , 6 )
( 35 , 3 )
( 37 , 5 )
( 53 , 1 )
( 57 , 5 )
( 59 , 5 )
( 74 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000866

Checking conditional termination of SCC {l53}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001521s
[33mRanking function: [36m49 - i3^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001242

Checking conditional termination of SCC {l74}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000348s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000815s
Trying to remove transition: <l74, l74, fcode5^0 <= 65535, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002249s
Time used: 0.002183
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020480s
Time used: 4.00127
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.024068s
Time used: 4.00325
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.015980s
Time used: 1.00795
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008635s
Time used: 0.005326
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.010935s
Time used: 1.00625

LOG: SAT solveNonLinear - Elapsed time: 1.019570s
Cost: 1; Total time: 1.01158
[33mQuasi-ranking function: [36m50000 - hshift11^0[0m
New Graphs: 
Transitions:
<l74, l74, fcode5^0 <= 65535 /\ 50001 <= hshift11^0, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
fcode5^0, hshift11^0
Checking conditional termination of SCC {l74}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000382s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001039s
Trying to remove transition: <l74, l74, fcode5^0 <= 65535 /\ 50001 <= hshift11^0, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002644s
Time used: 0.002568
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018570s
Time used: 4.00231
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021285s
Time used: 4.0027
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.008683s
Time used: 1.00168
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.023177s
Time used: 4.0036
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 <= 0
Postcodition moved up: 1 <= 0

LOG: Try proving POST
Postcondition: 1 <= 0

LOG: CALL check - Post:1 <= 0 - Process 2
* Exit transition: <l0, l53, block_compress^0 = 0 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001400s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001434s

LOG: NarrowEntry size 1
Narrowing transition: 
<l53, l53, i3^0 <= 49, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l53, 0 <= 0 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
END ENTRIES:
GRAPH:
<l53, l53, 0 <= 0 /\ i3^0 <= 49 /\ block_compress^0 = 0 /\ undef557 = undef706, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 <= 0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.022280s
Time used: 0.022154
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.371281s
Time used: 0.368839
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010636s
Time used: 1.00269

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.423617s
Cannot prove unreachability

Proving non-termination of subgraph 2
Transitions:
<l74, l74, fcode5^0 <= 65535, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
fcode5^0, hshift11^0

Checking conditional non-termination of SCC {l74}...
EXIT TRANSITIONS:
<l74, end, 65536 <= fcode5^0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008153s
Time used: 0.007981
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.007897s
Time used: 0.007861

LOG: SAT solveNonLinear - Elapsed time: 0.016051s
Cost: 3; Total time: 0.015842
[31mFailed at location 74: 1 + fcode5^0 <= 0[0m
[31mFailed at location 74: 1 + fcode5^0 <= 0[0m
[31mFailed at location 74: 1 + fcode5^0 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l74: 1 + fcode5^0 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003864s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002220s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002104s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002067s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002081s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002065s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002059s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002031s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002087s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002050s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002089s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002043s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002090s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002041s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002059s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002065s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002104s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002042s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002113s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002091s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002121s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002098s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002120s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002055s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002079s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002045s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002085s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002075s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002110s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002105s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002109s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002093s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002108s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002103s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002114s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002091s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002132s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002102s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002125s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002070s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002069s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002059s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002078s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002066s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002106s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002064s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002087s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002036s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002143s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002089s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002082s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002037s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002101s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002077s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002058s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002083s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002106s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002081s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002086s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002077s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002123s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002086s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002091s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002161s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002178s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002174s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002134s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002183s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002136s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002166s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002149s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002114s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002160s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002138s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002169s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002144s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002103s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002103s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002108s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002127s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002111s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002122s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002106s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002138s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002160s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002166s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002109s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002174s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002136s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002119s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002119s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002109s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002103s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002149s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002109s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002110s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002119s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002159s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002108s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002140s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002088s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002145s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002098s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002103s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002158s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002119s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002175s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002161s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002207s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002159s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002189s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002162s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002152s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002178s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002118s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002145s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002113s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002141s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002155s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002111s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002188s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002140s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002206s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002182s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002191s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002169s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002226s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002190s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002212s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002175s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002173s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002136s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002172s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002160s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002175s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002153s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002159s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002147s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002122s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002166s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002161s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002177s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002174s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002151s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002132s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002166s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002190s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002206s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002143s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002151s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002185s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002148s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002199s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002237s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002182s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002190s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002196s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002227s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002192s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002223s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002203s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002234s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002176s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002220s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002211s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002184s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002145s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002191s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002171s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002162s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002179s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002186s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002172s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002162s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002176s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002155s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002178s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002187s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002194s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002159s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002192s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002154s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002178s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002160s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002164s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003730s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003412s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003450s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003391s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003411s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003395s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003432s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003365s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003400s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003376s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003419s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003445s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003422s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003407s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003406s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003424s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003396s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003401s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003431s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003473s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003427s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003507s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003501s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003487s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003455s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003384s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003383s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003357s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003457s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003427s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003491s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003494s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003545s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003449s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003422s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003405s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003418s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003447s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003511s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003510s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003543s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003506s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003492s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003504s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003494s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003470s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003427s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003481s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003553s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003520s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003467s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003476s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003413s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003454s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003466s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003437s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003473s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003437s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003466s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003521s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003472s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003479s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003472s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003503s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003544s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003564s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003536s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003554s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003611s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003533s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003533s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003550s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003536s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003549s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003540s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003580s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003491s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003475s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003457s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003526s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003530s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003708s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003626s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003617s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003645s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003572s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003593s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003618s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003507s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003537s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003551s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003598s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003671s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003663s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003669s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003645s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003559s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003587s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003596s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003604s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003606s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003614s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003680s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003674s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003631s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003546s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003597s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003582s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003578s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003622s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003600s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003628s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003649s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003678s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003585s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003616s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003610s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003613s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003633s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003650s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003714s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003740s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003701s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003625s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003647s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003547s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003659s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003595s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003696s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003674s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003710s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003679s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003685s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003663s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003612s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003637s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003677s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003609s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003643s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003637s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003581s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003577s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003544s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003526s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003532s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003561s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003573s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003587s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003631s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003631s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003616s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003608s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003632s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003618s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003559s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003535s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003598s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003554s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003582s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003603s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003646s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003604s
Quasi-invariant improved
Remaining time after improvement: -0.002742
Minimizing number of undef constraints...

LOG: CALL solveNonLinear

LOG: RETURN solveNonLinear - Elapsed time: 0.004158s
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l74: fcode5^0 <= 370[0m
Constraint over undef '1 + undef424 <= fcode5^0' in transition:
<l74, l74, fcode5^0 <= 65535, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l74: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l74, l74, 1 + undef424 <= fcode5^0 /\ fcode5^0 <= 370, {fcode5^0 -> undef424, hshift11^0 -> 1 + hshift11^0, rest remain the same}>

Calling reachability with...
Transition: <l74, end, true, {all remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l74, end, true, {all remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l74, end, true, {all remain the same}>
Conditions: fcode5^0 <= 370, 
OPEN EXITS: 
<l74, end, fcode5^0 <= 370, {all remain the same}>
<l74, end, fcode5^0 <= 370, {all remain the same}>
<l74, end, fcode5^0 <= 370, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 1 <= block_compress^0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 1 + block_compress^0 <= 0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 1 <= block_compress^0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 1 + block_compress^0 <= 0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 50 <= i3^0 /\ block_compress^0 = 0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 1 <= block_compress^0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
Transition: <l53, l74, 1 + block_compress^0 <= 0 /\ 50 <= i3^0 /\ undef557 = undef706, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: fcode5^0 <= 370, 
OPEN EXITS: 
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 256, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370)
<l53, l74, 50 <= i3^0, {InCnt^0 -> 49, apsim_InCnt^0 -> 52, bytes_out^0 -> 3, checkpoint^0 -> 10000, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> 257, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> 16, maxcode^0 -> undef4266, maxmaxcode^0 -> undef4267, n_bits^0 -> 9, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370)

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 50 <= i3^0, 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370, 
OPEN EXITS: 

[31m> Conditions are not feasible after transitions.[0m
--- Reachability graph ---
Transitions:
<l53, l53, i3^0 <= 49, {i3^0 -> 1 + i3^0, rest remain the same}>
Variables:
i3^0
Checking edge-closing of SCC {l53}...
> No exit transition to close.
Checking conditional termination of SCC {l53}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001992s
[33mRanking function: [36m49 - i3^0[0m
New Graphs: 
Calling reachability with...
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: block_compress^0 = 0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 1 <= block_compress^0, undef557 = undef706, hsize^0 <= 370, 
Transition: <l0, l53, i3^0 = 0, {all remain the same}>
Conditions: 1 + block_compress^0 <= 0, undef557 = undef706, hsize^0 <= 370, 
OPEN EXITS: 
<l0, l53, hsize^0 <= 370 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, 1 <= block_compress^0 /\ hsize^0 <= 370 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, 1 + block_compress^0 <= 0 /\ hsize^0 <= 370 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, hsize^0 <= 370 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, 1 <= block_compress^0 /\ hsize^0 <= 370 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, 1 + block_compress^0 <= 0 /\ hsize^0 <= 370 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, hsize^0 <= 370 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, 1 <= block_compress^0 /\ hsize^0 <= 370 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>
<l0, l53, 1 + block_compress^0 <= 0 /\ hsize^0 <= 370 /\ i3^0 = 0 /\ undef557 = undef706, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

