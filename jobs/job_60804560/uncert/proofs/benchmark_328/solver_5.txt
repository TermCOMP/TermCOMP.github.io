YES
Termination proof succeeded
Initially, performed program simplifications using lexicographic rank functions:
 * Removed transitions 115, 117, 118 using the following rank functions:
    - Rank function 1:
      RF for loc. 27: 1+2*arg1
      RF for loc. 52: 2*arg1
      Bound for (chained) transitions 117: 2
    - Rank function 2:
      RF for loc. 27: 2*arg1
      RF for loc. 52: -1+2*arg1
      Bound for (chained) transitions 118: 1
    - Rank function 3:
      RF for loc. 27: 1
      RF for loc. 52: 0
      Bound for (chained) transitions 115: 1
 * Removed transitions 107, 109, 110 using the following rank functions:
    - Rank function 1:
      RF for loc. 26: 1+2*arg1
      RF for loc. 48: 2*arg1
      Bound for (chained) transitions 109: 2
    - Rank function 2:
      RF for loc. 26: 1+2*arg1
      RF for loc. 48: 2*arg1
      Bound for (chained) transitions 110: 2
    - Rank function 3:
      RF for loc. 26: 1
      RF for loc. 48: 0
      Bound for (chained) transitions 107: 1
 * Removed transitions 96, 100, 101, 106, 123, 124 using the following rank functions:
    - Rank function 1:
      RF for loc. 24: 3*arg2
      RF for loc. 25: -1+3*arg1
      RF for loc. 44: 1+3*arg2
      Bound for (chained) transitions 96, 106: 2
      Bound for (chained) transitions 100: 4
      Bound for (chained) transitions 101: 4
      Bound for (chained) transitions 123: 3
      Bound for (chained) transitions 124: 3
 * Removed transitions 86, 88, 89, 94 using the following rank functions:
    - Rank function 1:
      RF for loc. 22: -1+2*arg1
      RF for loc. 40: 2*arg2
      Bound for (chained) transitions 86, 94: 1
      Bound for (chained) transitions 88: 2
      Bound for (chained) transitions 89: 2
 * Removed transitions 76, 78, 79, 84 using the following rank functions:
    - Rank function 1:
      RF for loc. 20: -1+2*arg1
      RF for loc. 36: 2*arg2
      Bound for (chained) transitions 76, 84: 0
      Bound for (chained) transitions 78: 1
      Bound for (chained) transitions 79: 1
 * Removed transitions 31, 34, 35, 36, 37, 38, 39, 40, 41, 64, 65, 66, 67, 68, 70, 71, 72 using the following rank functions:
    - Rank function 1:
      RF for loc. 16: 2-3*arg2+3*arg3
      RF for loc. 17: -3*arg2+3*arg3
      RF for loc. 18: -3*arg2+3*arg4
      RF for loc. 28: 1-3*arg2+3*arg3
      RF for loc. 32: -3*arg2+3*arg4
      Bound for (chained) transitions 34: 4
      Bound for (chained) transitions 35: 4
      Bound for (chained) transitions 36: 4
      Bound for (chained) transitions 37: 4
      Bound for (chained) transitions 38: 4
      Bound for (chained) transitions 39: 4
      Bound for (chained) transitions 40: 4
      Bound for (chained) transitions 41: 4
      Bound for (chained) transitions 65: 3
      Bound for (chained) transitions 66: 3
    - Rank function 2:
      RF for loc. 16: -1
      RF for loc. 17: arg1
      RF for loc. 18: 0
      RF for loc. 28: -2
      RF for loc. 32: 0
      Bound for (chained) transitions 31: -1
      Bound for (chained) transitions 64: 1
      Bound for (chained) transitions 67: 1
      Bound for (chained) transitions 70: 0
    - Rank function 3:
      RF for loc. 18: 1-2*arg3
      RF for loc. 32: -2*arg3
      Bound for (chained) transitions 72: -198
    - Rank function 4:
      RF for loc. 18: 1-2*arg3
      RF for loc. 32: -2*arg3
      Bound for (chained) transitions 71: -198
    - Rank function 5:
      RF for loc. 18: 0
      RF for loc. 32: -1
      Bound for (chained) transitions 68: 0
