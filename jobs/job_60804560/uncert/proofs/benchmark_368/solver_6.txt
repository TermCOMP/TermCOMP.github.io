NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2}>
<l3, l3, (arg1 > 4) /\ (arg2 > 0) /\ (arg2 >= arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1)}>
<l3, l3, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) <= 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 2), arg2 -> (arg2 - 1)}>
<l3, l3, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) > 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 1)}>
<l3, l3, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) >= (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 1)}>
<l3, l3, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) < (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l1, l2, true, par{arg1 -> undef13, arg2 -> undef14}>

Fresh variables:
undef13, undef14, 

Undef variables:
undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef14) /\ (arg2 = undef14) /\ (undef13 > 0) /\ (undef14 > ~(1))>
<l3, l3, (arg1 > 4) /\ (arg2 > 0) /\ (arg2 >= arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1)}>
<l3, l3, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) <= 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 2), arg2 -> (arg2 - 1)}>
<l3, l3, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) > 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 1)}>
<l3, l3, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) < (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>

Fresh variables:
undef13, undef14, 

Undef variables:
undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg1 <= 4 /\ arg2 <= 4 + arg1, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, 0 <= arg1 /\ 1 <= arg2 /\ 5 + arg1 <= arg2 /\ arg1 <= 4, {arg1 -> 1 + arg1, rest remain the same}>
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.006254
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l3: arg2 <= 1 + arg1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l3, l3, 0 <= arg1 /\ 1 <= arg2 /\ 5 + arg1 <= arg2 /\ arg1 <= 4, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Checking unfeasibility...
Time used: 0.022479

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000997s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.155764s
Trying to remove transition: <l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.119888s
Time used: 0.119226
Trying to remove transition: <l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.495104s
Time used: 0.490974
Trying to remove transition: <l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.062598s
Time used: 1.05707
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.026926s
Time used: 0.024214
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.098363s
Time used: 0.098011

LOG: SAT solveNonLinear - Elapsed time: 0.125288s
Cost: 1; Total time: 0.122225
[31mFailed at location 3: arg1 + arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 + arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006706s
Remaining time after improvement: 0.998358
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 + arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 + arg2 <= 0 and entry <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 + arg2 <= 0 - Process 1
* Exit transition: <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
* Postcondition  : arg1 + arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000426s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000470s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 + arg2 <= 0 , 
Narrowing transition: 
<l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000941s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.145376s
Trying to remove transition: <l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.113638s
Time used: 0.112904
Trying to remove transition: <l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.443673s
Time used: 0.441478
Trying to remove transition: <l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.100984s
Time used: 1.09484
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.280025s
Time used: 0.27646
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.146237s
Time used: 0.145632

LOG: SAT solveNonLinear - Elapsed time: 0.426262s
Cost: 1; Total time: 0.422092
[31mFailed at location 3: arg1 + 2*arg2 <= 3[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 + 2*arg2 <= 3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008234s
Remaining time after improvement: 0.997957
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 + 2*arg2 <= 3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[33mRanking function: [36marg1 + 3*arg2[0m
New Graphs: 
Calling Safety with literal arg1 + 2*arg2 <= 3 and entry <l0, l3, 0 <= undef14 /\ 1 <= arg1 + arg2 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 + 2*arg2 <= 3 - Process 2
* Exit transition: <l0, l3, 0 <= undef14 /\ 1 <= arg1 + arg2 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
* Postcondition  : arg1 + 2*arg2 <= 3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000297s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000339s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 + 2*arg2 <= 3 , 
Narrowing transition: 
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001151s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.213734s
Trying to remove transition: <l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.131088s
Time used: 0.129948
Trying to remove transition: <l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.969802s
Time used: 0.965556
Trying to remove transition: <l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.196705s
Time used: 1.1904
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.016134s
Time used: 4.00033
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.023572s
Time used: 4.00035
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011618s
Time used: 1.00044
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.508240s
Time used: 0.491064

Proving non-termination of subgraph 1
Transitions:
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {all remain the same}>
<l3, end, arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 5 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, 0 <= arg1 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 2 + arg2 <= 2*arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 5 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 + arg2 <= 0 /\ 0 <= arg1 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ arg1 <= 1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg1 <= 0 /\ 1 + arg2 <= arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 + arg2 <= 0 /\ arg1 <= arg2 /\ 0 <= arg1 /\ arg2 <= 0 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l3, end, arg1 + arg2 <= 0 /\ arg1 <= arg2 /\ arg2 <= 0 /\ 1 + arg1 <= 0 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018817s
Time used: 0.018488
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004602s
Time used: 1.00042

LOG: SAT solveNonLinear - Elapsed time: 1.023419s
Cost: 3; Total time: 1.0189
[31mFailed at location 3: 1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l3: 1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008952s
Remaining time after improvement: 0.997737
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 9
Strengthening exit transition (result): 
<l3, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.026474s
Time used: 0.026137
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.007056s
Time used: 0.007025

LOG: SAT solveNonLinear - Elapsed time: 0.033530s
Cost: 1; Total time: 0.033162
[31mFailed at location 3: 3 <= arg1 + arg2[0m
Before Improving: 
[36mQuasi-invariant at l3: 3 <= arg1 + arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002344s
Remaining time after improvement: 0.998763
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 3 <= arg1 + arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1 /\ 3 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4 /\ 3 <= arg1 + arg2, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ 3 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 1 <= arg2, 3 <= arg1 + arg2, 
OPEN EXITS: 
<l3, end, 1 <= arg2 /\ 3 <= arg1 + arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
Conditions: 1 <= arg2, 3 <= arg1 + arg2, 
OPEN EXITS: 
<l0, l3, 0 <= undef14 /\ 1 <= arg2 /\ 1 <= undef13 /\ 3 <= arg1 + arg2 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

