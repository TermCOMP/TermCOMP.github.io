YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, true, par{arg1 -> 0}>
<l3, l3, (arg1 < 12) /\ (arg1 < 20), par{arg1 -> (arg1 + 1)}>
<l3, l3, (arg1 > 11) /\ (arg1 < 20), par{arg1 -> (arg1 + 1)}>
<l1, l2, true, par{arg1 -> undef4}>

Fresh variables:
undef4, 

Undef variables:
undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = 0)>
<l3, l3, (arg1 < 12) /\ (arg1 < 20), par{arg1 -> (arg1 + 1)}>
<l3, l3, (arg1 > 11) /\ (arg1 < 20), par{arg1 -> (arg1 + 1)}>

Fresh variables:
undef4, 

Undef variables:
undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, arg1 <= 11, {arg1 -> 1 + arg1, rest remain the same}>
<l3, l3, 12 <= arg1 /\ arg1 <= 19, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l3, arg1 = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.005261

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000512s
[33mRanking function: [36m220 - 20*arg1[0m
New Graphs: 
Transitions:
<l3, l3, 12 <= arg1 /\ arg1 <= 19, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000252s
[33mRanking function: [36m19 - arg1[0m
New Graphs: 
[32mProgram Terminates[0m

