YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, ((0 + __const_64^0) <= (0 + i^0)), par{ctr23^0 -> (0 + __const_7^0)}>
<l1, l3, ((1 + i^0) <= (0 + __const_64^0)) /\ (undef27 = undef27), par{i^0 -> (1 + i^0), seed^0 -> undef27}>
<l4, l5, ((1 + ctr23^0) <= 0)>
<l4, l6, (0 <= (0 + ctr23^0)) /\ (undef72 = undef72) /\ (undef92 = undef92) /\ (undef77 = undef77) /\ (undef91 = undef91) /\ (undef78 = undef78) /\ (undef90 = undef90) /\ (undef79 = undef79) /\ (undef89 = undef89) /\ (undef93 = undef93) /\ (undef94 = ((0 + undef89) + undef92)) /\ (undef95 = ((0 + undef90) + undef91)) /\ (undef96 = ((0 + undef89) + undef91)) /\ (undef98 = ((0 + undef90) + undef92)) /\ (undef88 = undef88) /\ (undef80 = undef80) /\ (undef81 = undef81) /\ (undef82 = undef82) /\ (undef83 = undef83) /\ (undef84 = undef84) /\ (undef85 = undef85) /\ (undef97 = undef97) /\ (undef99 = undef99), par{ctr23^0 -> (~(1) + ctr23^0), tmp05^0 -> undef72, tmp1013^0 -> ((0 + undef72) + undef79), tmp1114^0 -> ((0 + undef77) + undef78), tmp1215^0 -> ((0 + undef77) + (~(1) * undef78)), tmp1316^0 -> ((0 + undef72) + (~(1) * undef79)), tmp16^0 -> undef77, tmp27^0 -> undef78, tmp38^0 -> undef79, tmp49^0 -> undef80, tmp510^0 -> undef81, tmp611^0 -> undef82, tmp712^0 -> undef83, z117^0 -> undef84, z218^0 -> undef85, z319^0 -> ((0 + undef97) + undef88), z420^0 -> ((0 + undef99) + undef88), z521^0 -> undef88}>
<l3, l1, true>
<l2, l7, true>
<l6, l4, true>
<l7, l6, ((1 + ctr23^0) <= 0), par{ctr23^0 -> (0 + __const_7^0)}>
<l7, l2, (0 <= (0 + ctr23^0)) /\ (undef193 = undef193) /\ (undef213 = undef213) /\ (undef198 = undef198) /\ (undef212 = undef212) /\ (undef199 = undef199) /\ (undef211 = undef211) /\ (undef200 = undef200) /\ (undef210 = undef210) /\ (undef214 = undef214) /\ (undef215 = ((0 + undef210) + undef213)) /\ (undef216 = ((0 + undef211) + undef212)) /\ (undef217 = ((0 + undef210) + undef212)) /\ (undef219 = ((0 + undef211) + undef213)) /\ (undef209 = undef209) /\ (undef201 = undef201) /\ (undef202 = undef202) /\ (undef203 = undef203) /\ (undef204 = undef204) /\ (undef205 = undef205) /\ (undef206 = undef206) /\ (undef218 = undef218) /\ (undef220 = undef220), par{ctr23^0 -> (~(1) + ctr23^0), tmp05^0 -> undef193, tmp1013^0 -> ((0 + undef193) + undef200), tmp1114^0 -> ((0 + undef198) + undef199), tmp1215^0 -> ((0 + undef198) + (~(1) * undef199)), tmp1316^0 -> ((0 + undef193) + (~(1) * undef200)), tmp16^0 -> undef198, tmp27^0 -> undef199, tmp38^0 -> undef200, tmp49^0 -> undef201, tmp510^0 -> undef202, tmp611^0 -> undef203, tmp712^0 -> undef204, z117^0 -> undef205, z218^0 -> undef206, z319^0 -> ((0 + undef218) + undef209), z420^0 -> ((0 + undef220) + undef209), z521^0 -> undef209}>
<l8, l3, true, par{i^0 -> 0, seed^0 -> 0}>
<l9, l8, true>

Fresh variables:
undef27, undef72, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef193, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef209, undef210, undef211, undef212, undef213, undef214, undef215, undef216, undef217, undef218, undef219, undef220, 

Undef variables:
undef27, undef72, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef193, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef209, undef210, undef211, undef212, undef213, undef214, undef215, undef216, undef217, undef218, undef219, undef220, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (i^0 = 0)>
<l2, l6, ((1 + ctr23^0) <= 0), par{ctr23^0 -> (0 + __const_7^0)}>
<l2, l2, (0 <= (0 + ctr23^0)) /\ (undef193 = undef193) /\ (undef213 = undef213) /\ (undef198 = undef198) /\ (undef212 = undef212) /\ (undef199 = undef199) /\ (undef211 = undef211) /\ (undef200 = undef200) /\ (undef210 = undef210) /\ (undef214 = undef214) /\ (undef215 = ((0 + undef210) + undef213)) /\ (undef216 = ((0 + undef211) + undef212)) /\ (undef217 = ((0 + undef210) + undef212)) /\ (undef219 = ((0 + undef211) + undef213)) /\ (undef209 = undef209) /\ (undef201 = undef201) /\ (undef202 = undef202) /\ (undef203 = undef203) /\ (undef204 = undef204) /\ (undef205 = undef205) /\ (undef206 = undef206) /\ (undef218 = undef218) /\ (undef220 = undef220), par{ctr23^0 -> (~(1) + ctr23^0)}>
<l3, l2, ((0 + __const_64^0) <= (0 + i^0)), par{ctr23^0 -> (0 + __const_7^0)}>
<l3, l3, ((1 + i^0) <= (0 + __const_64^0)) /\ (undef27 = undef27), par{i^0 -> (1 + i^0)}>
<l6, l5, ((1 + ctr23^0) <= 0)>
<l6, l6, (0 <= (0 + ctr23^0)) /\ (undef72 = undef72) /\ (undef92 = undef92) /\ (undef77 = undef77) /\ (undef91 = undef91) /\ (undef78 = undef78) /\ (undef90 = undef90) /\ (undef79 = undef79) /\ (undef89 = undef89) /\ (undef93 = undef93) /\ (undef94 = ((0 + undef89) + undef92)) /\ (undef95 = ((0 + undef90) + undef91)) /\ (undef96 = ((0 + undef89) + undef91)) /\ (undef98 = ((0 + undef90) + undef92)) /\ (undef88 = undef88) /\ (undef80 = undef80) /\ (undef81 = undef81) /\ (undef82 = undef82) /\ (undef83 = undef83) /\ (undef84 = undef84) /\ (undef85 = undef85) /\ (undef97 = undef97) /\ (undef99 = undef99), par{ctr23^0 -> (~(1) + ctr23^0)}>

Fresh variables:
undef27, undef72, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef193, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef209, undef210, undef211, undef212, undef213, undef214, undef215, undef216, undef217, undef218, undef219, undef220, 

Undef variables:
undef27, undef72, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef193, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef209, undef210, undef211, undef212, undef213, undef214, undef215, undef216, undef217, undef218, undef219, undef220, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 + i^0 <= __const_64^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
__const_64^0, i^0

Graph 2:
Transitions:
<l2, l2, 0 <= ctr23^0 /\ undef210 + undef212 = undef217 /\ undef210 + undef213 = undef215 /\ undef211 + undef212 = undef216 /\ undef211 + undef213 = undef219, {ctr23^0 -> -1 + ctr23^0, rest remain the same}>
Variables:
ctr23^0

Graph 3:
Transitions:
<l6, l6, 0 <= ctr23^0 /\ undef89 + undef91 = undef96 /\ undef89 + undef92 = undef94 /\ undef90 + undef91 = undef95 /\ undef90 + undef92 = undef98, {ctr23^0 -> -1 + ctr23^0, rest remain the same}>
Variables:
ctr23^0

Graph 4:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l3, i^0 = 0, {all remain the same}>

Graph 2
<l3, l2, __const_64^0 <= i^0, {ctr23^0 -> __const_7^0, rest remain the same}>

Graph 3
<l2, l6, 1 + ctr23^0 <= 0, {ctr23^0 -> __const_7^0, rest remain the same}>

Graph 4
<l6, l5, 1 + ctr23^0 <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 2 )
( 3 , 1 )
( 5 , 4 )
( 6 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000909

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000445s
[33mRanking function: [36m-1 + __const_64^0 - i^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.00086

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000583s
[33mRanking function: [36mctr23^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.000886

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000588s
[33mRanking function: [36mctr23^0[0m
New Graphs: 
Proving termination of subgraph 4
Analyzing SCC {l5}...
No cycles found.

[32mProgram Terminates[0m

