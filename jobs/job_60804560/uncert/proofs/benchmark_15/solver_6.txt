YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> (arg2 - 1), arg3 -> 0}>
<l2, l2, (arg2 > 0) /\ (arg3 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef6}>
<l2, l2, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> 1}>
<l2, l4, (arg2 < 1) /\ (undef10 > 0), par{arg1 -> undef10, arg2 -> undef11, arg3 -> undef12}>
<l4, l4, ((undef13 + 1) <= arg1) /\ (arg1 > 0) /\ (undef13 > ~(1)), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>
<l1, l3, true, par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18}>

Fresh variables:
undef6, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, 

Undef variables:
undef6, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = (undef17 - 1)) /\ (arg2 = undef17) /\ (arg3 = 0) /\ (undef16 > 0) /\ (undef17 > ~(1))>
<l2, l2, (arg2 > 0) /\ (arg3 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef6}>
<l2, l2, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> 1}>
<l2, l4, (arg2 < 1) /\ (undef10 > 0), par{arg1 -> undef10, arg2 -> undef11, arg3 -> undef12}>
<l4, l4, ((undef13 + 1) <= arg1) /\ (arg1 > 0) /\ (undef13 > ~(1)), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>

Fresh variables:
undef6, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, 

Undef variables:
undef6, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg2 /\ 1 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef6, rest remain the same}>
<l2, l2, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 2:
Transitions:
<l4, l4, 0 <= undef13 /\ 1 <= arg1 /\ 1 + undef13 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef17 /\ 1 <= undef16 /\ arg2 = undef17 /\ arg3 = 0 /\ 1 + arg1 = undef17, {all remain the same}>

Graph 2
<l2, l4, arg2 <= 0 /\ 1 <= undef10, {arg1 -> undef10, arg2 -> undef11, arg3 -> undef12, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002896

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000499s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001584s
Trying to remove transition: <l2, l2, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006368s
Time used: 0.006219
Trying to remove transition: <l2, l2, 1 <= arg2 /\ 1 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef6, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007168s
Time used: 0.006719
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009171s
Time used: 0.008803

LOG: SAT solveNonLinear - Elapsed time: 0.009171s
Cost: 0; Total time: 0.008803
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 1 + arg1 <= arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 1 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef6, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 1 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef6, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, rest remain the same}>
[33mRanking function: [36m-arg1 + 2*arg2[0m
New Graphs: 
INVARIANTS: 
2: 1 + arg1 <= arg2 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.000912

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000384s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m

