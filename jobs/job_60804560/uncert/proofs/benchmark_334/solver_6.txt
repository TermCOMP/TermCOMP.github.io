YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l4, l6, (undef8 > ~(1)) /\ (arg2 > 0) /\ (arg1 > 0) /\ (undef1 > 3), par{arg1 -> undef1, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5, arg6 -> undef6, arg7 -> undef7}>
<l2, l6, (undef9 <= arg2) /\ (arg1 > 0) /\ (arg2 > 3) /\ (undef9 > 3) /\ ((arg5 + 5) <= arg2) /\ ((arg4 + 5) <= arg2), par{arg1 -> undef9, arg2 -> undef10, arg3 -> arg4, arg4 -> arg5, arg5 -> undef13, arg6 -> undef14, arg7 -> undef15}>
<l4, l7, (undef23 > ~(1)) /\ (arg2 > 0) /\ (undef24 > 0) /\ (undef24 < arg2) /\ (undef25 > ~(1)) /\ (undef16 <= arg1) /\ (arg1 > 0) /\ (undef16 > 0), par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> undef19, arg5 -> undef20, arg6 -> undef21, arg7 -> undef22}>
<l3, l7, (undef26 <= arg1) /\ (arg1 > 0) /\ (undef26 > 0), par{arg1 -> undef26, arg2 -> undef27, arg3 -> undef28, arg4 -> undef29, arg5 -> undef30, arg6 -> undef31, arg7 -> undef32}>
<l6, l8, (undef40 < arg2) /\ (undef40 > 0) /\ (arg2 > 0) /\ (undef41 > ~(1)) /\ (undef36 > 1) /\ (undef33 <= arg1) /\ ((undef34 + 3) <= arg1) /\ ((undef35 + 3) <= arg1) /\ (arg1 > 3) /\ (undef33 > 3) /\ (undef34 > 0) /\ (undef35 > 0) /\ ((arg4 + 5) <= arg1) /\ ((arg3 + 5) <= arg1), par{arg1 -> undef33, arg2 -> undef34, arg3 -> undef35, arg4 -> undef36, arg5 -> undef37, arg6 -> undef38, arg7 -> undef39}>
<l6, l8, (undef49 < arg2) /\ (undef49 > 0) /\ (arg2 > 0) /\ (undef50 > ~(1)) /\ (undef45 > 1) /\ (undef42 <= arg1) /\ (arg1 > 3) /\ (undef42 > 3) /\ (undef43 > 3) /\ (undef44 > 3) /\ ((arg4 + 5) <= arg1) /\ ((arg3 + 5) <= arg1), par{arg1 -> undef42, arg2 -> undef43, arg3 -> undef44, arg4 -> undef45, arg5 -> undef46, arg6 -> undef47, arg7 -> undef48}>
<l4, l11, (undef51 > ~(1)) /\ (arg2 > 0) /\ (arg1 > 0), par{arg1 -> undef51, arg3 -> 1, arg4 -> undef54, arg5 -> undef55, arg6 -> undef56, arg7 -> undef57}>
<l4, l11, (undef65 > ~(1)) /\ (arg2 > 0) /\ (undef66 > 0) /\ (undef66 < arg2) /\ (undef58 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef58, arg3 -> (undef66 + 1), arg4 -> undef61, arg5 -> undef62, arg6 -> undef63, arg7 -> undef64}>
<l6, l11, (undef74 < arg2) /\ (undef74 > 0) /\ (arg2 > 0) /\ (undef67 > ~(1)) /\ (arg1 > 3) /\ ((arg4 + 5) <= arg1) /\ ((arg3 + 5) <= arg1), par{arg1 -> undef67, arg3 -> (undef74 + 1), arg4 -> undef70, arg5 -> undef71, arg6 -> undef72, arg7 -> undef73}>
<l11, l5, (arg2 > ~(1)) /\ (arg1 > 1) /\ (arg3 > 0) /\ (arg3 < arg2) /\ (undef77 > ~(1)), par{arg2 -> 0, arg3 -> undef77, arg4 -> arg2, arg5 -> (arg3 + 1), arg6 -> undef80, arg7 -> undef81}>
<l5, l11, (arg3 > arg2) /\ (arg1 > 1) /\ (arg3 > 0) /\ (arg5 > 1) /\ ((arg1 - 1) < arg1), par{arg1 -> (arg1 - 1), arg2 -> arg4, arg3 -> arg5, arg4 -> undef85, arg5 -> undef86, arg6 -> undef87, arg7 -> undef88}>
<l5, l5, (arg3 > arg2) /\ (arg1 > 1) /\ (arg3 > 0) /\ (arg5 > 1) /\ ((arg1 - 1) < arg1), par{arg2 -> (arg2 + 1), arg5 -> undef93, arg6 -> undef94, arg7 -> undef95}>
<l8, l9, (undef96 <= arg1) /\ (arg4 > 1) /\ (undef97 <= arg2) /\ (undef97 <= arg3) /\ ((undef101 + 1) <= arg1) /\ ((undef102 + 1) <= arg2) /\ ((undef102 + 1) <= arg3) /\ (arg1 > 0) /\ (arg2 > 0) /\ (arg3 > 0) /\ (undef96 > 0) /\ (undef97 > 0) /\ (undef101 > ~(1)) /\ (undef102 > ~(1)), par{arg1 -> undef96, arg2 -> undef97, arg3 -> 0, arg4 -> undef99, arg5 -> arg4, arg6 -> undef101, arg7 -> undef102}>
<l8, l9, (undef103 <= arg1) /\ (arg4 > 1) /\ (undef104 <= arg2) /\ (undef104 <= arg3) /\ ((undef108 + 1) <= arg1) /\ ((undef109 + 1) <= arg2) /\ ((undef109 + 1) <= arg3) /\ (arg1 > 0) /\ (arg2 > 0) /\ (arg3 > 0) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)), par{arg1 -> undef103, arg2 -> undef104, arg3 -> 1, arg4 -> undef106, arg5 -> arg4, arg6 -> undef108, arg7 -> undef109}>
<l9, l10, ((undef110 + 1) <= arg2) /\ (undef110 <= arg7) /\ ((undef111 + 1) <= arg1) /\ (undef111 <= arg6) /\ (arg1 > 0) /\ (arg2 > 0) /\ (arg6 > ~(1)) /\ (arg7 > ~(1)) /\ (undef110 > ~(1)) /\ (undef111 > ~(1)) /\ (1 = arg3), par{arg1 -> undef110, arg2 -> undef111, arg3 -> arg4, arg4 -> arg5, arg5 -> undef114, arg6 -> undef115, arg7 -> undef116}>
<l10, l8, ((undef117 + 2) <= arg2) /\ (arg4 > 1) /\ ((undef118 + 2) <= arg1) /\ ((undef118 + 3) <= arg2) /\ ((undef119 + 2) <= arg1) /\ ((undef119 + 3) <= arg2) /\ (arg1 > 1) /\ (arg2 > 2) /\ (undef117 > 0) /\ (undef118 > ~(1)) /\ (undef119 > ~(1)), par{arg1 -> undef117, arg2 -> undef118, arg3 -> undef119, arg5 -> undef121, arg6 -> undef122, arg7 -> undef123}>
<l10, l8, ((undef124 + 2) <= arg2) /\ (arg4 > 1) /\ ((undef125 + 2) <= arg1) /\ ((undef126 + 2) <= arg1) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef124 > 0) /\ (undef125 > 0) /\ (undef126 > 0), par{arg1 -> undef124, arg2 -> undef125, arg3 -> undef126, arg5 -> undef128, arg6 -> undef129, arg7 -> undef130}>
<l10, l10, ((undef131 + 2) <= arg1) /\ (arg4 > 1) /\ ((undef132 + 2) <= arg2) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef131 > ~(1)) /\ (undef132 > ~(1)), par{arg1 -> undef131, arg2 -> undef132, arg5 -> undef135, arg6 -> undef136, arg7 -> undef137}>
<l10, l10, ((undef138 + 2) <= arg1) /\ (arg4 > 1) /\ ((undef139 + 2) <= arg2) /\ (arg1 > 1) /\ (arg2 > 2) /\ (undef138 > ~(1)) /\ (undef139 > ~(1)), par{arg1 -> undef138, arg2 -> undef139, arg5 -> undef142, arg6 -> undef143, arg7 -> undef144}>
<l1, l4, true, par{arg1 -> undef145, arg2 -> undef146, arg3 -> undef147, arg4 -> undef148, arg5 -> undef149, arg6 -> undef150, arg7 -> undef151}>

Fresh variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef70, undef71, undef72, undef73, undef74, undef77, undef80, undef81, undef85, undef86, undef87, undef88, undef93, undef94, undef95, undef96, undef97, undef99, undef101, undef102, undef103, undef104, undef106, undef108, undef109, undef110, undef111, undef114, undef115, undef116, undef117, undef118, undef119, undef121, undef122, undef123, undef124, undef125, undef126, undef128, undef129, undef130, undef131, undef132, undef135, undef136, undef137, undef138, undef139, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, 

Undef variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef70, undef71, undef72, undef73, undef74, undef77, undef80, undef81, undef85, undef86, undef87, undef88, undef93, undef94, undef95, undef96, undef97, undef99, undef101, undef102, undef103, undef104, undef106, undef108, undef109, undef110, undef111, undef114, undef115, undef116, undef117, undef118, undef119, undef121, undef122, undef123, undef124, undef125, undef126, undef128, undef129, undef130, undef131, undef132, undef135, undef136, undef137, undef138, undef139, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l10, (undef8 > ~(1)) /\ (undef146 > 0) /\ (undef145 > 0) /\ (undef1 > 3) /\ (undef40 < undef146) /\ (undef40 > 0) /\ (undef146 > 0) /\ (undef41 > ~(1)) /\ (undef36 > 1) /\ (undef33 <= undef1) /\ ((undef34 + 3) <= undef1) /\ ((undef35 + 3) <= undef1) /\ (undef1 > 3) /\ (undef33 > 3) /\ (undef34 > 0) /\ (undef35 > 0) /\ ((undef4 + 5) <= undef1) /\ ((undef3 + 5) <= undef1) /\ (undef103 <= undef33) /\ (undef36 > 1) /\ (undef104 <= undef34) /\ (undef104 <= undef35) /\ ((undef108 + 1) <= undef33) /\ ((undef109 + 1) <= undef34) /\ ((undef109 + 1) <= undef35) /\ (undef33 > 0) /\ (undef34 > 0) /\ (undef35 > 0) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ ((undef110 + 1) <= undef104) /\ (undef110 <= undef109) /\ ((undef111 + 1) <= undef103) /\ (undef111 <= undef108) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ (undef110 > ~(1)) /\ (undef111 > ~(1)) /\ (1 = 1), par{arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg4 -> undef36, arg5 -> undef114}>
<l0, l10, (undef8 > ~(1)) /\ (undef146 > 0) /\ (undef145 > 0) /\ (undef1 > 3) /\ (undef49 < undef146) /\ (undef49 > 0) /\ (undef146 > 0) /\ (undef50 > ~(1)) /\ (undef45 > 1) /\ (undef42 <= undef1) /\ (undef1 > 3) /\ (undef42 > 3) /\ (undef43 > 3) /\ (undef44 > 3) /\ ((undef4 + 5) <= undef1) /\ ((undef3 + 5) <= undef1) /\ (undef103 <= undef42) /\ (undef45 > 1) /\ (undef104 <= undef43) /\ (undef104 <= undef44) /\ ((undef108 + 1) <= undef42) /\ ((undef109 + 1) <= undef43) /\ ((undef109 + 1) <= undef44) /\ (undef42 > 0) /\ (undef43 > 0) /\ (undef44 > 0) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ ((undef110 + 1) <= undef104) /\ (undef110 <= undef109) /\ ((undef111 + 1) <= undef103) /\ (undef111 <= undef108) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ (undef110 > ~(1)) /\ (undef111 > ~(1)) /\ (1 = 1), par{arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg4 -> undef45, arg5 -> undef114}>
<l0, l5, (undef8 > ~(1)) /\ (undef146 > 0) /\ (undef145 > 0) /\ (undef1 > 3) /\ (undef74 < undef146) /\ (undef74 > 0) /\ (undef146 > 0) /\ (undef67 > ~(1)) /\ (undef1 > 3) /\ ((undef4 + 5) <= undef1) /\ ((undef3 + 5) <= undef1) /\ (undef146 > ~(1)) /\ (undef67 > 1) /\ ((undef74 + 1) > 0) /\ ((undef74 + 1) < undef146) /\ (undef77 > ~(1)), par{arg1 -> undef67, arg2 -> 0, arg3 -> undef77, arg4 -> undef146, arg5 -> ((undef74 + 1) + 1)}>
<l0, l7, (undef23 > ~(1)) /\ (undef146 > 0) /\ (undef24 > 0) /\ (undef24 < undef146) /\ (undef25 > ~(1)) /\ (undef16 <= undef145) /\ (undef145 > 0) /\ (undef16 > 0), par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> undef19, arg5 -> undef20}>
<l0, l5, (undef51 > ~(1)) /\ (undef146 > 0) /\ (undef145 > 0) /\ (undef146 > ~(1)) /\ (undef51 > 1) /\ (1 > 0) /\ (1 < undef146) /\ (undef77 > ~(1)), par{arg1 -> undef51, arg2 -> 0, arg3 -> undef77, arg4 -> undef146, arg5 -> (1 + 1)}>
<l0, l5, (undef65 > ~(1)) /\ (undef146 > 0) /\ (undef66 > 0) /\ (undef66 < undef146) /\ (undef58 > ~(1)) /\ (undef145 > 0) /\ (undef146 > ~(1)) /\ (undef58 > 1) /\ ((undef66 + 1) > 0) /\ ((undef66 + 1) < undef146) /\ (undef77 > ~(1)), par{arg1 -> undef58, arg2 -> 0, arg3 -> undef77, arg4 -> undef146, arg5 -> ((undef66 + 1) + 1)}>
<l5, l5, (arg3 > arg2) /\ (arg1 > 1) /\ (arg3 > 0) /\ (arg5 > 1) /\ ((arg1 - 1) < arg1) /\ (arg4 > ~(1)) /\ ((arg1 - 1) > 1) /\ (arg5 > 0) /\ (arg5 < arg4) /\ (undef77 > ~(1)), par{arg1 -> (arg1 - 1), arg2 -> 0, arg3 -> undef77, arg4 -> arg4, arg5 -> (arg5 + 1)}>
<l5, l5, (arg3 > arg2) /\ (arg1 > 1) /\ (arg3 > 0) /\ (arg5 > 1) /\ ((arg1 - 1) < arg1), par{arg2 -> (arg2 + 1), arg5 -> undef93}>
<l10, l10, ((undef117 + 2) <= arg2) /\ (arg4 > 1) /\ ((undef118 + 2) <= arg1) /\ ((undef118 + 3) <= arg2) /\ ((undef119 + 2) <= arg1) /\ ((undef119 + 3) <= arg2) /\ (arg1 > 1) /\ (arg2 > 2) /\ (undef117 > 0) /\ (undef118 > ~(1)) /\ (undef119 > ~(1)) /\ (undef103 <= undef117) /\ (arg4 > 1) /\ (undef104 <= undef118) /\ (undef104 <= undef119) /\ ((undef108 + 1) <= undef117) /\ ((undef109 + 1) <= undef118) /\ ((undef109 + 1) <= undef119) /\ (undef117 > 0) /\ (undef118 > 0) /\ (undef119 > 0) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ ((undef110 + 1) <= undef104) /\ (undef110 <= undef109) /\ ((undef111 + 1) <= undef103) /\ (undef111 <= undef108) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ (undef110 > ~(1)) /\ (undef111 > ~(1)) /\ (1 = 1), par{arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg4 -> arg4, arg5 -> undef114}>
<l10, l10, ((undef124 + 2) <= arg2) /\ (arg4 > 1) /\ ((undef125 + 2) <= arg1) /\ ((undef126 + 2) <= arg1) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef124 > 0) /\ (undef125 > 0) /\ (undef126 > 0) /\ (undef103 <= undef124) /\ (arg4 > 1) /\ (undef104 <= undef125) /\ (undef104 <= undef126) /\ ((undef108 + 1) <= undef124) /\ ((undef109 + 1) <= undef125) /\ ((undef109 + 1) <= undef126) /\ (undef124 > 0) /\ (undef125 > 0) /\ (undef126 > 0) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ ((undef110 + 1) <= undef104) /\ (undef110 <= undef109) /\ ((undef111 + 1) <= undef103) /\ (undef111 <= undef108) /\ (undef103 > 0) /\ (undef104 > 0) /\ (undef108 > ~(1)) /\ (undef109 > ~(1)) /\ (undef110 > ~(1)) /\ (undef111 > ~(1)) /\ (1 = 1), par{arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg4 -> arg4, arg5 -> undef114}>
<l10, l10, ((undef131 + 2) <= arg1) /\ (arg4 > 1) /\ ((undef132 + 2) <= arg2) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef131 > ~(1)) /\ (undef132 > ~(1)), par{arg1 -> undef131, arg2 -> undef132, arg5 -> undef135}>
<l10, l10, ((undef138 + 2) <= arg1) /\ (arg4 > 1) /\ ((undef139 + 2) <= arg2) /\ (arg1 > 1) /\ (arg2 > 2) /\ (undef138 > ~(1)) /\ (undef139 > ~(1)), par{arg1 -> undef138, arg2 -> undef139, arg5 -> undef142}>

Fresh variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef70, undef71, undef72, undef73, undef74, undef77, undef80, undef81, undef85, undef86, undef87, undef88, undef93, undef94, undef95, undef96, undef97, undef99, undef101, undef102, undef103, undef104, undef106, undef108, undef109, undef110, undef111, undef114, undef115, undef116, undef117, undef118, undef119, undef121, undef122, undef123, undef124, undef125, undef126, undef128, undef129, undef130, undef131, undef132, undef135, undef136, undef137, undef138, undef139, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, 

Undef variables:
undef1, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef70, undef71, undef72, undef73, undef74, undef77, undef80, undef81, undef85, undef86, undef87, undef88, undef93, undef94, undef95, undef96, undef97, undef99, undef101, undef102, undef103, undef104, undef106, undef108, undef109, undef110, undef111, undef114, undef115, undef116, undef117, undef118, undef119, undef121, undef122, undef123, undef124, undef125, undef126, undef128, undef129, undef130, undef131, undef132, undef135, undef136, undef137, undef138, undef139, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Graph 2:
Transitions:
<l5, l5, 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 0 <= arg4 /\ 0 <= undef77 /\ 3 <= arg1 /\ 2 <= arg5, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> undef77, arg5 -> 1 + arg5, rest remain the same}>
<l5, l5, 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 2 <= arg1 /\ 2 <= arg5, {arg2 -> 1 + arg2, arg5 -> undef93, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Graph 3:
Transitions:
<l10, l10, 1 <= undef103 /\ 1 + undef111 <= undef103 /\ 1 <= undef104 /\ 1 + undef110 <= undef104 /\ 1 + undef108 <= undef117 /\ 1 + undef109 <= undef118 /\ 1 + undef109 <= undef119 /\ 1 <= undef117 /\ 1 <= undef118 /\ 1 <= undef119 /\ undef103 <= undef117 /\ undef104 <= undef118 /\ undef104 <= undef119 /\ 0 <= undef108 /\ undef111 <= undef108 /\ 0 <= undef109 /\ undef110 <= undef109 /\ 0 <= undef110 /\ 0 <= undef111 /\ 3 <= arg2 /\ 3 + undef118 <= arg2 /\ 3 + undef119 <= arg2 /\ 2 <= arg1 /\ 2 + undef118 <= arg1 /\ 2 + undef119 <= arg1 /\ 2 + undef117 <= arg2 /\ 2 <= arg4, {arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg5 -> undef114, rest remain the same}>
<l10, l10, 1 <= undef103 /\ 1 + undef111 <= undef103 /\ 1 <= undef104 /\ 1 + undef110 <= undef104 /\ 1 + undef108 <= undef124 /\ 1 + undef109 <= undef125 /\ 1 + undef109 <= undef126 /\ 1 <= undef124 /\ 1 <= undef125 /\ 1 <= undef126 /\ undef103 <= undef124 /\ undef104 <= undef125 /\ undef104 <= undef126 /\ 0 <= undef108 /\ undef111 <= undef108 /\ 0 <= undef109 /\ undef110 <= undef109 /\ 0 <= undef110 /\ 0 <= undef111 /\ 3 <= arg1 /\ 3 <= arg2 /\ 2 + undef125 <= arg1 /\ 2 + undef126 <= arg1 /\ 2 + undef124 <= arg2 /\ 2 <= arg4, {arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg5 -> undef114, rest remain the same}>
<l10, l10, 0 <= undef131 /\ 0 <= undef132 /\ 3 <= arg1 /\ 3 <= arg2 /\ 2 + undef131 <= arg1 /\ 2 + undef132 <= arg2 /\ 2 <= arg4, {arg1 -> undef131, arg2 -> undef132, arg5 -> undef135, rest remain the same}>
<l10, l10, 0 <= undef138 /\ 0 <= undef139 /\ 3 <= arg2 /\ 2 <= arg1 /\ 2 + undef138 <= arg1 /\ 2 + undef139 <= arg2 /\ 2 <= arg4, {arg1 -> undef138, arg2 -> undef139, arg5 -> undef142, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Precedence: 
Graph 0

Graph 1
<l0, l7, 1 <= undef16 /\ 1 + undef24 <= undef146 /\ 1 <= undef24 /\ 1 <= undef145 /\ 1 <= undef146 /\ undef16 <= undef145 /\ 0 <= undef23 /\ 0 <= undef25, {arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> undef19, arg5 -> undef20, rest remain the same}>

Graph 2
<l0, l5, 1 <= undef74 /\ 1 <= undef145 /\ 1 <= undef146 /\ 0 <= undef8 /\ 0 <= undef77 /\ 5 + undef3 <= undef1 /\ 5 + undef4 <= undef1 /\ 2 <= undef67 /\ 2 + undef74 <= undef146 /\ 4 <= undef1, {arg1 -> undef67, arg2 -> 0, arg3 -> undef77, arg4 -> undef146, arg5 -> 2 + undef74, rest remain the same}>
<l0, l5, 1 <= undef145 /\ 0 <= undef77 /\ 2 <= undef51 /\ 2 <= undef146, {arg1 -> undef51, arg2 -> 0, arg3 -> undef77, arg4 -> undef146, arg5 -> 2, rest remain the same}>
<l0, l5, 1 <= undef66 /\ 1 <= undef145 /\ 1 <= undef146 /\ 0 <= undef65 /\ 0 <= undef77 /\ 2 <= undef58 /\ 2 + undef66 <= undef146, {arg1 -> undef58, arg2 -> 0, arg3 -> undef77, arg4 -> undef146, arg5 -> 2 + undef66, rest remain the same}>

Graph 3
<l0, l10, 1 + undef108 <= undef33 /\ 1 <= undef34 /\ 1 + undef109 <= undef34 /\ 1 <= undef35 /\ 1 + undef109 <= undef35 /\ 1 + undef40 <= undef146 /\ 1 <= undef40 /\ 1 <= undef103 /\ 1 + undef111 <= undef103 /\ 1 <= undef104 /\ 1 + undef110 <= undef104 /\ 1 <= undef145 /\ 1 <= undef146 /\ undef33 <= undef1 /\ 0 <= undef8 /\ undef103 <= undef33 /\ undef104 <= undef34 /\ undef104 <= undef35 /\ 0 <= undef41 /\ 0 <= undef108 /\ undef111 <= undef108 /\ 0 <= undef109 /\ undef110 <= undef109 /\ 0 <= undef110 /\ 0 <= undef111 /\ 3 + undef34 <= undef1 /\ 3 + undef35 <= undef1 /\ 5 + undef3 <= undef1 /\ 5 + undef4 <= undef1 /\ 2 <= undef36 /\ 4 <= undef1 /\ 4 <= undef33, {arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg4 -> undef36, arg5 -> undef114, rest remain the same}>
<l0, l10, 1 + undef108 <= undef42 /\ 1 + undef109 <= undef43 /\ 1 + undef109 <= undef44 /\ 1 + undef49 <= undef146 /\ 1 <= undef49 /\ 1 <= undef103 /\ 1 + undef111 <= undef103 /\ 1 <= undef104 /\ 1 + undef110 <= undef104 /\ 1 <= undef145 /\ 1 <= undef146 /\ undef42 <= undef1 /\ 0 <= undef8 /\ undef103 <= undef42 /\ undef104 <= undef43 /\ undef104 <= undef44 /\ 0 <= undef50 /\ 0 <= undef108 /\ undef111 <= undef108 /\ 0 <= undef109 /\ undef110 <= undef109 /\ 0 <= undef110 /\ 0 <= undef111 /\ 5 + undef3 <= undef1 /\ 5 + undef4 <= undef1 /\ 2 <= undef45 /\ 4 <= undef1 /\ 4 <= undef42 /\ 4 <= undef43 /\ 4 <= undef44, {arg1 -> undef110, arg2 -> undef111, arg3 -> undef106, arg4 -> undef45, arg5 -> undef114, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 5 , 2 )
( 7 , 1 )
( 10 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l7}...
No cycles found.

Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.006232

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001321s
[33mRanking function: [36m-12 + 3*arg1 + arg4[0m
New Graphs: 
Transitions:
<l5, l5, 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 2 <= arg1 /\ 2 <= arg5, {arg2 -> 1 + arg2, arg5 -> undef93, rest remain the same}>
Variables:
arg1, arg2, arg3, arg5
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000482s
[33mRanking function: [36m-1 - arg2 + arg3[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.015098

Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005713s
[33mRanking function: [36m-30 + 10*arg1[0m
New Graphs: 
Transitions:
<l10, l10, 0 <= undef138 /\ 0 <= undef139 /\ 3 <= arg2 /\ 2 <= arg1 /\ 2 + undef138 <= arg1 /\ 2 + undef139 <= arg2 /\ 2 <= arg4, {arg1 -> undef138, arg2 -> undef139, arg5 -> undef142, rest remain the same}>
Variables:
arg1, arg2, arg4, arg5
Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000690s
[33mRanking function: [36m-1 + (1 / 2)*arg1[0m
New Graphs: 
[32mProgram Terminates[0m

