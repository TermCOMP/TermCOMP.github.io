NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l4, (undef3 > ~(1)) /\ (arg2 > 1) /\ (undef1 > ~(1)) /\ (undef4 > undef2) /\ (undef4 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> undef2}>
<l3, l4, (undef7 > ~(1)) /\ (arg2 > 1) /\ (undef6 < 1) /\ (undef5 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef5, arg2 -> undef6}>
<l4, l5, (arg2 > 0), par{arg2 -> 0}>
<l4, l5, true, par{arg2 -> 1}>
<l5, l6, ((arg1 - (2 * undef14)) = 0) /\ (arg2 > 0) /\ (undef15 < arg2) /\ (undef15 > 0) /\ (arg1 >= undef16)>
<l6, l5, ((arg1 - (2 * undef19)) = 0) /\ (arg2 > 0) /\ (undef20 < arg2) /\ (arg1 >= undef17) /\ (undef20 > 0) /\ ((arg1 - (2 * undef19)) >= 0) /\ ((arg1 - (2 * undef19)) < 2) /\ ((arg1 - (2 * undef17)) < 2) /\ ((arg1 - (2 * undef17)) >= 0), par{arg1 -> undef17, arg2 -> 0}>
<l5, l6, ((arg1 - (2 * undef23)) = 1) /\ (arg2 > 0) /\ (undef24 < arg2) /\ (undef24 > 0) /\ (arg1 >= undef25)>
<l6, l5, ((arg1 - (2 * undef28)) = 1) /\ (arg2 > 0) /\ (undef29 < arg2) /\ (arg1 >= undef26) /\ (undef29 > 0) /\ ((arg1 - (2 * undef28)) >= 0) /\ ((arg1 - (2 * undef28)) < 2) /\ ((arg1 - (2 * undef26)) < 2) /\ ((arg1 - (2 * undef26)) >= 0), par{arg1 -> undef26, arg2 -> 1}>
<l5, l6, ((arg1 - (2 * undef32)) = 1) /\ (arg2 > 0) /\ (undef33 < arg2) /\ (arg1 >= undef34)>
<l6, l5, ((arg1 - (2 * undef37)) = 1) /\ (arg2 > 0) /\ (arg1 >= undef35) /\ (undef38 < arg2) /\ ((arg1 - (2 * undef37)) >= 0) /\ ((arg1 - (2 * undef37)) < 2) /\ ((arg1 - (2 * undef35)) < 2) /\ ((arg1 - (2 * undef35)) >= 0), par{arg1 -> undef35, arg2 -> 1}>
<l5, l6, ((arg1 - (2 * undef41)) = 0) /\ (arg2 > 0) /\ (undef42 < arg2) /\ (arg1 >= undef43)>
<l6, l5, ((arg1 - (2 * undef46)) = 0) /\ (arg2 > 0) /\ (arg1 >= undef44) /\ (undef47 < arg2) /\ ((arg1 - (2 * undef46)) >= 0) /\ ((arg1 - (2 * undef46)) < 2) /\ ((arg1 - (2 * undef44)) < 2) /\ ((arg1 - (2 * undef44)) >= 0), par{arg1 -> undef44, arg2 -> 1}>
<l3, l2, (undef50 > ~(1)) /\ (arg2 > 1) /\ (undef51 > ~(1)) /\ (arg1 > 0), par{arg1 -> (undef51 - 1), arg2 -> undef49}>
<l2, l2, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef53}>
<l1, l3, true, par{arg1 -> undef54, arg2 -> undef55}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef14, undef15, undef16, undef17, undef19, undef20, undef23, undef24, undef25, undef26, undef28, undef29, undef32, undef33, undef34, undef35, undef37, undef38, undef41, undef42, undef43, undef44, undef46, undef47, undef49, undef50, undef51, undef53, undef54, undef55, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef14, undef15, undef16, undef17, undef19, undef20, undef23, undef24, undef25, undef26, undef28, undef29, undef32, undef33, undef34, undef35, undef37, undef38, undef41, undef42, undef43, undef44, undef46, undef47, undef49, undef50, undef51, undef53, undef54, undef55, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (undef3 > ~(1)) /\ (undef55 > 1) /\ (undef1 > ~(1)) /\ (undef4 > undef2) /\ (undef4 > ~(1)) /\ (undef54 > 0) /\ (undef2 > 0), par{arg1 -> undef1, arg2 -> 0}>
<l0, l5, (undef3 > ~(1)) /\ (undef55 > 1) /\ (undef1 > ~(1)) /\ (undef4 > undef2) /\ (undef4 > ~(1)) /\ (undef54 > 0), par{arg1 -> undef1, arg2 -> 1}>
<l0, l5, (undef7 > ~(1)) /\ (undef55 > 1) /\ (undef6 < 1) /\ (undef5 > ~(1)) /\ (undef54 > 0), par{arg1 -> undef5, arg2 -> 1}>
<l0, l2, (undef50 > ~(1)) /\ (undef55 > 1) /\ (undef51 > ~(1)) /\ (undef54 > 0), par{arg1 -> (undef51 - 1), arg2 -> undef49}>
<l2, l2, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef53}>
<l5, l5, ((arg1 - (2 * undef14)) = 0) /\ (arg2 > 0) /\ (undef15 < arg2) /\ (undef15 > 0) /\ (arg1 >= undef16) /\ ((arg1 - (2 * undef19)) = 0) /\ (arg2 > 0) /\ (undef20 < arg2) /\ (arg1 >= undef17) /\ (undef20 > 0) /\ ((arg1 - (2 * undef19)) >= 0) /\ ((arg1 - (2 * undef19)) < 2) /\ ((arg1 - (2 * undef17)) < 2) /\ ((arg1 - (2 * undef17)) >= 0), par{arg1 -> undef17, arg2 -> 0}>
<l5, l5, ((arg1 - (2 * undef14)) = 0) /\ (arg2 > 0) /\ (undef15 < arg2) /\ (undef15 > 0) /\ (arg1 >= undef16) /\ ((arg1 - (2 * undef46)) = 0) /\ (arg2 > 0) /\ (arg1 >= undef44) /\ (undef47 < arg2) /\ ((arg1 - (2 * undef46)) >= 0) /\ ((arg1 - (2 * undef46)) < 2) /\ ((arg1 - (2 * undef44)) < 2) /\ ((arg1 - (2 * undef44)) >= 0), par{arg1 -> undef44, arg2 -> 1}>
<l5, l5, ((arg1 - (2 * undef23)) = 1) /\ (arg2 > 0) /\ (undef24 < arg2) /\ (undef24 > 0) /\ (arg1 >= undef25) /\ ((arg1 - (2 * undef28)) = 1) /\ (arg2 > 0) /\ (undef29 < arg2) /\ (arg1 >= undef26) /\ (undef29 > 0) /\ ((arg1 - (2 * undef28)) >= 0) /\ ((arg1 - (2 * undef28)) < 2) /\ ((arg1 - (2 * undef26)) < 2) /\ ((arg1 - (2 * undef26)) >= 0), par{arg1 -> undef26, arg2 -> 1}>
<l5, l5, ((arg1 - (2 * undef23)) = 1) /\ (arg2 > 0) /\ (undef24 < arg2) /\ (undef24 > 0) /\ (arg1 >= undef25) /\ ((arg1 - (2 * undef37)) = 1) /\ (arg2 > 0) /\ (arg1 >= undef35) /\ (undef38 < arg2) /\ ((arg1 - (2 * undef37)) >= 0) /\ ((arg1 - (2 * undef37)) < 2) /\ ((arg1 - (2 * undef35)) < 2) /\ ((arg1 - (2 * undef35)) >= 0), par{arg1 -> undef35, arg2 -> 1}>
<l5, l5, ((arg1 - (2 * undef32)) = 1) /\ (arg2 > 0) /\ (undef33 < arg2) /\ (arg1 >= undef34) /\ ((arg1 - (2 * undef28)) = 1) /\ (arg2 > 0) /\ (undef29 < arg2) /\ (arg1 >= undef26) /\ (undef29 > 0) /\ ((arg1 - (2 * undef28)) >= 0) /\ ((arg1 - (2 * undef28)) < 2) /\ ((arg1 - (2 * undef26)) < 2) /\ ((arg1 - (2 * undef26)) >= 0), par{arg1 -> undef26, arg2 -> 1}>
<l5, l5, ((arg1 - (2 * undef32)) = 1) /\ (arg2 > 0) /\ (undef33 < arg2) /\ (arg1 >= undef34) /\ ((arg1 - (2 * undef37)) = 1) /\ (arg2 > 0) /\ (arg1 >= undef35) /\ (undef38 < arg2) /\ ((arg1 - (2 * undef37)) >= 0) /\ ((arg1 - (2 * undef37)) < 2) /\ ((arg1 - (2 * undef35)) < 2) /\ ((arg1 - (2 * undef35)) >= 0), par{arg1 -> undef35, arg2 -> 1}>
<l5, l5, ((arg1 - (2 * undef41)) = 0) /\ (arg2 > 0) /\ (undef42 < arg2) /\ (arg1 >= undef43) /\ ((arg1 - (2 * undef19)) = 0) /\ (arg2 > 0) /\ (undef20 < arg2) /\ (arg1 >= undef17) /\ (undef20 > 0) /\ ((arg1 - (2 * undef19)) >= 0) /\ ((arg1 - (2 * undef19)) < 2) /\ ((arg1 - (2 * undef17)) < 2) /\ ((arg1 - (2 * undef17)) >= 0), par{arg1 -> undef17, arg2 -> 0}>
<l5, l5, ((arg1 - (2 * undef41)) = 0) /\ (arg2 > 0) /\ (undef42 < arg2) /\ (arg1 >= undef43) /\ ((arg1 - (2 * undef46)) = 0) /\ (arg2 > 0) /\ (arg1 >= undef44) /\ (undef47 < arg2) /\ ((arg1 - (2 * undef46)) >= 0) /\ ((arg1 - (2 * undef46)) < 2) /\ ((arg1 - (2 * undef44)) < 2) /\ ((arg1 - (2 * undef44)) >= 0), par{arg1 -> undef44, arg2 -> 1}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef14, undef15, undef16, undef17, undef19, undef20, undef23, undef24, undef25, undef26, undef28, undef29, undef32, undef33, undef34, undef35, undef37, undef38, undef41, undef42, undef43, undef44, undef46, undef47, undef49, undef50, undef51, undef53, undef54, undef55, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef14, undef15, undef16, undef17, undef19, undef20, undef23, undef24, undef25, undef26, undef28, undef29, undef32, undef33, undef34, undef35, undef37, undef38, undef41, undef42, undef43, undef44, undef46, undef47, undef49, undef50, undef51, undef53, undef54, undef55, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg1, {arg1 -> -1 + arg1, arg2 -> undef53, rest remain the same}>
Variables:
arg1, arg2

Graph 2:
Transitions:
<l5, l5, 1 <= arg2 /\ 1 + undef15 <= arg2 /\ 1 + undef20 <= arg2 /\ 1 <= undef15 /\ 1 <= undef20 /\ arg1 <= 1 + 2*undef17 /\ undef16 <= arg1 /\ undef17 <= arg1 /\ 2*undef17 <= arg1 /\ arg1 = 2*undef14 /\ arg1 = 2*undef19, {arg1 -> undef17, arg2 -> 0, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef15 <= arg2 /\ 1 + undef47 <= arg2 /\ 1 <= undef15 /\ arg1 <= 1 + 2*undef44 /\ undef16 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg1 = 2*undef14 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef24 <= arg2 /\ 1 + undef29 <= arg2 /\ 1 <= undef24 /\ 1 <= undef29 /\ arg1 <= 1 + 2*undef26 /\ undef25 <= arg1 /\ undef26 <= arg1 /\ 2*undef26 <= arg1 /\ arg1 = 1 + 2*undef23 /\ arg1 = 1 + 2*undef28, {arg1 -> undef26, arg2 -> 1, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef24 <= arg2 /\ 1 + undef38 <= arg2 /\ 1 <= undef24 /\ arg1 <= 1 + 2*undef35 /\ undef25 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef23 /\ arg1 = 1 + 2*undef37, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef29 <= arg2 /\ 1 + undef33 <= arg2 /\ 1 <= undef29 /\ arg1 <= 1 + 2*undef26 /\ undef26 <= arg1 /\ 2*undef26 <= arg1 /\ undef34 <= arg1 /\ arg1 = 1 + 2*undef28 /\ arg1 = 1 + 2*undef32, {arg1 -> undef26, arg2 -> 1, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef20 <= arg2 /\ 1 + undef42 <= arg2 /\ 1 <= undef20 /\ arg1 <= 1 + 2*undef17 /\ undef17 <= arg1 /\ 2*undef17 <= arg1 /\ undef43 <= arg1 /\ arg1 = 2*undef19 /\ arg1 = 2*undef41, {arg1 -> undef17, arg2 -> 0, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef54 /\ 0 <= undef50 /\ 0 <= undef51 /\ 2 <= undef55, {arg1 -> -1 + undef51, arg2 -> undef49, rest remain the same}>

Graph 2
<l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef2 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 0, rest remain the same}>
<l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
<l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 5 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001045

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000327s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.014261
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l5: arg2 <= 1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + undef15 <= arg2 /\ 1 + undef47 <= arg2 /\ 1 <= undef15 /\ arg1 <= 1 + 2*undef44 /\ undef16 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg1 = 2*undef14 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + undef15 <= arg2 /\ 1 + undef20 <= arg2 /\ 1 <= undef15 /\ 1 <= undef20 /\ arg1 <= 1 + 2*undef17 /\ undef16 <= arg1 /\ undef17 <= arg1 /\ 2*undef17 <= arg1 /\ arg1 = 2*undef14 /\ arg1 = 2*undef19, {arg1 -> undef17, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + undef24 <= arg2 /\ 1 + undef29 <= arg2 /\ 1 <= undef24 /\ 1 <= undef29 /\ arg1 <= 1 + 2*undef26 /\ undef25 <= arg1 /\ undef26 <= arg1 /\ 2*undef26 <= arg1 /\ arg1 = 1 + 2*undef23 /\ arg1 = 1 + 2*undef28, {arg1 -> undef26, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + undef24 <= arg2 /\ 1 + undef38 <= arg2 /\ 1 <= undef24 /\ arg1 <= 1 + 2*undef35 /\ undef25 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef23 /\ arg1 = 1 + 2*undef37, {arg1 -> undef35, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + undef29 <= arg2 /\ 1 + undef33 <= arg2 /\ 1 <= undef29 /\ arg1 <= 1 + 2*undef26 /\ undef26 <= arg1 /\ 2*undef26 <= arg1 /\ undef34 <= arg1 /\ arg1 = 1 + 2*undef28 /\ arg1 = 1 + 2*undef32, {arg1 -> undef26, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + undef20 <= arg2 /\ 1 + undef42 <= arg2 /\ 1 <= undef20 /\ arg1 <= 1 + 2*undef17 /\ undef17 <= arg1 /\ 2*undef17 <= arg1 /\ undef43 <= arg1 /\ arg1 = 2*undef19 /\ arg1 = 2*undef41, {arg1 -> undef17, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
Checking unfeasibility...
Time used: 0.00241

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000990s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004309s
Trying to remove transition: <l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004333s
Time used: 0.003993
Trying to remove transition: <l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004351s
Time used: 0.003987
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009316s
Time used: 0.008804
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.021914s
Time used: 0.021815

LOG: SAT solveNonLinear - Elapsed time: 0.031230s
Cost: 2; Total time: 0.030619
[31mFailed at location 5: arg2 <= 0[0m
[31mFailed at location 5: arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l5: arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003920s
Remaining time after improvement: 0.997964
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l5: arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg2 <= 0 and entry <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>

LOG: CALL check - Post:arg2 <= 0 - Process 1
* Exit transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
* Postcondition  : arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000358s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000400s
Calling Safety with literal arg2 <= 0 and entry <l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>

LOG: CALL check - Post:arg2 <= 0 - Process 2
* Exit transition: <l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>
* Postcondition  : arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000322s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000358s
INVARIANTS: 
5: 
Quasi-INVARIANTS to narrow Graph: 
5: arg2 <= 0 , 
Narrowing transition: 
<l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
<l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000901s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004282s
Trying to remove transition: <l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004269s
Time used: 0.003904
Trying to remove transition: <l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004427s
Time used: 0.004043
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.061547s
Time used: 4.03478
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.033771s
Time used: 4.00109
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.019982s
Time used: 1.00045
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013896s
Time used: 0.008226

Proving non-termination of subgraph 2
Transitions:
<l5, l5, 1 + undef33 <= arg2 /\ 1 + undef38 <= arg2 /\ arg1 <= 1 + 2*undef35 /\ undef34 <= arg1 /\ undef35 <= arg1 /\ 2*undef35 <= arg1 /\ arg1 = 1 + 2*undef32 /\ arg1 = 1 + 2*undef37 /\ arg2 = 1, {arg1 -> undef35, arg2 -> 1, rest remain the same}>
<l5, l5, 1 + undef42 <= arg2 /\ 1 + undef47 <= arg2 /\ arg1 <= 1 + 2*undef44 /\ undef43 <= arg1 /\ undef44 <= arg1 /\ 2*undef44 <= arg1 /\ arg2 = 1 /\ arg1 = 2*undef41 /\ arg1 = 2*undef46, {arg1 -> undef44, arg2 -> 1, rest remain the same}>
Variables:
arg1, arg2

Checking that every undef value has an assignment...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000838s
Checking conditional non-termination of SCC {l5}...
> No assignment for some undef value.
> Checking if the negation of the conditions of every pending exit is quasi-invariant... YES
Calling reachability with...
Transition: <l5, end, true, {all remain the same}>
Conditions: 1 <= arg2, 
Transition: <l5, end, true, {all remain the same}>
Conditions: 1 <= arg2, 
Transition: <l5, end, true, {all remain the same}>
Conditions: 1 <= arg2, 
OPEN EXITS: 
<l5, end, 1 <= arg2, {all remain the same}>
<l5, end, 1 <= arg2, {all remain the same}>
<l5, end, 1 <= arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef2 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 0, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef2 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 0, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef2 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 0, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
Conditions: 1 <= arg2, 
Transition: <l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>
Conditions: 1 <= arg2, 
OPEN EXITS: 
<l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
<l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>
<l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
<l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>
<l0, l5, 1 + undef2 <= undef4 /\ 1 <= undef54 /\ 0 <= undef1 /\ 0 <= undef3 /\ 0 <= undef4 /\ 2 <= undef55, {arg1 -> undef1, arg2 -> 1, rest remain the same}>
<l0, l5, 1 <= undef54 /\ 0 <= undef5 /\ undef6 <= 0 /\ 0 <= undef7 /\ 2 <= undef55, {arg1 -> undef5, arg2 -> 1, rest remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

