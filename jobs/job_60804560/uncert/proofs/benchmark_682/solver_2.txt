MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  i5_post, length4_post, s_post, tmp___08_post, tmp_post
  Locations:  l0, l1, l10, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₁₄: l0(X₀, X₁, X₂, X₃, X₄) → l6(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₇: l1(X₀, X₁, X₂, X₃, X₄) → l4(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l3(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₀: l3(X₀, X₁, X₂, X₃, X₄) → l1(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃ ∧ X₁ ≤ X₀
  t₁: l3(X₀, X₁, X₂, X₃, X₄) → l2(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: 0 ≤ 0 ∧ i5_post ≤ 1+X₀ ∧ 1+X₀ ≤ i5_post ∧ 1+X₀ ≤ X₁ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₉: l4(X₀, X₁, X₂, X₃, X₄) → l5(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₁₀: l4(X₀, X₁, X₂, X₃, X₄) → l5(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₁₁: l4(X₀, X₁, X₂, X₃, X₄) → l7(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₈: l5(X₀, X₁, X₂, X₃, X₄) → l1(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₁₃: l6(X₀, X₁, X₂, X₃, X₄) → l2(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: 0 ≤ 0 ∧ 0 ≤ i5_post ∧ i5_post ≤ 0 ∧ s_post ≤ length4_post ∧ length4_post ≤ s_post ∧ tmp_post ≤ s_post ∧ s_post ≤ tmp_post ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄
  t₁₂: l7(X₀, X₁, X₂, X₃, X₄) → l8(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₅: l8(X₀, X₁, X₂, X₃, X₄) → l10(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₄: l8(X₀, X₁, X₂, X₃, X₄) → l9(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₆: l8(X₀, X₁, X₂, X₃, X₄) → l9(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃
  t₃: l9(X₀, X₁, X₂, X₃, X₄) → l7(i5_post, length4_post, s_post, tmp_post, tmp___08_post) :|: X₀ ≤ i5_post ∧ i5_post ≤ X₀ ∧ X₁ ≤ length4_post ∧ length4_post ≤ X₁ ∧ X₂ ≤ s_post ∧ s_post ≤ X₂ ∧ X₄ ≤ tmp___08_post ∧ tmp___08_post ≤ X₄ ∧ X₃ ≤ tmp_post ∧ tmp_post ≤ X₃


Preprocessing
  Eliminate variables [tmp___08_post; X₂; X₃; X₄] that do not contribute to the problem


  Found invariant 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l7


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l5


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l8


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l10


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l4


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l9


  Found invariant 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  length4_post, s_post, tmp_post
  Locations:  l0, l1, l10, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₃₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₃₁: l1(X₀, X₁) → l4(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₃₂: l2(X₀, X₁) → l3(X₀, X₁) :|: 0 ≤ X₀
  t₃₃: l3(X₀, X₁) → l1(X₀, X₁) :|: X₁ ≤ X₀ ∧ 0 ≤ X₀
  t₃₄: l3(X₀, X₁) → l2(1+X₀, X₁) :|: 0 ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₃₅: l4(X₀, X₁) → l5(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₃₆: l4(X₀, X₁) → l5(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₃₇: l4(X₀, X₁) → l7(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₃₈: l5(X₀, X₁) → l1(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₃₉: l6(X₀, X₁) → l2(0, length4_post) :|: 0 ≤ 0 ∧ s_post ≤ length4_post ∧ length4_post ≤ s_post ∧ tmp_post ≤ s_post ∧ s_post ≤ tmp_post
  t₄₀: l7(X₀, X₁) → l8(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₄₁: l8(X₀, X₁) → l10(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₄₂: l8(X₀, X₁) → l9(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₄₃: l8(X₀, X₁) → l9(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₄₄: l9(X₀, X₁) → l7(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀


MPRF for transition t₃₄: l3(X₀, X₁) → l2(1+X₀, X₁) :|: 0 ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    Finite

  MPRF:
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]




TWN: t₃₄: l3→l2


  cycle: [t₃₄: l3→l2; t₃₂: l2→l3]
  original loop: (0 ≤ X₀ ∧ 0 ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀,(X₀,X₁) -> (1+X₀,X₁))
  transformed loop: (0 ≤ X₀ ∧ 0 ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀,(X₀,X₁) -> (1+X₀,X₁))
  loop: (0 ≤ X₀ ∧ 0 ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀,(X₀,X₁) -> (1+X₀,X₁))
  order: [X₁; X₀]
closed-form:  X₁: X₁
  X₀: X₀ + [[n != 0]]⋅n^1

  Termination: true
  Formula: 
    0 ≤ 0 ∧ 0 ≤ 1 ∧ X₁ ≤ 1+X₀ ∧ 1 ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
     ∨ 0 ≤ 0 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀
     ∨ 0 ≤ 0 ∧ 1 ≤ 0 ∧ 0 ≤ X₀



Stabilization-Threshold for: 1+X₀ ≤ X₁
  alphas_abs: X₀+X₁
  M: 0
  N: 1
  Bound: Finite

TWN - Lifting for [32: l2->l3; 34: l3->l2] of Finite
relevant size-bounds w.r.t. t₃₉: l6→l2:
Runtime-bound of t₃₉: Finite
Results in: Finite
  Cut unreachable locations [l4] from the program graph


  Found invariant 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l1_v1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l5_v1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l4_v1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l7


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l8


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l10


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l9


  Found invariant 0 ≤ X₀ for location l3


  Cut unreachable locations [l8] from the program graph


  Found invariant 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l8_v1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l9_v1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l7_v1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l7


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l5


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l1


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l10


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l4


  Found invariant 0 ≤ X₀ for location l3


All Bounds
Termination behavior
  Overall termination: Infinite
    t₃₀: Finite
    t₃₁: Infinite
    t₃₂: Finite
    t₃₃: Finite
    t₃₄: Finite
    t₃₅: Infinite
    t₃₆: Infinite
    t₃₇: Finite
    t₃₈: Infinite
    t₃₉: Finite
    t₄₀: Infinite
    t₄₁: Finite
    t₄₂: Infinite
    t₄₃: Infinite
    t₄₄: Infinite



