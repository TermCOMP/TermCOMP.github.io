NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (undef1 <= arg1) /\ (undef2 <= arg1) /\ (arg1 > 0) /\ (undef1 > 0) /\ (undef2 > 0) /\ (2 = arg2), par{arg1 -> undef1, arg2 -> undef2, arg3 -> 2}>
<l3, l2, (undef4 <= arg1) /\ (undef5 <= arg1) /\ (arg1 > 0) /\ (undef4 > 0) /\ (undef5 > 0) /\ (1 = arg2), par{arg1 -> undef4, arg2 -> undef5, arg3 -> 1}>
<l2, l2, (undef7 <= arg1) /\ (undef7 <= arg2) /\ (arg1 >= undef8) /\ (arg2 >= undef8) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef7 > 0) /\ (undef8 > 0), par{arg1 -> undef7, arg2 -> undef8}>
<l2, l2, (undef10 <= arg1) /\ (undef10 <= arg2) /\ (undef11 <= arg1) /\ (undef11 <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef10 > 0) /\ (undef11 > 0), par{arg1 -> undef10, arg2 -> undef11}>
<l1, l3, true, par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>

Fresh variables:
undef1, undef2, undef4, undef5, undef7, undef8, undef10, undef11, undef13, undef14, undef15, 

Undef variables:
undef1, undef2, undef4, undef5, undef7, undef8, undef10, undef11, undef13, undef14, undef15, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef1 <= undef13) /\ (undef2 <= undef13) /\ (undef13 > 0) /\ (undef1 > 0) /\ (undef2 > 0) /\ (2 = undef14), par{arg1 -> undef1, arg2 -> undef2}>
<l0, l2, (undef4 <= undef13) /\ (undef5 <= undef13) /\ (undef13 > 0) /\ (undef4 > 0) /\ (undef5 > 0) /\ (1 = undef14), par{arg1 -> undef4, arg2 -> undef5}>
<l2, l2, (undef7 <= arg1) /\ (undef7 <= arg2) /\ (arg1 >= undef8) /\ (arg2 >= undef8) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef7 > 0) /\ (undef8 > 0), par{arg1 -> undef7, arg2 -> undef8}>
<l2, l2, (undef10 <= arg1) /\ (undef10 <= arg2) /\ (undef11 <= arg1) /\ (undef11 <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef10 > 0) /\ (undef11 > 0), par{arg1 -> undef10, arg2 -> undef11}>

Fresh variables:
undef1, undef2, undef4, undef5, undef7, undef8, undef10, undef11, undef13, undef14, undef15, 

Undef variables:
undef1, undef2, undef4, undef5, undef7, undef8, undef10, undef11, undef13, undef14, undef15, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, undef7 <= arg1 /\ undef8 <= arg1 /\ undef7 <= arg2 /\ undef8 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef7 /\ 1 <= undef8, {arg1 -> undef7, arg2 -> undef8, rest remain the same}>
<l2, l2, undef10 <= arg1 /\ undef11 <= arg1 /\ undef10 <= arg2 /\ undef11 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef10 /\ 1 <= undef11, {arg1 -> undef10, arg2 -> undef11, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>
<l0, l2, undef4 <= undef13 /\ undef5 <= undef13 /\ 1 <= undef4 /\ 1 <= undef5 /\ 1 <= undef13 /\ undef14 = 1, {arg1 -> undef4, arg2 -> undef5, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003183

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000942s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005137s
Trying to remove transition: <l2, l2, undef10 <= arg1 /\ undef11 <= arg1 /\ undef10 <= arg2 /\ undef11 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef10 /\ 1 <= undef11, {arg1 -> undef10, arg2 -> undef11, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005592s
Time used: 0.005217
Trying to remove transition: <l2, l2, undef7 <= arg1 /\ undef8 <= arg1 /\ undef7 <= arg2 /\ undef8 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef7 /\ 1 <= undef8, {arg1 -> undef7, arg2 -> undef8, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005381s
Time used: 0.005006
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013529s
Time used: 0.013128
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.023816s
Time used: 4.00038
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010378s
Time used: 1.00026
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013586s
Time used: 0.007924
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001341s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001398s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, undef7 <= arg1 /\ undef8 <= arg1 /\ undef7 <= arg2 /\ undef8 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef7 /\ 1 <= undef8, {arg1 -> undef7, arg2 -> undef8, rest remain the same}>
<l2, l2, undef10 <= arg1 /\ undef11 <= arg1 /\ undef10 <= arg2 /\ undef11 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef10 /\ 1 <= undef11, {arg1 -> undef10, arg2 -> undef11, rest remain the same}>
Variables:
arg1, arg2

Checking that every undef value has an assignment...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001270s
Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= 0 /\ 1 <= arg1, {all remain the same}>
<l2, end, arg1 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.022020s
Time used: 0.021598
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.113347s
Time used: 0.112812

LOG: SAT solveNonLinear - Elapsed time: 0.135368s
Cost: 1; Total time: 0.13441
Minimizing number of undef constraints...

LOG: CALL solveNonLinear

LOG: RETURN solveNonLinear - Elapsed time: 0.026834s
Number of undef constraints reduced!

[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1
Strengthening exit transition (result): 
<l2, end, arg2 <= 0 /\ 1 <= arg1, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, undef7 <= arg1 /\ undef8 <= arg1 /\ undef7 <= arg2 /\ undef8 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef7 /\ 1 <= undef8, {arg1 -> undef7, arg2 -> undef8, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, undef10 <= arg1 /\ undef11 <= arg1 /\ undef10 <= arg2 /\ undef11 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef10 /\ 1 <= undef11, {arg1 -> undef10, arg2 -> undef11, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= 0 /\ 1 <= arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018343s
Time used: 0.01821

LOG: SAT solveNonLinear - Elapsed time: 0.018343s
Cost: 0; Total time: 0.01821
Minimizing number of undef constraints...

LOG: CALL solveNonLinear

LOG: RETURN solveNonLinear - Elapsed time: 0.007102s
Number of undef constraints reduced!

[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, undef7 <= arg1 /\ undef8 <= arg1 /\ undef7 <= arg2 /\ undef8 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef7 /\ 1 <= undef8, {arg1 -> undef7, arg2 -> undef8, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, undef10 <= arg1 /\ undef11 <= arg1 /\ undef10 <= arg2 /\ undef11 <= arg2 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= undef10 /\ 1 <= undef11, {arg1 -> undef10, arg2 -> undef11, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, 
Transition: <l2, end, true, {all remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, 
OPEN EXITS: 
<l2, end, 1 <= arg1 /\ 1 <= arg2, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 <= arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, 
Transition: <l0, l2, undef4 <= undef13 /\ undef5 <= undef13 /\ 1 <= undef4 /\ 1 <= undef5 /\ 1 <= undef13 /\ undef14 = 1, {arg1 -> undef4, arg2 -> undef5, rest remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, 
Transition: <l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, 
Transition: <l0, l2, undef4 <= undef13 /\ undef5 <= undef13 /\ 1 <= undef4 /\ 1 <= undef5 /\ 1 <= undef13 /\ undef14 = 1, {arg1 -> undef4, arg2 -> undef5, rest remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, 
OPEN EXITS: 
<l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>
<l0, l2, undef4 <= undef13 /\ undef5 <= undef13 /\ 1 <= undef4 /\ 1 <= undef5 /\ 1 <= undef13 /\ undef14 = 1, {arg1 -> undef4, arg2 -> undef5, rest remain the same}>
<l0, l2, undef1 <= undef13 /\ undef2 <= undef13 /\ 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef13 /\ undef14 = 2, {arg1 -> undef1, arg2 -> undef2, rest remain the same}>
<l0, l2, undef4 <= undef13 /\ undef5 <= undef13 /\ 1 <= undef4 /\ 1 <= undef5 /\ 1 <= undef13 /\ undef14 = 1, {arg1 -> undef4, arg2 -> undef5, rest remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

