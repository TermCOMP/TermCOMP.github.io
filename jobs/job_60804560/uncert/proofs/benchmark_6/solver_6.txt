YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l5, (undef2 <= arg1) /\ (arg1 > 0) /\ (undef2 > 0) /\ ((arg2 + 2) <= arg1), par{arg1 -> 0, arg2 -> undef2}>
<l4, l5, (undef5 > ~(1)) /\ (arg2 > 0) /\ (arg1 > 0) /\ (undef4 > 0), par{arg1 -> 0, arg2 -> undef4}>
<l5, l5, ((undef7 + 7) <= arg2) /\ (arg2 > 6) /\ (undef7 > ~(1)) /\ (0 = arg1), par{arg1 -> 1, arg2 -> undef7}>
<l5, l5, (arg2 >= (undef9 - 2)) /\ (arg2 > 0) /\ (undef9 > 2) /\ (1 = arg1), par{arg1 -> 2, arg2 -> undef9}>
<l5, l5, ((undef11 - 4) <= arg2) /\ (arg2 > 0) /\ (undef11 > 4) /\ (2 = arg1), par{arg1 -> 0, arg2 -> undef11}>
<l4, l3, (undef12 > ~(1)) /\ (arg2 > 0) /\ (arg1 > 0), par{arg1 -> undef12, arg2 -> undef13}>
<l3, l3, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef15}>
<l1, l4, true, par{arg1 -> undef16, arg2 -> undef17}>

Fresh variables:
undef2, undef4, undef5, undef7, undef9, undef11, undef12, undef13, undef15, undef16, undef17, 

Undef variables:
undef2, undef4, undef5, undef7, undef9, undef11, undef12, undef13, undef15, undef16, undef17, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (undef5 > ~(1)) /\ (undef17 > 0) /\ (undef16 > 0) /\ (undef4 > 0), par{arg1 -> 0, arg2 -> undef4}>
<l0, l3, (undef12 > ~(1)) /\ (undef17 > 0) /\ (undef16 > 0), par{arg1 -> undef12, arg2 -> undef13}>
<l3, l3, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef15}>
<l5, l5, ((undef7 + 7) <= arg2) /\ (arg2 > 6) /\ (undef7 > ~(1)) /\ (0 = arg1), par{arg1 -> 1, arg2 -> undef7}>
<l5, l5, (arg2 >= (undef9 - 2)) /\ (arg2 > 0) /\ (undef9 > 2) /\ (1 = arg1), par{arg1 -> 2, arg2 -> undef9}>
<l5, l5, ((undef11 - 4) <= arg2) /\ (arg2 > 0) /\ (undef11 > 4) /\ (2 = arg1), par{arg1 -> 0, arg2 -> undef11}>

Fresh variables:
undef2, undef4, undef5, undef7, undef9, undef11, undef12, undef13, undef15, undef16, undef17, 

Undef variables:
undef2, undef4, undef5, undef7, undef9, undef11, undef12, undef13, undef15, undef16, undef17, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg1, {arg1 -> -1 + arg1, arg2 -> undef15, rest remain the same}>
Variables:
arg1, arg2

Graph 2:
Transitions:
<l5, l5, 0 <= undef7 /\ 7 <= arg2 /\ 7 + undef7 <= arg2 /\ arg1 = 0, {arg1 -> 1, arg2 -> undef7, rest remain the same}>
<l5, l5, 1 <= arg2 /\ undef9 <= 2 + arg2 /\ 3 <= undef9 /\ arg1 = 1, {arg1 -> 2, arg2 -> undef9, rest remain the same}>
<l5, l5, 1 <= arg2 /\ undef11 <= 4 + arg2 /\ 5 <= undef11 /\ arg1 = 2, {arg1 -> 0, arg2 -> undef11, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= undef12 /\ 1 <= undef16 /\ 1 <= undef17, {arg1 -> undef12, arg2 -> undef13, rest remain the same}>

Graph 2
<l0, l5, 0 <= undef5 /\ 1 <= undef4 /\ 1 <= undef16 /\ 1 <= undef17, {arg1 -> 0, arg2 -> undef4, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 5 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000922

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000283s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.011979

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000978s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007498s
[33mPiecewise ranking function: [36mmin(-122 + 132*arg1 + 19*arg2,66 - 47*arg1 + 19*arg2)[0m
New Graphs: 
Transitions:
<l5, l5, 1 <= arg2 /\ undef9 <= 2 + arg2 /\ 3 <= undef9 /\ arg1 = 1, {arg1 -> 2, arg2 -> undef9, rest remain the same}>
<l5, l5, 1 <= arg2 /\ undef11 <= 4 + arg2 /\ 5 <= undef11 /\ arg1 = 2, {arg1 -> 0, arg2 -> undef11, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000547s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003129s
[33mPiecewise ranking function: [36mmin(8 - 9*arg1 + arg2,-14 + 19*arg1 + arg2)[0m
New Graphs: 
Transitions:
<l5, l5, 1 <= arg2 /\ undef11 <= 4 + arg2 /\ 5 <= undef11 /\ arg1 = 2, {arg1 -> 0, arg2 -> undef11, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000421s
[33mRanking function: [36m-1 + (1 / 2)*arg1[0m
New Graphs: 
[32mProgram Terminates[0m

