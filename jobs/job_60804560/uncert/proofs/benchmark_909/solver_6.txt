NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l10, true>
<l1, l2, true>
<l2, l1, true>
<l11, l12, true>
<l12, l13, (undef12 = undef12), par{___rho_2_^0 -> undef12}>
<l14, l15, true>
<l16, l17, true>
<l18, l3, true>
<l3, l18, (3 <= (0 + WItemsNum^0)), par{WItemsNum^0 -> (~(1) + WItemsNum^0)}>
<l3, l11, ((0 + WItemsNum^0) <= 2)>
<l17, l4, true>
<l4, l17, true>
<l5, l12, (6 <= (0 + WItemsNum^0)), par{WItemsNum^0 -> (1 + WItemsNum^0)}>
<l5, l12, ((0 + WItemsNum^0) <= 5), par{WItemsNum^0 -> (1 + WItemsNum^0)}>
<l6, l5, ((0 + ___rho_2_^0) <= 0)>
<l6, l18, (1 <= (0 + ___rho_2_^0))>
<l13, l5, (6 <= (0 + WItemsNum^0))>
<l13, l6, ((0 + WItemsNum^0) <= 5)>
<l7, l11, true>
<l8, l11, (0 <= (0 + WItemsNum^0))>
<l8, l1, ((1 + WItemsNum^0) <= 0)>
<l9, l8, (undef64 = undef64) /\ (undef62 = undef62), par{WItemsNum^0 -> (0 + undef62), ___rho_1_^0 -> undef62}>
<l10, l9, true>

Fresh variables:
undef12, undef62, undef64, 

Undef variables:
undef12, undef62, undef64, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l12, (WItemsNum^0 = (0 + undef62)) /\ (undef64 = undef64) /\ (undef62 = undef62) /\ (0 <= (0 + (0 + undef62)))>
<l0, l1, (WItemsNum^0 = (0 + undef62)) /\ (undef64 = undef64) /\ (undef62 = undef62) /\ ((1 + (0 + undef62)) <= 0)>
<l1, l1, true>
<l12, l12, (undef12 = undef12) /\ (6 <= (0 + WItemsNum^0)) /\ (6 <= (0 + WItemsNum^0)), par{WItemsNum^0 -> (1 + WItemsNum^0)}>
<l12, l12, (undef12 = undef12) /\ ((0 + WItemsNum^0) <= 5) /\ ((0 + undef12) <= 0) /\ ((0 + WItemsNum^0) <= 5), par{WItemsNum^0 -> (1 + WItemsNum^0)}>
<l12, l18, (undef12 = undef12) /\ ((0 + WItemsNum^0) <= 5) /\ (1 <= (0 + undef12))>
<l18, l18, (3 <= (0 + WItemsNum^0)), par{WItemsNum^0 -> (~(1) + WItemsNum^0)}>
<l18, l12, ((0 + WItemsNum^0) <= 2)>

Fresh variables:
undef12, undef62, undef64, 

Undef variables:
undef12, undef62, undef64, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, true, {all remain the same}>
Variables:

Graph 2:
Transitions:
<l12, l12, 6 <= WItemsNum^0, {WItemsNum^0 -> 1 + WItemsNum^0, rest remain the same}>
<l12, l12, undef12 <= 0 /\ WItemsNum^0 <= 5, {WItemsNum^0 -> 1 + WItemsNum^0, rest remain the same}>
<l12, l18, 1 <= undef12 /\ WItemsNum^0 <= 5, {all remain the same}>
<l18, l18, 3 <= WItemsNum^0, {WItemsNum^0 -> -1 + WItemsNum^0, rest remain the same}>
<l18, l12, WItemsNum^0 <= 2, {all remain the same}>
Variables:
WItemsNum^0

Precedence: 
Graph 0

Graph 1
<l0, l1, 1 + undef62 <= 0 /\ WItemsNum^0 = undef62, {all remain the same}>

Graph 2
<l0, l12, 0 <= undef62 /\ WItemsNum^0 = undef62, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 12 , 2 )
( 18 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000634

> No variable changes in termination graph.
Checking conditional unfeasibility...
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l1, 1 + undef62 <= 0 /\ WItemsNum^0 = undef62, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l1, 1 + undef62 <= 0 /\ WItemsNum^0 = undef62, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000187s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000211s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l1, l1, true, {all remain the same}>
Variables:

Checking conditional non-termination of SCC {l1}...
> No exit transition to close.
Calling reachability with...
Transition: <l1, end, true, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l1, end, true, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l1, 1 + undef62 <= 0 /\ WItemsNum^0 = undef62, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l0, l1, 1 + undef62 <= 0 /\ WItemsNum^0 = undef62, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

