NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg2 -> undef2}>
<l3, l3, (arg1 > 0), par{arg1 -> (arg1 + 1), arg2 -> undef4}>
<l3, l3, (arg1 < 2) /\ (arg1 < 1), par{arg1 -> (arg1 - 1), arg2 -> undef6}>
<l1, l2, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef2, undef4, undef6, undef7, undef8, 

Undef variables:
undef2, undef4, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef8) /\ (undef7 > 0) /\ (undef8 > ~(1))>
<l3, l3, (arg1 > 0), par{arg1 -> (arg1 + 1)}>
<l3, l3, (arg1 < 2) /\ (arg1 < 1), par{arg1 -> (arg1 - 1)}>

Fresh variables:
undef2, undef4, undef6, undef7, undef8, 

Undef variables:
undef2, undef4, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l3, l3, arg1 <= 0, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001371

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000647s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001363s
Trying to remove transition: <l3, l3, arg1 <= 0, {arg1 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002461s
Time used: 0.002359
Trying to remove transition: <l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002381s
Time used: 0.002181
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005166s
Time used: 0.004917
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.019136s
Time used: 0.019039

LOG: SAT solveNonLinear - Elapsed time: 0.024302s
Cost: 1; Total time: 0.023956
[31mFailed at location 3: 1 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l3: 1 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002956s
Remaining time after improvement: 0.999256
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 1 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= 0, {arg1 -> -1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 <= 0, {arg1 -> -1 + arg1, rest remain the same}>
New Graphs: 
Transitions:
<l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000235s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000619s
Trying to remove transition: <l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.001780s
Time used: 0.001699
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.022306s
Time used: 4.00078
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.022075s
Time used: 4.00051
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010660s
Time used: 1.00043
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004782s
Time used: 0.002286
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.006081s
Time used: 0.006053

LOG: SAT solveNonLinear - Elapsed time: 0.010863s
Cost: 1; Total time: 0.008339
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l3, l3, 50001 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000195s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000582s
Trying to remove transition: <l3, l3, 50001 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.001766s
Time used: 0.001697
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018772s
Time used: 4.00185
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021312s
Time used: 4.00073
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010429s
Time used: 1.00049
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004788s
Time used: 0.002242
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000585s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000621s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 1 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l3, l3, arg1 <= 0, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l3}...
> No exit transition to close.
Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l3, end, true, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l0, l3, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

