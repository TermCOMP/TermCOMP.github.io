YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, (0 <= (0 + k_208^0)) /\ (undef1 = 1) /\ (undef2 = (0 + k_208^0)) /\ (undef4 = (0 + undef2)) /\ (0 <= (~(1) + undef4)), par{__patmp1^0 -> undef1, __patmp2^0 -> undef2, k_243^0 -> undef4, len_263^0 -> (0 + undef1)}>
<l3, l4, true>
<l5, l1, true>

Fresh variables:
undef1, undef2, undef4, 

Undef variables:
undef1, undef2, undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (0 <= (0 + k_208^0)) /\ (undef1 = 1) /\ (undef2 = (0 + k_208^0)) /\ (undef4 = (0 + undef2)) /\ (0 <= (~(1) + undef4))>

Fresh variables:
undef1, undef2, undef4, 

Undef variables:
undef1, undef2, undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= k_208^0 /\ 1 <= undef4 /\ k_208^0 = undef2 /\ undef2 = undef4 /\ undef1 = 1, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

