NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (undef2 > ~(1)) /\ (arg2 > 1) /\ (undef1 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> undef2}>
<l2, l2, (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg2 <= arg1) /\ ((arg1 - arg2) > 0), par{arg1 -> (arg1 - 1)}>
<l2, l2, (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg2 <= arg1) /\ ((arg1 - arg2) = 0) /\ ((2 * arg1) >= 0), par{arg1 -> ((2 * arg1) + 1), arg2 -> (arg2 + 1)}>
<l1, l3, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef1, undef2, undef7, undef8, 

Undef variables:
undef1, undef2, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = undef2) /\ (undef2 > ~(1)) /\ (undef8 > 1) /\ (undef1 > ~(1)) /\ (undef7 > 0)>
<l2, l2, (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg2 <= arg1) /\ ((arg1 - arg2) > 0), par{arg1 -> (arg1 - 1)}>
<l2, l2, (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg2 <= arg1) /\ ((arg1 - arg2) = 0) /\ ((2 * arg1) >= 0), par{arg1 -> ((2 * arg1) + 1), arg2 -> (arg2 + 1)}>

Fresh variables:
undef1, undef2, undef7, undef8, 

Undef variables:
undef1, undef2, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002385

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000568s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002277s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.016979s
Time used: 0.016765
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020537s
Time used: 0.020109
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.014327s
Time used: 0.013846
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.022441s
Time used: 0.02232

LOG: SAT solveNonLinear - Elapsed time: 0.036768s
Cost: 1; Total time: 0.036166
[31mFailed at location 2: 1 + arg1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 + arg1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002932s
Remaining time after improvement: 0.999215
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 + arg1 <= arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal 1 + arg1 <= arg2 and entry <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

LOG: CALL check - Post:1 + arg1 <= arg2 - Process 1
* Exit transition: <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>
* Postcondition  : 1 + arg1 <= arg2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000330s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000378s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + arg1 <= arg2 , 
Narrowing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000423s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002164s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.015449s
Time used: 0.01527
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020378s
Time used: 0.019914
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.024317s
Time used: 4.00158
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.030512s
Time used: 4.00073
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.019159s
Time used: 1.00036
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018262s
Time used: 0.010189
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.017374s
Time used: 0.017288

LOG: SAT solveNonLinear - Elapsed time: 0.035635s
Cost: 1; Total time: 0.027477
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg2 <= 1 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000473s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006980s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.039470s
Time used: 0.039169
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.025179s
Time used: 0.024579
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.022595s
Time used: 4.00218
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.022535s
Time used: 4.00062
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011839s
Time used: 1.0003
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.035322s
Time used: 0.027281

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 1 + arg2 <= arg1 /\ 1 + arg2 <= 0, {all remain the same}>
<l2, end, 1 + arg1 <= arg2 /\ 0 <= arg1 /\ 0 <= arg2, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 0 <= arg2, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 1 + arg2 <= 0 /\ arg1 <= arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007734s
Time used: 0.007581
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.009610s
Time used: 0.009553

LOG: SAT solveNonLinear - Elapsed time: 0.017344s
Cost: 2; Total time: 0.017134
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 2
Strengthening exit transition (result): 
<l2, end, 1 + arg1 <= arg2 /\ 0 <= arg1 /\ 0 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 1 + arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 0 <= arg2, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 1 + arg1 <= arg2 /\ 0 <= arg1 /\ 0 <= arg2, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 0 <= arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005678s
Time used: 0.005543
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.005047s
Time used: 0.005009

LOG: SAT solveNonLinear - Elapsed time: 0.010725s
Cost: 1; Total time: 0.010552
[31mFailed at location 2: arg2 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg2 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001425s
Remaining time after improvement: 0.999322
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg2 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 2

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 0 <= arg1 /\ 0 <= arg2, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + 2*arg1, arg2 -> 1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 0 <= arg2, arg2 <= arg1, 
OPEN EXITS: 
<l2, end, arg2 <= arg1 /\ 0 <= arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>
Conditions: arg2 <= arg1, 0 <= arg2, 
OPEN EXITS: 
<l0, l2, 1 <= undef7 /\ arg2 <= arg1 /\ 0 <= arg2 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

