YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg3 -> undef3, arg4 -> undef4}>
<l3, l4, (arg1 > 0) /\ (arg2 > ~(1)) /\ ((arg2 - (5 * undef9)) >= 0) /\ ((arg2 - (5 * undef9)) < 5) /\ ((arg2 - (4 * undef10)) >= 0) /\ ((arg2 - (4 * undef10)) < 4) /\ ((arg2 - (5 * undef11)) >= 0) /\ ((arg2 - (5 * undef11)) < 5) /\ ((arg2 - (4 * undef12)) < 4) /\ ((arg2 - (4 * undef12)) >= 0), par{arg1 -> arg2, arg2 -> (arg2 - (5 * undef9)), arg3 -> (arg2 - (4 * undef10)), arg4 -> ((arg2 + (arg2 - (5 * undef11))) + ((3 * arg2) - (12 * undef12)))}>
<l4, l4, (arg2 < arg1) /\ (arg2 <= (arg1 - 1)) /\ (arg4 > ~(1)) /\ ((arg1 - 1) < arg1), par{arg1 -> (arg1 - 1), arg4 -> (((arg1 - 1) + arg2) + (3 * arg3))}>
<l4, l4, (arg4 > ~(1)) /\ (arg2 >= arg1) /\ ((arg3 - 1) < arg3) /\ (arg3 >= arg2), par{arg3 -> (arg3 - 1), arg4 -> ((arg1 + arg2) + ((3 * arg3) - 3))}>
<l4, l4, (arg4 > ~(1)) /\ (arg2 >= arg1) /\ ((arg2 - 2) < arg2) /\ (arg3 < arg2), par{arg2 -> (arg2 - 2), arg4 -> ((arg1 + (arg2 - 2)) + (3 * arg3))}>
<l1, l2, true, par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, arg4 -> undef28}>

Fresh variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Undef variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (arg1 = undef26) /\ (arg2 = (undef26 - (5 * undef9))) /\ (arg3 = (undef26 - (4 * undef10))) /\ (arg4 = ((undef26 + (undef26 - (5 * undef11))) + ((3 * undef26) - (12 * undef12)))) /\ (undef25 > 0) /\ (undef26 > ~(1)) /\ (undef25 > 0) /\ (undef26 > ~(1)) /\ ((undef26 - (5 * undef9)) >= 0) /\ ((undef26 - (5 * undef9)) < 5) /\ ((undef26 - (4 * undef10)) >= 0) /\ ((undef26 - (4 * undef10)) < 4) /\ ((undef26 - (5 * undef11)) >= 0) /\ ((undef26 - (5 * undef11)) < 5) /\ ((undef26 - (4 * undef12)) < 4) /\ ((undef26 - (4 * undef12)) >= 0)>
<l4, l4, (arg2 < arg1) /\ (arg2 <= (arg1 - 1)) /\ (arg4 > ~(1)) /\ ((arg1 - 1) < arg1), par{arg1 -> (arg1 - 1), arg4 -> (((arg1 - 1) + arg2) + (3 * arg3))}>
<l4, l4, (arg4 > ~(1)) /\ (arg2 >= arg1) /\ ((arg3 - 1) < arg3) /\ (arg3 >= arg2), par{arg3 -> (arg3 - 1), arg4 -> ((arg1 + arg2) + ((3 * arg3) - 3))}>
<l4, l4, (arg4 > ~(1)) /\ (arg2 >= arg1) /\ ((arg2 - 2) < arg2) /\ (arg3 < arg2), par{arg2 -> (arg2 - 2), arg4 -> ((arg1 + (arg2 - 2)) + (3 * arg3))}>

Fresh variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Undef variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.031606

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001307s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.022922s
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.146256s
Time used: 0.145234
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.286012s
Time used: 0.281606
Trying to remove transition: <l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.082372s
Time used: 0.079626
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020818s
Time used: 4.00058
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.712408s
Time used: 0.696988
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.005299s
Time used: 1.00093

LOG: SAT solveNonLinear - Elapsed time: 1.717707s
Cost: 2; Total time: 1.69792
[31mFailed at location 4: arg1 + arg3 <= 1 + arg2[0m
[31mFailed at location 4: arg2 + arg3 + arg4 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l4: arg1 + arg3 <= 1 + arg2[0m
[36mQuasi-invariant at l4: arg2 + arg3 + arg4 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005829s
Remaining time after improvement: 0.997913
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg1 + arg3 <= 1 + arg2[0m
[36mQuasi-invariant at l4: arg2 + arg3 + arg4 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg1 + arg3 <= 1 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ arg2 <= arg3 /\ 0 <= arg4 /\ arg1 + arg3 <= 1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ arg1 + arg3 <= 1 + arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg1 + arg3 <= 1 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ arg2 <= arg3 /\ 0 <= arg4 /\ arg1 + arg3 <= 1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ arg1 + arg3 <= 1 + arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
[33mRanking function: [36m1 + arg1 - arg2 - arg3 + 3*arg4[0m
New Graphs: 
Transitions:
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ arg2 <= arg3 /\ 0 <= arg4 /\ arg1 + arg3 <= 1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ arg1 + arg3 <= 1 + arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001224s
[33mRanking function: [36m(~(5) / 3)*arg2 + (~(5) / 3)*arg3 + (4 / 3)*arg4[0m
New Graphs: 
Calling Safety with literal arg1 + arg3 <= 1 + arg2 and entry <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

LOG: CALL check - Post:arg1 + arg3 <= 1 + arg2 - Process 1
* Exit transition: <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>
* Postcondition  : arg1 + arg3 <= 1 + arg2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000488s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000594s
Calling Safety with literal arg2 + arg3 + arg4 <= 0 and entry <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

LOG: CALL check - Post:arg2 + arg3 + arg4 <= 0 - Process 2
* Exit transition: <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>
* Postcondition  : arg2 + arg3 + arg4 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000476s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000561s
INVARIANTS: 
4: 
Quasi-INVARIANTS to narrow Graph: 
4: arg2 + arg3 + arg4 <= 0 , arg1 + arg3 <= 1 + arg2 , 
Narrowing transition: 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 2 + arg2 <= arg1 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 2 + arg2 <= arg1 + arg3, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003007s
[33mRanking function: [36m2*arg3[0m
New Graphs: 
Transitions:
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 2 + arg2 <= arg1 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001832s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.458207s
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017615s
Time used: 4.00048
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.438630s
Time used: 0.425585
Trying to remove transition: <l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.124956s
Time used: 0.120183
Trying to remove transition: <l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 2 + arg2 <= arg1 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.213677s
Time used: 0.209526
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.086769s
Time used: 0.082772
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.399739s
Time used: 0.397972

LOG: SAT solveNonLinear - Elapsed time: 0.486508s
Cost: 0; Total time: 0.480744
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l4: arg3 <= 3 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 2 + arg2 <= arg1 + arg3 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 2 + arg2 <= arg1 + arg3, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 2 + arg2 <= arg1 + arg3 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
[33mRanking function: [36m1 + arg1[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001653s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.661319s
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017681s
Time used: 4.00065
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.508306s
Time used: 0.496394
Trying to remove transition: <l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.158644s
Time used: 0.154734
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020807s
Time used: 4.00066
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.963116s
Time used: 0.943911
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004709s
Time used: 1.00048

LOG: SAT solveNonLinear - Elapsed time: 1.967826s
Cost: 2; Total time: 1.94439
[31mFailed at location 4: arg3 <= 0[0m
[31mFailed at location 4: arg3 + arg4 <= 1 + arg1 + arg2[0m
Before Improving: 
[36mQuasi-invariant at l4: arg3 <= 0[0m
[36mQuasi-invariant at l4: arg3 + arg4 <= 1 + arg1 + arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011603s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007524s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007077s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006782s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008561s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006834s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006847s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005876s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006368s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007524s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006017s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006136s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003221s
Remaining time after improvement: 0.914253
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg3 <= 1[0m
[36mQuasi-invariant at l4: arg3 + arg4 <= 14 + arg1 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg3 <= 1 /\ 2 + arg2 <= arg1 + arg3 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
[33mRanking function: [36m4 + arg2[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001712s
[33mRanking function: [36m-53 + 53*arg1 - 53*arg2[0m
New Graphs: 
Transitions:
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ arg3 + arg4 <= 14 + arg1 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000946s
[33mRanking function: [36m-arg2 + arg3[0m
New Graphs: 
INVARIANTS: 
4: arg3 <= 3 + arg2 , 
Quasi-INVARIANTS to narrow Graph: 
4: 
Calling Safety with literal arg3 <= 1 and entry <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= arg2 + arg3 + arg4 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

LOG: CALL check - Post:arg3 <= 1 - Process 3
* Exit transition: <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= arg2 + arg3 + arg4 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>
* Postcondition  : arg3 <= 1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000591s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000672s
Calling Safety with literal arg3 + arg4 <= 14 + arg1 + arg2 and entry <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= arg2 + arg3 + arg4 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

LOG: CALL check - Post:arg3 + arg4 <= 14 + arg1 + arg2 - Process 4
* Exit transition: <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= arg2 + arg3 + arg4 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>
* Postcondition  : arg3 + arg4 <= 14 + arg1 + arg2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000522s
[32m> Postcondition implied![0m

LOG: RETURN check - Elapsed time: 0.000614s
INVARIANTS: 
4: 
Quasi-INVARIANTS to narrow Graph: 
4: arg3 <= 1 , arg3 + arg4 <= 14 + arg1 + arg2 , 
It's unfeasible. Removing transition: 
<l4, l4, arg2 + arg3 + arg4 <= 0 /\ 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 2 + arg2 <= arg1 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Narrowing transition: 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: Narrow transition size 2
It's unfeasible. Removing transition: 
<l4, l4, arg1 <= arg2 /\ arg2 + arg3 + arg4 <= 0 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 2 + arg2 <= arg1 + arg3, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Narrowing transition: 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ 2 <= arg3 /\ arg3 <= 3 + arg2, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ 2 <= arg3 /\ arg3 <= 3 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ 2 <= arg3, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005046s
[33mRanking function: [36marg1[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ 2 <= arg3 /\ arg3 <= 3 + arg2, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ 2 <= arg3, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004903s
[33mRanking function: [36m55 + arg3[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ 2 <= arg3, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002984s
[33mRanking function: [36m-1 + arg2 + arg3[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003995s
[33mRanking function: [36m(284 / 39) + (5 / 13)*arg1 + (~(1) / 3)*arg2 + (2 / 39)*arg3 + (2 / 39)*arg4[0m
New Graphs: 
Transitions:
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg2 -> -2 + arg2, arg4 -> -2 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002274s
[33mRanking function: [36m(~(30) / 41) + (~(1) / 41)*arg1 + (14 / 41)*arg2 + (~(14) / 41)*arg3 + (1 / 41)*arg4[0m
New Graphs: 
Transitions:
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 + arg3 + arg4 /\ arg3 <= 1 /\ arg3 <= 3 + arg2 /\ 15 + arg1 + arg2 <= arg3 + arg4, {arg3 -> -1 + arg3, arg4 -> -3 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001067s
[33mRanking function: [36m-arg2 + arg3[0m
New Graphs: 
[32mProgram Terminates[0m

