NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l4, (undef3 > ~(1)) /\ (arg2 > 1) /\ ((undef4 - (2 * undef5)) = 0) /\ (undef4 > ~(1)) /\ (arg1 > 0)>
<l4, l2, (undef8 > ~(1)) /\ (arg2 > 1) /\ ((undef9 - (2 * undef10)) = 0) /\ (undef9 > ~(1)) /\ (arg1 > 0) /\ ((undef9 - (2 * undef10)) < 2) /\ ((undef9 - (2 * undef10)) >= 0), par{arg1 -> (0 - undef8), arg2 -> undef7}>
<l2, l2, (~(5) = arg1), par{arg1 -> ~(5), arg2 -> undef12}>
<l2, l2, (arg1 < 0) /\ (arg1 < ~(5)), par{arg1 -> (arg1 + 1), arg2 -> undef14}>
<l2, l2, (arg1 < 0) /\ (arg1 > ~(5)), par{arg1 -> (arg1 + 1), arg2 -> undef16}>
<l1, l3, true, par{arg1 -> undef17, arg2 -> undef18}>

Fresh variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef12, undef14, undef16, undef17, undef18, 

Undef variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef12, undef14, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = (0 - undef8)) /\ (undef3 > ~(1)) /\ (undef18 > 1) /\ ((undef4 - (2 * undef5)) = 0) /\ (undef4 > ~(1)) /\ (undef17 > 0) /\ (undef8 > ~(1)) /\ (undef18 > 1) /\ ((undef9 - (2 * undef10)) = 0) /\ (undef9 > ~(1)) /\ (undef17 > 0) /\ ((undef9 - (2 * undef10)) < 2) /\ ((undef9 - (2 * undef10)) >= 0)>
<l2, l2, (~(5) = arg1), par{arg1 -> ~(5)}>
<l2, l2, (arg1 < 0) /\ (arg1 < ~(5)), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg1 < 0) /\ (arg1 > ~(5)), par{arg1 -> (arg1 + 1)}>

Fresh variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef12, undef14, undef16, undef17, undef18, 

Undef variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef12, undef14, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
<l2, l2, 6 + arg1 <= 0, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 1 + arg1 <= 0 /\ 0 <= 4 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef17 /\ 2 <= undef18 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ arg1 + undef8 = 0 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002799

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000591s
[33mRanking function: [36m-6 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
<l2, l2, 1 + arg1 <= 0 /\ 0 <= 4 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000370s
[33mRanking function: [36m-1 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000164s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000493s
Trying to remove transition: <l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.310084s
Time used: 0.308458
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004673s
Time used: 0.003647
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.009783s
Time used: 0.009725

LOG: SAT solveNonLinear - Elapsed time: 0.014456s
Cost: 1; Total time: 0.013372
[31mFailed at location 2: 0 <= 1 + arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: 0 <= 1 + arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001896s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000555s
Remaining time after improvement: 0.998721
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= 4 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 6 + arg1 <= 0, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= 0 /\ 0 <= 4 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
New Graphs: 
Calling Safety with literal 0 <= 4 + arg1 and entry <l0, l2, 1 <= undef17 /\ 2 <= undef18 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ arg1 + undef8 = 0 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {all remain the same}>

LOG: CALL check - Post:0 <= 4 + arg1 - Process 1
* Exit transition: <l0, l2, 1 <= undef17 /\ 2 <= undef18 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ arg1 + undef8 = 0 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {all remain the same}>
* Postcondition  : 0 <= 4 + arg1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000264s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000319s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 0 <= 4 + arg1 , 
Narrowing transition: 
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 6 + arg1 <= 0, {arg1 -> 1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 <= 0 /\ 0 <= 4 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
invGraph after Narrowing: 
Transitions:
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
<l2, l2, 6 + arg1 <= 0, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000368s
[33mRanking function: [36m-5 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000158s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000459s
Trying to remove transition: <l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.304229s
Time used: 0.303224
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021159s
Time used: 4.00076
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.025098s
Time used: 4.00057
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011703s
Time used: 1.00035
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.202404s
Time used: 0.196875

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>
<l2, l2, 6 + arg1 <= 0, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= 4 + arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007354s
Time used: 0.007232
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.003680s
Time used: 0.003661

LOG: SAT solveNonLinear - Elapsed time: 0.011034s
Cost: 1; Total time: 0.010893
[31mFailed at location 2: 5 + arg1 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: 5 + arg1 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001040s
Remaining time after improvement: 0.999537
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 5 + arg1 <= 0[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 5 + arg1 = 0, {arg1 -> -5, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 6 + arg1 <= 0, {arg1 -> 1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 5 + arg1 <= 0, 
OPEN EXITS: 
<l2, end, 5 + arg1 <= 0, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 1 <= undef17 /\ 2 <= undef18 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ arg1 + undef8 = 0 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {all remain the same}>
Conditions: 5 + arg1 <= 0, 
OPEN EXITS: 
<l0, l2, 1 <= undef17 /\ 2 <= undef18 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ 5 + arg1 <= 0 /\ arg1 + undef8 = 0 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

