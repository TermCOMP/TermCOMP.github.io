YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l4, l2, (undef1 > 0), par{arg1 -> undef1, arg2 -> 27, arg3 -> 28}>
<l2, l2, ((undef4 - 3) <= arg1) /\ (arg3 > 0) /\ (arg1 > 0) /\ (undef4 > 3), par{arg1 -> undef4, arg2 -> (arg2 - 1), arg3 -> arg2}>
<l2, l3, ((undef7 + 1) <= arg1) /\ (arg3 < 1) /\ (arg1 > 0) /\ (undef7 > ~(1)), par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9}>
<l3, l3, (arg1 >= (undef10 + 1)) /\ (arg1 > 0) /\ (undef10 > ~(1)), par{arg1 -> undef10, arg2 -> undef11, arg3 -> undef12}>
<l1, l4, true, par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>

Fresh variables:
undef1, undef4, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, 

Undef variables:
undef1, undef4, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = 27) /\ (arg3 = 28) /\ (undef1 > 0)>
<l2, l2, ((undef4 - 3) <= arg1) /\ (arg3 > 0) /\ (arg1 > 0) /\ (undef4 > 3), par{arg1 -> undef4, arg2 -> (arg2 - 1), arg3 -> arg2}>
<l2, l3, ((undef7 + 1) <= arg1) /\ (arg3 < 1) /\ (arg1 > 0) /\ (undef7 > ~(1)), par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9}>
<l3, l3, (arg1 >= (undef10 + 1)) /\ (arg1 > 0) /\ (undef10 > ~(1)), par{arg1 -> undef10, arg2 -> undef11, arg3 -> undef12}>

Fresh variables:
undef1, undef4, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, 

Undef variables:
undef1, undef4, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ undef4 <= 3 + arg1 /\ 4 <= undef4, {arg1 -> undef4, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 2:
Transitions:
<l3, l3, 0 <= undef10 /\ 1 <= arg1 /\ 1 + undef10 <= arg1, {arg1 -> undef10, arg2 -> undef11, arg3 -> undef12, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef1 /\ arg1 = undef1 /\ arg2 = 27 /\ arg3 = 28, {all remain the same}>

Graph 2
<l2, l3, arg3 <= 0 /\ 0 <= undef7 /\ 1 <= arg1 /\ 1 + undef7 <= arg1, {arg1 -> undef7, arg2 -> undef8, arg3 -> undef9, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 3 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001668

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000412s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001634s
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ undef4 <= 3 + arg1 /\ 4 <= undef4, {arg1 -> undef4, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004988s
Time used: 0.004864
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004654s
Time used: 0.004379

LOG: SAT solveNonLinear - Elapsed time: 0.004654s
Cost: 0; Total time: 0.004379
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 1 + arg2 <= arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ undef4 <= 3 + arg1 /\ 4 <= undef4, {arg1 -> undef4, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ undef4 <= 3 + arg1 /\ 4 <= undef4, {arg1 -> undef4, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
[33mRanking function: [36marg3[0m
New Graphs: 
INVARIANTS: 
2: 1 + arg2 <= arg3 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001035

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000431s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m

