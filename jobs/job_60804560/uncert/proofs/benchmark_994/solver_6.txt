YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l10, true>
<l1, l2, (1 <= (0 + i4^0)), par{i4^0 -> (~(1) + i4^0)}>
<l2, l1, true>
<l3, l1, ((0 + n^0) <= (0 + i3^0)), par{i4^0 -> (0 + i3^0)}>
<l3, l4, ((1 + i3^0) <= (0 + n^0)), par{i3^0 -> (1 + i3^0)}>
<l4, l3, true>
<l5, l3, ((0 + i2^0) <= 0), par{i3^0 -> (0 + i2^0)}>
<l5, l6, (1 <= (0 + i2^0)), par{i2^0 -> (~(1) + i2^0)}>
<l6, l5, true>
<l7, l5, ((0 + n^0) <= (0 + i1^0)), par{i2^0 -> (0 + i1^0)}>
<l7, l8, ((1 + i1^0) <= (0 + n^0)), par{i1^0 -> (1 + i1^0)}>
<l8, l7, true>
<l9, l7, true>
<l10, l9, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l1, (1 <= (0 + i4^0)), par{i4^0 -> (~(1) + i4^0)}>
<l3, l1, ((0 + n^0) <= (0 + i3^0)), par{i4^0 -> (0 + i3^0)}>
<l3, l3, ((1 + i3^0) <= (0 + n^0)), par{i3^0 -> (1 + i3^0)}>
<l5, l3, ((0 + i2^0) <= 0), par{i3^0 -> (0 + i2^0)}>
<l5, l5, (1 <= (0 + i2^0)), par{i2^0 -> (~(1) + i2^0)}>
<l7, l5, ((0 + n^0) <= (0 + i1^0)), par{i2^0 -> (0 + i1^0)}>
<l7, l7, ((1 + i1^0) <= (0 + n^0)), par{i1^0 -> (1 + i1^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l7, l7, 1 + i1^0 <= n^0, {i1^0 -> 1 + i1^0, rest remain the same}>
Variables:
i1^0, n^0

Graph 2:
Transitions:
<l5, l5, 1 <= i2^0, {i2^0 -> -1 + i2^0, rest remain the same}>
Variables:
i2^0

Graph 3:
Transitions:
<l3, l3, 1 + i3^0 <= n^0, {i3^0 -> 1 + i3^0, rest remain the same}>
Variables:
i3^0, n^0

Graph 4:
Transitions:
<l1, l1, 1 <= i4^0, {i4^0 -> -1 + i4^0, rest remain the same}>
Variables:
i4^0

Precedence: 
Graph 0

Graph 1
<l0, l7, true, {all remain the same}>

Graph 2
<l7, l5, n^0 <= i1^0, {i2^0 -> i1^0, rest remain the same}>

Graph 3
<l5, l3, i2^0 <= 0, {i3^0 -> i2^0, rest remain the same}>

Graph 4
<l3, l1, n^0 <= i3^0, {i4^0 -> i3^0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 4 )
( 3 , 3 )
( 5 , 2 )
( 7 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000754

Checking conditional termination of SCC {l7}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000321s
[33mRanking function: [36m-1 - i1^0 + n^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.000489

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000218s
[33mRanking function: [36m-1 + i2^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.000676

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000328s
[33mRanking function: [36m-1 - i3^0 + n^0[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.000479

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000224s
[33mRanking function: [36m-1 + i4^0[0m
New Graphs: 
[32mProgram Terminates[0m

