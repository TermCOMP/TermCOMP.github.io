YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l8, l4, (undef1 <= arg1) /\ (arg3 > ~(1)) /\ ((undef1 - 1) <= arg2) /\ (undef2 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef1 > 0) /\ (undef2 > ~(1)), par{arg1 -> undef1, arg2 -> undef2}>
<l7, l4, (undef4 <= arg1) /\ (arg2 > ~(1)) /\ (arg1 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)), par{arg1 -> undef4, arg2 -> undef5, arg3 -> arg2}>
<l4, l5, (arg3 > ~(1)) /\ ((arg3 - (2 * undef10)) = 1) /\ (undef11 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef12 > ~(1)) /\ (undef13 > ~(1)) /\ (undef11 > ~(1))>
<l5, l2, (arg3 > ~(1)) /\ ((arg3 - (2 * undef17)) = 1) /\ (undef16 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef14 > ~(1)) /\ (undef15 > ~(1)) /\ (undef16 > ~(1)) /\ ((arg3 - (2 * undef17)) < 2) /\ ((arg3 - (2 * undef17)) >= 0), par{arg1 -> undef14, arg2 -> undef15, arg3 -> undef16}>
<l4, l5, ((arg3 - (2 * undef21)) = 0) /\ (arg3 > ~(1)) /\ (undef22 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef23 > ~(1)) /\ (undef24 > ~(1)) /\ (undef22 > ~(1))>
<l5, l2, ((arg3 - (2 * undef28)) = 0) /\ (arg3 > ~(1)) /\ (undef27 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef25 > ~(1)) /\ (undef26 > ~(1)) /\ (undef27 > ~(1)) /\ ((arg3 - (2 * undef28)) < 2) /\ ((arg3 - (2 * undef28)) >= 0), par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27}>
<l2, l3, (undef32 > ~(1)) /\ (undef33 > ~(1)) /\ ((5 * undef34) >= 0) /\ ((undef32 + undef33) >= 0) /\ (((undef32 + undef33) + (5 * undef34)) > 0) /\ ((undef35 - (2 * undef36)) = 1) /\ (undef37 <= arg1) /\ (undef38 <= arg2) /\ ((undef39 + 1) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > 0) /\ (undef37 > ~(1)) /\ (undef38 > ~(1)) /\ (undef39 > ~(1))>
<l3, l2, (undef43 > ~(1)) /\ (undef44 > ~(1)) /\ ((5 * undef45) >= 0) /\ ((undef43 + undef44) >= 0) /\ (((undef43 + undef44) + (5 * undef45)) > 0) /\ ((undef46 - (2 * undef47)) = 1) /\ (undef40 <= arg1) /\ (undef41 <= arg2) /\ ((undef42 + 1) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > 0) /\ (undef40 > ~(1)) /\ (undef41 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef46 - (2 * undef47)) < 2) /\ ((undef46 - (2 * undef47)) >= 0), par{arg1 -> undef40, arg2 -> undef41, arg3 -> undef42}>
<l2, l3, (undef51 > ~(1)) /\ (undef52 > ~(1)) /\ ((5 * undef53) >= 0) /\ ((undef51 + undef52) >= 0) /\ ((undef54 - (2 * undef55)) = 0) /\ (undef56 < undef57) /\ (((undef51 + undef52) + (5 * undef53)) > 0) /\ ((undef58 + 1) <= arg1) /\ (undef59 <= arg2) /\ (undef60 <= arg3) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef58 > ~(1)) /\ (undef59 > ~(1)) /\ (undef60 > ~(1))>
<l3, l2, (undef64 > ~(1)) /\ (undef65 > ~(1)) /\ ((5 * undef66) >= 0) /\ ((undef64 + undef65) >= 0) /\ ((undef67 - (2 * undef68)) = 0) /\ (undef69 < undef70) /\ (((undef64 + undef65) + (5 * undef66)) > 0) /\ ((undef61 + 1) <= arg1) /\ (undef62 <= arg2) /\ (undef63 <= arg3) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef61 > ~(1)) /\ (undef62 > ~(1)) /\ (undef63 > ~(1)) /\ ((undef67 - (2 * undef68)) < 2) /\ ((undef67 - (2 * undef68)) >= 0), par{arg1 -> undef61, arg2 -> undef62, arg3 -> undef63}>
<l2, l3, (undef74 > ~(1)) /\ (undef75 > ~(1)) /\ ((5 * undef76) >= 0) /\ ((undef74 + undef75) >= 0) /\ ((undef77 - (2 * undef78)) = 0) /\ (undef79 >= undef80) /\ (((undef74 + undef75) + (5 * undef76)) > 0) /\ ((undef81 - 2) <= arg1) /\ ((undef82 + 1) <= arg2) /\ ((undef83 - 2) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > ~(1)) /\ (undef81 > 0) /\ (undef82 > ~(1)) /\ (undef83 > 0)>
<l3, l2, (undef87 > ~(1)) /\ (undef88 > ~(1)) /\ ((5 * undef89) >= 0) /\ ((undef87 + undef88) >= 0) /\ ((undef90 - (2 * undef91)) = 0) /\ (undef92 >= undef93) /\ (((undef87 + undef88) + (5 * undef89)) > 0) /\ ((undef84 - 2) <= arg1) /\ ((undef85 + 1) <= arg2) /\ ((undef86 - 2) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > ~(1)) /\ (undef84 > 0) /\ (undef85 > ~(1)) /\ (undef86 > 0) /\ ((undef90 - (2 * undef91)) < 2) /\ ((undef90 - (2 * undef91)) >= 0), par{arg1 -> undef84, arg2 -> undef85, arg3 -> undef86}>
<l7, l6, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> (arg2 - 1), arg3 -> undef96}>
<l4, l6, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> (arg3 - 1), arg2 -> arg3, arg3 -> undef99}>
<l4, l5, ((arg3 - (2 * undef103)) = 0) /\ (arg3 > ~(1)) /\ (arg1 > 0) /\ (arg2 > ~(1))>
<l5, l6, ((arg3 - (2 * undef107)) = 0) /\ (arg3 > ~(1)) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ ((arg3 - (2 * undef107)) < 2) /\ ((arg3 - (2 * undef107)) >= 0), par{arg1 -> ((arg3 * arg3) - 1), arg2 -> (arg3 * arg3), arg3 -> undef106}>
<l6, l6, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef110}>
<l2, l9, (undef111 <= arg3) /\ (undef112 <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef111 > ~(1)) /\ (undef112 > ~(1)), par{arg1 -> undef111, arg2 -> undef112, arg3 -> undef113}>
<l2, l9, (undef114 <= arg1) /\ (undef115 <= arg1) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef114 > ~(1)) /\ (undef115 > ~(1)), par{arg1 -> undef114, arg2 -> undef115, arg3 -> undef116}>
<l2, l9, (undef120 > ~(1)) /\ (undef121 > ~(1)) /\ (undef117 <= arg2) /\ (undef118 <= arg2) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef117 > ~(1)) /\ (undef118 > ~(1)), par{arg1 -> undef117, arg2 -> undef118, arg3 -> undef119}>
<l2, l9, (undef125 > ~(1)) /\ (undef126 > ~(1)) /\ ((5 * undef127) >= 0) /\ (((undef125 + undef126) + (5 * undef127)) > 0) /\ ((undef125 + undef126) >= 0) /\ (undef122 <= arg3) /\ (undef123 <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef122 > ~(1)) /\ (undef123 > ~(1)), par{arg1 -> undef122, arg2 -> undef123, arg3 -> undef124}>
<l2, l3, (undef131 > ~(1)) /\ (undef132 > ~(1)) /\ ((5 * undef133) >= 0) /\ ((undef131 + undef132) >= 0) /\ (((undef131 + undef132) + (5 * undef133)) > 0) /\ ((undef134 - (2 * undef135)) = 0) /\ (undef136 <= arg1) /\ (undef137 <= arg1) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef136 > ~(1)) /\ (undef137 > ~(1))>
<l3, l9, (undef141 > ~(1)) /\ (undef142 > ~(1)) /\ ((5 * undef143) >= 0) /\ ((undef141 + undef142) >= 0) /\ (((undef141 + undef142) + (5 * undef143)) > 0) /\ ((undef144 - (2 * undef145)) = 0) /\ (undef138 <= arg1) /\ (undef139 <= arg1) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef138 > ~(1)) /\ (undef139 > ~(1)) /\ ((undef144 - (2 * undef145)) < 2) /\ ((undef144 - (2 * undef145)) >= 0), par{arg1 -> undef138, arg2 -> undef139, arg3 -> undef140}>
<l2, l3, (undef149 > ~(1)) /\ (undef150 > ~(1)) /\ ((5 * undef151) >= 0) /\ ((undef149 + undef150) >= 0) /\ (((undef149 + undef150) + (5 * undef151)) > 0) /\ ((undef152 - (2 * undef153)) = 0) /\ (undef154 <= arg2) /\ (undef155 <= arg2) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef154 > ~(1)) /\ (undef155 > ~(1))>
<l3, l9, (undef159 > ~(1)) /\ (undef160 > ~(1)) /\ ((5 * undef161) >= 0) /\ ((undef159 + undef160) >= 0) /\ (((undef159 + undef160) + (5 * undef161)) > 0) /\ ((undef162 - (2 * undef163)) = 0) /\ (undef156 <= arg2) /\ (undef157 <= arg2) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef156 > ~(1)) /\ (undef157 > ~(1)) /\ ((undef162 - (2 * undef163)) < 2) /\ ((undef162 - (2 * undef163)) >= 0), par{arg1 -> undef156, arg2 -> undef157, arg3 -> undef158}>
<l9, l9, ((undef164 + 1) <= arg1) /\ ((undef164 + 1) <= arg2) /\ ((undef165 + 1) <= arg1) /\ ((undef165 + 1) <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef164 > ~(1)) /\ (undef165 > ~(1)), par{arg1 -> undef164, arg2 -> undef165, arg3 -> undef166}>
<l1, l7, true, par{arg1 -> undef167, arg2 -> undef168, arg3 -> undef169}>

Fresh variables:
undef1, undef2, undef4, undef5, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef51, undef52, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, undef70, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef96, undef99, undef103, undef106, undef107, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, 

Undef variables:
undef1, undef2, undef4, undef5, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef51, undef52, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, undef70, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef96, undef99, undef103, undef106, undef107, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef4 <= undef167) /\ (undef168 > ~(1)) /\ (undef167 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef168 > ~(1)) /\ ((undef168 - (2 * undef10)) = 1) /\ (undef11 <= undef5) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef12 > ~(1)) /\ (undef13 > ~(1)) /\ (undef11 > ~(1)) /\ (undef168 > ~(1)) /\ ((undef168 - (2 * undef17)) = 1) /\ (undef16 <= undef5) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef14 > ~(1)) /\ (undef15 > ~(1)) /\ (undef16 > ~(1)) /\ ((undef168 - (2 * undef17)) < 2) /\ ((undef168 - (2 * undef17)) >= 0), par{arg1 -> undef14, arg2 -> undef15, arg3 -> undef16}>
<l0, l2, (undef4 <= undef167) /\ (undef168 > ~(1)) /\ (undef167 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef21)) = 0) /\ (undef168 > ~(1)) /\ (undef22 <= undef5) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef23 > ~(1)) /\ (undef24 > ~(1)) /\ (undef22 > ~(1)) /\ ((undef168 - (2 * undef28)) = 0) /\ (undef168 > ~(1)) /\ (undef27 <= undef5) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef25 > ~(1)) /\ (undef26 > ~(1)) /\ (undef27 > ~(1)) /\ ((undef168 - (2 * undef28)) < 2) /\ ((undef168 - (2 * undef28)) >= 0), par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27}>
<l0, l6, (undef4 <= undef167) /\ (undef168 > ~(1)) /\ (undef167 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef21)) = 0) /\ (undef168 > ~(1)) /\ (undef22 <= undef5) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef23 > ~(1)) /\ (undef24 > ~(1)) /\ (undef22 > ~(1)) /\ ((undef168 - (2 * undef107)) = 0) /\ (undef168 > ~(1)) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef107)) < 2) /\ ((undef168 - (2 * undef107)) >= 0), par{arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106}>
<l0, l6, (undef4 <= undef167) /\ (undef168 > ~(1)) /\ (undef167 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef4 > 0) /\ (undef5 > ~(1)), par{arg1 -> (undef168 - 1), arg2 -> undef168, arg3 -> undef99}>
<l0, l2, (undef4 <= undef167) /\ (undef168 > ~(1)) /\ (undef167 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef103)) = 0) /\ (undef168 > ~(1)) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef28)) = 0) /\ (undef168 > ~(1)) /\ (undef27 <= undef5) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ (undef25 > ~(1)) /\ (undef26 > ~(1)) /\ (undef27 > ~(1)) /\ ((undef168 - (2 * undef28)) < 2) /\ ((undef168 - (2 * undef28)) >= 0), par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27}>
<l0, l6, (undef4 <= undef167) /\ (undef168 > ~(1)) /\ (undef167 > 0) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef103)) = 0) /\ (undef168 > ~(1)) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef107)) = 0) /\ (undef168 > ~(1)) /\ (undef4 > 0) /\ (undef5 > ~(1)) /\ ((undef168 - (2 * undef107)) < 2) /\ ((undef168 - (2 * undef107)) >= 0), par{arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106}>
<l0, l6, (undef167 > 0) /\ (undef168 > ~(1)), par{arg1 -> (undef168 - 1), arg2 -> undef168, arg3 -> undef96}>
<l2, l3, (undef32 > ~(1)) /\ (undef33 > ~(1)) /\ ((5 * undef34) >= 0) /\ ((undef32 + undef33) >= 0) /\ (((undef32 + undef33) + (5 * undef34)) > 0) /\ ((undef35 - (2 * undef36)) = 1) /\ (undef37 <= arg1) /\ (undef38 <= arg2) /\ ((undef39 + 1) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > 0) /\ (undef37 > ~(1)) /\ (undef38 > ~(1)) /\ (undef39 > ~(1))>
<l2, l3, (undef51 > ~(1)) /\ (undef52 > ~(1)) /\ ((5 * undef53) >= 0) /\ ((undef51 + undef52) >= 0) /\ ((undef54 - (2 * undef55)) = 0) /\ (undef56 < undef57) /\ (((undef51 + undef52) + (5 * undef53)) > 0) /\ ((undef58 + 1) <= arg1) /\ (undef59 <= arg2) /\ (undef60 <= arg3) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef58 > ~(1)) /\ (undef59 > ~(1)) /\ (undef60 > ~(1))>
<l2, l3, (undef74 > ~(1)) /\ (undef75 > ~(1)) /\ ((5 * undef76) >= 0) /\ ((undef74 + undef75) >= 0) /\ ((undef77 - (2 * undef78)) = 0) /\ (undef79 >= undef80) /\ (((undef74 + undef75) + (5 * undef76)) > 0) /\ ((undef81 - 2) <= arg1) /\ ((undef82 + 1) <= arg2) /\ ((undef83 - 2) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > ~(1)) /\ (undef81 > 0) /\ (undef82 > ~(1)) /\ (undef83 > 0)>
<l2, l9, (undef111 <= arg3) /\ (undef112 <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef111 > ~(1)) /\ (undef112 > ~(1)), par{arg1 -> undef111, arg2 -> undef112, arg3 -> undef113}>
<l2, l9, (undef114 <= arg1) /\ (undef115 <= arg1) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef114 > ~(1)) /\ (undef115 > ~(1)), par{arg1 -> undef114, arg2 -> undef115, arg3 -> undef116}>
<l2, l9, (undef120 > ~(1)) /\ (undef121 > ~(1)) /\ (undef117 <= arg2) /\ (undef118 <= arg2) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef117 > ~(1)) /\ (undef118 > ~(1)), par{arg1 -> undef117, arg2 -> undef118, arg3 -> undef119}>
<l2, l9, (undef125 > ~(1)) /\ (undef126 > ~(1)) /\ ((5 * undef127) >= 0) /\ (((undef125 + undef126) + (5 * undef127)) > 0) /\ ((undef125 + undef126) >= 0) /\ (undef122 <= arg3) /\ (undef123 <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef122 > ~(1)) /\ (undef123 > ~(1)), par{arg1 -> undef122, arg2 -> undef123, arg3 -> undef124}>
<l2, l3, (undef131 > ~(1)) /\ (undef132 > ~(1)) /\ ((5 * undef133) >= 0) /\ ((undef131 + undef132) >= 0) /\ (((undef131 + undef132) + (5 * undef133)) > 0) /\ ((undef134 - (2 * undef135)) = 0) /\ (undef136 <= arg1) /\ (undef137 <= arg1) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef136 > ~(1)) /\ (undef137 > ~(1))>
<l2, l3, (undef149 > ~(1)) /\ (undef150 > ~(1)) /\ ((5 * undef151) >= 0) /\ ((undef149 + undef150) >= 0) /\ (((undef149 + undef150) + (5 * undef151)) > 0) /\ ((undef152 - (2 * undef153)) = 0) /\ (undef154 <= arg2) /\ (undef155 <= arg2) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef154 > ~(1)) /\ (undef155 > ~(1))>
<l3, l2, (undef43 > ~(1)) /\ (undef44 > ~(1)) /\ ((5 * undef45) >= 0) /\ ((undef43 + undef44) >= 0) /\ (((undef43 + undef44) + (5 * undef45)) > 0) /\ ((undef46 - (2 * undef47)) = 1) /\ (undef40 <= arg1) /\ (undef41 <= arg2) /\ ((undef42 + 1) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > 0) /\ (undef40 > ~(1)) /\ (undef41 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef46 - (2 * undef47)) < 2) /\ ((undef46 - (2 * undef47)) >= 0), par{arg1 -> undef40, arg2 -> undef41, arg3 -> undef42}>
<l3, l2, (undef64 > ~(1)) /\ (undef65 > ~(1)) /\ ((5 * undef66) >= 0) /\ ((undef64 + undef65) >= 0) /\ ((undef67 - (2 * undef68)) = 0) /\ (undef69 < undef70) /\ (((undef64 + undef65) + (5 * undef66)) > 0) /\ ((undef61 + 1) <= arg1) /\ (undef62 <= arg2) /\ (undef63 <= arg3) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef61 > ~(1)) /\ (undef62 > ~(1)) /\ (undef63 > ~(1)) /\ ((undef67 - (2 * undef68)) < 2) /\ ((undef67 - (2 * undef68)) >= 0), par{arg1 -> undef61, arg2 -> undef62, arg3 -> undef63}>
<l3, l2, (undef87 > ~(1)) /\ (undef88 > ~(1)) /\ ((5 * undef89) >= 0) /\ ((undef87 + undef88) >= 0) /\ ((undef90 - (2 * undef91)) = 0) /\ (undef92 >= undef93) /\ (((undef87 + undef88) + (5 * undef89)) > 0) /\ ((undef84 - 2) <= arg1) /\ ((undef85 + 1) <= arg2) /\ ((undef86 - 2) <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > ~(1)) /\ (undef84 > 0) /\ (undef85 > ~(1)) /\ (undef86 > 0) /\ ((undef90 - (2 * undef91)) < 2) /\ ((undef90 - (2 * undef91)) >= 0), par{arg1 -> undef84, arg2 -> undef85, arg3 -> undef86}>
<l3, l9, (undef141 > ~(1)) /\ (undef142 > ~(1)) /\ ((5 * undef143) >= 0) /\ ((undef141 + undef142) >= 0) /\ (((undef141 + undef142) + (5 * undef143)) > 0) /\ ((undef144 - (2 * undef145)) = 0) /\ (undef138 <= arg1) /\ (undef139 <= arg1) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef138 > ~(1)) /\ (undef139 > ~(1)) /\ ((undef144 - (2 * undef145)) < 2) /\ ((undef144 - (2 * undef145)) >= 0), par{arg1 -> undef138, arg2 -> undef139, arg3 -> undef140}>
<l3, l9, (undef159 > ~(1)) /\ (undef160 > ~(1)) /\ ((5 * undef161) >= 0) /\ ((undef159 + undef160) >= 0) /\ (((undef159 + undef160) + (5 * undef161)) > 0) /\ ((undef162 - (2 * undef163)) = 0) /\ (undef156 <= arg2) /\ (undef157 <= arg2) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (undef156 > ~(1)) /\ (undef157 > ~(1)) /\ ((undef162 - (2 * undef163)) < 2) /\ ((undef162 - (2 * undef163)) >= 0), par{arg1 -> undef156, arg2 -> undef157, arg3 -> undef158}>
<l6, l6, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef110}>
<l9, l9, ((undef164 + 1) <= arg1) /\ ((undef164 + 1) <= arg2) /\ ((undef165 + 1) <= arg1) /\ ((undef165 + 1) <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef164 > ~(1)) /\ (undef165 > ~(1)), par{arg1 -> undef164, arg2 -> undef165, arg3 -> undef166}>

Fresh variables:
undef1, undef2, undef4, undef5, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef51, undef52, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, undef70, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef96, undef99, undef103, undef106, undef107, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, abstract_170, abstract_171, 

Undef variables:
undef1, undef2, undef4, undef5, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef51, undef52, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, undef70, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef96, undef99, undef103, undef106, undef107, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, 

Abstraction variables:
abstract_171 --> ( * arg3 arg3 )
abstract_170 --> ( - ( * arg3 arg3 ) 1 )

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l6, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef110, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 2:
Transitions:
<l2, l3, 1 <= arg3 /\ 1 + undef39 <= arg3 /\ 1 <= undef32 + undef33 + 5*undef34 /\ 0 <= arg1 /\ undef37 <= arg1 /\ 0 <= arg2 /\ undef38 <= arg2 /\ 0 <= undef32 /\ 0 <= undef32 + undef33 /\ 0 <= undef33 /\ 0 <= undef34 /\ 0 <= undef37 /\ 0 <= undef38 /\ 0 <= undef39 /\ undef35 = 1 + 2*undef36, {all remain the same}>
<l2, l3, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 <= undef51 + undef52 + 5*undef53 /\ 1 + undef56 <= undef57 /\ 0 <= arg2 /\ undef59 <= arg2 /\ 0 <= arg3 /\ undef60 <= arg3 /\ 0 <= undef51 /\ 0 <= undef51 + undef52 /\ 0 <= undef52 /\ 0 <= undef53 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ undef54 = 2*undef55, {all remain the same}>
<l2, l3, 1 <= arg2 /\ 1 + undef82 <= arg2 /\ 1 <= undef74 + undef75 + 5*undef76 /\ 1 <= undef81 /\ 1 <= undef83 /\ 0 <= arg1 /\ 0 <= arg3 /\ 0 <= undef74 /\ 0 <= undef74 + undef75 /\ 0 <= undef75 /\ 0 <= undef76 /\ undef80 <= undef79 /\ 0 <= undef82 /\ undef81 <= 2 + arg1 /\ undef83 <= 2 + arg3 /\ undef77 = 2*undef78, {all remain the same}>
<l2, l3, 1 <= undef131 + undef132 + 5*undef133 /\ 0 <= arg1 /\ undef136 <= arg1 /\ undef137 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= undef131 /\ 0 <= undef131 + undef132 /\ 0 <= undef132 /\ 0 <= undef133 /\ 0 <= undef136 /\ 0 <= undef137 /\ undef134 = 2*undef135, {all remain the same}>
<l2, l3, 1 <= undef149 + undef150 + 5*undef151 /\ 0 <= arg1 /\ 0 <= arg2 /\ undef154 <= arg2 /\ undef155 <= arg2 /\ 0 <= arg3 /\ 0 <= undef149 /\ 0 <= undef149 + undef150 /\ 0 <= undef150 /\ 0 <= undef151 /\ 0 <= undef154 /\ 0 <= undef155 /\ undef152 = 2*undef153, {all remain the same}>
<l3, l2, 1 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 <= undef43 + undef44 + 5*undef45 /\ 0 <= arg1 /\ undef40 <= arg1 /\ 0 <= arg2 /\ undef41 <= arg2 /\ 0 <= undef40 /\ 0 <= undef41 /\ 0 <= undef42 /\ 0 <= undef43 /\ 0 <= undef43 + undef44 /\ 0 <= undef44 /\ 0 <= undef45 /\ undef46 = 1 + 2*undef47, {arg1 -> undef40, arg2 -> undef41, arg3 -> undef42, rest remain the same}>
<l3, l2, 1 <= arg1 /\ 1 + undef61 <= arg1 /\ 1 <= undef64 + undef65 + 5*undef66 /\ 1 + undef69 <= undef70 /\ 0 <= arg2 /\ undef62 <= arg2 /\ 0 <= arg3 /\ undef63 <= arg3 /\ 0 <= undef61 /\ 0 <= undef62 /\ 0 <= undef63 /\ 0 <= undef64 /\ 0 <= undef64 + undef65 /\ 0 <= undef65 /\ 0 <= undef66 /\ undef67 = 2*undef68, {arg1 -> undef61, arg2 -> undef62, arg3 -> undef63, rest remain the same}>
<l3, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 3:
Transitions:
<l9, l9, 1 <= arg1 /\ 1 + undef164 <= arg1 /\ 1 + undef165 <= arg1 /\ 1 <= arg2 /\ 1 + undef164 <= arg2 /\ 1 + undef165 <= arg2 /\ 0 <= undef164 /\ 0 <= undef165, {arg1 -> undef164, arg2 -> undef165, arg3 -> undef166, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ undef22 <= undef5 /\ 0 <= undef22 /\ 0 <= undef23 /\ 0 <= undef24 /\ 0 <= undef168 /\ 2*undef21 = undef168 /\ 2*undef107 = undef168, {arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106, rest remain the same}>
<l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ 0 <= undef168, {arg1 -> -1 + undef168, arg2 -> undef168, arg3 -> undef99, rest remain the same}>
<l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ 0 <= undef168 /\ 2*undef103 = undef168 /\ 2*undef107 = undef168, {arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106, rest remain the same}>
<l0, l6, 1 <= undef167 /\ 0 <= undef168, {arg1 -> -1 + undef168, arg2 -> undef168, arg3 -> undef96, rest remain the same}>

Graph 2
<l0, l2, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ undef11 <= undef5 /\ undef16 <= undef5 /\ 0 <= undef11 /\ 0 <= undef12 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef15 /\ 0 <= undef16 /\ 0 <= undef168 /\ 1 + 2*undef10 = undef168 /\ 1 + 2*undef17 = undef168, {arg1 -> undef14, arg2 -> undef15, arg3 -> undef16, rest remain the same}>
<l0, l2, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ undef22 <= undef5 /\ undef27 <= undef5 /\ 0 <= undef22 /\ 0 <= undef23 /\ 0 <= undef24 /\ 0 <= undef25 /\ 0 <= undef26 /\ 0 <= undef27 /\ 0 <= undef168 /\ 2*undef21 = undef168 /\ 2*undef28 = undef168, {arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, rest remain the same}>
<l0, l2, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ undef27 <= undef5 /\ 0 <= undef25 /\ 0 <= undef26 /\ 0 <= undef27 /\ 0 <= undef168 /\ 2*undef28 = undef168 /\ 2*undef103 = undef168, {arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, rest remain the same}>

Graph 3
<l2, l9, 0 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ undef111 <= arg3 /\ undef112 <= arg3 /\ 0 <= undef111 /\ 0 <= undef112, {arg1 -> undef111, arg2 -> undef112, arg3 -> undef113, rest remain the same}>
<l2, l9, 0 <= arg1 /\ undef114 <= arg1 /\ undef115 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= undef114 /\ 0 <= undef115, {arg1 -> undef114, arg2 -> undef115, arg3 -> undef116, rest remain the same}>
<l2, l9, 0 <= arg1 /\ 0 <= arg2 /\ undef117 <= arg2 /\ undef118 <= arg2 /\ 0 <= arg3 /\ 0 <= undef117 /\ 0 <= undef118 /\ 0 <= undef120 /\ 0 <= undef121, {arg1 -> undef117, arg2 -> undef118, arg3 -> undef119, rest remain the same}>
<l2, l9, 1 <= undef125 + undef126 + 5*undef127 /\ 0 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ undef122 <= arg3 /\ undef123 <= arg3 /\ 0 <= undef122 /\ 0 <= undef123 /\ 0 <= undef125 /\ 0 <= undef125 + undef126 /\ 0 <= undef126 /\ 0 <= undef127, {arg1 -> undef122, arg2 -> undef123, arg3 -> undef124, rest remain the same}>
<l3, l9, 1 <= undef141 + undef142 + 5*undef143 /\ 0 <= arg1 /\ undef138 <= arg1 /\ undef139 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ 0 <= undef138 /\ 0 <= undef139 /\ 0 <= undef141 /\ 0 <= undef141 + undef142 /\ 0 <= undef142 /\ 0 <= undef143 /\ undef144 = 2*undef145, {arg1 -> undef138, arg2 -> undef139, arg3 -> undef140, rest remain the same}>
<l3, l9, 1 <= undef159 + undef160 + 5*undef161 /\ 0 <= arg1 /\ 0 <= arg2 /\ undef156 <= arg2 /\ undef157 <= arg2 /\ 0 <= arg3 /\ 0 <= undef156 /\ 0 <= undef157 /\ 0 <= undef159 /\ 0 <= undef159 + undef160 /\ 0 <= undef160 /\ 0 <= undef161 /\ undef162 = 2*undef163, {arg1 -> undef156, arg2 -> undef157, arg3 -> undef158, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 2 )
( 3 , 2 )
( 6 , 1 )
( 9 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Detected abstraction incompatible with non-termination check.
Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001739

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000306s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000796s
Trying to remove transition: <l6, l6, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef110, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003804s
Time used: 0.003712
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006186s
Time used: 0.005877
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.008606s
Time used: 0.008565

LOG: SAT solveNonLinear - Elapsed time: 0.014792s
Cost: 2; Total time: 0.014442
[31mFailed at location 6: 1 + arg1 <= arg2[0m
[31mFailed at location 6: 1 + arg1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l6: 1 + arg1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001644s
Remaining time after improvement: 0.999206
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: 1 + arg1 <= arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 <= arg2 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef110, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 <= arg2 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef110, rest remain the same}>
[33mRanking function: [36marg2[0m
New Graphs: 
Calling Safety with literal 1 + arg1 <= arg2 and entry <l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ undef22 <= undef5 /\ 0 <= undef22 /\ 0 <= undef23 /\ 0 <= undef24 /\ 0 <= undef168 /\ 2*undef21 = undef168 /\ 2*undef107 = undef168, {arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106, rest remain the same}>

LOG: CALL check - Post:1 + arg1 <= arg2 - Process 1
* Exit transition: <l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ undef22 <= undef5 /\ 0 <= undef22 /\ 0 <= undef23 /\ 0 <= undef24 /\ 0 <= undef168 /\ 2*undef21 = undef168 /\ 2*undef107 = undef168, {arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106, rest remain the same}>
* Postcondition  : 1 + arg1 <= arg2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000378s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000446s
Calling Safety with literal 1 + arg1 <= arg2 and entry <l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ 0 <= undef168 /\ 2*undef103 = undef168 /\ 2*undef107 = undef168, {arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106, rest remain the same}>

LOG: CALL check - Post:1 + arg1 <= arg2 - Process 2
* Exit transition: <l0, l6, 1 <= undef4 /\ 1 <= undef167 /\ undef4 <= undef167 /\ 0 <= undef5 /\ 0 <= undef168 /\ 2*undef103 = undef168 /\ 2*undef107 = undef168, {arg1 -> abstract_170, arg2 -> abstract_171, arg3 -> undef106, rest remain the same}>
* Postcondition  : 1 + arg1 <= arg2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000319s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000370s
INVARIANTS: 
6: 
Quasi-INVARIANTS to narrow Graph: 
6: 1 + arg1 <= arg2 , 
It's unfeasible. Removing transition: 
<l6, l6, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef110, rest remain the same}>
invGraph after Narrowing: 
Transitions:
Variables:
arg1, arg2, arg3
Analyzing SCC {l6}...
No cycles found.

Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.025133

Checking conditional termination of SCC {l2, l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005457s
[33mRanking function: [36m-6 + 6*arg1 + 12*arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg3 /\ 1 + undef39 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 <= undef32 + undef33 + 5*undef34 /\ 1 <= undef43 + undef44 + 5*undef45 /\ 0 <= arg1 /\ undef37 <= arg1 /\ undef40 <= arg1 /\ 0 <= arg2 /\ undef38 <= arg2 /\ undef41 <= arg2 /\ 0 <= undef32 /\ 0 <= undef32 + undef33 /\ 0 <= undef33 /\ 0 <= undef34 /\ 0 <= undef37 /\ 0 <= undef38 /\ 0 <= undef39 /\ 0 <= undef40 /\ 0 <= undef41 /\ 0 <= undef42 /\ 0 <= undef43 /\ 0 <= undef43 + undef44 /\ 0 <= undef44 /\ 0 <= undef45 /\ undef35 = 1 + 2*undef36 /\ undef46 = 1 + 2*undef47, {arg1 -> undef40, arg2 -> undef41, arg3 -> undef42, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= arg3 /\ 1 + undef39 <= arg3 /\ 1 <= undef32 + undef33 + 5*undef34 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ undef37 <= arg1 /\ undef38 <= arg2 /\ 0 <= undef32 /\ 0 <= undef32 + undef33 /\ 0 <= undef33 /\ 0 <= undef34 /\ 0 <= undef37 /\ 0 <= undef38 /\ 0 <= undef39 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef35 = 1 + 2*undef36 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 <= undef43 + undef44 + 5*undef45 /\ 1 <= undef51 + undef52 + 5*undef53 /\ 1 + undef56 <= undef57 /\ undef40 <= arg1 /\ 0 <= arg2 /\ undef41 <= arg2 /\ undef59 <= arg2 /\ undef60 <= arg3 /\ 0 <= undef40 /\ 0 <= undef41 /\ 0 <= undef42 /\ 0 <= undef43 /\ 0 <= undef43 + undef44 /\ 0 <= undef44 /\ 0 <= undef45 /\ 0 <= undef51 /\ 0 <= undef51 + undef52 /\ 0 <= undef52 /\ 0 <= undef53 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ undef46 = 1 + 2*undef47 /\ undef54 = 2*undef55, {arg1 -> undef40, arg2 -> undef41, arg3 -> undef42, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef51 + undef52 + 5*undef53 /\ 1 + undef56 <= undef57 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ undef59 <= arg2 /\ 0 <= arg3 /\ undef60 <= arg3 /\ 0 <= undef51 /\ 0 <= undef51 + undef52 /\ 0 <= undef52 /\ 0 <= undef53 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef54 = 2*undef55 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef82 <= arg2 /\ 1 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 <= undef43 + undef44 + 5*undef45 /\ 1 <= undef74 + undef75 + 5*undef76 /\ 1 <= undef81 /\ 1 <= undef83 /\ 0 <= arg1 /\ undef40 <= arg1 /\ undef41 <= arg2 /\ 0 <= undef40 /\ 0 <= undef41 /\ 0 <= undef42 /\ 0 <= undef43 /\ 0 <= undef43 + undef44 /\ 0 <= undef44 /\ 0 <= undef45 /\ 0 <= undef74 /\ 0 <= undef74 + undef75 /\ 0 <= undef75 /\ 0 <= undef76 /\ undef80 <= undef79 /\ 0 <= undef82 /\ undef81 <= 2 + arg1 /\ undef83 <= 2 + arg3 /\ undef46 = 1 + 2*undef47 /\ undef77 = 2*undef78, {arg1 -> undef40, arg2 -> undef41, arg3 -> undef42, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef82 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef74 + undef75 + 5*undef76 /\ 1 <= undef81 /\ 1 <= undef83 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ 0 <= arg3 /\ 0 <= undef74 /\ 0 <= undef74 + undef75 /\ 0 <= undef75 /\ 0 <= undef76 /\ undef80 <= undef79 /\ 0 <= undef82 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef81 <= 2 + arg1 /\ undef84 <= 2 + arg1 /\ undef83 <= 2 + arg3 /\ undef86 <= 2 + arg3 /\ undef77 = 2*undef78 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 <= undef43 + undef44 + 5*undef45 /\ 1 <= undef131 + undef132 + 5*undef133 /\ 0 <= arg1 /\ undef40 <= arg1 /\ undef136 <= arg1 /\ undef137 <= arg1 /\ 0 <= arg2 /\ undef41 <= arg2 /\ 0 <= undef40 /\ 0 <= undef41 /\ 0 <= undef42 /\ 0 <= undef43 /\ 0 <= undef43 + undef44 /\ 0 <= undef44 /\ 0 <= undef45 /\ 0 <= undef131 /\ 0 <= undef131 + undef132 /\ 0 <= undef132 /\ 0 <= undef133 /\ 0 <= undef136 /\ 0 <= undef137 /\ undef46 = 1 + 2*undef47 /\ undef134 = 2*undef135, {arg1 -> undef40, arg2 -> undef41, arg3 -> undef42, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef131 + undef132 + 5*undef133 /\ 0 <= arg1 /\ undef136 <= arg1 /\ undef137 <= arg1 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef131 /\ 0 <= undef131 + undef132 /\ 0 <= undef132 /\ 0 <= undef133 /\ 0 <= undef136 /\ 0 <= undef137 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef134 = 2*undef135, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 <= undef43 + undef44 + 5*undef45 /\ 1 <= undef149 + undef150 + 5*undef151 /\ 0 <= arg1 /\ undef40 <= arg1 /\ 0 <= arg2 /\ undef41 <= arg2 /\ undef154 <= arg2 /\ undef155 <= arg2 /\ 0 <= undef40 /\ 0 <= undef41 /\ 0 <= undef42 /\ 0 <= undef43 /\ 0 <= undef43 + undef44 /\ 0 <= undef44 /\ 0 <= undef45 /\ 0 <= undef149 /\ 0 <= undef149 + undef150 /\ 0 <= undef150 /\ 0 <= undef151 /\ 0 <= undef154 /\ 0 <= undef155 /\ undef46 = 1 + 2*undef47 /\ undef152 = 2*undef153, {arg1 -> undef40, arg2 -> undef41, arg3 -> undef42, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef149 + undef150 + 5*undef151 /\ 0 <= arg1 /\ undef154 <= arg2 /\ undef155 <= arg2 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef149 /\ 0 <= undef149 + undef150 /\ 0 <= undef150 /\ 0 <= undef151 /\ 0 <= undef154 /\ 0 <= undef155 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef152 = 2*undef153, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.025109s
[33mRanking function: [36m-1 + 2*arg2 + arg3[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= arg3 /\ 1 + undef39 <= arg3 /\ 1 <= undef32 + undef33 + 5*undef34 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ undef37 <= arg1 /\ undef38 <= arg2 /\ 0 <= undef32 /\ 0 <= undef32 + undef33 /\ 0 <= undef33 /\ 0 <= undef34 /\ 0 <= undef37 /\ 0 <= undef38 /\ 0 <= undef39 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef35 = 1 + 2*undef36 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef51 + undef52 + 5*undef53 /\ 1 + undef56 <= undef57 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ undef59 <= arg2 /\ 0 <= arg3 /\ undef60 <= arg3 /\ 0 <= undef51 /\ 0 <= undef51 + undef52 /\ 0 <= undef52 /\ 0 <= undef53 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef54 = 2*undef55 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef82 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef74 + undef75 + 5*undef76 /\ 1 <= undef81 /\ 1 <= undef83 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ 0 <= arg3 /\ 0 <= undef74 /\ 0 <= undef74 + undef75 /\ 0 <= undef75 /\ 0 <= undef76 /\ undef80 <= undef79 /\ 0 <= undef82 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef81 <= 2 + arg1 /\ undef84 <= 2 + arg1 /\ undef83 <= 2 + arg3 /\ undef86 <= 2 + arg3 /\ undef77 = 2*undef78 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef131 + undef132 + 5*undef133 /\ 0 <= arg1 /\ undef136 <= arg1 /\ undef137 <= arg1 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef131 /\ 0 <= undef131 + undef132 /\ 0 <= undef132 /\ 0 <= undef133 /\ 0 <= undef136 /\ 0 <= undef137 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef134 = 2*undef135, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef149 + undef150 + 5*undef151 /\ 0 <= arg1 /\ undef154 <= arg2 /\ undef155 <= arg2 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef149 /\ 0 <= undef149 + undef150 /\ 0 <= undef150 /\ 0 <= undef151 /\ 0 <= undef154 /\ 0 <= undef155 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef152 = 2*undef153, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010168s
[33mRanking function: [36m-61 + 41*arg2 + 20*arg3[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef51 + undef52 + 5*undef53 /\ 1 + undef56 <= undef57 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ undef59 <= arg2 /\ 0 <= arg3 /\ undef60 <= arg3 /\ 0 <= undef51 /\ 0 <= undef51 + undef52 /\ 0 <= undef52 /\ 0 <= undef53 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef54 = 2*undef55 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef82 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef74 + undef75 + 5*undef76 /\ 1 <= undef81 /\ 1 <= undef83 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ 0 <= arg3 /\ 0 <= undef74 /\ 0 <= undef74 + undef75 /\ 0 <= undef75 /\ 0 <= undef76 /\ undef80 <= undef79 /\ 0 <= undef82 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef81 <= 2 + arg1 /\ undef84 <= 2 + arg1 /\ undef83 <= 2 + arg3 /\ undef86 <= 2 + arg3 /\ undef77 = 2*undef78 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef131 + undef132 + 5*undef133 /\ 0 <= arg1 /\ undef136 <= arg1 /\ undef137 <= arg1 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef131 /\ 0 <= undef131 + undef132 /\ 0 <= undef132 /\ 0 <= undef133 /\ 0 <= undef136 /\ 0 <= undef137 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef134 = 2*undef135, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef149 + undef150 + 5*undef151 /\ 0 <= arg1 /\ undef154 <= arg2 /\ undef155 <= arg2 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef149 /\ 0 <= undef149 + undef150 /\ 0 <= undef150 /\ 0 <= undef151 /\ 0 <= undef154 /\ 0 <= undef155 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef152 = 2*undef153, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007728s
[33mRanking function: [36m-61 + 20*arg1 + 41*arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg2 /\ 1 + undef82 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef74 + undef75 + 5*undef76 /\ 1 <= undef81 /\ 1 <= undef83 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 0 <= arg1 /\ 0 <= arg3 /\ 0 <= undef74 /\ 0 <= undef74 + undef75 /\ 0 <= undef75 /\ 0 <= undef76 /\ undef80 <= undef79 /\ 0 <= undef82 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ undef81 <= 2 + arg1 /\ undef84 <= 2 + arg1 /\ undef83 <= 2 + arg3 /\ undef86 <= 2 + arg3 /\ undef77 = 2*undef78 /\ undef90 = 2*undef91, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef131 + undef132 + 5*undef133 /\ 0 <= arg1 /\ undef136 <= arg1 /\ undef137 <= arg1 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef131 /\ 0 <= undef131 + undef132 /\ 0 <= undef132 /\ 0 <= undef133 /\ 0 <= undef136 /\ 0 <= undef137 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef134 = 2*undef135, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 + undef85 <= arg2 /\ 1 <= undef84 /\ 1 <= undef86 /\ 1 <= undef87 + undef88 + 5*undef89 /\ 1 <= undef149 + undef150 + 5*undef151 /\ 0 <= arg1 /\ undef154 <= arg2 /\ undef155 <= arg2 /\ 0 <= arg3 /\ 0 <= undef85 /\ 0 <= undef87 /\ 0 <= undef87 + undef88 /\ 0 <= undef88 /\ 0 <= undef89 /\ undef93 <= undef92 /\ 0 <= undef149 /\ 0 <= undef149 + undef150 /\ 0 <= undef150 /\ 0 <= undef151 /\ 0 <= undef154 /\ 0 <= undef155 /\ undef84 <= 2 + arg1 /\ undef86 <= 2 + arg3 /\ undef90 = 2*undef91 /\ undef152 = 2*undef153, {arg1 -> undef84, arg2 -> undef85, arg3 -> undef86, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005510s
[33mRanking function: [36m-1 + arg2[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.003171

Checking conditional termination of SCC {l9}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001131s
[33mRanking function: [36m-1 + (1 / 2)*arg1 + (1 / 2)*arg2[0m
New Graphs: 
[32mProgram Terminates[0m

