YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg3 -> undef3, arg4 -> undef4}>
<l3, l4, (arg1 > 0) /\ (arg2 > ~(1)) /\ ((arg2 - (5 * undef9)) >= 0) /\ ((arg2 - (5 * undef9)) < 5) /\ ((arg2 - (4 * undef10)) >= 0) /\ ((arg2 - (4 * undef10)) < 4) /\ ((arg2 - (5 * undef11)) >= 0) /\ ((arg2 - (5 * undef11)) < 5) /\ ((arg2 - (4 * undef12)) < 4) /\ ((arg2 - (4 * undef12)) >= 0), par{arg1 -> arg2, arg2 -> (arg2 - (5 * undef9)), arg3 -> (arg2 - (4 * undef10)), arg4 -> ((arg2 + (arg2 - (5 * undef11))) + ((3 * arg2) - (12 * undef12)))}>
<l4, l4, (arg4 > ~(1)) /\ (arg2 < arg1), par{arg1 -> (arg1 - 1), arg4 -> (((arg1 - 1) + arg2) + (3 * arg3))}>
<l4, l4, (arg3 < arg2) /\ (arg4 > ~(1)) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 2), arg4 -> (((arg1 + 1) + (arg2 - 2)) + (3 * arg3))}>
<l4, l4, (arg4 > ~(1)) /\ (arg3 >= arg2) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 1), arg3 -> (arg3 - 1), arg4 -> (((arg1 + 1) + (arg2 + 1)) + ((3 * arg3) - 3))}>
<l1, l2, true, par{arg1 -> undef25, arg2 -> undef26, arg3 -> undef27, arg4 -> undef28}>

Fresh variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Undef variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (arg1 = undef26) /\ (arg2 = (undef26 - (5 * undef9))) /\ (arg3 = (undef26 - (4 * undef10))) /\ (arg4 = ((undef26 + (undef26 - (5 * undef11))) + ((3 * undef26) - (12 * undef12)))) /\ (undef25 > 0) /\ (undef26 > ~(1)) /\ (undef25 > 0) /\ (undef26 > ~(1)) /\ ((undef26 - (5 * undef9)) >= 0) /\ ((undef26 - (5 * undef9)) < 5) /\ ((undef26 - (4 * undef10)) >= 0) /\ ((undef26 - (4 * undef10)) < 4) /\ ((undef26 - (5 * undef11)) >= 0) /\ ((undef26 - (5 * undef11)) < 5) /\ ((undef26 - (4 * undef12)) < 4) /\ ((undef26 - (4 * undef12)) >= 0)>
<l4, l4, (arg4 > ~(1)) /\ (arg2 < arg1), par{arg1 -> (arg1 - 1), arg4 -> (((arg1 - 1) + arg2) + (3 * arg3))}>
<l4, l4, (arg3 < arg2) /\ (arg4 > ~(1)) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 2), arg4 -> (((arg1 + 1) + (arg2 - 2)) + (3 * arg3))}>
<l4, l4, (arg4 > ~(1)) /\ (arg3 >= arg2) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 1), arg3 -> (arg3 - 1), arg4 -> (((arg1 + 1) + (arg2 + 1)) + ((3 * arg3) - 3))}>

Fresh variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Undef variables:
undef3, undef4, undef9, undef10, undef11, undef12, undef25, undef26, undef27, undef28, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2, {arg1 -> 1 + arg1, arg2 -> -2 + arg2, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4, {arg1 -> 1 + arg1, arg2 -> 1 + arg2, arg3 -> -1 + arg3, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.022777

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001316s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.025928s
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4, {arg1 -> 1 + arg1, arg2 -> 1 + arg2, arg3 -> -1 + arg3, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.357165s
Time used: 0.354209
Trying to remove transition: <l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2, {arg1 -> 1 + arg1, arg2 -> -2 + arg2, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.022019s
Time used: 4.00015
Trying to remove transition: <l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.072291s
Time used: 0.063373
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.019320s
Time used: 4.00016
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.620247s
Time used: 0.607701
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004851s
Time used: 1.00051

LOG: SAT solveNonLinear - Elapsed time: 1.625098s
Cost: 2; Total time: 1.60821
[31mFailed at location 4: arg3 <= 0[0m
[31mFailed at location 4: arg4 <= arg1 + arg2 + arg3[0m
Before Improving: 
[36mQuasi-invariant at l4: arg3 <= 0[0m
[36mQuasi-invariant at l4: arg4 <= arg1 + arg2 + arg3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005224s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002713s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002373s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003014s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002605s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003788s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004386s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006113s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004869s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.071204s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004155s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.016194s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008125s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003434s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.021590s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003604s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.019007s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003527s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.060771s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003657s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024899s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002487s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003520s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024900s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002493s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003545s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024822s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002498s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003539s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024761s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002510s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003494s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024535s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002524s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003566s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024936s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002514s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003569s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024956s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002511s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003566s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024830s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003550s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024825s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002518s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003559s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012838s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002522s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003565s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012852s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002503s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003566s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012879s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002512s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003573s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012876s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002517s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003579s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012884s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003568s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012867s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002519s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003592s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012872s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002530s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003595s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012886s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002524s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003600s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012874s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002546s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003621s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012932s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002538s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003594s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013017s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002626s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003707s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013159s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002549s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003599s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012911s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003630s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012681s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002473s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003553s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012833s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002563s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003610s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012678s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002552s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003617s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012966s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002550s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003635s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013237s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002557s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003648s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013202s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002583s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003718s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013374s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002549s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003601s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013220s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002542s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003543s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012962s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002552s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003618s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013036s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002484s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003501s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013036s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003519s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012828s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002497s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003470s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012722s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002462s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002259s
Remaining time after improvement: -2e-06
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg3 <= 50[0m
[36mQuasi-invariant at l4: arg4 <= 100 + arg1 + arg2 + arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> 1 + arg1, arg2 -> -2 + arg2, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg2, arg3 -> -1 + arg3, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> 1 + arg1, arg2 -> -2 + arg2, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg2 /\ arg2 <= arg3 /\ 0 <= arg4 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg2, arg3 -> -1 + arg3, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
[33mRanking function: [36m298 + arg1 + arg2 + 3*arg3[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
<l4, l4, arg1 <= arg2 /\ 0 <= arg4 /\ 1 + arg3 <= arg2 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> 1 + arg1, arg2 -> -2 + arg2, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001061s
[33mRanking function: [36m100 + 2*arg2 + arg3[0m
New Graphs: 
Transitions:
<l4, l4, 0 <= arg4 /\ 1 + arg2 <= arg1 /\ arg3 <= 50 /\ arg4 <= 100 + arg1 + arg2 + arg3, {arg1 -> -1 + arg1, arg4 -> -1 + arg1 + arg2 + 3*arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000597s
[33mRanking function: [36m-1 + arg1 - arg2[0m
New Graphs: 
Calling Safety with literal arg3 <= 50 and entry <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

LOG: CALL check - Post:arg3 <= 50 - Process 1
* Exit transition: <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>
* Postcondition  : arg3 <= 50

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000267s
[32m> Postcondition implied![0m

LOG: RETURN check - Elapsed time: 0.000361s
Calling Safety with literal arg4 <= 100 + arg1 + arg2 + arg3 and entry <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg3 <= 50 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>

LOG: CALL check - Post:arg4 <= 100 + arg1 + arg2 + arg3 - Process 2
* Exit transition: <l0, l4, 5*undef9 <= undef26 /\ 4*undef10 <= undef26 /\ 5*undef11 <= undef26 /\ 4*undef12 <= undef26 /\ 0 <= undef26 /\ 1 <= undef25 /\ undef26 <= 3 + 4*undef10 /\ undef26 <= 3 + 4*undef12 /\ undef26 <= 4 + 5*undef9 /\ undef26 <= 4 + 5*undef11 /\ arg3 <= 50 /\ arg1 = undef26 /\ arg2 + 5*undef9 = undef26 /\ arg3 + 4*undef10 = undef26 /\ arg4 + 5*undef11 + 12*undef12 = 5*undef26, {all remain the same}>
* Postcondition  : arg4 <= 100 + arg1 + arg2 + arg3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000227s
[32m> Postcondition implied![0m

LOG: RETURN check - Elapsed time: 0.000315s
INVARIANTS: 
4: arg3 <= 50 , arg4 <= 100 + arg1 + arg2 + arg3 , 
Quasi-INVARIANTS to narrow Graph: 
4: 
[32mProgram Terminates[0m

