YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, (0 <= (0 + i_5^0)) /\ (undef3 = (1 + i_5^0)), par{i_5^0 -> (~(2) + undef3)}>
<l2, l1, true>
<l1, l3, ((1 + i_5^0) <= 0) /\ (undef6 = undef6), par{Result_4^0 -> undef6}>
<l4, l1, true>
<l5, l4, true>

Fresh variables:
undef3, undef6, 

Undef variables:
undef3, undef6, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, true>
<l1, l1, (0 <= (0 + i_5^0)) /\ (undef3 = (1 + i_5^0)), par{i_5^0 -> (~(2) + undef3)}>
<l1, l3, ((1 + i_5^0) <= 0) /\ (undef6 = undef6)>

Fresh variables:
undef3, undef6, 

Undef variables:
undef3, undef6, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 0 <= i_5^0 /\ 1 + i_5^0 = undef3, {i_5^0 -> -2 + undef3, rest remain the same}>
Variables:
i_5^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, true, {all remain the same}>

Graph 2
<l1, l3, 1 + i_5^0 <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 3 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000754

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000316s
[33mRanking function: [36mi_5^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l3}...
No cycles found.

[32mProgram Terminates[0m

