YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, true>
<l3, l4, ((0 + size1^0) <= (0 + i2^0))>
<l3, l5, ((1 + i2^0) <= (0 + size1^0)), par{i2^0 -> (1 + i2^0)}>
<l6, l7, true>
<l7, l5, ((0 + size1^0) <= (0 + i2^0)), par{i2^0 -> 0}>
<l7, l6, ((1 + i2^0) <= (0 + size1^0)), par{i2^0 -> (1 + i2^0)}>
<l5, l3, true>
<l2, l6, ((0 + size1^0) <= (0 + i2^0)), par{i2^0 -> 0}>
<l2, l1, ((1 + i2^0) <= (0 + size1^0)), par{i2^0 -> (1 + i2^0)}>
<l8, l1, (undef57 = 10) /\ (undef60 = undef60) /\ (undef59 = undef59), par{i2^0 -> 0, size1010^0 -> (0 + undef57), size1^0 -> undef57, size77^0 -> (0 + undef57), tmp1111^0 -> undef59, tmp88^0 -> undef60}>
<l9, l8, true>

Fresh variables:
undef57, undef59, undef60, 

Undef variables:
undef57, undef59, undef60, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (i2^0 = 0) /\ (size1^0 = undef57) /\ (undef57 = 10) /\ (undef60 = undef60) /\ (undef59 = undef59)>
<l1, l6, ((0 + size1^0) <= (0 + i2^0)), par{i2^0 -> 0}>
<l1, l1, ((1 + i2^0) <= (0 + size1^0)), par{i2^0 -> (1 + i2^0)}>
<l5, l4, ((0 + size1^0) <= (0 + i2^0))>
<l5, l5, ((1 + i2^0) <= (0 + size1^0)), par{i2^0 -> (1 + i2^0)}>
<l6, l5, ((0 + size1^0) <= (0 + i2^0)), par{i2^0 -> 0}>
<l6, l6, ((1 + i2^0) <= (0 + size1^0)), par{i2^0 -> (1 + i2^0)}>

Fresh variables:
undef57, undef59, undef60, 

Undef variables:
undef57, undef59, undef60, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 + i2^0 <= size1^0, {i2^0 -> 1 + i2^0, rest remain the same}>
Variables:
i2^0, size1^0

Graph 2:
Transitions:
<l6, l6, 1 + i2^0 <= size1^0, {i2^0 -> 1 + i2^0, rest remain the same}>
Variables:
i2^0, size1^0

Graph 3:
Transitions:
<l5, l5, 1 + i2^0 <= size1^0, {i2^0 -> 1 + i2^0, rest remain the same}>
Variables:
i2^0, size1^0

Graph 4:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, i2^0 = 0 /\ size1^0 = undef57 /\ undef57 = 10, {all remain the same}>

Graph 2
<l1, l6, size1^0 <= i2^0, {i2^0 -> 0, rest remain the same}>

Graph 3
<l6, l5, size1^0 <= i2^0, {i2^0 -> 0, rest remain the same}>

Graph 4
<l5, l4, size1^0 <= i2^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 4 , 4 )
( 5 , 3 )
( 6 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001062

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000424s
[33mRanking function: [36m-1 - i2^0 + size1^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.000844

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000371s
[33mRanking function: [36m-1 - i2^0 + size1^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.000823

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000388s
[33mRanking function: [36m-1 - i2^0 + size1^0[0m
New Graphs: 
Proving termination of subgraph 4
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m

