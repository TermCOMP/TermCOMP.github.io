YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (undef1 > ~(1)) /\ (arg2 > 1) /\ (undef5 > ~(1)) /\ ((undef2 - 1) <= arg1) /\ ((undef3 - 1) <= arg1) /\ (arg1 > 0) /\ (undef2 > 1) /\ (undef3 > 1), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> (undef5 - 2)}>
<l3, l4, (arg2 > 1) /\ (arg4 < 1) /\ (arg3 > 0) /\ (undef6 > 0), par{arg1 -> undef6, arg2 -> (arg1 - 1), arg3 -> undef8, arg4 -> undef9}>
<l3, l3, (undef11 <= arg2) /\ (arg4 > 0) /\ ((undef12 - 2) <= arg3) /\ (arg2 > 0) /\ (arg3 > 0) /\ (undef11 > 0) /\ (undef12 > 2), par{arg2 -> undef11, arg3 -> undef12, arg4 -> (arg4 - 1)}>
<l4, l4, (arg1 > 0) /\ (arg2 > 0) /\ (undef14 > 2), par{arg1 -> undef14, arg2 -> (arg2 - 1), arg3 -> undef16, arg4 -> undef17}>
<l3, l4, (arg1 > 1) /\ (arg4 < 1) /\ ((undef18 - 3) <= arg2) /\ ((undef18 - 3) <= arg3) /\ (arg2 > 1) /\ (arg3 > 1) /\ (undef18 > 4), par{arg1 -> undef18, arg2 -> (arg1 - 2), arg3 -> undef20, arg4 -> undef21}>
<l3, l5, (arg1 < 2) /\ (arg4 < 1) /\ (undef22 <= arg2) /\ (undef22 <= arg3) /\ (undef23 <= arg2) /\ (undef23 <= arg3) /\ (arg2 > 1) /\ (arg3 > 1) /\ (undef22 > 1) /\ (undef23 > 1), par{arg1 -> undef22, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25}>
<l4, l5, ((undef26 - 1) <= arg1) /\ (arg2 < 1) /\ (arg1 > 0) /\ (undef26 > 1) /\ (undef27 > ~(1)), par{arg1 -> undef26, arg2 -> undef27, arg3 -> undef28, arg4 -> undef29}>
<l4, l5, ((undef30 + 1) <= arg1) /\ (arg2 < 1) /\ (arg1 > 2) /\ (undef30 > 1) /\ (undef31 > 0), par{arg1 -> undef30, arg2 -> undef31, arg3 -> undef32, arg4 -> undef33}>
<l4, l6, ((undef34 + 1) <= arg1) /\ (arg2 < 1) /\ (arg1 > 2) /\ (undef34 > 1) /\ (undef35 > 0), par{arg1 -> undef34, arg2 -> undef35, arg3 -> undef36, arg4 -> undef37}>
<l5, l7, ((undef38 + 1) <= arg2) /\ (undef39 <= arg2) /\ (undef40 <= arg1) /\ ((undef41 + 1) <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef38 > ~(1)) /\ (undef39 > 0) /\ (undef40 > 0) /\ (undef41 > ~(1)), par{arg1 -> undef38, arg2 -> undef39, arg3 -> undef40, arg4 -> undef41}>
<l7, l5, (undef43 <= arg1) /\ ((undef43 + 1) <= arg2) /\ (undef43 <= arg4) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > 0) /\ (arg4 > ~(1)) /\ (undef42 > 2) /\ (undef43 > ~(1)), par{arg1 -> undef42, arg2 -> undef43, arg3 -> undef44, arg4 -> undef45}>
<l7, l5, ((undef46 - 3) <= arg1) /\ ((undef46 - 2) <= arg2) /\ ((undef46 - 2) <= arg3) /\ ((undef46 - 3) <= arg4) /\ (undef47 <= arg1) /\ ((undef47 + 1) <= arg2) /\ ((undef47 + 1) <= arg3) /\ (undef47 <= arg4) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > 0) /\ (arg4 > ~(1)) /\ (undef46 > 2) /\ (undef47 > ~(1)), par{arg1 -> undef46, arg2 -> undef47, arg3 -> undef48, arg4 -> undef49}>
<l6, l6, (arg3 > 0) /\ (arg4 > 0) /\ (undef53 < arg4) /\ ((undef50 - 2) <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef50 > 2) /\ (undef51 > 0), par{arg1 -> undef50, arg2 -> undef51, arg4 -> undef53}>
<l6, l7, (undef58 > 0) /\ (undef59 > ~(1)) /\ (undef58 < undef59) /\ ((undef56 - 2) <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef54 > ~(1)) /\ (undef55 > 0) /\ (undef56 > 2) /\ (undef57 > ~(1)), par{arg1 -> undef54, arg2 -> undef55, arg3 -> undef56, arg4 -> undef57}>
<l6, l5, (undef64 > ~(1)) /\ (undef65 < undef64) /\ ((undef60 - 2) <= arg1) /\ (undef60 <= arg2) /\ (undef61 <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef60 > 2) /\ (undef61 > 0), par{arg1 -> undef60, arg2 -> undef61, arg3 -> undef62, arg4 -> undef63}>
<l1, l2, true, par{arg1 -> undef66, arg2 -> undef67, arg3 -> undef68, arg4 -> undef69}>

Fresh variables:
undef1, undef2, undef3, undef5, undef6, undef8, undef9, undef11, undef12, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, 

Undef variables:
undef1, undef2, undef3, undef5, undef6, undef8, undef9, undef11, undef12, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef1) /\ (arg2 = undef2) /\ (arg3 = undef3) /\ (arg4 = (undef5 - 2)) /\ (undef1 > ~(1)) /\ (undef67 > 1) /\ (undef5 > ~(1)) /\ ((undef2 - 1) <= undef66) /\ ((undef3 - 1) <= undef66) /\ (undef66 > 0) /\ (undef2 > 1) /\ (undef3 > 1)>
<l3, l4, (arg2 > 1) /\ (arg4 < 1) /\ (arg3 > 0) /\ (undef6 > 0), par{arg1 -> undef6, arg2 -> (arg1 - 1), arg3 -> undef8, arg4 -> undef9}>
<l3, l3, (undef11 <= arg2) /\ (arg4 > 0) /\ ((undef12 - 2) <= arg3) /\ (arg2 > 0) /\ (arg3 > 0) /\ (undef11 > 0) /\ (undef12 > 2), par{arg2 -> undef11, arg3 -> undef12, arg4 -> (arg4 - 1)}>
<l3, l4, (arg1 > 1) /\ (arg4 < 1) /\ ((undef18 - 3) <= arg2) /\ ((undef18 - 3) <= arg3) /\ (arg2 > 1) /\ (arg3 > 1) /\ (undef18 > 4), par{arg1 -> undef18, arg2 -> (arg1 - 2), arg3 -> undef20, arg4 -> undef21}>
<l3, l5, (arg1 < 2) /\ (arg4 < 1) /\ (undef22 <= arg2) /\ (undef22 <= arg3) /\ (undef23 <= arg2) /\ (undef23 <= arg3) /\ (arg2 > 1) /\ (arg3 > 1) /\ (undef22 > 1) /\ (undef23 > 1), par{arg1 -> undef22, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25}>
<l4, l4, (arg1 > 0) /\ (arg2 > 0) /\ (undef14 > 2), par{arg1 -> undef14, arg2 -> (arg2 - 1), arg3 -> undef16, arg4 -> undef17}>
<l4, l5, ((undef26 - 1) <= arg1) /\ (arg2 < 1) /\ (arg1 > 0) /\ (undef26 > 1) /\ (undef27 > ~(1)), par{arg1 -> undef26, arg2 -> undef27, arg3 -> undef28, arg4 -> undef29}>
<l4, l5, ((undef30 + 1) <= arg1) /\ (arg2 < 1) /\ (arg1 > 2) /\ (undef30 > 1) /\ (undef31 > 0), par{arg1 -> undef30, arg2 -> undef31, arg3 -> undef32, arg4 -> undef33}>
<l4, l6, ((undef34 + 1) <= arg1) /\ (arg2 < 1) /\ (arg1 > 2) /\ (undef34 > 1) /\ (undef35 > 0), par{arg1 -> undef34, arg2 -> undef35, arg3 -> undef36, arg4 -> undef37}>
<l5, l5, ((undef38 + 1) <= arg2) /\ (undef39 <= arg2) /\ (undef40 <= arg1) /\ ((undef41 + 1) <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef38 > ~(1)) /\ (undef39 > 0) /\ (undef40 > 0) /\ (undef41 > ~(1)) /\ (undef43 <= undef38) /\ ((undef43 + 1) <= undef39) /\ (undef43 <= undef41) /\ (undef38 > ~(1)) /\ (undef39 > 0) /\ (undef40 > 0) /\ (undef41 > ~(1)) /\ (undef42 > 2) /\ (undef43 > ~(1)), par{arg1 -> undef42, arg2 -> undef43, arg3 -> undef44, arg4 -> undef45}>
<l5, l5, ((undef38 + 1) <= arg2) /\ (undef39 <= arg2) /\ (undef40 <= arg1) /\ ((undef41 + 1) <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef38 > ~(1)) /\ (undef39 > 0) /\ (undef40 > 0) /\ (undef41 > ~(1)) /\ ((undef46 - 3) <= undef38) /\ ((undef46 - 2) <= undef39) /\ ((undef46 - 2) <= undef40) /\ ((undef46 - 3) <= undef41) /\ (undef47 <= undef38) /\ ((undef47 + 1) <= undef39) /\ ((undef47 + 1) <= undef40) /\ (undef47 <= undef41) /\ (undef38 > ~(1)) /\ (undef39 > 0) /\ (undef40 > 0) /\ (undef41 > ~(1)) /\ (undef46 > 2) /\ (undef47 > ~(1)), par{arg1 -> undef46, arg2 -> undef47, arg3 -> undef48, arg4 -> undef49}>
<l6, l6, (arg3 > 0) /\ (arg4 > 0) /\ (undef53 < arg4) /\ ((undef50 - 2) <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef50 > 2) /\ (undef51 > 0), par{arg1 -> undef50, arg2 -> undef51, arg4 -> undef53}>
<l6, l5, (undef58 > 0) /\ (undef59 > ~(1)) /\ (undef58 < undef59) /\ ((undef56 - 2) <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef54 > ~(1)) /\ (undef55 > 0) /\ (undef56 > 2) /\ (undef57 > ~(1)) /\ (undef43 <= undef54) /\ ((undef43 + 1) <= undef55) /\ (undef43 <= undef57) /\ (undef54 > ~(1)) /\ (undef55 > 0) /\ (undef56 > 0) /\ (undef57 > ~(1)) /\ (undef42 > 2) /\ (undef43 > ~(1)), par{arg1 -> undef42, arg2 -> undef43, arg3 -> undef44, arg4 -> undef45}>
<l6, l5, (undef58 > 0) /\ (undef59 > ~(1)) /\ (undef58 < undef59) /\ ((undef56 - 2) <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef54 > ~(1)) /\ (undef55 > 0) /\ (undef56 > 2) /\ (undef57 > ~(1)) /\ ((undef46 - 3) <= undef54) /\ ((undef46 - 2) <= undef55) /\ ((undef46 - 2) <= undef56) /\ ((undef46 - 3) <= undef57) /\ (undef47 <= undef54) /\ ((undef47 + 1) <= undef55) /\ ((undef47 + 1) <= undef56) /\ (undef47 <= undef57) /\ (undef54 > ~(1)) /\ (undef55 > 0) /\ (undef56 > 0) /\ (undef57 > ~(1)) /\ (undef46 > 2) /\ (undef47 > ~(1)), par{arg1 -> undef46, arg2 -> undef47, arg3 -> undef48, arg4 -> undef49}>
<l6, l5, (undef64 > ~(1)) /\ (undef65 < undef64) /\ ((undef60 - 2) <= arg1) /\ (undef60 <= arg2) /\ (undef61 <= arg1) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef60 > 2) /\ (undef61 > 0), par{arg1 -> undef60, arg2 -> undef61, arg3 -> undef62, arg4 -> undef63}>

Fresh variables:
undef1, undef2, undef3, undef5, undef6, undef8, undef9, undef11, undef12, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, 

Undef variables:
undef1, undef2, undef3, undef5, undef6, undef8, undef9, undef11, undef12, undef14, undef16, undef17, undef18, undef20, undef21, undef22, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef69, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg2 /\ 1 <= arg3 /\ 1 <= arg4 /\ 1 <= undef11 /\ undef11 <= arg2 /\ 3 <= undef12 /\ undef12 <= 2 + arg3, {arg2 -> undef11, arg3 -> undef12, arg4 -> -1 + arg4, rest remain the same}>
Variables:
arg2, arg3, arg4

Graph 2:
Transitions:
<l4, l4, 1 <= arg1 /\ 1 <= arg2 /\ 3 <= undef14, {arg1 -> undef14, arg2 -> -1 + arg2, arg3 -> undef16, arg4 -> undef17, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 3:
Transitions:
<l6, l6, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= arg4 /\ 1 + undef53 <= arg4 /\ 1 <= undef51 /\ 3 <= arg2 /\ 3 <= undef50 /\ undef50 <= 2 + arg1, {arg1 -> undef50, arg2 -> undef51, arg4 -> undef53, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 4:
Transitions:
<l5, l5, 1 <= arg1 /\ 1 <= arg2 /\ 1 + undef38 <= arg2 /\ 1 + undef41 <= arg2 /\ 1 <= undef39 /\ 1 + undef43 <= undef39 /\ 1 <= undef40 /\ undef40 <= arg1 /\ undef39 <= arg2 /\ 0 <= undef38 /\ undef43 <= undef38 /\ 0 <= undef41 /\ undef43 <= undef41 /\ 0 <= undef43 /\ 3 <= undef42, {arg1 -> undef42, arg2 -> undef43, arg3 -> undef44, arg4 -> undef45, rest remain the same}>
<l5, l5, 1 <= arg1 /\ 1 <= arg2 /\ 1 + undef38 <= arg2 /\ 1 + undef41 <= arg2 /\ 1 <= undef39 /\ 1 + undef47 <= undef39 /\ 1 <= undef40 /\ 1 + undef47 <= undef40 /\ undef40 <= arg1 /\ undef39 <= arg2 /\ 0 <= undef38 /\ undef47 <= undef38 /\ 0 <= undef41 /\ undef47 <= undef41 /\ 0 <= undef47 /\ 3 <= undef46 /\ undef46 <= 2 + undef39 /\ undef46 <= 2 + undef40 /\ undef46 <= 3 + undef38 /\ undef46 <= 3 + undef41, {arg1 -> undef46, arg2 -> undef47, arg3 -> undef48, arg4 -> undef49, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef66 /\ undef2 <= 1 + undef66 /\ undef3 <= 1 + undef66 /\ 0 <= undef1 /\ 0 <= undef5 /\ 2 <= undef2 /\ 2 <= undef3 /\ 2 <= undef67 /\ arg1 = undef1 /\ arg2 = undef2 /\ arg3 = undef3 /\ 2 + arg4 = undef5, {all remain the same}>

Graph 2
<l3, l4, 1 <= arg3 /\ 1 <= undef6 /\ arg4 <= 0 /\ 2 <= arg2, {arg1 -> undef6, arg2 -> -1 + arg1, arg3 -> undef8, arg4 -> undef9, rest remain the same}>
<l3, l4, arg4 <= 0 /\ 2 <= arg1 /\ 2 <= arg2 /\ 2 <= arg3 /\ undef18 <= 3 + arg2 /\ undef18 <= 3 + arg3 /\ 5 <= undef18, {arg1 -> undef18, arg2 -> -2 + arg1, arg3 -> undef20, arg4 -> undef21, rest remain the same}>

Graph 3
<l4, l6, 1 + undef34 <= arg1 /\ 1 <= undef35 /\ arg2 <= 0 /\ 2 <= undef34 /\ 3 <= arg1, {arg1 -> undef34, arg2 -> undef35, arg3 -> undef36, arg4 -> undef37, rest remain the same}>

Graph 4
<l3, l5, arg1 <= 1 /\ undef22 <= arg2 /\ undef23 <= arg2 /\ undef22 <= arg3 /\ undef23 <= arg3 /\ arg4 <= 0 /\ 2 <= arg2 /\ 2 <= arg3 /\ 2 <= undef22 /\ 2 <= undef23, {arg1 -> undef22, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25, rest remain the same}>
<l4, l5, 1 <= arg1 /\ undef26 <= 1 + arg1 /\ arg2 <= 0 /\ 0 <= undef27 /\ 2 <= undef26, {arg1 -> undef26, arg2 -> undef27, arg3 -> undef28, arg4 -> undef29, rest remain the same}>
<l4, l5, 1 + undef30 <= arg1 /\ 1 <= undef31 /\ arg2 <= 0 /\ 2 <= undef30 /\ 3 <= arg1, {arg1 -> undef30, arg2 -> undef31, arg3 -> undef32, arg4 -> undef33, rest remain the same}>
<l6, l5, 1 <= arg1 /\ 1 + undef43 <= undef55 /\ 1 <= undef55 /\ 1 + undef58 <= undef59 /\ 1 <= undef58 /\ undef43 <= undef54 /\ undef43 <= undef57 /\ 0 <= undef43 /\ 0 <= undef54 /\ 0 <= undef57 /\ 0 <= undef59 /\ 3 <= arg2 /\ 3 <= undef42 /\ 3 <= undef56 /\ undef56 <= 2 + arg1, {arg1 -> undef42, arg2 -> undef43, arg3 -> undef44, arg4 -> undef45, rest remain the same}>
<l6, l5, 1 <= arg1 /\ 1 + undef47 <= undef55 /\ 1 + undef47 <= undef56 /\ 1 <= undef55 /\ 1 + undef58 <= undef59 /\ 1 <= undef58 /\ undef47 <= undef54 /\ undef47 <= undef57 /\ 0 <= undef47 /\ 0 <= undef54 /\ 0 <= undef57 /\ 0 <= undef59 /\ 3 <= arg2 /\ 3 <= undef46 /\ 3 <= undef56 /\ undef56 <= 2 + arg1 /\ undef46 <= 2 + undef55 /\ undef46 <= 2 + undef56 /\ undef46 <= 3 + undef54 /\ undef46 <= 3 + undef57, {arg1 -> undef46, arg2 -> undef47, arg3 -> undef48, arg4 -> undef49, rest remain the same}>
<l6, l5, 1 <= arg1 /\ 1 <= undef61 /\ 1 + undef65 <= undef64 /\ undef61 <= arg1 /\ undef60 <= arg2 /\ 0 <= undef64 /\ 3 <= arg2 /\ 3 <= undef60 /\ undef60 <= 2 + arg1, {arg1 -> undef60, arg2 -> undef61, arg3 -> undef62, arg4 -> undef63, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 4 , 2 )
( 5 , 4 )
( 6 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002246

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000687s
[33mRanking function: [36m-1 + arg4[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001687

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000558s
[33mRanking function: [36m-1 + arg2[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.001881

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000830s
[33mRanking function: [36m-1 + arg4[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.007266

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002626s
[33mRanking function: [36m-1 + arg2[0m
New Graphs: 
[32mProgram Terminates[0m

