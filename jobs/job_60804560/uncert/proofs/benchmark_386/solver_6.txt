NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (undef7 > ~(1)) /\ (arg2 > 3) /\ (undef8 > ~(1)) /\ (undef9 > ~(1)) /\ ((undef9 - (2 * undef10)) = 1) /\ ((undef11 - (2 * undef12)) = 0) /\ (undef11 > ~(1)) /\ (arg1 > 0), par{arg3 -> undef3, arg4 -> undef4, arg5 -> undef5, arg6 -> undef6}>
<l3, l4, (undef15 > ~(1)) /\ (arg2 > 3) /\ (undef19 > ~(1)) /\ (undef20 > ~(1)) /\ ((undef20 - (2 * undef21)) = 1) /\ ((undef22 - (2 * undef23)) = 0) /\ (undef22 > ~(1)) /\ (arg1 > 0) /\ ((undef20 - (2 * undef21)) >= 0) /\ ((undef20 - (2 * undef21)) < 2) /\ ((undef22 - (2 * undef23)) < 2) /\ ((undef22 - (2 * undef23)) >= 0), par{arg1 -> (0 - undef19), arg2 -> (0 - undef19), arg3 -> undef15, arg4 -> (0 - undef19), arg5 -> undef17, arg6 -> undef18}>
<l2, l3, (undef30 > ~(1)) /\ (arg2 > 3) /\ (undef31 > ~(1)) /\ (undef32 > ~(1)) /\ ((undef32 - (2 * undef33)) = 1) /\ ((undef34 - (2 * undef35)) = 1) /\ (undef34 > ~(1)) /\ (arg1 > 0), par{arg3 -> undef26, arg4 -> undef27, arg5 -> undef28, arg6 -> undef29}>
<l3, l5, (undef36 > ~(1)) /\ (arg2 > 3) /\ (undef37 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef42 - (2 * undef43)) = 1) /\ ((undef44 - (2 * undef45)) = 1) /\ (undef44 > ~(1)) /\ (arg1 > 0) /\ ((undef42 - (2 * undef43)) >= 0) /\ ((undef42 - (2 * undef43)) < 2) /\ ((undef44 - (2 * undef45)) < 2) /\ ((undef44 - (2 * undef45)) >= 0), par{arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37}>
<l4, l4, (arg2 < 1) /\ (arg1 < 1) /\ (arg3 > arg2) /\ (arg2 = arg4), par{arg2 -> (arg2 + arg1), arg4 -> (arg2 + arg1), arg5 -> undef50, arg6 -> undef51}>
<l2, l3, (undef58 > ~(1)) /\ (arg2 > 3) /\ (undef59 > ~(1)) /\ (undef60 > ~(1)) /\ ((undef60 - (2 * undef61)) = 0) /\ ((undef62 - (2 * undef63)) = 1) /\ (undef62 > ~(1)) /\ (arg1 > 0), par{arg3 -> undef54, arg4 -> undef55, arg5 -> undef56, arg6 -> undef57}>
<l3, l6, (undef70 > ~(1)) /\ (arg2 > 3) /\ (undef65 > ~(1)) /\ (undef71 > ~(1)) /\ ((undef71 - (2 * undef72)) = 0) /\ ((undef73 - (2 * undef74)) = 1) /\ (undef73 > ~(1)) /\ (arg1 > 0) /\ ((undef71 - (2 * undef72)) >= 0) /\ ((undef71 - (2 * undef72)) < 2) /\ ((undef73 - (2 * undef74)) < 2) /\ ((undef73 - (2 * undef74)) >= 0), par{arg1 -> (0 - undef70), arg2 -> undef65, arg3 -> (0 - undef70), arg4 -> undef65, arg5 -> (0 - undef70), arg6 -> undef65}>
<l2, l3, (undef81 > ~(1)) /\ (arg2 > 3) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ ((undef83 - (2 * undef84)) = 0) /\ ((undef85 - (2 * undef86)) = 0) /\ (undef85 > ~(1)) /\ (arg1 > 0), par{arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80}>
<l3, l6, (undef93 > ~(1)) /\ (arg2 > 3) /\ (undef94 > ~(1)) /\ (undef95 > ~(1)) /\ ((undef95 - (2 * undef96)) = 0) /\ ((undef97 - (2 * undef98)) = 0) /\ (undef97 > ~(1)) /\ (arg1 > 0) /\ ((undef95 - (2 * undef96)) >= 0) /\ ((undef95 - (2 * undef96)) < 2) /\ ((undef97 - (2 * undef98)) < 2) /\ ((undef97 - (2 * undef98)) >= 0), par{arg1 -> (0 - undef93), arg2 -> (0 - undef94), arg3 -> (0 - undef93), arg4 -> (0 - undef94), arg5 -> (0 - undef93), arg6 -> (0 - undef94)}>
<l5, l5, (arg3 > ~(1)) /\ (arg1 > ~(1)) /\ (arg4 > arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg3 -> (arg3 + arg1), arg5 -> (arg3 + arg1), arg6 -> arg4}>
<l5, l5, (arg4 > ~(1)) /\ (arg2 > ~(1)) /\ (arg4 < arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg4 -> (arg4 + arg2), arg5 -> arg3, arg6 -> (arg4 + arg2)}>
<l6, l6, (arg3 < 1) /\ (arg1 < 1) /\ (arg4 > arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg3 -> (arg3 + arg1), arg5 -> (arg3 + arg1), arg6 -> arg4}>
<l6, l6, (arg4 < arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg4 -> (arg4 + arg2), arg5 -> arg3, arg6 -> (arg4 + arg2)}>
<l1, l2, true, par{arg1 -> undef123, arg2 -> undef124, arg3 -> undef125, arg4 -> undef126, arg5 -> undef127, arg6 -> undef128}>

Fresh variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef42, undef43, undef44, undef45, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef65, undef70, undef71, undef72, undef73, undef74, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef93, undef94, undef95, undef96, undef97, undef98, undef123, undef124, undef125, undef126, undef127, undef128, 

Undef variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef42, undef43, undef44, undef45, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef65, undef70, undef71, undef72, undef73, undef74, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef93, undef94, undef95, undef96, undef97, undef98, undef123, undef124, undef125, undef126, undef127, undef128, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (undef7 > ~(1)) /\ (undef124 > 3) /\ (undef8 > ~(1)) /\ (undef9 > ~(1)) /\ ((undef9 - (2 * undef10)) = 1) /\ ((undef11 - (2 * undef12)) = 0) /\ (undef11 > ~(1)) /\ (undef123 > 0) /\ (undef15 > ~(1)) /\ (undef124 > 3) /\ (undef19 > ~(1)) /\ (undef20 > ~(1)) /\ ((undef20 - (2 * undef21)) = 1) /\ ((undef22 - (2 * undef23)) = 0) /\ (undef22 > ~(1)) /\ (undef123 > 0) /\ ((undef20 - (2 * undef21)) >= 0) /\ ((undef20 - (2 * undef21)) < 2) /\ ((undef22 - (2 * undef23)) < 2) /\ ((undef22 - (2 * undef23)) >= 0), par{arg1 -> (0 - undef19), arg2 -> (0 - undef19), arg3 -> undef15, arg4 -> (0 - undef19), arg5 -> undef17, arg6 -> undef18}>
<l0, l5, (undef7 > ~(1)) /\ (undef124 > 3) /\ (undef8 > ~(1)) /\ (undef9 > ~(1)) /\ ((undef9 - (2 * undef10)) = 1) /\ ((undef11 - (2 * undef12)) = 0) /\ (undef11 > ~(1)) /\ (undef123 > 0) /\ (undef36 > ~(1)) /\ (undef124 > 3) /\ (undef37 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef42 - (2 * undef43)) = 1) /\ ((undef44 - (2 * undef45)) = 1) /\ (undef44 > ~(1)) /\ (undef123 > 0) /\ ((undef42 - (2 * undef43)) >= 0) /\ ((undef42 - (2 * undef43)) < 2) /\ ((undef44 - (2 * undef45)) < 2) /\ ((undef44 - (2 * undef45)) >= 0), par{arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37}>
<l0, l6, (undef7 > ~(1)) /\ (undef124 > 3) /\ (undef8 > ~(1)) /\ (undef9 > ~(1)) /\ ((undef9 - (2 * undef10)) = 1) /\ ((undef11 - (2 * undef12)) = 0) /\ (undef11 > ~(1)) /\ (undef123 > 0) /\ (undef70 > ~(1)) /\ (undef124 > 3) /\ (undef65 > ~(1)) /\ (undef71 > ~(1)) /\ ((undef71 - (2 * undef72)) = 0) /\ ((undef73 - (2 * undef74)) = 1) /\ (undef73 > ~(1)) /\ (undef123 > 0) /\ ((undef71 - (2 * undef72)) >= 0) /\ ((undef71 - (2 * undef72)) < 2) /\ ((undef73 - (2 * undef74)) < 2) /\ ((undef73 - (2 * undef74)) >= 0), par{arg1 -> (0 - undef70), arg2 -> undef65, arg3 -> (0 - undef70), arg4 -> undef65, arg5 -> (0 - undef70), arg6 -> undef65}>
<l0, l6, (undef7 > ~(1)) /\ (undef124 > 3) /\ (undef8 > ~(1)) /\ (undef9 > ~(1)) /\ ((undef9 - (2 * undef10)) = 1) /\ ((undef11 - (2 * undef12)) = 0) /\ (undef11 > ~(1)) /\ (undef123 > 0) /\ (undef93 > ~(1)) /\ (undef124 > 3) /\ (undef94 > ~(1)) /\ (undef95 > ~(1)) /\ ((undef95 - (2 * undef96)) = 0) /\ ((undef97 - (2 * undef98)) = 0) /\ (undef97 > ~(1)) /\ (undef123 > 0) /\ ((undef95 - (2 * undef96)) >= 0) /\ ((undef95 - (2 * undef96)) < 2) /\ ((undef97 - (2 * undef98)) < 2) /\ ((undef97 - (2 * undef98)) >= 0), par{arg1 -> (0 - undef93), arg2 -> (0 - undef94), arg3 -> (0 - undef93), arg4 -> (0 - undef94), arg5 -> (0 - undef93), arg6 -> (0 - undef94)}>
<l0, l4, (undef30 > ~(1)) /\ (undef124 > 3) /\ (undef31 > ~(1)) /\ (undef32 > ~(1)) /\ ((undef32 - (2 * undef33)) = 1) /\ ((undef34 - (2 * undef35)) = 1) /\ (undef34 > ~(1)) /\ (undef123 > 0) /\ (undef15 > ~(1)) /\ (undef124 > 3) /\ (undef19 > ~(1)) /\ (undef20 > ~(1)) /\ ((undef20 - (2 * undef21)) = 1) /\ ((undef22 - (2 * undef23)) = 0) /\ (undef22 > ~(1)) /\ (undef123 > 0) /\ ((undef20 - (2 * undef21)) >= 0) /\ ((undef20 - (2 * undef21)) < 2) /\ ((undef22 - (2 * undef23)) < 2) /\ ((undef22 - (2 * undef23)) >= 0), par{arg1 -> (0 - undef19), arg2 -> (0 - undef19), arg3 -> undef15, arg4 -> (0 - undef19), arg5 -> undef17, arg6 -> undef18}>
<l0, l5, (undef30 > ~(1)) /\ (undef124 > 3) /\ (undef31 > ~(1)) /\ (undef32 > ~(1)) /\ ((undef32 - (2 * undef33)) = 1) /\ ((undef34 - (2 * undef35)) = 1) /\ (undef34 > ~(1)) /\ (undef123 > 0) /\ (undef36 > ~(1)) /\ (undef124 > 3) /\ (undef37 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef42 - (2 * undef43)) = 1) /\ ((undef44 - (2 * undef45)) = 1) /\ (undef44 > ~(1)) /\ (undef123 > 0) /\ ((undef42 - (2 * undef43)) >= 0) /\ ((undef42 - (2 * undef43)) < 2) /\ ((undef44 - (2 * undef45)) < 2) /\ ((undef44 - (2 * undef45)) >= 0), par{arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37}>
<l0, l6, (undef30 > ~(1)) /\ (undef124 > 3) /\ (undef31 > ~(1)) /\ (undef32 > ~(1)) /\ ((undef32 - (2 * undef33)) = 1) /\ ((undef34 - (2 * undef35)) = 1) /\ (undef34 > ~(1)) /\ (undef123 > 0) /\ (undef70 > ~(1)) /\ (undef124 > 3) /\ (undef65 > ~(1)) /\ (undef71 > ~(1)) /\ ((undef71 - (2 * undef72)) = 0) /\ ((undef73 - (2 * undef74)) = 1) /\ (undef73 > ~(1)) /\ (undef123 > 0) /\ ((undef71 - (2 * undef72)) >= 0) /\ ((undef71 - (2 * undef72)) < 2) /\ ((undef73 - (2 * undef74)) < 2) /\ ((undef73 - (2 * undef74)) >= 0), par{arg1 -> (0 - undef70), arg2 -> undef65, arg3 -> (0 - undef70), arg4 -> undef65, arg5 -> (0 - undef70), arg6 -> undef65}>
<l0, l6, (undef30 > ~(1)) /\ (undef124 > 3) /\ (undef31 > ~(1)) /\ (undef32 > ~(1)) /\ ((undef32 - (2 * undef33)) = 1) /\ ((undef34 - (2 * undef35)) = 1) /\ (undef34 > ~(1)) /\ (undef123 > 0) /\ (undef93 > ~(1)) /\ (undef124 > 3) /\ (undef94 > ~(1)) /\ (undef95 > ~(1)) /\ ((undef95 - (2 * undef96)) = 0) /\ ((undef97 - (2 * undef98)) = 0) /\ (undef97 > ~(1)) /\ (undef123 > 0) /\ ((undef95 - (2 * undef96)) >= 0) /\ ((undef95 - (2 * undef96)) < 2) /\ ((undef97 - (2 * undef98)) < 2) /\ ((undef97 - (2 * undef98)) >= 0), par{arg1 -> (0 - undef93), arg2 -> (0 - undef94), arg3 -> (0 - undef93), arg4 -> (0 - undef94), arg5 -> (0 - undef93), arg6 -> (0 - undef94)}>
<l0, l4, (undef58 > ~(1)) /\ (undef124 > 3) /\ (undef59 > ~(1)) /\ (undef60 > ~(1)) /\ ((undef60 - (2 * undef61)) = 0) /\ ((undef62 - (2 * undef63)) = 1) /\ (undef62 > ~(1)) /\ (undef123 > 0) /\ (undef15 > ~(1)) /\ (undef124 > 3) /\ (undef19 > ~(1)) /\ (undef20 > ~(1)) /\ ((undef20 - (2 * undef21)) = 1) /\ ((undef22 - (2 * undef23)) = 0) /\ (undef22 > ~(1)) /\ (undef123 > 0) /\ ((undef20 - (2 * undef21)) >= 0) /\ ((undef20 - (2 * undef21)) < 2) /\ ((undef22 - (2 * undef23)) < 2) /\ ((undef22 - (2 * undef23)) >= 0), par{arg1 -> (0 - undef19), arg2 -> (0 - undef19), arg3 -> undef15, arg4 -> (0 - undef19), arg5 -> undef17, arg6 -> undef18}>
<l0, l5, (undef58 > ~(1)) /\ (undef124 > 3) /\ (undef59 > ~(1)) /\ (undef60 > ~(1)) /\ ((undef60 - (2 * undef61)) = 0) /\ ((undef62 - (2 * undef63)) = 1) /\ (undef62 > ~(1)) /\ (undef123 > 0) /\ (undef36 > ~(1)) /\ (undef124 > 3) /\ (undef37 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef42 - (2 * undef43)) = 1) /\ ((undef44 - (2 * undef45)) = 1) /\ (undef44 > ~(1)) /\ (undef123 > 0) /\ ((undef42 - (2 * undef43)) >= 0) /\ ((undef42 - (2 * undef43)) < 2) /\ ((undef44 - (2 * undef45)) < 2) /\ ((undef44 - (2 * undef45)) >= 0), par{arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37}>
<l0, l6, (undef58 > ~(1)) /\ (undef124 > 3) /\ (undef59 > ~(1)) /\ (undef60 > ~(1)) /\ ((undef60 - (2 * undef61)) = 0) /\ ((undef62 - (2 * undef63)) = 1) /\ (undef62 > ~(1)) /\ (undef123 > 0) /\ (undef70 > ~(1)) /\ (undef124 > 3) /\ (undef65 > ~(1)) /\ (undef71 > ~(1)) /\ ((undef71 - (2 * undef72)) = 0) /\ ((undef73 - (2 * undef74)) = 1) /\ (undef73 > ~(1)) /\ (undef123 > 0) /\ ((undef71 - (2 * undef72)) >= 0) /\ ((undef71 - (2 * undef72)) < 2) /\ ((undef73 - (2 * undef74)) < 2) /\ ((undef73 - (2 * undef74)) >= 0), par{arg1 -> (0 - undef70), arg2 -> undef65, arg3 -> (0 - undef70), arg4 -> undef65, arg5 -> (0 - undef70), arg6 -> undef65}>
<l0, l6, (undef58 > ~(1)) /\ (undef124 > 3) /\ (undef59 > ~(1)) /\ (undef60 > ~(1)) /\ ((undef60 - (2 * undef61)) = 0) /\ ((undef62 - (2 * undef63)) = 1) /\ (undef62 > ~(1)) /\ (undef123 > 0) /\ (undef93 > ~(1)) /\ (undef124 > 3) /\ (undef94 > ~(1)) /\ (undef95 > ~(1)) /\ ((undef95 - (2 * undef96)) = 0) /\ ((undef97 - (2 * undef98)) = 0) /\ (undef97 > ~(1)) /\ (undef123 > 0) /\ ((undef95 - (2 * undef96)) >= 0) /\ ((undef95 - (2 * undef96)) < 2) /\ ((undef97 - (2 * undef98)) < 2) /\ ((undef97 - (2 * undef98)) >= 0), par{arg1 -> (0 - undef93), arg2 -> (0 - undef94), arg3 -> (0 - undef93), arg4 -> (0 - undef94), arg5 -> (0 - undef93), arg6 -> (0 - undef94)}>
<l0, l4, (undef81 > ~(1)) /\ (undef124 > 3) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ ((undef83 - (2 * undef84)) = 0) /\ ((undef85 - (2 * undef86)) = 0) /\ (undef85 > ~(1)) /\ (undef123 > 0) /\ (undef15 > ~(1)) /\ (undef124 > 3) /\ (undef19 > ~(1)) /\ (undef20 > ~(1)) /\ ((undef20 - (2 * undef21)) = 1) /\ ((undef22 - (2 * undef23)) = 0) /\ (undef22 > ~(1)) /\ (undef123 > 0) /\ ((undef20 - (2 * undef21)) >= 0) /\ ((undef20 - (2 * undef21)) < 2) /\ ((undef22 - (2 * undef23)) < 2) /\ ((undef22 - (2 * undef23)) >= 0), par{arg1 -> (0 - undef19), arg2 -> (0 - undef19), arg3 -> undef15, arg4 -> (0 - undef19), arg5 -> undef17, arg6 -> undef18}>
<l0, l5, (undef81 > ~(1)) /\ (undef124 > 3) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ ((undef83 - (2 * undef84)) = 0) /\ ((undef85 - (2 * undef86)) = 0) /\ (undef85 > ~(1)) /\ (undef123 > 0) /\ (undef36 > ~(1)) /\ (undef124 > 3) /\ (undef37 > ~(1)) /\ (undef42 > ~(1)) /\ ((undef42 - (2 * undef43)) = 1) /\ ((undef44 - (2 * undef45)) = 1) /\ (undef44 > ~(1)) /\ (undef123 > 0) /\ ((undef42 - (2 * undef43)) >= 0) /\ ((undef42 - (2 * undef43)) < 2) /\ ((undef44 - (2 * undef45)) < 2) /\ ((undef44 - (2 * undef45)) >= 0), par{arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37}>
<l0, l6, (undef81 > ~(1)) /\ (undef124 > 3) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ ((undef83 - (2 * undef84)) = 0) /\ ((undef85 - (2 * undef86)) = 0) /\ (undef85 > ~(1)) /\ (undef123 > 0) /\ (undef70 > ~(1)) /\ (undef124 > 3) /\ (undef65 > ~(1)) /\ (undef71 > ~(1)) /\ ((undef71 - (2 * undef72)) = 0) /\ ((undef73 - (2 * undef74)) = 1) /\ (undef73 > ~(1)) /\ (undef123 > 0) /\ ((undef71 - (2 * undef72)) >= 0) /\ ((undef71 - (2 * undef72)) < 2) /\ ((undef73 - (2 * undef74)) < 2) /\ ((undef73 - (2 * undef74)) >= 0), par{arg1 -> (0 - undef70), arg2 -> undef65, arg3 -> (0 - undef70), arg4 -> undef65, arg5 -> (0 - undef70), arg6 -> undef65}>
<l0, l6, (undef81 > ~(1)) /\ (undef124 > 3) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ ((undef83 - (2 * undef84)) = 0) /\ ((undef85 - (2 * undef86)) = 0) /\ (undef85 > ~(1)) /\ (undef123 > 0) /\ (undef93 > ~(1)) /\ (undef124 > 3) /\ (undef94 > ~(1)) /\ (undef95 > ~(1)) /\ ((undef95 - (2 * undef96)) = 0) /\ ((undef97 - (2 * undef98)) = 0) /\ (undef97 > ~(1)) /\ (undef123 > 0) /\ ((undef95 - (2 * undef96)) >= 0) /\ ((undef95 - (2 * undef96)) < 2) /\ ((undef97 - (2 * undef98)) < 2) /\ ((undef97 - (2 * undef98)) >= 0), par{arg1 -> (0 - undef93), arg2 -> (0 - undef94), arg3 -> (0 - undef93), arg4 -> (0 - undef94), arg5 -> (0 - undef93), arg6 -> (0 - undef94)}>
<l4, l4, (arg2 < 1) /\ (arg1 < 1) /\ (arg3 > arg2) /\ (arg2 = arg4), par{arg2 -> (arg2 + arg1), arg4 -> (arg2 + arg1), arg5 -> undef50, arg6 -> undef51}>
<l5, l5, (arg3 > ~(1)) /\ (arg1 > ~(1)) /\ (arg4 > arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg3 -> (arg3 + arg1), arg5 -> (arg3 + arg1), arg6 -> arg4}>
<l5, l5, (arg4 > ~(1)) /\ (arg2 > ~(1)) /\ (arg4 < arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg4 -> (arg4 + arg2), arg5 -> arg3, arg6 -> (arg4 + arg2)}>
<l6, l6, (arg3 < 1) /\ (arg1 < 1) /\ (arg4 > arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg3 -> (arg3 + arg1), arg5 -> (arg3 + arg1), arg6 -> arg4}>
<l6, l6, (arg4 < arg3) /\ (arg3 = arg5) /\ (arg4 = arg6), par{arg4 -> (arg4 + arg2), arg5 -> arg3, arg6 -> (arg4 + arg2)}>

Fresh variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef42, undef43, undef44, undef45, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef65, undef70, undef71, undef72, undef73, undef74, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef93, undef94, undef95, undef96, undef97, undef98, undef123, undef124, undef125, undef126, undef127, undef128, 

Undef variables:
undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef17, undef18, undef19, undef20, undef21, undef22, undef23, undef26, undef27, undef28, undef29, undef30, undef31, undef32, undef33, undef34, undef35, undef36, undef37, undef42, undef43, undef44, undef45, undef50, undef51, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef65, undef70, undef71, undef72, undef73, undef74, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef93, undef94, undef95, undef96, undef97, undef98, undef123, undef124, undef125, undef126, undef127, undef128, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
<l6, l6, 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6, arg2

Graph 2:
Transitions:
<l5, l5, 1 + arg3 <= arg4 /\ 0 <= arg1 /\ 0 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
<l5, l5, 1 + arg4 <= arg3 /\ 0 <= arg2 /\ 0 <= arg4 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6, arg2

Graph 3:
Transitions:
<l4, l4, 1 + arg2 <= arg3 /\ arg1 <= 0 /\ arg2 <= 0 /\ arg2 = arg4, {arg2 -> arg1 + arg2, arg4 -> arg1 + arg2, arg5 -> undef50, arg6 -> undef51, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6

Precedence: 
Graph 0

Graph 1
<l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

Graph 2
<l0, l5, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef36 /\ 0 <= undef37 /\ 0 <= undef42 /\ 0 <= undef44 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef42 = 1 + 2*undef43 /\ undef44 = 1 + 2*undef45 /\ undef11 = 2*undef12, {arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37, rest remain the same}>
<l0, l5, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef36 /\ 0 <= undef37 /\ 0 <= undef42 /\ 0 <= undef44 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef42 = 1 + 2*undef43 /\ undef44 = 1 + 2*undef45, {arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37, rest remain the same}>
<l0, l5, 1 <= undef123 /\ 0 <= undef36 /\ 0 <= undef37 /\ 0 <= undef42 /\ 0 <= undef44 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 4 <= undef124 /\ undef42 = 1 + 2*undef43 /\ undef44 = 1 + 2*undef45 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61, {arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37, rest remain the same}>
<l0, l5, 1 <= undef123 /\ 0 <= undef36 /\ 0 <= undef37 /\ 0 <= undef42 /\ 0 <= undef44 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef42 = 1 + 2*undef43 /\ undef44 = 1 + 2*undef45 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> undef36, arg2 -> undef37, arg3 -> undef36, arg4 -> undef37, arg5 -> undef36, arg6 -> undef37, rest remain the same}>

Graph 3
<l0, l4, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef15 /\ 0 <= undef19 /\ 0 <= undef20 /\ 0 <= undef22 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef20 = 1 + 2*undef21 /\ undef11 = 2*undef12 /\ undef22 = 2*undef23, {arg1 -> -undef19, arg2 -> -undef19, arg3 -> undef15, arg4 -> -undef19, arg5 -> undef17, arg6 -> undef18, rest remain the same}>
<l0, l4, 1 <= undef123 /\ 0 <= undef15 /\ 0 <= undef19 /\ 0 <= undef20 /\ 0 <= undef22 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 4 <= undef124 /\ undef20 = 1 + 2*undef21 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef22 = 2*undef23, {arg1 -> -undef19, arg2 -> -undef19, arg3 -> undef15, arg4 -> -undef19, arg5 -> undef17, arg6 -> undef18, rest remain the same}>
<l0, l4, 1 <= undef123 /\ 0 <= undef15 /\ 0 <= undef19 /\ 0 <= undef20 /\ 0 <= undef22 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 4 <= undef124 /\ undef20 = 1 + 2*undef21 /\ undef62 = 1 + 2*undef63 /\ undef22 = 2*undef23 /\ undef60 = 2*undef61, {arg1 -> -undef19, arg2 -> -undef19, arg3 -> undef15, arg4 -> -undef19, arg5 -> undef17, arg6 -> undef18, rest remain the same}>
<l0, l4, 1 <= undef123 /\ 0 <= undef15 /\ 0 <= undef19 /\ 0 <= undef20 /\ 0 <= undef22 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef20 = 1 + 2*undef21 /\ undef22 = 2*undef23 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef19, arg2 -> -undef19, arg3 -> undef15, arg4 -> -undef19, arg5 -> undef17, arg6 -> undef18, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 3 )
( 5 , 2 )
( 6 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.008805

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001267s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003617s
Trying to remove transition: <l6, l6, 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007908s
Time used: 0.007589
Trying to remove transition: <l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007401s
Time used: 0.006761
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.039610s
Time used: 0.037802
Improving Solution with cost 4 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.052601s
Time used: 0.052369

LOG: SAT solveNonLinear - Elapsed time: 0.092211s
Cost: 4; Total time: 0.090171
[31mFailed at location 6: arg3 <= arg4[0m
[31mFailed at location 6: arg3 <= arg4[0m
[31mFailed at location 6: arg3 <= arg4[0m
[31mFailed at location 6: arg3 <= arg4[0m
Before Improving: 
[36mQuasi-invariant at l6: arg3 <= arg4[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006900s
Remaining time after improvement: 0.997437
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg3 <= arg4[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
New Graphs: 
Transitions:
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000424s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001470s
Trying to remove transition: <l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004527s
Time used: 0.00441
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.019760s
Time used: 0.019239
Improving Solution with cost 8 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.022104s
Time used: 0.022015

LOG: SAT solveNonLinear - Elapsed time: 0.041865s
Cost: 8; Total time: 0.041254
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
[31mFailed at location 6: arg6 <= arg1 + arg5[0m
Before Improving: 
[36mQuasi-invariant at l6: arg6 <= arg1 + arg5[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002551s
Remaining time after improvement: 0.99883
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg6 <= arg1 + arg5[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
New Graphs: 
Calling Safety with literal arg3 <= arg4 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg4 - Process 1
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg4

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000582s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000678s
Calling Safety with literal arg3 <= arg4 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg4 - Process 2
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg4

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000549s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000633s
Calling Safety with literal arg3 <= arg4 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg4 - Process 3
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg4

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000486s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000568s
Calling Safety with literal arg3 <= arg4 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg4 - Process 4
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg4

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000456s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000537s
INVARIANTS: 
6: 
Quasi-INVARIANTS to narrow Graph: 
6: arg3 <= arg4 , 
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 5
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000478s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000563s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 6
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000472s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000555s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 7
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000471s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000583s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 8
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000472s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000556s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 9
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000475s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000558s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 10
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000461s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000543s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 11
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000479s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000561s
Calling Safety with literal arg6 <= arg1 + arg5 and entry <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg6 <= arg1 + arg5 - Process 12
* Exit transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg6 <= arg1 + arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000467s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000549s
INVARIANTS: 
6: 
Quasi-INVARIANTS to narrow Graph: 
6: arg6 <= arg1 + arg5 , 
Narrowing transition: 
<l6, l6, 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
<l6, l6, 1 + arg4 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6, arg2
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001053s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005784s
Trying to remove transition: <l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013935s
Time used: 0.013366
Trying to remove transition: <l6, l6, 1 + arg4 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010550s
Time used: 0.009451
Trying to remove transition: <l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008786s
Time used: 0.007691
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.162815s
Time used: 0.15903
Improving Solution with cost 4 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.189597s
Time used: 0.188775

LOG: SAT solveNonLinear - Elapsed time: 0.352412s
Cost: 4; Total time: 0.347805
[31mFailed at location 6: arg3 <= arg6[0m
[31mFailed at location 6: arg3 <= arg6[0m
[31mFailed at location 6: arg3 <= arg6[0m
[31mFailed at location 6: arg3 <= arg6[0m
Before Improving: 
[36mQuasi-invariant at l6: arg3 <= arg6[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.014364s
Remaining time after improvement: 0.995153
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg3 <= arg6[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
New Graphs: 
Transitions:
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000489s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001901s
Trying to remove transition: <l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006077s
Time used: 0.005943
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.052578s
Time used: 0.051832
Improving Solution with cost 8 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.036923s
Time used: 0.036741

LOG: SAT solveNonLinear - Elapsed time: 0.089502s
Cost: 8; Total time: 0.088573
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
[31mFailed at location 6: arg4 <= arg5[0m
Before Improving: 
[36mQuasi-invariant at l6: arg4 <= arg5[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004344s
Remaining time after improvement: 0.997543
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg4 <= arg5[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
New Graphs: 
Calling Safety with literal arg3 <= arg6 and entry <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg6 - Process 13
* Exit transition: <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg6

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000713s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000809s
Calling Safety with literal arg3 <= arg6 and entry <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg6 - Process 14
* Exit transition: <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg6

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000708s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000801s
Calling Safety with literal arg3 <= arg6 and entry <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg6 - Process 15
* Exit transition: <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg6

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000639s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000726s
Calling Safety with literal arg3 <= arg6 and entry <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg3 <= arg6 - Process 16
* Exit transition: <l0, l6, 1 + undef93 <= undef94 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg3 <= arg6

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000628s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000714s
INVARIANTS: 
6: 
Quasi-INVARIANTS to narrow Graph: 
6: arg3 <= arg6 , 
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 17
* Exit transition: <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000534s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000621s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 18
* Exit transition: <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000529s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000620s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 19
* Exit transition: <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000513s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000603s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 20
* Exit transition: <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000536s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000626s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 21
* Exit transition: <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000512s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000598s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 22
* Exit transition: <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000527s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000617s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 23
* Exit transition: <l0, l6, 1 <= undef65 + 2*undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000534s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000619s
Calling Safety with literal arg4 <= arg5 and entry <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

LOG: CALL check - Post:arg4 <= arg5 - Process 24
* Exit transition: <l0, l6, 1 + undef94 <= 2*undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ undef94 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
* Postcondition  : arg4 <= arg5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000522s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000611s
INVARIANTS: 
6: 
Quasi-INVARIANTS to narrow Graph: 
6: arg4 <= arg5 , 
Narrowing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
<l6, l6, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6, arg2
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001279s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006730s
Trying to remove transition: <l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013456s
Time used: 0.012775
Trying to remove transition: <l6, l6, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011055s
Time used: 0.009771
Trying to remove transition: <l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010409s
Time used: 0.009172
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.145295s
Time used: 0.143395
Improving Solution with cost 4 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.143036s
Time used: 0.142446

LOG: SAT solveNonLinear - Elapsed time: 0.288331s
Cost: 4; Total time: 0.285841
[31mFailed at location 6: arg5 <= arg4[0m
[31mFailed at location 6: arg5 <= arg4[0m
[31mFailed at location 6: arg5 <= arg4[0m
[31mFailed at location 6: arg5 <= arg4[0m
Before Improving: 
[36mQuasi-invariant at l6: arg5 <= arg4[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.014789s
Remaining time after improvement: 0.994704
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg5 <= arg4[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
New Graphs: 
Transitions:
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000539s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002101s
Trying to remove transition: <l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005983s
Time used: 0.005851
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.075867s
Time used: 0.075147
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018975s
Time used: 4.00011
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.008555s
Time used: 1.00002
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.025593s
Time used: 0.014795

Proving non-termination of subgraph 1
Transitions:
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>
<l6, l6, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>
Variables:
arg1, arg3, arg4, arg5, arg6, arg2

Checking conditional non-termination of SCC {l6}...
EXIT TRANSITIONS:
<l6, end, 1 <= arg1 /\ 1 + arg4 <= arg6 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg3 = arg4 /\ arg4 = arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg4 <= arg6 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg4 <= arg6 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg3 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg5 /\ 1 + arg4 <= arg6 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg3 = arg4 /\ arg4 = arg6, {all remain the same}>
<l6, end, 1 + arg4 <= arg3 /\ 1 + arg4 <= arg6 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg3 = arg4 /\ arg3 = arg5 /\ arg4 = arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg5 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg4 <= arg6 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg3 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg5 <= arg3 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg3, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg3 = arg4 /\ arg4 = arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg3, {all remain the same}>
<l6, end, 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg3, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg4 <= arg6 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg4 <= arg6 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg4 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg6 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg3 = arg4 /\ arg4 = arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg4 <= arg6 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg1 <= 0 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg4 <= arg3 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg4 <= arg6 /\ arg1 <= 0 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg4 <= arg3 /\ arg4 <= arg5 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ arg1 <= 0 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg5 <= arg3 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg4 <= arg3, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg3 = arg4 /\ arg4 = arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg4 <= arg3, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg6 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.023241s
Time used: 5.00333
Improving Solution with cost 67 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.046995s
Time used: 0.046817

LOG: SAT solveNonLinear - Elapsed time: 5.070236s
Cost: 67; Total time: 5.05015
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
[31mFailed at location 6: 1 + arg3 <= arg4[0m
Before Improving: 
[36mQuasi-invariant at l6: 1 + arg3 <= arg4[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.015262s
Remaining time after improvement: 0.987501
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: 1 + arg3 <= arg4[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l6: 40
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg6 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg4 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg6 <= arg1 + arg5 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg4 <= arg3 /\ 1 + arg6 <= arg3 /\ arg3 = arg5 /\ arg4 = arg6, {arg4 -> arg2 + arg4, arg5 -> arg3, arg6 -> arg2 + arg4, rest remain the same}>

Checking conditional non-termination of SCC {l6}...
EXIT TRANSITIONS:
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg6 <= arg1 + arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg6 <= arg1 + arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg6 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg6 <= arg3 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 + arg6 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.807436s
Time used: 0.803533
Improving Solution with cost 20 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.809467s
Time used: 0.806902

LOG: SAT solveNonLinear - Elapsed time: 1.616903s
Cost: 20; Total time: 1.61044
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg4 <= arg6[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l6: 23
Strengthening exit transition (result): 
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg6 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

Checking conditional non-termination of SCC {l6}...
EXIT TRANSITIONS:
<l6, end, 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg6 <= arg1 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg4 <= arg6 /\ arg3 <= arg6 /\ arg4 <= arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.091250s
Time used: 0.090602
Improving Solution with cost 9 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.144546s
Time used: 0.144107

LOG: SAT solveNonLinear - Elapsed time: 0.235797s
Cost: 9; Total time: 0.234709
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg1 + arg5 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l6: 5
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

Checking conditional non-termination of SCC {l6}...
EXIT TRANSITIONS:
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg4 <= arg6 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg3 = arg5, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.031918s
Time used: 0.031455
Improving Solution with cost 4 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.055769s
Time used: 0.055599

LOG: SAT solveNonLinear - Elapsed time: 0.087687s
Cost: 4; Total time: 0.087054
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg3 + arg6 <= arg4 + arg5[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l6: 4
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

Checking conditional non-termination of SCC {l6}...
EXIT TRANSITIONS:
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg5 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg3 <= arg5 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.017113s
Time used: 0.016741
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.015041s
Time used: 0.01499

LOG: SAT solveNonLinear - Elapsed time: 0.032154s
Cost: 1; Total time: 0.031731
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg5 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l6: 2
Strengthening exit transition (result): 
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6 /\ arg3 = arg5, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 <= 0 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

Checking conditional non-termination of SCC {l6}...
EXIT TRANSITIONS:
<l6, end, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg4 <= arg6 /\ arg3 = arg5, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011056s
Time used: 0.010962

LOG: SAT solveNonLinear - Elapsed time: 0.011056s
Cost: 0; Total time: 0.010962
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: arg3 + arg4 <= arg1 + arg6[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l6: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 + arg1 + arg5 <= arg6 /\ 1 + arg3 <= arg4 /\ 1 + arg5 <= arg4 /\ arg1 <= 0 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 <= 0 /\ arg3 + arg6 <= arg4 + arg5 /\ arg3 <= arg6 /\ arg3 = arg5 /\ arg4 = arg6, {arg3 -> arg1 + arg3, arg5 -> arg1 + arg3, arg6 -> arg4, rest remain the same}>

Calling reachability with...
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
Transition: <l6, end, true, {all remain the same}>
Conditions: 1 + arg3 <= arg4, arg4 <= arg6, arg1 + arg5 <= arg3, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, 
OPEN EXITS: 
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>
<l6, end, 1 + arg3 <= arg4 /\ arg1 + arg5 <= arg3 /\ arg3 + arg4 <= arg1 + arg6 /\ arg3 + arg6 <= arg4 + arg5 /\ arg5 <= arg3 /\ arg4 <= arg6, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
Transition: <l0, l6, 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
Conditions: 1 + arg3 <= arg4, arg1 + arg5 <= arg3, arg3 + arg4 <= arg1 + arg6, arg3 + arg6 <= arg4 + arg5, arg5 <= arg3, arg4 <= arg6, 
OPEN EXITS: 
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef73 = 1 + 2*undef74 /\ undef11 = 2*undef12 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef7 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef11 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef9 = 1 + 2*undef10 /\ undef11 = 2*undef12 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef30 /\ 0 <= undef31 /\ 0 <= undef32 /\ 0 <= undef34 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef32 = 1 + 2*undef33 /\ undef34 = 1 + 2*undef35 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef73 = 1 + 2*undef74 /\ undef60 = 2*undef61 /\ undef71 = 2*undef72, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef58 /\ 0 <= undef59 /\ 0 <= undef60 /\ 0 <= undef62 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef62 = 1 + 2*undef63 /\ undef60 = 2*undef61 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>
<l0, l6, 1 <= undef65 + undef70 /\ 1 <= undef123 /\ 0 <= undef65 /\ 0 <= undef70 /\ 0 <= undef71 /\ 0 <= undef73 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 4 <= undef124 /\ undef73 = 1 + 2*undef74 /\ undef71 = 2*undef72 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86, {arg1 -> -undef70, arg2 -> undef65, arg3 -> -undef70, arg4 -> undef65, arg5 -> -undef70, arg6 -> undef65, rest remain the same}>
<l0, l6, 1 + undef94 <= undef93 /\ 1 <= undef123 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef85 /\ 0 <= undef93 /\ 0 <= undef94 /\ 0 <= undef95 /\ 0 <= undef97 /\ 4 <= undef124 /\ undef83 = 2*undef84 /\ undef85 = 2*undef86 /\ undef95 = 2*undef96 /\ undef97 = 2*undef98, {arg1 -> -undef93, arg2 -> -undef94, arg3 -> -undef93, arg4 -> -undef94, arg5 -> -undef93, arg6 -> -undef94, rest remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

