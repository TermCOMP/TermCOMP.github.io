YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l6, true>
<l1, l3, (0 <= (~(2) + (~(1) * x_5^0))), par{x_5^0 -> (1 + x_5^0), y_6^0 -> (1 + y_6^0)}>
<l3, l2, (undef8 = __disjvr_0^0) /\ (__disjvr_0^0 = undef8), par{__disjvr_0^0 -> undef8}>
<l2, l1, true>
<l1, l4, ((~(1) + (~(1) * x_5^0)) <= 0) /\ (undef19 = undef19), par{Result_4^0 -> undef19}>
<l5, l1, (0 <= (~(2) + k_7^0)) /\ (0 <= (~(2) + w_8^0))>
<l5, l4, ((~(1) + k_7^0) <= 0) /\ (undef31 = undef31), par{Result_4^0 -> undef31}>
<l6, l5, true>

Fresh variables:
undef8, undef19, undef31, 

Undef variables:
undef8, undef19, undef31, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (0 <= (~(2) + k_7^0)) /\ (0 <= (~(2) + w_8^0))>
<l0, l4, ((~(1) + k_7^0) <= 0) /\ (undef31 = undef31)>
<l1, l1, (0 <= (~(2) + (~(1) * x_5^0))) /\ (undef8 = __disjvr_0^0) /\ (__disjvr_0^0 = undef8), par{__disjvr_0^0 -> undef8, x_5^0 -> (1 + x_5^0), y_6^0 -> (1 + y_6^0)}>
<l1, l4, ((~(1) + (~(1) * x_5^0)) <= 0) /\ (undef19 = undef19)>

Fresh variables:
undef8, undef19, undef31, 

Undef variables:
undef8, undef19, undef31, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 2 + x_5^0 <= 0 /\ __disjvr_0^0 = undef8, {__disjvr_0^0 -> undef8, x_5^0 -> 1 + x_5^0, y_6^0 -> 1 + y_6^0, rest remain the same}>
Variables:
__disjvr_0^0, x_5^0, y_6^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, 2 <= k_7^0 /\ 2 <= w_8^0, {all remain the same}>

Graph 2
<l0, l4, k_7^0 <= 1, {all remain the same}>
<l1, l4, 0 <= 1 + x_5^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001092

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000374s
[33mRanking function: [36m-2 - x_5^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m

