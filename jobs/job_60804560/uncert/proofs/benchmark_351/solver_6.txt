YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l4, l3, (arg1 > 0) /\ (undef1 > 0) /\ (undef2 > ~(1)), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5}>
<l5, l3, (undef6 <= arg1) /\ ((undef7 + 2) <= arg1) /\ (arg1 > 1) /\ (undef6 > 1) /\ (undef7 > ~(1)) /\ ((arg2 + 2) <= arg1), par{arg1 -> undef6, arg2 -> undef7, arg3 -> undef8, arg4 -> undef9, arg5 -> undef10}>
<l3, l3, (arg1 >= (undef11 - 2)) /\ (arg1 >= (undef12 + 3)) /\ (arg2 >= (undef12 + 1)) /\ (arg1 > 2) /\ (arg2 > 0) /\ (undef11 > 2) /\ (undef12 > ~(1)), par{arg1 -> undef11, arg2 -> undef12, arg3 -> undef13, arg4 -> undef14, arg5 -> undef15}>
<l4, l2, (arg2 > 0) /\ (undef18 > 0) /\ ((undef16 - 1) <= arg1) /\ ((undef17 - 1) <= arg1) /\ (arg1 > 0) /\ (undef16 > 1) /\ (undef17 > 1), par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> arg2, arg5 -> 1}>
<l2, l2, (arg3 > 0) /\ (arg5 > ~(1)) /\ (arg5 < arg4) /\ (undef21 <= arg1) /\ ((undef22 + 2) <= arg2) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef21 > 0) /\ (undef22 > 0), par{arg1 -> undef21, arg2 -> undef22, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg5 > ~(1)) /\ (undef31 > 0) /\ (arg3 > 0) /\ (arg5 < arg4) /\ (undef26 <= arg1) /\ ((undef27 + 2) <= arg2) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef26 > 0) /\ (undef27 > 0), par{arg1 -> undef26, arg2 -> undef27, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg5 > ~(1)) /\ (undef37 > 0) /\ (arg3 > 0) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (arg2 > 1) /\ (undef32 > 0) /\ (undef33 > 0), par{arg1 -> undef32, arg2 -> undef33, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg5 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (arg2 > 1) /\ (undef38 > 0) /\ (undef39 > 0), par{arg1 -> undef38, arg2 -> undef39, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg5 > ~(1)) /\ (arg5 < arg4) /\ ((undef43 - 2) <= arg1) /\ ((undef43 - 2) <= arg2) /\ ((undef44 - 2) <= arg1) /\ ((undef44 - 2) <= arg2) /\ (arg1 > 1) /\ (arg2 > 1) /\ (undef43 > 3) /\ (undef44 > 3), par{arg1 -> undef43, arg2 -> undef44, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg5 > ~(1)) /\ (undef53 > 0) /\ (arg3 > 0) /\ (arg5 < arg4) /\ ((undef48 - 2) <= arg1) /\ ((undef48 - 2) <= arg2) /\ ((undef49 - 2) <= arg1) /\ ((undef49 - 2) <= arg2) /\ (arg1 > 1) /\ (arg2 > 1) /\ (undef48 > 3) /\ (undef49 > 3), par{arg1 -> undef48, arg2 -> undef49, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l1, l4, true, par{arg1 -> undef54, arg2 -> undef55, arg3 -> undef56, arg4 -> undef57, arg5 -> undef58}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef21, undef22, undef26, undef27, undef31, undef32, undef33, undef37, undef38, undef39, undef43, undef44, undef48, undef49, undef53, undef54, undef55, undef56, undef57, undef58, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef21, undef22, undef26, undef27, undef31, undef32, undef33, undef37, undef38, undef39, undef43, undef44, undef48, undef49, undef53, undef54, undef55, undef56, undef57, undef58, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (undef54 > 0) /\ (undef1 > 0) /\ (undef2 > ~(1)), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5}>
<l0, l2, (undef55 > 0) /\ (undef18 > 0) /\ ((undef16 - 1) <= undef54) /\ ((undef17 - 1) <= undef54) /\ (undef54 > 0) /\ (undef16 > 1) /\ (undef17 > 1), par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> undef55, arg5 -> 1}>
<l2, l2, (arg3 > 0) /\ (arg5 > ~(1)) /\ (arg5 < arg4) /\ (undef21 <= arg1) /\ ((undef22 + 2) <= arg2) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef21 > 0) /\ (undef22 > 0), par{arg1 -> undef21, arg2 -> undef22, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg5 > ~(1)) /\ (undef31 > 0) /\ (arg3 > 0) /\ (arg5 < arg4) /\ (undef26 <= arg1) /\ ((undef27 + 2) <= arg2) /\ (arg1 > 0) /\ (arg2 > 2) /\ (undef26 > 0) /\ (undef27 > 0), par{arg1 -> undef26, arg2 -> undef27, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg5 > ~(1)) /\ (undef37 > 0) /\ (arg3 > 0) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (arg2 > 1) /\ (undef32 > 0) /\ (undef33 > 0), par{arg1 -> undef32, arg2 -> undef33, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg5 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (arg2 > 1) /\ (undef38 > 0) /\ (undef39 > 0), par{arg1 -> undef38, arg2 -> undef39, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg5 > ~(1)) /\ (arg5 < arg4) /\ ((undef43 - 2) <= arg1) /\ ((undef43 - 2) <= arg2) /\ ((undef44 - 2) <= arg1) /\ ((undef44 - 2) <= arg2) /\ (arg1 > 1) /\ (arg2 > 1) /\ (undef43 > 3) /\ (undef44 > 3), par{arg1 -> undef43, arg2 -> undef44, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l2, l2, (arg5 > ~(1)) /\ (undef53 > 0) /\ (arg3 > 0) /\ (arg5 < arg4) /\ ((undef48 - 2) <= arg1) /\ ((undef48 - 2) <= arg2) /\ ((undef49 - 2) <= arg1) /\ ((undef49 - 2) <= arg2) /\ (arg1 > 1) /\ (arg2 > 1) /\ (undef48 > 3) /\ (undef49 > 3), par{arg1 -> undef48, arg2 -> undef49, arg3 -> (arg3 - 1), arg5 -> (arg5 + 1)}>
<l3, l3, (arg1 >= (undef11 - 2)) /\ (arg1 >= (undef12 + 3)) /\ (arg2 >= (undef12 + 1)) /\ (arg1 > 2) /\ (arg2 > 0) /\ (undef11 > 2) /\ (undef12 > ~(1)), par{arg1 -> undef11, arg2 -> undef12, arg3 -> undef13, arg4 -> undef14, arg5 -> undef15}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef21, undef22, undef26, undef27, undef31, undef32, undef33, undef37, undef38, undef39, undef43, undef44, undef48, undef49, undef53, undef54, undef55, undef56, undef57, undef58, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef21, undef22, undef26, undef27, undef31, undef32, undef33, undef37, undef38, undef39, undef43, undef44, undef48, undef49, undef53, undef54, undef55, undef56, undef57, undef58, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, undef21 <= arg1 /\ 0 <= arg5 /\ 1 <= arg1 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 <= undef21 /\ 1 <= undef22 /\ 2 + undef22 <= arg2 /\ 3 <= arg2, {arg1 -> undef21, arg2 -> undef22, arg3 -> -1 + arg3, arg5 -> 1 + arg5, rest remain the same}>
<l2, l2, undef26 <= arg1 /\ 0 <= arg5 /\ 1 <= arg1 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 <= undef26 /\ 1 <= undef27 /\ 1 <= undef31 /\ 2 + undef27 <= arg2 /\ 3 <= arg2, {arg1 -> undef26, arg2 -> undef27, arg3 -> -1 + arg3, arg5 -> 1 + arg5, rest remain the same}>
<l2, l2, 0 <= arg5 /\ 1 <= arg1 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 <= undef32 /\ 1 <= undef33 /\ 1 <= undef37 /\ 2 <= arg2, {arg1 -> undef32, arg2 -> undef33, arg3 -> -1 + arg3, arg5 -> 1 + arg5, rest remain the same}>
<l2, l2, 0 <= arg5 /\ 1 <= arg1 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 <= undef38 /\ 1 <= undef39 /\ 2 <= arg2, {arg1 -> undef38, arg2 -> undef39, arg3 -> -1 + arg3, arg5 -> 1 + arg5, rest remain the same}>
<l2, l2, 0 <= arg5 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 2 <= arg1 /\ 2 <= arg2 /\ undef43 <= 2 + arg1 /\ undef44 <= 2 + arg1 /\ undef43 <= 2 + arg2 /\ undef44 <= 2 + arg2 /\ 4 <= undef43 /\ 4 <= undef44, {arg1 -> undef43, arg2 -> undef44, arg3 -> -1 + arg3, arg5 -> 1 + arg5, rest remain the same}>
<l2, l2, 0 <= arg5 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 <= undef53 /\ 2 <= arg1 /\ 2 <= arg2 /\ undef48 <= 2 + arg1 /\ undef49 <= 2 + arg1 /\ undef48 <= 2 + arg2 /\ undef49 <= 2 + arg2 /\ 4 <= undef48 /\ 4 <= undef49, {arg1 -> undef48, arg2 -> undef49, arg3 -> -1 + arg3, arg5 -> 1 + arg5, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Graph 2:
Transitions:
<l3, l3, 0 <= undef12 /\ 1 <= arg2 /\ 1 + undef12 <= arg2 /\ 3 <= arg1 /\ 3 + undef12 <= arg1 /\ 3 <= undef11 /\ undef11 <= 2 + arg1, {arg1 -> undef11, arg2 -> undef12, arg3 -> undef13, arg4 -> undef14, arg5 -> undef15, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef18 /\ 1 <= undef54 /\ 1 <= undef55 /\ undef16 <= 1 + undef54 /\ undef17 <= 1 + undef54 /\ 2 <= undef16 /\ 2 <= undef17, {arg1 -> undef16, arg2 -> undef17, arg3 -> undef18, arg4 -> undef55, arg5 -> 1, rest remain the same}>

Graph 2
<l0, l3, 0 <= undef2 /\ 1 <= undef1 /\ 1 <= undef54, {arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 3 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.029269

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006841s
[33mRanking function: [36m-1 + arg3[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001651

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000754s
[33mRanking function: [36m-1 + arg2[0m
New Graphs: 
[32mProgram Terminates[0m

